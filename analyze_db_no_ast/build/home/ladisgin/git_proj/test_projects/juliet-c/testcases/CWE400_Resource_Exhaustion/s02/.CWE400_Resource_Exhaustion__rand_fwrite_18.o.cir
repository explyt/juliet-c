!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc224)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc225)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc226)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc227)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc228)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc232)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc233)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc24)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.goto "source" loc(#loc235)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc28)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc29)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc29)
    %10 = cir.ternary(%9, true {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc29)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc29)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc29)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc29)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc29)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc29)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc29)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc29)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc29)
      cir.yield %33 : !u32i loc(#loc29)
    }, false {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc29)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc29)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc29)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc29)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc29)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc29)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc29)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc29)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc29)
      %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc29)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc29)
      %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc29)
      cir.yield %37 : !u32i loc(#loc29)
    }) : (!cir.bool) -> !u32i loc(#loc29)
    %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc29)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.goto "sink" loc(#loc237)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc33)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc19)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc21)
    cir.store %14, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc232)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
    %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc34)
    cir.store %21, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc238)
    cir.scope {
      %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc41)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc240)
      %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc42)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc45)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
      } loc(#loc241)
    } loc(#loc239)
    cir.scope {
      %22 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc48)
      cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc243)
      cir.for : cond {
        %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc51)
        %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc244)
        %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc52)
        cir.condition(%28) loc(#loc52)
      } body {
        cir.scope {
          cir.scope {
            %24 = cir.const #cir.int<50> : !u64i loc(#loc247)
            %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc58)
            %26 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
            %29 = cir.const #cir.int<1> : !u64i loc(#loc248)
            %30 = cir.const #cir.int<50> : !u64i loc(#loc249)
            %31 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
            %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc58)
            %33 = cir.cmp(ne, %24, %32) : !u64i, !s32i loc(#loc250)
            %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc65)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc68)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
            } loc(#loc251)
          } loc(#loc246)
        } loc(#loc245)
        cir.yield loc(#loc47)
      } step {
        %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
        %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc70)
        cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc252)
        cir.yield loc(#loc242)
      } loc(#loc242)
    } loc(#loc242)
    cir.scope {
      %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
      %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc73)
      cir.if %23 {
        %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
        %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc76)
      } loc(#loc254)
    } loc(#loc253)
    cir.return loc(#loc15)
  } loc(#loc229)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc255)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc261)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc262)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc94)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.goto "source" loc(#loc264)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc98)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc99)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc99)
    %10 = cir.ternary(%9, true {
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc99)
      %19 = cir.const #cir.int<30> : !s32i loc(#loc99)
      %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc99)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc99)
      %23 = cir.const #cir.int<15> : !s32i loc(#loc99)
      %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc99)
      %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc99)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc99)
      %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc99)
      cir.yield %28 : !u32i loc(#loc99)
    }, false {
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc99)
      %19 = cir.const #cir.int<30> : !s32i loc(#loc99)
      %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc99)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc99)
      %23 = cir.const #cir.int<15> : !s32i loc(#loc99)
      %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc99)
      %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc99)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc99)
      %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc99)
      %29 = cir.unary(minus, %28) : !u32i, !u32i loc(#loc99)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc99)
      %32 = cir.binop(sub, %29, %31) : !u32i loc(#loc99)
      cir.yield %32 : !u32i loc(#loc99)
    }) : (!cir.bool) -> !u32i loc(#loc99)
    %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc99)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.goto "sink" loc(#loc266)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc103)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc89)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc91)
    cir.store %14, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %15 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc107)
      %19 = cir.cmp(gt, %17, %18) : !s32i, !s32i loc(#loc268)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc108)
      %21 = cir.ternary(%20, true {
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %23 = cir.const #cir.int<20> : !s32i loc(#loc111)
        %24 = cir.cmp(le, %22, %23) : !s32i, !s32i loc(#loc269)
        %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc112)
        %26 = cir.ternary(%25, true {
          %27 = cir.const #true loc(#loc109)
          cir.yield %27 : !cir.bool loc(#loc109)
        }, false {
          %27 = cir.const #false loc(#loc109)
          cir.yield %27 : !cir.bool loc(#loc109)
        }) : (!cir.bool) -> !cir.bool loc(#loc109)
        cir.yield %26 : !cir.bool loc(#loc109)
      }, false {
        %22 = cir.const #false loc(#loc109)
        cir.yield %22 : !cir.bool loc(#loc109)
      }) : (!cir.bool) -> !cir.bool loc(#loc109)
      cir.if %21 {
        %22 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc114)
        %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
        %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
        %26 = cir.call @fopen(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc114)
        cir.store %26, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc271)
        cir.scope {
          %27 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc121)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc122)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc273)
          %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc123)
          cir.if %31 {
            %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
            %33 = cir.const #cir.int<1> : !s32i loc(#loc126)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
          } loc(#loc274)
        } loc(#loc272)
        cir.scope {
          %27 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc129)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc276)
          cir.for : cond {
            %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
            %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc132)
            %32 = cir.cmp(lt, %29, %31) : !u64i, !s32i loc(#loc277)
            %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc133)
            cir.condition(%33) loc(#loc133)
          } body {
            cir.scope {
              cir.scope {
                %29 = cir.const #cir.int<50> : !u64i loc(#loc280)
                %30 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc139)
                %31 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc140)
                %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc140)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
                %34 = cir.const #cir.int<1> : !u64i loc(#loc281)
                %35 = cir.const #cir.int<50> : !u64i loc(#loc282)
                %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
                %37 = cir.call @fwrite(%33, %34, %35, %36) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc139)
                %38 = cir.cmp(ne, %29, %37) : !u64i, !s32i loc(#loc283)
                %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc147)
                cir.if %39 {
                  %40 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc149)
                  cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
                } loc(#loc284)
              } loc(#loc279)
            } loc(#loc278)
            cir.yield loc(#loc128)
          } step {
            %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc150)
            %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc151)
            cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc285)
            cir.yield loc(#loc275)
          } loc(#loc275)
        } loc(#loc275)
        cir.scope {
          %27 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc154)
          %28 = cir.cast(ptr_to_bool, %27 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc154)
          cir.if %28 {
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
            %30 = cir.call @fclose(%29) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc157)
          } loc(#loc287)
        } loc(#loc286)
      } loc(#loc270)
    } loc(#loc267)
    cir.return loc(#loc85)
  } loc(#loc258)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc290)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc291)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc292)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc169)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.goto "source" loc(#loc294)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc173)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc174)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.goto "sink" loc(#loc296)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc178)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc163)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc290)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc165)
    cir.store %9, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc291)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc167)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc167)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc292)
    %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc179)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc181)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc181)
    %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc179)
    cir.store %16, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc297)
    cir.scope {
      %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc186)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc187)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc299)
      %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc188)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc190)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc191)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc190)
      } loc(#loc300)
    } loc(#loc298)
    cir.scope {
      %17 = cir.const #cir.int<0> : !s32i loc(#loc194)
      %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc194)
      cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc302)
      cir.for : cond {
        %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc196)
        %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc197)
        %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc303)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc198)
        cir.condition(%23) loc(#loc198)
      } body {
        cir.scope {
          cir.scope {
            %19 = cir.const #cir.int<50> : !u64i loc(#loc306)
            %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc204)
            %21 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc205)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc205)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
            %24 = cir.const #cir.int<1> : !u64i loc(#loc307)
            %25 = cir.const #cir.int<50> : !u64i loc(#loc308)
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc210)
            %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc204)
            %28 = cir.cmp(ne, %19, %27) : !u64i, !s32i loc(#loc309)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc212)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc214)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc215)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc214)
            } loc(#loc310)
          } loc(#loc305)
        } loc(#loc304)
        cir.yield loc(#loc193)
      } step {
        %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc216)
        %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc217)
        cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc311)
        cir.yield loc(#loc301)
      } loc(#loc301)
    } loc(#loc301)
    cir.scope {
      %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc220)
      %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc220)
      cir.if %18 {
        %19 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc222)
        %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc223)
      } loc(#loc313)
    } loc(#loc312)
    cir.return loc(#loc159)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":38:32)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:33)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:44)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":58:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":36:9)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":36:20)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":37:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":37:23)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":38:9)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":28:14)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":28:13)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":28:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":29:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":29:10)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":30:1)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":32:13)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":32:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":33:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":33:10)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":34:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:17)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:23)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:37)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":43:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:22)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:19)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":41:9)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":42:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":42:18)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:9)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":52:9)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:18)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:14)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:21)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:33)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:23)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":47:9)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":51:13)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:17)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:32)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:37)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:54)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:65)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:68)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:83)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:86)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:91)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:34)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":49:13)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":50:17)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":50:22)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:41)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:40)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":53:9)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":56:9)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":53:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":54:9)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":55:20)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":55:13)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":137:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":141:1)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":139:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":139:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":140:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":140:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":79:32)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":65:1)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":98:1)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":67:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":67:9)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":77:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":77:20)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":78:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":78:23)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":79:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":69:14)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":69:13)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":69:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":70:5)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":70:10)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":71:1)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":73:13)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":73:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":74:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":74:10)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":75:1)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":96:9)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:21)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:19)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:23)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:26)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:35)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:32)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":82:9)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:21)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:27)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:37)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:13)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:41)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:13)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":87:13)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:17)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:26)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:23)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":85:13)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":86:17)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":86:22)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:13)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":91:13)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:22)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:18)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:25)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:37)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:27)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":89:13)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:17)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:104)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:21)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:36)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:41)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:48)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:58)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:69)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:72)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:87)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:90)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:95)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:38)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:98)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:103)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:45)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:44)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":92:13)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":95:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":92:17)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":93:13)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":94:24)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":94:17)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":101:1)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":135:1)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":103:5)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":103:9)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":113:9)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":113:20)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":114:9)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":114:23)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":115:9)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":115:32)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":105:14)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":105:13)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":105:5)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":106:5)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":106:10)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":107:1)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":109:13)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":109:5)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":110:5)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":110:10)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":111:1)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:17)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:23)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:33)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:9)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:37)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:9)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":120:9)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:13)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:22)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:19)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":118:9)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":119:13)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":119:18)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:9)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":129:9)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:18)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:14)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:21)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:33)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:23)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":124:9)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:13)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":128:13)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:17)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:32)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:37)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:44)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:54)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:65)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:68)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:83)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:86)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:91)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:34)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":126:13)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":127:17)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":127:22)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:41)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:40)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":130:9)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":133:9)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":130:13)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":131:9)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":132:20)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":132:13)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc4, #loc5])
#loc226 = loc(fused[#loc7, #loc8])
#loc227 = loc(fused[#loc9, #loc10])
#loc228 = loc(fused[#loc12, #loc13])
#loc229 = loc(fused[#loc14, #loc15])
#loc230 = loc(fused[#loc16, #loc17])
#loc231 = loc(fused[#loc18, #loc19])
#loc232 = loc(fused[#loc20, #loc21])
#loc233 = loc(fused[#loc22, #loc3])
#loc234 = loc(fused[#loc25, #loc23])
#loc235 = loc(fused[#loc26, #loc27])
#loc236 = loc(fused[#loc30, #loc29])
#loc237 = loc(fused[#loc31, #loc32])
#loc238 = loc(fused[#loc36, #loc37])
#loc239 = loc(fused[#loc38, #loc39])
#loc240 = loc(fused[#loc40, #loc41])
#loc241 = loc(fused[#loc43, #loc39])
#loc242 = loc(fused[#loc46, #loc47])
#loc243 = loc(fused[#loc49, #loc48])
#loc244 = loc(fused[#loc50, #loc51])
#loc245 = loc(fused[#loc53, #loc47])
#loc246 = loc(fused[#loc54, #loc55])
#loc247 = loc(fused[#loc56, #loc57])
#loc248 = loc(fused[#loc59, #loc60])
#loc249 = loc(fused[#loc61, #loc62])
#loc250 = loc(fused[#loc56, #loc64])
#loc251 = loc(fused[#loc66, #loc55])
#loc252 = loc(fused[#loc70, #loc69])
#loc253 = loc(fused[#loc71, #loc72])
#loc254 = loc(fused[#loc74, #loc72])
#loc255 = loc(fused[#loc77, #loc78])
#loc256 = loc(fused[#loc79, #loc80])
#loc257 = loc(fused[#loc81, #loc82])
#loc258 = loc(fused[#loc84, #loc85])
#loc259 = loc(fused[#loc86, #loc87])
#loc260 = loc(fused[#loc88, #loc89])
#loc261 = loc(fused[#loc90, #loc91])
#loc262 = loc(fused[#loc92, #loc83])
#loc263 = loc(fused[#loc95, #loc93])
#loc264 = loc(fused[#loc96, #loc97])
#loc265 = loc(fused[#loc100, #loc99])
#loc266 = loc(fused[#loc101, #loc102])
#loc267 = loc(fused[#loc104, #loc105])
#loc268 = loc(fused[#loc106, #loc107])
#loc269 = loc(fused[#loc110, #loc111])
#loc270 = loc(fused[#loc113, #loc105])
#loc271 = loc(fused[#loc117, #loc118])
#loc272 = loc(fused[#loc119, #loc120])
#loc273 = loc(fused[#loc121, #loc122])
#loc274 = loc(fused[#loc124, #loc120])
#loc275 = loc(fused[#loc127, #loc128])
#loc276 = loc(fused[#loc130, #loc129])
#loc277 = loc(fused[#loc131, #loc132])
#loc278 = loc(fused[#loc134, #loc128])
#loc279 = loc(fused[#loc135, #loc136])
#loc280 = loc(fused[#loc137, #loc138])
#loc281 = loc(fused[#loc141, #loc142])
#loc282 = loc(fused[#loc143, #loc144])
#loc283 = loc(fused[#loc137, #loc146])
#loc284 = loc(fused[#loc148, #loc136])
#loc285 = loc(fused[#loc151, #loc150])
#loc286 = loc(fused[#loc152, #loc153])
#loc287 = loc(fused[#loc155, #loc153])
#loc288 = loc(fused[#loc158, #loc159])
#loc289 = loc(fused[#loc160, #loc161])
#loc290 = loc(fused[#loc162, #loc163])
#loc291 = loc(fused[#loc164, #loc165])
#loc292 = loc(fused[#loc166, #loc167])
#loc293 = loc(fused[#loc170, #loc168])
#loc294 = loc(fused[#loc171, #loc172])
#loc295 = loc(fused[#loc175, #loc174])
#loc296 = loc(fused[#loc176, #loc177])
#loc297 = loc(fused[#loc182, #loc183])
#loc298 = loc(fused[#loc184, #loc185])
#loc299 = loc(fused[#loc186, #loc187])
#loc300 = loc(fused[#loc189, #loc185])
#loc301 = loc(fused[#loc192, #loc193])
#loc302 = loc(fused[#loc195, #loc194])
#loc303 = loc(fused[#loc196, #loc197])
#loc304 = loc(fused[#loc199, #loc193])
#loc305 = loc(fused[#loc200, #loc201])
#loc306 = loc(fused[#loc202, #loc203])
#loc307 = loc(fused[#loc206, #loc207])
#loc308 = loc(fused[#loc208, #loc209])
#loc309 = loc(fused[#loc202, #loc211])
#loc310 = loc(fused[#loc213, #loc201])
#loc311 = loc(fused[#loc217, #loc216])
#loc312 = loc(fused[#loc218, #loc219])
#loc313 = loc(fused[#loc221, #loc219])
