!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc3 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":24:52)
#loc4 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":24:102)
#loc5 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":24:107)
#loc16 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":31:52)
!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad = !cir.struct<class "CWE190_Integer_Overflow__char_max_multiply_83::CWE190_Integer_Overflow__char_max_multiply_83_bad" {!s8i} #cir.record.decl.ast>
#loc29 = loc(fused[#loc4, #loc5])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func @_ZN45CWE190_Integer_Overflow__char_max_multiply_8349CWE190_Integer_Overflow__char_max_multiply_83_badC2Ec(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":24:52), %arg1: !s8i loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataCopy", init] {alignment = 1 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>> loc(#loc6)
    cir.store %arg1, %1 : !s8i, !cir.ptr<!s8i> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>>, !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> loc(#loc3)
    %3 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc7)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> -> !cir.ptr<!s8i> loc(#loc8)
    cir.store %3, %4 : !s8i, !cir.ptr<!s8i> loc(#loc30)
    %5 = cir.const #cir.int<127> : !s32i loc(#loc10)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc10)
    %7 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> -> !cir.ptr<!s8i> loc(#loc8)
    cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc31)
    cir.return loc(#loc2)
  } loc(#loc28)
  cir.func private @_ZN45CWE190_Integer_Overflow__char_max_multiply_8349CWE190_Integer_Overflow__char_max_multiply_83_badC1Ec(!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>, !s8i) alias(@_ZN45CWE190_Integer_Overflow__char_max_multiply_8349CWE190_Integer_Overflow__char_max_multiply_83_badC2Ec) loc(#loc28)
  cir.func private @printHexCharLine(!s8i) loc(#loc32)
  cir.func @_ZN45CWE190_Integer_Overflow__char_max_multiply_8349CWE190_Integer_Overflow__char_max_multiply_83_badD2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":31:52)) extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc34)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc16)
    cir.store %arg0, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>> loc(#loc19)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>>, !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> loc(#loc16)
    cir.br ^bb1 loc(#loc35)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> -> !cir.ptr<!s8i> loc(#loc8)
    %4 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc22)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc36)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc37)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad> -> !cir.ptr<!s8i> loc(#loc8)
    %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s8i), !s32i loc(#loc25)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc25)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc25)
    cir.store %13, %0 : !s8i, !cir.ptr<!s8i> loc(#loc34)
    %14 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc26)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc27)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc15)
  } loc(#loc33)
  cir.func private @_ZN45CWE190_Integer_Overflow__char_max_multiply_8349CWE190_Integer_Overflow__char_max_multiply_83_badD1Ev(!cir.ptr<!ty_CWE190_Integer_Overflow__char_max_multiply_833A3ACWE190_Integer_Overflow__char_max_multiply_83_bad>) alias(@_ZN45CWE190_Integer_Overflow__char_max_multiply_8349CWE190_Integer_Overflow__char_max_multiply_83_badD2Ev) loc(#loc33)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":24:1)
#loc2 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":29:1)
#loc6 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":26:12)
#loc8 = loc("./CWE190_Integer_Overflow__char_max_multiply_83.h":32:10)
#loc9 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":26:5)
#loc10 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":28:12)
#loc11 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":28:5)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc14 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":31:1)
#loc15 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":39:1)
#loc17 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":36:9)
#loc18 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":36:30)
#loc19 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":32:1)
#loc20 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":33:5)
#loc21 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":38:5)
#loc22 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":33:8)
#loc23 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":33:15)
#loc24 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":34:5)
#loc25 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":36:23)
#loc26 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":37:26)
#loc27 = loc("CWE190_Integer_Overflow__char_max_multiply_83_bad.cpp":37:9)
#loc28 = loc(fused[#loc1, #loc2])
#loc30 = loc(fused[#loc9, #loc7])
#loc31 = loc(fused[#loc11, #loc10])
#loc32 = loc(fused[#loc12, #loc13])
#loc33 = loc(fused[#loc14, #loc15])
#loc34 = loc(fused[#loc17, #loc18])
#loc35 = loc(fused[#loc20, #loc21])
#loc36 = loc(fused[#loc22, #loc23])
#loc37 = loc(fused[#loc24, #loc21])
