!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":21:69)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":21:76)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":48:73)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":48:80)
#loc90 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.func @CWE194_Unexpected_Sign_Extension__negative_strncpy_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc91)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc92)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc90)
    %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc93)
    %4 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc94)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc17)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc14)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc14)
    cir.store %6, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc93)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc18)
    %8 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc19)
    cir.store %8, %4 : !s16i, !cir.ptr<!s16i> loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc92)
    cir.store %9, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc23)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc24)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc24)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc96)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc28)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc29)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %24 = cir.load %4 : !cir.ptr<!s16i>, !s16i loc(#loc34)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc34)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc99)
    cir.brcond %27 ^bb3, ^bb4 loc(#loc100)
  ^bb3:  // pred: ^bb2
    %28 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc37)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %31 = cir.load %4 : !cir.ptr<!s16i>, !s16i loc(#loc40)
    %32 = cir.cast(integral, %31 : !s16i), !u64i loc(#loc40)
    %33 = cir.call @strncpy(%29, %30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc41)
    %36 = cir.load %4 : !cir.ptr<!s16i>, !s16i loc(#loc42)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s16i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc101)
    cir.br ^bb4 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc33)
  ^bb5:  // pred: ^bb4
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc89)
  cir.func @CWE194_Unexpected_Sign_Extension__negative_strncpy_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc48, #loc49])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc104)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc105)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc103)
    %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc106)
    %4 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc107)
    cir.store %arg0, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc58)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc55)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc55)
    cir.store %6, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc106)
    %7 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc59)
    %8 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc60)
    cir.store %8, %4 : !s16i, !cir.ptr<!s16i> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
    cir.store %9, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc64)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc65)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc65)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc109)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc69)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc70)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc70)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc110)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %24 = cir.load %4 : !cir.ptr<!s16i>, !s16i loc(#loc75)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc75)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc112)
    cir.brcond %27 ^bb3, ^bb4 loc(#loc113)
  ^bb3:  // pred: ^bb2
    %28 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc78)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %31 = cir.load %4 : !cir.ptr<!s16i>, !s16i loc(#loc81)
    %32 = cir.cast(integral, %31 : !s16i), !u64i loc(#loc81)
    %33 = cir.call @strncpy(%29, %30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc82)
    %36 = cir.load %4 : !cir.ptr<!s16i>, !s16i loc(#loc83)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s16i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc114)
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // pred: ^bb4
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc62)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc47)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":21:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":41:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":28:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":28:24)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":29:9)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":29:26)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":24:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":24:32)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":26:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":26:27)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":22:1)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":26:20)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":26:19)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":27:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":40:5)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":30:16)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":30:24)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":30:29)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":30:33)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":30:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":30:34)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":31:25)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":31:16)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":31:20)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":31:9)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":32:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":38:9)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":32:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":32:20)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":33:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":36:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":36:21)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":36:27)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":36:35)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":37:26)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":37:18)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":37:13)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":39:19)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":39:9)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":48:1)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":68:1)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":55:9)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":55:24)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":56:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":56:26)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":51:5)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":51:32)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":53:5)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":53:27)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":49:1)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":53:20)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":53:19)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":54:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":67:5)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":57:16)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":57:24)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":57:29)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":57:33)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":57:9)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":57:34)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":58:25)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":58:16)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":58:20)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":58:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":59:9)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":65:9)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":59:13)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":59:20)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":60:9)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":63:13)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":63:21)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":63:27)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":63:35)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":64:26)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":64:18)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":64:13)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":66:19)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_strncpy_64b.c":66:9)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc11, #loc12])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc20, #loc21])
#loc96 = loc(fused[#loc26, #loc27])
#loc97 = loc(fused[#loc31, #loc28])
#loc98 = loc(fused[#loc32, #loc33])
#loc99 = loc(fused[#loc34, #loc35])
#loc100 = loc(fused[#loc36, #loc33])
#loc101 = loc(fused[#loc43, #loc41])
#loc102 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc50, #loc51])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc56, #loc57])
#loc108 = loc(fused[#loc61, #loc62])
#loc109 = loc(fused[#loc67, #loc68])
#loc110 = loc(fused[#loc72, #loc69])
#loc111 = loc(fused[#loc73, #loc74])
#loc112 = loc(fused[#loc75, #loc76])
#loc113 = loc(fused[#loc77, #loc74])
#loc114 = loc(fused[#loc84, #loc82])
