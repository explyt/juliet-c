!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":27:14)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":27:28)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":51:18)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":51:32)
#loc92 = loc(fused[#loc4, #loc5])
#loc96 = loc(fused[#loc19, #loc20])
#loc109 = loc(fused[#loc56, #loc57])
!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<int *, std::allocator<int *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!s32i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<int *, std::allocator<int *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E = !cir.record<struct "std::_Vector_base<int *, std::allocator<int *>>" {!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E = !cir.record<class "std::vector<int *, std::allocator<int *>>" {!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZNSt6vectorIPiSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!s32i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s32i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc93)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
    cir.return %11 : !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
  } loc(#loc91)
  cir.func private @printIntLine(!s32i) loc(#loc94)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_727badSinkESt6vectorIPiSaIS1_EE(%arg0: !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc23)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc24)
    %4 = cir.call @_ZNSt6vectorIPiSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s32i>> extra(#fn_attr2) loc(#loc25)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    cir.store %5, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc99)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc99)
      cir.store %7, %6 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc99)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc101)
        cir.scope {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc36)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc36)
          cir.store %15, %8 : !u64i, !cir.ptr<!u64i> loc(#loc103)
          cir.for : cond {
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc39)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc39)
            %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc104)
            cir.condition(%19) loc(#loc104)
          } body {
            cir.scope {
              %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc41)
              %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc42)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc42)
              %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc42)
              %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
              %21 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc44)
              %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc45)
              cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc106)
            } loc(#loc105)
            cir.yield loc(#loc35)
          } step {
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc48)
            cir.store %17, %8 : !u64i, !cir.ptr<!u64i> loc(#loc107)
            cir.yield loc(#loc102)
          } loc(#loc102)
        } loc(#loc102)
        %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc51)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc52)
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
        cir.delete.array %13 : <!s32i> loc(#loc53)
      } loc(#loc100)
    } loc(#loc98)
    cir.return loc(#loc18)
  } loc(#loc95)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_7211goodG2BSinkESt6vectorIPiSaIS1_EE(%arg0: !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E loc(fused[#loc56, #loc57])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc60)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc61)
    %4 = cir.call @_ZNSt6vectorIPiSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s32i>> extra(#fn_attr2) loc(#loc62)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    cir.store %5, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc112)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc112)
      cir.store %7, %6 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc112)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc114)
        cir.scope {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc73)
          cir.store %15, %8 : !u64i, !cir.ptr<!u64i> loc(#loc116)
          cir.for : cond {
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc75)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc76)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc76)
            %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc117)
            cir.condition(%19) loc(#loc117)
          } body {
            cir.scope {
              %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc78)
              %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc79)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc79)
              %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
              %21 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc81)
              %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc82)
              cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc119)
            } loc(#loc118)
            cir.yield loc(#loc72)
          } step {
            %16 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc85)
            cir.store %17, %8 : !u64i, !cir.ptr<!u64i> loc(#loc120)
            cir.yield loc(#loc115)
          } loc(#loc115)
        } loc(#loc115)
        %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc87)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc88)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc89)
        %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
        cir.delete.array %13 : <!s32i> loc(#loc90)
      } loc(#loc113)
    } loc(#loc111)
    cir.return loc(#loc55)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":27:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":44:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":30:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":30:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":28:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":30:29)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":30:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":31:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":43:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":32:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":32:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":33:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":42:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":34:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":34:20)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":39:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:22)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:25)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:29)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":37:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":38:34)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":38:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":38:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":38:22)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":38:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":38:35)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:35)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":36:34)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":40:26)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":40:31)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":40:32)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":40:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":41:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":51:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":67:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":53:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":53:30)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":52:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":53:29)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":53:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":54:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":66:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":55:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":55:29)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":56:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":65:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":57:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":57:20)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":62:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:22)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:18)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:29)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":60:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":61:34)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":61:27)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":61:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":61:22)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":61:23)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":61:35)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:35)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":59:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":63:26)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":63:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":63:32)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":63:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_72b.cpp":64:23)
#loc91 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc17, #loc18])
#loc97 = loc(fused[#loc21, #loc22])
#loc98 = loc(fused[#loc26, #loc27])
#loc99 = loc(fused[#loc28, #loc29])
#loc100 = loc(fused[#loc30, #loc31])
#loc101 = loc(fused[#loc32, #loc33])
#loc102 = loc(fused[#loc34, #loc35])
#loc103 = loc(fused[#loc37, #loc36])
#loc104 = loc(fused[#loc38, #loc39])
#loc105 = loc(fused[#loc40, #loc35])
#loc106 = loc(fused[#loc43, #loc46])
#loc107 = loc(fused[#loc48, #loc47])
#loc108 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc58, #loc59])
#loc111 = loc(fused[#loc63, #loc64])
#loc112 = loc(fused[#loc65, #loc66])
#loc113 = loc(fused[#loc67, #loc68])
#loc114 = loc(fused[#loc69, #loc70])
#loc115 = loc(fused[#loc71, #loc72])
#loc116 = loc(fused[#loc74, #loc73])
#loc117 = loc(fused[#loc75, #loc76])
#loc118 = loc(fused[#loc77, #loc72])
#loc119 = loc(fused[#loc80, #loc83])
#loc120 = loc(fused[#loc85, #loc84])
