!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc194)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc196)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_03_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc201)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc19)
      } loc(#loc202)
    } loc(#loc200)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc204)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc29)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc207)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc209)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc32)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc33)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc209)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc34)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc35)
          } loc(#loc208)
        } loc(#loc206)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc9)
  } loc(#loc197)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_03_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc211)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc212)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc213)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc214)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc210)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc59)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc220)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc61)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc63)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc63)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc61)
      } loc(#loc221)
    } loc(#loc219)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc67)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc223)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc71)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc226)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc80)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc80)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc80)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc81)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc229)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc230)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc232)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc87)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc88)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc232)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc90)
              } else {
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc49)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc49)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc91)
              } loc(#loc231)
            } loc(#loc228)
          } loc(#loc227)
        } loc(#loc225)
      } loc(#loc224)
    } loc(#loc222)
    cir.return loc(#loc51)
  } loc(#loc216)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc100)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc101)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc237)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc103)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc103)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc108)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc109)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc240)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc114)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc243)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc119)
              %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc119)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc119)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc119)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc120)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc246)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc247)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc249)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc126)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc127)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc249)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc129)
              } else {
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc130)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc130)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc131)
              } loc(#loc248)
            } loc(#loc245)
          } loc(#loc244)
        } loc(#loc242)
      } loc(#loc241)
    } loc(#loc239)
    cir.return loc(#loc93)
  } loc(#loc233)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc140)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc141)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc254)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc146)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc147)
        %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc148)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
      } loc(#loc255)
    } loc(#loc253)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc152)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc153)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc258)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc158)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc261)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc263)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc161)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc162)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc263)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc164)
          } loc(#loc262)
        } loc(#loc260)
      } loc(#loc259)
    } loc(#loc257)
    cir.return loc(#loc133)
  } loc(#loc250)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc169)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc173)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc174)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc268)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc176)
        %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc177)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
      } loc(#loc269)
    } loc(#loc267)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc181)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc182)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc272)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc187)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc275)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc277)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc190)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc191)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc277)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc192)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc193)
          } loc(#loc276)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc271)
    cir.return loc(#loc166)
  } loc(#loc264)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":30:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":41:1)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":24:9)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":26:12)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":26:5)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":27:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":31:5)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":27:8)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":27:11)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":28:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":30:9)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":30:16)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":32:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":40:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":32:8)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":32:11)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":33:5)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":34:9)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":39:9)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":34:12)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":34:19)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":35:9)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":37:13)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":37:33)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":37:26)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":38:26)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":38:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":159:1)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":165:1)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":161:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":161:14)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":162:5)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":162:14)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":163:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":163:14)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":164:5)
#loc45 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":164:14)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":61:19)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":75:27)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":48:1)
#loc51 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":79:1)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":50:5)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":50:9)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":52:12)
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":52:5)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":53:5)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":57:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":53:8)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":53:11)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":54:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":56:9)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":56:16)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":56:23)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":58:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":78:5)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":58:8)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":58:11)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":59:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":62:5)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":64:5)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":61:9)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":65:9)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":77:9)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":65:12)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":65:19)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":66:9)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":68:13)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":76:13)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":68:17)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":68:25)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":68:33)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":68:34)
#loc83 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":69:13)
#loc84 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":72:13)
#loc85 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":74:13)
#loc86 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":70:17)
#loc87 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":70:37)
#loc88 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":70:30)
#loc89 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":71:30)
#loc90 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":71:17)
#loc91 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":75:17)
#loc92 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":82:1)
#loc93 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":108:1)
#loc94 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":84:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":84:9)
#loc96 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":86:12)
#loc97 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":86:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":87:5)
#loc99 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":91:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":87:8)
#loc101 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":87:11)
#loc102 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":88:5)
#loc103 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":90:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":90:16)
#loc105 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":90:23)
#loc106 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":92:5)
#loc107 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":107:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":92:8)
#loc109 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":92:11)
#loc110 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":93:5)
#loc111 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":94:9)
#loc112 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":106:9)
#loc113 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":94:12)
#loc114 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":94:19)
#loc115 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":95:9)
#loc116 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":97:13)
#loc117 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":105:13)
#loc118 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":97:17)
#loc119 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":97:25)
#loc120 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":97:33)
#loc121 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":97:34)
#loc122 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":98:13)
#loc123 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":101:13)
#loc124 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":103:13)
#loc125 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":99:17)
#loc126 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":99:37)
#loc127 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":99:30)
#loc128 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":100:30)
#loc129 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":100:17)
#loc130 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":104:27)
#loc131 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":104:17)
#loc132 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":111:1)
#loc133 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":135:1)
#loc134 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":113:5)
#loc135 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":113:9)
#loc136 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":115:12)
#loc137 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":115:5)
#loc138 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":116:5)
#loc139 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":125:5)
#loc140 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":116:8)
#loc141 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":116:11)
#loc142 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":117:5)
#loc143 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":120:5)
#loc144 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":122:5)
#loc145 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":119:19)
#loc146 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":119:9)
#loc147 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":124:17)
#loc148 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":124:16)
#loc149 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":124:9)
#loc150 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":126:5)
#loc151 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":134:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":126:8)
#loc153 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":126:11)
#loc154 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":127:5)
#loc155 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":128:9)
#loc156 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":133:9)
#loc157 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":128:12)
#loc158 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":128:19)
#loc159 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":129:9)
#loc160 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":131:13)
#loc161 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":131:33)
#loc162 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":131:26)
#loc163 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":132:26)
#loc164 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":132:13)
#loc165 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":138:1)
#loc166 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":157:1)
#loc167 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":140:5)
#loc168 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":140:9)
#loc169 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":142:12)
#loc170 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":142:5)
#loc171 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":143:5)
#loc172 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":147:5)
#loc173 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":143:8)
#loc174 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":143:11)
#loc175 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":144:5)
#loc176 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":146:17)
#loc177 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":146:16)
#loc178 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":146:9)
#loc179 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":148:5)
#loc180 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":156:5)
#loc181 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":148:8)
#loc182 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":148:11)
#loc183 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":149:5)
#loc184 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":150:9)
#loc185 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":155:9)
#loc186 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":150:12)
#loc187 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":150:19)
#loc188 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":151:9)
#loc189 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":153:13)
#loc190 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":153:33)
#loc191 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":153:26)
#loc192 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":154:26)
#loc193 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_03.c":154:13)
#loc194 = loc(fused[#loc1, #loc2])
#loc195 = loc(fused[#loc3, #loc4])
#loc196 = loc(fused[#loc6, #loc7])
#loc197 = loc(fused[#loc8, #loc9])
#loc198 = loc(fused[#loc10, #loc11])
#loc199 = loc(fused[#loc13, #loc12])
#loc200 = loc(fused[#loc14, #loc15])
#loc201 = loc(fused[#loc16, #loc17])
#loc202 = loc(fused[#loc18, #loc15])
#loc203 = loc(fused[#loc21, #loc22])
#loc204 = loc(fused[#loc23, #loc24])
#loc205 = loc(fused[#loc25, #loc22])
#loc206 = loc(fused[#loc26, #loc27])
#loc207 = loc(fused[#loc28, #loc29])
#loc208 = loc(fused[#loc30, #loc27])
#loc209 = loc(fused[#loc31, #loc32])
#loc210 = loc(fused[#loc36, #loc37])
#loc211 = loc(fused[#loc38, #loc39])
#loc212 = loc(fused[#loc40, #loc41])
#loc213 = loc(fused[#loc42, #loc43])
#loc214 = loc(fused[#loc44, #loc45])
#loc215 = loc(fused[#loc46, #loc47])
#loc216 = loc(fused[#loc50, #loc51])
#loc217 = loc(fused[#loc52, #loc53])
#loc218 = loc(fused[#loc55, #loc54])
#loc219 = loc(fused[#loc56, #loc57])
#loc220 = loc(fused[#loc58, #loc59])
#loc221 = loc(fused[#loc60, #loc57])
#loc222 = loc(fused[#loc64, #loc65])
#loc223 = loc(fused[#loc66, #loc67])
#loc224 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc225 = loc(fused[#loc72, #loc73])
#loc226 = loc(fused[#loc74, #loc75])
#loc227 = loc(fused[#loc76, #loc73])
#loc228 = loc(fused[#loc77, #loc78])
#loc229 = loc(fused[#loc80, #loc81])
#loc230 = loc(fused[#loc79, #loc82])
#loc231 = loc(fused[#loc83, #loc84, #loc85, #loc78])
#loc232 = loc(fused[#loc86, #loc87])
#loc233 = loc(fused[#loc92, #loc93])
#loc234 = loc(fused[#loc94, #loc95])
#loc235 = loc(fused[#loc97, #loc96])
#loc236 = loc(fused[#loc98, #loc99])
#loc237 = loc(fused[#loc100, #loc101])
#loc238 = loc(fused[#loc102, #loc99])
#loc239 = loc(fused[#loc106, #loc107])
#loc240 = loc(fused[#loc108, #loc109])
#loc241 = loc(fused[#loc110, #loc107])
#loc242 = loc(fused[#loc111, #loc112])
#loc243 = loc(fused[#loc113, #loc114])
#loc244 = loc(fused[#loc115, #loc112])
#loc245 = loc(fused[#loc116, #loc117])
#loc246 = loc(fused[#loc119, #loc120])
#loc247 = loc(fused[#loc118, #loc121])
#loc248 = loc(fused[#loc122, #loc123, #loc124, #loc117])
#loc249 = loc(fused[#loc125, #loc126])
#loc250 = loc(fused[#loc132, #loc133])
#loc251 = loc(fused[#loc134, #loc135])
#loc252 = loc(fused[#loc137, #loc136])
#loc253 = loc(fused[#loc138, #loc139])
#loc254 = loc(fused[#loc140, #loc141])
#loc255 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc256 = loc(fused[#loc149, #loc147])
#loc257 = loc(fused[#loc150, #loc151])
#loc258 = loc(fused[#loc152, #loc153])
#loc259 = loc(fused[#loc154, #loc151])
#loc260 = loc(fused[#loc155, #loc156])
#loc261 = loc(fused[#loc157, #loc158])
#loc262 = loc(fused[#loc159, #loc156])
#loc263 = loc(fused[#loc160, #loc161])
#loc264 = loc(fused[#loc165, #loc166])
#loc265 = loc(fused[#loc167, #loc168])
#loc266 = loc(fused[#loc170, #loc169])
#loc267 = loc(fused[#loc171, #loc172])
#loc268 = loc(fused[#loc173, #loc174])
#loc269 = loc(fused[#loc175, #loc172])
#loc270 = loc(fused[#loc178, #loc176])
#loc271 = loc(fused[#loc179, #loc180])
#loc272 = loc(fused[#loc181, #loc182])
#loc273 = loc(fused[#loc183, #loc180])
#loc274 = loc(fused[#loc184, #loc185])
#loc275 = loc(fused[#loc186, #loc187])
#loc276 = loc(fused[#loc188, #loc185])
#loc277 = loc(fused[#loc189, #loc190])
