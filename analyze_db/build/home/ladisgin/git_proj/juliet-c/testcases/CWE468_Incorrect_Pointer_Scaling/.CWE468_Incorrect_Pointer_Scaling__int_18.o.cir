!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc41)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__int_18_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i, #cir.int<6> : !s32i, #cir.int<7> : !s32i, #cir.int<8> : !s32i, #cir.int<9> : !s32i, #cir.int<10> : !s32i]> : !cir.array<!s32i x 10> loc(#loc42)
  cir.func private @printIntLine(!s32i) loc(#loc43)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc42)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc45)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc46)
    cir.br ^bb1 loc(#loc47)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__int_18_bad.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc42)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc42)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc10)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc45)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc16)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc16)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc48)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc49)
    %10 = cir.ptr_stride(%5 : !cir.ptr<!s32i>, %9 : !u64i), !cir.ptr<!s32i> loc(#loc19)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc22)
    cir.return loc(#loc8)
  } loc(#loc44)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__int_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc51)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc50)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["intArray"] {alignment = 16 : i64} loc(#loc41)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc53)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc54)
    cir.br ^bb1 loc(#loc55)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc41)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s32i x 10>> loc(#loc41)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc30)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc53)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc37)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc40)
    cir.return loc(#loc28)
  } loc(#loc52)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__int_18.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":44:9)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":44:60)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":25:9)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":25:60)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":20:1)
#loc8 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":32:1)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":26:9)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":26:27)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:9)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:51)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":22:5)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":22:10)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:25)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:37)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:39)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:49)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:35)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":29:23)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":30:22)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":30:9)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":53:1)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":56:1)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":55:5)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":55:11)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":39:1)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":51:1)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":45:9)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":45:27)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":48:9)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":48:37)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":41:5)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":41:10)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":48:25)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":48:36)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":48:35)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":48:23)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":49:22)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__int_18.c":49:9)
#loc41 = loc(fused[#loc1, #loc2])
#loc42 = loc(fused[#loc3, #loc4])
#loc43 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc7, #loc8])
#loc45 = loc(fused[#loc9, #loc10])
#loc46 = loc(fused[#loc11, #loc12])
#loc47 = loc(fused[#loc13, #loc14])
#loc48 = loc(fused[#loc17, #loc18])
#loc49 = loc(fused[#loc16, #loc18])
#loc50 = loc(fused[#loc23, #loc24])
#loc51 = loc(fused[#loc25, #loc26])
#loc52 = loc(fused[#loc27, #loc28])
#loc53 = loc(fused[#loc29, #loc30])
#loc54 = loc(fused[#loc31, #loc32])
#loc55 = loc(fused[#loc33, #loc34])
