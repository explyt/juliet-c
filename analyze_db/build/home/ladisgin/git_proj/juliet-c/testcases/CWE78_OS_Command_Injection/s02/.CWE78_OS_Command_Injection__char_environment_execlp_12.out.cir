!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":125:10)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":125:14)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":125:20)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":125:32)
#loc149 = loc(fused[#loc78, #loc79])
#loc150 = loc(fused[#loc80, #loc81])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc121)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execlp_12_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc122)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc123)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc124)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc16)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc122)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execlp_12_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.scope {
      %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc133)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc133)
      %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc29)
      cir.if %16 {
        cir.scope {
          %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc136)
          %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc137)
          %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc136)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc11)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc11)
          %24 = cir.call @getenv(%23) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
          cir.store %24, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
          cir.scope {
            %25 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
            cir.if %28 {
              %29 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc48)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
              %31 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc51)
              %33 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
              %34 = cir.const #cir.int<100> : !s32i loc(#loc53)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc53)
              %36 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc54)
              %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc141)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc55)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc55)
              %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc142)
              %41 = cir.call @strncat(%32, %33, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
            } loc(#loc140)
          } loc(#loc138)
        } loc(#loc135)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc56)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc16)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
      } loc(#loc134)
    } loc(#loc132)
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc19)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc19)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc58)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.return loc(#loc22)
  } loc(#loc129)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc145)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc75)
  cir.func @main(%arg0: !s32i loc(fused[#loc78, #loc79]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc84)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc84)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc85)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc72)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execlp_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE78_OS_Command_Injection__char_environment_execlp_12_good() : () -> () loc(#loc87)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc73)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execlp_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE78_OS_Command_Injection__char_environment_execlp_12_bad() : () -> () loc(#loc91)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %17 : !s32i loc(#loc153)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc121)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.scope {
      %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc158)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc158)
      %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc104)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc104)
      cir.if %16 {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc109)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc111)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc111)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc112)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc114)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc114)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
      } loc(#loc159)
    } loc(#loc157)
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc115)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc115)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc117)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc117)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc120)
    cir.return loc(#loc97)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":92:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":92:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":56:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":56:28)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdlib.h":773:1)
#loc10 = loc("/usr/include/stdlib.h":773:50)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:41)
#loc12 = loc("/usr/include/string.h":152:1)
#loc13 = loc("/usr/include/string.h":153:29)
#loc14 = loc("/usr/include/string.h":149:1)
#loc15 = loc("/usr/include/string.h":150:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":75:22)
#loc17 = loc("/usr/include/unistd.h":605:1)
#loc18 = loc("/usr/include/unistd.h":606:14)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:38)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":53:1)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":81:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":55:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":55:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":57:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":57:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":58:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":76:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":58:8)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":58:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":59:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":71:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":73:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":60:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":70:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:41)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:53)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:30)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":62:37)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":63:34)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":65:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":69:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":65:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":65:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":66:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:30)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:29)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:39)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:52)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:56)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":68:64)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":75:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":75:16)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:25)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:52)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:66)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":80:5)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":110:1)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":113:1)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":112:5)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":112:13)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":130:15)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":132:15)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":135:15)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":137:15)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":125:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":140:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":126:1)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":128:27)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":128:22)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":128:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":130:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":131:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":131:65)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":132:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":135:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":136:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":136:64)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":137:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":139:12)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":139:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":89:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":108:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":91:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":91:12)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":93:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":93:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":94:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":103:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":94:8)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":94:33)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":95:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":98:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":100:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":97:9)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":97:16)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":97:22)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":102:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":102:16)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":102:22)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:25)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:38)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:52)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:66)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_execlp_12.c":107:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc14, #loc15])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc21, #loc22])
#loc130 = loc(fused[#loc23, #loc24])
#loc131 = loc(fused[#loc26, #loc25])
#loc132 = loc(fused[#loc27, #loc28])
#loc133 = loc(fused[#loc29, #loc30])
#loc134 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc135 = loc(fused[#loc34, #loc35])
#loc136 = loc(fused[#loc36, #loc37])
#loc137 = loc(fused[#loc38, #loc39])
#loc138 = loc(fused[#loc43, #loc44])
#loc139 = loc(fused[#loc45, #loc46])
#loc140 = loc(fused[#loc47, #loc44])
#loc141 = loc(fused[#loc53, #loc54])
#loc142 = loc(fused[#loc53, #loc55])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc66, #loc67])
#loc146 = loc(fused[#loc68, #loc69])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc76, #loc77])
#loc151 = loc(fused[#loc87, #loc88])
#loc152 = loc(fused[#loc91, #loc92])
#loc153 = loc(fused[#loc95, #loc94])
#loc154 = loc(fused[#loc96, #loc97])
#loc155 = loc(fused[#loc98, #loc99])
#loc156 = loc(fused[#loc101, #loc100])
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc104, #loc105])
#loc159 = loc(fused[#loc106, #loc107, #loc108, #loc103])
