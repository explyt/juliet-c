!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":46:22)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":46:26)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":243:10)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":243:14)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":243:20)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":243:32)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":155:27)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":155:31)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":194:27)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":194:31)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc392 = loc(fused[#loc21, #loc22])
#loc471 = loc(fused[#loc224, #loc225])
#loc472 = loc(fused[#loc226, #loc227])
#loc478 = loc(fused[#loc247, #loc248])
#loc506 = loc(fused[#loc318, #loc319])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc382)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc383)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc384)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc385)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc386)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc387)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc388)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc389)
  cir.func private @close(!s32i) -> !s32i loc(#loc390)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc21, #loc22])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc392)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc20)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc23)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc382)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc396)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc397)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc398)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc399)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc400)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc35)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc398)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc37)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc399)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc42)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc43)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc44)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc402)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc51)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc51)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc404)
                cir.if %64 {
                  cir.break loc(#loc53)
                } loc(#loc405)
              } loc(#loc403)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc406)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc56)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc407)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc408)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc61)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc61)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc409)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc64)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc64)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc410)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc68)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc68)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc69)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc411)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc413)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc414)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc414)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc81)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc81)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc415)
                cir.if %68 {
                  cir.break loc(#loc83)
                } loc(#loc416)
              } loc(#loc412)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc87)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc89)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc89)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc418)
                cir.if %66 {
                  cir.break loc(#loc91)
                } loc(#loc419)
              } loc(#loc417)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc93)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc94)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc420)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc101)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc422)
                cir.if %64 {
                  cir.break loc(#loc103)
                } loc(#loc423)
              } loc(#loc421)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc106)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc106)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc106)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc106)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc106)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc106)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc106)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc107)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc107)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc424)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc109)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc425)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc115)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc427)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc116)
                  cir.yield %66 : !cir.bool loc(#loc116)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc428)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc116)
                    cir.yield %70 : !cir.bool loc(#loc116)
                  }, false {
                    %70 = cir.const #false loc(#loc116)
                    cir.yield %70 : !cir.bool loc(#loc116)
                  }) : (!cir.bool) -> !cir.bool loc(#loc116)
                  cir.yield %69 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.if %65 {
                  cir.break loc(#loc120)
                } loc(#loc429)
              } loc(#loc426)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc121)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc121)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc123)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc430)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc125)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc431)
              cir.yield loc(#loc41)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc128)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc128)
              cir.condition(%17) loc(#loc128)
            } loc(#loc401)
          } loc(#loc401)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc131)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc132)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc132)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc433)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc135)
            } loc(#loc434)
          } loc(#loc432)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc139)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc139)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc436)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc142)
            } loc(#loc437)
          } loc(#loc435)
        } loc(#loc395)
      } loc(#loc394)
    } loc(#loc393)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    cir.return %3 : !s32i loc(#loc438)
  } loc(#loc391)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc439)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc440)
  cir.func private @printIntLine(!s32i) loc(#loc441)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc442)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc444)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc382)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc446)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc163)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc449)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc450)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc172)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc173)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc451)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc452)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc453)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc454)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc181)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc181)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc456)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc183)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc184)
          %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc185)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc183)
        } loc(#loc457)
      } loc(#loc455)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc188)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc188)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc459)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc190)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc191)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc460)
          cir.condition(%28) loc(#loc192)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc194)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc196)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc197)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc462)
          } loc(#loc461)
          cir.yield loc(#loc187)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc198)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc199)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc463)
          cir.yield loc(#loc458)
        } loc(#loc458)
      } loc(#loc458)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc201)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc202)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc203)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc204)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc205)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc204)
    } loc(#loc448)
    cir.return loc(#loc154)
  } loc(#loc443)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc465)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc208)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc466)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc210)
    cir.return loc(#loc207)
  } loc(#loc464)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc467)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc468)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc469)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc221)
  cir.func @main(%arg0: !s32i loc(fused[#loc224, #loc225]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc226, #loc227])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc471)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc472)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc223)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc228)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc229)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc230)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc230)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc231)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc218)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc218)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc473)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21_good() : () -> () loc(#loc233)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc219)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc235)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc220)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc220)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc236)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc474)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21_bad() : () -> () loc(#loc237)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc221)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc221)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc239)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc240)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc475)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc475)
    cir.return %17 : !s32i loc(#loc475)
  } loc(#loc470)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc476)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc244)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc247, #loc248])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc478)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc246)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc476)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc252)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc244)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc244)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc256)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc257)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc481)
      } loc(#loc480)
    } loc(#loc479)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc482)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc482)
    cir.return %3 : !s32i loc(#loc482)
  } loc(#loc477)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc484)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc265)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc266)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc268)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc476)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc486)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %6 = cir.call @goodG2B1Source(%5) : (!s32i) -> !s32i loc(#loc271)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc489)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc490)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc280)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc281)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc281)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc491)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc492)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc280)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc493)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc494)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc288)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc289)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc289)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc496)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc291)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc292)
          %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc293)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc291)
        } loc(#loc497)
      } loc(#loc495)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc296)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc296)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc499)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc298)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc299)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc500)
          cir.condition(%28) loc(#loc300)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc302)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc303)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc304)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc305)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc502)
          } loc(#loc501)
          cir.yield loc(#loc295)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc306)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc307)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc503)
          cir.yield loc(#loc498)
        } loc(#loc498)
      } loc(#loc498)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc308)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc309)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc310)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc308)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc311)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc312)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc313)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc313)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc312)
    } loc(#loc488)
    cir.return loc(#loc262)
  } loc(#loc483)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc504)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc318, #loc319])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc506)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc317)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc504)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc323)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc323)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc325)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc509)
      } loc(#loc508)
    } loc(#loc507)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc510)
    cir.return %3 : !s32i loc(#loc510)
  } loc(#loc505)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc512)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc334)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc513)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc336)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc504)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc514)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc338)
    %6 = cir.call @goodG2B2Source(%5) : (!s32i) -> !s32i loc(#loc339)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc517)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc518)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc348)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc349)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc349)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc519)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc520)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc348)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc521)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc522)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc356)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc357)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc357)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc524)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc359)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc360)
          %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc361)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc359)
        } loc(#loc525)
      } loc(#loc523)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc364)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc364)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc527)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc366)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc367)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc367)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc528)
          cir.condition(%28) loc(#loc368)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc370)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc371)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc372)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc373)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc530)
          } loc(#loc529)
          cir.yield loc(#loc363)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc374)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc375)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc531)
          cir.yield loc(#loc526)
        } loc(#loc526)
      } loc(#loc526)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc376)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc377)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc378)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc376)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc379)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc380)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc381)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc381)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc380)
    } loc(#loc516)
    cir.return loc(#loc330)
  } loc(#loc511)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":44:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":44:24)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":46:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":121:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":47:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":48:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":119:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":48:8)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":49:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":50:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":118:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":55:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":55:17)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":56:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":56:32)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":57:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":57:35)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":58:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":58:35)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":59:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":59:45)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":60:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":103:21)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":70:39)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":70:48)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":70:61)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":70:32)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":70:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":70:72)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":71:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":74:17)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":71:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":71:37)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":72:17)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":73:21)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:24)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:25)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:34)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:37)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:51)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":75:52)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":76:38)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":76:17)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":77:43)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":77:17)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":78:42)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":78:36)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":78:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":78:50)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:17)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":82:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:26)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:58)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:59)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:68)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:82)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:21)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":79:88)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":80:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":81:21)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":83:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":86:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":83:28)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":83:42)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":83:21)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":83:61)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":84:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":85:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":87:39)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":87:53)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":87:59)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":87:32)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":87:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":87:63)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":88:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":91:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":88:21)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":88:37)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":89:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":90:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:35)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:49)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:62)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:80)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:83)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:30)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":93:84)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":94:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":97:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":94:21)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":94:35)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":94:48)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":94:51)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":94:65)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":95:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":96:21)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":99:43)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":99:29)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":99:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":101:29)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":101:24)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":101:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":101:40)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":103:20)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":104:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":107:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":104:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":104:33)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":105:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":106:30)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":106:17)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":108:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":111:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":108:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":108:33)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":109:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":110:30)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":110:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":120:12)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":120:5)
#loc145 = loc("/usr/include/stdlib.h":672:1)
#loc146 = loc("/usr/include/stdlib.h":672:45)
#loc147 = loc("/usr/include/stdlib.h":756:1)
#loc148 = loc("/usr/include/stdlib.h":756:70)
#loc149 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc150 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc151 = loc("/usr/include/stdlib.h":687:1)
#loc152 = loc("/usr/include/stdlib.h":687:32)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":123:1)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":144:1)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":125:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":125:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":127:13)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":127:12)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":127:5)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":128:17)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":128:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":129:22)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":129:12)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":129:5)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":129:26)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":130:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":143:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":131:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":131:16)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":132:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":132:14)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":135:28)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":135:35)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":135:42)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":135:52)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":135:53)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":135:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:43)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:13)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:27)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:33)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:34)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:40)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":136:39)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":140:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:18)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:14)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:21)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:33)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:23)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":138:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":139:29)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":139:13)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":139:24)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":139:25)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:40)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":137:39)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":141:22)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":141:33)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":141:34)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":141:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":142:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":142:14)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":227:1)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":231:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":229:5)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":229:14)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":230:5)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":230:14)
#loc212 = loc("/usr/include/stdlib.h":575:1)
#loc213 = loc("/usr/include/stdlib.h":575:41)
#loc214 = loc("/usr/include/time.h":76:1)
#loc215 = loc("/usr/include/time.h":76:38)
#loc216 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc217 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":248:15)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":250:15)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":253:15)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":255:15)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":243:1)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":258:1)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":244:1)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":246:27)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":246:22)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":246:5)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":248:5)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":249:5)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":249:78)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":250:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":253:5)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":254:5)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":254:77)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":255:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":257:12)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":257:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":151:1)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":151:29)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":160:19)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":155:1)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":168:1)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":156:1)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":157:5)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":166:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":157:8)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":158:5)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":161:5)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":163:5)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":160:9)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":165:16)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":165:9)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":167:12)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":167:5)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":170:1)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":191:1)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":172:5)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":172:9)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":174:13)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":174:12)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":174:5)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":175:22)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":175:5)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":176:27)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":176:12)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":176:5)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":176:31)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":177:5)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":190:5)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":178:9)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":178:16)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":179:9)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":179:14)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":182:28)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":182:35)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":182:42)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":182:52)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":182:53)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":182:9)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:9)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:43)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:13)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:27)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:33)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:34)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:40)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":183:39)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:9)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":187:9)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:18)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:14)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:21)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:33)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:23)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":185:9)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":186:29)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":186:13)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":186:24)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":186:25)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:40)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":184:39)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":188:22)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":188:33)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":188:34)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":188:9)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":189:9)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":189:14)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":152:1)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":152:29)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":194:1)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":202:1)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":195:1)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":196:5)
#loc322 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":200:5)
#loc323 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":196:8)
#loc324 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":197:5)
#loc325 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":199:16)
#loc326 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":199:9)
#loc327 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":201:12)
#loc328 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":201:5)
#loc329 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":204:1)
#loc330 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":225:1)
#loc331 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":206:5)
#loc332 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":206:9)
#loc333 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":208:13)
#loc334 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":208:12)
#loc335 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":208:5)
#loc336 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":209:22)
#loc337 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":209:5)
#loc338 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":210:27)
#loc339 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":210:12)
#loc340 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":210:5)
#loc341 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":210:31)
#loc342 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":211:5)
#loc343 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":224:5)
#loc344 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":212:9)
#loc345 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":212:16)
#loc346 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":213:9)
#loc347 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":213:14)
#loc348 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":216:28)
#loc349 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":216:35)
#loc350 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":216:42)
#loc351 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":216:52)
#loc352 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":216:53)
#loc353 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":216:9)
#loc354 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:9)
#loc355 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:43)
#loc356 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:13)
#loc357 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:27)
#loc358 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:33)
#loc359 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:34)
#loc360 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:40)
#loc361 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":217:39)
#loc362 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:9)
#loc363 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":221:9)
#loc364 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:18)
#loc365 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:14)
#loc366 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:21)
#loc367 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:33)
#loc368 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:23)
#loc369 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":219:9)
#loc370 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":220:29)
#loc371 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":220:13)
#loc372 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":220:24)
#loc373 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":220:25)
#loc374 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:40)
#loc375 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":218:39)
#loc376 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":222:22)
#loc377 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":222:33)
#loc378 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":222:34)
#loc379 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":222:9)
#loc380 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":223:9)
#loc381 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_21.c":223:14)
#loc382 = loc(fused[#loc1, #loc2])
#loc383 = loc(fused[#loc3, #loc4])
#loc384 = loc(fused[#loc5, #loc6])
#loc385 = loc(fused[#loc7, #loc8])
#loc386 = loc(fused[#loc9, #loc10])
#loc387 = loc(fused[#loc11, #loc12])
#loc388 = loc(fused[#loc13, #loc14])
#loc389 = loc(fused[#loc15, #loc16])
#loc390 = loc(fused[#loc17, #loc18])
#loc391 = loc(fused[#loc19, #loc20])
#loc393 = loc(fused[#loc24, #loc25])
#loc394 = loc(fused[#loc27, #loc25])
#loc395 = loc(fused[#loc28, #loc29])
#loc396 = loc(fused[#loc30, #loc31])
#loc397 = loc(fused[#loc32, #loc33])
#loc398 = loc(fused[#loc34, #loc35])
#loc399 = loc(fused[#loc36, #loc37])
#loc400 = loc(fused[#loc38, #loc39])
#loc401 = loc(fused[#loc40, #loc41])
#loc402 = loc(fused[#loc46, #loc47])
#loc403 = loc(fused[#loc48, #loc49])
#loc404 = loc(fused[#loc50, #loc51])
#loc405 = loc(fused[#loc52, #loc49])
#loc406 = loc(fused[#loc54, #loc55])
#loc407 = loc(fused[#loc57, #loc58])
#loc408 = loc(fused[#loc59, #loc60])
#loc409 = loc(fused[#loc63, #loc61])
#loc410 = loc(fused[#loc67, #loc64])
#loc411 = loc(fused[#loc71, #loc72])
#loc412 = loc(fused[#loc73, #loc74])
#loc413 = loc(fused[#loc76, #loc77])
#loc414 = loc(fused[#loc78, #loc79])
#loc415 = loc(fused[#loc80, #loc81])
#loc416 = loc(fused[#loc82, #loc74])
#loc417 = loc(fused[#loc84, #loc85])
#loc418 = loc(fused[#loc88, #loc89])
#loc419 = loc(fused[#loc90, #loc85])
#loc420 = loc(fused[#loc96, #loc97])
#loc421 = loc(fused[#loc98, #loc99])
#loc422 = loc(fused[#loc100, #loc101])
#loc423 = loc(fused[#loc102, #loc99])
#loc424 = loc(fused[#loc106, #loc107])
#loc425 = loc(fused[#loc110, #loc111])
#loc426 = loc(fused[#loc112, #loc113])
#loc427 = loc(fused[#loc114, #loc115])
#loc428 = loc(fused[#loc117, #loc118])
#loc429 = loc(fused[#loc119, #loc113])
#loc430 = loc(fused[#loc123, #loc121])
#loc431 = loc(fused[#loc126, #loc127])
#loc432 = loc(fused[#loc129, #loc130])
#loc433 = loc(fused[#loc131, #loc132])
#loc434 = loc(fused[#loc133, #loc130])
#loc435 = loc(fused[#loc136, #loc137])
#loc436 = loc(fused[#loc138, #loc139])
#loc437 = loc(fused[#loc140, #loc137])
#loc438 = loc(fused[#loc144, #loc143])
#loc439 = loc(fused[#loc145, #loc146])
#loc440 = loc(fused[#loc147, #loc148])
#loc441 = loc(fused[#loc149, #loc150])
#loc442 = loc(fused[#loc151, #loc152])
#loc443 = loc(fused[#loc153, #loc154])
#loc444 = loc(fused[#loc155, #loc156])
#loc445 = loc(fused[#loc159, #loc157])
#loc446 = loc(fused[#loc161, #loc160])
#loc447 = loc(fused[#loc164, #loc165])
#loc448 = loc(fused[#loc166, #loc167])
#loc449 = loc(fused[#loc168, #loc169])
#loc450 = loc(fused[#loc170, #loc171])
#loc451 = loc(fused[#loc174, #loc175])
#loc452 = loc(fused[#loc173, #loc175])
#loc453 = loc(fused[#loc172, #loc176])
#loc454 = loc(fused[#loc177, #loc176])
#loc455 = loc(fused[#loc178, #loc179])
#loc456 = loc(fused[#loc180, #loc181])
#loc457 = loc(fused[#loc182, #loc179])
#loc458 = loc(fused[#loc186, #loc187])
#loc459 = loc(fused[#loc189, #loc188])
#loc460 = loc(fused[#loc190, #loc191])
#loc461 = loc(fused[#loc193, #loc187])
#loc462 = loc(fused[#loc195, #loc194])
#loc463 = loc(fused[#loc199, #loc198])
#loc464 = loc(fused[#loc206, #loc207])
#loc465 = loc(fused[#loc208, #loc209])
#loc466 = loc(fused[#loc210, #loc211])
#loc467 = loc(fused[#loc212, #loc213])
#loc468 = loc(fused[#loc214, #loc215])
#loc469 = loc(fused[#loc216, #loc217])
#loc470 = loc(fused[#loc222, #loc223])
#loc473 = loc(fused[#loc233, #loc234])
#loc474 = loc(fused[#loc237, #loc238])
#loc475 = loc(fused[#loc241, #loc240])
#loc476 = loc(fused[#loc242, #loc243])
#loc477 = loc(fused[#loc245, #loc246])
#loc479 = loc(fused[#loc250, #loc251])
#loc480 = loc(fused[#loc253, #loc254, #loc255, #loc251])
#loc481 = loc(fused[#loc258, #loc257])
#loc482 = loc(fused[#loc260, #loc259])
#loc483 = loc(fused[#loc261, #loc262])
#loc484 = loc(fused[#loc263, #loc264])
#loc485 = loc(fused[#loc267, #loc265])
#loc486 = loc(fused[#loc269, #loc268])
#loc487 = loc(fused[#loc272, #loc273])
#loc488 = loc(fused[#loc274, #loc275])
#loc489 = loc(fused[#loc276, #loc277])
#loc490 = loc(fused[#loc278, #loc279])
#loc491 = loc(fused[#loc282, #loc283])
#loc492 = loc(fused[#loc281, #loc283])
#loc493 = loc(fused[#loc280, #loc284])
#loc494 = loc(fused[#loc285, #loc284])
#loc495 = loc(fused[#loc286, #loc287])
#loc496 = loc(fused[#loc288, #loc289])
#loc497 = loc(fused[#loc290, #loc287])
#loc498 = loc(fused[#loc294, #loc295])
#loc499 = loc(fused[#loc297, #loc296])
#loc500 = loc(fused[#loc298, #loc299])
#loc501 = loc(fused[#loc301, #loc295])
#loc502 = loc(fused[#loc303, #loc302])
#loc503 = loc(fused[#loc307, #loc306])
#loc504 = loc(fused[#loc314, #loc315])
#loc505 = loc(fused[#loc316, #loc317])
#loc507 = loc(fused[#loc321, #loc322])
#loc508 = loc(fused[#loc324, #loc322])
#loc509 = loc(fused[#loc326, #loc325])
#loc510 = loc(fused[#loc328, #loc327])
#loc511 = loc(fused[#loc329, #loc330])
#loc512 = loc(fused[#loc331, #loc332])
#loc513 = loc(fused[#loc335, #loc333])
#loc514 = loc(fused[#loc337, #loc336])
#loc515 = loc(fused[#loc340, #loc341])
#loc516 = loc(fused[#loc342, #loc343])
#loc517 = loc(fused[#loc344, #loc345])
#loc518 = loc(fused[#loc346, #loc347])
#loc519 = loc(fused[#loc350, #loc351])
#loc520 = loc(fused[#loc349, #loc351])
#loc521 = loc(fused[#loc348, #loc352])
#loc522 = loc(fused[#loc353, #loc352])
#loc523 = loc(fused[#loc354, #loc355])
#loc524 = loc(fused[#loc356, #loc357])
#loc525 = loc(fused[#loc358, #loc355])
#loc526 = loc(fused[#loc362, #loc363])
#loc527 = loc(fused[#loc365, #loc364])
#loc528 = loc(fused[#loc366, #loc367])
#loc529 = loc(fused[#loc369, #loc363])
#loc530 = loc(fused[#loc371, #loc370])
#loc531 = loc(fused[#loc375, #loc374])
