!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:37)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc129)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_16_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc130)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc16)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc136)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc130)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_16_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc31)
    cir.brcond %7 ^bb3, ^bb27 loc(#loc31)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.br ^bb5 loc(#loc144)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc38)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc145)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
    %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc146)
    cir.brcond %17 ^bb6, ^bb24 loc(#loc147)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc47)
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc149)
    %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc149)
    %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
    %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc50)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
    cir.brcond %31 ^bb8, ^bb21 loc(#loc151)
  ^bb8:  // pred: ^bb7
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc62)
    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc154)
    cir.brcond %38 ^bb10, ^bb15 loc(#loc63)
  ^bb10:  // pred: ^bb9
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc66)
    %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc155)
    %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc67)
    %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc64)
    %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc64)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc68)
    %48 = cir.cmp(eq, %46, %47) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %48 ^bb11, ^bb12 loc(#loc63)
  ^bb11:  // pred: ^bb10
    %49 = cir.const #true loc(#loc63)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc63)
  ^bb12:  // pred: ^bb10
    %50 = cir.const #false loc(#loc63)
    cir.br ^bb13(%50 : !cir.bool) loc(#loc63)
  ^bb13(%51: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:37)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc63)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%51 : !cir.bool) loc(#loc63)
  ^bb15:  // pred: ^bb9
    %52 = cir.const #false loc(#loc63)
    cir.br ^bb16(%52 : !cir.bool) loc(#loc63)
  ^bb16(%53: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:37)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc63)
  ^bb17:  // pred: ^bb16
    cir.brcond %53 ^bb18, ^bb19 loc(#loc157)
  ^bb18:  // pred: ^bb17
    %54 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc70)
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %57 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc73)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc158)
    %61 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %55, %61 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    cir.br ^bb19 loc(#loc60)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc60)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc53)
  ^bb21:  // pred: ^bb7
    %62 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %63 = cir.cast(array_to_ptrdecay, %62 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc76)
    %66 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %67 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %68 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc79)
    cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    cir.br ^bb22 loc(#loc43)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc43)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc37)
  ^bb24:  // 2 preds: ^bb5, ^bb23
    cir.br ^bb25 loc(#loc37)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc33)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc80)
  ^bb27:  // 2 preds: ^bb2, ^bb26
    cir.br ^bb28 loc(#loc30)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc161)
  ^bb29:  // pred: ^bb28
    %69 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %70 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc16)
    %71 = cir.cast(array_to_ptrdecay, %70 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc16)
    %72 = cir.call @popen(%69, %71) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc84)
    cir.store %72, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
    cir.br ^bb30 loc(#loc163)
  ^bb30:  // pred: ^bb29
    %73 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
    %74 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
    %75 = cir.cast(bitcast, %74 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc90)
    %76 = cir.cmp(ne, %73, %75) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc164)
    cir.brcond %76 ^bb31, ^bb32 loc(#loc165)
  ^bb31:  // pred: ^bb30
    %77 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
    %78 = cir.call @pclose(%77) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc93)
    cir.br ^bb32 loc(#loc88)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc88)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc82)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc20)
  } loc(#loc137)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc95)
  } loc(#loc166)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc129)
    %3 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc129)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc129)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc111)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc111)
  ^bb3:  // pred: ^bb2
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc112)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc100)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc100)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc110)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc118)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc118)
    %15 = cir.call @popen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc119)
    cir.store %15, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
    cir.br ^bb7 loc(#loc176)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc125)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc177)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc178)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
    %21 = cir.call @pclose(%20) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc128)
    cir.br ^bb9 loc(#loc123)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc123)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc116)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc102)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_16.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":92:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":92:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":42:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":42:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":65:31)
#loc14 = loc("/usr/include/stdio.h":893:1)
#loc15 = loc("/usr/include/stdio.h":894:3)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:28)
#loc17 = loc("/usr/include/stdio.h":887:1)
#loc18 = loc("/usr/include/stdio.h":887:36)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":39:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":82:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:13)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:41)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":74:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":74:15)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":41:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":41:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":43:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":43:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":44:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":72:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":44:11)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":46:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":70:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:30)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:37)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":69:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:17)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:21)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:31)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":51:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":68:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:27)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:32)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:31)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:47)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:51)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:61)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:71)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":54:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":62:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":64:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:31)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:38)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:42)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":61:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:25)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:35)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:40)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:45)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:53)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:54)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:59)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":59:21)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:43)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:25)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:30)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:38)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:39)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":65:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:37)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:26)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:33)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":71:9)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":73:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":81:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:22)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:16)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:31)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":77:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":80:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":77:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":77:21)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":78:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":79:20)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":79:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":111:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":114:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":113:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":113:13)
#loc98 = loc("/usr/include/string.h":149:1)
#loc99 = loc("/usr/include/string.h":150:14)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":97:22)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":89:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":109:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":101:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":101:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":91:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":91:12)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":93:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":93:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":94:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":99:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":94:11)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":97:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":97:16)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":98:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":100:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":108:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:22)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:28)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:16)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:31)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":104:9)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":107:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":104:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":104:21)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":105:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":106:20)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":106:13)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc14, #loc15])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc23, #loc24])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc28, #loc27])
#loc142 = loc(fused[#loc29, #loc30])
#loc143 = loc(fused[#loc32, #loc33])
#loc144 = loc(fused[#loc36, #loc37])
#loc145 = loc(fused[#loc38, #loc39])
#loc146 = loc(fused[#loc38, #loc40])
#loc147 = loc(fused[#loc41, #loc37])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc47, #loc48])
#loc150 = loc(fused[#loc50, #loc51])
#loc151 = loc(fused[#loc52, #loc53, #loc54, #loc43])
#loc152 = loc(fused[#loc57, #loc58])
#loc153 = loc(fused[#loc59, #loc60])
#loc154 = loc(fused[#loc61, #loc62])
#loc155 = loc(fused[#loc65, #loc66])
#loc156 = loc(fused[#loc64, #loc68])
#loc157 = loc(fused[#loc69, #loc60])
#loc158 = loc(fused[#loc72, #loc73])
#loc159 = loc(fused[#loc71, #loc70])
#loc160 = loc(fused[#loc77, #loc76])
#loc161 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc85, #loc86])
#loc163 = loc(fused[#loc87, #loc88])
#loc164 = loc(fused[#loc89, #loc90])
#loc165 = loc(fused[#loc91, #loc88])
#loc166 = loc(fused[#loc94, #loc95])
#loc167 = loc(fused[#loc96, #loc97])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc101, #loc102])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc108, #loc107])
#loc173 = loc(fused[#loc109, #loc110])
#loc174 = loc(fused[#loc115, #loc116])
#loc175 = loc(fused[#loc120, #loc121])
#loc176 = loc(fused[#loc122, #loc123])
#loc177 = loc(fused[#loc124, #loc125])
#loc178 = loc(fused[#loc126, #loc123])
