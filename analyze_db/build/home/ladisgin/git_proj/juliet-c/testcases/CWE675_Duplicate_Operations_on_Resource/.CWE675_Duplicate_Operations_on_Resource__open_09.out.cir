!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":151:10)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":151:14)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":151:20)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":151:32)
#loc206 = loc(fused[#loc56, #loc57])
#loc207 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc184)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.func private @close(!s32i) -> !s32i loc(#loc186)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_09_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc20)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc192)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc21)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc22)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc193)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc23)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc27)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc33)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc9)
  } loc(#loc187)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_09_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc197)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc202)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_09_good : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_09_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_09_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_09_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %17 : !s32i loc(#loc210)
  } loc(#loc205)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc88)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc90)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc217)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc91)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc92)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc218)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc93)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc97)
    cir.br ^bb3 loc(#loc85)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc211)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc221)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb8 loc(#loc102)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc99)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc99)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc78)
  } loc(#loc212)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc110)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc116)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc117)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc118)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc227)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc119)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc120)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc228)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc121)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc125)
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc128)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc231)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc127)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc127)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc106)
  } loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc130)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc233)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc136)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.br ^bb1 loc(#loc235)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc211)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc140)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb4 loc(#loc142)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc130)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc130)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %11 = cir.const #cir.int<64> : !s32i loc(#loc147)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc237)
    %13 = cir.const #cir.int<256> : !s32i loc(#loc148)
    %14 = cir.const #cir.int<128> : !s32i loc(#loc149)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc238)
    %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc150)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb4 loc(#loc139)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc240)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc155)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc241)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc158)
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc154)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc132)
  } loc(#loc232)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc164)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc246)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc170)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc171)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc172)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc247)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc173)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc174)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc248)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc175)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb3 loc(#loc167)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc184)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc251)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc183)
    cir.br ^bb7 loc(#loc179)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc179)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc160)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_09.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/fcntl.h":209:1)
#loc4 = loc("/usr/include/fcntl.h":209:56)
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:21)
#loc6 = loc("/usr/include/unistd.h":358:1)
#loc7 = loc("/usr/include/unistd.h":358:27)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":31:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":46:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":33:5)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":33:9)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":34:13)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":34:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":34:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":35:5)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":40:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":35:8)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":36:5)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:43)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:50)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:59)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:67)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:16)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:9)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":37:75)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":39:15)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":39:9)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":41:5)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":45:5)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":41:8)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":42:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":44:15)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":44:9)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":134:1)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":140:1)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":136:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":136:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":137:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":137:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":138:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":138:14)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":139:5)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":139:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":156:15)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":158:15)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":161:15)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":163:15)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":151:1)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":166:1)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":152:1)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":154:27)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":154:22)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":154:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":156:5)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":157:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":157:59)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":158:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":161:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":162:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":162:58)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":163:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":165:12)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":165:5)
#loc74 = loc("../../testcasesupport/std_testcase.h":110:1)
#loc75 = loc("../../testcasesupport/std_testcase.h":110:18)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":66:19)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":53:1)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":74:1)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":55:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":55:9)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":56:13)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":56:12)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":56:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":57:5)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":62:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":57:8)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":58:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:21)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:43)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:50)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:59)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:67)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:16)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:9)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":59:75)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":61:15)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":61:9)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":63:5)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":73:5)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":63:8)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":64:5)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":67:5)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":69:5)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":66:9)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":77:1)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":93:1)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":79:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":79:9)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":80:13)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":80:12)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":80:5)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":81:5)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":86:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":81:8)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":82:5)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:21)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:43)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:50)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:59)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:67)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:16)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:9)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":83:75)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":85:15)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":85:9)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":87:5)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":92:5)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":87:8)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":88:5)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:21)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":96:1)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":115:1)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":98:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":98:9)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":99:13)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":99:12)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":99:5)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":100:5)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":109:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":100:8)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":101:5)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":104:5)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":106:5)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":103:19)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":103:9)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:44)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:51)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:60)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:68)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:16)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:9)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":108:76)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":110:5)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":114:5)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":110:8)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":111:5)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":113:15)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":113:9)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":118:1)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":132:1)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":120:5)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":120:9)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":121:13)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":121:12)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":121:5)
#loc166 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":122:5)
#loc167 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":126:5)
#loc168 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":122:8)
#loc169 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":123:5)
#loc170 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:21)
#loc171 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:44)
#loc172 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:51)
#loc173 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:60)
#loc174 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:68)
#loc175 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:16)
#loc176 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:9)
#loc177 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":125:76)
#loc178 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":127:5)
#loc179 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":131:5)
#loc180 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":127:8)
#loc181 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":128:5)
#loc182 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":130:15)
#loc183 = loc("CWE675_Duplicate_Operations_on_Resource__open_09.c":130:9)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc6, #loc7])
#loc187 = loc(fused[#loc8, #loc9])
#loc188 = loc(fused[#loc10, #loc11])
#loc189 = loc(fused[#loc14, #loc12])
#loc190 = loc(fused[#loc15, #loc16])
#loc191 = loc(fused[#loc18, #loc16])
#loc192 = loc(fused[#loc19, #loc20])
#loc193 = loc(fused[#loc21, #loc22])
#loc194 = loc(fused[#loc24, #loc25])
#loc195 = loc(fused[#loc28, #loc29])
#loc196 = loc(fused[#loc31, #loc29])
#loc197 = loc(fused[#loc34, #loc35])
#loc198 = loc(fused[#loc36, #loc37])
#loc199 = loc(fused[#loc38, #loc39])
#loc200 = loc(fused[#loc40, #loc41])
#loc201 = loc(fused[#loc42, #loc43])
#loc202 = loc(fused[#loc44, #loc45])
#loc203 = loc(fused[#loc46, #loc47])
#loc204 = loc(fused[#loc48, #loc49])
#loc205 = loc(fused[#loc54, #loc55])
#loc208 = loc(fused[#loc65, #loc66])
#loc209 = loc(fused[#loc69, #loc70])
#loc210 = loc(fused[#loc73, #loc72])
#loc211 = loc(fused[#loc74, #loc75])
#loc212 = loc(fused[#loc77, #loc78])
#loc213 = loc(fused[#loc79, #loc80])
#loc214 = loc(fused[#loc83, #loc81])
#loc215 = loc(fused[#loc84, #loc85])
#loc216 = loc(fused[#loc87, #loc85])
#loc217 = loc(fused[#loc89, #loc90])
#loc218 = loc(fused[#loc91, #loc92])
#loc219 = loc(fused[#loc94, #loc95])
#loc220 = loc(fused[#loc98, #loc99])
#loc221 = loc(fused[#loc101, #loc102, #loc103, #loc99])
#loc222 = loc(fused[#loc105, #loc106])
#loc223 = loc(fused[#loc107, #loc108])
#loc224 = loc(fused[#loc111, #loc109])
#loc225 = loc(fused[#loc112, #loc113])
#loc226 = loc(fused[#loc115, #loc113])
#loc227 = loc(fused[#loc117, #loc118])
#loc228 = loc(fused[#loc119, #loc120])
#loc229 = loc(fused[#loc122, #loc123])
#loc230 = loc(fused[#loc126, #loc127])
#loc231 = loc(fused[#loc129, #loc127])
#loc232 = loc(fused[#loc131, #loc132])
#loc233 = loc(fused[#loc133, #loc134])
#loc234 = loc(fused[#loc137, #loc135])
#loc235 = loc(fused[#loc138, #loc139])
#loc236 = loc(fused[#loc141, #loc142, #loc143, #loc139])
#loc237 = loc(fused[#loc146, #loc147])
#loc238 = loc(fused[#loc148, #loc149])
#loc239 = loc(fused[#loc151, #loc152])
#loc240 = loc(fused[#loc153, #loc154])
#loc241 = loc(fused[#loc156, #loc154])
#loc242 = loc(fused[#loc159, #loc160])
#loc243 = loc(fused[#loc161, #loc162])
#loc244 = loc(fused[#loc165, #loc163])
#loc245 = loc(fused[#loc166, #loc167])
#loc246 = loc(fused[#loc169, #loc167])
#loc247 = loc(fused[#loc171, #loc172])
#loc248 = loc(fused[#loc173, #loc174])
#loc249 = loc(fused[#loc176, #loc177])
#loc250 = loc(fused[#loc178, #loc179])
#loc251 = loc(fused[#loc181, #loc179])
