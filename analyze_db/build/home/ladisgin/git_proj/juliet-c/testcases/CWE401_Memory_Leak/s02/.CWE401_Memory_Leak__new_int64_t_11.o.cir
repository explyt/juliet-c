!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc159)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc160)
  cir.func private @printLongLongLine(!s64i) loc(#loc161)
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_113badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc166)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc168)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc168)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc169)
    %7 = cir.const #cir.int<5> : !s64i loc(#loc22)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc170)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
    %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc26)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc27)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc171)
  ^bb5:  // pred: ^bb4
    %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc30)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc172)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc173)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc162)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc176)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc44)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc48)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc181)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc183)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc53)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc183)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc184)
    %7 = cir.const #cir.int<5> : !s64i loc(#loc55)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc56)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc185)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc58)
    %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc59)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc60)
    cir.br ^bb3 loc(#loc47)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc47)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %11 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc63)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb8 loc(#loc66)
  ^bb7:  // pred: ^bb5
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc69)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc53)
    cir.br ^bb8 loc(#loc62)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc62)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc41)
  } loc(#loc177)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc78)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc193)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc195)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc83)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc195)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc196)
    %7 = cir.const #cir.int<5> : !s64i loc(#loc85)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc86)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc197)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
    %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc89)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc90)
    cir.br ^bb3 loc(#loc77)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc93)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc199)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc200)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc96)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc83)
    cir.br ^bb7 loc(#loc92)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc71)
  } loc(#loc189)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    cir.store %2, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %3 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc107)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb4 loc(#loc110)
  ^bb3:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc208)
    %7 = cir.const #cir.int<5> : !s64i loc(#loc116)
    %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc117)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc209)
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc119)
    %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc120)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc121)
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc106)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc210)
  ^bb6:  // pred: ^bb5
    %11 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc124)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc211)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc212)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc123)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc98)
  } loc(#loc201)
  cir.func internal private @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["dataGoodBuffer"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc133)
    cir.store %2, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    %3 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc137)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc218)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc219)
  ^bb2:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc220)
    %5 = cir.const #cir.int<5> : !s64i loc(#loc142)
    %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc143)
    cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc221)
    %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc145)
    %8 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc146)
    cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc147)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc222)
  ^bb5:  // pred: ^bb4
    %9 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc150)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc223)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc224)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc149)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc149)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc128)
  } loc(#loc213)
  cir.func @_ZN34CWE401_Memory_Leak__new_int64_t_114goodEv() extra(#fn_attr) {
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodB2G1Ev() : () -> () loc(#loc155)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodB2G2Ev() : () -> () loc(#loc156)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodG2B1Ev() : () -> () loc(#loc157)
    cir.call @_ZN34CWE401_Memory_Leak__new_int64_t_11L8goodG2B2Ev() : () -> () loc(#loc158)
    cir.return loc(#loc154)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_11.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":28:1)
#loc8 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":45:1)
#loc9 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":30:5)
#loc10 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":30:15)
#loc11 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":31:12)
#loc12 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":31:5)
#loc13 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":32:5)
#loc14 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":39:5)
#loc15 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":32:8)
#loc16 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":32:26)
#loc17 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":33:5)
#loc18 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":35:16)
#loc19 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":35:20)
#loc20 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":28:6)
#loc21 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":35:9)
#loc22 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":37:17)
#loc23 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":37:10)
#loc24 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":37:9)
#loc25 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":38:28)
#loc26 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":38:27)
#loc27 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":38:9)
#loc28 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":40:5)
#loc29 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":44:5)
#loc30 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":40:8)
#loc31 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":40:26)
#loc32 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":41:5)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":67:19)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc39 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc40 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":52:1)
#loc41 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":74:1)
#loc42 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":54:5)
#loc43 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":54:15)
#loc44 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":55:12)
#loc45 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":55:5)
#loc46 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":56:5)
#loc47 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":63:5)
#loc48 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":56:8)
#loc49 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":56:26)
#loc50 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":57:5)
#loc51 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":59:16)
#loc52 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":59:20)
#loc53 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":52:13)
#loc54 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":59:9)
#loc55 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":61:17)
#loc56 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":61:10)
#loc57 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":61:9)
#loc58 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":62:28)
#loc59 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":62:27)
#loc60 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":62:9)
#loc61 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":64:5)
#loc62 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":73:5)
#loc63 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":64:8)
#loc64 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":64:27)
#loc65 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":65:5)
#loc66 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":68:5)
#loc67 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":70:5)
#loc68 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":67:9)
#loc69 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":72:16)
#loc70 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":77:1)
#loc71 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":94:1)
#loc72 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":79:5)
#loc73 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":79:15)
#loc74 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":80:12)
#loc75 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":80:5)
#loc76 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":81:5)
#loc77 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":88:5)
#loc78 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":81:8)
#loc79 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":81:26)
#loc80 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":82:5)
#loc81 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":84:16)
#loc82 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":84:20)
#loc83 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":77:13)
#loc84 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":84:9)
#loc85 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":86:17)
#loc86 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":86:10)
#loc87 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":86:9)
#loc88 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":87:28)
#loc89 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":87:27)
#loc90 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":87:9)
#loc91 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":89:5)
#loc92 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":93:5)
#loc93 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":89:8)
#loc94 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":89:26)
#loc95 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":90:5)
#loc96 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":92:16)
#loc97 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":97:1)
#loc98 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":120:1)
#loc99 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":109:9)
#loc100 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":109:17)
#loc101 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":99:5)
#loc102 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":99:15)
#loc103 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":100:12)
#loc104 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":100:5)
#loc105 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":101:5)
#loc106 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":114:5)
#loc107 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":101:8)
#loc108 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":101:27)
#loc109 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":102:5)
#loc110 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":105:5)
#loc111 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":107:5)
#loc112 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":104:19)
#loc113 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":104:9)
#loc114 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":110:9)
#loc115 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":110:17)
#loc116 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":112:17)
#loc117 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":112:10)
#loc118 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":112:9)
#loc119 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":113:28)
#loc120 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":113:27)
#loc121 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":113:9)
#loc122 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":115:5)
#loc123 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":119:5)
#loc124 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":115:8)
#loc125 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":115:26)
#loc126 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":116:5)
#loc127 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":123:1)
#loc128 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":141:1)
#loc129 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":130:9)
#loc130 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":130:17)
#loc131 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":125:5)
#loc132 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":125:15)
#loc133 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":126:12)
#loc134 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":126:5)
#loc135 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":127:5)
#loc136 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":135:5)
#loc137 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":127:8)
#loc138 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":127:26)
#loc139 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":128:5)
#loc140 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":131:9)
#loc141 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":131:17)
#loc142 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":133:17)
#loc143 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":133:10)
#loc144 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":133:9)
#loc145 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":134:28)
#loc146 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":134:27)
#loc147 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":134:9)
#loc148 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":136:5)
#loc149 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":140:5)
#loc150 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":136:8)
#loc151 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":136:26)
#loc152 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":137:5)
#loc153 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":143:1)
#loc154 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":149:1)
#loc155 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":145:5)
#loc156 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":146:5)
#loc157 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":147:5)
#loc158 = loc("CWE401_Memory_Leak__new_int64_t_11.cpp":148:5)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc12, #loc11])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc14])
#loc168 = loc(fused[#loc18, #loc19])
#loc169 = loc(fused[#loc21, #loc19])
#loc170 = loc(fused[#loc24, #loc22])
#loc171 = loc(fused[#loc28, #loc29])
#loc172 = loc(fused[#loc30, #loc31])
#loc173 = loc(fused[#loc32, #loc29])
#loc174 = loc(fused[#loc33, #loc34])
#loc175 = loc(fused[#loc35, #loc36])
#loc176 = loc(fused[#loc38, #loc39])
#loc177 = loc(fused[#loc40, #loc41])
#loc178 = loc(fused[#loc42, #loc43])
#loc179 = loc(fused[#loc45, #loc44])
#loc180 = loc(fused[#loc46, #loc47])
#loc181 = loc(fused[#loc48, #loc49])
#loc182 = loc(fused[#loc50, #loc47])
#loc183 = loc(fused[#loc51, #loc52])
#loc184 = loc(fused[#loc54, #loc52])
#loc185 = loc(fused[#loc57, #loc55])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc65, #loc66, #loc67, #loc62])
#loc189 = loc(fused[#loc70, #loc71])
#loc190 = loc(fused[#loc72, #loc73])
#loc191 = loc(fused[#loc75, #loc74])
#loc192 = loc(fused[#loc76, #loc77])
#loc193 = loc(fused[#loc78, #loc79])
#loc194 = loc(fused[#loc80, #loc77])
#loc195 = loc(fused[#loc81, #loc82])
#loc196 = loc(fused[#loc84, #loc82])
#loc197 = loc(fused[#loc87, #loc85])
#loc198 = loc(fused[#loc91, #loc92])
#loc199 = loc(fused[#loc93, #loc94])
#loc200 = loc(fused[#loc95, #loc92])
#loc201 = loc(fused[#loc97, #loc98])
#loc202 = loc(fused[#loc99, #loc100])
#loc203 = loc(fused[#loc101, #loc102])
#loc204 = loc(fused[#loc104, #loc103])
#loc205 = loc(fused[#loc105, #loc106])
#loc206 = loc(fused[#loc107, #loc108])
#loc207 = loc(fused[#loc109, #loc110, #loc111, #loc106])
#loc208 = loc(fused[#loc114, #loc115])
#loc209 = loc(fused[#loc118, #loc116])
#loc210 = loc(fused[#loc122, #loc123])
#loc211 = loc(fused[#loc124, #loc125])
#loc212 = loc(fused[#loc126, #loc123])
#loc213 = loc(fused[#loc127, #loc128])
#loc214 = loc(fused[#loc129, #loc130])
#loc215 = loc(fused[#loc131, #loc132])
#loc216 = loc(fused[#loc134, #loc133])
#loc217 = loc(fused[#loc135, #loc136])
#loc218 = loc(fused[#loc137, #loc138])
#loc219 = loc(fused[#loc139, #loc136])
#loc220 = loc(fused[#loc140, #loc141])
#loc221 = loc(fused[#loc144, #loc142])
#loc222 = loc(fused[#loc148, #loc149])
#loc223 = loc(fused[#loc150, #loc151])
#loc224 = loc(fused[#loc152, #loc149])
#loc225 = loc(fused[#loc153, #loc154])
