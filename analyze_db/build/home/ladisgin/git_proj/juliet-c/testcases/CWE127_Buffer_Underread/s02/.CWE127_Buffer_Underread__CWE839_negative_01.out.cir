!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":109:10)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":109:14)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":109:20)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":109:32)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:23)
#true = #cir.bool<true> : !cir.bool
#loc137 = loc(fused[#loc47, #loc48])
#loc138 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc123)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc124)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc13)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc16)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    cir.br ^bb1 loc(#loc127)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc123)
    cir.store %6, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc123)
    cir.br ^bb2 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc23)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc129)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc130)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc28)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc28)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc29)
    cir.br ^bb5 loc(#loc25)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc7)
  } loc(#loc122)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc131)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc134)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE127_Buffer_Underread__CWE839_negative_01_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_negative_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE127_Buffer_Underread__CWE839_negative_01_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.return %17 : !s32i loc(#loc141)
  } loc(#loc136)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc144)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc72)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc74)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc143)
    cir.store %5, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc143)
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc81)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %8 ^bb3, ^bb4 loc(#loc150)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc86)
    %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc86)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc87)
    cir.br ^bb5 loc(#loc83)
  ^bb4:  // pred: ^bb2
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc88)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc79)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc77)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc66)
  } loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc90)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc98)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc101)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc152)
    cir.store %6, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc152)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %9 ^bb3, ^bb8 loc(#loc109)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc111)
    %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc109)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #true loc(#loc109)
    cir.br ^bb6(%13 : !cir.bool) loc(#loc109)
  ^bb5:  // pred: ^bb3
    %14 = cir.const #false loc(#loc109)
    cir.br ^bb6(%14 : !cir.bool) loc(#loc109)
  ^bb6(%15: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%15 : !cir.bool) loc(#loc109)
  ^bb8:  // pred: ^bb2
    %16 = cir.const #false loc(#loc109)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc109)
  ^bb9(%17: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc109)
  ^bb10:  // pred: ^bb9
    cir.brcond %17 ^bb11, ^bb12 loc(#loc160)
  ^bb11:  // pred: ^bb10
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc117)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc117)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc118)
    cir.br ^bb13 loc(#loc114)
  ^bb12:  // pred: ^bb10
    %22 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc90)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb13 loc(#loc106)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc106)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc104)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc92)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":39:23)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":22:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":42:1)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":30:9)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":30:30)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":24:5)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":24:9)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":26:13)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":26:12)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":26:5)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":28:13)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":28:12)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":28:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":29:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":41:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":33:9)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":40:9)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":33:13)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":33:20)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":34:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":36:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":38:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":35:33)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":35:26)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":35:13)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":39:13)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":94:1)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":98:1)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":96:5)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":96:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":97:5)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":97:13)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":114:15)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":116:15)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":119:15)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":121:15)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":109:1)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":124:1)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":110:1)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":112:27)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":112:22)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":112:5)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":114:5)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":115:5)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":115:54)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":116:5)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":119:5)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":120:5)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":120:53)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":121:5)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":123:12)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":123:5)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":49:1)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":70:1)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":58:9)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":58:30)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":51:5)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":51:9)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":53:13)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":53:12)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":53:5)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":56:12)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":56:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":57:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":69:5)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":61:9)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":68:9)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":61:13)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":61:20)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":62:9)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":64:9)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":66:9)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":63:33)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":63:26)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":63:13)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":67:23)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":67:13)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":89:23)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":73:1)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":92:1)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":81:9)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":81:30)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":75:5)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":75:9)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":77:13)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":77:12)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":77:5)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":79:13)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":79:12)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":79:5)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":80:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":91:5)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:9)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":90:9)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:13)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:21)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:26)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:34)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":83:36)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":84:9)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":86:9)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":88:9)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":85:33)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":85:26)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":85:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_01.c":89:13)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc6, #loc7])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc14, #loc12])
#loc126 = loc(fused[#loc17, #loc15])
#loc127 = loc(fused[#loc18, #loc19])
#loc128 = loc(fused[#loc20, #loc21])
#loc129 = loc(fused[#loc22, #loc23])
#loc130 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc131 = loc(fused[#loc31, #loc32])
#loc132 = loc(fused[#loc33, #loc34])
#loc133 = loc(fused[#loc35, #loc36])
#loc134 = loc(fused[#loc37, #loc38])
#loc135 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc45, #loc46])
#loc139 = loc(fused[#loc56, #loc57])
#loc140 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc64, #loc63])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc67, #loc68])
#loc144 = loc(fused[#loc69, #loc70])
#loc145 = loc(fused[#loc73, #loc71])
#loc146 = loc(fused[#loc75, #loc74])
#loc147 = loc(fused[#loc76, #loc77])
#loc148 = loc(fused[#loc78, #loc79])
#loc149 = loc(fused[#loc80, #loc81])
#loc150 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc99, #loc97])
#loc155 = loc(fused[#loc102, #loc100])
#loc156 = loc(fused[#loc103, #loc104])
#loc157 = loc(fused[#loc105, #loc106])
#loc158 = loc(fused[#loc107, #loc108])
#loc159 = loc(fused[#loc110, #loc112])
#loc160 = loc(fused[#loc113, #loc114, #loc115, #loc106])
