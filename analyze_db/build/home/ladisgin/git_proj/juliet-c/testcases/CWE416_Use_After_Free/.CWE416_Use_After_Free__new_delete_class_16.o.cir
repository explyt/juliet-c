!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_class_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc88)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc89)
  cir.func private @printIntLine(!s32i) loc(#loc90)
  cir.func @_ZN42CWE416_Use_After_Free__new_delete_class_163badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc93)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc16)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc95)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc18)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc96)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc27)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc19)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc99)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc99)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc31)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc31)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc34)
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc91)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_16L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc102)
    cir.br ^bb1 loc(#loc103)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc44)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc104)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc46)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc105)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc50)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc53)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc47)
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc57)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc58)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc56)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc37)
  } loc(#loc100)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_16L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc67)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc70)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc69)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc114)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc66)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc117)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %14 ^bb8, ^bb9 loc(#loc79)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc82)
    cir.br ^bb9 loc(#loc83)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc78)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc60)
  } loc(#loc109)
  cir.func @_ZN42CWE416_Use_After_Free__new_delete_class_164goodEv() extra(#fn_attr2) {
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_16L7goodB2GEv() : () -> () loc(#loc86)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_16L7goodG2BEv() : () -> () loc(#loc87)
    cir.return loc(#loc85)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_class_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":26:1)
#loc9 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":47:1)
#loc10 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":28:5)
#loc11 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":28:20)
#loc12 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":30:12)
#loc13 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":30:5)
#loc14 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":31:5)
#loc15 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":39:5)
#loc16 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":31:11)
#loc17 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":33:16)
#loc18 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":33:20)
#loc19 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":26:6)
#loc20 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":33:9)
#loc21 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":34:24)
#loc22 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":34:9)
#loc23 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc24 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":35:24)
#loc25 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":35:9)
#loc26 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc27 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":37:16)
#loc28 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":38:9)
#loc29 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":40:5)
#loc30 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":46:5)
#loc31 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":40:11)
#loc32 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":43:22)
#loc33 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":43:28)
#loc34 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":43:9)
#loc35 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":45:9)
#loc36 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":54:1)
#loc37 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":76:1)
#loc38 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":56:5)
#loc39 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":56:20)
#loc40 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":58:12)
#loc41 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":58:5)
#loc42 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":59:5)
#loc43 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":67:5)
#loc44 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":59:11)
#loc45 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":61:16)
#loc46 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":61:20)
#loc47 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":54:13)
#loc48 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":61:9)
#loc49 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":62:24)
#loc50 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":62:9)
#loc51 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":63:24)
#loc52 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":63:9)
#loc53 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":65:16)
#loc54 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":66:9)
#loc55 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":68:5)
#loc56 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":75:5)
#loc57 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":68:11)
#loc58 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":74:9)
#loc59 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":79:1)
#loc60 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":99:1)
#loc61 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":81:5)
#loc62 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":81:20)
#loc63 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":83:12)
#loc64 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":83:5)
#loc65 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":84:5)
#loc66 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":91:5)
#loc67 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":84:11)
#loc68 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":86:16)
#loc69 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":86:20)
#loc70 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":79:13)
#loc71 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":86:9)
#loc72 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":87:24)
#loc73 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":87:9)
#loc74 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":88:24)
#loc75 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":88:9)
#loc76 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":90:9)
#loc77 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":92:5)
#loc78 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":98:5)
#loc79 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":92:11)
#loc80 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":95:22)
#loc81 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":95:28)
#loc82 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":95:9)
#loc83 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":97:9)
#loc84 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":101:1)
#loc85 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":105:1)
#loc86 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":103:5)
#loc87 = loc("CWE416_Use_After_Free__new_delete_class_16.cpp":104:5)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc4, #loc5])
#loc90 = loc(fused[#loc6, #loc7])
#loc91 = loc(fused[#loc8, #loc9])
#loc92 = loc(fused[#loc10, #loc11])
#loc93 = loc(fused[#loc13, #loc12])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc17, #loc18])
#loc96 = loc(fused[#loc20, #loc18])
#loc97 = loc(fused[#loc22, #loc21])
#loc98 = loc(fused[#loc25, #loc24])
#loc99 = loc(fused[#loc29, #loc30])
#loc100 = loc(fused[#loc36, #loc37])
#loc101 = loc(fused[#loc38, #loc39])
#loc102 = loc(fused[#loc41, #loc40])
#loc103 = loc(fused[#loc42, #loc43])
#loc104 = loc(fused[#loc45, #loc46])
#loc105 = loc(fused[#loc48, #loc46])
#loc106 = loc(fused[#loc50, #loc49])
#loc107 = loc(fused[#loc52, #loc51])
#loc108 = loc(fused[#loc55, #loc56])
#loc109 = loc(fused[#loc59, #loc60])
#loc110 = loc(fused[#loc61, #loc62])
#loc111 = loc(fused[#loc64, #loc63])
#loc112 = loc(fused[#loc65, #loc66])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc71, #loc69])
#loc115 = loc(fused[#loc73, #loc72])
#loc116 = loc(fused[#loc75, #loc74])
#loc117 = loc(fused[#loc77, #loc78])
#loc118 = loc(fused[#loc84, #loc85])
