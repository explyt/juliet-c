!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__deref_after_check_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc75)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__deref_after_check_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc78)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc12)
    cir.br ^bb2 loc(#loc10)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc10)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc78)
    cir.br ^bb6 loc(#loc81)
  ^bb6:  // pred: ^bb5
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc19)
    %6 = cir.cmp(eq, %3, %5) : !cir.ptr<!s32i>, !cir.bool loc(#loc82)
    cir.brcond %6 ^bb7, ^bb8 loc(#loc83)
  ^bb7:  // pred: ^bb6
    %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc23)
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc15)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc24)
  ^bb11:  // pred: ^bb2
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc11)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc7)
  } loc(#loc77)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__deref_after_check_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"pointer is NULL\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc88)
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc40)
    cir.br ^bb2 loc(#loc38)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc38)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb12 loc(#loc44)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc90)
  ^bb6:  // pred: ^bb5
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc37)
    cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc88)
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // pred: ^bb6
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc50)
    %8 = cir.cmp(eq, %5, %7) : !cir.ptr<!s32i>, !cir.bool loc(#loc92)
    cir.brcond %8 ^bb8, ^bb9 loc(#loc93)
  ^bb8:  // pred: ^bb7
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc33)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb9 loc(#loc48)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc48)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc53)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc35)
  } loc(#loc87)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer", init] {alignment = 8 : i64} loc(#loc95)
    cir.br ^bb1 loc(#loc96)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc60)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc58)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc61)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc97)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc57)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc95)
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc67)
    %6 = cir.cmp(eq, %3, %5) : !cir.ptr<!s32i>, !cir.bool loc(#loc99)
    cir.brcond %6 ^bb7, ^bb8 loc(#loc100)
  ^bb7:  // pred: ^bb6
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc63)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc71)
  ^bb11:  // pred: ^bb2
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb12 loc(#loc74)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc59)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc55)
  } loc(#loc94)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":36:19)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":20:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":39:1)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":27:9)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":27:27)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":22:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":38:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":22:12)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":24:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":25:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":32:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":28:9)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":31:9)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":28:13)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":28:27)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":29:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":30:27)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":30:26)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":30:13)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":33:5)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":36:9)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":37:9)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":89:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":93:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":91:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":91:11)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":92:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":92:11)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":60:23)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":46:1)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":65:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":57:9)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":57:27)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":48:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":64:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":48:12)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":50:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":52:19)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":52:9)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":53:9)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":55:5)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":62:5)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":58:9)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":61:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":58:13)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":58:27)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":59:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":60:13)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":63:5)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":68:1)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":87:1)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":75:9)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":75:27)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":70:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":86:5)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":70:12)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":72:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":73:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":80:5)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":76:9)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":79:9)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":76:13)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":76:27)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":77:9)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":78:23)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":78:13)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":81:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":84:19)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":84:9)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__deref_after_check_15.c":85:9)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc6, #loc7])
#loc78 = loc(fused[#loc8, #loc9])
#loc79 = loc(fused[#loc10, #loc11])
#loc80 = loc(fused[#loc14, #loc15])
#loc81 = loc(fused[#loc16, #loc17])
#loc82 = loc(fused[#loc18, #loc19])
#loc83 = loc(fused[#loc20, #loc17])
#loc84 = loc(fused[#loc27, #loc28])
#loc85 = loc(fused[#loc29, #loc30])
#loc86 = loc(fused[#loc31, #loc32])
#loc87 = loc(fused[#loc34, #loc35])
#loc88 = loc(fused[#loc36, #loc37])
#loc89 = loc(fused[#loc38, #loc39])
#loc90 = loc(fused[#loc45, #loc46])
#loc91 = loc(fused[#loc47, #loc48])
#loc92 = loc(fused[#loc49, #loc50])
#loc93 = loc(fused[#loc51, #loc48])
#loc94 = loc(fused[#loc54, #loc55])
#loc95 = loc(fused[#loc56, #loc57])
#loc96 = loc(fused[#loc58, #loc59])
#loc97 = loc(fused[#loc62, #loc63])
#loc98 = loc(fused[#loc64, #loc65])
#loc99 = loc(fused[#loc66, #loc67])
#loc100 = loc(fused[#loc68, #loc65])
