!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":45:21)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":45:28)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":133:10)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":133:14)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":133:20)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":133:32)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":95:25)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":95:32)
#loc166 = loc(fused[#loc12, #loc13])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc109, #loc110])
#loc209 = loc(fused[#loc127, #loc128])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc161)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_popen_44_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc162)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc164)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc168)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %3 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc171)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
          %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
        } loc(#loc172)
      } loc(#loc170)
    } loc(#loc167)
    cir.return loc(#loc11)
  } loc(#loc165)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc173)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc35)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc175)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc177)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_popen_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc162)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc48)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc180)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_popen_44_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc183)
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc184)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc57)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc183)
      cir.scope {
        %13 = cir.const #cir.int<100> : !s32i loc(#loc61)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc61)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc62)
        %16 = cir.binop(sub, %14, %15) : !u64i loc(#loc186)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc63)
        %19 = cir.cmp(gt, %16, %18) : !u64i, !cir.bool loc(#loc187)
        cir.if %19 {
          %20 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc65)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc34)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
          %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc35)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc35)
          %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc65)
          cir.store %25, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
          cir.scope {
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc71)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc191)
            cir.if %29 {
              cir.scope {
                %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                %33 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                %35 = cir.const #cir.int<100> : !s32i loc(#loc78)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc78)
                %37 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc79)
                %38 = cir.binop(sub, %36, %37) : !u64i loc(#loc194)
                %39 = cir.cast(integral, %38 : !u64i), !s32i loc(#loc194)
                %40 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
                %41 = cir.call @fgets(%34, %39, %40) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc81)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
                %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
                %44 = cir.cmp(eq, %41, %43) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
                cir.if %44 {
                  %45 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
                  %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
                  cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc84)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc85)
                  %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc85)
                  %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
                  %50 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc87)
                  %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc88)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc197)
                } loc(#loc196)
              } loc(#loc193)
              %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
              %31 = cir.call @fclose(%30) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
            } loc(#loc192)
          } loc(#loc190)
        } loc(#loc188)
      } loc(#loc185)
    } loc(#loc182)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc91)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc91)
    cir.return loc(#loc44)
  } loc(#loc178)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_popen_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    cir.return loc(#loc94)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc104)
  cir.func @main(%arg0: !s32i loc(fused[#loc107, #loc108]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc109, #loc110])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc112)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc113)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc113)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc114)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc101)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_popen_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE78_OS_Command_Injection__char_file_popen_44_good() : () -> () loc(#loc116)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc103)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_popen_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE78_OS_Command_Injection__char_file_popen_44_bad() : () -> () loc(#loc120)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc104)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %17 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc127, #loc128])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc211)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
      %3 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc135)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc135)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc136)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc212)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc142)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc214)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc144)
          %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc145)
        } loc(#loc215)
      } loc(#loc213)
    } loc(#loc210)
    cir.return loc(#loc126)
  } loc(#loc208)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc148)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc161)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc154)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc219)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc157)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc148)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc148)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc157)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc159)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc159)
    cir.return loc(#loc150)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_popen_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":112:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":112:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":63:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":63:26)
#loc5 = loc("/usr/include/stdio.h":893:1)
#loc6 = loc("/usr/include/stdio.h":894:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":50:28)
#loc8 = loc("/usr/include/stdio.h":887:1)
#loc9 = loc("/usr/include/stdio.h":887:36)
#loc10 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":45:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":56:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":46:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":47:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":55:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":48:9)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":48:15)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":50:22)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":50:16)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":50:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":50:31)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":51:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":54:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":51:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":51:21)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":52:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":53:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":53:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/stdio.h":264:1)
#loc33 = loc("/usr/include/stdio.h":266:3)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":72:27)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":72:37)
#loc36 = loc("/usr/include/stdio.h":654:1)
#loc37 = loc("/usr/include/stdio.h":655:59)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":78:31)
#loc41 = loc("/usr/include/stdio.h":184:1)
#loc42 = loc("/usr/include/stdio.h":184:36)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":58:1)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":88:1)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":60:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":60:12)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":62:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":62:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":64:12)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":64:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":65:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":85:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":67:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":67:37)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":68:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":68:16)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":67:26)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":67:33)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":70:9)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":84:9)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":70:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":70:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":70:27)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":71:9)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":72:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":72:13)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":72:40)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":73:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":83:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":73:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":73:26)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":74:13)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":81:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:27)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:32)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:31)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:47)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:51)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:61)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":76:71)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":77:17)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":78:21)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":80:37)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":80:21)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":80:26)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":80:33)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":82:24)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":82:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":87:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":87:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":119:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":122:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":121:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":121:13)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":138:15)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":140:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":143:15)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":145:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":133:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":148:1)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":134:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":136:27)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":136:22)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":136:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":138:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":139:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":139:57)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":140:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":143:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":144:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":144:56)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":145:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":147:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":147:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":95:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":106:1)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":96:1)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":97:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":105:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":98:9)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":98:15)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":100:22)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":100:28)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":100:16)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":100:9)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":100:31)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":101:9)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":104:9)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":101:13)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":101:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":102:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":103:20)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":103:13)
#loc146 = loc("/usr/include/string.h":149:1)
#loc147 = loc("/usr/include/string.h":150:14)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":115:18)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":108:1)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":117:1)
#loc151 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":110:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":110:12)
#loc153 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":111:5)
#loc154 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":111:32)
#loc155 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":113:12)
#loc156 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":113:5)
#loc157 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":115:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":115:12)
#loc159 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":116:5)
#loc160 = loc("CWE78_OS_Command_Injection__char_file_popen_44.c":116:13)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc8, #loc9])
#loc165 = loc(fused[#loc10, #loc11])
#loc167 = loc(fused[#loc15, #loc16])
#loc168 = loc(fused[#loc17, #loc18])
#loc169 = loc(fused[#loc21, #loc22])
#loc170 = loc(fused[#loc23, #loc24])
#loc171 = loc(fused[#loc25, #loc26])
#loc172 = loc(fused[#loc27, #loc24])
#loc173 = loc(fused[#loc30, #loc31])
#loc174 = loc(fused[#loc32, #loc33])
#loc175 = loc(fused[#loc36, #loc37])
#loc176 = loc(fused[#loc38, #loc39])
#loc177 = loc(fused[#loc41, #loc42])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc47, #loc48])
#loc181 = loc(fused[#loc50, #loc49])
#loc182 = loc(fused[#loc51, #loc52])
#loc183 = loc(fused[#loc53, #loc54])
#loc184 = loc(fused[#loc55, #loc56])
#loc185 = loc(fused[#loc59, #loc60])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc61, #loc63])
#loc188 = loc(fused[#loc64, #loc60])
#loc189 = loc(fused[#loc66, #loc67])
#loc190 = loc(fused[#loc68, #loc69])
#loc191 = loc(fused[#loc70, #loc71])
#loc192 = loc(fused[#loc72, #loc69])
#loc193 = loc(fused[#loc73, #loc74])
#loc194 = loc(fused[#loc78, #loc79])
#loc195 = loc(fused[#loc81, #loc82])
#loc196 = loc(fused[#loc83, #loc74])
#loc197 = loc(fused[#loc86, #loc85])
#loc198 = loc(fused[#loc93, #loc94])
#loc199 = loc(fused[#loc95, #loc96])
#loc200 = loc(fused[#loc97, #loc98])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc105, #loc106])
#loc205 = loc(fused[#loc116, #loc117])
#loc206 = loc(fused[#loc120, #loc121])
#loc207 = loc(fused[#loc124, #loc123])
#loc208 = loc(fused[#loc125, #loc126])
#loc210 = loc(fused[#loc130, #loc131])
#loc211 = loc(fused[#loc132, #loc133])
#loc212 = loc(fused[#loc137, #loc138])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc141, #loc142])
#loc215 = loc(fused[#loc143, #loc140])
#loc216 = loc(fused[#loc146, #loc147])
#loc217 = loc(fused[#loc149, #loc150])
#loc218 = loc(fused[#loc151, #loc152])
#loc219 = loc(fused[#loc153, #loc154])
#loc220 = loc(fused[#loc156, #loc155])
