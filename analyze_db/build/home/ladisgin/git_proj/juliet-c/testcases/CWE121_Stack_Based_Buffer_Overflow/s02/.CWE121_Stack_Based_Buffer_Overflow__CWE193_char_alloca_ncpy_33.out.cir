!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":98:10)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":98:14)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":98:20)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":98:32)
#loc131 = loc(fused[#loc84, #loc85])
#loc132 = loc(fused[#loc86, #loc87])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc100)
  cir.global "private" constant cir_private @__const._ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_333badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc101)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc103)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc101)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc108)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc109)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc18)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc20)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc20)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc20)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc20)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc110)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc22)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc22)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc22)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc22)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc22)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc22)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc22)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %22, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %23 = cir.const #cir.int<0> : !s8i loc(#loc25)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc28)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc112)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb2 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %29 = cir.get_global @__const._ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_333badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
    cir.copy %29 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
    %30 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc33)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc38)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc115)
    %39 = cir.call @strncpy(%31, %32, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb3 loc(#loc32)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc12)
  } loc(#loc105)
  cir.func internal private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc100)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc119)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc120)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc50)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc50)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc50)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc50)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc50)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc52)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc52)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc52)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc52)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc52)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.store %22, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %23 = cir.const #cir.int<0> : !s8i loc(#loc55)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc58)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %29 = cir.get_global @__const._ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc100)
    cir.copy %29 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc100)
    %30 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc63)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %32 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc65)
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc66)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc66)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc68)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc126)
    %39 = cir.call @strncpy(%31, %32, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc42)
  } loc(#loc116)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33L7goodG2BEv() : () -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc127)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc128)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_334goodEv() : () -> () loc(#loc93)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_333badEv() : () -> () loc(#loc96)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %15 : !s32i loc(#loc133)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":71:13)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":71:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":44:13)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":44:33)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":31:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":51:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":42:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":42:23)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":33:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":34:23)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":35:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":35:36)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":36:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":36:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":39:12)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":39:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":40:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":40:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":40:10)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":40:11)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":41:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":50:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":43:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":49:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":47:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":47:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":47:27)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":47:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":47:42)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":47:52)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":48:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":48:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":58:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":78:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":69:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":69:23)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":60:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":60:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":61:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":61:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":62:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":62:36)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":63:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":63:37)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":66:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":66:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":67:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":67:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":67:10)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":67:11)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":68:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":77:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":70:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":76:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":74:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":74:21)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":74:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":74:35)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":74:42)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":74:52)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":75:23)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":75:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":80:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":83:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":82:5)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":103:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":105:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":108:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":110:15)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":98:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":113:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":99:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":101:27)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":101:22)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":101:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":103:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":104:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":105:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":108:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":109:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":110:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":112:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_33.cpp":112:5)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc5, #loc6])
#loc103 = loc(fused[#loc7, #loc8])
#loc104 = loc(fused[#loc9, #loc10])
#loc105 = loc(fused[#loc11, #loc12])
#loc106 = loc(fused[#loc13, #loc14])
#loc107 = loc(fused[#loc15, #loc16])
#loc108 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc19, #loc20])
#loc110 = loc(fused[#loc21, #loc22])
#loc111 = loc(fused[#loc24, #loc23])
#loc112 = loc(fused[#loc26, #loc25])
#loc113 = loc(fused[#loc29, #loc30])
#loc114 = loc(fused[#loc31, #loc32])
#loc115 = loc(fused[#loc36, #loc38])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc43, #loc44])
#loc118 = loc(fused[#loc45, #loc46])
#loc119 = loc(fused[#loc47, #loc48])
#loc120 = loc(fused[#loc49, #loc50])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc54, #loc53])
#loc123 = loc(fused[#loc56, #loc55])
#loc124 = loc(fused[#loc59, #loc60])
#loc125 = loc(fused[#loc61, #loc62])
#loc126 = loc(fused[#loc66, #loc68])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc82, #loc83])
#loc133 = loc(fused[#loc99, #loc98])
