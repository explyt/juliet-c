!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":53:25)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":53:32)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":85:29)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":85:36)
#loc97 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc91)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execlp_42_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc92)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc99)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc13)
    cir.store %arg0, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc23)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %6 = cir.call @strlen(%5) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc23)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc98)
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
    %9 = cir.call @getenv(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc25)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc102)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc103)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc31)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc34)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc36)
    %21 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc104)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc38)
    %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc105)
    %26 = cir.call @strncat(%17, %18, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %27, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.return %28 : !cir.ptr<!s8i> loc(#loc106)
  } loc(#loc96)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc92)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execlp_42_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc52)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc43)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc55)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc55)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
    %14 = cir.call @execlp(%7, %9, %11, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.return loc(#loc46)
  } loc(#loc108)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc112)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc65)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc68, #loc69])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc67)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc71)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc65)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc65)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc71)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc117)
  } loc(#loc115)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc91)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc82)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %14 = cir.call @execlp(%7, %9, %11, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc90)
    cir.return loc(#loc76)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_42.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":96:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":96:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":72:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":72:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdlib.h":773:1)
#loc8 = loc("/usr/include/stdlib.h":773:50)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":58:37)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":53:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":67:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":57:9)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":57:37)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":58:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":58:49)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":54:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":55:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":65:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":57:26)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":57:33)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":58:30)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":60:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":64:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":60:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":60:28)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":61:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:21)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:26)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:25)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:35)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:48)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:52)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":63:60)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":66:12)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":66:5)
#loc41 = loc("/usr/include/unistd.h":605:1)
#loc42 = loc("/usr/include/unistd.h":606:14)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":78:12)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":78:38)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":69:1)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":79:1)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":71:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":71:12)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":73:12)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":73:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":74:22)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":74:12)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":74:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":74:26)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":78:25)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":78:52)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":78:66)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":78:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":105:1)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":108:1)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":107:5)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":107:13)
#loc63 = loc("/usr/include/string.h":149:1)
#loc64 = loc("/usr/include/string.h":150:14)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":88:18)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":85:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":90:1)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":86:1)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":88:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":88:12)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":89:12)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":89:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":93:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":103:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":95:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":95:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":97:12)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":97:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":98:26)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":98:12)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":98:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":98:30)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":102:12)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":102:25)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":102:38)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":102:52)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":102:66)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_42.c":102:5)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc98 = loc(fused[#loc16, #loc17])
#loc99 = loc(fused[#loc18, #loc19])
#loc100 = loc(fused[#loc21, #loc22])
#loc101 = loc(fused[#loc26, #loc27])
#loc102 = loc(fused[#loc28, #loc29])
#loc103 = loc(fused[#loc30, #loc27])
#loc104 = loc(fused[#loc36, #loc37])
#loc105 = loc(fused[#loc36, #loc38])
#loc106 = loc(fused[#loc40, #loc39])
#loc107 = loc(fused[#loc41, #loc42])
#loc108 = loc(fused[#loc45, #loc46])
#loc109 = loc(fused[#loc47, #loc48])
#loc110 = loc(fused[#loc50, #loc49])
#loc111 = loc(fused[#loc53, #loc54])
#loc112 = loc(fused[#loc59, #loc60])
#loc113 = loc(fused[#loc61, #loc62])
#loc114 = loc(fused[#loc63, #loc64])
#loc115 = loc(fused[#loc66, #loc67])
#loc117 = loc(fused[#loc74, #loc73])
#loc118 = loc(fused[#loc75, #loc76])
#loc119 = loc(fused[#loc77, #loc78])
#loc120 = loc(fused[#loc80, #loc79])
#loc121 = loc(fused[#loc83, #loc84])
