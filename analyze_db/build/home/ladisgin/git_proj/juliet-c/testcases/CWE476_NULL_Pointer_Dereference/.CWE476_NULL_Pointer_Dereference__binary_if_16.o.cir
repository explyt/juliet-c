!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:48)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc54)
    cir.br ^bb1 loc(#loc55)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc55)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %2 ^bb3, ^bb10 loc(#loc10)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc56)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc54)
    cir.br ^bb5 loc(#loc57)
  ^bb5:  // pred: ^bb4
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc16)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc58)
    %8 = cir.cast(bool_to_int, %7 : !cir.bool), !s32i loc(#loc58)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc20)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc59)
    %14 = cir.cast(bool_to_int, %13 : !cir.bool), !s32i loc(#loc59)
    %15 = cir.binop(and, %8, %14) : !s32i loc(#loc60)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc61)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc12)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc9)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc5)
  } loc(#loc53)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc63)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc62)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc65)
    cir.br ^bb1 loc(#loc66)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc66)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %2 ^bb3, ^bb18 loc(#loc37)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // pred: ^bb3
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc65)
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // pred: ^bb4
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc69)
    cir.brcond %7 ^bb6, ^bb11 loc(#loc44)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc70)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc44)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #true loc(#loc44)
    cir.br ^bb9(%13 : !cir.bool) loc(#loc44)
  ^bb8:  // pred: ^bb6
    %14 = cir.const #false loc(#loc44)
    cir.br ^bb9(%14 : !cir.bool) loc(#loc44)
  ^bb9(%15: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:48)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%15 : !cir.bool) loc(#loc44)
  ^bb11:  // pred: ^bb5
    %16 = cir.const #false loc(#loc44)
    cir.br ^bb12(%16 : !cir.bool) loc(#loc44)
  ^bb12(%17: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:48)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    cir.brcond %17 ^bb14, ^bb15 loc(#loc71)
  ^bb14:  // pred: ^bb13
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc49)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb15 loc(#loc41)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc41)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc39)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc51)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc36)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc32)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":30:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":20:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":35:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":25:13)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":25:51)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":22:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":34:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":22:11)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":24:9)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":32:9)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:13)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":31:13)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:18)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:42)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:51)
#loc18 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:73)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:83)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:17)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:84)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:48)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":29:13)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":30:17)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":33:9)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":59:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":62:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":61:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":61:11)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":42:1)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":57:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":47:13)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":47:51)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":44:5)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":56:5)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":44:11)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":46:9)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":54:9)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:13)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":53:13)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:18)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:42)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:52)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:74)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:84)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":51:13)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":52:27)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":52:17)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":55:9)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc4, #loc5])
#loc54 = loc(fused[#loc6, #loc7])
#loc55 = loc(fused[#loc8, #loc9])
#loc56 = loc(fused[#loc11, #loc12])
#loc57 = loc(fused[#loc13, #loc14])
#loc58 = loc(fused[#loc15, #loc16])
#loc59 = loc(fused[#loc17, #loc20])
#loc60 = loc(fused[#loc21, #loc22])
#loc61 = loc(fused[#loc24, #loc14])
#loc62 = loc(fused[#loc27, #loc28])
#loc63 = loc(fused[#loc29, #loc30])
#loc64 = loc(fused[#loc31, #loc32])
#loc65 = loc(fused[#loc33, #loc34])
#loc66 = loc(fused[#loc35, #loc36])
#loc67 = loc(fused[#loc38, #loc39])
#loc68 = loc(fused[#loc40, #loc41])
#loc69 = loc(fused[#loc42, #loc43])
#loc70 = loc(fused[#loc45, #loc47])
#loc71 = loc(fused[#loc48, #loc41])
