!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:21)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:25)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:25)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:29)
#loc141 = loc(fused[#loc7, #loc8])
#loc172 = loc(fused[#loc85, #loc86])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc138)
  cir.func private @printIntLine(!s32i) loc(#loc139)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7badSinkEi(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc141)
    cir.store %arg0, %3 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc17)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc146)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc147)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc21)
    %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc149)
    cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    cir.br ^bb2 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
    %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc153)
    cir.brcond %17 ^bb4, ^bb8 loc(#loc153)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc36)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc38)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb3 loc(#loc151)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc42)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    cir.delete.array %28 : <!s32i> loc(#loc43)
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc140)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_443badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc163)
    %2 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc164)
    %3 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7badSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc60)
    cir.store %3, %2 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc164)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc62)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc162)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc162)
    cir.br ^bb2 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc68)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc69)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc69)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc69)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc69)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc69)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc69)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc69)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc71)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc169)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc77)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb5 loc(#loc74)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb5 loc(#loc67)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc81)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call %25(%26) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc81)
    cir.return loc(#loc54)
  } loc(#loc161)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L11goodG2BSinkEi(%arg0: !s32i loc(fused[#loc85, #loc86])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc175)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %3 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc95)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc177)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc178)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc100)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc180)
    cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc106)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    cir.br ^bb3 loc(#loc182)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc109)
    %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc184)
    cir.brcond %17 ^bb4, ^bb8 loc(#loc184)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc114)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc116)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb3 loc(#loc182)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc105)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc119)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc120)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    cir.delete.array %28 : <!s32i> loc(#loc121)
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc84)
  } loc(#loc171)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L11goodG2BSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc127)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc190)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc129)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc131)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc133)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc133)
    cir.return loc(#loc123)
  } loc(#loc188)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_444goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7goodG2BEv() : () -> () loc(#loc137)
    cir.return loc(#loc136)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":41:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":29:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":29:16)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":29:26)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":30:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":30:14)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":27:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":28:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":40:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:21)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:28)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:38)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:37)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:28)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:46)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":37:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:18)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:14)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:21)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:33)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":35:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:29)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:24)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:25)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:40)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:39)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:22)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:34)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":39:19)
#loc44 = loc("/usr/include/stdio.h":654:1)
#loc45 = loc("/usr/include/stdio.h":655:59)
#loc46 = loc("/usr/include/stdio.h":149:1)
#loc47 = loc("/usr/include/stdio.h":149:14)
#loc48 = loc("/usr/include/stdlib.h":105:1)
#loc49 = loc("/usr/include/stdlib.h":106:33)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":60:23)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":43:1)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":65:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":51:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":51:45)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":45:5)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":45:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":47:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":47:29)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":49:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":49:12)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":49:5)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":50:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":62:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":61:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:19)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:32)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:49)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:59)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":54:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":57:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":59:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:25)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:20)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:36)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":60:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":64:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":64:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:1)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":87:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":75:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":75:16)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":75:26)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":76:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":76:14)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":73:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":74:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":86:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:28)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:38)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:37)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:28)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:46)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":83:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:18)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:14)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:33)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":81:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:29)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:24)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:25)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:40)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:39)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:22)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:34)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":85:19)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":89:1)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":98:1)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":91:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":91:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":92:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":92:29)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":94:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":94:12)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":94:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":96:12)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":96:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":97:5)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":97:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":100:1)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":103:1)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":102:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc9, #loc11])
#loc144 = loc(fused[#loc12, #loc13])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc17, #loc19])
#loc148 = loc(fused[#loc20, #loc19])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc24])
#loc151 = loc(fused[#loc26, #loc27])
#loc152 = loc(fused[#loc29, #loc28])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc32, #loc27])
#loc155 = loc(fused[#loc34, #loc33])
#loc156 = loc(fused[#loc38, #loc37])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc55, #loc56])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc59, #loc60])
#loc165 = loc(fused[#loc63, #loc61])
#loc166 = loc(fused[#loc64, #loc65])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc73, #loc74, #loc75, #loc67])
#loc170 = loc(fused[#loc78, #loc79])
#loc171 = loc(fused[#loc83, #loc84])
#loc173 = loc(fused[#loc87, #loc88])
#loc174 = loc(fused[#loc87, #loc89])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc96, #loc97])
#loc178 = loc(fused[#loc95, #loc97])
#loc179 = loc(fused[#loc98, #loc97])
#loc180 = loc(fused[#loc101, #loc102])
#loc181 = loc(fused[#loc103, #loc102])
#loc182 = loc(fused[#loc104, #loc105])
#loc183 = loc(fused[#loc107, #loc106])
#loc184 = loc(fused[#loc108, #loc109])
#loc185 = loc(fused[#loc110, #loc105])
#loc186 = loc(fused[#loc112, #loc111])
#loc187 = loc(fused[#loc116, #loc115])
#loc188 = loc(fused[#loc122, #loc123])
#loc189 = loc(fused[#loc124, #loc125])
#loc190 = loc(fused[#loc126, #loc127])
#loc191 = loc(fused[#loc130, #loc128])
#loc192 = loc(fused[#loc132, #loc131])
#loc193 = loc(fused[#loc135, #loc136])
