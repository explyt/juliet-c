!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc134)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc19)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
          %6 = cir.const #cir.int<65> : !s32i loc(#loc22)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc23)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc23)
          cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc27)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc27)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc30)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc29)
          %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc31)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc142)
          cir.break loc(#loc32)
        } loc(#loc20)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          cir.break loc(#loc35)
        } loc(#loc33)
        cir.yield loc(#loc17)
      } loc(#loc17)
    } loc(#loc140)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc144)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc144)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc144)
      %5 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc40)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc41)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %13 = cir.call @snprintf(%6, %9, %11, %12) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc143)
    cir.return loc(#loc10)
  } loc(#loc136)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc147)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc150)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc63)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc66)
          cir.break loc(#loc67)
        } loc(#loc64)
        cir.case(default, []) {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
          %6 = cir.const #cir.int<65> : !s32i loc(#loc70)
          %7 = cir.const #cir.int<50> : !s32i loc(#loc71)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc72)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc71)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc71)
          cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc75)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
          %14 = cir.const #cir.int<50> : !s32i loc(#loc77)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc78)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc77)
          %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc79)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc154)
          cir.break loc(#loc80)
        } loc(#loc68)
        cir.yield loc(#loc61)
      } loc(#loc61)
    } loc(#loc152)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc156)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc156)
      %5 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc85)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc86)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc87)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc87)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc89)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc89)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %13 = cir.call @snprintf(%6, %9, %11, %12) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    } loc(#loc155)
    cir.return loc(#loc54)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc103)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          %6 = cir.const #cir.int<65> : !s32i loc(#loc106)
          %7 = cir.const #cir.int<50> : !s32i loc(#loc107)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc108)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc107)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc107)
          cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc111)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          %14 = cir.const #cir.int<50> : !s32i loc(#loc113)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc114)
          %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc113)
          %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc115)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc163)
          cir.break loc(#loc116)
        } loc(#loc104)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          cir.break loc(#loc120)
        } loc(#loc117)
        cir.yield loc(#loc101)
      } loc(#loc101)
    } loc(#loc161)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc165)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc165)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc165)
      %5 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc125)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc126)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc127)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc127)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc129)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc129)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %13 = cir.call @snprintf(%6, %9, %11, %12) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc125)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    } loc(#loc164)
    cir.return loc(#loc94)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":43:19)
#loc4 = loc("/usr/include/stdio.h":385:1)
#loc5 = loc("/usr/include/stdio.h":387:62)
#loc6 = loc("/usr/include/string.h":407:1)
#loc7 = loc("/usr/include/string.h":408:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":49:38)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":29:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":52:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":32:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":33:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":33:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":45:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":34:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":38:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":38:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":38:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":38:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":38:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":39:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":39:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":39:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":39:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":39:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":40:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":41:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":43:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":44:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":46:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":51:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":47:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":47:25)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":49:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":49:18)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":49:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":49:31)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":49:44)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":50:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":50:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":110:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":114:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":112:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":112:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":113:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":113:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":59:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":82:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":61:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":61:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":62:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":62:24)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":63:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":63:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":64:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":75:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":64:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":66:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":68:19)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":68:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":69:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":70:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":72:16)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":72:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":72:27)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":72:30)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":72:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":72:31)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":73:22)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":73:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":73:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":73:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":73:18)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":74:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":76:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":81:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":77:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":77:25)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":79:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":79:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":79:24)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":79:31)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":79:38)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":79:44)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":80:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":80:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":85:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":108:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":87:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":87:12)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":88:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":88:24)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":89:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":89:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":90:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":101:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":90:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":92:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":94:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":94:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":94:27)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":94:30)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":94:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":94:31)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":95:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":95:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":95:14)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":95:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":95:18)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":96:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":97:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":99:19)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":99:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":100:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":102:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":107:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":103:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":103:25)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":105:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":105:18)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":105:24)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":105:31)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":105:38)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":105:44)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":106:19)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_15.c":106:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc4, #loc5])
#loc135 = loc(fused[#loc6, #loc7])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc16, #loc15])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc25, #loc26])
#loc142 = loc(fused[#loc28, #loc27])
#loc143 = loc(fused[#loc36, #loc37])
#loc144 = loc(fused[#loc38, #loc39])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc49, #loc50])
#loc147 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc53, #loc54])
#loc149 = loc(fused[#loc55, #loc56])
#loc150 = loc(fused[#loc57, #loc58])
#loc151 = loc(fused[#loc60, #loc59])
#loc152 = loc(fused[#loc61, #loc62])
#loc153 = loc(fused[#loc73, #loc74])
#loc154 = loc(fused[#loc76, #loc75])
#loc155 = loc(fused[#loc81, #loc82])
#loc156 = loc(fused[#loc83, #loc84])
#loc157 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc98])
#loc160 = loc(fused[#loc100, #loc99])
#loc161 = loc(fused[#loc101, #loc102])
#loc162 = loc(fused[#loc109, #loc110])
#loc163 = loc(fused[#loc112, #loc111])
#loc164 = loc(fused[#loc121, #loc122])
#loc165 = loc(fused[#loc123, #loc124])
