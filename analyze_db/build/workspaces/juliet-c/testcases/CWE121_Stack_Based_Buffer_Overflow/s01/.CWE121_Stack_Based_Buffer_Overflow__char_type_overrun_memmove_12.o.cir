!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__charVoid = !cir.record<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc157)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc157)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc10)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc10)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc160)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc3)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc161)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc21)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc23)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc163)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc27)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc27)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
          %18 = cir.const #cir.int<32> : !u64i loc(#loc164)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc165)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc32)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc166)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc167)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc168)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc37)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc169)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc40)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc170)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc43)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc44)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc46)
        } loc(#loc159)
      } else {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc174)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc51)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc51)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc175)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc53)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc58)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc58)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc178)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc179)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc63)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc180)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc181)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc182)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc68)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc68)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc183)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc71)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc184)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc185)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc74)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc75)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc77)
        } loc(#loc173)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc7)
  } loc(#loc155)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc80)
    cir.return loc(#loc79)
  } loc(#loc187)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc191)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc191)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc86)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc86)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc194)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc95)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc95)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc195)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc97)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc196)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc197)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc197)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc102)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc102)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc198)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc199)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc107)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc200)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc201)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc202)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc112)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc203)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc115)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc204)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc205)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc119)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc121)
        } loc(#loc193)
      } else {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc208)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc126)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc126)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc209)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc128)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc210)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc211)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc133)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc133)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc212)
          cir.libc.memmove %18 bytes from %17 to %14 : !cir.ptr<!void>, !u64i loc(#loc213)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc138)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc138)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc214)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc215)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc216)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc143)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc143)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc217)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc146)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc218)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc219)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc150)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        } loc(#loc207)
      } loc(#loc192)
    } loc(#loc190)
    cir.return loc(#loc83)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":40:49)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":64:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":63:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":36:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":36:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":37:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":49:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":51:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":38:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":48:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":39:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":39:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":28:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":40:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":42:46)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":42:31)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":42:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":27:10)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:21)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:36)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:47)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:56)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:77)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":44:78)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:91)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:39)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:70)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:72)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:83)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:86)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":45:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":46:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":46:46)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":46:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":47:46)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":47:31)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":47:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":52:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":62:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":53:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":53:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":54:49)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":54:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":56:46)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":56:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":56:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:21)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:36)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:47)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:56)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:87)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":58:88)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:91)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:39)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:70)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:72)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:83)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:86)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":59:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":60:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":60:46)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":60:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":61:46)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":61:31)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":61:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":103:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":106:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":105:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":105:11)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":71:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":101:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":73:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":100:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":73:8)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":73:33)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":74:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":86:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":88:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":75:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":85:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":76:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":76:22)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":77:49)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":77:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":79:46)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":79:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":79:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:21)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:36)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:47)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:56)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:87)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":81:88)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:91)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:39)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:70)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:72)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:83)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:86)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:38)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":82:28)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":83:31)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":83:46)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":83:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":84:46)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":84:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":84:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":89:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":99:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":90:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":90:22)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":91:49)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":91:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":93:46)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":93:31)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":93:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:21)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:36)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:47)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:56)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:87)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":95:88)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:91)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:39)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:70)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:72)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:83)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:86)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:38)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":96:28)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":97:31)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":97:46)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":97:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":98:46)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":98:31)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_12.c":98:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc4, #loc5])
#loc155 = loc(fused[#loc6, #loc7])
#loc156 = loc(fused[#loc8, #loc9])
#loc157 = loc(fused[#loc10, #loc11])
#loc158 = loc(fused[#loc12, #loc13, #loc14, #loc9])
#loc159 = loc(fused[#loc15, #loc16])
#loc160 = loc(fused[#loc17, #loc18])
#loc161 = loc(fused[#loc20, #loc3])
#loc162 = loc(fused[#loc22, #loc21])
#loc163 = loc(fused[#loc25, #loc26])
#loc164 = loc(fused[#loc28, #loc29])
#loc165 = loc(fused[#loc30, #loc31])
#loc166 = loc(fused[#loc33, #loc34])
#loc167 = loc(fused[#loc35, #loc36])
#loc168 = loc(fused[#loc33, #loc36])
#loc169 = loc(fused[#loc38, #loc37])
#loc170 = loc(fused[#loc39, #loc32])
#loc171 = loc(fused[#loc41, #loc42])
#loc172 = loc(fused[#loc45, #loc44])
#loc173 = loc(fused[#loc47, #loc48])
#loc174 = loc(fused[#loc49, #loc50])
#loc175 = loc(fused[#loc52, #loc51])
#loc176 = loc(fused[#loc54, #loc53])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc61, #loc62])
#loc180 = loc(fused[#loc64, #loc65])
#loc181 = loc(fused[#loc66, #loc67])
#loc182 = loc(fused[#loc64, #loc67])
#loc183 = loc(fused[#loc69, #loc68])
#loc184 = loc(fused[#loc70, #loc63])
#loc185 = loc(fused[#loc72, #loc73])
#loc186 = loc(fused[#loc76, #loc75])
#loc187 = loc(fused[#loc78, #loc79])
#loc188 = loc(fused[#loc80, #loc81])
#loc189 = loc(fused[#loc82, #loc83])
#loc190 = loc(fused[#loc84, #loc85])
#loc191 = loc(fused[#loc86, #loc87])
#loc192 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc193 = loc(fused[#loc91, #loc92])
#loc194 = loc(fused[#loc93, #loc94])
#loc195 = loc(fused[#loc96, #loc95])
#loc196 = loc(fused[#loc98, #loc97])
#loc197 = loc(fused[#loc100, #loc101])
#loc198 = loc(fused[#loc103, #loc104])
#loc199 = loc(fused[#loc105, #loc106])
#loc200 = loc(fused[#loc108, #loc109])
#loc201 = loc(fused[#loc110, #loc111])
#loc202 = loc(fused[#loc108, #loc111])
#loc203 = loc(fused[#loc113, #loc112])
#loc204 = loc(fused[#loc114, #loc107])
#loc205 = loc(fused[#loc116, #loc117])
#loc206 = loc(fused[#loc120, #loc119])
#loc207 = loc(fused[#loc122, #loc123])
#loc208 = loc(fused[#loc124, #loc125])
#loc209 = loc(fused[#loc127, #loc126])
#loc210 = loc(fused[#loc129, #loc128])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc134, #loc135])
#loc213 = loc(fused[#loc136, #loc137])
#loc214 = loc(fused[#loc139, #loc140])
#loc215 = loc(fused[#loc141, #loc142])
#loc216 = loc(fused[#loc139, #loc142])
#loc217 = loc(fused[#loc144, #loc143])
#loc218 = loc(fused[#loc145, #loc138])
#loc219 = loc(fused[#loc147, #loc148])
#loc220 = loc(fused[#loc151, #loc150])
