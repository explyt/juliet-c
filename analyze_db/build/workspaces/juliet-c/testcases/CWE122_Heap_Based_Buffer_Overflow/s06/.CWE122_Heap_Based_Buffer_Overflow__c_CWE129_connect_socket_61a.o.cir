!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61b_badSource(!s32i) -> !s32i loc(#loc243)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc244)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc245)
  cir.func private @printIntLine(!s32i) loc(#loc246)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc11)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc248)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %4 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61b_badSource(%3) : (!s32i) -> !s32i loc(#loc22)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc254)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc255)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc31)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc32)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc32)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc256)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc257)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc255)
      cir.scope {
        %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc38)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc260)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc40)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc42)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
        } loc(#loc261)
      } loc(#loc259)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc45)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc263)
        cir.for : cond {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc48)
          %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc264)
          cir.condition(%20) loc(#loc49)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
            %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc54)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc266)
          } loc(#loc265)
          cir.yield loc(#loc44)
        } step {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc56)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc267)
          cir.yield loc(#loc262)
        } loc(#loc262)
      } loc(#loc262)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc269)
        cir.if %19 {
          %20 = cir.const #cir.int<1> : !s32i loc(#loc64)
          %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc67)
          cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc271)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc70)
            cir.store %24, %5 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            cir.for : cond {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %26 = cir.const #cir.int<10> : !s32i loc(#loc73)
              %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc274)
              cir.condition(%27) loc(#loc74)
            } body {
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
                %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc78)
                %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc79)
              } loc(#loc275)
              cir.yield loc(#loc69)
            } step {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc80)
              %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc81)
              cir.store %26, %5 : !s32i, !cir.ptr<!s32i> loc(#loc276)
              cir.yield loc(#loc272)
            } loc(#loc272)
          } loc(#loc272)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc11)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        } loc(#loc270)
      } loc(#loc268)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc83)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc84)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    } loc(#loc253)
    cir.return loc(#loc15)
  } loc(#loc249)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc278)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc279)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc89)
    cir.return loc(#loc86)
  } loc(#loc277)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61b_goodG2BSource(!s32i) -> !s32i loc(#loc280)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc282)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc98)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %4 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61b_goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc101)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc286)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc287)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc110)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc111)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc111)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc288)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc289)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc290)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc287)
      cir.scope {
        %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc117)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc292)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc119)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc120)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc121)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
        } loc(#loc293)
      } loc(#loc291)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc124)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc295)
        cir.for : cond {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc127)
          %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc296)
          cir.condition(%20) loc(#loc128)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc130)
            %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
            %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc133)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc298)
          } loc(#loc297)
          cir.yield loc(#loc123)
        } step {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
          %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc135)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc299)
          cir.yield loc(#loc294)
        } loc(#loc294)
      } loc(#loc294)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc139)
        %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc301)
        cir.if %19 {
          %20 = cir.const #cir.int<1> : !s32i loc(#loc143)
          %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc146)
          cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc149)
            cir.store %24, %5 : !s32i, !cir.ptr<!s32i> loc(#loc305)
            cir.for : cond {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %26 = cir.const #cir.int<10> : !s32i loc(#loc152)
              %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc306)
              cir.condition(%27) loc(#loc153)
            } body {
              cir.scope {
                %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
                %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc157)
                %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc158)
              } loc(#loc307)
              cir.yield loc(#loc148)
            } step {
              %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc159)
              %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc160)
              cir.store %26, %5 : !s32i, !cir.ptr<!s32i> loc(#loc308)
              cir.yield loc(#loc304)
            } loc(#loc304)
          } loc(#loc304)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc161)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc161)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc162)
        } loc(#loc302)
      } loc(#loc300)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc163)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc164)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc163)
    } loc(#loc285)
    cir.return loc(#loc94)
  } loc(#loc281)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61b_goodB2GSource(!s32i) -> !s32i loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc167)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc173)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %4 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61b_goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc176)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc315)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc316)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc185)
      %8 = cir.const #cir.int<10> : !s32i loc(#loc186)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc186)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc317)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc318)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc319)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc316)
      cir.scope {
        %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc192)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc192)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc321)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc194)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc195)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc196)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc194)
        } loc(#loc322)
      } loc(#loc320)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc199)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc324)
        cir.for : cond {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc201)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc202)
          %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc325)
          cir.condition(%20) loc(#loc203)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc205)
            %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
            %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc208)
            cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc327)
          } loc(#loc326)
          cir.yield loc(#loc198)
        } step {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc209)
          %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc210)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc328)
          cir.yield loc(#loc323)
        } loc(#loc323)
      } loc(#loc323)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc214)
        %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc330)
        %20 = cir.ternary(%19, true {
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
          %22 = cir.const #cir.int<10> : !s32i loc(#loc217)
          %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc331)
          %24 = cir.ternary(%23, true {
            %25 = cir.const #true loc(#loc215)
            cir.yield %25 : !cir.bool loc(#loc215)
          }, false {
            %25 = cir.const #false loc(#loc215)
            cir.yield %25 : !cir.bool loc(#loc215)
          }) : (!cir.bool) -> !cir.bool loc(#loc215)
          cir.yield %24 : !cir.bool loc(#loc215)
        }, false {
          %21 = cir.const #false loc(#loc215)
          cir.yield %21 : !cir.bool loc(#loc215)
        }) : (!cir.bool) -> !cir.bool loc(#loc215)
        cir.if %20 {
          %21 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
          %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc225)
          cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc333)
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc228)
            cir.store %25, %5 : !s32i, !cir.ptr<!s32i> loc(#loc335)
            cir.for : cond {
              %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc230)
              %27 = cir.const #cir.int<10> : !s32i loc(#loc231)
              %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc336)
              cir.condition(%28) loc(#loc232)
            } body {
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
                %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc236)
                %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc237)
              } loc(#loc337)
              cir.yield loc(#loc227)
            } step {
              %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc238)
              %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc239)
              cir.store %27, %5 : !s32i, !cir.ptr<!s32i> loc(#loc338)
              cir.yield loc(#loc334)
            } loc(#loc334)
          } loc(#loc334)
        } else {
          %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc167)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc167)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc240)
        } loc(#loc332)
      } loc(#loc329)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc241)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc242)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc242)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc241)
    } loc(#loc314)
    cir.return loc(#loc169)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":45:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":45:86)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":75:23)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":47:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":79:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":49:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":49:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":51:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":51:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":51:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":52:85)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":52:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":52:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":52:89)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":53:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":78:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":54:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":54:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":55:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":55:54)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":55:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":55:38)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":55:43)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":55:53)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:39)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:23)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:29)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:30)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:36)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":56:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":61:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:23)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":59:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":60:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":60:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":60:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":60:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":58:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":64:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":76:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":64:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":64:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":65:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":72:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":74:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":66:28)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":66:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":66:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":66:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":71:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:17)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:24)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:28)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:26)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":69:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":70:30)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":70:37)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":70:38)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":70:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":68:32)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":75:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":77:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":77:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":158:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":162:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":160:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":160:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":161:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":161:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":86:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":86:90)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":88:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":120:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":90:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":90:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":92:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":92:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":92:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":93:89)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":93:12)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":93:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":93:93)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":94:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":119:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":95:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":95:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":96:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":96:54)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":96:31)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":96:38)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":96:43)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":96:53)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:39)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:23)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:29)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:30)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:36)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":97:35)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":102:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:18)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:14)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:21)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:25)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:23)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":100:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":101:25)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":101:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":101:20)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":101:21)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:30)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":99:29)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":105:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":117:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":105:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":105:21)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":106:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":113:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":115:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":107:28)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":107:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":107:20)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":107:24)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":112:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:17)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:24)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:28)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:26)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":110:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":111:30)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":111:37)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":111:38)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":111:17)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:33)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":109:32)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":116:23)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":116:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":118:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":118:14)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":123:1)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":123:90)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":152:23)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":125:1)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":156:1)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":127:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":127:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":129:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":129:12)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":129:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":130:89)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":130:12)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":130:5)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":130:93)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":131:5)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":155:5)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":132:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":132:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":133:9)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":133:54)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":133:31)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":133:38)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":133:43)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":133:53)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:39)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:23)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:29)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:30)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:36)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":134:35)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:9)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":139:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:18)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:14)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:21)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:25)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:23)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":137:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":138:25)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":138:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":138:20)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":138:21)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:30)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":136:29)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:9)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":153:9)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:21)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:23)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:26)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:34)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":141:36)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":142:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":149:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":151:9)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":143:28)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":143:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":143:20)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":143:24)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":148:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:21)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:17)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:24)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:28)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:26)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":146:13)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":147:30)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":147:37)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":147:38)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":147:17)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:33)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":145:32)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":152:13)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":154:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_61a.c":154:14)
#loc243 = loc(fused[#loc1, #loc2])
#loc244 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc5, #loc6])
#loc246 = loc(fused[#loc7, #loc8])
#loc247 = loc(fused[#loc9, #loc10])
#loc248 = loc(fused[#loc12, #loc13])
#loc249 = loc(fused[#loc14, #loc15])
#loc250 = loc(fused[#loc16, #loc17])
#loc251 = loc(fused[#loc20, #loc18])
#loc252 = loc(fused[#loc23, #loc24])
#loc253 = loc(fused[#loc25, #loc26])
#loc254 = loc(fused[#loc27, #loc28])
#loc255 = loc(fused[#loc29, #loc30])
#loc256 = loc(fused[#loc33, #loc34])
#loc257 = loc(fused[#loc32, #loc34])
#loc258 = loc(fused[#loc31, #loc30])
#loc259 = loc(fused[#loc35, #loc36])
#loc260 = loc(fused[#loc37, #loc38])
#loc261 = loc(fused[#loc39, #loc36])
#loc262 = loc(fused[#loc43, #loc44])
#loc263 = loc(fused[#loc46, #loc45])
#loc264 = loc(fused[#loc47, #loc48])
#loc265 = loc(fused[#loc50, #loc44])
#loc266 = loc(fused[#loc52, #loc51])
#loc267 = loc(fused[#loc56, #loc55])
#loc268 = loc(fused[#loc57, #loc58])
#loc269 = loc(fused[#loc59, #loc60])
#loc270 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc271 = loc(fused[#loc65, #loc64])
#loc272 = loc(fused[#loc68, #loc69])
#loc273 = loc(fused[#loc71, #loc70])
#loc274 = loc(fused[#loc72, #loc73])
#loc275 = loc(fused[#loc75, #loc69])
#loc276 = loc(fused[#loc81, #loc80])
#loc277 = loc(fused[#loc85, #loc86])
#loc278 = loc(fused[#loc87, #loc88])
#loc279 = loc(fused[#loc89, #loc90])
#loc280 = loc(fused[#loc91, #loc92])
#loc281 = loc(fused[#loc93, #loc94])
#loc282 = loc(fused[#loc95, #loc96])
#loc283 = loc(fused[#loc99, #loc97])
#loc284 = loc(fused[#loc102, #loc103])
#loc285 = loc(fused[#loc104, #loc105])
#loc286 = loc(fused[#loc106, #loc107])
#loc287 = loc(fused[#loc108, #loc109])
#loc288 = loc(fused[#loc112, #loc113])
#loc289 = loc(fused[#loc111, #loc113])
#loc290 = loc(fused[#loc110, #loc109])
#loc291 = loc(fused[#loc114, #loc115])
#loc292 = loc(fused[#loc116, #loc117])
#loc293 = loc(fused[#loc118, #loc115])
#loc294 = loc(fused[#loc122, #loc123])
#loc295 = loc(fused[#loc125, #loc124])
#loc296 = loc(fused[#loc126, #loc127])
#loc297 = loc(fused[#loc129, #loc123])
#loc298 = loc(fused[#loc131, #loc130])
#loc299 = loc(fused[#loc135, #loc134])
#loc300 = loc(fused[#loc136, #loc137])
#loc301 = loc(fused[#loc138, #loc139])
#loc302 = loc(fused[#loc140, #loc141, #loc142, #loc137])
#loc303 = loc(fused[#loc144, #loc143])
#loc304 = loc(fused[#loc147, #loc148])
#loc305 = loc(fused[#loc150, #loc149])
#loc306 = loc(fused[#loc151, #loc152])
#loc307 = loc(fused[#loc154, #loc148])
#loc308 = loc(fused[#loc160, #loc159])
#loc309 = loc(fused[#loc165, #loc166])
#loc310 = loc(fused[#loc168, #loc169])
#loc311 = loc(fused[#loc170, #loc171])
#loc312 = loc(fused[#loc174, #loc172])
#loc313 = loc(fused[#loc177, #loc178])
#loc314 = loc(fused[#loc179, #loc180])
#loc315 = loc(fused[#loc181, #loc182])
#loc316 = loc(fused[#loc183, #loc184])
#loc317 = loc(fused[#loc187, #loc188])
#loc318 = loc(fused[#loc186, #loc188])
#loc319 = loc(fused[#loc185, #loc184])
#loc320 = loc(fused[#loc189, #loc190])
#loc321 = loc(fused[#loc191, #loc192])
#loc322 = loc(fused[#loc193, #loc190])
#loc323 = loc(fused[#loc197, #loc198])
#loc324 = loc(fused[#loc200, #loc199])
#loc325 = loc(fused[#loc201, #loc202])
#loc326 = loc(fused[#loc204, #loc198])
#loc327 = loc(fused[#loc206, #loc205])
#loc328 = loc(fused[#loc210, #loc209])
#loc329 = loc(fused[#loc211, #loc212])
#loc330 = loc(fused[#loc213, #loc214])
#loc331 = loc(fused[#loc216, #loc218])
#loc332 = loc(fused[#loc219, #loc220, #loc221, #loc212])
#loc333 = loc(fused[#loc223, #loc222])
#loc334 = loc(fused[#loc226, #loc227])
#loc335 = loc(fused[#loc229, #loc228])
#loc336 = loc(fused[#loc230, #loc231])
#loc337 = loc(fused[#loc233, #loc227])
#loc338 = loc(fused[#loc239, #loc238])
