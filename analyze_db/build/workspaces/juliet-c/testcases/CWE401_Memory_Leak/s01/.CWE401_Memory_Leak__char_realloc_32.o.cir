!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc136)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc142)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc141)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc142)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
      %7 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc25)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc146)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc147)
      %14 = cir.call @realloc(%9, %13) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
      cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
      cir.scope {
        %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
        %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc39)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
        } loc(#loc152)
      } loc(#loc150)
      %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc40)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
      %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
      %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
      %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    } loc(#loc144)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    } loc(#loc154)
    cir.return loc(#loc11)
  } loc(#loc139)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc162)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc161)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc162)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc66)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc73)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc73)
      %9 = cir.const #cir.int<1> : !u64i loc(#loc73)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc73)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
      cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
      %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc75)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc77)
      %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc77)
      %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc75)
      %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %21 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
      cir.store %20, %21 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    } loc(#loc164)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    } loc(#loc168)
    cir.return loc(#loc59)
  } loc(#loc159)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc170)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc174)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc173)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc174)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
      %7 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc105)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc107)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc107)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc178)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc179)
      %14 = cir.call @realloc(%9, %13) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
      cir.store %15, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
      cir.scope {
        %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
        %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
        %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc183)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc117)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc118)
          %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc119)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
        } loc(#loc184)
      } loc(#loc182)
      %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc120)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc122)
      %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc122)
      %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
      %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    } loc(#loc176)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc187)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc133)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
    } loc(#loc186)
    cir.return loc(#loc91)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_32.c":36:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_32.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_32.c":45:1)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_32.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_32.c":26:12)
#loc14 = loc("CWE401_Memory_Leak__char_realloc_32.c":27:5)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_32.c":27:25)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_32.c":28:5)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_32.c":28:25)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_32.c":29:12)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_32.c":29:5)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_32.c":30:5)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_32.c":39:5)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_32.c":31:9)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_32.c":31:24)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_32.c":31:23)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:24)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:32)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:38)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:42)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:53)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:54)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_32.c":33:9)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:9)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:37)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:13)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:21)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:27)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:28)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:34)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_32.c":34:33)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_32.c":36:9)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_32.c":36:16)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_32.c":37:19)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_32.c":37:9)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_32.c":38:21)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_32.c":38:10)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_32.c":38:9)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_32.c":40:5)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_32.c":44:5)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_32.c":41:9)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_32.c":41:24)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_32.c":41:23)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_32.c":98:1)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_32.c":102:1)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_32.c":100:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_32.c":100:13)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_32.c":101:5)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_32.c":101:13)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_32.c":52:1)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_32.c":72:1)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_32.c":54:5)
#loc61 = loc("CWE401_Memory_Leak__char_realloc_32.c":54:12)
#loc62 = loc("CWE401_Memory_Leak__char_realloc_32.c":55:5)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_32.c":55:25)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_32.c":56:5)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_32.c":56:25)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_32.c":57:12)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_32.c":57:5)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_32.c":58:5)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_32.c":66:5)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_32.c":59:9)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_32.c":59:24)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_32.c":59:23)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_32.c":61:24)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_32.c":61:9)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_32.c":63:9)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_32.c":63:16)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_32.c":63:22)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_32.c":64:19)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_32.c":64:9)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_32.c":65:21)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_32.c":65:10)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_32.c":65:9)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_32.c":67:5)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_32.c":71:5)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_32.c":68:9)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_32.c":68:24)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_32.c":68:23)
#loc88 = loc("/usr/include/stdlib.h":687:1)
#loc89 = loc("/usr/include/stdlib.h":687:32)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_32.c":75:1)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_32.c":96:1)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_32.c":77:5)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_32.c":77:12)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_32.c":78:5)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_32.c":78:25)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_32.c":79:5)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_32.c":79:25)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_32.c":80:12)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_32.c":80:5)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_32.c":81:5)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_32.c":90:5)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_32.c":82:9)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_32.c":82:24)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_32.c":82:23)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:24)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:32)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:38)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:42)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:53)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:54)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_32.c":84:9)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:9)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:37)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:13)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:21)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:27)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:28)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:34)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_32.c":85:33)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_32.c":87:9)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_32.c":87:16)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_32.c":87:22)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_32.c":88:19)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_32.c":88:9)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_32.c":89:21)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_32.c":89:10)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_32.c":89:9)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_32.c":91:5)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_32.c":95:5)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_32.c":92:9)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_32.c":92:24)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_32.c":92:23)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_32.c":94:9)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_32.c":94:14)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc8, #loc9])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc16, #loc17])
#loc143 = loc(fused[#loc19, #loc18])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc27, #loc29])
#loc148 = loc(fused[#loc25, #loc30])
#loc149 = loc(fused[#loc31, #loc30])
#loc150 = loc(fused[#loc32, #loc33])
#loc151 = loc(fused[#loc34, #loc35])
#loc152 = loc(fused[#loc36, #loc33])
#loc153 = loc(fused[#loc46, #loc44])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc52, #loc53])
#loc157 = loc(fused[#loc54, #loc55])
#loc158 = loc(fused[#loc56, #loc57])
#loc159 = loc(fused[#loc58, #loc59])
#loc160 = loc(fused[#loc60, #loc61])
#loc161 = loc(fused[#loc62, #loc63])
#loc162 = loc(fused[#loc64, #loc65])
#loc163 = loc(fused[#loc67, #loc66])
#loc164 = loc(fused[#loc68, #loc69])
#loc165 = loc(fused[#loc70, #loc71])
#loc166 = loc(fused[#loc74, #loc73])
#loc167 = loc(fused[#loc82, #loc80])
#loc168 = loc(fused[#loc83, #loc84])
#loc169 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc88, #loc89])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc92, #loc93])
#loc173 = loc(fused[#loc94, #loc95])
#loc174 = loc(fused[#loc96, #loc97])
#loc175 = loc(fused[#loc99, #loc98])
#loc176 = loc(fused[#loc100, #loc101])
#loc177 = loc(fused[#loc102, #loc103])
#loc178 = loc(fused[#loc108, #loc109])
#loc179 = loc(fused[#loc107, #loc109])
#loc180 = loc(fused[#loc105, #loc110])
#loc181 = loc(fused[#loc111, #loc110])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc116, #loc113])
#loc185 = loc(fused[#loc127, #loc125])
#loc186 = loc(fused[#loc128, #loc129])
#loc187 = loc(fused[#loc130, #loc131])
