!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc164)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc165)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printIntLine(!s32i) loc(#loc167)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fscanf_preinc_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc173)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc173)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc26)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc26)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc28)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc177)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc177)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc32)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc32)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc180)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc41)
          cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc44)
        } loc(#loc179)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc48)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc183)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc49)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc185)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc55)
            cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc185)
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc58)
          } else {
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc12)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fscanf_preinc_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc187)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc194)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc194)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc74)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc79)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc81)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc81)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc79)
      } else {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc82)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc82)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc197)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc197)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc87)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc87)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc95)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc200)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc96)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc202)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
            %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc102)
            cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc202)
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc105)
          } else {
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc106)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc106)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc107)
          } loc(#loc201)
        } loc(#loc199)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc111)
          %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc205)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc112)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc207)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc118)
            cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc207)
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc121)
          } else {
            %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc122)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc122)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc123)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc67)
  } loc(#loc190)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc213)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc213)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc132)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc137)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc139)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc218)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc218)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc143)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc221)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc152)
          cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc221)
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc155)
        } loc(#loc220)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc224)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
          %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc160)
          cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc224)
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc163)
        } loc(#loc223)
      } loc(#loc219)
    } loc(#loc217)
    cir.return loc(#loc125)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":30:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":57:23)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":22:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":60:1)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":24:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":24:9)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":26:12)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":26:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":27:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":36:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":27:8)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":27:33)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":28:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":31:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":33:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":30:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":30:16)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":35:16)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":35:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":37:5)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":59:5)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":37:8)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":37:33)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":38:5)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":45:5)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":47:5)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":39:9)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":44:9)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":42:13)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":42:26)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":41:13)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":41:15)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":43:26)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":43:13)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":49:9)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":58:9)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":49:13)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":49:20)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":49:18)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":50:9)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":54:9)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":56:9)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":52:13)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":52:26)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":51:13)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":51:15)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":53:26)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":53:13)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":57:13)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":152:1)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":156:1)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":154:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":154:13)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":155:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":155:13)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":69:1)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":112:1)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":71:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":71:9)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":73:12)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":73:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":74:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":83:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":74:8)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":74:33)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":75:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":78:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":80:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":77:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":77:16)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":77:23)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":82:9)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":82:16)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":82:23)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":84:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":111:5)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":84:8)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":84:33)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":85:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":97:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":99:5)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":87:9)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":96:9)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":87:13)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":87:20)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":87:18)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":88:9)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":92:9)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":94:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":90:13)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":90:26)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":89:13)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":89:15)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":91:26)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":91:13)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":95:23)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":95:13)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":101:9)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":110:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":101:13)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":101:20)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":101:18)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":102:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":106:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":108:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":104:13)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":104:26)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":103:13)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":103:15)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":105:26)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":105:13)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":109:23)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":109:13)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":117:1)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":150:1)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":119:5)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":119:9)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":121:12)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":121:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":122:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":131:5)
#loc132 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":122:8)
#loc133 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":122:33)
#loc134 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":123:5)
#loc135 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":126:5)
#loc136 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":128:5)
#loc137 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":125:16)
#loc138 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":125:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":130:16)
#loc140 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":130:9)
#loc141 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":132:5)
#loc142 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":149:5)
#loc143 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":132:8)
#loc144 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":132:33)
#loc145 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":133:5)
#loc146 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":140:5)
#loc147 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":142:5)
#loc148 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":134:9)
#loc149 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":139:9)
#loc150 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":137:13)
#loc151 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":137:26)
#loc152 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":136:13)
#loc153 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":136:15)
#loc154 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":138:26)
#loc155 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":138:13)
#loc156 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":143:9)
#loc157 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":148:9)
#loc158 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":146:13)
#loc159 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":146:26)
#loc160 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":145:13)
#loc161 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":145:15)
#loc162 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":147:26)
#loc163 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_12.c":147:13)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc18, #loc17])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc21, #loc22])
#loc174 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc175 = loc(fused[#loc29, #loc28])
#loc176 = loc(fused[#loc30, #loc31])
#loc177 = loc(fused[#loc32, #loc33])
#loc178 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc179 = loc(fused[#loc37, #loc38])
#loc180 = loc(fused[#loc39, #loc40])
#loc181 = loc(fused[#loc41, #loc42])
#loc182 = loc(fused[#loc45, #loc46])
#loc183 = loc(fused[#loc47, #loc48])
#loc184 = loc(fused[#loc50, #loc51, #loc52, #loc46])
#loc185 = loc(fused[#loc53, #loc54])
#loc186 = loc(fused[#loc55, #loc56])
#loc187 = loc(fused[#loc60, #loc61])
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc64, #loc65])
#loc190 = loc(fused[#loc66, #loc67])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc71, #loc70])
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc74, #loc75])
#loc195 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc199 = loc(fused[#loc92, #loc93])
#loc200 = loc(fused[#loc94, #loc95])
#loc201 = loc(fused[#loc97, #loc98, #loc99, #loc93])
#loc202 = loc(fused[#loc100, #loc101])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc108, #loc109])
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc113, #loc114, #loc115, #loc109])
#loc207 = loc(fused[#loc116, #loc117])
#loc208 = loc(fused[#loc118, #loc119])
#loc209 = loc(fused[#loc124, #loc125])
#loc210 = loc(fused[#loc126, #loc127])
#loc211 = loc(fused[#loc129, #loc128])
#loc212 = loc(fused[#loc130, #loc131])
#loc213 = loc(fused[#loc132, #loc133])
#loc214 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc215 = loc(fused[#loc138, #loc137])
#loc216 = loc(fused[#loc140, #loc139])
#loc217 = loc(fused[#loc141, #loc142])
#loc218 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc220 = loc(fused[#loc148, #loc149])
#loc221 = loc(fused[#loc150, #loc151])
#loc222 = loc(fused[#loc152, #loc153])
#loc223 = loc(fused[#loc156, #loc157])
#loc224 = loc(fused[#loc158, #loc159])
#loc225 = loc(fused[#loc160, #loc161])
