!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc343)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc344)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc346)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc347)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc348)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc349)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc350)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc351)
  cir.func private @close(!s32i) -> !s32i loc(#loc352)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc353)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc355)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc356)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc357)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc358)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc359)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc360)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc361)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc362)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc363)
    cir.goto "sink" loc(#loc364)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc45)
    %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc355)
    cir.store %9, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc355)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc34)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc36)
    cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc46)
    cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc361)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc40)
    cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc365)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc365)
    cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.scope {
      cir.do {
        cir.scope {
          %21 = cir.const #cir.int<2> : !s32i loc(#loc53)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc54)
          %23 = cir.const #cir.int<6> : !s32i loc(#loc55)
          %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
          cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc368)
          cir.scope {
            %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc61)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc62)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc370)
            cir.if %76 {
              cir.break loc(#loc64)
            } loc(#loc371)
          } loc(#loc369)
          cir.scope {
            %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc68)
            %75 = cir.const #cir.int<2> : !s32i loc(#loc69)
            %76 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc373)
            %77 = cir.cast(bitcast, %76 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc374)
            %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %79 = cir.cast(integral, %78 : !s32i), !u32i loc(#loc73)
            %80 = cir.call @setsockopt(%73, %74, %75, %77, %79) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %81 = cir.const #cir.int<0> : !s32i loc(#loc75)
            %82 = cir.cmp(ne, %80, %81) : !s32i, !cir.bool loc(#loc375)
            cir.if %82 {
              cir.break loc(#loc77)
            } loc(#loc376)
          } loc(#loc372)
          %25 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc377)
          %26 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %27 = cir.const #cir.int<16> : !u64i loc(#loc378)
          cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc379)
          %28 = cir.const #cir.int<2> : !s32i loc(#loc85)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc85)
          %30 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc380)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc88)
          %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc88)
          %33 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc89)
          %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc90)
          cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc381)
          %35 = cir.const #cir.int<27015> : !s32i loc(#loc92)
          %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc92)
          %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc93)
          %38 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
          cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc382)
          cir.scope {
            %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %74 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc384)
            %75 = cir.const #cir.int<16> : !u64i loc(#loc385)
            %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc385)
            %77 = cir.call @bind(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc104)
            %78 = cir.const #cir.int<1> : !s32i loc(#loc105)
            %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc105)
            %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc386)
            cir.if %80 {
              cir.break loc(#loc107)
            } loc(#loc387)
          } loc(#loc383)
          cir.scope {
            %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %74 = cir.const #cir.int<5> : !s32i loc(#loc111)
            %75 = cir.call @listen(%73, %74) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc112)
            %76 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc113)
            %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc389)
            cir.if %78 {
              cir.break loc(#loc115)
            } loc(#loc390)
          } loc(#loc388)
          %39 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc117)
          %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc118)
          %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc119)
          cir.store %42, %5 : !s32i, !cir.ptr<!s32i> loc(#loc391)
          cir.scope {
            %73 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc125)
            %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc125)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc393)
            cir.if %76 {
              cir.break loc(#loc127)
            } loc(#loc394)
          } loc(#loc392)
          %43 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
          %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc130)
          %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc131)
          %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc395)
          %48 = cir.const #cir.int<100> : !s32i loc(#loc132)
          %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc132)
          %50 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc396)
          %52 = cir.const #cir.int<1> : !s32i loc(#loc134)
          %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc134)
          %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc397)
          %55 = cir.cast(integral, %54 : !u64i), !s32i loc(#loc397)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc397)
          %57 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc136)
          %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc136)
          cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc398)
          cir.scope {
            %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc142)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc400)
            %77 = cir.ternary(%76, true {
              %78 = cir.const #true loc(#loc143)
              cir.yield %78 : !cir.bool loc(#loc143)
            }, false {
              %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %79 = cir.const #cir.int<0> : !s32i loc(#loc145)
              %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc401)
              %81 = cir.ternary(%80, true {
                %82 = cir.const #true loc(#loc143)
                cir.yield %82 : !cir.bool loc(#loc143)
              }, false {
                %82 = cir.const #false loc(#loc143)
                cir.yield %82 : !cir.bool loc(#loc143)
              }) : (!cir.bool) -> !cir.bool loc(#loc143)
              cir.yield %81 : !cir.bool loc(#loc143)
            }) : (!cir.bool) -> !cir.bool loc(#loc143)
            cir.if %77 {
              cir.break loc(#loc147)
            } loc(#loc402)
          } loc(#loc399)
          %60 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc148)
          %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
          %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc150)
          cir.store %61, %64 : !s8i, !cir.ptr<!s8i> loc(#loc403)
          %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc151)
          %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
          %67 = cir.const #cir.int<13> : !s32i loc(#loc153)
          %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc151)
          cir.store %68, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc404)
          cir.scope {
            %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc158)
            cir.if %74 {
              %75 = cir.const #cir.int<0> : !s32i loc(#loc160)
              %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc160)
              %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc407)
            } loc(#loc406)
          } loc(#loc405)
          %69 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc163)
          %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
          %71 = cir.const #cir.int<10> : !s32i loc(#loc165)
          %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc163)
          cir.store %72, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc408)
          cir.scope {
            %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
            %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc170)
            cir.if %74 {
              %75 = cir.const #cir.int<0> : !s32i loc(#loc172)
              %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc172)
              %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
              cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc411)
            } loc(#loc410)
          } loc(#loc409)
        } loc(#loc367)
        cir.yield loc(#loc50)
      } while {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc175)
        %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc175)
        cir.condition(%22) loc(#loc175)
      } loc(#loc366)
    } loc(#loc366)
    cir.scope {
      %21 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc179)
      %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc179)
      %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc413)
      cir.if %24 {
        %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc181)
        %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc182)
      } loc(#loc414)
    } loc(#loc412)
    cir.scope {
      %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc186)
      %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc186)
      %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc416)
      cir.if %24 {
        %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc188)
        %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc189)
      } loc(#loc417)
    } loc(#loc415)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    cir.return loc(#loc24)
  } loc(#loc354)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc419)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc194)
    cir.return loc(#loc193)
  } loc(#loc418)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc421)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc422)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc423)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc424)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc425)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc426)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc427)
    cir.goto "sink" loc(#loc428)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc214)
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc421)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc421)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc207)
    cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc209)
    cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc215)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc215)
    cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc427)
    cir.scope {
      cir.do {
        cir.scope {
          %16 = cir.const #cir.int<2> : !s32i loc(#loc221)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %18 = cir.const #cir.int<6> : !s32i loc(#loc223)
          %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc224)
          cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc431)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc229)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc230)
            %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc230)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc433)
            cir.if %71 {
              cir.break loc(#loc232)
            } loc(#loc434)
          } loc(#loc432)
          %20 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc435)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc235)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc436)
          cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc437)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc240)
          %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc240)
          %25 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
          cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc438)
          %26 = cir.const #cir.int<0> : !s32i loc(#loc242)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc242)
          %28 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc89)
          %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc90)
          cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc439)
          %30 = cir.const #cir.int<27015> : !s32i loc(#loc244)
          %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc244)
          %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc245)
          %33 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
          cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc440)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc250)
            %69 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc442)
            %70 = cir.const #cir.int<16> : !u64i loc(#loc443)
            %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc443)
            %72 = cir.call @bind(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc255)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc256)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc444)
            cir.if %75 {
              cir.break loc(#loc258)
            } loc(#loc445)
          } loc(#loc441)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc261)
            %69 = cir.const #cir.int<5> : !s32i loc(#loc262)
            %70 = cir.call @listen(%68, %69) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc263)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc264)
            %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc264)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc447)
            cir.if %73 {
              cir.break loc(#loc266)
            } loc(#loc448)
          } loc(#loc446)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc267)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc268)
          %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc269)
          %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc270)
          cir.store %37, %5 : !s32i, !cir.ptr<!s32i> loc(#loc449)
          cir.scope {
            %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc275)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc276)
            %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc276)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc451)
            cir.if %71 {
              cir.break loc(#loc278)
            } loc(#loc452)
          } loc(#loc450)
          %38 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc279)
          %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc280)
          %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc281)
          %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc282)
          %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc453)
          %43 = cir.const #cir.int<100> : !s32i loc(#loc283)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc283)
          %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc284)
          %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc454)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc285)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc285)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc455)
          %50 = cir.cast(integral, %49 : !u64i), !s32i loc(#loc455)
          %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc455)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc286)
          %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc287)
          %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc287)
          cir.store %54, %1 : !s32i, !cir.ptr<!s32i> loc(#loc456)
          cir.scope {
            %68 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc293)
            %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc293)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc458)
            %72 = cir.ternary(%71, true {
              %73 = cir.const #true loc(#loc294)
              cir.yield %73 : !cir.bool loc(#loc294)
            }, false {
              %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc295)
              %74 = cir.const #cir.int<0> : !s32i loc(#loc296)
              %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc459)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc294)
                cir.yield %77 : !cir.bool loc(#loc294)
              }, false {
                %77 = cir.const #false loc(#loc294)
                cir.yield %77 : !cir.bool loc(#loc294)
              }) : (!cir.bool) -> !cir.bool loc(#loc294)
              cir.yield %76 : !cir.bool loc(#loc294)
            }) : (!cir.bool) -> !cir.bool loc(#loc294)
            cir.if %72 {
              cir.break loc(#loc298)
            } loc(#loc460)
          } loc(#loc457)
          %55 = cir.const #cir.int<0> : !s32i loc(#loc299)
          %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc299)
          %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc300)
          %58 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc301)
          %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc301)
          cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc461)
          %60 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc302)
          %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc303)
          %62 = cir.const #cir.int<13> : !s32i loc(#loc304)
          %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc302)
          cir.store %63, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc462)
          cir.scope {
            %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc309)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc309)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc311)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc311)
              %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc312)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc465)
            } loc(#loc464)
          } loc(#loc463)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc314)
          %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc315)
          %66 = cir.const #cir.int<10> : !s32i loc(#loc316)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc314)
          cir.store %67, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc466)
          cir.scope {
            %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc321)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc323)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc323)
              %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc469)
            } loc(#loc468)
          } loc(#loc467)
        } loc(#loc430)
        cir.yield loc(#loc218)
      } while {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc326)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc326)
        cir.condition(%17) loc(#loc326)
      } loc(#loc429)
    } loc(#loc429)
    cir.scope {
      %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc329)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc330)
      %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc330)
      %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc471)
      cir.if %19 {
        %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc332)
        %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc333)
      } loc(#loc472)
    } loc(#loc470)
    cir.scope {
      %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc336)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc337)
      %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc337)
      %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc474)
      cir.if %19 {
        %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc339)
        %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc340)
      } loc(#loc475)
    } loc(#loc473)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc341)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc342)
    cir.return loc(#loc197)
  } loc(#loc420)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_18.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":402:1)
#loc8 = loc("/usr/include/netinet/in.h":403:40)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":44:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":140:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":49:9)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":49:26)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":54:9)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":54:13)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":55:9)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":55:28)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":56:9)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":56:15)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":57:9)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":57:31)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":58:9)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":58:31)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:9)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:37)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":64:9)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":64:23)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":65:9)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":65:33)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":46:5)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":46:10)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":47:1)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:26)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":59:33)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":65:23)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":67:9)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":123:17)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":68:9)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":122:9)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:35)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:44)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:57)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:28)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:13)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":76:68)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":77:13)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":80:13)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":77:17)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":77:33)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":78:13)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":79:17)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:13)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":85:13)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:28)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:42)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:54)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:75)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:76)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:68)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:85)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:17)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":82:97)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":83:13)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":84:17)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:20)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:21)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:30)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:33)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:47)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:13)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":86:48)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":87:34)
#loc86 = loc("/usr/include/netinet/in.h":249:5)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":87:13)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":88:39)
#loc89 = loc("/usr/include/netinet/in.h":251:20)
#loc90 = loc("/usr/include/netinet/in.h":33:15)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":88:13)
#loc92 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:38)
#loc93 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:32)
#loc94 = loc("/usr/include/netinet/in.h":250:15)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:13)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":89:46)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:13)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":93:13)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:22)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:54)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:55)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:64)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:78)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:17)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":90:84)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":91:13)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":92:17)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:13)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":97:13)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:24)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:38)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:17)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":94:57)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":95:13)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":96:17)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:35)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:49)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:55)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:28)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:13)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":98:59)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":99:13)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":102:13)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":99:17)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":99:33)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":100:13)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":101:17)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:31)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:45)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:50)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:49)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:65)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:69)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:77)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:81)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:26)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:13)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":104:82)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:13)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":108:13)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:17)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:31)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:44)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:47)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":105:61)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":106:13)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":107:17)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":110:32)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":110:18)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":110:13)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:23)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:30)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:36)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:13)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":112:40)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":113:13)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":116:13)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":113:17)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":114:13)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":115:28)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":115:18)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":115:17)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:23)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:30)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:36)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:13)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":117:40)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":118:13)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":121:13)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":118:17)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":119:13)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":120:28)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":120:18)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":120:17)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":123:16)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":124:9)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":127:9)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":124:13)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":124:29)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":125:9)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":126:26)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":126:13)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":128:9)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":131:9)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":128:13)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":128:29)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":129:9)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":130:26)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":130:13)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":138:19)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":138:9)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":234:1)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":237:1)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":236:5)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":236:11)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":147:1)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":232:1)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":152:9)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":152:26)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":157:9)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":157:13)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":158:9)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":158:28)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":159:9)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":159:15)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":160:9)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":160:31)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":161:9)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":161:31)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:9)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:37)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":149:5)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":149:10)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":150:1)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:26)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":162:33)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":163:9)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":215:17)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":164:9)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":214:9)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:35)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:44)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:57)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:28)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:13)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":172:68)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":173:13)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":176:13)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":173:17)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":173:33)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":174:13)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":175:17)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:20)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:21)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:30)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:33)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:47)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:13)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":178:48)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":179:34)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":179:13)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":180:39)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":180:13)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:38)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:32)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:13)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":181:46)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:13)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":185:13)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:22)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:54)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:55)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:64)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:78)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:17)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":182:84)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":183:13)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":184:17)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:13)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":189:13)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:24)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:38)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:17)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":186:57)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":187:13)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":188:17)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:35)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:49)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:55)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:28)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:13)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":190:59)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":191:13)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":194:13)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":191:17)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":191:33)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":192:13)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":193:17)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:31)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:45)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:50)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:49)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:65)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:69)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:77)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:81)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:26)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:13)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":196:82)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:13)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":200:13)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:17)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:31)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:44)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:47)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":197:61)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":198:13)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":199:17)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":202:32)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":202:18)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":202:13)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:23)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:30)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:36)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:13)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":204:40)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":205:13)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":208:13)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":205:17)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":206:13)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":207:28)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":207:18)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":207:17)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:23)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:30)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:36)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:13)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":209:40)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":210:13)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":213:13)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":210:17)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":211:13)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":212:28)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":212:18)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":212:17)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":215:16)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":216:9)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":219:9)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":216:13)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":216:29)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":217:9)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":218:26)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":218:13)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":220:9)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":223:9)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":220:13)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":220:29)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":221:9)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":222:26)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":222:13)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":230:19)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_18.c":230:9)
#loc343 = loc(fused[#loc1, #loc2])
#loc344 = loc(fused[#loc3, #loc4])
#loc345 = loc(fused[#loc5, #loc6])
#loc346 = loc(fused[#loc7, #loc8])
#loc347 = loc(fused[#loc9, #loc10])
#loc348 = loc(fused[#loc11, #loc12])
#loc349 = loc(fused[#loc13, #loc14])
#loc350 = loc(fused[#loc15, #loc16])
#loc351 = loc(fused[#loc17, #loc18])
#loc352 = loc(fused[#loc19, #loc20])
#loc353 = loc(fused[#loc21, #loc22])
#loc354 = loc(fused[#loc23, #loc24])
#loc355 = loc(fused[#loc25, #loc26])
#loc356 = loc(fused[#loc27, #loc28])
#loc357 = loc(fused[#loc29, #loc30])
#loc358 = loc(fused[#loc31, #loc32])
#loc359 = loc(fused[#loc33, #loc34])
#loc360 = loc(fused[#loc35, #loc36])
#loc361 = loc(fused[#loc37, #loc38])
#loc362 = loc(fused[#loc39, #loc40])
#loc363 = loc(fused[#loc41, #loc42])
#loc364 = loc(fused[#loc43, #loc44])
#loc365 = loc(fused[#loc48, #loc42])
#loc366 = loc(fused[#loc49, #loc50])
#loc367 = loc(fused[#loc51, #loc52])
#loc368 = loc(fused[#loc57, #loc58])
#loc369 = loc(fused[#loc59, #loc60])
#loc370 = loc(fused[#loc61, #loc62])
#loc371 = loc(fused[#loc63, #loc60])
#loc372 = loc(fused[#loc65, #loc66])
#loc373 = loc(fused[#loc70, #loc71])
#loc374 = loc(fused[#loc72, #loc71])
#loc375 = loc(fused[#loc74, #loc75])
#loc376 = loc(fused[#loc76, #loc66])
#loc377 = loc(fused[#loc78, #loc79])
#loc378 = loc(fused[#loc81, #loc82])
#loc379 = loc(fused[#loc83, #loc84])
#loc380 = loc(fused[#loc87, #loc85])
#loc381 = loc(fused[#loc91, #loc88])
#loc382 = loc(fused[#loc95, #loc96])
#loc383 = loc(fused[#loc97, #loc98])
#loc384 = loc(fused[#loc100, #loc101])
#loc385 = loc(fused[#loc102, #loc103])
#loc386 = loc(fused[#loc104, #loc105])
#loc387 = loc(fused[#loc106, #loc98])
#loc388 = loc(fused[#loc108, #loc109])
#loc389 = loc(fused[#loc112, #loc113])
#loc390 = loc(fused[#loc114, #loc109])
#loc391 = loc(fused[#loc120, #loc121])
#loc392 = loc(fused[#loc122, #loc123])
#loc393 = loc(fused[#loc124, #loc125])
#loc394 = loc(fused[#loc126, #loc123])
#loc395 = loc(fused[#loc129, #loc130])
#loc396 = loc(fused[#loc132, #loc133])
#loc397 = loc(fused[#loc132, #loc134])
#loc398 = loc(fused[#loc137, #loc138])
#loc399 = loc(fused[#loc139, #loc140])
#loc400 = loc(fused[#loc141, #loc142])
#loc401 = loc(fused[#loc144, #loc145])
#loc402 = loc(fused[#loc146, #loc140])
#loc403 = loc(fused[#loc150, #loc148])
#loc404 = loc(fused[#loc154, #loc155])
#loc405 = loc(fused[#loc156, #loc157])
#loc406 = loc(fused[#loc159, #loc157])
#loc407 = loc(fused[#loc162, #loc160])
#loc408 = loc(fused[#loc166, #loc167])
#loc409 = loc(fused[#loc168, #loc169])
#loc410 = loc(fused[#loc171, #loc169])
#loc411 = loc(fused[#loc174, #loc172])
#loc412 = loc(fused[#loc176, #loc177])
#loc413 = loc(fused[#loc178, #loc179])
#loc414 = loc(fused[#loc180, #loc177])
#loc415 = loc(fused[#loc183, #loc184])
#loc416 = loc(fused[#loc185, #loc186])
#loc417 = loc(fused[#loc187, #loc184])
#loc418 = loc(fused[#loc192, #loc193])
#loc419 = loc(fused[#loc194, #loc195])
#loc420 = loc(fused[#loc196, #loc197])
#loc421 = loc(fused[#loc198, #loc199])
#loc422 = loc(fused[#loc200, #loc201])
#loc423 = loc(fused[#loc202, #loc203])
#loc424 = loc(fused[#loc204, #loc205])
#loc425 = loc(fused[#loc206, #loc207])
#loc426 = loc(fused[#loc208, #loc209])
#loc427 = loc(fused[#loc210, #loc211])
#loc428 = loc(fused[#loc212, #loc213])
#loc429 = loc(fused[#loc217, #loc218])
#loc430 = loc(fused[#loc219, #loc220])
#loc431 = loc(fused[#loc225, #loc226])
#loc432 = loc(fused[#loc227, #loc228])
#loc433 = loc(fused[#loc229, #loc230])
#loc434 = loc(fused[#loc231, #loc228])
#loc435 = loc(fused[#loc233, #loc234])
#loc436 = loc(fused[#loc236, #loc237])
#loc437 = loc(fused[#loc238, #loc239])
#loc438 = loc(fused[#loc241, #loc240])
#loc439 = loc(fused[#loc243, #loc242])
#loc440 = loc(fused[#loc246, #loc247])
#loc441 = loc(fused[#loc248, #loc249])
#loc442 = loc(fused[#loc251, #loc252])
#loc443 = loc(fused[#loc253, #loc254])
#loc444 = loc(fused[#loc255, #loc256])
#loc445 = loc(fused[#loc257, #loc249])
#loc446 = loc(fused[#loc259, #loc260])
#loc447 = loc(fused[#loc263, #loc264])
#loc448 = loc(fused[#loc265, #loc260])
#loc449 = loc(fused[#loc271, #loc272])
#loc450 = loc(fused[#loc273, #loc274])
#loc451 = loc(fused[#loc275, #loc276])
#loc452 = loc(fused[#loc277, #loc274])
#loc453 = loc(fused[#loc280, #loc281])
#loc454 = loc(fused[#loc283, #loc284])
#loc455 = loc(fused[#loc283, #loc285])
#loc456 = loc(fused[#loc288, #loc289])
#loc457 = loc(fused[#loc290, #loc291])
#loc458 = loc(fused[#loc292, #loc293])
#loc459 = loc(fused[#loc295, #loc296])
#loc460 = loc(fused[#loc297, #loc291])
#loc461 = loc(fused[#loc301, #loc299])
#loc462 = loc(fused[#loc305, #loc306])
#loc463 = loc(fused[#loc307, #loc308])
#loc464 = loc(fused[#loc310, #loc308])
#loc465 = loc(fused[#loc313, #loc311])
#loc466 = loc(fused[#loc317, #loc318])
#loc467 = loc(fused[#loc319, #loc320])
#loc468 = loc(fused[#loc322, #loc320])
#loc469 = loc(fused[#loc325, #loc323])
#loc470 = loc(fused[#loc327, #loc328])
#loc471 = loc(fused[#loc329, #loc330])
#loc472 = loc(fused[#loc331, #loc328])
#loc473 = loc(fused[#loc334, #loc335])
#loc474 = loc(fused[#loc336, #loc337])
#loc475 = loc(fused[#loc338, #loc335])
