!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc69)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc72)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc73)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc74)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc15)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc76)
    cir.scope {
      %9 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc78)
      %10 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc78)
      cir.store %10, %9 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc78)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
      %13 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc24)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc25)
      %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc26)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc25)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc27)
      %20 = cir.binop(add, %17, %19) : !u64i loc(#loc79)
      %21 = cir.const #cir.int<1> : !u64i loc(#loc80)
      %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc81)
      cir.libc.memcpy %22 bytes from %14 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc82)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    } loc(#loc77)
    cir.return loc(#loc6)
  } loc(#loc71)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc83)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc86)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc87)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc88)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc49)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc90)
    cir.scope {
      %9 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc92)
      %10 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc92)
      cir.store %10, %9 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc92)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %13 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc58)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
      %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc61)
      %20 = cir.binop(add, %17, %19) : !u64i loc(#loc93)
      %21 = cir.const #cir.int<1> : !u64i loc(#loc94)
      %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc95)
      cir.libc.memcpy %22 bytes from %14 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc96)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    } loc(#loc91)
    cir.return loc(#loc40)
  } loc(#loc85)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":30:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":31:26)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":32:29)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":35:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":35:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":36:15)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":36:10)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":36:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":37:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":43:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":38:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":38:29)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:22)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:38)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:48)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:53)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:64)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:30)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":41:65)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":42:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":42:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":69:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":72:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":71:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":71:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":51:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":67:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":53:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":53:12)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":54:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":54:26)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":55:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":55:29)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":58:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":58:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":59:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":59:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":59:10)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":59:11)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":60:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":66:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":61:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":61:29)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:16)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:31)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:38)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:48)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:53)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:64)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:30)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":64:65)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":65:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_memcpy_01.c":65:9)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc7, #loc8])
#loc73 = loc(fused[#loc9, #loc10])
#loc74 = loc(fused[#loc11, #loc12])
#loc75 = loc(fused[#loc14, #loc13])
#loc76 = loc(fused[#loc16, #loc15])
#loc77 = loc(fused[#loc19, #loc20])
#loc78 = loc(fused[#loc21, #loc22])
#loc79 = loc(fused[#loc25, #loc27])
#loc80 = loc(fused[#loc28, #loc29])
#loc81 = loc(fused[#loc30, #loc29])
#loc82 = loc(fused[#loc31, #loc32])
#loc83 = loc(fused[#loc35, #loc36])
#loc84 = loc(fused[#loc37, #loc38])
#loc85 = loc(fused[#loc39, #loc40])
#loc86 = loc(fused[#loc41, #loc42])
#loc87 = loc(fused[#loc43, #loc44])
#loc88 = loc(fused[#loc45, #loc46])
#loc89 = loc(fused[#loc48, #loc47])
#loc90 = loc(fused[#loc50, #loc49])
#loc91 = loc(fused[#loc53, #loc54])
#loc92 = loc(fused[#loc55, #loc56])
#loc93 = loc(fused[#loc59, #loc61])
#loc94 = loc(fused[#loc62, #loc63])
#loc95 = loc(fused[#loc64, #loc63])
#loc96 = loc(fused[#loc65, #loc66])
