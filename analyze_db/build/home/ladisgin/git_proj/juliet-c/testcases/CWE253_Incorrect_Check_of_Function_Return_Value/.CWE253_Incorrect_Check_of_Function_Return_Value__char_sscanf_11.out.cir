!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":107:10)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":107:14)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":107:20)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":107:32)
#loc135 = loc(fused[#loc46, #loc47])
#loc136 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc116)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc123)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc123)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc120)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc120)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc25)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc6)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc6)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc25)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc127)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc128)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc119)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc129)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc132)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func @main(%arg0: !s32i loc(fused[#loc46, #loc47]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc52)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc52)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc53)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11_good() : () -> () loc(#loc55)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11_bad() : () -> () loc(#loc59)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %17 : !s32i loc(#loc139)
  } loc(#loc134)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc145)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc145)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc75)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb10 loc(#loc78)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc142)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc142)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc85)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc86)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc86)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc87)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc87)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %16 = cir.call @__isoc99_sscanf(%12, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc89)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc150)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc84)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc74)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc74)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc68)
  } loc(#loc141)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc155)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc155)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc101)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc156)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc157)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc152)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc108)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc109)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc109)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc110)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc110)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc112)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc160)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb6 loc(#loc107)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc107)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc105)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc100)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc100)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc94)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":468:1)
#loc4 = loc("/usr/include/stdio.h":468:12)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":37:24)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":37:36)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":39:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":26:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":43:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":33:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":33:36)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":34:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":34:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":28:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":42:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":28:8)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":28:26)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":29:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":30:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":41:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":37:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":40:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":37:17)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":37:46)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":37:55)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":38:13)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":39:17)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":92:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":96:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":94:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":94:11)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":95:5)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":95:11)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":112:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":114:15)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":117:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":119:15)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":107:1)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":122:1)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":108:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":110:27)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":110:22)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":110:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":112:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":113:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":113:74)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":114:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":117:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":118:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":118:73)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":119:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":121:12)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":121:5)
#loc64 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc65 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":55:19)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":50:1)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":71:1)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":62:13)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":62:36)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":63:13)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":63:27)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":52:5)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":70:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":52:8)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":52:27)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":53:5)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":56:5)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":58:5)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":55:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":59:9)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":69:9)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":65:13)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":68:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":65:17)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":65:24)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":65:36)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":65:46)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":65:55)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":66:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":67:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":67:17)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":74:1)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":90:1)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":81:13)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":81:36)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":82:13)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":82:27)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":76:5)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":89:5)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":76:8)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":76:26)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":77:5)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":78:9)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":88:9)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":84:13)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":87:13)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":84:17)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":84:24)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":84:36)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":84:46)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":84:55)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":85:13)
#loc114 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":86:27)
#loc115 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_11.c":86:17)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc14, #loc15])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc18, #loc19])
#loc124 = loc(fused[#loc20, #loc17])
#loc125 = loc(fused[#loc21, #loc22])
#loc126 = loc(fused[#loc23, #loc24])
#loc127 = loc(fused[#loc25, #loc27])
#loc128 = loc(fused[#loc28, #loc24])
#loc129 = loc(fused[#loc30, #loc31])
#loc130 = loc(fused[#loc32, #loc33])
#loc131 = loc(fused[#loc34, #loc35])
#loc132 = loc(fused[#loc36, #loc37])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc55, #loc56])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc63, #loc62])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc67, #loc68])
#loc142 = loc(fused[#loc69, #loc70])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc73, #loc74])
#loc145 = loc(fused[#loc75, #loc76])
#loc146 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc85, #loc89])
#loc150 = loc(fused[#loc90, #loc84])
#loc151 = loc(fused[#loc93, #loc94])
#loc152 = loc(fused[#loc95, #loc96])
#loc153 = loc(fused[#loc97, #loc98])
#loc154 = loc(fused[#loc99, #loc100])
#loc155 = loc(fused[#loc101, #loc102])
#loc156 = loc(fused[#loc103, #loc100])
#loc157 = loc(fused[#loc104, #loc105])
#loc158 = loc(fused[#loc106, #loc107])
#loc159 = loc(fused[#loc108, #loc112])
#loc160 = loc(fused[#loc113, #loc107])
