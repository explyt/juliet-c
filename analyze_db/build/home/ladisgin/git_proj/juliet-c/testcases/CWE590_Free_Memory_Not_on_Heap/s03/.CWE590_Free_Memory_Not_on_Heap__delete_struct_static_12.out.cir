!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc6 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":108:10)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":108:14)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":108:20)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":108:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc162 = loc(fused[#loc103, #loc104])
#loc163 = loc(fused[#loc105, #loc106])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEvE10dataBuffer = #cir.zero : !ty__twoIntsStruct {alignment = 4 : i64} loc(#loc1)
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc119)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc120)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc6)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc6)
    cir.return loc(#loc6)
  } loc(#loc6)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc121)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc122)
  cir.func @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
    cir.scope {
      %5 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc19)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc127)
      cir.if %6 {
        cir.scope {
          %7 = cir.get_global @_ZZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEvE10dataBuffer : !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %9 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc130)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %11 = cir.get_member %7[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc131)
          cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
        } loc(#loc129)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc135)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc134)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
          cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc37)
          cir.store %10, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc39)
          %12 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
          %15 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %17 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
          cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
        } loc(#loc133)
      } loc(#loc128)
    } loc(#loc126)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc48)
    cir.return loc(#loc12)
  } loc(#loc123)
  cir.func internal private @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
    cir.scope {
      %5 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc57)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc143)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc146)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc147)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc146)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
          cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc65)
          cir.store %10, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc146)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %12 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc148)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc69)
          %15 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc149)
          %17 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
          cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
        } loc(#loc145)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc152)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc153)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc152)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
          cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc76)
          cir.store %10, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc78)
          %12 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc80)
          %15 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          %17 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
          cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
        } loc(#loc151)
      } loc(#loc144)
    } loc(#loc142)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc85)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc86)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc87)
    cir.return loc(#loc50)
  } loc(#loc139)
  cir.func @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12L7goodG2BEv() : () -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc110)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.call @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_124goodEv() : () -> () loc(#loc112)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.call @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEv() : () -> () loc(#loc115)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc117)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.return %15 : !s32i loc(#loc164)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":34:34)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":26:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":53:1)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":28:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":28:21)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":29:12)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":29:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":30:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":49:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":30:8)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":30:33)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":31:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":39:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":41:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":32:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":38:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":35:33)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":35:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":36:33)
#loc30 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":36:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":37:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":37:21)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":42:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":48:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":44:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":44:46)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":44:42)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":45:34)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":45:13)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":46:34)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":46:13)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":47:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":47:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":50:21)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":50:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":52:12)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":26:6)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":61:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":88:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":63:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":63:21)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":64:12)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":64:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":65:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":84:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":65:8)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":65:33)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":66:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":74:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":76:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":67:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":73:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":69:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":69:46)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":69:42)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":70:34)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":70:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":71:34)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":71:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":72:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":72:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":77:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":83:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":79:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":79:46)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":79:42)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":80:34)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":80:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":81:34)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":81:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":82:20)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":82:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":85:21)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":85:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":87:12)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":61:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":90:1)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":93:1)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":92:5)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc96 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":113:15)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":115:15)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":118:15)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":120:15)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":108:1)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":123:1)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":109:1)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":111:27)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":111:22)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":111:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":113:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":114:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":115:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":118:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":119:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":120:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":122:12)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":122:5)
#loc119 = loc(fused[#loc2, #loc3])
#loc120 = loc(fused[#loc4, #loc5])
#loc121 = loc(fused[#loc7, #loc8])
#loc122 = loc(fused[#loc9, #loc10])
#loc123 = loc(fused[#loc11, #loc12])
#loc124 = loc(fused[#loc13, #loc14])
#loc125 = loc(fused[#loc16, #loc15])
#loc126 = loc(fused[#loc17, #loc18])
#loc127 = loc(fused[#loc19, #loc20])
#loc128 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc129 = loc(fused[#loc24, #loc25])
#loc130 = loc(fused[#loc28, #loc26])
#loc131 = loc(fused[#loc31, #loc29])
#loc132 = loc(fused[#loc32, #loc33])
#loc133 = loc(fused[#loc34, #loc35])
#loc134 = loc(fused[#loc36, #loc37])
#loc135 = loc(fused[#loc38, #loc37])
#loc136 = loc(fused[#loc40, #loc39])
#loc137 = loc(fused[#loc42, #loc41])
#loc138 = loc(fused[#loc44, #loc43])
#loc139 = loc(fused[#loc49, #loc50])
#loc140 = loc(fused[#loc51, #loc52])
#loc141 = loc(fused[#loc54, #loc53])
#loc142 = loc(fused[#loc55, #loc56])
#loc143 = loc(fused[#loc57, #loc58])
#loc144 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc145 = loc(fused[#loc62, #loc63])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc66, #loc65])
#loc148 = loc(fused[#loc68, #loc67])
#loc149 = loc(fused[#loc70, #loc69])
#loc150 = loc(fused[#loc72, #loc71])
#loc151 = loc(fused[#loc73, #loc74])
#loc152 = loc(fused[#loc75, #loc76])
#loc153 = loc(fused[#loc77, #loc76])
#loc154 = loc(fused[#loc79, #loc78])
#loc155 = loc(fused[#loc81, #loc80])
#loc156 = loc(fused[#loc83, #loc82])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc118, #loc117])
