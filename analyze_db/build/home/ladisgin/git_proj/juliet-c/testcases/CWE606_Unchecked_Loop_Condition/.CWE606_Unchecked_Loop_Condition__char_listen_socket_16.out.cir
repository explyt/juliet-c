!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":320:10)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":320:14)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":320:20)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":320:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc598 = loc(fused[#loc237, #loc238])
#loc599 = loc(fused[#loc239, #loc240])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc502)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc503)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc504)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc505)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc507)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc508)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc509)
  cir.func private @close(!s32i) -> !s32i loc(#loc510)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc511)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printIntLine(!s32i) loc(#loc512)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc514)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc515)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc515)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc515)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc516)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc34)
        cir.condition(%5) loc(#loc34)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc519)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc520)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc521)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc522)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc523)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc524)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc44)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc522)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc523)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
          cir.store %16, %9 : !u64i, !cir.ptr<!u64i> loc(#loc524)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc55)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc526)
              cir.scope {
                %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %75 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc62)
                %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc528)
                cir.if %77 {
                  cir.break loc(#loc64)
                } loc(#loc529)
              } loc(#loc527)
              %21 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc530)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc531)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc532)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc72)
              %26 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc533)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc75)
              %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc75)
              %29 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc534)
              %31 = cir.const #cir.int<27015> : !s32i loc(#loc79)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc79)
              %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
              %34 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc535)
              cir.scope {
                %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                %75 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc537)
                %76 = cir.const #cir.int<16> : !u64i loc(#loc538)
                %77 = cir.cast(integral, %76 : !u64i), !u32i loc(#loc538)
                %78 = cir.call @bind(%74, %75, %77) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc92)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc539)
                cir.if %81 {
                  cir.break loc(#loc94)
                } loc(#loc540)
              } loc(#loc536)
              cir.scope {
                %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %75 = cir.const #cir.int<5> : !s32i loc(#loc98)
                %76 = cir.call @listen(%74, %75) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc100)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc542)
                cir.if %79 {
                  cir.break loc(#loc102)
                } loc(#loc543)
              } loc(#loc541)
              %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
              %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
              cir.store %38, %8 : !s32i, !cir.ptr<!s32i> loc(#loc544)
              cir.scope {
                %74 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %75 = cir.const #cir.int<1> : !s32i loc(#loc112)
                %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc112)
                %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc546)
                cir.if %77 {
                  cir.break loc(#loc114)
                } loc(#loc547)
              } loc(#loc545)
              %39 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
              %41 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc117)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc118)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc548)
              %44 = cir.const #cir.int<1> : !u64i loc(#loc549)
              %45 = cir.const #cir.int<100> : !s32i loc(#loc123)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc123)
              %47 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc124)
              %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc550)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc125)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc125)
              %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc551)
              %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc552)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc127)
              %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
              %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc128)
              cir.store %55, %4 : !s32i, !cir.ptr<!s32i> loc(#loc553)
              cir.scope {
                %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                %75 = cir.const #cir.int<1> : !s32i loc(#loc134)
                %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc134)
                %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc555)
                %78 = cir.ternary(%77, true {
                  %79 = cir.const #true loc(#loc135)
                  cir.yield %79 : !cir.bool loc(#loc135)
                }, false {
                  %79 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc137)
                  %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc556)
                  %82 = cir.ternary(%81, true {
                    %83 = cir.const #true loc(#loc135)
                    cir.yield %83 : !cir.bool loc(#loc135)
                  }, false {
                    %83 = cir.const #false loc(#loc135)
                    cir.yield %83 : !cir.bool loc(#loc135)
                  }) : (!cir.bool) -> !cir.bool loc(#loc135)
                  cir.yield %82 : !cir.bool loc(#loc135)
                }) : (!cir.bool) -> !cir.bool loc(#loc135)
                cir.if %78 {
                  cir.break loc(#loc139)
                } loc(#loc557)
              } loc(#loc554)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc140)
              %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc140)
              %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
              %59 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc143)
              %62 = cir.const #cir.int<1> : !u64i loc(#loc558)
              %63 = cir.binop(div, %61, %62) : !u64i loc(#loc559)
              %64 = cir.binop(add, %59, %63) : !u64i loc(#loc560)
              %65 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc146)
              cir.store %57, %65 : !s8i, !cir.ptr<!s8i> loc(#loc561)
              %66 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc147)
              %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              %68 = cir.const #cir.int<13> : !s32i loc(#loc149)
              %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
              cir.store %69, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc562)
              cir.scope {
                %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                cir.if %75 {
                  %76 = cir.const #cir.int<0> : !s32i loc(#loc156)
                  %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc156)
                  %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                  cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc565)
                } loc(#loc564)
              } loc(#loc563)
              %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc159)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
              %72 = cir.const #cir.int<10> : !s32i loc(#loc161)
              %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
              cir.store %73, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc566)
              cir.scope {
                %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
                cir.if %75 {
                  %76 = cir.const #cir.int<0> : !s32i loc(#loc168)
                  %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc168)
                  %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                  cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc569)
                } loc(#loc568)
              } loc(#loc567)
              cir.yield loc(#loc52)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc171)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc171)
              cir.condition(%18) loc(#loc171)
            } loc(#loc525)
          } loc(#loc525)
          cir.scope {
            %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc174)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc175)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc571)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc178)
            } loc(#loc572)
          } loc(#loc570)
          cir.scope {
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc181)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc182)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc182)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc574)
            cir.if %20 {
              %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc185)
            } loc(#loc575)
          } loc(#loc573)
        } loc(#loc518)
        cir.break loc(#loc186)
      } loc(#loc517)
    } loc(#loc517)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc189)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc189)
        cir.condition(%5) loc(#loc189)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc578)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc579)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc580)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc198)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc21)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc21)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc198)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc200)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc582)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc202)
              cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc584)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc206)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc586)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc587)
                  cir.condition(%19) loc(#loc210)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc213)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc589)
                  } loc(#loc588)
                  cir.yield loc(#loc205)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc215)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc590)
                  cir.yield loc(#loc585)
                } loc(#loc585)
              } loc(#loc585)
              %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc216)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc217)
            } loc(#loc583)
          } loc(#loc581)
        } loc(#loc577)
        cir.break loc(#loc218)
      } loc(#loc576)
    } loc(#loc576)
    cir.return loc(#loc25)
  } loc(#loc513)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc592)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc221)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc593)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc223)
    cir.return loc(#loc220)
  } loc(#loc591)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc594)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc595)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc596)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc234)
  cir.func @main(%arg0: !s32i loc(fused[#loc237, #loc238]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc239, #loc240])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc598)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc599)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc236)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc241)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc242)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc243)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc243)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc244)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc231)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc231)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc600)
    cir.call @CWE606_Unchecked_Loop_Condition__char_listen_socket_16_good() : () -> () loc(#loc246)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc232)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc232)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc248)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc233)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc233)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc249)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc601)
    cir.call @CWE606_Unchecked_Loop_Condition__char_listen_socket_16_bad() : () -> () loc(#loc250)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc234)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc234)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc252)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc253)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc602)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc602)
    cir.return %17 : !s32i loc(#loc602)
  } loc(#loc597)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc604)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc605)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc605)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc605)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc606)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc265)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc265)
        cir.condition(%5) loc(#loc265)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc609)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc610)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc611)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc612)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc613)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc614)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc275)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc275)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc612)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc277)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc277)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc613)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc280)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc281)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc280)
          cir.store %16, %9 : !u64i, !cir.ptr<!u64i> loc(#loc614)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc284)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc285)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc286)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
              cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc616)
              cir.scope {
                %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                %75 = cir.const #cir.int<1> : !s32i loc(#loc293)
                %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc293)
                %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc618)
                cir.if %77 {
                  cir.break loc(#loc295)
                } loc(#loc619)
              } loc(#loc617)
              %21 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc620)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc298)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc621)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc622)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc303)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc303)
              %26 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc623)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc305)
              %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc305)
              %29 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc624)
              %31 = cir.const #cir.int<27015> : !s32i loc(#loc307)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc307)
              %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc308)
              %34 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc625)
              cir.scope {
                %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                %75 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc627)
                %76 = cir.const #cir.int<16> : !u64i loc(#loc628)
                %77 = cir.cast(integral, %76 : !u64i), !u32i loc(#loc628)
                %78 = cir.call @bind(%74, %75, %77) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc318)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc319)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc319)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc629)
                cir.if %81 {
                  cir.break loc(#loc321)
                } loc(#loc630)
              } loc(#loc626)
              cir.scope {
                %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                %75 = cir.const #cir.int<5> : !s32i loc(#loc325)
                %76 = cir.call @listen(%74, %75) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc326)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc327)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc327)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc632)
                cir.if %79 {
                  cir.break loc(#loc329)
                } loc(#loc633)
              } loc(#loc631)
              %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc330)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc331)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc332)
              %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc333)
              cir.store %38, %8 : !s32i, !cir.ptr<!s32i> loc(#loc634)
              cir.scope {
                %74 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                %75 = cir.const #cir.int<1> : !s32i loc(#loc339)
                %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc339)
                %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc636)
                cir.if %77 {
                  cir.break loc(#loc341)
                } loc(#loc637)
              } loc(#loc635)
              %39 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc342)
              %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc343)
              %41 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc344)
              %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc345)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc638)
              %44 = cir.const #cir.int<1> : !u64i loc(#loc639)
              %45 = cir.const #cir.int<100> : !s32i loc(#loc350)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc350)
              %47 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc351)
              %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc640)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc352)
              %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc352)
              %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc641)
              %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc642)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc354)
              %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc355)
              %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc355)
              cir.store %55, %4 : !s32i, !cir.ptr<!s32i> loc(#loc643)
              cir.scope {
                %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc360)
                %75 = cir.const #cir.int<1> : !s32i loc(#loc361)
                %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc361)
                %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc645)
                %78 = cir.ternary(%77, true {
                  %79 = cir.const #true loc(#loc362)
                  cir.yield %79 : !cir.bool loc(#loc362)
                }, false {
                  %79 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                  %80 = cir.const #cir.int<0> : !s32i loc(#loc364)
                  %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc646)
                  %82 = cir.ternary(%81, true {
                    %83 = cir.const #true loc(#loc362)
                    cir.yield %83 : !cir.bool loc(#loc362)
                  }, false {
                    %83 = cir.const #false loc(#loc362)
                    cir.yield %83 : !cir.bool loc(#loc362)
                  }) : (!cir.bool) -> !cir.bool loc(#loc362)
                  cir.yield %82 : !cir.bool loc(#loc362)
                }) : (!cir.bool) -> !cir.bool loc(#loc362)
                cir.if %78 {
                  cir.break loc(#loc366)
                } loc(#loc647)
              } loc(#loc644)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc367)
              %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc367)
              %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc368)
              %59 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc369)
              %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc370)
              %62 = cir.const #cir.int<1> : !u64i loc(#loc648)
              %63 = cir.binop(div, %61, %62) : !u64i loc(#loc649)
              %64 = cir.binop(add, %59, %63) : !u64i loc(#loc650)
              %65 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc373)
              cir.store %57, %65 : !s8i, !cir.ptr<!s8i> loc(#loc651)
              %66 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc374)
              %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc375)
              %68 = cir.const #cir.int<13> : !s32i loc(#loc376)
              %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc374)
              cir.store %69, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc652)
              cir.scope {
                %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc381)
                %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc381)
                cir.if %75 {
                  %76 = cir.const #cir.int<0> : !s32i loc(#loc383)
                  %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc383)
                  %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc384)
                  cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc655)
                } loc(#loc654)
              } loc(#loc653)
              %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc386)
              %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc387)
              %72 = cir.const #cir.int<10> : !s32i loc(#loc388)
              %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc386)
              cir.store %73, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc656)
              cir.scope {
                %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc393)
                %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc393)
                cir.if %75 {
                  %76 = cir.const #cir.int<0> : !s32i loc(#loc395)
                  %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc395)
                  %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc396)
                  cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc659)
                } loc(#loc658)
              } loc(#loc657)
              cir.yield loc(#loc283)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc398)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc398)
              cir.condition(%18) loc(#loc398)
            } loc(#loc615)
          } loc(#loc615)
          cir.scope {
            %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc401)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc402)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc402)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc661)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc404)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc405)
            } loc(#loc662)
          } loc(#loc660)
          cir.scope {
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc408)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc409)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc409)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc664)
            cir.if %20 {
              %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc411)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc412)
            } loc(#loc665)
          } loc(#loc663)
        } loc(#loc608)
        cir.break loc(#loc413)
      } loc(#loc607)
    } loc(#loc607)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc416)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc416)
        cir.condition(%5) loc(#loc416)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc668)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc669)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc670)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc425)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc426)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc427)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc427)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc425)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc428)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc672)
            cir.if %13 {
              cir.scope {
                %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                %15 = cir.const #cir.int<10000> : !s32i loc(#loc433)
                %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc675)
                cir.if %16 {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc435)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc677)
                  cir.scope {
                    %19 = cir.const #cir.int<0> : !s32i loc(#loc439)
                    cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc679)
                    cir.for : cond {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc441)
                      %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc442)
                      %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc680)
                      cir.condition(%22) loc(#loc443)
                    } body {
                      cir.scope {
                        %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                        %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc446)
                        cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc682)
                      } loc(#loc681)
                      cir.yield loc(#loc438)
                    } step {
                      %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc447)
                      %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc448)
                      cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc683)
                      cir.yield loc(#loc678)
                    } loc(#loc678)
                  } loc(#loc678)
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc449)
                  cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc450)
                } loc(#loc676)
              } loc(#loc674)
            } loc(#loc673)
          } loc(#loc671)
        } loc(#loc667)
        cir.break loc(#loc451)
      } loc(#loc666)
    } loc(#loc666)
    cir.return loc(#loc256)
  } loc(#loc603)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc684)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc454)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc686)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc687)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc687)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc687)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc461)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc688)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc465)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc465)
        cir.condition(%5) loc(#loc465)
      } do {
        %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc466)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc467)
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc454)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc454)
        %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc466)
        cir.break loc(#loc468)
      } loc(#loc689)
    } loc(#loc689)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc471)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc471)
        cir.condition(%5) loc(#loc471)
      } do {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc692)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc693)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc694)
          cir.scope {
            %7 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc480)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc481)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc482)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc482)
            %11 = cir.call @__isoc99_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc480)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc483)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc696)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc485)
              cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc698)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc489)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc700)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc491)
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc492)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc701)
                  cir.condition(%19) loc(#loc493)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc495)
                    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc496)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc703)
                  } loc(#loc702)
                  cir.yield loc(#loc488)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc497)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc498)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc704)
                  cir.yield loc(#loc699)
                } loc(#loc699)
              } loc(#loc699)
              %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc499)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc500)
            } loc(#loc697)
          } loc(#loc695)
        } loc(#loc691)
        cir.break loc(#loc501)
      } loc(#loc690)
    } loc(#loc690)
    cir.return loc(#loc456)
  } loc(#loc685)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":246:1)
#loc16 = loc("/usr/include/string.h":247:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/stdio.h":468:1)
#loc20 = loc("/usr/include/stdio.h":468:12)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":141:30)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":49:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":155:1)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":51:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":51:12)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":52:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":52:28)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":53:12)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":53:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":54:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":136:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":54:11)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":56:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":134:9)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":61:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":61:17)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":62:13)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":62:32)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":63:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":63:19)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":64:13)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":64:35)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":65:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":65:35)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":66:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":66:41)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":66:30)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":66:37)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":67:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":119:21)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":77:39)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":77:48)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":77:61)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":77:32)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":77:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":77:72)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":78:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":81:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":78:21)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":78:37)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":79:17)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":80:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:24)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:25)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:34)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:37)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:51)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":82:52)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":83:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":83:17)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":84:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":84:17)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":85:42)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":85:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":85:17)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":85:50)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:17)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":89:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:26)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:58)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:59)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:68)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:82)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:21)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":86:88)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":87:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":88:21)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":90:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":93:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":90:28)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":90:42)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":90:21)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":90:61)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":91:17)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":92:21)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":94:39)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":94:53)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":94:59)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":94:32)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":94:17)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":94:63)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":95:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":98:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":95:21)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":95:37)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":96:17)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":97:21)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:35)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:58)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:65)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:63)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:49)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:72)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:75)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:86)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:91)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:97)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:107)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:108)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:111)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:30)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:17)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":100:112)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":101:17)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":104:17)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":101:21)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":101:35)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":101:48)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":101:51)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":101:65)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":102:17)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":103:21)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:61)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:17)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:22)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:32)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:45)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:56)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":106:57)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":108:27)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":108:34)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":108:40)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":108:17)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":108:44)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":109:17)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":112:17)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":109:21)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":110:17)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":111:32)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":111:22)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":111:21)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":113:27)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":113:34)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":113:40)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":113:17)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":113:44)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":114:17)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":117:17)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":114:21)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":115:17)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":116:32)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":116:22)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":116:21)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":119:20)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":120:13)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":123:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":120:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":120:33)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":121:13)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":122:30)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":122:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":124:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":127:13)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":124:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":124:33)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":125:13)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":126:30)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":126:17)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":135:9)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":137:5)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":154:5)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":137:11)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":139:9)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":152:9)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":140:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":140:17)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":140:20)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":140:23)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":141:13)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":151:13)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":141:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":141:24)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":141:43)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":142:13)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":144:31)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":144:17)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:17)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":149:17)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:26)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:22)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:29)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:33)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:31)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":146:17)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":148:32)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":148:21)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:37)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":145:36)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":150:30)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":150:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":153:9)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":305:1)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":309:1)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":307:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":307:13)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":308:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":308:13)
#loc225 = loc("/usr/include/stdlib.h":575:1)
#loc226 = loc("/usr/include/stdlib.h":575:41)
#loc227 = loc("/usr/include/time.h":76:1)
#loc228 = loc("/usr/include/time.h":76:38)
#loc229 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc230 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":325:15)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":327:15)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":330:15)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":332:15)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":320:1)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":335:1)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":321:1)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":323:27)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":323:22)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":323:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":325:5)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":326:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":326:65)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":327:5)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":330:5)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":331:5)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":331:64)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":332:5)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":334:12)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":334:5)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":162:1)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":271:1)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":164:5)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":164:12)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":165:5)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":165:28)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":166:12)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":166:5)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":167:5)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":249:5)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":167:11)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":169:9)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":247:9)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":174:13)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":174:17)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":175:13)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":175:32)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":176:13)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":176:19)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":177:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":177:35)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":178:13)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":178:35)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":179:13)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":179:41)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":179:30)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":179:37)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":180:13)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":232:21)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":190:39)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":190:48)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":190:61)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":190:32)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":190:17)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":190:72)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":191:17)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":194:17)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":191:21)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":191:37)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":192:17)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":193:21)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:24)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:25)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:34)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:37)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:51)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:17)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":195:52)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":196:38)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":196:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":197:43)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":197:17)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":198:42)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":198:36)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":198:17)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":198:50)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:17)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":202:17)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:26)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:58)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:59)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:68)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:82)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:21)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":199:88)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":200:17)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":201:21)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":203:17)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":206:17)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":203:28)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":203:42)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":203:21)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":203:61)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":204:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":205:21)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":207:39)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":207:53)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":207:59)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":207:32)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":207:17)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":207:63)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":208:17)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":211:17)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":208:21)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":208:37)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":209:17)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":210:21)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:35)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:58)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:65)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:63)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:49)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:72)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:75)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:86)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:91)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:97)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:107)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:108)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:111)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:30)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":213:112)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":214:17)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":217:17)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":214:21)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":214:35)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":214:48)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":214:51)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":214:65)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":215:17)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":216:21)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:61)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:17)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:22)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:32)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:45)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:56)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":219:57)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":221:27)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":221:34)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":221:40)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":221:17)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":221:44)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":222:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":225:17)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":222:21)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":223:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":224:32)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":224:22)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":224:21)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":226:27)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":226:34)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":226:40)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":226:17)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":226:44)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":227:17)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":230:17)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":227:21)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":228:17)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":229:32)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":229:22)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":229:21)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":232:20)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":233:13)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":236:13)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":233:17)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":233:33)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":234:13)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":235:30)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":235:17)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":237:13)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":240:13)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":237:17)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":237:33)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":238:13)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":239:30)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":239:17)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":248:9)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":250:5)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":270:5)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":250:11)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":252:9)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":268:9)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":253:13)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":253:17)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":253:20)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":253:23)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":254:13)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":267:13)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":254:17)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":254:24)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":254:30)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":254:43)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":255:13)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":257:17)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":266:17)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":257:21)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":257:25)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":258:17)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":259:35)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":259:21)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:21)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":264:21)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:30)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:26)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:33)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:37)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:35)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":261:21)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":263:36)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":263:25)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:41)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":260:40)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":265:34)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":265:21)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":269:9)
#loc452 = loc("/usr/include/string.h":141:1)
#loc453 = loc("/usr/include/string.h":142:14)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":282:22)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":274:1)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":303:1)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":276:5)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":276:12)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":277:5)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":277:28)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":278:12)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":278:5)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":279:5)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":284:5)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":279:11)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":282:9)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":282:16)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":283:9)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":285:5)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":302:5)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":285:11)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":287:9)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":300:9)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":288:13)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":288:17)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":288:20)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":288:23)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":289:13)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":299:13)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":289:17)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":289:24)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":289:30)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":289:43)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":290:13)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":292:31)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":292:17)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:17)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":297:17)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:26)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:22)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:29)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:33)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:31)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":294:17)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":296:32)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":296:21)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:37)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":293:36)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":298:30)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":298:17)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_16.c":301:9)
#loc502 = loc(fused[#loc1, #loc2])
#loc503 = loc(fused[#loc3, #loc4])
#loc504 = loc(fused[#loc5, #loc6])
#loc505 = loc(fused[#loc7, #loc8])
#loc506 = loc(fused[#loc9, #loc10])
#loc507 = loc(fused[#loc11, #loc12])
#loc508 = loc(fused[#loc13, #loc14])
#loc509 = loc(fused[#loc15, #loc16])
#loc510 = loc(fused[#loc17, #loc18])
#loc511 = loc(fused[#loc19, #loc20])
#loc512 = loc(fused[#loc22, #loc23])
#loc513 = loc(fused[#loc24, #loc25])
#loc514 = loc(fused[#loc26, #loc27])
#loc515 = loc(fused[#loc28, #loc29])
#loc516 = loc(fused[#loc31, #loc30])
#loc517 = loc(fused[#loc32, #loc33])
#loc518 = loc(fused[#loc35, #loc36])
#loc519 = loc(fused[#loc37, #loc38])
#loc520 = loc(fused[#loc39, #loc40])
#loc521 = loc(fused[#loc41, #loc42])
#loc522 = loc(fused[#loc43, #loc44])
#loc523 = loc(fused[#loc45, #loc46])
#loc524 = loc(fused[#loc47, #loc48])
#loc525 = loc(fused[#loc51, #loc52])
#loc526 = loc(fused[#loc57, #loc58])
#loc527 = loc(fused[#loc59, #loc60])
#loc528 = loc(fused[#loc61, #loc62])
#loc529 = loc(fused[#loc63, #loc60])
#loc530 = loc(fused[#loc65, #loc66])
#loc531 = loc(fused[#loc68, #loc69])
#loc532 = loc(fused[#loc70, #loc71])
#loc533 = loc(fused[#loc74, #loc72])
#loc534 = loc(fused[#loc78, #loc75])
#loc535 = loc(fused[#loc82, #loc83])
#loc536 = loc(fused[#loc84, #loc85])
#loc537 = loc(fused[#loc87, #loc88])
#loc538 = loc(fused[#loc89, #loc90])
#loc539 = loc(fused[#loc91, #loc92])
#loc540 = loc(fused[#loc93, #loc85])
#loc541 = loc(fused[#loc95, #loc96])
#loc542 = loc(fused[#loc99, #loc100])
#loc543 = loc(fused[#loc101, #loc96])
#loc544 = loc(fused[#loc107, #loc108])
#loc545 = loc(fused[#loc109, #loc110])
#loc546 = loc(fused[#loc111, #loc112])
#loc547 = loc(fused[#loc113, #loc110])
#loc548 = loc(fused[#loc119, #loc120])
#loc549 = loc(fused[#loc121, #loc122])
#loc550 = loc(fused[#loc123, #loc124])
#loc551 = loc(fused[#loc123, #loc125])
#loc552 = loc(fused[#loc121, #loc126])
#loc553 = loc(fused[#loc129, #loc130])
#loc554 = loc(fused[#loc131, #loc132])
#loc555 = loc(fused[#loc133, #loc134])
#loc556 = loc(fused[#loc136, #loc137])
#loc557 = loc(fused[#loc138, #loc132])
#loc558 = loc(fused[#loc144, #loc145])
#loc559 = loc(fused[#loc143, #loc145])
#loc560 = loc(fused[#loc142, #loc145])
#loc561 = loc(fused[#loc141, #loc140])
#loc562 = loc(fused[#loc150, #loc151])
#loc563 = loc(fused[#loc152, #loc153])
#loc564 = loc(fused[#loc155, #loc153])
#loc565 = loc(fused[#loc158, #loc156])
#loc566 = loc(fused[#loc162, #loc163])
#loc567 = loc(fused[#loc164, #loc165])
#loc568 = loc(fused[#loc167, #loc165])
#loc569 = loc(fused[#loc170, #loc168])
#loc570 = loc(fused[#loc172, #loc173])
#loc571 = loc(fused[#loc174, #loc175])
#loc572 = loc(fused[#loc176, #loc173])
#loc573 = loc(fused[#loc179, #loc180])
#loc574 = loc(fused[#loc181, #loc182])
#loc575 = loc(fused[#loc183, #loc180])
#loc576 = loc(fused[#loc187, #loc188])
#loc577 = loc(fused[#loc190, #loc191])
#loc578 = loc(fused[#loc192, #loc193])
#loc579 = loc(fused[#loc192, #loc194])
#loc580 = loc(fused[#loc192, #loc195])
#loc581 = loc(fused[#loc196, #loc197])
#loc582 = loc(fused[#loc198, #loc200])
#loc583 = loc(fused[#loc201, #loc197])
#loc584 = loc(fused[#loc203, #loc202])
#loc585 = loc(fused[#loc204, #loc205])
#loc586 = loc(fused[#loc207, #loc206])
#loc587 = loc(fused[#loc208, #loc209])
#loc588 = loc(fused[#loc211, #loc205])
#loc589 = loc(fused[#loc213, #loc212])
#loc590 = loc(fused[#loc215, #loc214])
#loc591 = loc(fused[#loc219, #loc220])
#loc592 = loc(fused[#loc221, #loc222])
#loc593 = loc(fused[#loc223, #loc224])
#loc594 = loc(fused[#loc225, #loc226])
#loc595 = loc(fused[#loc227, #loc228])
#loc596 = loc(fused[#loc229, #loc230])
#loc597 = loc(fused[#loc235, #loc236])
#loc600 = loc(fused[#loc246, #loc247])
#loc601 = loc(fused[#loc250, #loc251])
#loc602 = loc(fused[#loc254, #loc253])
#loc603 = loc(fused[#loc255, #loc256])
#loc604 = loc(fused[#loc257, #loc258])
#loc605 = loc(fused[#loc259, #loc260])
#loc606 = loc(fused[#loc262, #loc261])
#loc607 = loc(fused[#loc263, #loc264])
#loc608 = loc(fused[#loc266, #loc267])
#loc609 = loc(fused[#loc268, #loc269])
#loc610 = loc(fused[#loc270, #loc271])
#loc611 = loc(fused[#loc272, #loc273])
#loc612 = loc(fused[#loc274, #loc275])
#loc613 = loc(fused[#loc276, #loc277])
#loc614 = loc(fused[#loc278, #loc279])
#loc615 = loc(fused[#loc282, #loc283])
#loc616 = loc(fused[#loc288, #loc289])
#loc617 = loc(fused[#loc290, #loc291])
#loc618 = loc(fused[#loc292, #loc293])
#loc619 = loc(fused[#loc294, #loc291])
#loc620 = loc(fused[#loc296, #loc297])
#loc621 = loc(fused[#loc299, #loc300])
#loc622 = loc(fused[#loc301, #loc302])
#loc623 = loc(fused[#loc304, #loc303])
#loc624 = loc(fused[#loc306, #loc305])
#loc625 = loc(fused[#loc309, #loc310])
#loc626 = loc(fused[#loc311, #loc312])
#loc627 = loc(fused[#loc314, #loc315])
#loc628 = loc(fused[#loc316, #loc317])
#loc629 = loc(fused[#loc318, #loc319])
#loc630 = loc(fused[#loc320, #loc312])
#loc631 = loc(fused[#loc322, #loc323])
#loc632 = loc(fused[#loc326, #loc327])
#loc633 = loc(fused[#loc328, #loc323])
#loc634 = loc(fused[#loc334, #loc335])
#loc635 = loc(fused[#loc336, #loc337])
#loc636 = loc(fused[#loc338, #loc339])
#loc637 = loc(fused[#loc340, #loc337])
#loc638 = loc(fused[#loc346, #loc347])
#loc639 = loc(fused[#loc348, #loc349])
#loc640 = loc(fused[#loc350, #loc351])
#loc641 = loc(fused[#loc350, #loc352])
#loc642 = loc(fused[#loc348, #loc353])
#loc643 = loc(fused[#loc356, #loc357])
#loc644 = loc(fused[#loc358, #loc359])
#loc645 = loc(fused[#loc360, #loc361])
#loc646 = loc(fused[#loc363, #loc364])
#loc647 = loc(fused[#loc365, #loc359])
#loc648 = loc(fused[#loc371, #loc372])
#loc649 = loc(fused[#loc370, #loc372])
#loc650 = loc(fused[#loc369, #loc372])
#loc651 = loc(fused[#loc368, #loc367])
#loc652 = loc(fused[#loc377, #loc378])
#loc653 = loc(fused[#loc379, #loc380])
#loc654 = loc(fused[#loc382, #loc380])
#loc655 = loc(fused[#loc385, #loc383])
#loc656 = loc(fused[#loc389, #loc390])
#loc657 = loc(fused[#loc391, #loc392])
#loc658 = loc(fused[#loc394, #loc392])
#loc659 = loc(fused[#loc397, #loc395])
#loc660 = loc(fused[#loc399, #loc400])
#loc661 = loc(fused[#loc401, #loc402])
#loc662 = loc(fused[#loc403, #loc400])
#loc663 = loc(fused[#loc406, #loc407])
#loc664 = loc(fused[#loc408, #loc409])
#loc665 = loc(fused[#loc410, #loc407])
#loc666 = loc(fused[#loc414, #loc415])
#loc667 = loc(fused[#loc417, #loc418])
#loc668 = loc(fused[#loc419, #loc420])
#loc669 = loc(fused[#loc419, #loc421])
#loc670 = loc(fused[#loc419, #loc422])
#loc671 = loc(fused[#loc423, #loc424])
#loc672 = loc(fused[#loc425, #loc428])
#loc673 = loc(fused[#loc429, #loc424])
#loc674 = loc(fused[#loc430, #loc431])
#loc675 = loc(fused[#loc432, #loc433])
#loc676 = loc(fused[#loc434, #loc431])
#loc677 = loc(fused[#loc436, #loc435])
#loc678 = loc(fused[#loc437, #loc438])
#loc679 = loc(fused[#loc440, #loc439])
#loc680 = loc(fused[#loc441, #loc442])
#loc681 = loc(fused[#loc444, #loc438])
#loc682 = loc(fused[#loc446, #loc445])
#loc683 = loc(fused[#loc448, #loc447])
#loc684 = loc(fused[#loc452, #loc453])
#loc685 = loc(fused[#loc455, #loc456])
#loc686 = loc(fused[#loc457, #loc458])
#loc687 = loc(fused[#loc459, #loc460])
#loc688 = loc(fused[#loc462, #loc461])
#loc689 = loc(fused[#loc463, #loc464])
#loc690 = loc(fused[#loc469, #loc470])
#loc691 = loc(fused[#loc472, #loc473])
#loc692 = loc(fused[#loc474, #loc475])
#loc693 = loc(fused[#loc474, #loc476])
#loc694 = loc(fused[#loc474, #loc477])
#loc695 = loc(fused[#loc478, #loc479])
#loc696 = loc(fused[#loc480, #loc483])
#loc697 = loc(fused[#loc484, #loc479])
#loc698 = loc(fused[#loc486, #loc485])
#loc699 = loc(fused[#loc487, #loc488])
#loc700 = loc(fused[#loc490, #loc489])
#loc701 = loc(fused[#loc491, #loc492])
#loc702 = loc(fused[#loc494, #loc488])
#loc703 = loc(fused[#loc496, #loc495])
#loc704 = loc(fused[#loc498, #loc497])
