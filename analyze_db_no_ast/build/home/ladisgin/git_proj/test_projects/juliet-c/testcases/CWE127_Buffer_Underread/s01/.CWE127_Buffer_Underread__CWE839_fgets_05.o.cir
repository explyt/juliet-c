!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc270)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc271)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc272)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc273)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc274)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @printIntLine(!s32i) loc(#loc275)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fgets_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc282)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc282)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc282)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc33)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc33)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc33)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc33)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc33)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc33)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc33)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc33)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc272)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc284)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc37)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc285)
          } loc(#loc283)
        } loc(#loc281)
      } loc(#loc280)
    } loc(#loc279)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc48)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc290)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc290)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc290)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc57)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc292)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc58)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc63)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc63)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc63)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc64)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc65)
            } loc(#loc293)
          } loc(#loc291)
        } loc(#loc289)
      } loc(#loc288)
    } loc(#loc287)
    cir.return loc(#loc16)
  } loc(#loc276)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fgets_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc297)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc298)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc67)
  } loc(#loc294)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc299)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc85)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc89)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc306)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc306)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc306)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc98)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc98)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc98)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc98)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc98)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc98)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc98)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc98)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc272)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc100)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc308)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc102)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc310)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc111)
            } loc(#loc309)
          } loc(#loc307)
        } loc(#loc305)
      } loc(#loc304)
    } loc(#loc303)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc299)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc114)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc314)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc314)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc314)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc316)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc127)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc130)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc317)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc132)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc128)
                cir.yield %18 : !cir.bool loc(#loc128)
              }, false {
                %18 = cir.const #false loc(#loc128)
                cir.yield %18 : !cir.bool loc(#loc128)
              }) : (!cir.bool) -> !cir.bool loc(#loc128)
              cir.yield %17 : !cir.bool loc(#loc128)
            }, false {
              %13 = cir.const #false loc(#loc128)
              cir.yield %13 : !cir.bool loc(#loc128)
            }) : (!cir.bool) -> !cir.bool loc(#loc128)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc137)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc138)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc79)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc79)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            } loc(#loc318)
          } loc(#loc315)
        } loc(#loc313)
      } loc(#loc312)
    } loc(#loc311)
    cir.return loc(#loc81)
  } loc(#loc300)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc145)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc149)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc325)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc325)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc325)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc157)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc158)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc158)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc158)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc158)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc158)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc158)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc158)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc158)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc272)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc160)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc161)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc327)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc162)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc166)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc167)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc171)
            } loc(#loc328)
          } loc(#loc326)
        } loc(#loc324)
      } loc(#loc323)
    } loc(#loc322)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc174)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc174)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc333)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc333)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc333)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc183)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc335)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc184)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc187)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc336)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc189)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc185)
                cir.yield %18 : !cir.bool loc(#loc185)
              }, false {
                %18 = cir.const #false loc(#loc185)
                cir.yield %18 : !cir.bool loc(#loc185)
              }) : (!cir.bool) -> !cir.bool loc(#loc185)
              cir.yield %17 : !cir.bool loc(#loc185)
            }, false {
              %13 = cir.const #false loc(#loc185)
              cir.yield %13 : !cir.bool loc(#loc185)
            }) : (!cir.bool) -> !cir.bool loc(#loc185)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc194)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc194)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc195)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc196)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc196)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc197)
            } loc(#loc337)
          } loc(#loc334)
        } loc(#loc332)
      } loc(#loc331)
    } loc(#loc330)
    cir.return loc(#loc141)
  } loc(#loc319)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc203)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc299)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc207)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc207)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc211)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc211)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc212)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc213)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
      } loc(#loc342)
    } loc(#loc341)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc217)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc347)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc347)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc347)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc226)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc349)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc227)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc232)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc232)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc232)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc233)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc234)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc234)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc235)
            } loc(#loc350)
          } loc(#loc348)
        } loc(#loc346)
      } loc(#loc345)
    } loc(#loc344)
    cir.return loc(#loc199)
  } loc(#loc338)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc241)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc245)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc245)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc247)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      } loc(#loc355)
    } loc(#loc354)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc270)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc251)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc251)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc360)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc360)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc360)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc260)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc362)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc261)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc266)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc266)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc267)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc268)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc268)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc269)
            } loc(#loc363)
          } loc(#loc361)
        } loc(#loc359)
      } loc(#loc358)
    } loc(#loc357)
    cir.return loc(#loc237)
  } loc(#loc351)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_05.c":0:0)
#loc1 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":25:1)
#loc2 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":25:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":47:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":63:27)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":30:1)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":67:1)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":32:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":32:9)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":34:13)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":34:12)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":34:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":35:5)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":50:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":35:8)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":36:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":37:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":49:9)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":38:13)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":38:49)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:13)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":48:13)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:23)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:36)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:53)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:17)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:63)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":40:60)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":41:13)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":44:13)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":46:13)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":43:29)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":43:24)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":43:17)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":43:40)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":47:17)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":51:5)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":66:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":51:8)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":52:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":53:9)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":65:9)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":54:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":54:34)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":57:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":64:13)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":57:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":57:24)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":57:22)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":58:13)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":60:13)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":62:13)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":59:37)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":59:30)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":59:17)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":63:17)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":221:1)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":227:1)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":223:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":223:14)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":224:5)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":224:14)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":225:5)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":225:14)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":226:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":226:14)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":26:1)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":26:26)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":98:19)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":111:27)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":74:1)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":115:1)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":76:5)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":76:9)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":78:13)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":78:12)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":78:5)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":79:5)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":94:5)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":79:8)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":80:5)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":81:9)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":93:9)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":82:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":82:49)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:13)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":92:13)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:23)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:36)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:53)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:17)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:63)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":84:60)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":85:13)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":88:13)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":90:13)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":87:29)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":87:24)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":87:17)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":87:40)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":91:27)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":91:17)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":95:5)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":114:5)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":95:8)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":96:5)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":99:5)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":101:5)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":98:9)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":102:9)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":113:9)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":103:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":103:34)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:13)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":112:13)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:17)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:25)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:22)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:27)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:30)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:38)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:40)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":105:35)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":106:13)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":108:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":110:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":107:37)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":107:30)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":107:17)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":111:17)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":118:1)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":154:1)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":120:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":120:9)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":122:13)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":122:12)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":122:5)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":123:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":138:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":123:8)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":124:5)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":125:9)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":137:9)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":126:13)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":126:49)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:13)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":136:13)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:23)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:36)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:53)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:17)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:63)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":128:60)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":129:13)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":132:13)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":134:13)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":131:29)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":131:24)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":131:17)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":131:40)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":135:27)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":135:17)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":139:5)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":153:5)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":139:8)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":140:5)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":141:9)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":152:9)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":142:13)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":142:34)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:13)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":151:13)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:17)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:25)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:22)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:27)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:30)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:38)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:40)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":144:35)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":145:13)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":147:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":149:13)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":146:37)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":146:30)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":146:17)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":150:27)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":150:17)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":157:1)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":189:1)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":159:5)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":159:9)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":161:13)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":161:12)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":161:5)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":162:5)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":172:5)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":162:8)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":163:5)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":166:5)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":168:5)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":165:19)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":165:9)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":171:16)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":171:9)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":173:5)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":188:5)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":173:8)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":174:5)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":175:9)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":187:9)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":176:13)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":176:34)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":179:13)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":186:13)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":179:17)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":179:24)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":179:22)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":180:13)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":182:13)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":184:13)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":181:37)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":181:30)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":181:17)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":185:27)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":185:17)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":192:1)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":219:1)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":194:5)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":194:9)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":196:13)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":196:12)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":196:5)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":197:5)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":202:5)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":197:8)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":198:5)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":201:16)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":201:9)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":203:5)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":218:5)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":203:8)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":204:5)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":205:9)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":217:9)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":206:13)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":206:34)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":209:13)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":216:13)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":209:17)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":209:24)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":209:22)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":210:13)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":212:13)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":214:13)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":211:37)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":211:30)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":211:17)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":215:27)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_fgets_05.c":215:17)
#loc270 = loc(fused[#loc1, #loc2])
#loc271 = loc(fused[#loc3, #loc4])
#loc272 = loc(fused[#loc5, #loc6])
#loc273 = loc(fused[#loc7, #loc8])
#loc274 = loc(fused[#loc9, #loc10])
#loc275 = loc(fused[#loc12, #loc13])
#loc276 = loc(fused[#loc15, #loc16])
#loc277 = loc(fused[#loc17, #loc18])
#loc278 = loc(fused[#loc21, #loc19])
#loc279 = loc(fused[#loc22, #loc23])
#loc280 = loc(fused[#loc25, #loc23])
#loc281 = loc(fused[#loc26, #loc27])
#loc282 = loc(fused[#loc28, #loc29])
#loc283 = loc(fused[#loc30, #loc31])
#loc284 = loc(fused[#loc35, #loc36])
#loc285 = loc(fused[#loc38, #loc39, #loc40, #loc31])
#loc286 = loc(fused[#loc43, #loc44])
#loc287 = loc(fused[#loc46, #loc47])
#loc288 = loc(fused[#loc49, #loc47])
#loc289 = loc(fused[#loc50, #loc51])
#loc290 = loc(fused[#loc52, #loc53])
#loc291 = loc(fused[#loc54, #loc55])
#loc292 = loc(fused[#loc56, #loc57])
#loc293 = loc(fused[#loc59, #loc60, #loc61, #loc55])
#loc294 = loc(fused[#loc66, #loc67])
#loc295 = loc(fused[#loc68, #loc69])
#loc296 = loc(fused[#loc70, #loc71])
#loc297 = loc(fused[#loc72, #loc73])
#loc298 = loc(fused[#loc74, #loc75])
#loc299 = loc(fused[#loc76, #loc77])
#loc300 = loc(fused[#loc80, #loc81])
#loc301 = loc(fused[#loc82, #loc83])
#loc302 = loc(fused[#loc86, #loc84])
#loc303 = loc(fused[#loc87, #loc88])
#loc304 = loc(fused[#loc90, #loc88])
#loc305 = loc(fused[#loc91, #loc92])
#loc306 = loc(fused[#loc93, #loc94])
#loc307 = loc(fused[#loc95, #loc96])
#loc308 = loc(fused[#loc100, #loc101])
#loc309 = loc(fused[#loc103, #loc104, #loc105, #loc96])
#loc310 = loc(fused[#loc108, #loc109])
#loc311 = loc(fused[#loc112, #loc113])
#loc312 = loc(fused[#loc115, #loc116, #loc117, #loc113])
#loc313 = loc(fused[#loc119, #loc120])
#loc314 = loc(fused[#loc121, #loc122])
#loc315 = loc(fused[#loc123, #loc124])
#loc316 = loc(fused[#loc125, #loc126])
#loc317 = loc(fused[#loc129, #loc131])
#loc318 = loc(fused[#loc133, #loc134, #loc135, #loc124])
#loc319 = loc(fused[#loc140, #loc141])
#loc320 = loc(fused[#loc142, #loc143])
#loc321 = loc(fused[#loc146, #loc144])
#loc322 = loc(fused[#loc147, #loc148])
#loc323 = loc(fused[#loc150, #loc148])
#loc324 = loc(fused[#loc151, #loc152])
#loc325 = loc(fused[#loc153, #loc154])
#loc326 = loc(fused[#loc155, #loc156])
#loc327 = loc(fused[#loc160, #loc161])
#loc328 = loc(fused[#loc163, #loc164, #loc165, #loc156])
#loc329 = loc(fused[#loc168, #loc169])
#loc330 = loc(fused[#loc172, #loc173])
#loc331 = loc(fused[#loc175, #loc173])
#loc332 = loc(fused[#loc176, #loc177])
#loc333 = loc(fused[#loc178, #loc179])
#loc334 = loc(fused[#loc180, #loc181])
#loc335 = loc(fused[#loc182, #loc183])
#loc336 = loc(fused[#loc186, #loc188])
#loc337 = loc(fused[#loc190, #loc191, #loc192, #loc181])
#loc338 = loc(fused[#loc198, #loc199])
#loc339 = loc(fused[#loc200, #loc201])
#loc340 = loc(fused[#loc204, #loc202])
#loc341 = loc(fused[#loc205, #loc206])
#loc342 = loc(fused[#loc208, #loc209, #loc210, #loc206])
#loc343 = loc(fused[#loc214, #loc213])
#loc344 = loc(fused[#loc215, #loc216])
#loc345 = loc(fused[#loc218, #loc216])
#loc346 = loc(fused[#loc219, #loc220])
#loc347 = loc(fused[#loc221, #loc222])
#loc348 = loc(fused[#loc223, #loc224])
#loc349 = loc(fused[#loc225, #loc226])
#loc350 = loc(fused[#loc228, #loc229, #loc230, #loc224])
#loc351 = loc(fused[#loc236, #loc237])
#loc352 = loc(fused[#loc238, #loc239])
#loc353 = loc(fused[#loc242, #loc240])
#loc354 = loc(fused[#loc243, #loc244])
#loc355 = loc(fused[#loc246, #loc244])
#loc356 = loc(fused[#loc248, #loc247])
#loc357 = loc(fused[#loc249, #loc250])
#loc358 = loc(fused[#loc252, #loc250])
#loc359 = loc(fused[#loc253, #loc254])
#loc360 = loc(fused[#loc255, #loc256])
#loc361 = loc(fused[#loc257, #loc258])
#loc362 = loc(fused[#loc259, #loc260])
#loc363 = loc(fused[#loc262, #loc263, #loc264, #loc258])
