!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc114)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc117)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc122)
        cir.condition(%7) loc(#loc122)
      } body {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc124)
          %6 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc124)
          cir.store %6, %5 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc124)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc24)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc25)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
          cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
        } loc(#loc123)
        cir.yield loc(#loc15)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc29)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
        cir.yield loc(#loc120)
      } loc(#loc120)
    } loc(#loc120)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc32)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc129)
        cir.condition(%7) loc(#loc129)
      } body {
        %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc37)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc37)
        cir.yield loc(#loc31)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc39)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc130)
        cir.yield loc(#loc127)
      } loc(#loc127)
    } loc(#loc127)
    cir.return loc(#loc6)
  } loc(#loc115)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc131)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc134)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc53)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc139)
        cir.condition(%7) loc(#loc139)
      } body {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc141)
          %6 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc141)
          cir.store %6, %5 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc141)
          %7 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc61)
          %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc62)
          %9 = cir.call @strdup(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc61)
          cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
        } loc(#loc140)
        cir.yield loc(#loc52)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc66)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
        cir.yield loc(#loc137)
      } loc(#loc137)
    } loc(#loc137)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc69)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc145)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc146)
        cir.condition(%7) loc(#loc146)
      } body {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
        %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
        cir.yield loc(#loc68)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc76)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
        cir.yield loc(#loc144)
      } loc(#loc144)
    } loc(#loc144)
    cir.return loc(#loc43)
  } loc(#loc132)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc148)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc151)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc86)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc90)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc156)
        cir.condition(%7) loc(#loc156)
      } body {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc157)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc96)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
        cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
        cir.yield loc(#loc89)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc99)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
        cir.yield loc(#loc154)
      } loc(#loc154)
    } loc(#loc154)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc102)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc162)
        cir.condition(%7) loc(#loc162)
      } body {
        %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc96)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc96)
        cir.yield loc(#loc101)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc108)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc163)
        cir.yield loc(#loc160)
      } loc(#loc160)
    } loc(#loc160)
    cir.return loc(#loc80)
  } loc(#loc149)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17L7goodB2GEv() : () -> () loc(#loc111)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17L7goodG2BEv() : () -> () loc(#loc112)
    cir.return loc(#loc110)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":26:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":46:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":28:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":28:9)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":28:11)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":29:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":29:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":31:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":31:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":39:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:13)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:9)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":34:9)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":38:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":35:13)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":35:31)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":37:20)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":37:27)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":37:13)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":37:35)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:24)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":32:23)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":45:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:13)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:16)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:20)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":44:16)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":26:6)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:24)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":40:23)
#loc40 = loc("/usr/include/stdlib.h":687:1)
#loc41 = loc("/usr/include/stdlib.h":687:32)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":53:1)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":72:1)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":55:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":55:9)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":55:11)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":56:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":56:12)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":58:12)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":58:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":66:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:13)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:16)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:20)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":61:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":65:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":62:13)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":62:31)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":64:20)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":64:27)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":64:13)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":64:35)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:24)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":59:23)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":71:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:13)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:16)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:20)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":70:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":70:14)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:24)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":67:23)
#loc77 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc78 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":75:1)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":92:1)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":77:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":77:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":77:11)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":78:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":78:12)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":80:12)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":80:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":85:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:13)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:9)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:16)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:20)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":84:16)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":84:20)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":75:13)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":84:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:24)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":81:23)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":91:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:13)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:9)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:16)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:20)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":90:16)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:24)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":86:23)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":94:1)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":98:1)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":96:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_17.cpp":97:5)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc7, #loc9])
#loc118 = loc(fused[#loc10, #loc11])
#loc119 = loc(fused[#loc13, #loc12])
#loc120 = loc(fused[#loc14, #loc15])
#loc121 = loc(fused[#loc17, #loc16])
#loc122 = loc(fused[#loc18, #loc19])
#loc123 = loc(fused[#loc20, #loc21])
#loc124 = loc(fused[#loc22, #loc23])
#loc125 = loc(fused[#loc26, #loc27])
#loc126 = loc(fused[#loc29, #loc28])
#loc127 = loc(fused[#loc30, #loc31])
#loc128 = loc(fused[#loc33, #loc32])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc39, #loc38])
#loc131 = loc(fused[#loc40, #loc41])
#loc132 = loc(fused[#loc42, #loc43])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc44, #loc46])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc50, #loc49])
#loc137 = loc(fused[#loc51, #loc52])
#loc138 = loc(fused[#loc54, #loc53])
#loc139 = loc(fused[#loc55, #loc56])
#loc140 = loc(fused[#loc57, #loc58])
#loc141 = loc(fused[#loc59, #loc60])
#loc142 = loc(fused[#loc63, #loc64])
#loc143 = loc(fused[#loc66, #loc65])
#loc144 = loc(fused[#loc67, #loc68])
#loc145 = loc(fused[#loc70, #loc69])
#loc146 = loc(fused[#loc71, #loc72])
#loc147 = loc(fused[#loc76, #loc75])
#loc148 = loc(fused[#loc77, #loc78])
#loc149 = loc(fused[#loc79, #loc80])
#loc150 = loc(fused[#loc81, #loc82])
#loc151 = loc(fused[#loc81, #loc83])
#loc152 = loc(fused[#loc84, #loc85])
#loc153 = loc(fused[#loc87, #loc86])
#loc154 = loc(fused[#loc88, #loc89])
#loc155 = loc(fused[#loc91, #loc90])
#loc156 = loc(fused[#loc92, #loc93])
#loc157 = loc(fused[#loc94, #loc95])
#loc158 = loc(fused[#loc97, #loc95])
#loc159 = loc(fused[#loc99, #loc98])
#loc160 = loc(fused[#loc100, #loc101])
#loc161 = loc(fused[#loc103, #loc102])
#loc162 = loc(fused[#loc104, #loc105])
#loc163 = loc(fused[#loc108, #loc107])
#loc164 = loc(fused[#loc109, #loc110])
