!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc104 = loc("CWE459_Incomplete_Cleanup__char_12.c":145:10)
#loc105 = loc("CWE459_Incomplete_Cleanup__char_12.c":145:14)
#loc106 = loc("CWE459_Incomplete_Cleanup__char_12.c":145:20)
#loc107 = loc("CWE459_Incomplete_Cleanup__char_12.c":145:32)
#loc234 = loc(fused[#loc104, #loc105])
#loc235 = loc(fused[#loc106, #loc107])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc195)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_12_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc196)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc197)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc198)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc201)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc202)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc205)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc205)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc23)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc196)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc208)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc209)
          %7 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_12_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc196)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc196)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
          %9 = cir.call @mkstemp(%8) : (!cir.ptr<!s8i>) -> !s32i loc(#loc35)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc209)
          cir.scope {
            %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc40)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc211)
            cir.if %13 {
              %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc42)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc11)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc11)
              %17 = cir.call @fdopen(%14, %16) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc43)
              cir.store %17, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
              cir.scope {
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
                %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
                %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc49)
                %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc215)
                cir.if %21 {
                  %22 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc51)
                  %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
                  %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc14)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc14)
                  %26 = cir.call @fprintf(%23, %25) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc51)
                  %27 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc54)
                } loc(#loc216)
              } loc(#loc214)
            } loc(#loc212)
          } loc(#loc210)
        } loc(#loc207)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc218)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc219)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc220)
          %7 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_12_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc196)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc218)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc63)
          %9 = cir.call @mkstemp(%8) : (!cir.ptr<!s8i>) -> !s32i loc(#loc64)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc220)
          cir.scope {
            %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc68)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc69)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc222)
            cir.if %13 {
              %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc72)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc72)
              %17 = cir.call @fdopen(%14, %16) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc73)
              cir.store %17, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc224)
              cir.scope {
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
                %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
                %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc79)
                %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc226)
                cir.if %21 {
                  %22 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc81)
                  %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
                  %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
                  %26 = cir.call @fprintf(%23, %25) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc81)
                  %27 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc85)
                  %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc86)
                  %30 = cir.call @unlink(%29) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc87)
                } loc(#loc227)
              } loc(#loc225)
            } loc(#loc223)
          } loc(#loc221)
        } loc(#loc217)
      } loc(#loc206)
    } loc(#loc204)
    cir.return loc(#loc20)
  } loc(#loc203)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc228)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc230)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc231)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc101)
  cir.func @main(%arg0: !s32i loc(fused[#loc104, #loc105]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc106, #loc107])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc110)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc110)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc111)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc98)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %8 = cir.get_global @CWE459_Incomplete_Cleanup__char_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE459_Incomplete_Cleanup__char_12_good() : () -> () loc(#loc113)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %13 = cir.get_global @CWE459_Incomplete_Cleanup__char_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE459_Incomplete_Cleanup__char_12_bad() : () -> () loc(#loc117)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    cir.return %17 : !s32i loc(#loc238)
  } loc(#loc233)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc241)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc241)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc126)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc195)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc244)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc245)
          %7 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc195)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc195)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc137)
          %9 = cir.call @mkstemp(%8) : (!cir.ptr<!s8i>) -> !s32i loc(#loc138)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc245)
          cir.scope {
            %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc143)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc247)
            cir.if %13 {
              %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc146)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc146)
              %17 = cir.call @fdopen(%14, %16) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc147)
              cir.store %17, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc249)
              cir.scope {
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc152)
                %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc153)
                %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc153)
                %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc251)
                cir.if %21 {
                  %22 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc155)
                  %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
                  %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc157)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc157)
                  %26 = cir.call @fprintf(%23, %25) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc155)
                  %27 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc158)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc159)
                  %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc160)
                  %30 = cir.call @unlink(%29) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc161)
                } loc(#loc252)
              } loc(#loc250)
            } loc(#loc248)
          } loc(#loc246)
        } loc(#loc243)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc254)
          %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc255)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc256)
          %7 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc195)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc254)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc170)
          %9 = cir.call @mkstemp(%8) : (!cir.ptr<!s8i>) -> !s32i loc(#loc171)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc256)
          cir.scope {
            %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc174)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc176)
            %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc258)
            cir.if %13 {
              %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc179)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc179)
              %17 = cir.call @fdopen(%14, %16) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc180)
              cir.store %17, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc260)
              cir.scope {
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
                %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc186)
                %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc186)
                %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc262)
                cir.if %21 {
                  %22 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc188)
                  %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc189)
                  %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc190)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc190)
                  %26 = cir.call @fprintf(%23, %25) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc188)
                  %27 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc191)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc192)
                  %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc193)
                  %30 = cir.call @unlink(%29) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc194)
                } loc(#loc263)
              } loc(#loc261)
            } loc(#loc259)
          } loc(#loc257)
        } loc(#loc253)
      } loc(#loc242)
    } loc(#loc240)
    cir.return loc(#loc123)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_12.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_12.c":92:13)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_12.c":92:31)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_12.c":44:13)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_12.c":44:31)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/stdlib.h":827:1)
#loc8 = loc("/usr/include/stdlib.h":827:39)
#loc9 = loc("/usr/include/stdio.h":299:1)
#loc10 = loc("/usr/include/stdio.h":300:3)
#loc11 = loc("CWE459_Incomplete_Cleanup__char_12.c":50:42)
#loc12 = loc("/usr/include/stdio.h":357:1)
#loc13 = loc("/usr/include/stdio.h":358:45)
#loc14 = loc("CWE459_Incomplete_Cleanup__char_12.c":53:36)
#loc15 = loc("/usr/include/stdio.h":184:1)
#loc16 = loc("/usr/include/stdio.h":184:36)
#loc17 = loc("/usr/include/unistd.h":858:1)
#loc18 = loc("/usr/include/unistd.h":858:48)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_12.c":39:1)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_12.c":80:1)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_12.c":41:5)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_12.c":79:5)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_12.c":41:8)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_12.c":41:33)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_12.c":42:5)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_12.c":59:5)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_12.c":61:5)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_12.c":43:9)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_12.c":58:9)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_12.c":45:13)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_12.c":45:19)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_12.c":47:13)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_12.c":47:44)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_12.c":47:36)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_12.c":47:28)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_12.c":48:13)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_12.c":57:13)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_12.c":48:17)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_12.c":48:30)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_12.c":48:29)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_12.c":49:13)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_12.c":50:32)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_12.c":50:25)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_12.c":50:17)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_12.c":50:45)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_12.c":51:17)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_12.c":56:17)
#loc48 = loc("CWE459_Incomplete_Cleanup__char_12.c":51:21)
#loc49 = loc("CWE459_Incomplete_Cleanup__char_12.c":51:30)
#loc50 = loc("CWE459_Incomplete_Cleanup__char_12.c":52:17)
#loc51 = loc("CWE459_Incomplete_Cleanup__char_12.c":53:21)
#loc52 = loc("CWE459_Incomplete_Cleanup__char_12.c":53:29)
#loc53 = loc("CWE459_Incomplete_Cleanup__char_12.c":54:28)
#loc54 = loc("CWE459_Incomplete_Cleanup__char_12.c":54:21)
#loc55 = loc("CWE459_Incomplete_Cleanup__char_12.c":62:9)
#loc56 = loc("CWE459_Incomplete_Cleanup__char_12.c":78:9)
#loc57 = loc("CWE459_Incomplete_Cleanup__char_12.c":63:13)
#loc58 = loc("CWE459_Incomplete_Cleanup__char_12.c":63:31)
#loc59 = loc("CWE459_Incomplete_Cleanup__char_12.c":64:13)
#loc60 = loc("CWE459_Incomplete_Cleanup__char_12.c":64:19)
#loc61 = loc("CWE459_Incomplete_Cleanup__char_12.c":66:13)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_12.c":66:44)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_12.c":66:36)
#loc64 = loc("CWE459_Incomplete_Cleanup__char_12.c":66:28)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_12.c":67:13)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_12.c":77:13)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_12.c":67:17)
#loc68 = loc("CWE459_Incomplete_Cleanup__char_12.c":67:30)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_12.c":67:29)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_12.c":68:13)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_12.c":69:32)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_12.c":69:42)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_12.c":69:25)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_12.c":69:17)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_12.c":69:45)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_12.c":70:17)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_12.c":76:17)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_12.c":70:21)
#loc79 = loc("CWE459_Incomplete_Cleanup__char_12.c":70:30)
#loc80 = loc("CWE459_Incomplete_Cleanup__char_12.c":71:17)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_12.c":72:21)
#loc82 = loc("CWE459_Incomplete_Cleanup__char_12.c":72:29)
#loc83 = loc("CWE459_Incomplete_Cleanup__char_12.c":72:36)
#loc84 = loc("CWE459_Incomplete_Cleanup__char_12.c":73:28)
#loc85 = loc("CWE459_Incomplete_Cleanup__char_12.c":73:21)
#loc86 = loc("CWE459_Incomplete_Cleanup__char_12.c":75:28)
#loc87 = loc("CWE459_Incomplete_Cleanup__char_12.c":75:21)
#loc88 = loc("CWE459_Incomplete_Cleanup__char_12.c":131:1)
#loc89 = loc("CWE459_Incomplete_Cleanup__char_12.c":134:1)
#loc90 = loc("CWE459_Incomplete_Cleanup__char_12.c":133:5)
#loc91 = loc("CWE459_Incomplete_Cleanup__char_12.c":133:11)
#loc92 = loc("/usr/include/stdlib.h":575:1)
#loc93 = loc("/usr/include/stdlib.h":575:41)
#loc94 = loc("/usr/include/time.h":76:1)
#loc95 = loc("/usr/include/time.h":76:38)
#loc96 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc97 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc98 = loc("CWE459_Incomplete_Cleanup__char_12.c":150:15)
#loc99 = loc("CWE459_Incomplete_Cleanup__char_12.c":152:15)
#loc100 = loc("CWE459_Incomplete_Cleanup__char_12.c":155:15)
#loc101 = loc("CWE459_Incomplete_Cleanup__char_12.c":157:15)
#loc102 = loc("CWE459_Incomplete_Cleanup__char_12.c":145:1)
#loc103 = loc("CWE459_Incomplete_Cleanup__char_12.c":160:1)
#loc108 = loc("CWE459_Incomplete_Cleanup__char_12.c":146:1)
#loc109 = loc("CWE459_Incomplete_Cleanup__char_12.c":148:27)
#loc110 = loc("CWE459_Incomplete_Cleanup__char_12.c":148:22)
#loc111 = loc("CWE459_Incomplete_Cleanup__char_12.c":148:5)
#loc112 = loc("CWE459_Incomplete_Cleanup__char_12.c":150:5)
#loc113 = loc("CWE459_Incomplete_Cleanup__char_12.c":151:5)
#loc114 = loc("CWE459_Incomplete_Cleanup__char_12.c":151:45)
#loc115 = loc("CWE459_Incomplete_Cleanup__char_12.c":152:5)
#loc116 = loc("CWE459_Incomplete_Cleanup__char_12.c":155:5)
#loc117 = loc("CWE459_Incomplete_Cleanup__char_12.c":156:5)
#loc118 = loc("CWE459_Incomplete_Cleanup__char_12.c":156:44)
#loc119 = loc("CWE459_Incomplete_Cleanup__char_12.c":157:5)
#loc120 = loc("CWE459_Incomplete_Cleanup__char_12.c":159:12)
#loc121 = loc("CWE459_Incomplete_Cleanup__char_12.c":159:5)
#loc122 = loc("CWE459_Incomplete_Cleanup__char_12.c":87:1)
#loc123 = loc("CWE459_Incomplete_Cleanup__char_12.c":129:1)
#loc124 = loc("CWE459_Incomplete_Cleanup__char_12.c":89:5)
#loc125 = loc("CWE459_Incomplete_Cleanup__char_12.c":128:5)
#loc126 = loc("CWE459_Incomplete_Cleanup__char_12.c":89:8)
#loc127 = loc("CWE459_Incomplete_Cleanup__char_12.c":89:33)
#loc128 = loc("CWE459_Incomplete_Cleanup__char_12.c":90:5)
#loc129 = loc("CWE459_Incomplete_Cleanup__char_12.c":108:5)
#loc130 = loc("CWE459_Incomplete_Cleanup__char_12.c":110:5)
#loc131 = loc("CWE459_Incomplete_Cleanup__char_12.c":91:9)
#loc132 = loc("CWE459_Incomplete_Cleanup__char_12.c":107:9)
#loc133 = loc("CWE459_Incomplete_Cleanup__char_12.c":93:13)
#loc134 = loc("CWE459_Incomplete_Cleanup__char_12.c":93:19)
#loc135 = loc("CWE459_Incomplete_Cleanup__char_12.c":95:13)
#loc136 = loc("CWE459_Incomplete_Cleanup__char_12.c":95:44)
#loc137 = loc("CWE459_Incomplete_Cleanup__char_12.c":95:36)
#loc138 = loc("CWE459_Incomplete_Cleanup__char_12.c":95:28)
#loc139 = loc("CWE459_Incomplete_Cleanup__char_12.c":96:13)
#loc140 = loc("CWE459_Incomplete_Cleanup__char_12.c":106:13)
#loc141 = loc("CWE459_Incomplete_Cleanup__char_12.c":96:17)
#loc142 = loc("CWE459_Incomplete_Cleanup__char_12.c":96:30)
#loc143 = loc("CWE459_Incomplete_Cleanup__char_12.c":96:29)
#loc144 = loc("CWE459_Incomplete_Cleanup__char_12.c":97:13)
#loc145 = loc("CWE459_Incomplete_Cleanup__char_12.c":98:32)
#loc146 = loc("CWE459_Incomplete_Cleanup__char_12.c":98:42)
#loc147 = loc("CWE459_Incomplete_Cleanup__char_12.c":98:25)
#loc148 = loc("CWE459_Incomplete_Cleanup__char_12.c":98:17)
#loc149 = loc("CWE459_Incomplete_Cleanup__char_12.c":98:45)
#loc150 = loc("CWE459_Incomplete_Cleanup__char_12.c":99:17)
#loc151 = loc("CWE459_Incomplete_Cleanup__char_12.c":105:17)
#loc152 = loc("CWE459_Incomplete_Cleanup__char_12.c":99:21)
#loc153 = loc("CWE459_Incomplete_Cleanup__char_12.c":99:30)
#loc154 = loc("CWE459_Incomplete_Cleanup__char_12.c":100:17)
#loc155 = loc("CWE459_Incomplete_Cleanup__char_12.c":101:21)
#loc156 = loc("CWE459_Incomplete_Cleanup__char_12.c":101:29)
#loc157 = loc("CWE459_Incomplete_Cleanup__char_12.c":101:36)
#loc158 = loc("CWE459_Incomplete_Cleanup__char_12.c":102:28)
#loc159 = loc("CWE459_Incomplete_Cleanup__char_12.c":102:21)
#loc160 = loc("CWE459_Incomplete_Cleanup__char_12.c":104:28)
#loc161 = loc("CWE459_Incomplete_Cleanup__char_12.c":104:21)
#loc162 = loc("CWE459_Incomplete_Cleanup__char_12.c":111:9)
#loc163 = loc("CWE459_Incomplete_Cleanup__char_12.c":127:9)
#loc164 = loc("CWE459_Incomplete_Cleanup__char_12.c":112:13)
#loc165 = loc("CWE459_Incomplete_Cleanup__char_12.c":112:31)
#loc166 = loc("CWE459_Incomplete_Cleanup__char_12.c":113:13)
#loc167 = loc("CWE459_Incomplete_Cleanup__char_12.c":113:19)
#loc168 = loc("CWE459_Incomplete_Cleanup__char_12.c":115:13)
#loc169 = loc("CWE459_Incomplete_Cleanup__char_12.c":115:44)
#loc170 = loc("CWE459_Incomplete_Cleanup__char_12.c":115:36)
#loc171 = loc("CWE459_Incomplete_Cleanup__char_12.c":115:28)
#loc172 = loc("CWE459_Incomplete_Cleanup__char_12.c":116:13)
#loc173 = loc("CWE459_Incomplete_Cleanup__char_12.c":126:13)
#loc174 = loc("CWE459_Incomplete_Cleanup__char_12.c":116:17)
#loc175 = loc("CWE459_Incomplete_Cleanup__char_12.c":116:30)
#loc176 = loc("CWE459_Incomplete_Cleanup__char_12.c":116:29)
#loc177 = loc("CWE459_Incomplete_Cleanup__char_12.c":117:13)
#loc178 = loc("CWE459_Incomplete_Cleanup__char_12.c":118:32)
#loc179 = loc("CWE459_Incomplete_Cleanup__char_12.c":118:42)
#loc180 = loc("CWE459_Incomplete_Cleanup__char_12.c":118:25)
#loc181 = loc("CWE459_Incomplete_Cleanup__char_12.c":118:17)
#loc182 = loc("CWE459_Incomplete_Cleanup__char_12.c":118:45)
#loc183 = loc("CWE459_Incomplete_Cleanup__char_12.c":119:17)
#loc184 = loc("CWE459_Incomplete_Cleanup__char_12.c":125:17)
#loc185 = loc("CWE459_Incomplete_Cleanup__char_12.c":119:21)
#loc186 = loc("CWE459_Incomplete_Cleanup__char_12.c":119:30)
#loc187 = loc("CWE459_Incomplete_Cleanup__char_12.c":120:17)
#loc188 = loc("CWE459_Incomplete_Cleanup__char_12.c":121:21)
#loc189 = loc("CWE459_Incomplete_Cleanup__char_12.c":121:29)
#loc190 = loc("CWE459_Incomplete_Cleanup__char_12.c":121:36)
#loc191 = loc("CWE459_Incomplete_Cleanup__char_12.c":122:28)
#loc192 = loc("CWE459_Incomplete_Cleanup__char_12.c":122:21)
#loc193 = loc("CWE459_Incomplete_Cleanup__char_12.c":124:28)
#loc194 = loc("CWE459_Incomplete_Cleanup__char_12.c":124:21)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc197 = loc(fused[#loc5, #loc6])
#loc198 = loc(fused[#loc7, #loc8])
#loc199 = loc(fused[#loc9, #loc10])
#loc200 = loc(fused[#loc12, #loc13])
#loc201 = loc(fused[#loc15, #loc16])
#loc202 = loc(fused[#loc17, #loc18])
#loc203 = loc(fused[#loc19, #loc20])
#loc204 = loc(fused[#loc21, #loc22])
#loc205 = loc(fused[#loc23, #loc24])
#loc206 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc207 = loc(fused[#loc28, #loc29])
#loc208 = loc(fused[#loc30, #loc31])
#loc209 = loc(fused[#loc32, #loc33])
#loc210 = loc(fused[#loc36, #loc37])
#loc211 = loc(fused[#loc38, #loc39])
#loc212 = loc(fused[#loc41, #loc37])
#loc213 = loc(fused[#loc44, #loc45])
#loc214 = loc(fused[#loc46, #loc47])
#loc215 = loc(fused[#loc48, #loc49])
#loc216 = loc(fused[#loc50, #loc47])
#loc217 = loc(fused[#loc55, #loc56])
#loc218 = loc(fused[#loc57, #loc58])
#loc219 = loc(fused[#loc59, #loc60])
#loc220 = loc(fused[#loc61, #loc62])
#loc221 = loc(fused[#loc65, #loc66])
#loc222 = loc(fused[#loc67, #loc68])
#loc223 = loc(fused[#loc70, #loc66])
#loc224 = loc(fused[#loc74, #loc75])
#loc225 = loc(fused[#loc76, #loc77])
#loc226 = loc(fused[#loc78, #loc79])
#loc227 = loc(fused[#loc80, #loc77])
#loc228 = loc(fused[#loc88, #loc89])
#loc229 = loc(fused[#loc90, #loc91])
#loc230 = loc(fused[#loc92, #loc93])
#loc231 = loc(fused[#loc94, #loc95])
#loc232 = loc(fused[#loc96, #loc97])
#loc233 = loc(fused[#loc102, #loc103])
#loc236 = loc(fused[#loc113, #loc114])
#loc237 = loc(fused[#loc117, #loc118])
#loc238 = loc(fused[#loc121, #loc120])
#loc239 = loc(fused[#loc122, #loc123])
#loc240 = loc(fused[#loc124, #loc125])
#loc241 = loc(fused[#loc126, #loc127])
#loc242 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc243 = loc(fused[#loc131, #loc132])
#loc244 = loc(fused[#loc133, #loc134])
#loc245 = loc(fused[#loc135, #loc136])
#loc246 = loc(fused[#loc139, #loc140])
#loc247 = loc(fused[#loc141, #loc142])
#loc248 = loc(fused[#loc144, #loc140])
#loc249 = loc(fused[#loc148, #loc149])
#loc250 = loc(fused[#loc150, #loc151])
#loc251 = loc(fused[#loc152, #loc153])
#loc252 = loc(fused[#loc154, #loc151])
#loc253 = loc(fused[#loc162, #loc163])
#loc254 = loc(fused[#loc164, #loc165])
#loc255 = loc(fused[#loc166, #loc167])
#loc256 = loc(fused[#loc168, #loc169])
#loc257 = loc(fused[#loc172, #loc173])
#loc258 = loc(fused[#loc174, #loc175])
#loc259 = loc(fused[#loc177, #loc173])
#loc260 = loc(fused[#loc181, #loc182])
#loc261 = loc(fused[#loc183, #loc184])
#loc262 = loc(fused[#loc185, #loc186])
#loc263 = loc(fused[#loc187, #loc184])
