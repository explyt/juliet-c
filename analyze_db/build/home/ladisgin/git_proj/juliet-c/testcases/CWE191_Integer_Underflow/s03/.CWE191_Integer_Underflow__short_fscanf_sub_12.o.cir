!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_sub_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc158)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc159)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_sub_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc164)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc165)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc166)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc21)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc167)
    cir.br ^bb1 loc(#loc168)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc169)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc169)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc170)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc160)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc30)
    cir.br ^bb4 loc(#loc28)
  ^bb3:  // pred: ^bb1
    %15 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc33)
    %17 = cir.cast(integral, %16 : !s32i), !s16i loc(#loc33)
    cir.store %17, %2 : !s16i, !cir.ptr<!s16i> loc(#loc171)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc172)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc173)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc173)
    %20 = cir.call %19() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc37)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %21 ^bb7, ^bb10 loc(#loc174)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc44)
    %23 = cir.cast(integral, %22 : !s16i), !s32i loc(#loc44)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc44)
    %26 = cir.cast(integral, %25 : !s32i), !s16i loc(#loc44)
    cir.store %26, %0 : !s16i, !cir.ptr<!s16i> loc(#loc164)
    %27 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc45)
    %28 = cir.cast(integral, %27 : !s16i), !s32i loc(#loc45)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    cir.br ^bb16 loc(#loc40)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc176)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc49)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc49)
    %31 = cir.const #cir.int<32767> : !s32i loc(#loc50)
    %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc50)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc50)
    %35 = cir.cmp(gt, %30, %34) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %35 ^bb12, ^bb13 loc(#loc178)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc54)
    %37 = cir.cast(integral, %36 : !s16i), !s32i loc(#loc54)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc54)
    %40 = cir.cast(integral, %39 : !s32i), !s16i loc(#loc54)
    cir.store %40, %1 : !s16i, !cir.ptr<!s16i> loc(#loc165)
    %41 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc55)
    %42 = cir.cast(integral, %41 : !s16i), !s32i loc(#loc55)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc56)
    cir.br ^bb14 loc(#loc52)
  ^bb13:  // pred: ^bb11
    %43 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc12)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb14 loc(#loc48)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc36)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc36)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc14)
  } loc(#loc163)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_sub_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc179)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc183)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc184)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc185)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc72)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc188)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc188)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc76)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc81)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc160)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc83)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc83)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc81)
    cir.br ^bb4 loc(#loc79)
  ^bb3:  // pred: ^bb1
    %15 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc84)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc160)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc86)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc86)
    %20 = cir.call @__isoc99_fscanf(%17, %19, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc84)
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc190)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc191)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc191)
    %23 = cir.call %22() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %24 ^bb7, ^bb13 loc(#loc192)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc193)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc96)
    %26 = cir.cast(integral, %25 : !s16i), !s32i loc(#loc96)
    %27 = cir.const #cir.int<32767> : !s32i loc(#loc97)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc97)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc97)
    %31 = cir.cmp(gt, %26, %30) : !s32i, !cir.bool loc(#loc194)
    cir.brcond %31 ^bb9, ^bb10 loc(#loc195)
  ^bb9:  // pred: ^bb8
    %32 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc101)
    %33 = cir.cast(integral, %32 : !s16i), !s32i loc(#loc101)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc101)
    %36 = cir.cast(integral, %35 : !s32i), !s16i loc(#loc101)
    cir.store %36, %0 : !s16i, !cir.ptr<!s16i> loc(#loc183)
    %37 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc102)
    %38 = cir.cast(integral, %37 : !s16i), !s32i loc(#loc102)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc103)
    cir.br ^bb11 loc(#loc99)
  ^bb10:  // pred: ^bb8
    %39 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc104)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb11 loc(#loc95)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc95)
  ^bb12:  // pred: ^bb11
    cir.br ^bb19 loc(#loc92)
  ^bb13:  // pred: ^bb6
    cir.br ^bb14 loc(#loc196)
  ^bb14:  // pred: ^bb13
    %41 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc108)
    %42 = cir.cast(integral, %41 : !s16i), !s32i loc(#loc108)
    %43 = cir.const #cir.int<32767> : !s32i loc(#loc109)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc109)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc109)
    %47 = cir.cmp(gt, %42, %46) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %47 ^bb15, ^bb16 loc(#loc198)
  ^bb15:  // pred: ^bb14
    %48 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc113)
    %49 = cir.cast(integral, %48 : !s16i), !s32i loc(#loc113)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc113)
    %52 = cir.cast(integral, %51 : !s32i), !s16i loc(#loc113)
    cir.store %52, %1 : !s16i, !cir.ptr<!s16i> loc(#loc184)
    %53 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc114)
    %54 = cir.cast(integral, %53 : !s16i), !s32i loc(#loc114)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc115)
    cir.br ^bb17 loc(#loc111)
  ^bb16:  // pred: ^bb14
    %55 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc116)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb17 loc(#loc107)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc107)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc88)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc88)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc65)
  } loc(#loc182)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc200)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc201)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc202)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc126)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc205)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc205)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc130)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc206)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc136)
    %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc136)
    cir.store %11, %2 : !s16i, !cir.ptr<!s16i> loc(#loc207)
    cir.br ^bb4 loc(#loc133)
  ^bb3:  // pred: ^bb1
    %12 = cir.const #cir.int<2> : !s32i loc(#loc138)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc139)
    %14 = cir.cast(integral, %13 : !s32i), !s16i loc(#loc139)
    cir.store %14, %2 : !s16i, !cir.ptr<!s16i> loc(#loc208)
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc209)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc210)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc210)
    %17 = cir.call %16() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc143)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc211)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc212)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc150)
    %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc150)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc150)
    %23 = cir.cast(integral, %22 : !s32i), !s16i loc(#loc150)
    cir.store %23, %0 : !s16i, !cir.ptr<!s16i> loc(#loc200)
    %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc151)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc151)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc152)
    cir.br ^bb9 loc(#loc149)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc146)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc213)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc155)
    %27 = cir.cast(integral, %26 : !s16i), !s32i loc(#loc155)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc155)
    %30 = cir.cast(integral, %29 : !s32i), !s16i loc(#loc155)
    cir.store %30, %1 : !s16i, !cir.ptr<!s16i> loc(#loc201)
    %31 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc156)
    %32 = cir.cast(integral, %31 : !s16i), !s32i loc(#loc156)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc157)
    cir.br ^bb12 loc(#loc154)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc142)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc142)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc119)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_sub_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":29:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":54:23)
#loc13 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":22:1)
#loc14 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":57:1)
#loc15 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":40:13)
#loc16 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":40:35)
#loc17 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":49:13)
#loc18 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":49:35)
#loc19 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":24:5)
#loc20 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":24:11)
#loc21 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":25:12)
#loc22 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":25:5)
#loc23 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":26:5)
#loc24 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":35:5)
#loc25 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":26:8)
#loc26 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":26:33)
#loc27 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":27:5)
#loc28 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":30:5)
#loc29 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":32:5)
#loc30 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":29:9)
#loc31 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":29:17)
#loc32 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":34:17)
#loc33 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":34:16)
#loc34 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":34:9)
#loc35 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":36:5)
#loc36 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":56:5)
#loc37 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":36:8)
#loc38 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":36:33)
#loc39 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":37:5)
#loc40 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":43:5)
#loc41 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":45:5)
#loc42 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":38:9)
#loc43 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":42:9)
#loc44 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":40:28)
#loc45 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":41:26)
#loc46 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":41:13)
#loc47 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":47:9)
#loc48 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":55:9)
#loc49 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":47:13)
#loc50 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":47:20)
#loc51 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":48:9)
#loc52 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":51:9)
#loc53 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":53:9)
#loc54 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":49:28)
#loc55 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":50:26)
#loc56 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":50:13)
#loc57 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":54:13)
#loc58 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":143:1)
#loc59 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":147:1)
#loc60 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":145:5)
#loc61 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":145:13)
#loc62 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":146:5)
#loc63 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":146:13)
#loc64 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":66:1)
#loc65 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":106:1)
#loc66 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":85:13)
#loc67 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":85:35)
#loc68 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":98:13)
#loc69 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":98:35)
#loc70 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":68:5)
#loc71 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":68:11)
#loc72 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":69:12)
#loc73 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":69:5)
#loc74 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":70:5)
#loc75 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":79:5)
#loc76 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":70:8)
#loc77 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":70:33)
#loc78 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":71:5)
#loc79 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":74:5)
#loc80 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":76:5)
#loc81 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":73:9)
#loc82 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":73:17)
#loc83 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":73:24)
#loc84 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":78:9)
#loc85 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":78:17)
#loc86 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":78:24)
#loc87 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":80:5)
#loc88 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":105:5)
#loc89 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":80:8)
#loc90 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":80:33)
#loc91 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":81:5)
#loc92 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":92:5)
#loc93 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":94:5)
#loc94 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":83:9)
#loc95 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":91:9)
#loc96 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":83:13)
#loc97 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":83:20)
#loc98 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":84:9)
#loc99 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":87:9)
#loc100 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":89:9)
#loc101 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":85:28)
#loc102 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":86:26)
#loc103 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":86:13)
#loc104 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":90:23)
#loc105 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":90:13)
#loc106 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":96:9)
#loc107 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":104:9)
#loc108 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":96:13)
#loc109 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":96:20)
#loc110 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":97:9)
#loc111 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":100:9)
#loc112 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":102:9)
#loc113 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":98:28)
#loc114 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":99:26)
#loc115 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":99:13)
#loc116 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":103:23)
#loc117 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":103:13)
#loc118 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":111:1)
#loc119 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":141:1)
#loc120 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":129:13)
#loc121 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":129:35)
#loc122 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":137:13)
#loc123 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":137:35)
#loc124 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":113:5)
#loc125 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":113:11)
#loc126 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":114:12)
#loc127 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":114:5)
#loc128 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":115:5)
#loc129 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":124:5)
#loc130 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":115:8)
#loc131 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":115:33)
#loc132 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":116:5)
#loc133 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":119:5)
#loc134 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":121:5)
#loc135 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":118:17)
#loc136 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":118:16)
#loc137 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":118:9)
#loc138 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":123:17)
#loc139 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":123:16)
#loc140 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":123:9)
#loc141 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":125:5)
#loc142 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":140:5)
#loc143 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":125:8)
#loc144 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":125:33)
#loc145 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":126:5)
#loc146 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":132:5)
#loc147 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":134:5)
#loc148 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":127:9)
#loc149 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":131:9)
#loc150 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":129:28)
#loc151 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":130:26)
#loc152 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":130:13)
#loc153 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":135:9)
#loc154 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":139:9)
#loc155 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":137:28)
#loc156 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":138:26)
#loc157 = loc("CWE191_Integer_Underflow__short_fscanf_sub_12.c":138:13)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc8, #loc9])
#loc162 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc17, #loc18])
#loc166 = loc(fused[#loc19, #loc20])
#loc167 = loc(fused[#loc22, #loc21])
#loc168 = loc(fused[#loc23, #loc24])
#loc169 = loc(fused[#loc25, #loc26])
#loc170 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc171 = loc(fused[#loc34, #loc32])
#loc172 = loc(fused[#loc35, #loc36])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc175 = loc(fused[#loc42, #loc43])
#loc176 = loc(fused[#loc47, #loc48])
#loc177 = loc(fused[#loc49, #loc50])
#loc178 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc179 = loc(fused[#loc58, #loc59])
#loc180 = loc(fused[#loc60, #loc61])
#loc181 = loc(fused[#loc62, #loc63])
#loc182 = loc(fused[#loc64, #loc65])
#loc183 = loc(fused[#loc66, #loc67])
#loc184 = loc(fused[#loc68, #loc69])
#loc185 = loc(fused[#loc70, #loc71])
#loc186 = loc(fused[#loc73, #loc72])
#loc187 = loc(fused[#loc74, #loc75])
#loc188 = loc(fused[#loc76, #loc77])
#loc189 = loc(fused[#loc78, #loc79, #loc80, #loc75])
#loc190 = loc(fused[#loc87, #loc88])
#loc191 = loc(fused[#loc89, #loc90])
#loc192 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc193 = loc(fused[#loc94, #loc95])
#loc194 = loc(fused[#loc96, #loc97])
#loc195 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc196 = loc(fused[#loc106, #loc107])
#loc197 = loc(fused[#loc108, #loc109])
#loc198 = loc(fused[#loc110, #loc111, #loc112, #loc107])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc124, #loc125])
#loc203 = loc(fused[#loc127, #loc126])
#loc204 = loc(fused[#loc128, #loc129])
#loc205 = loc(fused[#loc130, #loc131])
#loc206 = loc(fused[#loc132, #loc133, #loc134, #loc129])
#loc207 = loc(fused[#loc137, #loc135])
#loc208 = loc(fused[#loc140, #loc138])
#loc209 = loc(fused[#loc141, #loc142])
#loc210 = loc(fused[#loc143, #loc144])
#loc211 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc212 = loc(fused[#loc148, #loc149])
#loc213 = loc(fused[#loc153, #loc154])
