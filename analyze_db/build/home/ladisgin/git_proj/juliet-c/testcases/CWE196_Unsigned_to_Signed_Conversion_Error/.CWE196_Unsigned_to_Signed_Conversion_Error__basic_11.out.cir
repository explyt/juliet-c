!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":111:10)
#loc55 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":111:14)
#loc56 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":111:20)
#loc57 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":111:32)
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE196_Unsigned_to_Signed_Conversion_Error/CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc152)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc153)
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.func no_proto @CWE196_Unsigned_to_Signed_Conversion_Error__basic_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["intUnsigned"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intSigned"] {alignment = 4 : i64} loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc159)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc159)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc160)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc161)
  ^bb3:  // pred: ^bb2
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc20)
    cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc162)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc164)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2147483647> : !s32i loc(#loc29)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc29)
    %15 = cir.const #cir.int<2> : !u32i loc(#loc29)
    %16 = cir.binop(mul, %14, %15) : !u32i loc(#loc29)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc29)
    %18 = cir.binop(add, %16, %17) : !u32i loc(#loc29)
    %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc30)
    %20 = cir.binop(sub, %18, %19) : !u32i loc(#loc167)
    cir.store %20, %0 : !u32i, !cir.ptr<!u32i> loc(#loc168)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc32)
    %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc32)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc35)
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc14)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc155)
  cir.func no_proto @CWE196_Unsigned_to_Signed_Conversion_Error__basic_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE196_Unsigned_to_Signed_Conversion_Error__basic_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE196_Unsigned_to_Signed_Conversion_Error__basic_11_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE196_Unsigned_to_Signed_Conversion_Error__basic_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE196_Unsigned_to_Signed_Conversion_Error__basic_11_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %17 : !s32i loc(#loc181)
  } loc(#loc176)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["intUnsigned"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intSigned"] {alignment = 4 : i64} loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc188)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc188)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc85)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb14 loc(#loc88)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc190)
  ^bb4:  // pred: ^bb3
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc93)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc93)
    cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc191)
    cir.br ^bb5 loc(#loc192)
  ^bb5:  // pred: ^bb4
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc193)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc194)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc195)
  ^bb6:  // pred: ^bb5
    %15 = cir.const #cir.int<2147483647> : !s32i loc(#loc102)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc102)
    %17 = cir.const #cir.int<2> : !u32i loc(#loc102)
    %18 = cir.binop(mul, %16, %17) : !u32i loc(#loc102)
    %19 = cir.const #cir.int<1> : !u32i loc(#loc102)
    %20 = cir.binop(add, %18, %19) : !u32i loc(#loc102)
    %21 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc103)
    %22 = cir.binop(sub, %20, %21) : !u32i loc(#loc196)
    cir.store %22, %0 : !u32i, !cir.ptr<!u32i> loc(#loc197)
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc198)
  ^bb9:  // pred: ^bb8
    %23 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc107)
    %24 = cir.const #cir.int<2147483647> : !s32i loc(#loc108)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc108)
    %26 = cir.cmp(gt, %23, %25) : !u32i, !cir.bool loc(#loc199)
    cir.brcond %26 ^bb10, ^bb11 loc(#loc200)
  ^bb10:  // pred: ^bb9
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc111)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb11 loc(#loc106)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc106)
  ^bb12:  // pred: ^bb11
    %29 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc112)
    %30 = cir.cast(integral, %29 : !u32i), !s32i loc(#loc112)
    cir.store %30, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc115)
    cir.br ^bb13 loc(#loc92)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc84)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc78)
  } loc(#loc184)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["intUnsigned"] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intSigned"] {alignment = 4 : i64} loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc206)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc124)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %5 ^bb2, ^bb13 loc(#loc207)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc208)
  ^bb3:  // pred: ^bb2
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc129)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc129)
    cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc209)
    cir.br ^bb4 loc(#loc210)
  ^bb4:  // pred: ^bb3
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc134)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc211)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc212)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc213)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2147483647> : !s32i loc(#loc138)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc138)
    %15 = cir.const #cir.int<2> : !u32i loc(#loc138)
    %16 = cir.binop(mul, %14, %15) : !u32i loc(#loc138)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc138)
    %18 = cir.binop(add, %16, %17) : !u32i loc(#loc138)
    %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc139)
    %20 = cir.binop(sub, %18, %19) : !u32i loc(#loc214)
    cir.store %20, %0 : !u32i, !cir.ptr<!u32i> loc(#loc215)
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc133)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc143)
    %22 = cir.const #cir.int<2147483647> : !s32i loc(#loc144)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc144)
    %24 = cir.cmp(gt, %21, %23) : !u32i, !cir.bool loc(#loc217)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc218)
  ^bb9:  // pred: ^bb8
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc147)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
    cir.br ^bb10 loc(#loc142)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc142)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc148)
    %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc148)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc151)
    cir.br ^bb12 loc(#loc128)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc123)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc123)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc117)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE196_Unsigned_to_Signed_Conversion_Error/CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":20:1)
#loc8 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":37:1)
#loc9 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":25:13)
#loc10 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":25:22)
#loc11 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":26:13)
#loc12 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":26:17)
#loc13 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":22:5)
#loc14 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":36:5)
#loc15 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":22:8)
#loc16 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":22:26)
#loc17 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":23:5)
#loc18 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":24:9)
#loc19 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":35:9)
#loc20 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":27:27)
#loc21 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":27:13)
#loc22 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":27:32)
#loc23 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":28:13)
#loc24 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":31:13)
#loc25 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":28:17)
#loc26 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":28:26)
#loc27 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":28:31)
#loc28 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":29:13)
#loc29 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":30:31)
#loc30 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":30:42)
#loc31 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":30:17)
#loc32 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":33:25)
#loc33 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":33:13)
#loc34 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":34:26)
#loc35 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":34:13)
#loc36 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":96:1)
#loc37 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":100:1)
#loc38 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":98:5)
#loc39 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":98:11)
#loc40 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":99:5)
#loc41 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":99:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":116:15)
#loc49 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":118:15)
#loc50 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":121:15)
#loc51 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":123:15)
#loc52 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":111:1)
#loc53 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":126:1)
#loc58 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":112:1)
#loc59 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":114:27)
#loc60 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":114:22)
#loc61 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":114:5)
#loc62 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":116:5)
#loc63 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":117:5)
#loc64 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":117:63)
#loc65 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":118:5)
#loc66 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":121:5)
#loc67 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":122:5)
#loc68 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":122:62)
#loc69 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":123:5)
#loc70 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":125:12)
#loc71 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":125:5)
#loc72 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc73 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc74 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":49:19)
#loc75 = loc("/usr/include/stdlib.h":756:1)
#loc76 = loc("/usr/include/stdlib.h":756:70)
#loc77 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":44:1)
#loc78 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":70:1)
#loc79 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":54:13)
#loc80 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":54:22)
#loc81 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":55:13)
#loc82 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":55:17)
#loc83 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":46:5)
#loc84 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":69:5)
#loc85 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":46:8)
#loc86 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":46:27)
#loc87 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":47:5)
#loc88 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":50:5)
#loc89 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":52:5)
#loc90 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":49:9)
#loc91 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":53:9)
#loc92 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":68:9)
#loc93 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":56:27)
#loc94 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":56:13)
#loc95 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":56:32)
#loc96 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":57:13)
#loc97 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":60:13)
#loc98 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":57:17)
#loc99 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":57:26)
#loc100 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":57:31)
#loc101 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":58:13)
#loc102 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":59:31)
#loc103 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":59:42)
#loc104 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":59:17)
#loc105 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":62:13)
#loc106 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":65:13)
#loc107 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":62:17)
#loc108 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":62:31)
#loc109 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":63:13)
#loc110 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":64:17)
#loc111 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":64:22)
#loc112 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":66:25)
#loc113 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":66:13)
#loc114 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":67:26)
#loc115 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":67:13)
#loc116 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":73:1)
#loc117 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":94:1)
#loc118 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":78:13)
#loc119 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":78:22)
#loc120 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":79:13)
#loc121 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":79:17)
#loc122 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":75:5)
#loc123 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":93:5)
#loc124 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":75:8)
#loc125 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":75:26)
#loc126 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":76:5)
#loc127 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":77:9)
#loc128 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":92:9)
#loc129 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":80:27)
#loc130 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":80:13)
#loc131 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":80:32)
#loc132 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":81:13)
#loc133 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":84:13)
#loc134 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":81:17)
#loc135 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":81:26)
#loc136 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":81:31)
#loc137 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":82:13)
#loc138 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":83:31)
#loc139 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":83:42)
#loc140 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":83:17)
#loc141 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":86:13)
#loc142 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":89:13)
#loc143 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":86:17)
#loc144 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":86:31)
#loc145 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":87:13)
#loc146 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":88:17)
#loc147 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":88:22)
#loc148 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":90:25)
#loc149 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":90:13)
#loc150 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":91:26)
#loc151 = loc("CWE196_Unsigned_to_Signed_Conversion_Error__basic_11.c":91:13)
#loc152 = loc(fused[#loc1, #loc2])
#loc153 = loc(fused[#loc3, #loc4])
#loc154 = loc(fused[#loc5, #loc6])
#loc155 = loc(fused[#loc7, #loc8])
#loc156 = loc(fused[#loc9, #loc10])
#loc157 = loc(fused[#loc11, #loc12])
#loc158 = loc(fused[#loc13, #loc14])
#loc159 = loc(fused[#loc15, #loc16])
#loc160 = loc(fused[#loc17, #loc14])
#loc161 = loc(fused[#loc18, #loc19])
#loc162 = loc(fused[#loc21, #loc22])
#loc163 = loc(fused[#loc23, #loc24])
#loc164 = loc(fused[#loc25, #loc26])
#loc165 = loc(fused[#loc25, #loc27])
#loc166 = loc(fused[#loc28, #loc24])
#loc167 = loc(fused[#loc29, #loc30])
#loc168 = loc(fused[#loc31, #loc30])
#loc169 = loc(fused[#loc33, #loc32])
#loc170 = loc(fused[#loc36, #loc37])
#loc171 = loc(fused[#loc38, #loc39])
#loc172 = loc(fused[#loc40, #loc41])
#loc173 = loc(fused[#loc42, #loc43])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc46, #loc47])
#loc176 = loc(fused[#loc52, #loc53])
#loc179 = loc(fused[#loc63, #loc64])
#loc180 = loc(fused[#loc67, #loc68])
#loc181 = loc(fused[#loc71, #loc70])
#loc182 = loc(fused[#loc72, #loc73])
#loc183 = loc(fused[#loc75, #loc76])
#loc184 = loc(fused[#loc77, #loc78])
#loc185 = loc(fused[#loc79, #loc80])
#loc186 = loc(fused[#loc81, #loc82])
#loc187 = loc(fused[#loc83, #loc84])
#loc188 = loc(fused[#loc85, #loc86])
#loc189 = loc(fused[#loc87, #loc88, #loc89, #loc84])
#loc190 = loc(fused[#loc91, #loc92])
#loc191 = loc(fused[#loc94, #loc95])
#loc192 = loc(fused[#loc96, #loc97])
#loc193 = loc(fused[#loc98, #loc99])
#loc194 = loc(fused[#loc98, #loc100])
#loc195 = loc(fused[#loc101, #loc97])
#loc196 = loc(fused[#loc102, #loc103])
#loc197 = loc(fused[#loc104, #loc103])
#loc198 = loc(fused[#loc105, #loc106])
#loc199 = loc(fused[#loc107, #loc108])
#loc200 = loc(fused[#loc109, #loc106])
#loc201 = loc(fused[#loc113, #loc112])
#loc202 = loc(fused[#loc116, #loc117])
#loc203 = loc(fused[#loc118, #loc119])
#loc204 = loc(fused[#loc120, #loc121])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc124, #loc125])
#loc207 = loc(fused[#loc126, #loc123])
#loc208 = loc(fused[#loc127, #loc128])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc132, #loc133])
#loc211 = loc(fused[#loc134, #loc135])
#loc212 = loc(fused[#loc134, #loc136])
#loc213 = loc(fused[#loc137, #loc133])
#loc214 = loc(fused[#loc138, #loc139])
#loc215 = loc(fused[#loc140, #loc139])
#loc216 = loc(fused[#loc141, #loc142])
#loc217 = loc(fused[#loc143, #loc144])
#loc218 = loc(fused[#loc145, #loc142])
#loc219 = loc(fused[#loc149, #loc148])
