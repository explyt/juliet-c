!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType = !cir.record<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc105)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc106)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc108)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc25)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc26)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc26)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc117)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc118)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc122)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc36)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc38)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
      } loc(#loc123)
    } loc(#loc121)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc106)
        %16 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
        cir.copy %16 to %15 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
        %17 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc49)
        %18 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %19 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc51)
        %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
        %21 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
        %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc54)
        %25 = cir.binop(add, %22, %24) : !u64i loc(#loc128)
        %26 = cir.call @strncpy(%18, %19, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
        %27 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc57)
        %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc18)
  } loc(#loc113)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc129)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc69)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc71)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc72)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc72)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc72)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc135)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc136)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc82)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc86)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
      } loc(#loc141)
    } loc(#loc139)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %13 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
      %15 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
      %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
      cir.scope {
        %17 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc105)
        %18 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
        cir.copy %18 to %17 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
        %19 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc95)
        %20 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %21 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc97)
        %22 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc98)
        %23 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc99)
        %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc98)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc100)
        %27 = cir.binop(add, %24, %26) : !u64i loc(#loc146)
        %28 = cir.call @strncpy(%20, %21, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
        %29 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc102)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
        %31 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
      } loc(#loc145)
    } loc(#loc143)
    cir.return loc(#loc64)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":73:13)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":73:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":46:13)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":46:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":144:1)
#loc10 = loc("/usr/include/string.h":146:14)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":34:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":54:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":36:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":36:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":37:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":37:72)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":38:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":38:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:20)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:30)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:41)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:42)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:17)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:24)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:30)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:29)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":42:26)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":28:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":42:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":43:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":53:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":44:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":44:31)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":29:12)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":45:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":52:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:21)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:27)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:35)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:42)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:52)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":50:23)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":50:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":51:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":51:18)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":83:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":86:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":85:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":85:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":61:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":81:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":63:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":63:12)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":64:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":64:72)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":65:12)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":65:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:20)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:28)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:31)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:34)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:45)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:27)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:46)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:23)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:24)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:29)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":69:26)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":69:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":70:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":80:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":71:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":71:31)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":72:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":79:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:21)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:27)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:35)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:42)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:52)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":77:23)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":77:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":78:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":78:18)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc15, #loc16])
#loc113 = loc(fused[#loc17, #loc18])
#loc114 = loc(fused[#loc19, #loc20])
#loc115 = loc(fused[#loc21, #loc22])
#loc116 = loc(fused[#loc24, #loc23])
#loc117 = loc(fused[#loc27, #loc28])
#loc118 = loc(fused[#loc26, #loc28])
#loc119 = loc(fused[#loc25, #loc29])
#loc120 = loc(fused[#loc30, #loc29])
#loc121 = loc(fused[#loc31, #loc32])
#loc122 = loc(fused[#loc33, #loc34])
#loc123 = loc(fused[#loc35, #loc32])
#loc124 = loc(fused[#loc41, #loc39])
#loc125 = loc(fused[#loc42, #loc43])
#loc126 = loc(fused[#loc44, #loc45])
#loc127 = loc(fused[#loc47, #loc48])
#loc128 = loc(fused[#loc52, #loc54])
#loc129 = loc(fused[#loc59, #loc60])
#loc130 = loc(fused[#loc61, #loc62])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc65, #loc66])
#loc133 = loc(fused[#loc67, #loc68])
#loc134 = loc(fused[#loc70, #loc69])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc76, #loc75])
#loc137 = loc(fused[#loc71, #loc77])
#loc138 = loc(fused[#loc78, #loc77])
#loc139 = loc(fused[#loc79, #loc80])
#loc140 = loc(fused[#loc81, #loc82])
#loc141 = loc(fused[#loc83, #loc80])
#loc142 = loc(fused[#loc88, #loc87])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc91, #loc92])
#loc145 = loc(fused[#loc93, #loc94])
#loc146 = loc(fused[#loc98, #loc100])
