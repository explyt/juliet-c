!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc171)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc176)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc19)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc178)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc20)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc21)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc179)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc22)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc26)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc181)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc182)
    %18 = cir.call %17() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc29)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc183)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc33)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc7)
  } loc(#loc172)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc187)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc184)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc46)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.return %2 : !s32i loc(#loc190)
  } loc(#loc189)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc56)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc196)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc60)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc63)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc65)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc198)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc66)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc67)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc199)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc68)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc72)
    cir.br ^bb3 loc(#loc59)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc201)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc202)
    %18 = cir.call %17() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc75)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb8 loc(#loc78)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc74)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc74)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc52)
  } loc(#loc192)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %2 : !s32i loc(#loc205)
  } loc(#loc204)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc90)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc210)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc94)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc97)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc98)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc99)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc212)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc100)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc101)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc213)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc102)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc106)
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc216)
    %18 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc109)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc217)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc108)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc86)
  } loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc118)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc222)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc122)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb4 loc(#loc125)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc112)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc112)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc129)
    %11 = cir.const #cir.int<64> : !s32i loc(#loc130)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc224)
    %13 = cir.const #cir.int<256> : !s32i loc(#loc131)
    %14 = cir.const #cir.int<128> : !s32i loc(#loc132)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc225)
    %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc133)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc121)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc227)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc228)
    %18 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc138)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc138)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc229)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc142)
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc137)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc114)
  } loc(#loc218)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc148)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc234)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc152)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc152)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc155)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc155)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc156)
    %9 = cir.const #cir.int<64> : !s32i loc(#loc157)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc236)
    %11 = cir.const #cir.int<256> : !s32i loc(#loc158)
    %12 = cir.const #cir.int<128> : !s32i loc(#loc159)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc237)
    %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc160)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc240)
    %16 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc165)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc165)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc241)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc169)
    cir.br ^bb7 loc(#loc164)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc164)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc144)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_08.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:21)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":44:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":59:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":46:5)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":46:9)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":47:13)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":47:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":47:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":48:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":53:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":48:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":48:26)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":49:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:43)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:50)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:59)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:67)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:16)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:9)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:75)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":52:15)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":52:9)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":54:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":58:5)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":54:8)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":54:26)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":55:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":57:15)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":57:9)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":147:1)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":153:1)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":149:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":149:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":150:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":150:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":151:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":151:14)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":152:5)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":152:14)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":32:1)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":35:1)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":34:12)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":34:5)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":79:19)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":66:1)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":87:1)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":68:5)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":68:9)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":69:13)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":69:12)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":69:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":70:5)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":75:5)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":70:8)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":70:26)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":71:5)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:21)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:43)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:50)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:59)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:67)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:16)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:9)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:75)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":74:15)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":74:9)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":76:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":86:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":76:8)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":76:27)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":77:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":80:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":82:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":79:9)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":37:1)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":40:1)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":39:12)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":39:5)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":90:1)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":106:1)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":92:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":92:9)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":93:13)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":93:12)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":93:5)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":94:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":99:5)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":94:8)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":94:26)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":95:5)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:21)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:43)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:50)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:59)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:67)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:16)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:9)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:75)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":98:15)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":98:9)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":100:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":105:5)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":100:8)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":100:26)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":101:5)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:21)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":109:1)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":128:1)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":111:5)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":111:9)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":112:13)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":112:12)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":112:5)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":113:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":122:5)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":113:8)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":113:27)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":114:5)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":117:5)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":119:5)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":116:19)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":116:9)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:44)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:51)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:60)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:68)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:16)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:9)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:76)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":123:5)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":127:5)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":123:8)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":123:26)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":124:5)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":126:15)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":126:9)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":131:1)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":145:1)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":133:5)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":133:9)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":134:13)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":134:12)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":134:5)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":135:5)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":139:5)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":135:8)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":135:26)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":136:5)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:21)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:44)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:51)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:60)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:68)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:16)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:9)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:76)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":140:5)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":144:5)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":140:8)
#loc166 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":140:26)
#loc167 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":141:5)
#loc168 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":143:15)
#loc169 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":143:9)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc4, #loc5])
#loc172 = loc(fused[#loc6, #loc7])
#loc173 = loc(fused[#loc8, #loc9])
#loc174 = loc(fused[#loc12, #loc10])
#loc175 = loc(fused[#loc13, #loc14])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc17, #loc14])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc23, #loc24])
#loc181 = loc(fused[#loc27, #loc28])
#loc182 = loc(fused[#loc29, #loc30])
#loc183 = loc(fused[#loc31, #loc28])
#loc184 = loc(fused[#loc34, #loc35])
#loc185 = loc(fused[#loc36, #loc37])
#loc186 = loc(fused[#loc38, #loc39])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc42, #loc43])
#loc189 = loc(fused[#loc44, #loc45])
#loc190 = loc(fused[#loc47, #loc46])
#loc191 = loc(fused[#loc48, #loc49])
#loc192 = loc(fused[#loc51, #loc52])
#loc193 = loc(fused[#loc53, #loc54])
#loc194 = loc(fused[#loc57, #loc55])
#loc195 = loc(fused[#loc58, #loc59])
#loc196 = loc(fused[#loc60, #loc61])
#loc197 = loc(fused[#loc62, #loc59])
#loc198 = loc(fused[#loc64, #loc65])
#loc199 = loc(fused[#loc66, #loc67])
#loc200 = loc(fused[#loc69, #loc70])
#loc201 = loc(fused[#loc73, #loc74])
#loc202 = loc(fused[#loc75, #loc76])
#loc203 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc204 = loc(fused[#loc81, #loc82])
#loc205 = loc(fused[#loc84, #loc83])
#loc206 = loc(fused[#loc85, #loc86])
#loc207 = loc(fused[#loc87, #loc88])
#loc208 = loc(fused[#loc91, #loc89])
#loc209 = loc(fused[#loc92, #loc93])
#loc210 = loc(fused[#loc94, #loc95])
#loc211 = loc(fused[#loc96, #loc93])
#loc212 = loc(fused[#loc98, #loc99])
#loc213 = loc(fused[#loc100, #loc101])
#loc214 = loc(fused[#loc103, #loc104])
#loc215 = loc(fused[#loc107, #loc108])
#loc216 = loc(fused[#loc109, #loc110])
#loc217 = loc(fused[#loc111, #loc108])
#loc218 = loc(fused[#loc113, #loc114])
#loc219 = loc(fused[#loc115, #loc116])
#loc220 = loc(fused[#loc119, #loc117])
#loc221 = loc(fused[#loc120, #loc121])
#loc222 = loc(fused[#loc122, #loc123])
#loc223 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc224 = loc(fused[#loc129, #loc130])
#loc225 = loc(fused[#loc131, #loc132])
#loc226 = loc(fused[#loc134, #loc135])
#loc227 = loc(fused[#loc136, #loc137])
#loc228 = loc(fused[#loc138, #loc139])
#loc229 = loc(fused[#loc140, #loc137])
#loc230 = loc(fused[#loc143, #loc144])
#loc231 = loc(fused[#loc145, #loc146])
#loc232 = loc(fused[#loc149, #loc147])
#loc233 = loc(fused[#loc150, #loc151])
#loc234 = loc(fused[#loc152, #loc153])
#loc235 = loc(fused[#loc154, #loc151])
#loc236 = loc(fused[#loc156, #loc157])
#loc237 = loc(fused[#loc158, #loc159])
#loc238 = loc(fused[#loc161, #loc162])
#loc239 = loc(fused[#loc163, #loc164])
#loc240 = loc(fused[#loc165, #loc166])
#loc241 = loc(fused[#loc167, #loc164])
