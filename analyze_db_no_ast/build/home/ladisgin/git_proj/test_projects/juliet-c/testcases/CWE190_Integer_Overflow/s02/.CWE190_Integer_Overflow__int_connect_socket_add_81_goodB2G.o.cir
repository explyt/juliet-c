!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":25:66)
#loc9 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":25:73)
#loc10 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":25:77)
#loc28 = loc(fused[#loc9, #loc10])
!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_base = !cir.struct<class "CWE190_Integer_Overflow__int_connect_socket_add_81::CWE190_Integer_Overflow__int_connect_socket_add_81_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G = !cir.struct<class "CWE190_Integer_Overflow__int_connect_socket_add_81::CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G" {!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc25)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc26)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc5)
  cir.func  @_ZNK50CWE190_Integer_Overflow__int_connect_socket_add_8158CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G6actionEi(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G> loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":25:66), %arg1: !s32i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc28)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G>> loc(#loc11)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_connect_socket_add_813A3ACWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G> loc(#loc8)
    cir.scope {
      %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc14)
      %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc15)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc30)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc32)
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc21)
        cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc32)
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc22)
        cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc23)
      } else {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc5)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc5)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc24)
      } loc(#loc31)
    } loc(#loc29)
    cir.return loc(#loc7)
  } loc(#loc27)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":35:19)
#loc6 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":37:1)
#loc11 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":26:1)
#loc12 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":28:5)
#loc13 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":36:5)
#loc14 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":28:9)
#loc15 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":28:16)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":29:5)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":32:5)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":34:5)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":30:9)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":30:29)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":30:22)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":31:22)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":31:9)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_add_81_goodB2G.cpp":35:9)
#loc25 = loc(fused[#loc1, #loc2])
#loc26 = loc(fused[#loc3, #loc4])
#loc27 = loc(fused[#loc6, #loc7])
#loc29 = loc(fused[#loc12, #loc13])
#loc30 = loc(fused[#loc14, #loc15])
#loc31 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc32 = loc(fused[#loc19, #loc20])
