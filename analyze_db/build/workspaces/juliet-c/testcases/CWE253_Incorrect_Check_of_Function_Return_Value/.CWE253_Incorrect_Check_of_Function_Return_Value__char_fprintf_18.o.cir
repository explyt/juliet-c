!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc41)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fprintf failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18_bad() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc45)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc14)
    cir.scope {
      %0 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
      %1 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc42)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
      %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
      %7 = cir.call @fprintf(%2, %4, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc19)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc47)
      cir.if %9 {
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc21)
      } loc(#loc48)
    } loc(#loc46)
    cir.return loc(#loc11)
  } loc(#loc44)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc50)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc23)
  } loc(#loc49)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc52)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc30)
    cir.scope {
      %0 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc33)
      %1 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc42)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc35)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc35)
      %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc36)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc36)
      %7 = cir.call @fprintf(%2, %4, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc33)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc37)
      %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc54)
      cir.if %9 {
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } loc(#loc55)
    } loc(#loc53)
    cir.return loc(#loc27)
  } loc(#loc51)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":357:1)
#loc2 = loc("/usr/include/stdio.h":358:45)
#loc3 = loc("/usr/include/stdio.h":150:1)
#loc4 = loc("/usr/include/stdio.h":150:14)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":30:25)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":30:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":32:19)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":24:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":34:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":26:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":26:10)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":27:1)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":30:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":33:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":30:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":30:17)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":30:46)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":31:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":32:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":52:1)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":55:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":54:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":54:11)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":41:1)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":50:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":43:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":43:10)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":44:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":46:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":49:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":46:9)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":46:17)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":46:25)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":46:33)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":46:45)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":47:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":48:19)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_18.c":48:9)
#loc41 = loc(fused[#loc1, #loc2])
#loc42 = loc(fused[#loc3, #loc4])
#loc43 = loc(fused[#loc7, #loc8])
#loc44 = loc(fused[#loc10, #loc11])
#loc45 = loc(fused[#loc12, #loc13])
#loc46 = loc(fused[#loc15, #loc16])
#loc47 = loc(fused[#loc17, #loc19])
#loc48 = loc(fused[#loc20, #loc16])
#loc49 = loc(fused[#loc22, #loc23])
#loc50 = loc(fused[#loc24, #loc25])
#loc51 = loc(fused[#loc26, #loc27])
#loc52 = loc(fused[#loc28, #loc29])
#loc53 = loc(fused[#loc31, #loc32])
#loc54 = loc(fused[#loc33, #loc37])
#loc55 = loc(fused[#loc38, #loc32])
