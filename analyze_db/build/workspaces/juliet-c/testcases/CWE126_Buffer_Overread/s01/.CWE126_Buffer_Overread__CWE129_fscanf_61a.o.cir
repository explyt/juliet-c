!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE126_Buffer_Overread__CWE129_fscanf_61b_badSource(!s32i) -> !s32i loc(#loc102)
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.call @CWE126_Buffer_Overread__CWE129_fscanf_61b_badSource(%3) : (!s32i) -> !s32i loc(#loc16)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc110)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc110)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc110)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc26)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc112)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc31)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc31)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc32)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        } loc(#loc113)
      } loc(#loc111)
    } loc(#loc109)
    cir.return loc(#loc9)
  } loc(#loc105)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc114)
  cir.func private @CWE126_Buffer_Overread__CWE129_fscanf_61b_goodG2BSource(!s32i) -> !s32i loc(#loc117)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc47)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %4 = cir.call @CWE126_Buffer_Overread__CWE129_fscanf_61b_goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc50)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc123)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc123)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc123)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc125)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc65)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc65)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc66)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc67)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc67)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc68)
        } loc(#loc126)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc43)
  } loc(#loc118)
  cir.func private @CWE126_Buffer_Overread__CWE129_fscanf_61b_goodB2GSource(!s32i) -> !s32i loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc71)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc77)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %4 = cir.call @CWE126_Buffer_Overread__CWE129_fscanf_61b_goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc80)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.scope {
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc133)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc133)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc133)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc90)
        %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc135)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc93)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc136)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc91)
            cir.yield %15 : !cir.bool loc(#loc91)
          }, false {
            %15 = cir.const #false loc(#loc91)
            cir.yield %15 : !cir.bool loc(#loc91)
          }) : (!cir.bool) -> !cir.bool loc(#loc91)
          cir.yield %14 : !cir.bool loc(#loc91)
        }, false {
          %11 = cir.const #false loc(#loc91)
          cir.yield %11 : !cir.bool loc(#loc91)
        }) : (!cir.bool) -> !cir.bool loc(#loc91)
        cir.if %10 {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc99)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc99)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc99)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc100)
        } else {
          %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc71)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc71)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc101)
        } loc(#loc137)
      } loc(#loc134)
    } loc(#loc132)
    cir.return loc(#loc73)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_61a.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":23:1)
#loc2 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":23:65)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":41:23)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":25:1)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":44:1)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":27:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":27:9)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":29:13)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":29:12)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":29:5)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":30:64)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":30:12)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":30:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":30:68)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":31:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":43:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":32:9)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":32:30)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":35:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":42:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":35:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":35:21)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":36:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":38:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":40:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":37:33)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":37:26)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":37:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":41:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":97:1)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":101:1)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":99:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":99:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":100:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":100:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":51:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":51:69)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":53:1)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":72:1)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":55:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":55:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":57:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":57:12)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":57:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":58:68)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":58:12)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":58:5)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":58:72)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":59:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":71:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":60:9)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":60:30)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":63:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":70:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":63:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":63:21)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":64:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":66:9)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":68:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":65:33)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":65:26)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":65:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":69:23)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":69:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":75:1)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":75:69)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":92:23)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":77:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":95:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":79:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":79:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":81:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":81:12)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":81:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":82:68)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":82:12)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":82:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":82:72)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":83:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":94:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":84:9)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":84:30)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":93:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:21)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:23)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:26)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:34)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":86:36)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":87:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":89:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":91:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":88:33)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":88:26)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":88:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_61a.c":92:13)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc8, #loc9])
#loc106 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc14, #loc12])
#loc108 = loc(fused[#loc17, #loc18])
#loc109 = loc(fused[#loc19, #loc20])
#loc110 = loc(fused[#loc21, #loc22])
#loc111 = loc(fused[#loc23, #loc24])
#loc112 = loc(fused[#loc25, #loc26])
#loc113 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc114 = loc(fused[#loc34, #loc35])
#loc115 = loc(fused[#loc36, #loc37])
#loc116 = loc(fused[#loc38, #loc39])
#loc117 = loc(fused[#loc40, #loc41])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc48, #loc46])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc127 = loc(fused[#loc69, #loc70])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc74, #loc75])
#loc130 = loc(fused[#loc78, #loc76])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc83, #loc84])
#loc133 = loc(fused[#loc85, #loc86])
#loc134 = loc(fused[#loc87, #loc88])
#loc135 = loc(fused[#loc89, #loc90])
#loc136 = loc(fused[#loc92, #loc94])
#loc137 = loc(fused[#loc95, #loc96, #loc97, #loc88])
