!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.global external dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc84)
  cir.func no_proto private @CWE590_Free_Memory_Not_on_Heap__free_char_static_68b_badSink(...) loc(#loc85)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.scope {
      %6 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %9 = cir.const #cir.int<65> : !s32i loc(#loc15)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc16)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc90)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc20)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc21)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc91)
      %21 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
      cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    } loc(#loc89)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.store %2, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    %4 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc94)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc7)
  } loc(#loc86)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc96)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    cir.return loc(#loc31)
  } loc(#loc95)
  cir.global external dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc97)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc100)
  cir.func no_proto private @CWE590_Free_Memory_Not_on_Heap__free_char_static_68b_goodG2BSink(...) loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc106)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc55)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc56)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc107)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc108)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc55)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
      cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
      cir.scope {
        %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
        %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc111)
        cir.if %32 {
          %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
          %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc64)
          %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
          %36 = cir.const #cir.int<1> : !s32i loc(#loc66)
          cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr1) loc(#loc65)
        } loc(#loc112)
      } loc(#loc110)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
      %16 = cir.const #cir.int<65> : !s32i loc(#loc68)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc69)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc70)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc69)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc69)
      cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc113)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc73)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc73)
      %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc75)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc76)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc75)
      %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc77)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc114)
      %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    } loc(#loc105)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.store %2, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %4 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc117)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc82)
    cir.return loc(#loc46)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":35:21)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":21:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":21:8)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":27:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":27:67)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":29:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":42:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":31:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":31:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":32:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":32:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":33:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":39:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":36:16)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":36:28)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":36:33)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":36:37)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":36:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":36:38)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":37:29)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":37:20)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":37:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":37:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":38:16)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":38:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":40:67)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":40:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":41:5)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":41:66)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":72:1)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":75:1)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":74:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":74:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":22:1)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":22:8)
#loc36 = loc("/usr/include/stdlib.h":672:1)
#loc37 = loc("/usr/include/stdlib.h":672:45)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":61:23)
#loc41 = loc("/usr/include/stdlib.h":756:1)
#loc42 = loc("/usr/include/stdlib.h":756:70)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":49:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":49:71)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":52:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":70:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":54:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":54:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":55:12)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":55:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":56:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":67:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":58:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":58:60)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":58:37)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":58:44)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":58:48)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":58:59)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":59:9)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":63:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":59:13)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":59:27)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":60:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":61:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":62:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":62:18)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":64:16)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":64:28)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":64:33)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":64:37)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":64:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":64:38)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":65:29)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":65:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":65:20)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":65:24)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":65:25)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":66:16)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":66:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":68:71)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":68:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":69:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_68a.c":69:70)
#loc84 = loc(fused[#loc2, #loc3])
#loc85 = loc(fused[#loc4, #loc5])
#loc86 = loc(fused[#loc6, #loc7])
#loc87 = loc(fused[#loc8, #loc9])
#loc88 = loc(fused[#loc11, #loc10])
#loc89 = loc(fused[#loc12, #loc13])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc23, #loc20])
#loc92 = loc(fused[#loc25, #loc24])
#loc93 = loc(fused[#loc27, #loc26])
#loc94 = loc(fused[#loc28, #loc29])
#loc95 = loc(fused[#loc30, #loc31])
#loc96 = loc(fused[#loc32, #loc33])
#loc97 = loc(fused[#loc34, #loc35])
#loc98 = loc(fused[#loc36, #loc37])
#loc99 = loc(fused[#loc38, #loc39])
#loc100 = loc(fused[#loc41, #loc42])
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc50, #loc49])
#loc105 = loc(fused[#loc51, #loc52])
#loc106 = loc(fused[#loc53, #loc54])
#loc107 = loc(fused[#loc57, #loc58])
#loc108 = loc(fused[#loc56, #loc58])
#loc109 = loc(fused[#loc55, #loc54])
#loc110 = loc(fused[#loc59, #loc60])
#loc111 = loc(fused[#loc61, #loc62])
#loc112 = loc(fused[#loc63, #loc60])
#loc113 = loc(fused[#loc71, #loc72])
#loc114 = loc(fused[#loc74, #loc73])
#loc115 = loc(fused[#loc79, #loc78])
#loc116 = loc(fused[#loc81, #loc80])
#loc117 = loc(fused[#loc82, #loc83])
