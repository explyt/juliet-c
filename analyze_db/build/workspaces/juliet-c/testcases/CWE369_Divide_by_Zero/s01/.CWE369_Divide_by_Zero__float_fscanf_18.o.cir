!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc87)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc89)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc92)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc14)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc93)
    cir.goto "source" loc(#loc94)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc18)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc19)
    cir.goto "sink" loc(#loc95)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc23)
    %9 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc25)
    %11 = cir.cast(floating, %10 : !cir.float), !cir.double loc(#loc25)
    %12 = cir.binop(div, %9, %11) : !cir.double loc(#loc96)
    %13 = cir.cast(float_to_int, %12 : !cir.double), !s32i loc(#loc96)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc27)
    cir.return loc(#loc9)
  } loc(#loc90)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc41)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc103)
    cir.goto "source" loc(#loc104)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc45)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc46)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc48)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc48)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc46)
    cir.goto "sink" loc(#loc105)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc51)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc54)
      %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc54)
      %10 = cir.fabs %9 : !cir.double loc(#loc54)
      %11 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc55)
      %12 = cir.cmp(gt, %10, %11) : !cir.double, !cir.bool loc(#loc107)
      cir.if %12 {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc109)
        %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc62)
        %15 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc63)
        %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc63)
        %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc110)
        %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc110)
        cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc109)
        %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc64)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc65)
      } else {
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc36)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } loc(#loc108)
    } loc(#loc106)
    cir.return loc(#loc38)
  } loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc113)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc73)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc114)
    cir.goto "source" loc(#loc115)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc77)
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc78)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc116)
    cir.goto "sink" loc(#loc117)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc82)
    %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc83)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc84)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc84)
    %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc118)
    %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc118)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc86)
    cir.return loc(#loc68)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":32:20)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":24:1)
#loc9 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":40:1)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":26:5)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":26:11)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":37:9)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":37:40)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":28:12)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":28:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":29:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":29:10)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":30:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":32:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":32:13)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":33:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":33:10)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":34:1)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":37:28)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":37:36)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":38:22)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":38:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":89:1)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":93:1)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":91:5)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":91:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":92:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":92:13)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":66:19)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":47:1)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":68:1)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":49:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":49:11)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":51:12)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":51:5)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":52:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":52:10)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":53:1)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":55:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":55:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":55:20)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":56:5)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":56:10)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":57:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":59:5)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":67:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":59:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":59:21)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":59:8)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":60:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":63:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":65:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":61:9)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":61:40)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":61:28)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":61:36)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":62:22)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":62:9)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":66:9)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":71:1)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":87:1)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":73:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":73:11)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":84:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":84:40)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":75:12)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":75:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":76:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":76:10)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":77:1)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":79:12)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":79:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":80:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":80:10)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":81:1)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":84:28)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":84:36)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":85:22)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_18.c":85:9)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc6, #loc7])
#loc90 = loc(fused[#loc8, #loc9])
#loc91 = loc(fused[#loc10, #loc11])
#loc92 = loc(fused[#loc12, #loc13])
#loc93 = loc(fused[#loc15, #loc14])
#loc94 = loc(fused[#loc16, #loc17])
#loc95 = loc(fused[#loc21, #loc22])
#loc96 = loc(fused[#loc24, #loc25])
#loc97 = loc(fused[#loc28, #loc29])
#loc98 = loc(fused[#loc30, #loc31])
#loc99 = loc(fused[#loc32, #loc33])
#loc100 = loc(fused[#loc34, #loc35])
#loc101 = loc(fused[#loc37, #loc38])
#loc102 = loc(fused[#loc39, #loc40])
#loc103 = loc(fused[#loc42, #loc41])
#loc104 = loc(fused[#loc43, #loc44])
#loc105 = loc(fused[#loc49, #loc50])
#loc106 = loc(fused[#loc52, #loc53])
#loc107 = loc(fused[#loc56, #loc55])
#loc108 = loc(fused[#loc57, #loc58, #loc59, #loc53])
#loc109 = loc(fused[#loc60, #loc61])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc67, #loc68])
#loc112 = loc(fused[#loc69, #loc70])
#loc113 = loc(fused[#loc71, #loc72])
#loc114 = loc(fused[#loc74, #loc73])
#loc115 = loc(fused[#loc75, #loc76])
#loc116 = loc(fused[#loc79, #loc78])
#loc117 = loc(fused[#loc80, #loc81])
#loc118 = loc(fused[#loc83, #loc84])
