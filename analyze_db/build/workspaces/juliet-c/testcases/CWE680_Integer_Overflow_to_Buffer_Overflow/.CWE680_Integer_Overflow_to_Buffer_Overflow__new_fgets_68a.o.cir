!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc62)
  cir.global external dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc63)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc64)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc65)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc66)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc13)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_687badSinkEv() loc(#loc68)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_683badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc70)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc71)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc23)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.br ^bb1 loc(#loc73)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc70)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc70)
    cir.br ^bb2 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc30)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc30)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc30)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc30)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc30)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc30)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc65)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc33)
    %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc75)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc76)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc38)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.br ^bb5 loc(#loc35)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc13)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %24 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68_badData : !cir.ptr<!s32i> loc(#loc62)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_687badSinkEv() : () -> () loc(#loc44)
    cir.return loc(#loc17)
  } loc(#loc69)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_6811goodG2BSinkEv() loc(#loc79)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc81)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc52)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc54)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %5 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68_goodG2BData : !cir.ptr<!s32i> loc(#loc63)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_6811goodG2BSinkEv() : () -> () loc(#loc58)
    cir.return loc(#loc48)
  } loc(#loc80)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_684goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68L7goodG2BEv() : () -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc85)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":21:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":21:5)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":22:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":22:5)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("/usr/include/stdlib.h":105:1)
#loc10 = loc("/usr/include/stdlib.h":106:33)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":47:23)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":30:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":30:14)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":32:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":52:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":38:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":38:45)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":34:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":34:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":36:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":36:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":36:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":37:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":49:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":40:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":48:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":40:19)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":40:32)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":40:49)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":40:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":40:59)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":41:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":44:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":46:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":43:25)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":43:20)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":43:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":43:36)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":47:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":50:72)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":50:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":51:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":59:1)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":59:18)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":62:1)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":71:1)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":64:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":64:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":66:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":66:12)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":66:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":68:12)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":68:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":69:76)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":69:5)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":70:5)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":73:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":76:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_68a.cpp":75:5)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc64 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc7, #loc8])
#loc66 = loc(fused[#loc9, #loc10])
#loc67 = loc(fused[#loc11, #loc12])
#loc68 = loc(fused[#loc14, #loc15])
#loc69 = loc(fused[#loc16, #loc17])
#loc70 = loc(fused[#loc18, #loc19])
#loc71 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc24, #loc22])
#loc73 = loc(fused[#loc25, #loc26])
#loc74 = loc(fused[#loc27, #loc28])
#loc75 = loc(fused[#loc32, #loc33])
#loc76 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc77 = loc(fused[#loc39, #loc40])
#loc78 = loc(fused[#loc43, #loc42])
#loc79 = loc(fused[#loc45, #loc46])
#loc80 = loc(fused[#loc47, #loc48])
#loc81 = loc(fused[#loc49, #loc50])
#loc82 = loc(fused[#loc53, #loc51])
#loc83 = loc(fused[#loc55, #loc54])
#loc84 = loc(fused[#loc57, #loc56])
#loc85 = loc(fused[#loc59, #loc60])
