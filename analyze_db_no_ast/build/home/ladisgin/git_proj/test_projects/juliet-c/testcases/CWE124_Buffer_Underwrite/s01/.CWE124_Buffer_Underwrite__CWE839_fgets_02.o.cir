!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc341)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc342)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc344)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc345)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc352)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc352)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc352)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc342)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc354)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc35)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc43)
            } loc(#loc355)
          } loc(#loc353)
        } loc(#loc351)
      } loc(#loc350)
    } loc(#loc349)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc360)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc361)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc361)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc361)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc57)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc363)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc58)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc64)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc365)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc367)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc70)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc368)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc71)
                  cir.condition(%20) loc(#loc71)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc74)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc74)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc75)
                  } loc(#loc369)
                  cir.yield loc(#loc66)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc77)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc370)
                  cir.yield loc(#loc366)
                } loc(#loc366)
              } loc(#loc366)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc78)
            } loc(#loc364)
          } loc(#loc362)
        } loc(#loc359)
      } loc(#loc358)
    } loc(#loc357)
    cir.return loc(#loc14)
  } loc(#loc346)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc372)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc80)
  } loc(#loc371)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc89)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc90)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc377)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc96)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc100)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc100)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc382)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc382)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc382)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc109)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc109)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc109)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc109)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc109)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc109)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc109)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc109)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc342)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc110)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc111)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc384)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc113)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc118)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc121)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc121)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc122)
            } loc(#loc385)
          } loc(#loc383)
        } loc(#loc381)
      } loc(#loc380)
    } loc(#loc379)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc125)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc390)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc391)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc391)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc391)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc139)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc393)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc140)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc143)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc394)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc145)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc141)
                cir.yield %18 : !cir.bool loc(#loc141)
              }, false {
                %18 = cir.const #false loc(#loc141)
                cir.yield %18 : !cir.bool loc(#loc141)
              }) : (!cir.bool) -> !cir.bool loc(#loc141)
              cir.yield %17 : !cir.bool loc(#loc141)
            }, false {
              %13 = cir.const #false loc(#loc141)
              cir.yield %13 : !cir.bool loc(#loc141)
            }) : (!cir.bool) -> !cir.bool loc(#loc141)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc149)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc151)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc151)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc396)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc154)
                cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc398)
                cir.for : cond {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc157)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc399)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc158)
                  cir.condition(%21) loc(#loc158)
                } body {
                  cir.scope {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                    %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc161)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc161)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc161)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc162)
                  } loc(#loc400)
                  cir.yield loc(#loc153)
                } step {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc164)
                  cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc401)
                  cir.yield loc(#loc397)
                } loc(#loc397)
              } loc(#loc397)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc90)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc90)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc165)
            } loc(#loc395)
          } loc(#loc392)
        } loc(#loc389)
      } loc(#loc388)
    } loc(#loc387)
    cir.return loc(#loc92)
  } loc(#loc376)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc171)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc175)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc175)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc408)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc408)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc408)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc183)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc184)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc184)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc184)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc184)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc184)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc184)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc184)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc184)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc342)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc186)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc410)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc188)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc192)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc193)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc196)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc196)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc197)
            } loc(#loc411)
          } loc(#loc409)
        } loc(#loc407)
      } loc(#loc406)
    } loc(#loc405)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc200)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc200)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc416)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc417)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc417)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc417)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc211)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc419)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc212)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc215)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc420)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc217)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc213)
                cir.yield %18 : !cir.bool loc(#loc213)
              }, false {
                %18 = cir.const #false loc(#loc213)
                cir.yield %18 : !cir.bool loc(#loc213)
              }) : (!cir.bool) -> !cir.bool loc(#loc213)
              cir.yield %17 : !cir.bool loc(#loc213)
            }, false {
              %13 = cir.const #false loc(#loc213)
              cir.yield %13 : !cir.bool loc(#loc213)
            }) : (!cir.bool) -> !cir.bool loc(#loc213)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc221)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc223)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc223)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc422)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc226)
                cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc424)
                cir.for : cond {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc229)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc425)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc230)
                  cir.condition(%21) loc(#loc230)
                } body {
                  cir.scope {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                    %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc233)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc233)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc234)
                  } loc(#loc426)
                  cir.yield loc(#loc225)
                } step {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc236)
                  cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc427)
                  cir.yield loc(#loc423)
                } loc(#loc423)
              } loc(#loc423)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc237)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc237)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc238)
            } loc(#loc421)
          } loc(#loc418)
        } loc(#loc415)
      } loc(#loc414)
    } loc(#loc413)
    cir.return loc(#loc167)
  } loc(#loc402)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc244)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc248)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc248)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc252)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc252)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc253)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc254)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
      } loc(#loc432)
    } loc(#loc431)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc258)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc258)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc437)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc438)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc438)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc438)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc269)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc440)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc270)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc274)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc276)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc276)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc442)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc279)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc444)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc282)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc445)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc283)
                  cir.condition(%20) loc(#loc283)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc286)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc286)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc287)
                  } loc(#loc446)
                  cir.yield loc(#loc278)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc289)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc447)
                  cir.yield loc(#loc443)
                } loc(#loc443)
              } loc(#loc443)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc290)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc290)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc291)
            } loc(#loc441)
          } loc(#loc439)
        } loc(#loc436)
      } loc(#loc435)
    } loc(#loc434)
    cir.return loc(#loc240)
  } loc(#loc428)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc449)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc297)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc450)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc301)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc301)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc303)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc453)
      } loc(#loc452)
    } loc(#loc451)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc307)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc307)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc457)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc458)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc458)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc458)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc318)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc460)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc319)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc323)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc324)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc325)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc325)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc462)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc328)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc464)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc330)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc331)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc465)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc332)
                  cir.condition(%20) loc(#loc332)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc334)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc335)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc335)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc336)
                  } loc(#loc466)
                  cir.yield loc(#loc327)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc338)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc467)
                  cir.yield loc(#loc463)
                } loc(#loc463)
              } loc(#loc463)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc339)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc339)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc340)
            } loc(#loc461)
          } loc(#loc459)
        } loc(#loc456)
      } loc(#loc455)
    } loc(#loc454)
    cir.return loc(#loc293)
  } loc(#loc448)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":63:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":24:1)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":67:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":26:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":26:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":28:13)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":28:12)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":28:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":29:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":44:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":29:8)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":30:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":31:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":43:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":32:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":32:49)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":42:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:23)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:36)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:53)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:17)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:63)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":34:60)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":35:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":38:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":40:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:29)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:24)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:17)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":37:40)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":41:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":45:5)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":66:5)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":45:8)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":46:5)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":47:9)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":65:9)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":48:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":48:17)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":49:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":49:34)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:13)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":64:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:17)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:24)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":52:22)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":53:13)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":60:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":62:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":54:32)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":54:24)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":54:17)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:17)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":59:17)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:25)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:21)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:28)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:32)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:30)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":57:17)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":58:41)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":58:34)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":58:21)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:37)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":56:36)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":63:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":245:1)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":251:1)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":247:5)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":247:14)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":248:5)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":248:14)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":249:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":249:14)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":250:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":250:14)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":98:19)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":117:27)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":74:1)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":121:1)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":76:5)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":76:9)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":78:13)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":78:12)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":78:5)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":79:5)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":94:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":79:8)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":80:5)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":81:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":93:9)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":82:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":82:49)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":92:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:23)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:36)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:53)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:63)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":84:60)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":85:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":88:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":90:13)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:29)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:24)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:17)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":87:40)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":91:27)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":91:17)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":95:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":120:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":95:8)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":96:5)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":99:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":101:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":98:9)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":102:9)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":119:9)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":103:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":103:17)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":104:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":104:34)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":118:13)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:17)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:25)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:22)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:27)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:30)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:38)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:40)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":106:35)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":107:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":114:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":116:13)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":108:32)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":108:24)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":108:17)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:17)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":113:17)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:25)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:21)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:28)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:32)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:30)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":111:17)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":112:41)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":112:34)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":112:21)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:37)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":110:36)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":117:17)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":124:1)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":166:1)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":126:5)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":126:9)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":128:13)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":128:12)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":128:5)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":129:5)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":144:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":129:8)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":130:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":131:9)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":143:9)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":132:13)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":132:49)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":142:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:23)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:36)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:53)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:17)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:63)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":134:60)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":135:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":138:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":140:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:29)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:24)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:17)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":137:40)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":141:27)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":141:17)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":145:5)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":165:5)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":145:8)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":146:5)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":147:9)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":164:9)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":148:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":148:17)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":149:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":149:34)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":163:13)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:17)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:25)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:22)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:27)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:30)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:38)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:40)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":151:35)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":152:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":159:13)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":161:13)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":153:32)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":153:24)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":153:17)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:17)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":158:17)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:25)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:21)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:28)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:32)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:30)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":156:17)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":157:41)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":157:34)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":157:21)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:37)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":155:36)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":162:27)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":162:17)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":169:1)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":207:1)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":171:5)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":171:9)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":173:13)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":173:12)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":173:5)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":174:5)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":184:5)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":174:8)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":175:5)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":178:5)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":180:5)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":177:19)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":177:9)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":183:16)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":183:9)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":185:5)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":206:5)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":185:8)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":186:5)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":187:9)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":205:9)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":188:13)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":188:17)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":189:13)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":189:34)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:13)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":204:13)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:17)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:24)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":192:22)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":193:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":200:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":202:13)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":194:32)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":194:24)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":194:17)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:17)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":199:17)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:25)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:21)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:28)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:32)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:30)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":197:17)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":198:41)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":198:34)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":198:21)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:37)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":196:36)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":203:27)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":203:17)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":210:1)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":243:1)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":212:5)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":212:9)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":214:13)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":214:12)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":214:5)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":215:5)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":220:5)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":215:8)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":216:5)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":219:16)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":219:9)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":221:5)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":242:5)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":221:8)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":222:5)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":223:9)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":241:9)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":224:13)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":224:17)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":225:13)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":225:34)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:13)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":240:13)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:17)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:24)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":228:22)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":229:13)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":236:13)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":238:13)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":230:32)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":230:24)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":230:17)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:17)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":235:17)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:25)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:21)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:28)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:32)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:30)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":233:17)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":234:41)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":234:34)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":234:21)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:37)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":232:36)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":239:27)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_02.c":239:17)
#loc341 = loc(fused[#loc1, #loc2])
#loc342 = loc(fused[#loc3, #loc4])
#loc343 = loc(fused[#loc5, #loc6])
#loc344 = loc(fused[#loc7, #loc8])
#loc345 = loc(fused[#loc10, #loc11])
#loc346 = loc(fused[#loc13, #loc14])
#loc347 = loc(fused[#loc15, #loc16])
#loc348 = loc(fused[#loc19, #loc17])
#loc349 = loc(fused[#loc20, #loc21])
#loc350 = loc(fused[#loc23, #loc21])
#loc351 = loc(fused[#loc24, #loc25])
#loc352 = loc(fused[#loc26, #loc27])
#loc353 = loc(fused[#loc28, #loc29])
#loc354 = loc(fused[#loc33, #loc34])
#loc355 = loc(fused[#loc36, #loc37, #loc38, #loc29])
#loc356 = loc(fused[#loc41, #loc42])
#loc357 = loc(fused[#loc44, #loc45])
#loc358 = loc(fused[#loc47, #loc45])
#loc359 = loc(fused[#loc48, #loc49])
#loc360 = loc(fused[#loc50, #loc51])
#loc361 = loc(fused[#loc52, #loc53])
#loc362 = loc(fused[#loc54, #loc55])
#loc363 = loc(fused[#loc56, #loc57])
#loc364 = loc(fused[#loc59, #loc60, #loc61, #loc55])
#loc365 = loc(fused[#loc64, #loc62])
#loc366 = loc(fused[#loc65, #loc66])
#loc367 = loc(fused[#loc68, #loc67])
#loc368 = loc(fused[#loc69, #loc70])
#loc369 = loc(fused[#loc72, #loc66])
#loc370 = loc(fused[#loc77, #loc76])
#loc371 = loc(fused[#loc79, #loc80])
#loc372 = loc(fused[#loc81, #loc82])
#loc373 = loc(fused[#loc83, #loc84])
#loc374 = loc(fused[#loc85, #loc86])
#loc375 = loc(fused[#loc87, #loc88])
#loc376 = loc(fused[#loc91, #loc92])
#loc377 = loc(fused[#loc93, #loc94])
#loc378 = loc(fused[#loc97, #loc95])
#loc379 = loc(fused[#loc98, #loc99])
#loc380 = loc(fused[#loc101, #loc99])
#loc381 = loc(fused[#loc102, #loc103])
#loc382 = loc(fused[#loc104, #loc105])
#loc383 = loc(fused[#loc106, #loc107])
#loc384 = loc(fused[#loc111, #loc112])
#loc385 = loc(fused[#loc114, #loc115, #loc116, #loc107])
#loc386 = loc(fused[#loc119, #loc120])
#loc387 = loc(fused[#loc123, #loc124])
#loc388 = loc(fused[#loc126, #loc127, #loc128, #loc124])
#loc389 = loc(fused[#loc130, #loc131])
#loc390 = loc(fused[#loc132, #loc133])
#loc391 = loc(fused[#loc134, #loc135])
#loc392 = loc(fused[#loc136, #loc137])
#loc393 = loc(fused[#loc138, #loc139])
#loc394 = loc(fused[#loc142, #loc144])
#loc395 = loc(fused[#loc146, #loc147, #loc148, #loc137])
#loc396 = loc(fused[#loc151, #loc149])
#loc397 = loc(fused[#loc152, #loc153])
#loc398 = loc(fused[#loc155, #loc154])
#loc399 = loc(fused[#loc156, #loc157])
#loc400 = loc(fused[#loc159, #loc153])
#loc401 = loc(fused[#loc164, #loc163])
#loc402 = loc(fused[#loc166, #loc167])
#loc403 = loc(fused[#loc168, #loc169])
#loc404 = loc(fused[#loc172, #loc170])
#loc405 = loc(fused[#loc173, #loc174])
#loc406 = loc(fused[#loc176, #loc174])
#loc407 = loc(fused[#loc177, #loc178])
#loc408 = loc(fused[#loc179, #loc180])
#loc409 = loc(fused[#loc181, #loc182])
#loc410 = loc(fused[#loc186, #loc187])
#loc411 = loc(fused[#loc189, #loc190, #loc191, #loc182])
#loc412 = loc(fused[#loc194, #loc195])
#loc413 = loc(fused[#loc198, #loc199])
#loc414 = loc(fused[#loc201, #loc199])
#loc415 = loc(fused[#loc202, #loc203])
#loc416 = loc(fused[#loc204, #loc205])
#loc417 = loc(fused[#loc206, #loc207])
#loc418 = loc(fused[#loc208, #loc209])
#loc419 = loc(fused[#loc210, #loc211])
#loc420 = loc(fused[#loc214, #loc216])
#loc421 = loc(fused[#loc218, #loc219, #loc220, #loc209])
#loc422 = loc(fused[#loc223, #loc221])
#loc423 = loc(fused[#loc224, #loc225])
#loc424 = loc(fused[#loc227, #loc226])
#loc425 = loc(fused[#loc228, #loc229])
#loc426 = loc(fused[#loc231, #loc225])
#loc427 = loc(fused[#loc236, #loc235])
#loc428 = loc(fused[#loc239, #loc240])
#loc429 = loc(fused[#loc241, #loc242])
#loc430 = loc(fused[#loc245, #loc243])
#loc431 = loc(fused[#loc246, #loc247])
#loc432 = loc(fused[#loc249, #loc250, #loc251, #loc247])
#loc433 = loc(fused[#loc255, #loc254])
#loc434 = loc(fused[#loc256, #loc257])
#loc435 = loc(fused[#loc259, #loc257])
#loc436 = loc(fused[#loc260, #loc261])
#loc437 = loc(fused[#loc262, #loc263])
#loc438 = loc(fused[#loc264, #loc265])
#loc439 = loc(fused[#loc266, #loc267])
#loc440 = loc(fused[#loc268, #loc269])
#loc441 = loc(fused[#loc271, #loc272, #loc273, #loc267])
#loc442 = loc(fused[#loc276, #loc274])
#loc443 = loc(fused[#loc277, #loc278])
#loc444 = loc(fused[#loc280, #loc279])
#loc445 = loc(fused[#loc281, #loc282])
#loc446 = loc(fused[#loc284, #loc278])
#loc447 = loc(fused[#loc289, #loc288])
#loc448 = loc(fused[#loc292, #loc293])
#loc449 = loc(fused[#loc294, #loc295])
#loc450 = loc(fused[#loc298, #loc296])
#loc451 = loc(fused[#loc299, #loc300])
#loc452 = loc(fused[#loc302, #loc300])
#loc453 = loc(fused[#loc304, #loc303])
#loc454 = loc(fused[#loc305, #loc306])
#loc455 = loc(fused[#loc308, #loc306])
#loc456 = loc(fused[#loc309, #loc310])
#loc457 = loc(fused[#loc311, #loc312])
#loc458 = loc(fused[#loc313, #loc314])
#loc459 = loc(fused[#loc315, #loc316])
#loc460 = loc(fused[#loc317, #loc318])
#loc461 = loc(fused[#loc320, #loc321, #loc322, #loc316])
#loc462 = loc(fused[#loc325, #loc323])
#loc463 = loc(fused[#loc326, #loc327])
#loc464 = loc(fused[#loc329, #loc328])
#loc465 = loc(fused[#loc330, #loc331])
#loc466 = loc(fused[#loc333, #loc327])
#loc467 = loc(fused[#loc338, #loc337])
