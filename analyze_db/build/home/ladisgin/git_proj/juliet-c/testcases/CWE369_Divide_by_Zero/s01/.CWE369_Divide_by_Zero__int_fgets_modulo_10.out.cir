!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":191:10)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":191:14)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":191:20)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":191:32)
#loc261 = loc(fused[#loc71, #loc72])
#loc262 = loc(fused[#loc73, #loc74])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc233)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc234)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc235)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc236)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc238)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc241)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc21)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc244)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc245)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc240)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc240)
    cir.br ^bb4 loc(#loc246)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc235)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc247)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc248)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb7 loc(#loc37)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc250)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc251)
  ^bb13:  // pred: ^bb12
    %30 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %32 = cir.binop(rem, %30, %31) : !s32i loc(#loc252)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc50)
    cir.br ^bb14 loc(#loc45)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc15)
  } loc(#loc239)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc52)
  } loc(#loc253)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_10_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_modulo_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE369_Divide_by_Zero__int_fgets_modulo_10_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.return %17 : !s32i loc(#loc265)
  } loc(#loc260)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc268)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc269)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc100)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb1 loc(#loc271)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc104)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc272)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc273)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc268)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc268)
    cir.br ^bb4 loc(#loc274)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc111)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc111)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc111)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc111)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc111)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc235)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc113)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc275)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc276)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb7 loc(#loc116)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc122)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc107)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc278)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc266)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc279)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb20 loc(#loc128)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc280)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %34 = cir.cmp(ne, %32, %33) : !s32i, !cir.bool loc(#loc281)
    cir.brcond %34 ^bb16, ^bb17 loc(#loc282)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %37 = cir.binop(rem, %35, %36) : !s32i loc(#loc283)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc140)
    cir.br ^bb18 loc(#loc136)
  ^bb17:  // pred: ^bb15
    %38 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc92)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb18 loc(#loc132)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc132)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc125)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc125)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc94)
  } loc(#loc267)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc285)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc286)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc149)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb1 loc(#loc288)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc289)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc290)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc285)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc285)
    cir.br ^bb4 loc(#loc291)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc159)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc160)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc160)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc160)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc160)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc160)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc160)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc160)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc160)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc235)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc293)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc167)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc168)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb7 loc(#loc165)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc171)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb7 loc(#loc158)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc156)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc152)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc152)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc295)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %29 ^bb13, ^bb19 loc(#loc296)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc297)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %32 = cir.cmp(ne, %30, %31) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %32 ^bb15, ^bb16 loc(#loc299)
  ^bb15:  // pred: ^bb14
    %33 = cir.const #cir.int<100> : !s32i loc(#loc184)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %35 = cir.binop(rem, %33, %34) : !s32i loc(#loc300)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc186)
    cir.br ^bb17 loc(#loc182)
  ^bb16:  // pred: ^bb14
    %36 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc187)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    cir.br ^bb17 loc(#loc178)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc178)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc174)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc174)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc143)
  } loc(#loc284)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc302)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc194)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc266)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc305)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.br ^bb4 loc(#loc200)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc204)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc197)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc307)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc208)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc308)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.int<100> : !s32i loc(#loc210)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %14 = cir.binop(rem, %12, %13) : !s32i loc(#loc309)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc212)
    cir.br ^bb8 loc(#loc207)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc207)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc190)
  } loc(#loc301)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc218)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb1 loc(#loc313)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc222)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc314)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<7> : !s32i loc(#loc224)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb3 loc(#loc221)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc221)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc316)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc233)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc228)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc317)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<100> : !s32i loc(#loc230)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc318)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc232)
    cir.br ^bb7 loc(#loc227)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc214)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":24:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":50:1)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":32:13)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":32:49)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":26:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":26:9)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":28:13)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":28:12)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":28:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":29:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":44:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":29:8)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":30:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":31:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":43:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":34:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":42:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":34:23)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":34:36)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":34:53)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":34:17)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":34:63)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":35:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":38:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":40:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":37:29)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":37:24)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":37:17)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":37:40)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":41:17)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":45:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":49:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":45:8)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":46:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":48:22)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":48:28)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":48:9)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":174:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":180:1)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":176:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":176:14)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":177:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":177:14)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":178:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":178:14)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":179:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":179:14)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":196:15)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":198:15)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":201:15)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":203:15)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":191:1)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":206:1)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":192:1)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":194:27)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":194:22)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":194:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":196:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":197:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":197:53)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":198:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":201:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":202:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":202:52)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":203:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":205:12)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":205:5)
#loc89 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc90 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":81:19)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":92:23)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":57:1)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":95:1)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":65:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":65:49)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":59:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":59:9)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":61:13)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":61:12)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":61:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":62:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":77:5)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":62:8)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":63:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":64:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":76:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":67:13)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":75:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":67:23)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":67:36)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":67:53)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":67:17)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":67:63)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":68:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":71:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":73:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":70:29)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":70:24)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":70:17)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":70:40)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":74:27)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":74:17)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":78:5)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":94:5)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":78:8)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":79:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":82:5)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":84:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":81:9)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":86:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":93:9)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":86:13)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":86:21)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":87:9)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":89:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":91:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":88:26)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":88:32)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":88:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":92:13)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":98:1)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":131:1)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":106:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":106:49)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":100:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":100:9)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":102:13)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":102:12)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":102:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":103:5)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":118:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":103:8)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":104:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":105:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":117:9)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":108:13)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":116:13)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":108:23)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":108:36)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":108:53)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":108:17)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":108:63)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":109:13)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":112:13)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":114:13)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":111:29)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":111:24)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":111:17)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":111:40)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":115:27)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":115:17)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":119:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":130:5)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":119:8)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":120:5)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":122:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":129:9)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":122:13)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":122:21)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":123:9)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":125:9)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":127:9)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":124:26)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":124:32)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":124:13)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":128:23)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":128:13)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":134:1)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":154:1)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":136:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":136:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":138:13)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":138:12)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":138:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":139:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":148:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":139:8)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":140:5)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":143:5)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":145:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":142:19)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":142:9)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":147:16)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":147:9)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":149:5)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":153:5)
#loc208 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":149:8)
#loc209 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":150:5)
#loc210 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":152:22)
#loc211 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":152:28)
#loc212 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":152:9)
#loc213 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":157:1)
#loc214 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":172:1)
#loc215 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":159:5)
#loc216 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":159:9)
#loc217 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":161:13)
#loc218 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":161:12)
#loc219 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":161:5)
#loc220 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":162:5)
#loc221 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":166:5)
#loc222 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":162:8)
#loc223 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":163:5)
#loc224 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":165:16)
#loc225 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":165:9)
#loc226 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":167:5)
#loc227 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":171:5)
#loc228 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":167:8)
#loc229 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":168:5)
#loc230 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":170:22)
#loc231 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":170:28)
#loc232 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_10.c":170:9)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc5, #loc6])
#loc236 = loc(fused[#loc7, #loc8])
#loc237 = loc(fused[#loc9, #loc10])
#loc238 = loc(fused[#loc12, #loc13])
#loc239 = loc(fused[#loc14, #loc15])
#loc240 = loc(fused[#loc16, #loc17])
#loc241 = loc(fused[#loc18, #loc19])
#loc242 = loc(fused[#loc22, #loc20])
#loc243 = loc(fused[#loc23, #loc24])
#loc244 = loc(fused[#loc26, #loc24])
#loc245 = loc(fused[#loc27, #loc28])
#loc246 = loc(fused[#loc29, #loc30])
#loc247 = loc(fused[#loc34, #loc35])
#loc248 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc249 = loc(fused[#loc41, #loc42])
#loc250 = loc(fused[#loc44, #loc45])
#loc251 = loc(fused[#loc47, #loc45])
#loc252 = loc(fused[#loc48, #loc49])
#loc253 = loc(fused[#loc51, #loc52])
#loc254 = loc(fused[#loc53, #loc54])
#loc255 = loc(fused[#loc55, #loc56])
#loc256 = loc(fused[#loc57, #loc58])
#loc257 = loc(fused[#loc59, #loc60])
#loc258 = loc(fused[#loc61, #loc62])
#loc259 = loc(fused[#loc63, #loc64])
#loc260 = loc(fused[#loc69, #loc70])
#loc263 = loc(fused[#loc80, #loc81])
#loc264 = loc(fused[#loc84, #loc85])
#loc265 = loc(fused[#loc88, #loc87])
#loc266 = loc(fused[#loc89, #loc90])
#loc267 = loc(fused[#loc93, #loc94])
#loc268 = loc(fused[#loc95, #loc96])
#loc269 = loc(fused[#loc97, #loc98])
#loc270 = loc(fused[#loc101, #loc99])
#loc271 = loc(fused[#loc102, #loc103])
#loc272 = loc(fused[#loc105, #loc103])
#loc273 = loc(fused[#loc106, #loc107])
#loc274 = loc(fused[#loc108, #loc109])
#loc275 = loc(fused[#loc113, #loc114])
#loc276 = loc(fused[#loc115, #loc116, #loc117, #loc109])
#loc277 = loc(fused[#loc120, #loc121])
#loc278 = loc(fused[#loc124, #loc125])
#loc279 = loc(fused[#loc127, #loc128, #loc129, #loc125])
#loc280 = loc(fused[#loc131, #loc132])
#loc281 = loc(fused[#loc133, #loc134])
#loc282 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc283 = loc(fused[#loc138, #loc139])
#loc284 = loc(fused[#loc142, #loc143])
#loc285 = loc(fused[#loc144, #loc145])
#loc286 = loc(fused[#loc146, #loc147])
#loc287 = loc(fused[#loc150, #loc148])
#loc288 = loc(fused[#loc151, #loc152])
#loc289 = loc(fused[#loc154, #loc152])
#loc290 = loc(fused[#loc155, #loc156])
#loc291 = loc(fused[#loc157, #loc158])
#loc292 = loc(fused[#loc162, #loc163])
#loc293 = loc(fused[#loc164, #loc165, #loc166, #loc158])
#loc294 = loc(fused[#loc169, #loc170])
#loc295 = loc(fused[#loc173, #loc174])
#loc296 = loc(fused[#loc176, #loc174])
#loc297 = loc(fused[#loc177, #loc178])
#loc298 = loc(fused[#loc179, #loc180])
#loc299 = loc(fused[#loc181, #loc182, #loc183, #loc178])
#loc300 = loc(fused[#loc184, #loc185])
#loc301 = loc(fused[#loc189, #loc190])
#loc302 = loc(fused[#loc191, #loc192])
#loc303 = loc(fused[#loc195, #loc193])
#loc304 = loc(fused[#loc196, #loc197])
#loc305 = loc(fused[#loc199, #loc200, #loc201, #loc197])
#loc306 = loc(fused[#loc205, #loc204])
#loc307 = loc(fused[#loc206, #loc207])
#loc308 = loc(fused[#loc209, #loc207])
#loc309 = loc(fused[#loc210, #loc211])
#loc310 = loc(fused[#loc213, #loc214])
#loc311 = loc(fused[#loc215, #loc216])
#loc312 = loc(fused[#loc219, #loc217])
#loc313 = loc(fused[#loc220, #loc221])
#loc314 = loc(fused[#loc223, #loc221])
#loc315 = loc(fused[#loc225, #loc224])
#loc316 = loc(fused[#loc226, #loc227])
#loc317 = loc(fused[#loc229, #loc227])
#loc318 = loc(fused[#loc230, #loc231])
