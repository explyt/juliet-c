!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc103)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc104)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc105)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc106)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc109)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc110)
    cir.goto "source" loc(#loc111)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc19)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc22)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    cir.scope {
      %9 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc104)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
      %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc116)
      %12 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc104)
      cir.copy %12 to %9 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc104)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc31)
      %14 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc32)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc31)
      cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc117)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc37)
        cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc119)
        cir.for : cond {
          %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc39)
          %20 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc41)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc120)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !cir.bool loc(#loc121)
          cir.condition(%24) loc(#loc42)
        } body {
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc45)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc45)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc45)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
            %24 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc48)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc123)
          } loc(#loc122)
          cir.yield loc(#loc36)
        } step {
          %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc50)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc51)
          cir.store %20, %10 : !u64i, !cir.ptr<!u64i> loc(#loc124)
          cir.yield loc(#loc118)
        } loc(#loc118)
      } loc(#loc118)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    } loc(#loc114)
    cir.return loc(#loc10)
  } loc(#loc107)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc129)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc130)
    cir.goto "source" loc(#loc131)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc68)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc71)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc133)
    cir.scope {
      %9 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc103)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
      %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc136)
      %12 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc103)
      cir.copy %12 to %9 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc103)
      %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc80)
      %14 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc81)
      %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc80)
      cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc137)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc86)
        cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc139)
        cir.for : cond {
          %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc88)
          %20 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc89)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc90)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc90)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc140)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !cir.bool loc(#loc141)
          cir.condition(%24) loc(#loc91)
        } body {
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc93)
            %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc94)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc94)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc94)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %24 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc96)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc143)
          } loc(#loc142)
          cir.yield loc(#loc85)
        } step {
          %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc99)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc100)
          cir.store %20, %10 : !u64i, !cir.ptr<!u64i> loc(#loc144)
          cir.yield loc(#loc138)
        } loc(#loc138)
      } loc(#loc138)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    } loc(#loc134)
    cir.return loc(#loc59)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":70:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":70:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":40:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":40:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":51:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":30:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":31:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":32:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":33:10)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":34:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":37:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":37:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":38:15)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":38:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":38:10)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":38:11)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":39:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":50:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":41:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":41:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":41:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":42:21)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":42:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":42:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":42:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":48:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:18)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:14)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:21)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:25)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:37)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":46:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":47:30)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":47:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":47:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":47:18)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":47:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":47:31)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:41)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":45:40)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":49:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":49:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":83:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":86:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":85:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":85:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":58:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":81:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":60:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":60:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":61:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":61:26)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":62:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":62:29)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":63:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":63:10)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":64:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":67:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":67:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":68:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":68:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":68:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":68:11)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":69:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":80:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":71:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":71:16)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":71:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":72:21)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":72:28)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":72:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":72:34)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":78:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:14)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:21)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:25)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:37)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":76:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":77:30)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":77:23)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":77:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":77:18)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":77:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":77:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:41)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":75:40)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":79:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_18.c":79:9)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc13, #loc14])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc17, #loc18])
#loc112 = loc(fused[#loc21, #loc20])
#loc113 = loc(fused[#loc23, #loc22])
#loc114 = loc(fused[#loc26, #loc27])
#loc115 = loc(fused[#loc28, #loc29])
#loc116 = loc(fused[#loc28, #loc30])
#loc117 = loc(fused[#loc33, #loc34])
#loc118 = loc(fused[#loc35, #loc36])
#loc119 = loc(fused[#loc38, #loc37])
#loc120 = loc(fused[#loc40, #loc41])
#loc121 = loc(fused[#loc39, #loc41])
#loc122 = loc(fused[#loc43, #loc36])
#loc123 = loc(fused[#loc46, #loc49])
#loc124 = loc(fused[#loc51, #loc50])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc58, #loc59])
#loc128 = loc(fused[#loc60, #loc61])
#loc129 = loc(fused[#loc62, #loc63])
#loc130 = loc(fused[#loc64, #loc65])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc70, #loc69])
#loc133 = loc(fused[#loc72, #loc71])
#loc134 = loc(fused[#loc75, #loc76])
#loc135 = loc(fused[#loc77, #loc78])
#loc136 = loc(fused[#loc77, #loc79])
#loc137 = loc(fused[#loc82, #loc83])
#loc138 = loc(fused[#loc84, #loc85])
#loc139 = loc(fused[#loc87, #loc86])
#loc140 = loc(fused[#loc89, #loc90])
#loc141 = loc(fused[#loc88, #loc90])
#loc142 = loc(fused[#loc92, #loc85])
#loc143 = loc(fused[#loc95, #loc98])
#loc144 = loc(fused[#loc100, #loc99])
