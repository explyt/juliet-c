!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc200 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":226:10)
#loc201 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":226:14)
#loc202 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":226:20)
#loc203 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":226:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc401 = loc(fused[#loc200, #loc201])
#loc402 = loc(fused[#loc202, #loc203])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc325)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc327)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc328)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc330)
  cir.func private @close(!s32i) -> !s32i loc(#loc331)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc332)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc333)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc334)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc335)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc340)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc34)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc34)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc343)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc344)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc345)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc346)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc347)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc44)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc345)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc46)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc346)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc51)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc52)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc53)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc349)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc60)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc60)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc351)
                cir.if %63 {
                  cir.break loc(#loc62)
                } loc(#loc352)
              } loc(#loc350)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc353)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc65)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc354)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc355)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc70)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc70)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc356)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc73)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc357)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc77)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc77)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc78)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc358)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc360)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc361)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc361)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc89)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc90)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc90)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc362)
                cir.if %67 {
                  cir.break loc(#loc92)
                } loc(#loc363)
              } loc(#loc359)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc96)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc97)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc98)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc98)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc365)
                cir.if %65 {
                  cir.break loc(#loc100)
                } loc(#loc366)
              } loc(#loc364)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc102)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc103)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc104)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc367)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc110)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc110)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc369)
                cir.if %63 {
                  cir.break loc(#loc112)
                } loc(#loc370)
              } loc(#loc368)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc115)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc115)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc115)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc115)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc115)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc115)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc115)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc116)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc371)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc118)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc118)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc372)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc124)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc124)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc374)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc125)
                  cir.yield %65 : !cir.bool loc(#loc125)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc127)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc375)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc125)
                    cir.yield %69 : !cir.bool loc(#loc125)
                  }, false {
                    %69 = cir.const #false loc(#loc125)
                    cir.yield %69 : !cir.bool loc(#loc125)
                  }) : (!cir.bool) -> !cir.bool loc(#loc125)
                  cir.yield %68 : !cir.bool loc(#loc125)
                }) : (!cir.bool) -> !cir.bool loc(#loc125)
                cir.if %64 {
                  cir.break loc(#loc129)
                } loc(#loc376)
              } loc(#loc373)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc130)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc130)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc132)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc377)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc134)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
              cir.yield loc(#loc50)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc137)
              cir.condition(%16) loc(#loc137)
            } loc(#loc348)
          } loc(#loc348)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc141)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc380)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc144)
            } loc(#loc381)
          } loc(#loc379)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc148)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc148)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc383)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc151)
            } loc(#loc384)
          } loc(#loc382)
        } loc(#loc342)
      } loc(#loc341)
    } loc(#loc339)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc155)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc386)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc388)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc160)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc389)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc388)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc391)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc166)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc167)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc168)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
          } loc(#loc392)
        } loc(#loc390)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc170)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc171)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc171)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc393)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc175)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc175)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc177)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc179)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc394)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc181)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc182)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc182)
      } loc(#loc387)
    } loc(#loc385)
    cir.return loc(#loc26)
  } loc(#loc336)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc396)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc186)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc397)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc188)
    cir.return loc(#loc185)
  } loc(#loc395)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc398)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc399)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc197)
  cir.func @main(%arg0: !s32i loc(fused[#loc200, #loc201]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc202, #loc203])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc401)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc402)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc199)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc204)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc205)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc206)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc206)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc207)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc194)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc403)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08_good() : () -> () loc(#loc209)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc195)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc195)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc196)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc404)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08_bad() : () -> () loc(#loc213)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc197)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc216)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    cir.return %17 : !s32i loc(#loc405)
  } loc(#loc400)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc220)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    cir.return %2 : !s32i loc(#loc407)
  } loc(#loc406)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc222)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc409)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc228)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc412)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc232)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc232)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc222)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc222)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc237)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc238)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc239)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc238)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
      } loc(#loc413)
    } loc(#loc411)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc243)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc244)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc416)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc418)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc248)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc249)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc248)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc419)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc418)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc253)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc421)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc255)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc256)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc257)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc255)
          } loc(#loc422)
        } loc(#loc420)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc258)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc258)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc259)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc261)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc260)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc260)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc423)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc264)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc264)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc267)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc266)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc268)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc424)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc270)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc271)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc272)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc272)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc271)
      } loc(#loc417)
    } loc(#loc415)
    cir.return loc(#loc224)
  } loc(#loc408)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc275)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    cir.return %2 : !s32i loc(#loc426)
  } loc(#loc425)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc281)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc282)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc431)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc286)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc286)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc289)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc290)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc289)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
      } loc(#loc432)
    } loc(#loc430)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc295)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc435)
      cir.if %5 {
        %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc437)
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc299)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc300)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc299)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc438)
        cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc437)
        cir.scope {
          %30 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc303)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc304)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc304)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc440)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc306)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc307)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc308)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc306)
          } loc(#loc441)
        } loc(#loc439)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc309)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc309)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc310)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc311)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc312)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc311)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc311)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc442)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc315)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc315)
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc316)
        %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc318)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc317)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc319)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc443)
        %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc320)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc321)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc322)
        %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc323)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc323)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc322)
      } loc(#loc436)
    } loc(#loc434)
    cir.return loc(#loc278)
  } loc(#loc427)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":57:1)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":147:1)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":59:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":59:9)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":61:13)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":61:12)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":61:5)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":62:5)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":133:5)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":62:8)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":62:26)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":63:5)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":64:9)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":132:9)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":69:13)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":69:17)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":70:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":70:32)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":71:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":71:35)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":72:13)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":72:35)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":73:13)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":73:45)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":74:13)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":117:21)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":84:39)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":84:48)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":84:61)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":84:32)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":84:17)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":84:72)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":85:17)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":88:17)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":85:21)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":85:37)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":86:17)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":87:21)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:24)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:25)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:34)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:37)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:51)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:17)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":89:52)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":90:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":90:17)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":91:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":91:17)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":92:42)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":92:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":92:17)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":92:50)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:17)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":96:17)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:26)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:58)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:59)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:68)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:82)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:21)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":93:88)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":94:17)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":95:21)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":97:17)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":100:17)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":97:28)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":97:42)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":97:21)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":97:61)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":98:17)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":99:21)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":101:39)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":101:53)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":101:59)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":101:32)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":101:17)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":101:63)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":102:17)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":105:17)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":102:21)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":102:37)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":103:17)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":104:21)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:35)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:49)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:62)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:80)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:83)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:30)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:17)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":107:84)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":108:17)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":111:17)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":108:21)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":108:35)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":108:48)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":108:51)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":108:65)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":109:17)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":110:21)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":113:43)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":113:29)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":113:17)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":115:29)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":115:24)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":115:17)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":115:40)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":117:20)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":118:13)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":121:13)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":118:17)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":118:33)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":119:13)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":120:30)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":120:17)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":122:13)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":125:13)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":122:17)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":122:33)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":123:13)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":124:30)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":124:17)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":135:5)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":146:5)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":135:9)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":135:16)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":136:5)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":139:9)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":139:48)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":139:37)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":139:44)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:9)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:43)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:13)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:27)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:33)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:34)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:40)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":140:39)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":142:16)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":142:28)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":142:33)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":142:38)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":142:9)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":142:39)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":143:30)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":143:9)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":143:20)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":143:25)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":143:26)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":144:19)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":144:9)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":145:9)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":145:14)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":210:1)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":214:1)
#loc186 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":212:5)
#loc187 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":212:14)
#loc188 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":213:5)
#loc189 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":213:14)
#loc190 = loc("/usr/include/stdlib.h":575:1)
#loc191 = loc("/usr/include/stdlib.h":575:41)
#loc192 = loc("/usr/include/time.h":76:1)
#loc193 = loc("/usr/include/time.h":76:38)
#loc194 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":231:15)
#loc195 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":233:15)
#loc196 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":236:15)
#loc197 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":238:15)
#loc198 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":226:1)
#loc199 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":241:1)
#loc204 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":227:1)
#loc205 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":229:27)
#loc206 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":229:22)
#loc207 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":229:5)
#loc208 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":231:5)
#loc209 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":232:5)
#loc210 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":232:78)
#loc211 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":233:5)
#loc212 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":236:5)
#loc213 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":237:5)
#loc214 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":237:77)
#loc215 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":238:5)
#loc216 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":240:12)
#loc217 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":240:5)
#loc218 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":45:1)
#loc219 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":48:1)
#loc220 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":47:12)
#loc221 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":47:5)
#loc222 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":162:19)
#loc223 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":154:1)
#loc224 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":182:1)
#loc225 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":156:5)
#loc226 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":156:9)
#loc227 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":158:13)
#loc228 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":158:12)
#loc229 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":158:5)
#loc230 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":159:5)
#loc231 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":168:5)
#loc232 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":159:8)
#loc233 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":159:27)
#loc234 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":160:5)
#loc235 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":163:5)
#loc236 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":165:5)
#loc237 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":162:9)
#loc238 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":167:16)
#loc239 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":167:20)
#loc240 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":167:9)
#loc241 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":170:5)
#loc242 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":181:5)
#loc243 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":170:9)
#loc244 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":170:16)
#loc245 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":171:5)
#loc246 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":174:9)
#loc247 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":174:48)
#loc248 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":174:37)
#loc249 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":174:44)
#loc250 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:9)
#loc251 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:43)
#loc252 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:13)
#loc253 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:27)
#loc254 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:33)
#loc255 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:34)
#loc256 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:40)
#loc257 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":175:39)
#loc258 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":177:16)
#loc259 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":177:28)
#loc260 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":177:33)
#loc261 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":177:38)
#loc262 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":177:9)
#loc263 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":177:39)
#loc264 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":178:30)
#loc265 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":178:9)
#loc266 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":178:20)
#loc267 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":178:25)
#loc268 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":178:26)
#loc269 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":179:19)
#loc270 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":179:9)
#loc271 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":180:9)
#loc272 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":180:14)
#loc273 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":50:1)
#loc274 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":53:1)
#loc275 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":52:12)
#loc276 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":52:5)
#loc277 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":185:1)
#loc278 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":208:1)
#loc279 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":187:5)
#loc280 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":187:9)
#loc281 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":189:13)
#loc282 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":189:12)
#loc283 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":189:5)
#loc284 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":190:5)
#loc285 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":194:5)
#loc286 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":190:8)
#loc287 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":190:26)
#loc288 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":191:5)
#loc289 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":193:16)
#loc290 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":193:20)
#loc291 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":193:9)
#loc292 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":196:5)
#loc293 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":207:5)
#loc294 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":196:9)
#loc295 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":196:16)
#loc296 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":197:5)
#loc297 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":200:9)
#loc298 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":200:48)
#loc299 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":200:37)
#loc300 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":200:44)
#loc301 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:9)
#loc302 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:43)
#loc303 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:13)
#loc304 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:27)
#loc305 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:33)
#loc306 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:34)
#loc307 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:40)
#loc308 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":201:39)
#loc309 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":203:16)
#loc310 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":203:28)
#loc311 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":203:33)
#loc312 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":203:38)
#loc313 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":203:9)
#loc314 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":203:39)
#loc315 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":204:30)
#loc316 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":204:9)
#loc317 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":204:20)
#loc318 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":204:25)
#loc319 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":204:26)
#loc320 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":205:19)
#loc321 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":205:9)
#loc322 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":206:9)
#loc323 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__listen_socket_malloc_08.c":206:14)
#loc324 = loc(fused[#loc1, #loc2])
#loc325 = loc(fused[#loc3, #loc4])
#loc326 = loc(fused[#loc5, #loc6])
#loc327 = loc(fused[#loc7, #loc8])
#loc328 = loc(fused[#loc9, #loc10])
#loc329 = loc(fused[#loc11, #loc12])
#loc330 = loc(fused[#loc13, #loc14])
#loc331 = loc(fused[#loc15, #loc16])
#loc332 = loc(fused[#loc17, #loc18])
#loc333 = loc(fused[#loc19, #loc20])
#loc334 = loc(fused[#loc21, #loc22])
#loc335 = loc(fused[#loc23, #loc24])
#loc336 = loc(fused[#loc25, #loc26])
#loc337 = loc(fused[#loc27, #loc28])
#loc338 = loc(fused[#loc31, #loc29])
#loc339 = loc(fused[#loc32, #loc33])
#loc340 = loc(fused[#loc34, #loc35])
#loc341 = loc(fused[#loc36, #loc33])
#loc342 = loc(fused[#loc37, #loc38])
#loc343 = loc(fused[#loc39, #loc40])
#loc344 = loc(fused[#loc41, #loc42])
#loc345 = loc(fused[#loc43, #loc44])
#loc346 = loc(fused[#loc45, #loc46])
#loc347 = loc(fused[#loc47, #loc48])
#loc348 = loc(fused[#loc49, #loc50])
#loc349 = loc(fused[#loc55, #loc56])
#loc350 = loc(fused[#loc57, #loc58])
#loc351 = loc(fused[#loc59, #loc60])
#loc352 = loc(fused[#loc61, #loc58])
#loc353 = loc(fused[#loc63, #loc64])
#loc354 = loc(fused[#loc66, #loc67])
#loc355 = loc(fused[#loc68, #loc69])
#loc356 = loc(fused[#loc72, #loc70])
#loc357 = loc(fused[#loc76, #loc73])
#loc358 = loc(fused[#loc80, #loc81])
#loc359 = loc(fused[#loc82, #loc83])
#loc360 = loc(fused[#loc85, #loc86])
#loc361 = loc(fused[#loc87, #loc88])
#loc362 = loc(fused[#loc89, #loc90])
#loc363 = loc(fused[#loc91, #loc83])
#loc364 = loc(fused[#loc93, #loc94])
#loc365 = loc(fused[#loc97, #loc98])
#loc366 = loc(fused[#loc99, #loc94])
#loc367 = loc(fused[#loc105, #loc106])
#loc368 = loc(fused[#loc107, #loc108])
#loc369 = loc(fused[#loc109, #loc110])
#loc370 = loc(fused[#loc111, #loc108])
#loc371 = loc(fused[#loc115, #loc116])
#loc372 = loc(fused[#loc119, #loc120])
#loc373 = loc(fused[#loc121, #loc122])
#loc374 = loc(fused[#loc123, #loc124])
#loc375 = loc(fused[#loc126, #loc127])
#loc376 = loc(fused[#loc128, #loc122])
#loc377 = loc(fused[#loc132, #loc130])
#loc378 = loc(fused[#loc135, #loc136])
#loc379 = loc(fused[#loc138, #loc139])
#loc380 = loc(fused[#loc140, #loc141])
#loc381 = loc(fused[#loc142, #loc139])
#loc382 = loc(fused[#loc145, #loc146])
#loc383 = loc(fused[#loc147, #loc148])
#loc384 = loc(fused[#loc149, #loc146])
#loc385 = loc(fused[#loc152, #loc153])
#loc386 = loc(fused[#loc154, #loc155])
#loc387 = loc(fused[#loc156, #loc153])
#loc388 = loc(fused[#loc157, #loc158])
#loc389 = loc(fused[#loc159, #loc158])
#loc390 = loc(fused[#loc161, #loc162])
#loc391 = loc(fused[#loc163, #loc164])
#loc392 = loc(fused[#loc165, #loc162])
#loc393 = loc(fused[#loc173, #loc174])
#loc394 = loc(fused[#loc176, #loc175])
#loc395 = loc(fused[#loc184, #loc185])
#loc396 = loc(fused[#loc186, #loc187])
#loc397 = loc(fused[#loc188, #loc189])
#loc398 = loc(fused[#loc190, #loc191])
#loc399 = loc(fused[#loc192, #loc193])
#loc400 = loc(fused[#loc198, #loc199])
#loc403 = loc(fused[#loc209, #loc210])
#loc404 = loc(fused[#loc213, #loc214])
#loc405 = loc(fused[#loc217, #loc216])
#loc406 = loc(fused[#loc218, #loc219])
#loc407 = loc(fused[#loc221, #loc220])
#loc408 = loc(fused[#loc223, #loc224])
#loc409 = loc(fused[#loc225, #loc226])
#loc410 = loc(fused[#loc229, #loc227])
#loc411 = loc(fused[#loc230, #loc231])
#loc412 = loc(fused[#loc232, #loc233])
#loc413 = loc(fused[#loc234, #loc235, #loc236, #loc231])
#loc414 = loc(fused[#loc240, #loc239])
#loc415 = loc(fused[#loc241, #loc242])
#loc416 = loc(fused[#loc243, #loc244])
#loc417 = loc(fused[#loc245, #loc242])
#loc418 = loc(fused[#loc246, #loc247])
#loc419 = loc(fused[#loc248, #loc247])
#loc420 = loc(fused[#loc250, #loc251])
#loc421 = loc(fused[#loc252, #loc253])
#loc422 = loc(fused[#loc254, #loc251])
#loc423 = loc(fused[#loc262, #loc263])
#loc424 = loc(fused[#loc265, #loc264])
#loc425 = loc(fused[#loc273, #loc274])
#loc426 = loc(fused[#loc276, #loc275])
#loc427 = loc(fused[#loc277, #loc278])
#loc428 = loc(fused[#loc279, #loc280])
#loc429 = loc(fused[#loc283, #loc281])
#loc430 = loc(fused[#loc284, #loc285])
#loc431 = loc(fused[#loc286, #loc287])
#loc432 = loc(fused[#loc288, #loc285])
#loc433 = loc(fused[#loc291, #loc290])
#loc434 = loc(fused[#loc292, #loc293])
#loc435 = loc(fused[#loc294, #loc295])
#loc436 = loc(fused[#loc296, #loc293])
#loc437 = loc(fused[#loc297, #loc298])
#loc438 = loc(fused[#loc299, #loc298])
#loc439 = loc(fused[#loc301, #loc302])
#loc440 = loc(fused[#loc303, #loc304])
#loc441 = loc(fused[#loc305, #loc302])
#loc442 = loc(fused[#loc313, #loc314])
#loc443 = loc(fused[#loc316, #loc315])
