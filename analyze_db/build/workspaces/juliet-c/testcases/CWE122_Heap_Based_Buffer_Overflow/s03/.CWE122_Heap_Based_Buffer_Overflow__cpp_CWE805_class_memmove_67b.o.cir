!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":29:14)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":29:25)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":55:18)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":55:29)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc94 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc51, #loc52])
!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType = !cir.record<struct "CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67::_structType" {!cir.ptr<!ty_TwoIntsClass>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc92)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_677badSinkENS_11_structTypeE(%arg0: !ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc95)
    cir.store %arg0, %0 : !ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType> loc(#loc9)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType> -> !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc8)
    cir.store %3, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc95)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty_TwoIntsClass x 100>, !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>, ["source"] {alignment = 16 : i64} loc(#loc97)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc99)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc21)
          cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc101)
          cir.for : cond {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc23)
            %23 = cir.const #cir.int<100> : !s32i loc(#loc24)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc24)
            %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc102)
            cir.condition(%25) loc(#loc102)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc26)
              %23 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc27)
              %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!ty_TwoIntsClass>, %23 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
              %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc104)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc30)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty_TwoIntsClass>, %28 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
              %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
              cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc105)
            } loc(#loc103)
            cir.yield loc(#loc20)
          } step {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc35)
            cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc106)
            cir.yield loc(#loc100)
          } loc(#loc100)
        } loc(#loc100)
      } loc(#loc98)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc36)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc37)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc38)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc38)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc107)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc108)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc109)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty_TwoIntsClass>, %14 : !s32i), !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
      %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc47)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
      cir.delete.array %18 : <!ty_TwoIntsClass> loc(#loc48)
    } loc(#loc96)
    cir.return loc(#loc4)
  } loc(#loc93)
  cir.func @_ZN62CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_6711goodG2BSinkENS_11_structTypeE(%arg0: !ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType loc(fused[#loc51, #loc52])) extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    cir.store %arg0, %0 : !ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType> loc(#loc55)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_673A3A_structType> -> !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    cir.store %3, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc112)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty_TwoIntsClass x 100>, !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>, ["source"] {alignment = 16 : i64} loc(#loc114)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc116)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc66)
          cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc118)
          cir.for : cond {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc68)
            %23 = cir.const #cir.int<100> : !s32i loc(#loc69)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc69)
            %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc119)
            cir.condition(%25) loc(#loc119)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %23 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc72)
              %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!ty_TwoIntsClass>, %23 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
              %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc121)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty_TwoIntsClass>, %28 : !u64i), !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
              %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
              cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc122)
            } loc(#loc120)
            cir.yield loc(#loc65)
          } step {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc78)
            cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc123)
            cir.yield loc(#loc117)
          } loc(#loc117)
        } loc(#loc117)
      } loc(#loc115)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc79)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty_TwoIntsClass x 100>>), !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc80)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc81)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc124)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc125)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc126)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc87)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty_TwoIntsClass>, %14 : !s32i), !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
      %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc90)
      %18 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc91)
      cir.delete.array %18 : <!ty_TwoIntsClass> loc(#loc91)
    } loc(#loc113)
    cir.return loc(#loc50)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":29:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":48:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":31:5)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":31:36)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":30:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":24:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":32:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":47:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":33:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":33:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":34:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":42:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":35:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":35:20)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":41:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:22)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:18)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:25)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:29)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":38:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":39:36)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":39:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":39:17)
#loc29 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":40:36)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":40:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":40:17)
#loc33 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:35)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":37:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:17)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:23)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:35)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:54)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":44:55)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":45:22)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":45:27)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":45:28)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":45:30)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":45:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":46:19)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":55:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":74:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":57:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":57:36)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":56:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":58:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":73:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":59:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":59:32)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":60:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":68:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":61:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":61:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":67:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:22)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:18)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":64:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":65:36)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":65:24)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":65:17)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":66:36)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":66:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":66:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:35)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":63:34)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:23)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:31)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:35)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:54)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":70:55)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":71:22)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":71:27)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":71:28)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":71:30)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":71:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_class_memmove_67b.cpp":72:19)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc22, #loc21])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc25, #loc20])
#loc104 = loc(fused[#loc28, #loc26])
#loc105 = loc(fused[#loc32, #loc30])
#loc106 = loc(fused[#loc35, #loc34])
#loc107 = loc(fused[#loc39, #loc40])
#loc108 = loc(fused[#loc38, #loc40])
#loc109 = loc(fused[#loc41, #loc42])
#loc110 = loc(fused[#loc49, #loc50])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc56, #loc57])
#loc114 = loc(fused[#loc58, #loc59])
#loc115 = loc(fused[#loc60, #loc61])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc64, #loc65])
#loc118 = loc(fused[#loc67, #loc66])
#loc119 = loc(fused[#loc68, #loc69])
#loc120 = loc(fused[#loc70, #loc65])
#loc121 = loc(fused[#loc73, #loc71])
#loc122 = loc(fused[#loc76, #loc74])
#loc123 = loc(fused[#loc78, #loc77])
#loc124 = loc(fused[#loc82, #loc83])
#loc125 = loc(fused[#loc81, #loc83])
#loc126 = loc(fused[#loc84, #loc85])
