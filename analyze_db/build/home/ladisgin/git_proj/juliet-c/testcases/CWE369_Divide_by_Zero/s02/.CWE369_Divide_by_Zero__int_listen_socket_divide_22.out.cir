!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":328:10)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":328:14)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":328:20)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":328:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc522 = loc(fused[#loc173, #loc174])
#loc523 = loc(fused[#loc175, #loc176])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE369_Divide_by_Zero__int_listen_socket_divide_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc454)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc455)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc456)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc457)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc458)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc459)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc460)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc461)
  cir.func private @close(!s32i) -> !s32i loc(#loc462)
  cir.func private @CWE369_Divide_by_Zero__int_listen_socket_divide_22_badSink(!s32i) loc(#loc463)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_divide_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc465)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc468)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc469)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc470)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc471)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc472)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc35)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc470)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc37)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc471)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc42)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc44)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc474)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc50)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc51)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc476)
            cir.if %63 {
              cir.break loc(#loc53)
            } loc(#loc477)
          } loc(#loc475)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc478)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc56)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc479)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc480)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc61)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc61)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc481)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc64)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc482)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc68)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc68)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc69)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc483)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc485)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc486)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc486)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc81)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc487)
            cir.if %67 {
              cir.break loc(#loc83)
            } loc(#loc488)
          } loc(#loc484)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc87)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc89)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc490)
            cir.if %65 {
              cir.break loc(#loc91)
            } loc(#loc491)
          } loc(#loc489)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc93)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc94)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc492)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc101)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc494)
            cir.if %63 {
              cir.break loc(#loc103)
            } loc(#loc495)
          } loc(#loc493)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc104)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc106)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc106)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc106)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc106)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc106)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc106)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc106)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc107)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc107)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc496)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc108)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc109)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc497)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc115)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc499)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc116)
              cir.yield %65 : !cir.bool loc(#loc116)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc118)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc500)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc116)
                cir.yield %69 : !cir.bool loc(#loc116)
              }, false {
                %69 = cir.const #false loc(#loc116)
                cir.yield %69 : !cir.bool loc(#loc116)
              }) : (!cir.bool) -> !cir.bool loc(#loc116)
              cir.yield %68 : !cir.bool loc(#loc116)
            }) : (!cir.bool) -> !cir.bool loc(#loc116)
            cir.if %64 {
              cir.break loc(#loc120)
            } loc(#loc501)
          } loc(#loc498)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc121)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc121)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc123)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc502)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc125)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc503)
          cir.yield loc(#loc41)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc128)
          cir.condition(%16) loc(#loc128)
        } loc(#loc473)
      } loc(#loc473)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc132)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc505)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc134)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc135)
        } loc(#loc506)
      } loc(#loc504)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc138)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc139)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc508)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc142)
        } loc(#loc509)
      } loc(#loc507)
    } loc(#loc467)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %4 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_divide_22_badGlobal : !cir.ptr<!s32i> loc(#loc454)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc510)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_divide_22_badSink(%5) : (!s32i) -> () loc(#loc146)
    cir.return loc(#loc22)
  } loc(#loc464)
  cir.global external dsolocal @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc511)
  cir.global external dsolocal @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc512)
  cir.global external dsolocal @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodG2BGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc513)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_divide_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc515)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc155)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc516)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc517)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    cir.return loc(#loc154)
  } loc(#loc514)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc518)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc519)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc520)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc170)
  cir.func @main(%arg0: !s32i loc(fused[#loc173, #loc174]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc175, #loc176])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc523)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc178)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc179)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc180)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc167)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_divide_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc524)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_divide_22_good() : () -> () loc(#loc182)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc168)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc169)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_divide_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc525)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_divide_22_bad() : () -> () loc(#loc186)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc189)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc526)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc526)
    cir.return %17 : !s32i loc(#loc526)
  } loc(#loc521)
  cir.func private @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G1Sink(!s32i) loc(#loc527)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc529)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc198)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc530)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc532)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc533)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc534)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc535)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc536)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc207)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc207)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc534)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc209)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc209)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc535)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc214)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc215)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc216)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc217)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc538)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc223)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc223)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc540)
            cir.if %63 {
              cir.break loc(#loc225)
            } loc(#loc541)
          } loc(#loc539)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc542)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc228)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc543)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc544)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc233)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc233)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc545)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc235)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc235)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc546)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc237)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc237)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc238)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc547)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc549)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc550)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc550)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc248)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc249)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc249)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc551)
            cir.if %67 {
              cir.break loc(#loc251)
            } loc(#loc552)
          } loc(#loc548)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc254)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc255)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc256)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc257)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc257)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc554)
            cir.if %65 {
              cir.break loc(#loc259)
            } loc(#loc555)
          } loc(#loc553)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc260)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc261)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc262)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc263)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc556)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc268)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc269)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc269)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc558)
            cir.if %63 {
              cir.break loc(#loc271)
            } loc(#loc559)
          } loc(#loc557)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc272)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc273)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc273)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc274)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc274)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc274)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc274)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc274)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc274)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc274)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc275)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc275)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc560)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc276)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc277)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc277)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc561)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc282)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc283)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc283)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc563)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc284)
              cir.yield %65 : !cir.bool loc(#loc284)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc285)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc286)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc564)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc284)
                cir.yield %69 : !cir.bool loc(#loc284)
              }, false {
                %69 = cir.const #false loc(#loc284)
                cir.yield %69 : !cir.bool loc(#loc284)
              }) : (!cir.bool) -> !cir.bool loc(#loc284)
              cir.yield %68 : !cir.bool loc(#loc284)
            }) : (!cir.bool) -> !cir.bool loc(#loc284)
            cir.if %64 {
              cir.break loc(#loc288)
            } loc(#loc565)
          } loc(#loc562)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc289)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc289)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc290)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc291)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc566)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc292)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc293)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
          cir.yield loc(#loc213)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc296)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc296)
          cir.condition(%16) loc(#loc296)
        } loc(#loc537)
      } loc(#loc537)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc299)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc300)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc300)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc569)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc302)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc303)
        } loc(#loc570)
      } loc(#loc568)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc306)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc307)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc307)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc572)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc309)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc310)
        } loc(#loc573)
      } loc(#loc571)
    } loc(#loc531)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc311)
    %4 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc511)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G1Sink(%5) : (!s32i) -> () loc(#loc314)
    cir.return loc(#loc194)
  } loc(#loc528)
  cir.func private @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G2Sink(!s32i) loc(#loc575)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc577)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc321)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc322)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc578)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc580)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc581)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc582)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc583)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc584)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc331)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc331)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc582)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc333)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc333)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc583)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc338)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc339)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc340)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc341)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc586)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc347)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc347)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc588)
            cir.if %63 {
              cir.break loc(#loc349)
            } loc(#loc589)
          } loc(#loc587)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc590)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc352)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc591)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc592)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc357)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc357)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc593)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc359)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc359)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc594)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc361)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc361)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc362)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc595)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc367)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc597)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc598)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc598)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc372)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc373)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc373)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc599)
            cir.if %67 {
              cir.break loc(#loc375)
            } loc(#loc600)
          } loc(#loc596)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc378)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc379)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc380)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc381)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc381)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc602)
            cir.if %65 {
              cir.break loc(#loc383)
            } loc(#loc603)
          } loc(#loc601)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc384)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc385)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc386)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc387)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc604)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc392)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc393)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc393)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc606)
            cir.if %63 {
              cir.break loc(#loc395)
            } loc(#loc607)
          } loc(#loc605)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc396)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc397)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc397)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc398)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc398)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc398)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc398)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc398)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc398)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc398)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc399)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc399)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc608)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc400)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc401)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc401)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc609)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc406)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc407)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc407)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc611)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc408)
              cir.yield %65 : !cir.bool loc(#loc408)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc409)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc410)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc612)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc408)
                cir.yield %69 : !cir.bool loc(#loc408)
              }, false {
                %69 = cir.const #false loc(#loc408)
                cir.yield %69 : !cir.bool loc(#loc408)
              }) : (!cir.bool) -> !cir.bool loc(#loc408)
              cir.yield %68 : !cir.bool loc(#loc408)
            }) : (!cir.bool) -> !cir.bool loc(#loc408)
            cir.if %64 {
              cir.break loc(#loc412)
            } loc(#loc613)
          } loc(#loc610)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc413)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc413)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc414)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc415)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc415)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc614)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc416)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc417)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc615)
          cir.yield loc(#loc337)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc420)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc420)
          cir.condition(%16) loc(#loc420)
        } loc(#loc585)
      } loc(#loc585)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc423)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc424)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc424)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc617)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc426)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc427)
        } loc(#loc618)
      } loc(#loc616)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc430)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc431)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc431)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc620)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc433)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc434)
        } loc(#loc621)
      } loc(#loc619)
    } loc(#loc579)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc435)
    %4 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc512)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc622)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc437)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodB2G2Sink(%5) : (!s32i) -> () loc(#loc438)
    cir.return loc(#loc318)
  } loc(#loc576)
  cir.func private @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodG2BSink(!s32i) loc(#loc623)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc625)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc445)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc446)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc448)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc450)
    %5 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc513)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc628)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_divide_22_goodG2BSink(%6) : (!s32i) -> () loc(#loc453)
    cir.return loc(#loc442)
  } loc(#loc624)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":45:1)
#loc2 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":45:68)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":47:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":47:73)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":49:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":125:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":51:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":51:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":53:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":53:12)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":53:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":54:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":122:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":59:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":59:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":60:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":60:28)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":61:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":61:31)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":62:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":62:31)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":63:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":63:41)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":64:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":107:17)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":74:35)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":74:44)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":74:57)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":74:28)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":74:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":74:68)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":75:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":78:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":75:17)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":75:33)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":76:13)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":77:17)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:20)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:21)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:30)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:33)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:47)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":79:48)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":80:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":80:13)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":81:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":81:13)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":82:38)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":82:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":82:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":82:46)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":86:13)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:22)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:54)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:55)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:64)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:78)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:17)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":83:84)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":84:13)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":85:17)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":87:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":90:13)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":87:24)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":87:38)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":87:17)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":87:57)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":88:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":89:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":91:35)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":91:49)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":91:55)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":91:28)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":91:13)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":91:59)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":92:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":95:13)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":92:17)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":92:33)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":93:13)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":94:17)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:31)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:45)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:58)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:76)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:79)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:26)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":97:80)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":98:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":101:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":98:17)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":98:31)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":98:44)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":98:47)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":98:61)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":99:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":100:17)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":103:39)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":103:25)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":103:13)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":105:25)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":105:20)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":105:13)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":105:36)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":107:16)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":108:9)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":111:9)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":108:13)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":108:29)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":109:9)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":110:26)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":110:13)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":112:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":115:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":112:13)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":112:29)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":113:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":114:26)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":114:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":123:68)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":123:5)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":124:64)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":124:5)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":132:1)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":132:73)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":133:1)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":133:73)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":134:1)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":134:72)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":312:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":317:1)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":314:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":314:14)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":315:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":315:14)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":316:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":316:13)
#loc161 = loc("/usr/include/stdlib.h":575:1)
#loc162 = loc("/usr/include/stdlib.h":575:41)
#loc163 = loc("/usr/include/time.h":76:1)
#loc164 = loc("/usr/include/time.h":76:38)
#loc165 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":333:15)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":335:15)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":338:15)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":340:15)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":328:1)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":343:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":329:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":331:27)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":331:22)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":331:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":333:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":334:5)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":334:61)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":335:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":338:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":339:5)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":339:60)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":340:5)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":342:12)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":342:5)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":137:1)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":137:78)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":139:1)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":215:1)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":141:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":141:9)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":143:13)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":143:12)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":143:5)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":144:5)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":212:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":149:9)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":149:13)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":150:9)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":150:28)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":151:9)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":151:31)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":152:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":152:31)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":153:9)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":153:41)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":154:9)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":197:17)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":164:35)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":164:44)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":164:57)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":164:28)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":164:13)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":164:68)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":165:13)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":168:13)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":165:17)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":165:33)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":166:13)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":167:17)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:20)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:21)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:30)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:33)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:47)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:13)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":169:48)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":170:34)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":170:13)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":171:39)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":171:13)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":172:38)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":172:32)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":172:13)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":172:46)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:13)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":176:13)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:22)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:54)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:55)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:64)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:78)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:17)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":173:84)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":174:13)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":175:17)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":177:13)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":180:13)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":177:24)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":177:38)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":177:17)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":177:57)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":178:13)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":179:17)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":181:35)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":181:49)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":181:55)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":181:28)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":181:13)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":181:59)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":182:13)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":185:13)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":182:17)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":182:33)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":183:13)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":184:17)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:31)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:45)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:58)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:76)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:79)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:26)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:13)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":187:80)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":188:13)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":191:13)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":188:17)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":188:31)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":188:44)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":188:47)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":188:61)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":189:13)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":190:17)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":193:39)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":193:25)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":193:13)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":195:25)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":195:20)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":195:13)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":195:36)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":197:16)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":198:9)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":201:9)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":198:13)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":198:29)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":199:9)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":200:26)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":200:13)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":202:9)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":205:9)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":202:13)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":202:29)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":203:9)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":204:26)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":204:13)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":213:73)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":213:5)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":214:69)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":214:5)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":218:1)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":218:78)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":220:1)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":296:1)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":222:5)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":222:9)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":224:13)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":224:12)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":224:5)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":225:5)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":293:5)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":230:9)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":230:13)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":231:9)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":231:28)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":232:9)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":232:31)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":233:9)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":233:31)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":234:9)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":234:41)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":235:9)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":278:17)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":245:35)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":245:44)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":245:57)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":245:28)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":245:13)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":245:68)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":246:13)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":249:13)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":246:17)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":246:33)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":247:13)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":248:17)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:20)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:21)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:30)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:33)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:47)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:13)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":250:48)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":251:34)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":251:13)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":252:39)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":252:13)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":253:38)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":253:32)
#loc363 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":253:13)
#loc364 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":253:46)
#loc365 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:13)
#loc366 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":257:13)
#loc367 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:22)
#loc368 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:54)
#loc369 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:55)
#loc370 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:64)
#loc371 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:78)
#loc372 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:17)
#loc373 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":254:84)
#loc374 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":255:13)
#loc375 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":256:17)
#loc376 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":258:13)
#loc377 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":261:13)
#loc378 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":258:24)
#loc379 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":258:38)
#loc380 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":258:17)
#loc381 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":258:57)
#loc382 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":259:13)
#loc383 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":260:17)
#loc384 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":262:35)
#loc385 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":262:49)
#loc386 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":262:55)
#loc387 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":262:28)
#loc388 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":262:13)
#loc389 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":262:59)
#loc390 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":263:13)
#loc391 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":266:13)
#loc392 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":263:17)
#loc393 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":263:33)
#loc394 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":264:13)
#loc395 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":265:17)
#loc396 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:31)
#loc397 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:45)
#loc398 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:58)
#loc399 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:76)
#loc400 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:79)
#loc401 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:26)
#loc402 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:13)
#loc403 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":268:80)
#loc404 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":269:13)
#loc405 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":272:13)
#loc406 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":269:17)
#loc407 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":269:31)
#loc408 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":269:44)
#loc409 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":269:47)
#loc410 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":269:61)
#loc411 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":270:13)
#loc412 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":271:17)
#loc413 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":274:39)
#loc414 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":274:25)
#loc415 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":274:13)
#loc416 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":276:25)
#loc417 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":276:20)
#loc418 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":276:13)
#loc419 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":276:36)
#loc420 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":278:16)
#loc421 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":279:9)
#loc422 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":282:9)
#loc423 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":279:13)
#loc424 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":279:29)
#loc425 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":280:9)
#loc426 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":281:26)
#loc427 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":281:13)
#loc428 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":283:9)
#loc429 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":286:9)
#loc430 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":283:13)
#loc431 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":283:29)
#loc432 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":284:9)
#loc433 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":285:26)
#loc434 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":285:13)
#loc435 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":294:73)
#loc436 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":294:5)
#loc437 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":295:69)
#loc438 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":295:5)
#loc439 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":299:1)
#loc440 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":299:77)
#loc441 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":301:1)
#loc442 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":310:1)
#loc443 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":303:5)
#loc444 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":303:9)
#loc445 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":305:13)
#loc446 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":305:12)
#loc447 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":305:5)
#loc448 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":307:12)
#loc449 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":307:5)
#loc450 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":308:72)
#loc451 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":308:5)
#loc452 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":309:68)
#loc453 = loc("CWE369_Divide_by_Zero__int_listen_socket_divide_22a.c":309:5)
#loc454 = loc(fused[#loc1, #loc2])
#loc455 = loc(fused[#loc3, #loc4])
#loc456 = loc(fused[#loc5, #loc6])
#loc457 = loc(fused[#loc7, #loc8])
#loc458 = loc(fused[#loc9, #loc10])
#loc459 = loc(fused[#loc11, #loc12])
#loc460 = loc(fused[#loc13, #loc14])
#loc461 = loc(fused[#loc15, #loc16])
#loc462 = loc(fused[#loc17, #loc18])
#loc463 = loc(fused[#loc19, #loc20])
#loc464 = loc(fused[#loc21, #loc22])
#loc465 = loc(fused[#loc23, #loc24])
#loc466 = loc(fused[#loc27, #loc25])
#loc467 = loc(fused[#loc28, #loc29])
#loc468 = loc(fused[#loc30, #loc31])
#loc469 = loc(fused[#loc32, #loc33])
#loc470 = loc(fused[#loc34, #loc35])
#loc471 = loc(fused[#loc36, #loc37])
#loc472 = loc(fused[#loc38, #loc39])
#loc473 = loc(fused[#loc40, #loc41])
#loc474 = loc(fused[#loc46, #loc47])
#loc475 = loc(fused[#loc48, #loc49])
#loc476 = loc(fused[#loc50, #loc51])
#loc477 = loc(fused[#loc52, #loc49])
#loc478 = loc(fused[#loc54, #loc55])
#loc479 = loc(fused[#loc57, #loc58])
#loc480 = loc(fused[#loc59, #loc60])
#loc481 = loc(fused[#loc63, #loc61])
#loc482 = loc(fused[#loc67, #loc64])
#loc483 = loc(fused[#loc71, #loc72])
#loc484 = loc(fused[#loc73, #loc74])
#loc485 = loc(fused[#loc76, #loc77])
#loc486 = loc(fused[#loc78, #loc79])
#loc487 = loc(fused[#loc80, #loc81])
#loc488 = loc(fused[#loc82, #loc74])
#loc489 = loc(fused[#loc84, #loc85])
#loc490 = loc(fused[#loc88, #loc89])
#loc491 = loc(fused[#loc90, #loc85])
#loc492 = loc(fused[#loc96, #loc97])
#loc493 = loc(fused[#loc98, #loc99])
#loc494 = loc(fused[#loc100, #loc101])
#loc495 = loc(fused[#loc102, #loc99])
#loc496 = loc(fused[#loc106, #loc107])
#loc497 = loc(fused[#loc110, #loc111])
#loc498 = loc(fused[#loc112, #loc113])
#loc499 = loc(fused[#loc114, #loc115])
#loc500 = loc(fused[#loc117, #loc118])
#loc501 = loc(fused[#loc119, #loc113])
#loc502 = loc(fused[#loc123, #loc121])
#loc503 = loc(fused[#loc126, #loc127])
#loc504 = loc(fused[#loc129, #loc130])
#loc505 = loc(fused[#loc131, #loc132])
#loc506 = loc(fused[#loc133, #loc130])
#loc507 = loc(fused[#loc136, #loc137])
#loc508 = loc(fused[#loc138, #loc139])
#loc509 = loc(fused[#loc140, #loc137])
#loc510 = loc(fused[#loc144, #loc143])
#loc511 = loc(fused[#loc147, #loc148])
#loc512 = loc(fused[#loc149, #loc150])
#loc513 = loc(fused[#loc151, #loc152])
#loc514 = loc(fused[#loc153, #loc154])
#loc515 = loc(fused[#loc155, #loc156])
#loc516 = loc(fused[#loc157, #loc158])
#loc517 = loc(fused[#loc159, #loc160])
#loc518 = loc(fused[#loc161, #loc162])
#loc519 = loc(fused[#loc163, #loc164])
#loc520 = loc(fused[#loc165, #loc166])
#loc521 = loc(fused[#loc171, #loc172])
#loc524 = loc(fused[#loc182, #loc183])
#loc525 = loc(fused[#loc186, #loc187])
#loc526 = loc(fused[#loc190, #loc189])
#loc527 = loc(fused[#loc191, #loc192])
#loc528 = loc(fused[#loc193, #loc194])
#loc529 = loc(fused[#loc195, #loc196])
#loc530 = loc(fused[#loc199, #loc197])
#loc531 = loc(fused[#loc200, #loc201])
#loc532 = loc(fused[#loc202, #loc203])
#loc533 = loc(fused[#loc204, #loc205])
#loc534 = loc(fused[#loc206, #loc207])
#loc535 = loc(fused[#loc208, #loc209])
#loc536 = loc(fused[#loc210, #loc211])
#loc537 = loc(fused[#loc212, #loc213])
#loc538 = loc(fused[#loc218, #loc219])
#loc539 = loc(fused[#loc220, #loc221])
#loc540 = loc(fused[#loc222, #loc223])
#loc541 = loc(fused[#loc224, #loc221])
#loc542 = loc(fused[#loc226, #loc227])
#loc543 = loc(fused[#loc229, #loc230])
#loc544 = loc(fused[#loc231, #loc232])
#loc545 = loc(fused[#loc234, #loc233])
#loc546 = loc(fused[#loc236, #loc235])
#loc547 = loc(fused[#loc239, #loc240])
#loc548 = loc(fused[#loc241, #loc242])
#loc549 = loc(fused[#loc244, #loc245])
#loc550 = loc(fused[#loc246, #loc247])
#loc551 = loc(fused[#loc248, #loc249])
#loc552 = loc(fused[#loc250, #loc242])
#loc553 = loc(fused[#loc252, #loc253])
#loc554 = loc(fused[#loc256, #loc257])
#loc555 = loc(fused[#loc258, #loc253])
#loc556 = loc(fused[#loc264, #loc265])
#loc557 = loc(fused[#loc266, #loc267])
#loc558 = loc(fused[#loc268, #loc269])
#loc559 = loc(fused[#loc270, #loc267])
#loc560 = loc(fused[#loc274, #loc275])
#loc561 = loc(fused[#loc278, #loc279])
#loc562 = loc(fused[#loc280, #loc281])
#loc563 = loc(fused[#loc282, #loc283])
#loc564 = loc(fused[#loc285, #loc286])
#loc565 = loc(fused[#loc287, #loc281])
#loc566 = loc(fused[#loc291, #loc289])
#loc567 = loc(fused[#loc294, #loc295])
#loc568 = loc(fused[#loc297, #loc298])
#loc569 = loc(fused[#loc299, #loc300])
#loc570 = loc(fused[#loc301, #loc298])
#loc571 = loc(fused[#loc304, #loc305])
#loc572 = loc(fused[#loc306, #loc307])
#loc573 = loc(fused[#loc308, #loc305])
#loc574 = loc(fused[#loc312, #loc311])
#loc575 = loc(fused[#loc315, #loc316])
#loc576 = loc(fused[#loc317, #loc318])
#loc577 = loc(fused[#loc319, #loc320])
#loc578 = loc(fused[#loc323, #loc321])
#loc579 = loc(fused[#loc324, #loc325])
#loc580 = loc(fused[#loc326, #loc327])
#loc581 = loc(fused[#loc328, #loc329])
#loc582 = loc(fused[#loc330, #loc331])
#loc583 = loc(fused[#loc332, #loc333])
#loc584 = loc(fused[#loc334, #loc335])
#loc585 = loc(fused[#loc336, #loc337])
#loc586 = loc(fused[#loc342, #loc343])
#loc587 = loc(fused[#loc344, #loc345])
#loc588 = loc(fused[#loc346, #loc347])
#loc589 = loc(fused[#loc348, #loc345])
#loc590 = loc(fused[#loc350, #loc351])
#loc591 = loc(fused[#loc353, #loc354])
#loc592 = loc(fused[#loc355, #loc356])
#loc593 = loc(fused[#loc358, #loc357])
#loc594 = loc(fused[#loc360, #loc359])
#loc595 = loc(fused[#loc363, #loc364])
#loc596 = loc(fused[#loc365, #loc366])
#loc597 = loc(fused[#loc368, #loc369])
#loc598 = loc(fused[#loc370, #loc371])
#loc599 = loc(fused[#loc372, #loc373])
#loc600 = loc(fused[#loc374, #loc366])
#loc601 = loc(fused[#loc376, #loc377])
#loc602 = loc(fused[#loc380, #loc381])
#loc603 = loc(fused[#loc382, #loc377])
#loc604 = loc(fused[#loc388, #loc389])
#loc605 = loc(fused[#loc390, #loc391])
#loc606 = loc(fused[#loc392, #loc393])
#loc607 = loc(fused[#loc394, #loc391])
#loc608 = loc(fused[#loc398, #loc399])
#loc609 = loc(fused[#loc402, #loc403])
#loc610 = loc(fused[#loc404, #loc405])
#loc611 = loc(fused[#loc406, #loc407])
#loc612 = loc(fused[#loc409, #loc410])
#loc613 = loc(fused[#loc411, #loc405])
#loc614 = loc(fused[#loc415, #loc413])
#loc615 = loc(fused[#loc418, #loc419])
#loc616 = loc(fused[#loc421, #loc422])
#loc617 = loc(fused[#loc423, #loc424])
#loc618 = loc(fused[#loc425, #loc422])
#loc619 = loc(fused[#loc428, #loc429])
#loc620 = loc(fused[#loc430, #loc431])
#loc621 = loc(fused[#loc432, #loc429])
#loc622 = loc(fused[#loc436, #loc435])
#loc623 = loc(fused[#loc439, #loc440])
#loc624 = loc(fused[#loc441, #loc442])
#loc625 = loc(fused[#loc443, #loc444])
#loc626 = loc(fused[#loc447, #loc445])
#loc627 = loc(fused[#loc449, #loc448])
#loc628 = loc(fused[#loc451, #loc450])
