!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrue(...) -> !s32i loc(#loc184)
  cir.func private  @printIntLine(!s32i) loc(#loc185)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_pointer_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc189)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc189)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc11)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
      cir.if %4 {
      } loc(#loc190)
    } loc(#loc188)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc192)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc16)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc16)
      cir.if %4 {
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc21)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc6)
  } loc(#loc186)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_pointer_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc23)
  } loc(#loc194)
  cir.func no_proto private  @globalReturnsFalse(...) -> !s32i loc(#loc199)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc200)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc201)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc202)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc206)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc47)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc47)
      cir.if %4 {
      } loc(#loc207)
    } loc(#loc205)
    cir.scope {
      %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc209)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc52)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc52)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc211)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc58)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc212)
        cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc213)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc66)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !s32i loc(#loc215)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc67)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc70)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc71)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc69)
          } loc(#loc216)
        } loc(#loc214)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc72)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
        cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc217)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc76)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc77)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc42)
  } loc(#loc203)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc221)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc221)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc84)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc84)
      cir.if %4 {
      } loc(#loc222)
    } loc(#loc220)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc224)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc89)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc226)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
        cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc228)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc100)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !s32i loc(#loc230)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc101)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc105)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc103)
          } loc(#loc231)
        } loc(#loc229)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc106)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
        cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc232)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc111)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc79)
  } loc(#loc218)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    cir.scope {
      %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc236)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc236)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc118)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc118)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc125)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc238)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc125)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc239)
        cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc240)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !s32i loc(#loc242)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc134)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc136)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc137)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc138)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc136)
          } loc(#loc243)
        } loc(#loc241)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc139)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
        cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc244)
      } loc(#loc237)
    } loc(#loc235)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc246)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc246)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc144)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc144)
      cir.if %4 {
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc149)
      } loc(#loc247)
    } loc(#loc245)
    cir.return loc(#loc113)
  } loc(#loc233)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc251)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc156)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc156)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc253)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc159)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc254)
        cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc255)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !s32i loc(#loc257)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc168)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc171)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc172)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc170)
          } loc(#loc258)
        } loc(#loc256)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc173)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
        cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc259)
      } loc(#loc252)
    } loc(#loc250)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc261)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc261)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc178)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc178)
      cir.if %4 {
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc182)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc183)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc151)
  } loc(#loc248)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":24:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":37:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":26:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":26:11)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":27:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":31:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":27:8)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":27:26)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":28:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":32:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":36:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":32:8)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":32:26)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":33:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":35:23)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":35:22)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":35:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":131:1)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":137:1)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":133:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":133:14)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":134:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":134:14)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":135:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":135:14)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":136:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":136:14)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":55:19)
#loc37 = loc("/usr/include/stdlib.h":672:1)
#loc38 = loc("/usr/include/stdlib.h":672:45)
#loc39 = loc("/usr/include/stdlib.h":756:1)
#loc40 = loc("/usr/include/stdlib.h":756:70)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":44:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":66:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":46:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":46:11)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":47:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":51:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":47:8)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":47:26)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":48:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":52:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":65:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":52:8)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":52:27)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":53:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":56:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":58:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":55:9)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":61:23)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":61:30)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":61:40)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":61:41)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":61:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:37)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:21)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:18)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:27)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:28)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:34)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":62:33)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":63:17)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":63:10)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":63:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":64:23)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":64:22)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":64:9)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":69:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":86:1)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":71:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":71:11)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":72:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":76:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":72:8)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":72:26)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":73:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":77:5)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":85:5)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":77:8)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":77:26)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":78:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":81:23)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":81:30)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":81:40)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":81:41)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":81:9)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:37)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:13)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:21)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:18)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:27)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:28)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:34)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":82:33)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":83:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":83:10)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":83:9)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":84:23)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":84:22)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":84:9)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":89:1)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":110:1)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":91:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":91:11)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":92:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":104:5)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":92:8)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":92:27)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":93:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":96:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":98:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":95:19)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":95:9)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":101:23)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":101:30)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":101:40)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":101:41)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":101:9)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:9)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:37)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:13)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:21)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:18)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:27)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:28)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:34)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":102:33)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":103:17)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":103:10)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":103:9)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":105:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":109:5)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":105:8)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":105:26)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":106:5)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":108:23)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":108:22)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":108:9)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":113:1)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":129:1)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":115:5)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":115:11)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":116:5)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":123:5)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":116:8)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":116:26)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":117:5)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":120:23)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":120:30)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":120:40)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":120:41)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":120:9)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:37)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:13)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:21)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:18)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:27)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:28)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:34)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":121:33)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":122:17)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":122:10)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":122:9)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":124:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":128:5)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":124:8)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":124:26)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":125:5)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":127:23)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":127:22)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_pointer_11.c":127:9)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc11, #loc12])
#loc190 = loc(fused[#loc13, #loc10])
#loc191 = loc(fused[#loc14, #loc15])
#loc192 = loc(fused[#loc16, #loc17])
#loc193 = loc(fused[#loc18, #loc15])
#loc194 = loc(fused[#loc22, #loc23])
#loc195 = loc(fused[#loc24, #loc25])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc28, #loc29])
#loc198 = loc(fused[#loc30, #loc31])
#loc199 = loc(fused[#loc32, #loc33])
#loc200 = loc(fused[#loc34, #loc35])
#loc201 = loc(fused[#loc37, #loc38])
#loc202 = loc(fused[#loc39, #loc40])
#loc203 = loc(fused[#loc41, #loc42])
#loc204 = loc(fused[#loc43, #loc44])
#loc205 = loc(fused[#loc45, #loc46])
#loc206 = loc(fused[#loc47, #loc48])
#loc207 = loc(fused[#loc49, #loc46])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc211 = loc(fused[#loc59, #loc60])
#loc212 = loc(fused[#loc58, #loc61])
#loc213 = loc(fused[#loc62, #loc61])
#loc214 = loc(fused[#loc63, #loc64])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc68, #loc64])
#loc217 = loc(fused[#loc74, #loc72])
#loc218 = loc(fused[#loc78, #loc79])
#loc219 = loc(fused[#loc80, #loc81])
#loc220 = loc(fused[#loc82, #loc83])
#loc221 = loc(fused[#loc84, #loc85])
#loc222 = loc(fused[#loc86, #loc83])
#loc223 = loc(fused[#loc87, #loc88])
#loc224 = loc(fused[#loc89, #loc90])
#loc225 = loc(fused[#loc91, #loc88])
#loc226 = loc(fused[#loc93, #loc94])
#loc227 = loc(fused[#loc92, #loc95])
#loc228 = loc(fused[#loc96, #loc95])
#loc229 = loc(fused[#loc97, #loc98])
#loc230 = loc(fused[#loc99, #loc100])
#loc231 = loc(fused[#loc102, #loc98])
#loc232 = loc(fused[#loc108, #loc106])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc114, #loc115])
#loc235 = loc(fused[#loc116, #loc117])
#loc236 = loc(fused[#loc118, #loc119])
#loc237 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc238 = loc(fused[#loc126, #loc127])
#loc239 = loc(fused[#loc125, #loc128])
#loc240 = loc(fused[#loc129, #loc128])
#loc241 = loc(fused[#loc130, #loc131])
#loc242 = loc(fused[#loc132, #loc133])
#loc243 = loc(fused[#loc135, #loc131])
#loc244 = loc(fused[#loc141, #loc139])
#loc245 = loc(fused[#loc142, #loc143])
#loc246 = loc(fused[#loc144, #loc145])
#loc247 = loc(fused[#loc146, #loc143])
#loc248 = loc(fused[#loc150, #loc151])
#loc249 = loc(fused[#loc152, #loc153])
#loc250 = loc(fused[#loc154, #loc155])
#loc251 = loc(fused[#loc156, #loc157])
#loc252 = loc(fused[#loc158, #loc155])
#loc253 = loc(fused[#loc160, #loc161])
#loc254 = loc(fused[#loc159, #loc162])
#loc255 = loc(fused[#loc163, #loc162])
#loc256 = loc(fused[#loc164, #loc165])
#loc257 = loc(fused[#loc166, #loc167])
#loc258 = loc(fused[#loc169, #loc165])
#loc259 = loc(fused[#loc175, #loc173])
#loc260 = loc(fused[#loc176, #loc177])
#loc261 = loc(fused[#loc178, #loc179])
#loc262 = loc(fused[#loc180, #loc177])
