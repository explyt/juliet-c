!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc68 = loc("CWE401_Memory_Leak__int_realloc_06.c":162:10)
#loc69 = loc("CWE401_Memory_Leak__int_realloc_06.c":162:14)
#loc70 = loc("CWE401_Memory_Leak__int_realloc_06.c":162:20)
#loc71 = loc("CWE401_Memory_Leak__int_realloc_06.c":162:32)
#loc259 = loc(fused[#loc68, #loc69])
#loc260 = loc(fused[#loc70, #loc71])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc231)
  cir.func private @printIntLine(!s32i) loc(#loc232)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc235)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc237)
      cir.if %4 {
        %5 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc18)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc19)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc239)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc240)
        %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc241)
        cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc242)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc244)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc32)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
          } loc(#loc245)
        } loc(#loc243)
        %14 = cir.const #cir.int<5> : !s32i loc(#loc33)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc36)
        cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc246)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc39)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc40)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc43)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc248)
      cir.if %4 {
      } loc(#loc249)
    } loc(#loc247)
    cir.return loc(#loc8)
  } loc(#loc233)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc47)
  } loc(#loc250)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc256)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE401_Memory_Leak__int_realloc_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE401_Memory_Leak__int_realloc_06_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE401_Memory_Leak__int_realloc_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE401_Memory_Leak__int_realloc_06_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %17 : !s32i loc(#loc263)
  } loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc86)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc264)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc267)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc97)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc98)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc269)
      cir.if %4 {
        %5 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc100)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc101)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc102)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc271)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc272)
        %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc273)
        cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc274)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc110)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc276)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc114)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
          } loc(#loc277)
        } loc(#loc275)
        %14 = cir.const #cir.int<5> : !s32i loc(#loc115)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc117)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc118)
        cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc278)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc121)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc122)
      } loc(#loc270)
    } loc(#loc268)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc125)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc280)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc130)
      } else {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc132)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
      } loc(#loc281)
    } loc(#loc279)
    cir.return loc(#loc90)
  } loc(#loc265)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc283)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc137)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc284)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc141)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc142)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc286)
      cir.if %4 {
        %5 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc144)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc145)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc146)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc146)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc288)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc289)
        %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc290)
        cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc291)
        cir.scope {
          %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc154)
          %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc293)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc157)
            %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc158)
            cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
          } loc(#loc294)
        } loc(#loc292)
        %14 = cir.const #cir.int<5> : !s32i loc(#loc159)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc161)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc162)
        cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc295)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc164)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc165)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc166)
      } loc(#loc287)
    } loc(#loc285)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc169)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc170)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc297)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc172)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc173)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc173)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc172)
      } loc(#loc298)
    } loc(#loc296)
    cir.return loc(#loc134)
  } loc(#loc282)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc178)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc301)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc182)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc183)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc303)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc187)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc187)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc188)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc189)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc189)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc189)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc189)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc189)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc189)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc189)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc305)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc191)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc192)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc193)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc194)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc306)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc196)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc197)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc198)
      } loc(#loc304)
    } loc(#loc302)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc201)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc202)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc308)
      cir.if %4 {
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc175)
  } loc(#loc299)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc208)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc312)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc212)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc213)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc314)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc215)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc215)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc215)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc215)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc215)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc215)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc215)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc316)
        %12 = cir.const #cir.int<5> : !s32i loc(#loc217)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc219)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc220)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc317)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc222)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc223)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc221)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc224)
      } loc(#loc315)
    } loc(#loc313)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc227)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc228)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc319)
      cir.if %4 {
      } loc(#loc320)
    } loc(#loc318)
    cir.return loc(#loc205)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_realloc_06.c":29:1)
#loc8 = loc("CWE401_Memory_Leak__int_realloc_06.c":47:1)
#loc9 = loc("CWE401_Memory_Leak__int_realloc_06.c":31:5)
#loc10 = loc("CWE401_Memory_Leak__int_realloc_06.c":31:11)
#loc11 = loc("CWE401_Memory_Leak__int_realloc_06.c":32:12)
#loc12 = loc("CWE401_Memory_Leak__int_realloc_06.c":32:5)
#loc13 = loc("CWE401_Memory_Leak__int_realloc_06.c":33:5)
#loc14 = loc("CWE401_Memory_Leak__int_realloc_06.c":41:5)
#loc15 = loc("CWE401_Memory_Leak__int_realloc_06.c":33:8)
#loc16 = loc("CWE401_Memory_Leak__int_realloc_06.c":33:27)
#loc17 = loc("CWE401_Memory_Leak__int_realloc_06.c":34:5)
#loc18 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:23)
#loc19 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:31)
#loc20 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:37)
#loc21 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:41)
#loc22 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:51)
#loc23 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:52)
#loc24 = loc("CWE401_Memory_Leak__int_realloc_06.c":36:9)
#loc25 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:9)
#loc26 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:37)
#loc27 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:13)
#loc28 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:21)
#loc29 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:27)
#loc30 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:28)
#loc31 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:34)
#loc32 = loc("CWE401_Memory_Leak__int_realloc_06.c":37:33)
#loc33 = loc("CWE401_Memory_Leak__int_realloc_06.c":39:19)
#loc34 = loc("CWE401_Memory_Leak__int_realloc_06.c":39:9)
#loc35 = loc("CWE401_Memory_Leak__int_realloc_06.c":39:14)
#loc36 = loc("CWE401_Memory_Leak__int_realloc_06.c":39:15)
#loc37 = loc("CWE401_Memory_Leak__int_realloc_06.c":40:22)
#loc38 = loc("CWE401_Memory_Leak__int_realloc_06.c":40:27)
#loc39 = loc("CWE401_Memory_Leak__int_realloc_06.c":40:28)
#loc40 = loc("CWE401_Memory_Leak__int_realloc_06.c":40:9)
#loc41 = loc("CWE401_Memory_Leak__int_realloc_06.c":42:5)
#loc42 = loc("CWE401_Memory_Leak__int_realloc_06.c":46:5)
#loc43 = loc("CWE401_Memory_Leak__int_realloc_06.c":42:8)
#loc44 = loc("CWE401_Memory_Leak__int_realloc_06.c":42:27)
#loc45 = loc("CWE401_Memory_Leak__int_realloc_06.c":43:5)
#loc46 = loc("CWE401_Memory_Leak__int_realloc_06.c":145:1)
#loc47 = loc("CWE401_Memory_Leak__int_realloc_06.c":151:1)
#loc48 = loc("CWE401_Memory_Leak__int_realloc_06.c":147:5)
#loc49 = loc("CWE401_Memory_Leak__int_realloc_06.c":147:14)
#loc50 = loc("CWE401_Memory_Leak__int_realloc_06.c":148:5)
#loc51 = loc("CWE401_Memory_Leak__int_realloc_06.c":148:14)
#loc52 = loc("CWE401_Memory_Leak__int_realloc_06.c":149:5)
#loc53 = loc("CWE401_Memory_Leak__int_realloc_06.c":149:14)
#loc54 = loc("CWE401_Memory_Leak__int_realloc_06.c":150:5)
#loc55 = loc("CWE401_Memory_Leak__int_realloc_06.c":150:14)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE401_Memory_Leak__int_realloc_06.c":167:15)
#loc63 = loc("CWE401_Memory_Leak__int_realloc_06.c":169:15)
#loc64 = loc("CWE401_Memory_Leak__int_realloc_06.c":172:15)
#loc65 = loc("CWE401_Memory_Leak__int_realloc_06.c":174:15)
#loc66 = loc("CWE401_Memory_Leak__int_realloc_06.c":162:1)
#loc67 = loc("CWE401_Memory_Leak__int_realloc_06.c":177:1)
#loc72 = loc("CWE401_Memory_Leak__int_realloc_06.c":163:1)
#loc73 = loc("CWE401_Memory_Leak__int_realloc_06.c":165:27)
#loc74 = loc("CWE401_Memory_Leak__int_realloc_06.c":165:22)
#loc75 = loc("CWE401_Memory_Leak__int_realloc_06.c":165:5)
#loc76 = loc("CWE401_Memory_Leak__int_realloc_06.c":167:5)
#loc77 = loc("CWE401_Memory_Leak__int_realloc_06.c":168:5)
#loc78 = loc("CWE401_Memory_Leak__int_realloc_06.c":168:45)
#loc79 = loc("CWE401_Memory_Leak__int_realloc_06.c":169:5)
#loc80 = loc("CWE401_Memory_Leak__int_realloc_06.c":172:5)
#loc81 = loc("CWE401_Memory_Leak__int_realloc_06.c":173:5)
#loc82 = loc("CWE401_Memory_Leak__int_realloc_06.c":173:44)
#loc83 = loc("CWE401_Memory_Leak__int_realloc_06.c":174:5)
#loc84 = loc("CWE401_Memory_Leak__int_realloc_06.c":176:12)
#loc85 = loc("CWE401_Memory_Leak__int_realloc_06.c":176:5)
#loc86 = loc("CWE401_Memory_Leak__int_realloc_06.c":70:19)
#loc87 = loc("/usr/include/stdlib.h":687:1)
#loc88 = loc("/usr/include/stdlib.h":687:32)
#loc89 = loc("CWE401_Memory_Leak__int_realloc_06.c":54:1)
#loc90 = loc("CWE401_Memory_Leak__int_realloc_06.c":77:1)
#loc91 = loc("CWE401_Memory_Leak__int_realloc_06.c":56:5)
#loc92 = loc("CWE401_Memory_Leak__int_realloc_06.c":56:11)
#loc93 = loc("CWE401_Memory_Leak__int_realloc_06.c":57:12)
#loc94 = loc("CWE401_Memory_Leak__int_realloc_06.c":57:5)
#loc95 = loc("CWE401_Memory_Leak__int_realloc_06.c":58:5)
#loc96 = loc("CWE401_Memory_Leak__int_realloc_06.c":66:5)
#loc97 = loc("CWE401_Memory_Leak__int_realloc_06.c":58:8)
#loc98 = loc("CWE401_Memory_Leak__int_realloc_06.c":58:27)
#loc99 = loc("CWE401_Memory_Leak__int_realloc_06.c":59:5)
#loc100 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:23)
#loc101 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:31)
#loc102 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:37)
#loc103 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:41)
#loc104 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:51)
#loc105 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:52)
#loc106 = loc("CWE401_Memory_Leak__int_realloc_06.c":61:9)
#loc107 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:9)
#loc108 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:37)
#loc109 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:13)
#loc110 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:21)
#loc111 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:27)
#loc112 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:28)
#loc113 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:34)
#loc114 = loc("CWE401_Memory_Leak__int_realloc_06.c":62:33)
#loc115 = loc("CWE401_Memory_Leak__int_realloc_06.c":64:19)
#loc116 = loc("CWE401_Memory_Leak__int_realloc_06.c":64:9)
#loc117 = loc("CWE401_Memory_Leak__int_realloc_06.c":64:14)
#loc118 = loc("CWE401_Memory_Leak__int_realloc_06.c":64:15)
#loc119 = loc("CWE401_Memory_Leak__int_realloc_06.c":65:22)
#loc120 = loc("CWE401_Memory_Leak__int_realloc_06.c":65:27)
#loc121 = loc("CWE401_Memory_Leak__int_realloc_06.c":65:28)
#loc122 = loc("CWE401_Memory_Leak__int_realloc_06.c":65:9)
#loc123 = loc("CWE401_Memory_Leak__int_realloc_06.c":67:5)
#loc124 = loc("CWE401_Memory_Leak__int_realloc_06.c":76:5)
#loc125 = loc("CWE401_Memory_Leak__int_realloc_06.c":67:8)
#loc126 = loc("CWE401_Memory_Leak__int_realloc_06.c":67:27)
#loc127 = loc("CWE401_Memory_Leak__int_realloc_06.c":68:5)
#loc128 = loc("CWE401_Memory_Leak__int_realloc_06.c":71:5)
#loc129 = loc("CWE401_Memory_Leak__int_realloc_06.c":73:5)
#loc130 = loc("CWE401_Memory_Leak__int_realloc_06.c":70:9)
#loc131 = loc("CWE401_Memory_Leak__int_realloc_06.c":75:9)
#loc132 = loc("CWE401_Memory_Leak__int_realloc_06.c":75:14)
#loc133 = loc("CWE401_Memory_Leak__int_realloc_06.c":80:1)
#loc134 = loc("CWE401_Memory_Leak__int_realloc_06.c":98:1)
#loc135 = loc("CWE401_Memory_Leak__int_realloc_06.c":82:5)
#loc136 = loc("CWE401_Memory_Leak__int_realloc_06.c":82:11)
#loc137 = loc("CWE401_Memory_Leak__int_realloc_06.c":83:12)
#loc138 = loc("CWE401_Memory_Leak__int_realloc_06.c":83:5)
#loc139 = loc("CWE401_Memory_Leak__int_realloc_06.c":84:5)
#loc140 = loc("CWE401_Memory_Leak__int_realloc_06.c":92:5)
#loc141 = loc("CWE401_Memory_Leak__int_realloc_06.c":84:8)
#loc142 = loc("CWE401_Memory_Leak__int_realloc_06.c":84:27)
#loc143 = loc("CWE401_Memory_Leak__int_realloc_06.c":85:5)
#loc144 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:23)
#loc145 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:31)
#loc146 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:37)
#loc147 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:41)
#loc148 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:51)
#loc149 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:52)
#loc150 = loc("CWE401_Memory_Leak__int_realloc_06.c":87:9)
#loc151 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:9)
#loc152 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:37)
#loc153 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:13)
#loc154 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:21)
#loc155 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:27)
#loc156 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:28)
#loc157 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:34)
#loc158 = loc("CWE401_Memory_Leak__int_realloc_06.c":88:33)
#loc159 = loc("CWE401_Memory_Leak__int_realloc_06.c":90:19)
#loc160 = loc("CWE401_Memory_Leak__int_realloc_06.c":90:9)
#loc161 = loc("CWE401_Memory_Leak__int_realloc_06.c":90:14)
#loc162 = loc("CWE401_Memory_Leak__int_realloc_06.c":90:15)
#loc163 = loc("CWE401_Memory_Leak__int_realloc_06.c":91:22)
#loc164 = loc("CWE401_Memory_Leak__int_realloc_06.c":91:27)
#loc165 = loc("CWE401_Memory_Leak__int_realloc_06.c":91:28)
#loc166 = loc("CWE401_Memory_Leak__int_realloc_06.c":91:9)
#loc167 = loc("CWE401_Memory_Leak__int_realloc_06.c":93:5)
#loc168 = loc("CWE401_Memory_Leak__int_realloc_06.c":97:5)
#loc169 = loc("CWE401_Memory_Leak__int_realloc_06.c":93:8)
#loc170 = loc("CWE401_Memory_Leak__int_realloc_06.c":93:27)
#loc171 = loc("CWE401_Memory_Leak__int_realloc_06.c":94:5)
#loc172 = loc("CWE401_Memory_Leak__int_realloc_06.c":96:9)
#loc173 = loc("CWE401_Memory_Leak__int_realloc_06.c":96:14)
#loc174 = loc("CWE401_Memory_Leak__int_realloc_06.c":101:1)
#loc175 = loc("CWE401_Memory_Leak__int_realloc_06.c":123:1)
#loc176 = loc("CWE401_Memory_Leak__int_realloc_06.c":103:5)
#loc177 = loc("CWE401_Memory_Leak__int_realloc_06.c":103:11)
#loc178 = loc("CWE401_Memory_Leak__int_realloc_06.c":104:12)
#loc179 = loc("CWE401_Memory_Leak__int_realloc_06.c":104:5)
#loc180 = loc("CWE401_Memory_Leak__int_realloc_06.c":105:5)
#loc181 = loc("CWE401_Memory_Leak__int_realloc_06.c":117:5)
#loc182 = loc("CWE401_Memory_Leak__int_realloc_06.c":105:8)
#loc183 = loc("CWE401_Memory_Leak__int_realloc_06.c":105:27)
#loc184 = loc("CWE401_Memory_Leak__int_realloc_06.c":106:5)
#loc185 = loc("CWE401_Memory_Leak__int_realloc_06.c":109:5)
#loc186 = loc("CWE401_Memory_Leak__int_realloc_06.c":111:5)
#loc187 = loc("CWE401_Memory_Leak__int_realloc_06.c":108:19)
#loc188 = loc("CWE401_Memory_Leak__int_realloc_06.c":108:9)
#loc189 = loc("CWE401_Memory_Leak__int_realloc_06.c":113:23)
#loc190 = loc("CWE401_Memory_Leak__int_realloc_06.c":113:9)
#loc191 = loc("CWE401_Memory_Leak__int_realloc_06.c":115:19)
#loc192 = loc("CWE401_Memory_Leak__int_realloc_06.c":115:9)
#loc193 = loc("CWE401_Memory_Leak__int_realloc_06.c":115:14)
#loc194 = loc("CWE401_Memory_Leak__int_realloc_06.c":115:15)
#loc195 = loc("CWE401_Memory_Leak__int_realloc_06.c":116:22)
#loc196 = loc("CWE401_Memory_Leak__int_realloc_06.c":116:27)
#loc197 = loc("CWE401_Memory_Leak__int_realloc_06.c":116:28)
#loc198 = loc("CWE401_Memory_Leak__int_realloc_06.c":116:9)
#loc199 = loc("CWE401_Memory_Leak__int_realloc_06.c":118:5)
#loc200 = loc("CWE401_Memory_Leak__int_realloc_06.c":122:5)
#loc201 = loc("CWE401_Memory_Leak__int_realloc_06.c":118:8)
#loc202 = loc("CWE401_Memory_Leak__int_realloc_06.c":118:27)
#loc203 = loc("CWE401_Memory_Leak__int_realloc_06.c":119:5)
#loc204 = loc("CWE401_Memory_Leak__int_realloc_06.c":126:1)
#loc205 = loc("CWE401_Memory_Leak__int_realloc_06.c":143:1)
#loc206 = loc("CWE401_Memory_Leak__int_realloc_06.c":128:5)
#loc207 = loc("CWE401_Memory_Leak__int_realloc_06.c":128:11)
#loc208 = loc("CWE401_Memory_Leak__int_realloc_06.c":129:12)
#loc209 = loc("CWE401_Memory_Leak__int_realloc_06.c":129:5)
#loc210 = loc("CWE401_Memory_Leak__int_realloc_06.c":130:5)
#loc211 = loc("CWE401_Memory_Leak__int_realloc_06.c":137:5)
#loc212 = loc("CWE401_Memory_Leak__int_realloc_06.c":130:8)
#loc213 = loc("CWE401_Memory_Leak__int_realloc_06.c":130:27)
#loc214 = loc("CWE401_Memory_Leak__int_realloc_06.c":131:5)
#loc215 = loc("CWE401_Memory_Leak__int_realloc_06.c":133:23)
#loc216 = loc("CWE401_Memory_Leak__int_realloc_06.c":133:9)
#loc217 = loc("CWE401_Memory_Leak__int_realloc_06.c":135:19)
#loc218 = loc("CWE401_Memory_Leak__int_realloc_06.c":135:9)
#loc219 = loc("CWE401_Memory_Leak__int_realloc_06.c":135:14)
#loc220 = loc("CWE401_Memory_Leak__int_realloc_06.c":135:15)
#loc221 = loc("CWE401_Memory_Leak__int_realloc_06.c":136:22)
#loc222 = loc("CWE401_Memory_Leak__int_realloc_06.c":136:27)
#loc223 = loc("CWE401_Memory_Leak__int_realloc_06.c":136:28)
#loc224 = loc("CWE401_Memory_Leak__int_realloc_06.c":136:9)
#loc225 = loc("CWE401_Memory_Leak__int_realloc_06.c":138:5)
#loc226 = loc("CWE401_Memory_Leak__int_realloc_06.c":142:5)
#loc227 = loc("CWE401_Memory_Leak__int_realloc_06.c":138:8)
#loc228 = loc("CWE401_Memory_Leak__int_realloc_06.c":138:27)
#loc229 = loc("CWE401_Memory_Leak__int_realloc_06.c":139:5)
#loc230 = loc(fused[#loc1, #loc2])
#loc231 = loc(fused[#loc3, #loc4])
#loc232 = loc(fused[#loc5, #loc6])
#loc233 = loc(fused[#loc7, #loc8])
#loc234 = loc(fused[#loc9, #loc10])
#loc235 = loc(fused[#loc12, #loc11])
#loc236 = loc(fused[#loc13, #loc14])
#loc237 = loc(fused[#loc15, #loc16])
#loc238 = loc(fused[#loc17, #loc14])
#loc239 = loc(fused[#loc21, #loc22])
#loc240 = loc(fused[#loc20, #loc22])
#loc241 = loc(fused[#loc18, #loc23])
#loc242 = loc(fused[#loc24, #loc23])
#loc243 = loc(fused[#loc25, #loc26])
#loc244 = loc(fused[#loc27, #loc28])
#loc245 = loc(fused[#loc29, #loc26])
#loc246 = loc(fused[#loc34, #loc33])
#loc247 = loc(fused[#loc41, #loc42])
#loc248 = loc(fused[#loc43, #loc44])
#loc249 = loc(fused[#loc45, #loc42])
#loc250 = loc(fused[#loc46, #loc47])
#loc251 = loc(fused[#loc48, #loc49])
#loc252 = loc(fused[#loc50, #loc51])
#loc253 = loc(fused[#loc52, #loc53])
#loc254 = loc(fused[#loc54, #loc55])
#loc255 = loc(fused[#loc56, #loc57])
#loc256 = loc(fused[#loc58, #loc59])
#loc257 = loc(fused[#loc60, #loc61])
#loc258 = loc(fused[#loc66, #loc67])
#loc261 = loc(fused[#loc77, #loc78])
#loc262 = loc(fused[#loc81, #loc82])
#loc263 = loc(fused[#loc85, #loc84])
#loc264 = loc(fused[#loc87, #loc88])
#loc265 = loc(fused[#loc89, #loc90])
#loc266 = loc(fused[#loc91, #loc92])
#loc267 = loc(fused[#loc94, #loc93])
#loc268 = loc(fused[#loc95, #loc96])
#loc269 = loc(fused[#loc97, #loc98])
#loc270 = loc(fused[#loc99, #loc96])
#loc271 = loc(fused[#loc103, #loc104])
#loc272 = loc(fused[#loc102, #loc104])
#loc273 = loc(fused[#loc100, #loc105])
#loc274 = loc(fused[#loc106, #loc105])
#loc275 = loc(fused[#loc107, #loc108])
#loc276 = loc(fused[#loc109, #loc110])
#loc277 = loc(fused[#loc111, #loc108])
#loc278 = loc(fused[#loc116, #loc115])
#loc279 = loc(fused[#loc123, #loc124])
#loc280 = loc(fused[#loc125, #loc126])
#loc281 = loc(fused[#loc127, #loc128, #loc129, #loc124])
#loc282 = loc(fused[#loc133, #loc134])
#loc283 = loc(fused[#loc135, #loc136])
#loc284 = loc(fused[#loc138, #loc137])
#loc285 = loc(fused[#loc139, #loc140])
#loc286 = loc(fused[#loc141, #loc142])
#loc287 = loc(fused[#loc143, #loc140])
#loc288 = loc(fused[#loc147, #loc148])
#loc289 = loc(fused[#loc146, #loc148])
#loc290 = loc(fused[#loc144, #loc149])
#loc291 = loc(fused[#loc150, #loc149])
#loc292 = loc(fused[#loc151, #loc152])
#loc293 = loc(fused[#loc153, #loc154])
#loc294 = loc(fused[#loc155, #loc152])
#loc295 = loc(fused[#loc160, #loc159])
#loc296 = loc(fused[#loc167, #loc168])
#loc297 = loc(fused[#loc169, #loc170])
#loc298 = loc(fused[#loc171, #loc168])
#loc299 = loc(fused[#loc174, #loc175])
#loc300 = loc(fused[#loc176, #loc177])
#loc301 = loc(fused[#loc179, #loc178])
#loc302 = loc(fused[#loc180, #loc181])
#loc303 = loc(fused[#loc182, #loc183])
#loc304 = loc(fused[#loc184, #loc185, #loc186, #loc181])
#loc305 = loc(fused[#loc190, #loc189])
#loc306 = loc(fused[#loc192, #loc191])
#loc307 = loc(fused[#loc199, #loc200])
#loc308 = loc(fused[#loc201, #loc202])
#loc309 = loc(fused[#loc203, #loc200])
#loc310 = loc(fused[#loc204, #loc205])
#loc311 = loc(fused[#loc206, #loc207])
#loc312 = loc(fused[#loc209, #loc208])
#loc313 = loc(fused[#loc210, #loc211])
#loc314 = loc(fused[#loc212, #loc213])
#loc315 = loc(fused[#loc214, #loc211])
#loc316 = loc(fused[#loc216, #loc215])
#loc317 = loc(fused[#loc218, #loc217])
#loc318 = loc(fused[#loc225, #loc226])
#loc319 = loc(fused[#loc227, #loc228])
#loc320 = loc(fused[#loc229, #loc226])
