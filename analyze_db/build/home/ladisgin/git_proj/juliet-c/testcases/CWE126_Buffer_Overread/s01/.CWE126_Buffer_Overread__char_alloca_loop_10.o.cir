!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc253)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc259)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc260)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc261)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc17)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc262)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc19)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc19)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %19, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc22)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc26)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc28)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc28)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc264)
    %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %36 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc33)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc265)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc37)
    %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc39)
    %47 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %48 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc253)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %50 = cir.cast(int_to_bool, %49 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %50 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %51 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.store %51, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.br ^bb3 loc(#loc43)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %52 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    %54 = cir.const #cir.int<67> : !s32i loc(#loc51)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc52)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc52)
    cir.libc.memset %58 bytes from %53 set to %54 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc56)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc57)
    %64 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %66 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
    %67 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %68 = cir.call @strlen(%67) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
    cir.store %68, %1 : !u64i, !cir.ptr<!u64i> loc(#loc273)
    cir.br ^bb6 loc(#loc274)
  ^bb6:  // pred: ^bb5
    %69 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc66)
    cir.store %70, %0 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    cir.br ^bb7 loc(#loc274)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %71 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %72 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %73 = cir.cmp(lt, %71, %72) : !u64i, !cir.bool loc(#loc276)
    cir.brcond %73 ^bb8, ^bb12 loc(#loc70)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc277)
  ^bb9:  // pred: ^bb8
    %74 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %75 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %76 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %75 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    %77 = cir.load %76 : !cir.ptr<!s8i>, !s8i loc(#loc72)
    %78 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %79 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc278)
    cir.br ^bb10 loc(#loc65)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc65)
  ^bb11:  // pred: ^bb10
    %81 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %82 = cir.unary(inc, %81) : !u64i, !u64i loc(#loc78)
    cir.store %82, %0 : !u64i, !cir.ptr<!u64i> loc(#loc279)
    cir.br ^bb7 loc(#loc274)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc65)
  ^bb13:  // pred: ^bb12
    %83 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc79)
    %85 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %87 = cir.binop(sub, %85, %86) nsw : !s32i loc(#loc80)
    %88 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
    %89 = cir.ptr_stride(%88 : !cir.ptr<!s8i>, %87 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %84, %89 : !s8i, !cir.ptr<!s8i> loc(#loc280)
    %90 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%90) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb14 loc(#loc49)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc8)
  } loc(#loc256)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc86)
  } loc(#loc281)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc288)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc290)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc104)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc104)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc291)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc106)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc106)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc106)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc106)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc106)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    cir.store %19, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc108)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc109)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc109)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc109)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc113)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc115)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc115)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc293)
    %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %36 = cir.const #cir.int<65> : !s32i loc(#loc119)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc120)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc120)
    cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc124)
    %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc126)
    %47 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc295)
    cir.br ^bb1 loc(#loc296)
  ^bb1:  // pred: ^bb0
    %48 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc284)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %50 = cir.cast(int_to_bool, %49 : !s32i), !cir.bool loc(#loc131)
    cir.brcond %50 ^bb2, ^bb3 loc(#loc297)
  ^bb2:  // pred: ^bb1
    %51 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.br ^bb4 loc(#loc133)
  ^bb3:  // pred: ^bb1
    %53 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    cir.store %53, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc299)
  ^bb6:  // pred: ^bb5
    %54 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    %56 = cir.const #cir.int<67> : !s32i loc(#loc141)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc142)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc142)
    cir.libc.memset %60 bytes from %55 set to %56 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc146)
    %63 = cir.const #cir.int<100> : !s32i loc(#loc147)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc147)
    %66 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc149)
    cir.store %62, %67 : !s8i, !cir.ptr<!s8i> loc(#loc301)
    %68 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc150)
    %69 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %70 = cir.call @strlen(%69) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc150)
    cir.store %70, %1 : !u64i, !cir.ptr<!u64i> loc(#loc302)
    cir.br ^bb7 loc(#loc303)
  ^bb7:  // pred: ^bb6
    %71 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc156)
    cir.store %72, %0 : !u64i, !cir.ptr<!u64i> loc(#loc304)
    cir.br ^bb8 loc(#loc303)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %73 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %74 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc159)
    %75 = cir.cmp(lt, %73, %74) : !u64i, !cir.bool loc(#loc305)
    cir.brcond %75 ^bb9, ^bb13 loc(#loc160)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc306)
  ^bb10:  // pred: ^bb9
    %76 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %77 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc163)
    %78 = cir.ptr_stride(%76 : !cir.ptr<!s8i>, %77 : !u64i), !cir.ptr<!s8i> loc(#loc164)
    %79 = cir.load %78 : !cir.ptr<!s8i>, !s8i loc(#loc162)
    %80 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %81 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !u64i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    cir.br ^bb11 loc(#loc155)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc155)
  ^bb12:  // pred: ^bb11
    %83 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %84 = cir.unary(inc, %83) : !u64i, !u64i loc(#loc168)
    cir.store %84, %0 : !u64i, !cir.ptr<!u64i> loc(#loc308)
    cir.br ^bb8 loc(#loc303)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc155)
  ^bb14:  // pred: ^bb13
    %85 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc169)
    %87 = cir.const #cir.int<100> : !s32i loc(#loc170)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %89 = cir.binop(sub, %87, %88) nsw : !s32i loc(#loc170)
    %90 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc172)
    cir.store %86, %91 : !s8i, !cir.ptr<!s8i> loc(#loc309)
    %92 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%92) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    cir.br ^bb15 loc(#loc139)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc95)
  } loc(#loc285)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc312)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc313)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc315)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc185)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc185)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc185)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc185)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc185)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc316)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc185)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc187)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc187)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc187)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc187)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc187)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc187)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %19, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc188)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc189)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc190)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc190)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc190)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc194)
    %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc196)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc196)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc198)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc318)
    %34 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc199)
    %36 = cir.const #cir.int<65> : !s32i loc(#loc200)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc201)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc201)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc201)
    cir.libc.memset %40 bytes from %35 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc205)
    %43 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc207)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc207)
    %47 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc209)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc320)
    cir.br ^bb1 loc(#loc321)
  ^bb1:  // pred: ^bb0
    %48 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc253)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %50 = cir.cast(int_to_bool, %49 : !s32i), !cir.bool loc(#loc212)
    cir.brcond %50 ^bb2, ^bb3 loc(#loc322)
  ^bb2:  // pred: ^bb1
    %51 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
    cir.store %51, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    cir.br ^bb3 loc(#loc211)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc211)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc324)
  ^bb5:  // pred: ^bb4
    %52 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
    %54 = cir.const #cir.int<67> : !s32i loc(#loc219)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc220)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc220)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc220)
    cir.libc.memset %58 bytes from %53 set to %54 : !cir.ptr<!void>, !s32i, !u64i loc(#loc325)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc224)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc225)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc225)
    %64 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc227)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc227)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc326)
    %66 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc228)
    %67 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc229)
    %68 = cir.call @strlen(%67) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc228)
    cir.store %68, %1 : !u64i, !cir.ptr<!u64i> loc(#loc327)
    cir.br ^bb6 loc(#loc328)
  ^bb6:  // pred: ^bb5
    %69 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc234)
    cir.store %70, %0 : !u64i, !cir.ptr<!u64i> loc(#loc329)
    cir.br ^bb7 loc(#loc328)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %71 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc236)
    %72 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc237)
    %73 = cir.cmp(lt, %71, %72) : !u64i, !cir.bool loc(#loc330)
    cir.brcond %73 ^bb8, ^bb12 loc(#loc238)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc331)
  ^bb9:  // pred: ^bb8
    %74 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
    %75 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc241)
    %76 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %75 : !u64i), !cir.ptr<!s8i> loc(#loc242)
    %77 = cir.load %76 : !cir.ptr<!s8i>, !s8i loc(#loc240)
    %78 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc243)
    %79 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !u64i), !cir.ptr<!s8i> loc(#loc244)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc332)
    cir.br ^bb10 loc(#loc233)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc233)
  ^bb11:  // pred: ^bb10
    %81 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc245)
    %82 = cir.unary(inc, %81) : !u64i, !u64i loc(#loc246)
    cir.store %82, %0 : !u64i, !cir.ptr<!u64i> loc(#loc333)
    cir.br ^bb7 loc(#loc328)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc233)
  ^bb13:  // pred: ^bb12
    %83 = cir.const #cir.int<0> : !s32i loc(#loc247)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc247)
    %85 = cir.const #cir.int<100> : !s32i loc(#loc248)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %87 = cir.binop(sub, %85, %86) nsw : !s32i loc(#loc248)
    %88 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
    %89 = cir.ptr_stride(%88 : !cir.ptr<!s8i>, %87 : !s32i), !cir.ptr<!s8i> loc(#loc250)
    cir.store %84, %89 : !s8i, !cir.ptr<!s8i> loc(#loc334)
    %90 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc251)
    cir.call @printLine(%90) : (!cir.ptr<!s8i>) -> () loc(#loc252)
    cir.br ^bb14 loc(#loc217)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc176)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":23:1)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":52:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":38:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":38:16)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":38:19)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":39:9)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":39:22)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":25:5)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":25:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":26:36)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":27:5)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":27:37)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":28:12)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":28:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":28:32)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":28:35)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":28:5)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":28:36)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":29:27)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":29:5)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":29:19)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":29:22)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":29:23)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":30:12)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":30:28)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":30:33)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":30:37)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":30:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":30:38)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":31:29)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":31:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":31:20)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":31:24)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":31:25)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":32:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":36:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":32:8)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":33:5)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":35:16)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":35:9)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":37:5)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":51:5)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":40:16)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":40:22)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":40:27)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":40:31)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":40:9)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":40:32)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":41:23)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":41:14)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":41:18)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":41:9)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":42:19)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":42:26)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":42:9)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":42:30)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":48:9)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:18)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:14)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:21)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:25)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:23)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":46:9)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":47:23)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":47:28)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":47:29)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":47:18)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":47:13)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:35)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":45:34)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":49:23)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":49:14)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":49:18)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":49:9)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":50:19)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":50:9)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":127:1)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":131:1)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":129:5)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":129:14)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":130:5)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":130:14)
#loc91 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc92 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":71:19)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":59:1)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":93:1)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":79:9)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":79:16)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":79:19)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":80:9)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":80:22)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":61:5)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":61:12)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":62:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":62:36)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":63:5)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":63:37)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":64:12)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":64:27)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":64:32)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":64:35)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":64:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":64:36)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":65:27)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":65:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":65:19)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":65:22)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":65:23)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":66:12)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":66:28)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":66:33)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":66:37)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":66:5)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":66:38)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":67:29)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":67:5)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":67:20)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":67:24)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":67:25)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":68:5)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":77:5)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":68:8)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":69:5)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":72:5)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":74:5)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":71:9)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":76:16)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":76:9)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":78:5)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":92:5)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":81:16)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":81:22)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":81:27)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":81:31)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":81:9)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":81:32)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":82:23)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":82:14)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":82:18)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":82:9)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":83:19)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":83:26)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":83:9)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":83:30)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:9)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":89:9)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:18)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:14)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:21)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:25)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:23)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":87:9)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":88:23)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":88:28)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":88:29)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":88:18)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":88:13)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:35)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":86:34)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":90:23)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":90:14)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":90:18)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":90:9)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":91:19)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":91:9)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":96:1)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":125:1)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":111:9)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":111:16)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":111:19)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":112:9)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":112:22)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":98:5)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":98:12)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":99:5)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":99:36)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":100:5)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":100:37)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":101:12)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":101:27)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":101:32)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":101:35)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":101:5)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":101:36)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":102:27)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":102:5)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":102:19)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":102:22)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":102:23)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":103:12)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":103:28)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":103:33)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":103:37)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":103:5)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":103:38)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":104:29)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":104:5)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":104:20)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":104:24)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":104:25)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":105:5)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":109:5)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":105:8)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":106:5)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":108:16)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":108:9)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":110:5)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":124:5)
#loc218 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":113:16)
#loc219 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":113:22)
#loc220 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":113:27)
#loc221 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":113:31)
#loc222 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":113:9)
#loc223 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":113:32)
#loc224 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":114:23)
#loc225 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":114:14)
#loc226 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":114:18)
#loc227 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":114:9)
#loc228 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":115:19)
#loc229 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":115:26)
#loc230 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":115:9)
#loc231 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":115:30)
#loc232 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:9)
#loc233 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":121:9)
#loc234 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:18)
#loc235 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:14)
#loc236 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:21)
#loc237 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:25)
#loc238 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:23)
#loc239 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":119:9)
#loc240 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":120:23)
#loc241 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":120:28)
#loc242 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":120:29)
#loc243 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":120:18)
#loc244 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":120:13)
#loc245 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:35)
#loc246 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":118:34)
#loc247 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":122:23)
#loc248 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":122:14)
#loc249 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":122:18)
#loc250 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":122:9)
#loc251 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":123:19)
#loc252 = loc("CWE126_Buffer_Overread__char_alloca_loop_10.c":123:9)
#loc253 = loc(fused[#loc1, #loc2])
#loc254 = loc(fused[#loc3, #loc4])
#loc255 = loc(fused[#loc5, #loc6])
#loc256 = loc(fused[#loc7, #loc8])
#loc257 = loc(fused[#loc9, #loc10])
#loc258 = loc(fused[#loc9, #loc11])
#loc259 = loc(fused[#loc12, #loc13])
#loc260 = loc(fused[#loc14, #loc15])
#loc261 = loc(fused[#loc16, #loc17])
#loc262 = loc(fused[#loc18, #loc19])
#loc263 = loc(fused[#loc24, #loc25])
#loc264 = loc(fused[#loc27, #loc26])
#loc265 = loc(fused[#loc35, #loc36])
#loc266 = loc(fused[#loc38, #loc37])
#loc267 = loc(fused[#loc42, #loc43])
#loc268 = loc(fused[#loc45, #loc43])
#loc269 = loc(fused[#loc47, #loc46])
#loc270 = loc(fused[#loc48, #loc49])
#loc271 = loc(fused[#loc54, #loc55])
#loc272 = loc(fused[#loc59, #loc56])
#loc273 = loc(fused[#loc62, #loc63])
#loc274 = loc(fused[#loc64, #loc65])
#loc275 = loc(fused[#loc67, #loc66])
#loc276 = loc(fused[#loc68, #loc69])
#loc277 = loc(fused[#loc71, #loc65])
#loc278 = loc(fused[#loc76, #loc74])
#loc279 = loc(fused[#loc78, #loc77])
#loc280 = loc(fused[#loc82, #loc79])
#loc281 = loc(fused[#loc85, #loc86])
#loc282 = loc(fused[#loc87, #loc88])
#loc283 = loc(fused[#loc89, #loc90])
#loc284 = loc(fused[#loc91, #loc92])
#loc285 = loc(fused[#loc94, #loc95])
#loc286 = loc(fused[#loc96, #loc97])
#loc287 = loc(fused[#loc96, #loc98])
#loc288 = loc(fused[#loc99, #loc100])
#loc289 = loc(fused[#loc101, #loc102])
#loc290 = loc(fused[#loc103, #loc104])
#loc291 = loc(fused[#loc105, #loc106])
#loc292 = loc(fused[#loc111, #loc112])
#loc293 = loc(fused[#loc114, #loc113])
#loc294 = loc(fused[#loc122, #loc123])
#loc295 = loc(fused[#loc125, #loc124])
#loc296 = loc(fused[#loc129, #loc130])
#loc297 = loc(fused[#loc132, #loc133, #loc134, #loc130])
#loc298 = loc(fused[#loc137, #loc136])
#loc299 = loc(fused[#loc138, #loc139])
#loc300 = loc(fused[#loc144, #loc145])
#loc301 = loc(fused[#loc149, #loc146])
#loc302 = loc(fused[#loc152, #loc153])
#loc303 = loc(fused[#loc154, #loc155])
#loc304 = loc(fused[#loc157, #loc156])
#loc305 = loc(fused[#loc158, #loc159])
#loc306 = loc(fused[#loc161, #loc155])
#loc307 = loc(fused[#loc166, #loc164])
#loc308 = loc(fused[#loc168, #loc167])
#loc309 = loc(fused[#loc172, #loc169])
#loc310 = loc(fused[#loc175, #loc176])
#loc311 = loc(fused[#loc177, #loc178])
#loc312 = loc(fused[#loc177, #loc179])
#loc313 = loc(fused[#loc180, #loc181])
#loc314 = loc(fused[#loc182, #loc183])
#loc315 = loc(fused[#loc184, #loc185])
#loc316 = loc(fused[#loc186, #loc187])
#loc317 = loc(fused[#loc192, #loc193])
#loc318 = loc(fused[#loc195, #loc194])
#loc319 = loc(fused[#loc203, #loc204])
#loc320 = loc(fused[#loc206, #loc205])
#loc321 = loc(fused[#loc210, #loc211])
#loc322 = loc(fused[#loc213, #loc211])
#loc323 = loc(fused[#loc215, #loc214])
#loc324 = loc(fused[#loc216, #loc217])
#loc325 = loc(fused[#loc222, #loc223])
#loc326 = loc(fused[#loc227, #loc224])
#loc327 = loc(fused[#loc230, #loc231])
#loc328 = loc(fused[#loc232, #loc233])
#loc329 = loc(fused[#loc235, #loc234])
#loc330 = loc(fused[#loc236, #loc237])
#loc331 = loc(fused[#loc239, #loc233])
#loc332 = loc(fused[#loc244, #loc242])
#loc333 = loc(fused[#loc246, #loc245])
#loc334 = loc(fused[#loc250, #loc247])
