!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":95:10)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":95:14)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":95:20)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":95:32)
#loc124 = loc(fused[#loc44, #loc45])
#loc125 = loc(fused[#loc46, #loc47])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc108)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc110)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.goto "source" loc(#loc114)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc17)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc109)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc18)
    cir.goto "sink" loc(#loc115)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc22)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc116)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc25)
    cir.return loc(#loc9)
  } loc(#loc111)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc117)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc41)
  cir.func @main(%arg0: !s32i loc(fused[#loc44, #loc45]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc50)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc50)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc51)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE369_Divide_by_Zero__int_fscanf_modulo_18_good() : () -> () loc(#loc53)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc40)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE369_Divide_by_Zero__int_fscanf_modulo_18_bad() : () -> () loc(#loc57)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc41)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %17 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc62)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc68)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.goto "source" loc(#loc132)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc72)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc73)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc109)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc75)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc73)
    cir.goto "sink" loc(#loc133)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc78)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc135)
      cir.if %11 {
        %12 = cir.const #cir.int<100> : !s32i loc(#loc86)
        %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
        %14 = cir.binop(rem, %12, %13) : !s32i loc(#loc137)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc88)
      } else {
        %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc62)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc62)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc64)
  } loc(#loc129)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc95)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.goto "source" loc(#loc141)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc99)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc100)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.goto "sink" loc(#loc143)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc104)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc144)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc107)
    cir.return loc(#loc91)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":30:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":22:1)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":35:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":24:5)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":24:9)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":26:13)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":26:12)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":26:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":27:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":27:10)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":28:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":30:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":30:12)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":31:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":31:10)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":32:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":34:18)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":34:24)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":34:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":80:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":84:1)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":82:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":82:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":83:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":83:13)
#loc32 = loc("/usr/include/stdlib.h":575:1)
#loc33 = loc("/usr/include/stdlib.h":575:41)
#loc34 = loc("/usr/include/time.h":76:1)
#loc35 = loc("/usr/include/time.h":76:38)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":100:15)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":102:15)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":105:15)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":107:15)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":95:1)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":110:1)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":96:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":98:27)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":98:22)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":98:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":100:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":101:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":101:54)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":102:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":105:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":106:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":106:53)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":107:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":109:12)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":109:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":60:19)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":42:1)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":62:1)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":44:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":44:9)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":46:13)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":46:12)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":46:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":47:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":47:10)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":48:1)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":50:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":50:12)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":50:19)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":51:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":51:10)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":52:1)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":54:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":61:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":54:9)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":54:17)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":55:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":57:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":59:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":56:22)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":56:28)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":56:9)
#loc89 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":60:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":65:1)
#loc91 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":78:1)
#loc92 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":67:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":67:9)
#loc94 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":69:13)
#loc95 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":69:12)
#loc96 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":69:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":70:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":70:10)
#loc99 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":71:1)
#loc100 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":73:12)
#loc101 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":73:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":74:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":74:10)
#loc104 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":75:1)
#loc105 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":77:18)
#loc106 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":77:24)
#loc107 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_18.c":77:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc6, #loc7])
#loc111 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc14, #loc12])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc20, #loc21])
#loc116 = loc(fused[#loc23, #loc24])
#loc117 = loc(fused[#loc26, #loc27])
#loc118 = loc(fused[#loc28, #loc29])
#loc119 = loc(fused[#loc30, #loc31])
#loc120 = loc(fused[#loc32, #loc33])
#loc121 = loc(fused[#loc34, #loc35])
#loc122 = loc(fused[#loc36, #loc37])
#loc123 = loc(fused[#loc42, #loc43])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc57, #loc58])
#loc128 = loc(fused[#loc61, #loc60])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc69, #loc67])
#loc132 = loc(fused[#loc70, #loc71])
#loc133 = loc(fused[#loc76, #loc77])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc137 = loc(fused[#loc86, #loc87])
#loc138 = loc(fused[#loc90, #loc91])
#loc139 = loc(fused[#loc92, #loc93])
#loc140 = loc(fused[#loc96, #loc94])
#loc141 = loc(fused[#loc97, #loc98])
#loc142 = loc(fused[#loc101, #loc100])
#loc143 = loc(fused[#loc102, #loc103])
#loc144 = loc(fused[#loc105, #loc106])
