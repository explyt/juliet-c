!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printLongLongLine(!s64i) loc(#loc69)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc71)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc72)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc73)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc74)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc76)
      %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc16)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc76)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc18)
      cir.store %7, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc77)
      cir.scope {
        %8 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc79)
        %9 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc79)
        cir.store %9, %8 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc79)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc23)
        %12 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc24)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc24)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc25)
        %16 = cir.const #cir.int<8> : !u64i loc(#loc80)
        %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc81)
        cir.libc.memmove %17 bytes from %13 to %11 : !cir.ptr<!void>, !u64i loc(#loc82)
        %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc32)
        %21 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc30)
        cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc33)
      } loc(#loc78)
    } loc(#loc75)
    cir.return loc(#loc4)
  } loc(#loc70)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc83)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc86)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc87)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc88)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc46)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc89)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc91)
      %5 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc92)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc51)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc91)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
      cir.store %7, %5 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc92)
      cir.scope {
        %8 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc94)
        %9 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc94)
        cir.store %9, %8 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc94)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc58)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc58)
        %12 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc59)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc59)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc60)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc60)
        %16 = cir.const #cir.int<8> : !u64i loc(#loc95)
        %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc96)
        cir.libc.memmove %17 bytes from %13 to %11 : !cir.ptr<!void>, !u64i loc(#loc97)
        %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc65)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc67)
        %21 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc65)
        cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc68)
      } loc(#loc93)
    } loc(#loc90)
    cir.return loc(#loc39)
  } loc(#loc85)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":39:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":23:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":24:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":25:31)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":28:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":38:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":30:30)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":31:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":31:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":32:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":37:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":33:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":33:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:35)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:39)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:53)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":35:54)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":36:31)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":36:36)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":36:37)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":36:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":65:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":68:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":67:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":67:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":46:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":63:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":48:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":48:15)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":49:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":49:29)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":50:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":50:31)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":52:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":52:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":53:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":62:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":54:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":54:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":55:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":55:26)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":56:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":61:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":57:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":57:37)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:21)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:35)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:39)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:53)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":59:54)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":60:31)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":60:36)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":60:37)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memmove_31.c":60:13)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc7, #loc8])
#loc73 = loc(fused[#loc9, #loc10])
#loc74 = loc(fused[#loc12, #loc11])
#loc75 = loc(fused[#loc13, #loc14])
#loc76 = loc(fused[#loc15, #loc16])
#loc77 = loc(fused[#loc17, #loc18])
#loc78 = loc(fused[#loc19, #loc20])
#loc79 = loc(fused[#loc21, #loc22])
#loc80 = loc(fused[#loc26, #loc27])
#loc81 = loc(fused[#loc25, #loc27])
#loc82 = loc(fused[#loc28, #loc29])
#loc83 = loc(fused[#loc34, #loc35])
#loc84 = loc(fused[#loc36, #loc37])
#loc85 = loc(fused[#loc38, #loc39])
#loc86 = loc(fused[#loc40, #loc41])
#loc87 = loc(fused[#loc42, #loc43])
#loc88 = loc(fused[#loc44, #loc45])
#loc89 = loc(fused[#loc47, #loc46])
#loc90 = loc(fused[#loc48, #loc49])
#loc91 = loc(fused[#loc50, #loc51])
#loc92 = loc(fused[#loc52, #loc53])
#loc93 = loc(fused[#loc54, #loc55])
#loc94 = loc(fused[#loc56, #loc57])
#loc95 = loc(fused[#loc61, #loc62])
#loc96 = loc(fused[#loc60, #loc62])
#loc97 = loc(fused[#loc63, #loc64])
