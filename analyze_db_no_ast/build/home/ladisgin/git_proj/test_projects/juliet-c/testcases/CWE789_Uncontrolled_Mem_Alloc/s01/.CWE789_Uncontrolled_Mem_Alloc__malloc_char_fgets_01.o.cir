!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc204)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc205)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc206)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc209)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc210)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc211)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc24)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc216)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc216)
      cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc216)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc32)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc33)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc33)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc33)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc33)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc33)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc33)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc205)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc218)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc37)
        cir.if %20 {
          %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc41)
          %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc42)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc41)
          cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc220)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc47)
        } loc(#loc219)
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc222)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc224)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc225)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc57)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc61)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc227)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc228)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc70)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc232)
            %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc71)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc73)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc74)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc75)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
            } loc(#loc233)
          } loc(#loc231)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc76)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
          %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc79)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc80)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
        } else {
          %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        } loc(#loc226)
      } loc(#loc223)
    } loc(#loc221)
    cir.return loc(#loc21)
  } loc(#loc212)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc84)
  } loc(#loc234)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc93)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc95)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc95)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc240)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc242)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc103)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc244)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !s32i loc(#loc245)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc106)
        cir.if %9 {
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
          %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc247)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc248)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc249)
          cir.store %15, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
          cir.scope {
            %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc252)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc120)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc124)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc253)
          } loc(#loc251)
          %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc125)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc127)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc127)
          %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
          %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc129)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc130)
          %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc130)
        } else {
          %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc132)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc132)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc133)
        } loc(#loc246)
      } loc(#loc243)
    } loc(#loc241)
    cir.return loc(#loc90)
  } loc(#loc237)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc134)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc139)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc258)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc258)
      cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc258)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc147)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc148)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc148)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc148)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc148)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc148)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc148)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc148)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc148)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc205)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc150)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc260)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc152)
        cir.if %20 {
          %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc156)
          %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc157)
          %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc159)
          %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc156)
          cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc262)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc163)
        } loc(#loc261)
      } loc(#loc259)
    } loc(#loc257)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc264)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc170)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc266)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !s32i loc(#loc267)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc173)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc176)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc176)
          %12 = cir.cmp(lt, %9, %11) : !u64i, !s32i loc(#loc268)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc177)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc174)
            cir.yield %15 : !cir.bool loc(#loc174)
          }, false {
            %15 = cir.const #false loc(#loc174)
            cir.yield %15 : !cir.bool loc(#loc174)
          }) : (!cir.bool) -> !cir.bool loc(#loc174)
          cir.yield %14 : !cir.bool loc(#loc174)
        }, false {
          %9 = cir.const #false loc(#loc174)
          cir.yield %9 : !cir.bool loc(#loc174)
        }) : (!cir.bool) -> !cir.bool loc(#loc174)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc181)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc182)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc270)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc271)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc181)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
          cir.store %14, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
          cir.scope {
            %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc275)
            %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc191)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc193)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc194)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc195)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
            } loc(#loc276)
          } loc(#loc274)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc196)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
          %17 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc198)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc198)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc196)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc201)
          %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc202)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc201)
        } else {
          %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc134)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc134)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc203)
        } loc(#loc269)
      } loc(#loc265)
    } loc(#loc263)
    cir.return loc(#loc136)
  } loc(#loc254)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":45:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":58:30)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":64:23)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":67:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":34:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":34:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":35:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":47:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":36:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":36:45)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":46:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:19)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:32)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:49)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:59)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:56)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":39:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":42:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":44:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:20)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:28)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:47)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:48)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":45:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":48:5)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":66:5)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":49:9)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":49:16)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:9)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":65:9)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:20)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:39)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:18)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":54:9)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":61:9)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":63:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:32)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:39)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:44)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:55)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:56)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:45)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:29)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:26)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:35)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:36)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:42)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:41)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":58:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":58:20)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":59:23)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":59:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":60:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":60:18)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":64:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":142:1)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":146:1)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":144:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":144:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":145:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":145:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":74:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":100:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":76:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":76:12)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":78:12)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":78:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":80:12)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":80:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":81:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":99:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":82:9)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":82:16)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":98:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:20)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:39)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:18)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":87:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":94:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":96:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:32)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:39)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:44)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:55)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:56)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:45)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:17)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:29)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:26)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:35)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:36)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:42)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:41)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":91:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":91:20)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":91:30)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":92:23)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":92:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":93:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":93:18)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":97:23)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":97:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":137:23)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":103:1)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":140:1)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":105:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":105:12)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":107:12)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":107:5)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":108:5)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":120:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":109:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":109:45)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":119:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:19)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:32)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:49)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:59)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:56)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":112:9)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":115:9)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":117:9)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:20)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:28)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:41)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:47)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:13)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:48)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":118:23)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":118:13)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":121:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":139:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":122:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":122:16)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":138:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:20)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:39)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:18)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:41)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:44)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:51)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:49)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":127:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":134:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":136:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:32)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:39)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:44)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:55)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:56)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:45)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:29)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:26)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:35)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:36)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:42)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:41)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":131:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":131:20)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":131:30)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":132:23)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":132:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":133:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":133:18)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":137:13)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc5, #loc6])
#loc207 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc10, #loc11])
#loc209 = loc(fused[#loc12, #loc13])
#loc210 = loc(fused[#loc14, #loc15])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc20, #loc21])
#loc213 = loc(fused[#loc22, #loc23])
#loc214 = loc(fused[#loc25, #loc24])
#loc215 = loc(fused[#loc26, #loc27])
#loc216 = loc(fused[#loc28, #loc29])
#loc217 = loc(fused[#loc30, #loc31])
#loc218 = loc(fused[#loc35, #loc36])
#loc219 = loc(fused[#loc38, #loc39, #loc40, #loc31])
#loc220 = loc(fused[#loc45, #loc46])
#loc221 = loc(fused[#loc48, #loc49])
#loc222 = loc(fused[#loc50, #loc51])
#loc223 = loc(fused[#loc52, #loc53])
#loc224 = loc(fused[#loc55, #loc56])
#loc225 = loc(fused[#loc54, #loc56])
#loc226 = loc(fused[#loc58, #loc59, #loc60, #loc53])
#loc227 = loc(fused[#loc63, #loc64])
#loc228 = loc(fused[#loc62, #loc64])
#loc229 = loc(fused[#loc61, #loc65])
#loc230 = loc(fused[#loc66, #loc65])
#loc231 = loc(fused[#loc67, #loc68])
#loc232 = loc(fused[#loc69, #loc70])
#loc233 = loc(fused[#loc72, #loc68])
#loc234 = loc(fused[#loc83, #loc84])
#loc235 = loc(fused[#loc85, #loc86])
#loc236 = loc(fused[#loc87, #loc88])
#loc237 = loc(fused[#loc89, #loc90])
#loc238 = loc(fused[#loc91, #loc92])
#loc239 = loc(fused[#loc94, #loc93])
#loc240 = loc(fused[#loc96, #loc95])
#loc241 = loc(fused[#loc97, #loc98])
#loc242 = loc(fused[#loc99, #loc100])
#loc243 = loc(fused[#loc101, #loc102])
#loc244 = loc(fused[#loc104, #loc105])
#loc245 = loc(fused[#loc103, #loc105])
#loc246 = loc(fused[#loc107, #loc108, #loc109, #loc102])
#loc247 = loc(fused[#loc112, #loc113])
#loc248 = loc(fused[#loc111, #loc113])
#loc249 = loc(fused[#loc110, #loc114])
#loc250 = loc(fused[#loc115, #loc114])
#loc251 = loc(fused[#loc116, #loc117])
#loc252 = loc(fused[#loc118, #loc119])
#loc253 = loc(fused[#loc121, #loc117])
#loc254 = loc(fused[#loc135, #loc136])
#loc255 = loc(fused[#loc137, #loc138])
#loc256 = loc(fused[#loc140, #loc139])
#loc257 = loc(fused[#loc141, #loc142])
#loc258 = loc(fused[#loc143, #loc144])
#loc259 = loc(fused[#loc145, #loc146])
#loc260 = loc(fused[#loc150, #loc151])
#loc261 = loc(fused[#loc153, #loc154, #loc155, #loc146])
#loc262 = loc(fused[#loc160, #loc161])
#loc263 = loc(fused[#loc164, #loc165])
#loc264 = loc(fused[#loc166, #loc167])
#loc265 = loc(fused[#loc168, #loc169])
#loc266 = loc(fused[#loc171, #loc172])
#loc267 = loc(fused[#loc170, #loc172])
#loc268 = loc(fused[#loc175, #loc176])
#loc269 = loc(fused[#loc178, #loc179, #loc180, #loc169])
#loc270 = loc(fused[#loc183, #loc184])
#loc271 = loc(fused[#loc182, #loc184])
#loc272 = loc(fused[#loc181, #loc185])
#loc273 = loc(fused[#loc186, #loc185])
#loc274 = loc(fused[#loc187, #loc188])
#loc275 = loc(fused[#loc189, #loc190])
#loc276 = loc(fused[#loc192, #loc188])
