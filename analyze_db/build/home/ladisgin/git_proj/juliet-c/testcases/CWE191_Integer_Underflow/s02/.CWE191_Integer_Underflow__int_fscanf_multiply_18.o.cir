!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc95)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc97)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc100)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc105)
    cir.brcond %11 ^bb4, ^bb5 loc(#loc106)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc27)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc29)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc98)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc107)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc113)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc45)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc49)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc51)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc49)
    cir.br ^bb2 loc(#loc116)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc118)
    cir.brcond %11 ^bb4, ^bb10 loc(#loc119)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc120)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %13 = cir.const #cir.int<2147483647> : !s32i loc(#loc62)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc62)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc62)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %18 = cir.binop(div, %16, %17) : !s32i loc(#loc121)
    %19 = cir.cmp(gt, %12, %18) : !s32i, !cir.bool loc(#loc122)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc123)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc68)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc70)
    cir.br ^bb8 loc(#loc66)
  ^bb7:  // pred: ^bb5
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc38)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb8 loc(#loc60)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc60)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // 2 preds: ^bb3, ^bb9
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc40)
  } loc(#loc111)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc126)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc83)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc132)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc133)
  ^bb4:  // pred: ^bb3
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc92)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc94)
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc88)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc73)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":30:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":39:1)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":36:9)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":36:29)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":24:5)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":24:9)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":26:12)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":26:5)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":27:5)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":27:10)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":30:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":30:12)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":31:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":31:10)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":33:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":38:5)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":33:8)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":33:15)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":34:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":36:22)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":37:22)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":37:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":92:1)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":96:1)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":94:5)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":94:13)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":95:5)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":95:13)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":67:23)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":46:1)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":70:1)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":62:13)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":62:33)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":48:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":48:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":50:12)
#loc46 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":50:5)
#loc47 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":51:5)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":51:10)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":54:5)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":54:12)
#loc51 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":54:19)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":55:5)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":55:10)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":57:5)
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":69:5)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":57:8)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":57:15)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":58:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":60:9)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":68:9)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":60:13)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":60:21)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":60:29)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":60:30)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":61:9)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":64:9)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":66:9)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":62:26)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":63:26)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":63:13)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":67:13)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":73:1)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":90:1)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":87:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":87:29)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":75:5)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":75:9)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":77:12)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":77:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":78:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":78:10)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":81:13)
#loc83 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":81:12)
#loc84 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":81:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":82:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":82:10)
#loc87 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":84:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":89:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":84:8)
#loc90 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":84:15)
#loc91 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":85:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":87:22)
#loc93 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":88:22)
#loc94 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_18.c":88:9)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc6, #loc7])
#loc98 = loc(fused[#loc8, #loc9])
#loc99 = loc(fused[#loc10, #loc11])
#loc100 = loc(fused[#loc12, #loc13])
#loc101 = loc(fused[#loc15, #loc14])
#loc102 = loc(fused[#loc16, #loc17])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc22, #loc23])
#loc105 = loc(fused[#loc24, #loc25])
#loc106 = loc(fused[#loc26, #loc23])
#loc107 = loc(fused[#loc30, #loc31])
#loc108 = loc(fused[#loc32, #loc33])
#loc109 = loc(fused[#loc34, #loc35])
#loc110 = loc(fused[#loc36, #loc37])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc41, #loc42])
#loc113 = loc(fused[#loc43, #loc44])
#loc114 = loc(fused[#loc46, #loc45])
#loc115 = loc(fused[#loc47, #loc48])
#loc116 = loc(fused[#loc52, #loc53])
#loc117 = loc(fused[#loc54, #loc55])
#loc118 = loc(fused[#loc56, #loc57])
#loc119 = loc(fused[#loc58, #loc55])
#loc120 = loc(fused[#loc59, #loc60])
#loc121 = loc(fused[#loc62, #loc63])
#loc122 = loc(fused[#loc61, #loc64])
#loc123 = loc(fused[#loc65, #loc66, #loc67, #loc60])
#loc124 = loc(fused[#loc72, #loc73])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc76, #loc77])
#loc127 = loc(fused[#loc79, #loc78])
#loc128 = loc(fused[#loc80, #loc81])
#loc129 = loc(fused[#loc84, #loc82])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc87, #loc88])
#loc132 = loc(fused[#loc89, #loc90])
#loc133 = loc(fused[#loc91, #loc88])
