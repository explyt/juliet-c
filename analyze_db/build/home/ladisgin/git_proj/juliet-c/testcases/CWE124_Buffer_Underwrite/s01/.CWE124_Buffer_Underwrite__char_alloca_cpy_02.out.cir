!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":113:10)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":113:14)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":113:20)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":113:32)
#loc191 = loc(fused[#loc65, #loc66])
#loc192 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc13)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc176)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc17)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc19)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    cir.scope {
      %23 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc24)
      cir.if %24 {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
        %26 = cir.const #cir.int<8> : !s32i loc(#loc27)
        %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc27)
        %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc28)
        cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
      } loc(#loc179)
    } loc(#loc178)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc182)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc35)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc36)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc36)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc40)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc41)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc43)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc184)
      %38 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc44)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %41 = cir.call @strcpy(%39, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    } loc(#loc181)
    cir.return loc(#loc6)
  } loc(#loc173)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc185)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc188)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_cpy_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_cpy_02_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_cpy_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_cpy_02_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.return %17 : !s32i loc(#loc195)
  } loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc83)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc89)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc89)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc89)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc91)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc92)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc92)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc199)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc96)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc98)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    cir.scope {
      %23 = cir.const #cir.int<0> : !s32i loc(#loc103)
      %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc103)
      cir.if %24 {
        %25 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc83)
        %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc83)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
        cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
      } loc(#loc202)
    } loc(#loc201)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc205)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc115)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc116)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc117)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc116)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc116)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc206)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc120)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc120)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc121)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc122)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc121)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc123)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc207)
      %38 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc124)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
      %41 = cir.call @strcpy(%39, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    } loc(#loc204)
    cir.return loc(#loc85)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc134)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc134)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc134)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc134)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc134)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc136)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc137)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc137)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc211)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc141)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc143)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc145)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc212)
    cir.scope {
      %23 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc148)
      cir.if %24 {
        %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
        cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
      } loc(#loc214)
    } loc(#loc213)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc217)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc157)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc158)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc158)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc158)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc218)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc162)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc162)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc163)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc164)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc163)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc165)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc219)
      %38 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc166)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
      %41 = cir.call @strcpy(%39, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    } loc(#loc216)
    cir.return loc(#loc130)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":23:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":42:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":25:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":25:12)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":26:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":26:33)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":27:12)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":27:24)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":27:29)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":27:33)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":27:5)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":27:34)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":28:25)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":28:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":28:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":28:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":28:21)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":29:5)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":33:5)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":29:8)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":30:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":32:16)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":32:29)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":32:27)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":32:9)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":34:5)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":41:5)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":35:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":35:24)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":36:16)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":36:24)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":36:29)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":36:33)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":36:9)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":36:34)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":37:25)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":37:16)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":37:20)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":37:9)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":39:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":39:16)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":39:22)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":40:19)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":40:9)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":97:1)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":101:1)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":99:5)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":99:14)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":100:5)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":100:14)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":118:15)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":120:15)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":123:15)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":125:15)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":113:1)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":128:1)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":114:1)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":116:27)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":116:22)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":116:5)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":118:5)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":119:5)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":119:55)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":120:5)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":123:5)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":124:5)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":124:54)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":125:5)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":127:12)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":127:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":58:19)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":49:1)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":73:1)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":51:5)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":51:12)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":52:5)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":52:33)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":53:12)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":53:24)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":53:29)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":53:33)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":53:5)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":53:34)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":54:25)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":54:5)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":54:16)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":54:20)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":54:21)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":55:5)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":64:5)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":55:8)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":56:5)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":59:5)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":61:5)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":58:9)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":63:16)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":63:9)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":65:5)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":72:5)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":66:9)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":66:24)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":67:16)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":67:24)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":67:29)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":67:33)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":67:9)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":67:34)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":68:25)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":68:16)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":68:20)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":68:9)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":70:9)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":70:16)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":70:22)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":71:19)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":71:9)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":76:1)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":95:1)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":78:5)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":78:12)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":79:5)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":79:33)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":80:12)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":80:24)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":80:29)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":80:33)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":80:5)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":80:34)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":81:25)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":81:5)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":81:16)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":81:20)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":81:21)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":82:5)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":86:5)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":82:8)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":83:5)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":85:16)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":85:9)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":87:5)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":94:5)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":88:9)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":88:24)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":89:16)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":89:24)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":89:29)
#loc159 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":89:33)
#loc160 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":89:9)
#loc161 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":89:34)
#loc162 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":90:25)
#loc163 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":90:16)
#loc164 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":90:20)
#loc165 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":90:9)
#loc166 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":92:9)
#loc167 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":92:16)
#loc168 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":92:22)
#loc169 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":93:19)
#loc170 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_02.c":93:9)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc18, #loc17])
#loc178 = loc(fused[#loc22, #loc23])
#loc179 = loc(fused[#loc25, #loc23])
#loc180 = loc(fused[#loc29, #loc27])
#loc181 = loc(fused[#loc30, #loc31])
#loc182 = loc(fused[#loc32, #loc33])
#loc183 = loc(fused[#loc38, #loc39])
#loc184 = loc(fused[#loc43, #loc40])
#loc185 = loc(fused[#loc49, #loc50])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc53, #loc54])
#loc188 = loc(fused[#loc55, #loc56])
#loc189 = loc(fused[#loc57, #loc58])
#loc190 = loc(fused[#loc63, #loc64])
#loc193 = loc(fused[#loc74, #loc75])
#loc194 = loc(fused[#loc78, #loc79])
#loc195 = loc(fused[#loc82, #loc81])
#loc196 = loc(fused[#loc84, #loc85])
#loc197 = loc(fused[#loc86, #loc87])
#loc198 = loc(fused[#loc88, #loc89])
#loc199 = loc(fused[#loc94, #loc95])
#loc200 = loc(fused[#loc97, #loc96])
#loc201 = loc(fused[#loc101, #loc102])
#loc202 = loc(fused[#loc104, #loc105, #loc106, #loc102])
#loc203 = loc(fused[#loc109, #loc108])
#loc204 = loc(fused[#loc110, #loc111])
#loc205 = loc(fused[#loc112, #loc113])
#loc206 = loc(fused[#loc118, #loc119])
#loc207 = loc(fused[#loc123, #loc120])
#loc208 = loc(fused[#loc129, #loc130])
#loc209 = loc(fused[#loc131, #loc132])
#loc210 = loc(fused[#loc133, #loc134])
#loc211 = loc(fused[#loc139, #loc140])
#loc212 = loc(fused[#loc142, #loc141])
#loc213 = loc(fused[#loc146, #loc147])
#loc214 = loc(fused[#loc149, #loc147])
#loc215 = loc(fused[#loc151, #loc150])
#loc216 = loc(fused[#loc152, #loc153])
#loc217 = loc(fused[#loc154, #loc155])
#loc218 = loc(fused[#loc160, #loc161])
#loc219 = loc(fused[#loc165, #loc162])
