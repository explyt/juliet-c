!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":135:10)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":135:14)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":135:20)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":135:32)
#loc267 = loc(fused[#loc87, #loc88])
#loc268 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc239)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc240)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc241)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc12)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc245)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc14)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc14)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc17)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc246)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc21)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc23)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc28)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc32)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc34)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    cir.scope {
      %45 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc239)
      %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc39)
      cir.if %47 {
        %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
      } loc(#loc251)
    } loc(#loc250)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc254)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc48)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc49)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc49)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc53)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc53)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc54)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc54)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc56)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc256)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc257)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc258)
      cir.libc.memmove %68 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc259)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc65)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc65)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc66)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc67)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc66)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc68)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc260)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    } loc(#loc253)
    cir.return loc(#loc8)
  } loc(#loc242)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc261)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_05_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_05_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %17 : !s32i loc(#loc271)
  } loc(#loc266)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc107)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc113)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc113)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc113)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc113)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc113)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc276)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc113)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc115)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc115)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc115)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc115)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc115)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc117)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc118)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc118)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc118)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc277)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc122)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc124)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc124)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc278)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc128)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc129)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc129)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc133)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc135)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc137)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc280)
    cir.scope {
      %45 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc272)
      %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc140)
      cir.if %47 {
        %48 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
        %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
        cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc144)
      } else {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
      } loc(#loc282)
    } loc(#loc281)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc285)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc151)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc152)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc153)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc154)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc153)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc153)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc157)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc157)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc158)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc158)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc160)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc287)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc163)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc163)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc288)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc289)
      cir.libc.memmove %68 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc290)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc169)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc169)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc170)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc171)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc170)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc172)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc291)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    } loc(#loc284)
    cir.return loc(#loc109)
  } loc(#loc273)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc294)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc180)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc180)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc180)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc180)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc180)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc295)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc180)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc182)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc182)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc182)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc182)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc182)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc182)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc184)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc185)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc185)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc185)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc296)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc189)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc191)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc191)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc193)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc297)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc195)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc196)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc196)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc196)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc298)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc200)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc202)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc202)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc204)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc299)
    cir.scope {
      %45 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc239)
      %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc207)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc207)
      cir.if %47 {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc302)
      } loc(#loc301)
    } loc(#loc300)
    cir.scope {
      %45 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc304)
      %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc215)
      %48 = cir.const #cir.int<67> : !s32i loc(#loc216)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc217)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc218)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc217)
      %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc217)
      cir.libc.memset %52 bytes from %47 set to %48 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
      %53 = cir.const #cir.int<0> : !s32i loc(#loc221)
      %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc221)
      %55 = cir.const #cir.int<100> : !s32i loc(#loc222)
      %56 = cir.const #cir.int<1> : !s32i loc(#loc223)
      %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc222)
      %58 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc224)
      %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc224)
      cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc306)
      %60 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
      %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc225)
      %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
      %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc226)
      %64 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc227)
      %65 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
      %66 = cir.call @strlen(%65) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc227)
      %67 = cir.const #cir.int<1> : !u64i loc(#loc307)
      %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc308)
      cir.libc.memmove %68 bytes from %63 to %61 : !cir.ptr<!void>, !u64i loc(#loc309)
      %69 = cir.const #cir.int<0> : !s32i loc(#loc233)
      %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc233)
      %71 = cir.const #cir.int<100> : !s32i loc(#loc234)
      %72 = cir.const #cir.int<1> : !s32i loc(#loc235)
      %73 = cir.binop(sub, %71, %72) nsw : !s32i loc(#loc234)
      %74 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc236)
      %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc236)
      cir.store %70, %75 : !s8i, !cir.ptr<!s8i> loc(#loc310)
      %76 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc237)
      cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc238)
    } loc(#loc303)
    cir.return loc(#loc176)
  } loc(#loc292)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_05.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":25:1)
#loc2 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":25:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":30:1)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":54:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":32:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":32:12)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":33:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":33:36)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":34:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":34:37)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":35:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":35:27)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":35:32)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":35:35)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":35:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":35:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":36:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":36:5)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":36:19)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":36:22)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":36:23)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":37:12)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":37:28)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":37:33)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":37:37)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":37:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":37:38)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":38:29)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":38:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":38:20)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":38:24)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":38:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":39:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":43:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":39:8)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":40:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":42:16)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":42:9)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":44:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":53:5)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":45:9)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":45:22)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":46:16)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":46:22)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":46:27)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":46:31)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":46:9)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":46:32)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":47:23)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":47:14)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":47:18)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":47:9)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:17)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:23)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:29)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:36)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:42)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:53)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:9)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":50:54)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":51:23)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":51:14)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":51:18)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":51:9)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":52:19)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":52:9)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":119:1)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":123:1)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":121:5)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":121:14)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":122:5)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":122:14)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":140:15)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":142:15)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":145:15)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":147:15)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":135:1)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":150:1)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":136:1)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":138:27)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":138:22)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":138:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":140:5)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":141:5)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":141:57)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":142:5)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":145:5)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":146:5)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":146:56)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":147:5)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":149:12)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":149:5)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":26:1)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":26:26)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":73:19)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":61:1)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":90:1)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":63:5)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":63:12)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":64:5)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":64:36)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":65:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":65:37)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":66:12)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":66:27)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":66:32)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":66:35)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":66:5)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":66:36)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":67:27)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":67:5)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":67:19)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":67:22)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":67:23)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":68:12)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":68:28)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":68:33)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":68:37)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":68:5)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":68:38)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":69:29)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":69:5)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":69:20)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":69:24)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":69:25)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":70:5)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":79:5)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":70:8)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":71:5)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":74:5)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":76:5)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":73:9)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":78:16)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":78:9)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":80:5)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":89:5)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":81:9)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":81:22)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":82:16)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":82:22)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":82:27)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":82:31)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":82:9)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":82:32)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":83:23)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":83:14)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":83:18)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":83:9)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:17)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:23)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:29)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:36)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:42)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:53)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:9)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":86:54)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":87:23)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":87:14)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":87:18)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":87:9)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":88:19)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":88:9)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":93:1)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":117:1)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":95:5)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":95:12)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":96:5)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":96:36)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":97:5)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":97:37)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":98:12)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":98:27)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":98:32)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":98:35)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":98:5)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":98:36)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":99:27)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":99:5)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":99:19)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":99:22)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":99:23)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":100:12)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":100:28)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":100:33)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":100:37)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":100:5)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":100:38)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":101:29)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":101:5)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":101:20)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":101:24)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":101:25)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":102:5)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":106:5)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":102:8)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":103:5)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":105:16)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":105:9)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":107:5)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":116:5)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":108:9)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":108:22)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":109:16)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":109:22)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":109:27)
#loc218 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":109:31)
#loc219 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":109:9)
#loc220 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":109:32)
#loc221 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":110:23)
#loc222 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":110:14)
#loc223 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":110:18)
#loc224 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":110:9)
#loc225 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:17)
#loc226 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:23)
#loc227 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:29)
#loc228 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:36)
#loc229 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:42)
#loc230 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:53)
#loc231 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:9)
#loc232 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":113:54)
#loc233 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":114:23)
#loc234 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":114:14)
#loc235 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":114:18)
#loc236 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":114:9)
#loc237 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":115:19)
#loc238 = loc("CWE126_Buffer_Overread__char_alloca_memmove_05.c":115:9)
#loc239 = loc(fused[#loc1, #loc2])
#loc240 = loc(fused[#loc3, #loc4])
#loc241 = loc(fused[#loc5, #loc6])
#loc242 = loc(fused[#loc7, #loc8])
#loc243 = loc(fused[#loc9, #loc10])
#loc244 = loc(fused[#loc11, #loc12])
#loc245 = loc(fused[#loc13, #loc14])
#loc246 = loc(fused[#loc19, #loc20])
#loc247 = loc(fused[#loc22, #loc21])
#loc248 = loc(fused[#loc30, #loc31])
#loc249 = loc(fused[#loc33, #loc32])
#loc250 = loc(fused[#loc37, #loc38])
#loc251 = loc(fused[#loc40, #loc38])
#loc252 = loc(fused[#loc42, #loc41])
#loc253 = loc(fused[#loc43, #loc44])
#loc254 = loc(fused[#loc45, #loc46])
#loc255 = loc(fused[#loc51, #loc52])
#loc256 = loc(fused[#loc56, #loc53])
#loc257 = loc(fused[#loc61, #loc62])
#loc258 = loc(fused[#loc59, #loc62])
#loc259 = loc(fused[#loc63, #loc64])
#loc260 = loc(fused[#loc68, #loc65])
#loc261 = loc(fused[#loc71, #loc72])
#loc262 = loc(fused[#loc73, #loc74])
#loc263 = loc(fused[#loc75, #loc76])
#loc264 = loc(fused[#loc77, #loc78])
#loc265 = loc(fused[#loc79, #loc80])
#loc266 = loc(fused[#loc85, #loc86])
#loc269 = loc(fused[#loc96, #loc97])
#loc270 = loc(fused[#loc100, #loc101])
#loc271 = loc(fused[#loc104, #loc103])
#loc272 = loc(fused[#loc105, #loc106])
#loc273 = loc(fused[#loc108, #loc109])
#loc274 = loc(fused[#loc110, #loc111])
#loc275 = loc(fused[#loc112, #loc113])
#loc276 = loc(fused[#loc114, #loc115])
#loc277 = loc(fused[#loc120, #loc121])
#loc278 = loc(fused[#loc123, #loc122])
#loc279 = loc(fused[#loc131, #loc132])
#loc280 = loc(fused[#loc134, #loc133])
#loc281 = loc(fused[#loc138, #loc139])
#loc282 = loc(fused[#loc141, #loc142, #loc143, #loc139])
#loc283 = loc(fused[#loc146, #loc145])
#loc284 = loc(fused[#loc147, #loc148])
#loc285 = loc(fused[#loc149, #loc150])
#loc286 = loc(fused[#loc155, #loc156])
#loc287 = loc(fused[#loc160, #loc157])
#loc288 = loc(fused[#loc165, #loc166])
#loc289 = loc(fused[#loc163, #loc166])
#loc290 = loc(fused[#loc167, #loc168])
#loc291 = loc(fused[#loc172, #loc169])
#loc292 = loc(fused[#loc175, #loc176])
#loc293 = loc(fused[#loc177, #loc178])
#loc294 = loc(fused[#loc179, #loc180])
#loc295 = loc(fused[#loc181, #loc182])
#loc296 = loc(fused[#loc187, #loc188])
#loc297 = loc(fused[#loc190, #loc189])
#loc298 = loc(fused[#loc198, #loc199])
#loc299 = loc(fused[#loc201, #loc200])
#loc300 = loc(fused[#loc205, #loc206])
#loc301 = loc(fused[#loc208, #loc206])
#loc302 = loc(fused[#loc210, #loc209])
#loc303 = loc(fused[#loc211, #loc212])
#loc304 = loc(fused[#loc213, #loc214])
#loc305 = loc(fused[#loc219, #loc220])
#loc306 = loc(fused[#loc224, #loc221])
#loc307 = loc(fused[#loc229, #loc230])
#loc308 = loc(fused[#loc227, #loc230])
#loc309 = loc(fused[#loc231, #loc232])
#loc310 = loc(fused[#loc236, #loc233])
