!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc74)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc75)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc77)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc10)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc80)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc81)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc82)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc80)
    cir.store %4, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc80)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    cir.goto "source" loc(#loc84)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc26)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc27)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc27)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc81)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @getenv(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc29)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    cir.scope {
      %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
      %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc86)
      %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc34)
      cir.if %25 {
        %26 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc36)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc38)
        %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc39)
        %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc41)
        %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc41)
        %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc42)
        %34 = cir.binop(sub, %32, %33) : !u64i loc(#loc88)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc43)
        %37 = cir.binop(sub, %34, %36) : !u64i loc(#loc89)
        %38 = cir.call @strncat(%29, %30, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
      } loc(#loc87)
    } loc(#loc85)
    %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc10)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc10)
    %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %16 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc11)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc11)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %20 = cir.call @execlp(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc13)
  } loc(#loc78)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc90)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc95)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc95)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc95)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
    cir.goto "source" loc(#loc97)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc65)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc66)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc54)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc54)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc66)
    %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc68)
    %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc69)
    %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc70)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc70)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
    %17 = cir.call @execlp(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc73)
    cir.return loc(#loc56)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_18.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdlib.h":773:1)
#loc4 = loc("/usr/include/stdlib.h":773:50)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:37)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("/usr/include/unistd.h":605:1)
#loc9 = loc("/usr/include/unistd.h":606:14)
#loc10 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:12)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:38)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":53:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":75:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":55:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":55:12)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":56:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":56:28)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:37)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:49)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":57:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":57:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":58:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":58:10)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":59:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:26)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:33)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:30)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":69:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:28)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:25)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":66:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:21)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:26)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:25)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:35)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:48)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:52)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:60)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:25)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:52)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:66)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":97:1)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":100:1)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":99:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":99:13)
#loc52 = loc("/usr/include/string.h":149:1)
#loc53 = loc("/usr/include/string.h":150:14)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":90:18)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":82:1)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":95:1)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":84:5)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":84:12)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":85:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":85:28)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":86:12)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":86:5)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":87:5)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":87:10)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":88:1)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":90:5)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":90:12)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:12)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:38)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:52)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:66)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:5)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc6, #loc7])
#loc77 = loc(fused[#loc8, #loc9])
#loc78 = loc(fused[#loc12, #loc13])
#loc79 = loc(fused[#loc14, #loc15])
#loc80 = loc(fused[#loc16, #loc17])
#loc81 = loc(fused[#loc18, #loc19])
#loc82 = loc(fused[#loc20, #loc21])
#loc83 = loc(fused[#loc23, #loc22])
#loc84 = loc(fused[#loc24, #loc25])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc35, #loc31])
#loc88 = loc(fused[#loc41, #loc42])
#loc89 = loc(fused[#loc41, #loc43])
#loc90 = loc(fused[#loc48, #loc49])
#loc91 = loc(fused[#loc50, #loc51])
#loc92 = loc(fused[#loc52, #loc53])
#loc93 = loc(fused[#loc55, #loc56])
#loc94 = loc(fused[#loc57, #loc58])
#loc95 = loc(fused[#loc59, #loc60])
#loc96 = loc(fused[#loc62, #loc61])
#loc97 = loc(fused[#loc63, #loc64])
