!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc39 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:7)
#loc40 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:12)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":100:10)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":100:14)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":100:20)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":100:32)
#loc120 = loc(fused[#loc39, #loc40])
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_629badSourceERj(!cir.ptr<!u32i>) loc(#loc103)
  cir.func private @printUnsignedLine(!u32i) loc(#loc104)
  cir.func @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc9)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc107)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_629badSourceERj(%0) : (!cir.ptr<!u32i>) -> () loc(#loc11)
    cir.scope {
      %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc109)
      %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc16)
      %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc15)
      %6 = cir.binop(mul, %4, %5) : !u32i loc(#loc110)
      cir.store %6, %3 : !u32i, !cir.ptr<!u32i> loc(#loc109)
      %7 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc17)
      cir.call @printUnsignedLine(%7) : (!u32i) -> () loc(#loc18)
    } loc(#loc108)
    cir.return loc(#loc6)
  } loc(#loc105)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_6213goodG2BSourceERj(!cir.ptr<!u32i>) loc(#loc111)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc113)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc25)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc114)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_6213goodG2BSourceERj(%0) : (!cir.ptr<!u32i>) -> () loc(#loc27)
    cir.scope {
      %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc116)
      %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc32)
      %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc31)
      %6 = cir.binop(mul, %4, %5) : !u32i loc(#loc117)
      cir.store %6, %3 : !u32i, !cir.ptr<!u32i> loc(#loc116)
      %7 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc33)
      cir.call @printUnsignedLine(%7) : (!u32i) -> () loc(#loc34)
    } loc(#loc115)
    cir.return loc(#loc22)
  } loc(#loc112)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_6213goodB2GSourceERj(!cir.ptr<!u32i>) loc(#loc118)
  cir.func linkonce_odr @_ZSt3absl(%arg0: !s64i loc(fused[#loc39, #loc40])) -> !s64i extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["__i", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["__retval"] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc41)
    %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc42)
    %3 = cir.abs %2 poison : !s64i loc(#loc43)
    cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc121)
    %4 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc121)
    cir.return %4 : !s64i loc(#loc121)
  } loc(#loc119)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc47)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_62L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc52)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc124)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_6213goodB2GSourceERj(%0) : (!cir.ptr<!u32i>) -> () loc(#loc54)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc57)
      %4 = cir.cast(integral, %3 : !u32i), !s64i loc(#loc57)
      %5 = cir.call @_ZSt3absl(%4) : (!s64i) -> !s64i loc(#loc58)
      %6 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc59)
      %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc60)
      %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc60)
      %9 = cir.const #cir.int<2> : !u32i loc(#loc60)
      %10 = cir.binop(mul, %8, %9) : !u32i loc(#loc60)
      %11 = cir.const #cir.int<1> : !u32i loc(#loc60)
      %12 = cir.binop(add, %10, %11) : !u32i loc(#loc60)
      %13 = cir.cast(int_to_float, %12 : !u32i), !cir.double loc(#loc60)
      %14 = cir.call @sqrt(%13) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc59)
      %15 = cir.cast(float_to_int, %14 : !cir.double), !s64i loc(#loc59)
      %16 = cir.cmp(lt, %5, %15) : !s64i, !cir.bool loc(#loc126)
      cir.if %16 {
        %17 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc128)
        %18 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc67)
        %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc66)
        %20 = cir.binop(mul, %18, %19) : !u32i loc(#loc129)
        cir.store %20, %17 : !u32i, !cir.ptr<!u32i> loc(#loc128)
        %21 = cir.load %17 : !cir.ptr<!u32i>, !u32i loc(#loc68)
        cir.call @printUnsignedLine(%21) : (!u32i) -> () loc(#loc69)
      } else {
        %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc47)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc49)
  } loc(#loc122)
  cir.func @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_624goodEv() extra(#fn_attr) {
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_62L7goodG2BEv() : () -> () loc(#loc73)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_62L7goodB2GEv() : () -> () loc(#loc74)
    cir.return loc(#loc72)
  } loc(#loc130)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc131)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_624goodEv() : () -> () loc(#loc96)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_fscanf_square_623badEv() : () -> () loc(#loc99)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %15 : !s32i loc(#loc137)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":28:1)
#loc2 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":28:34)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":30:1)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":40:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":32:5)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":32:18)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":33:12)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":33:5)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":34:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":35:5)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":39:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":37:9)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":37:38)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":37:31)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":38:27)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":38:9)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":47:1)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":47:38)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":49:1)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":59:1)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":51:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":51:18)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":52:12)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":52:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":53:5)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":54:5)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":58:5)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":56:9)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":56:38)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":56:31)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":57:27)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":57:9)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":62:1)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":62:38)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":55:3)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:47)
#loc41 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:17)
#loc42 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:41)
#loc43 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:26)
#loc44 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:19)
#loc45 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:44)
#loc46 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":77:19)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":64:1)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":79:1)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":66:5)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":66:18)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":67:12)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":67:5)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":68:5)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":70:5)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":78:5)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":70:19)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":70:9)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":70:33)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":70:46)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":70:54)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":71:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":74:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":76:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":72:9)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":72:38)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":72:31)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":73:27)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":73:9)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":77:9)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":81:1)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":85:1)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":83:5)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":84:5)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc80 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":105:15)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":107:15)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":110:15)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":112:15)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":100:1)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":115:1)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":101:1)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":103:27)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":103:22)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":103:5)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":105:5)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":106:5)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":107:5)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":110:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":111:5)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":112:5)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":114:12)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_square_62a.cpp":114:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc10, #loc9])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc16, #loc15])
#loc111 = loc(fused[#loc19, #loc20])
#loc112 = loc(fused[#loc21, #loc22])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc26, #loc25])
#loc115 = loc(fused[#loc28, #loc29])
#loc116 = loc(fused[#loc30, #loc31])
#loc117 = loc(fused[#loc32, #loc31])
#loc118 = loc(fused[#loc35, #loc36])
#loc119 = loc(fused[#loc37, #loc38])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc48, #loc49])
#loc123 = loc(fused[#loc50, #loc51])
#loc124 = loc(fused[#loc53, #loc52])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc58, #loc61])
#loc127 = loc(fused[#loc62, #loc63, #loc64, #loc56])
#loc128 = loc(fused[#loc65, #loc66])
#loc129 = loc(fused[#loc67, #loc66])
#loc130 = loc(fused[#loc71, #loc72])
#loc131 = loc(fused[#loc75, #loc76])
#loc132 = loc(fused[#loc77, #loc78])
#loc133 = loc(fused[#loc79, #loc80])
#loc134 = loc(fused[#loc85, #loc86])
#loc137 = loc(fused[#loc102, #loc101])
