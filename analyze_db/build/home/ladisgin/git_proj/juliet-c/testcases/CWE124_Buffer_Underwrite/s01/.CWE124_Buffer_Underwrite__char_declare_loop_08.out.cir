!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc83 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":145:10)
#loc84 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":145:14)
#loc85 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":145:20)
#loc86 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":145:32)
#loc265 = loc(fused[#loc83, #loc84])
#loc266 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_declare_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc237)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_declare_loop_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc240)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc9)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc9)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc11)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc11)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc241)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc15)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc16)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc242)
    cir.scope {
      %16 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc244)
      %17 = cir.call %16() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc21)
      cir.if %18 {
        %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
        %20 = cir.const #cir.int<8> : !s32i loc(#loc25)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc25)
        %22 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc26)
        cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
      } loc(#loc245)
    } loc(#loc243)
    cir.scope {
      %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc248)
      %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc249)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
      %20 = cir.const #cir.int<67> : !s32i loc(#loc35)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc36)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc36)
      cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc250)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc40)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc41)
      %30 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc43)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc251)
      cir.scope {
        %40 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc46)
        cir.store %41, %16 : !u64i, !cir.ptr<!u64i> loc(#loc253)
        cir.for : cond {
          %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %43 = cir.const #cir.int<100> : !s32i loc(#loc49)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc49)
          %45 = cir.cmp(lt, %42, %44) : !u64i, !cir.bool loc(#loc254)
          cir.condition(%45) loc(#loc50)
        } body {
          cir.scope {
            %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc52)
            %43 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
            %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc53)
            %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc53)
            %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %47 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc55)
            %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc56)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc256)
          } loc(#loc255)
          cir.yield loc(#loc45)
        } step {
          %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc58)
          %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc59)
          cir.store %43, %16 : !u64i, !cir.ptr<!u64i> loc(#loc257)
          cir.yield loc(#loc252)
        } loc(#loc252)
      } loc(#loc252)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc60)
      %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc62)
      %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc64)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc258)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    } loc(#loc247)
    cir.return loc(#loc4)
  } loc(#loc238)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_declare_loop_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc259)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc262)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc90)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_declare_loop_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call @CWE124_Buffer_Underwrite__char_declare_loop_08_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_declare_loop_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE124_Buffer_Underwrite__char_declare_loop_08_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    cir.return %17 : !s32i loc(#loc269)
  } loc(#loc264)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %2 : !s32i loc(#loc271)
  } loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc274)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc113)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc114)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc114)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc275)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc118)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc119)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc276)
    cir.scope {
      %16 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc278)
      %17 = cir.call %16() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc124)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc124)
      cir.if %18 {
        %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
        cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
      } loc(#loc279)
    } loc(#loc277)
    cir.scope {
      %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc282)
      %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc283)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      %20 = cir.const #cir.int<67> : !s32i loc(#loc139)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc140)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc140)
      cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc144)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc144)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc145)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc146)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc145)
      %30 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc147)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc285)
      cir.scope {
        %40 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc150)
        cir.store %41, %16 : !u64i, !cir.ptr<!u64i> loc(#loc287)
        cir.for : cond {
          %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc152)
          %43 = cir.const #cir.int<100> : !s32i loc(#loc153)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc153)
          %45 = cir.cmp(lt, %42, %44) : !u64i, !cir.bool loc(#loc288)
          cir.condition(%45) loc(#loc154)
        } body {
          cir.scope {
            %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %43 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
            %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc157)
            %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc157)
            %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %47 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc159)
            %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc160)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc290)
          } loc(#loc289)
          cir.yield loc(#loc149)
        } step {
          %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc162)
          %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc163)
          cir.store %43, %16 : !u64i, !cir.ptr<!u64i> loc(#loc291)
          cir.yield loc(#loc286)
        } loc(#loc286)
      } loc(#loc286)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc164)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc164)
      %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc166)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc167)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc166)
      %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc168)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc292)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
      cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    } loc(#loc281)
    cir.return loc(#loc107)
  } loc(#loc272)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc173)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    cir.return %2 : !s32i loc(#loc294)
  } loc(#loc293)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc297)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc181)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc182)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc183)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc183)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc183)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc298)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc187)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc188)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc188)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc190)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc299)
    cir.scope {
      %16 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc301)
      %17 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc193)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc193)
      cir.if %18 {
        %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
        cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
      } loc(#loc302)
    } loc(#loc300)
    cir.scope {
      %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc305)
      %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc306)
      %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc204)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
      %20 = cir.const #cir.int<67> : !s32i loc(#loc205)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc206)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc207)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc206)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc206)
      cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc307)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc210)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc210)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc211)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc212)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc211)
      %30 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
      %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc213)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc308)
      cir.scope {
        %40 = cir.const #cir.int<0> : !s32i loc(#loc216)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc216)
        cir.store %41, %16 : !u64i, !cir.ptr<!u64i> loc(#loc310)
        cir.for : cond {
          %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc218)
          %43 = cir.const #cir.int<100> : !s32i loc(#loc219)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc219)
          %45 = cir.cmp(lt, %42, %44) : !u64i, !cir.bool loc(#loc311)
          cir.condition(%45) loc(#loc220)
        } body {
          cir.scope {
            %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc222)
            %43 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc223)
            %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc223)
            %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc223)
            %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
            %47 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc225)
            %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc226)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc313)
          } loc(#loc312)
          cir.yield loc(#loc215)
        } step {
          %42 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc228)
          %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc229)
          cir.store %43, %16 : !u64i, !cir.ptr<!u64i> loc(#loc314)
          cir.yield loc(#loc309)
        } loc(#loc309)
      } loc(#loc309)
      %32 = cir.const #cir.int<0> : !s32i loc(#loc230)
      %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc230)
      %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc232)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc233)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc232)
      %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc234)
      cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc315)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
      cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc236)
    } loc(#loc304)
    cir.return loc(#loc176)
  } loc(#loc295)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_declare_loop_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":37:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":62:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":39:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":39:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":40:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":40:24)
#loc9 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":41:12)
#loc10 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":41:24)
#loc11 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":41:29)
#loc12 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":41:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":41:5)
#loc14 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":41:34)
#loc15 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":42:25)
#loc16 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":42:16)
#loc17 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":42:20)
#loc18 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":42:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":43:5)
#loc20 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":47:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":43:8)
#loc22 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":43:26)
#loc23 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":44:5)
#loc24 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":46:16)
#loc25 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":46:29)
#loc26 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":46:27)
#loc27 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":46:9)
#loc28 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":48:5)
#loc29 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":61:5)
#loc30 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":49:9)
#loc31 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":49:16)
#loc32 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":50:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":50:24)
#loc34 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":51:16)
#loc35 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":51:24)
#loc36 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":51:29)
#loc37 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":51:33)
#loc38 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":51:9)
#loc39 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":51:34)
#loc40 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":52:25)
#loc41 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":52:16)
#loc42 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":52:20)
#loc43 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":52:9)
#loc44 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":57:9)
#loc46 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:18)
#loc47 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:14)
#loc48 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:21)
#loc49 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:25)
#loc50 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:23)
#loc51 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":55:9)
#loc52 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":56:30)
#loc53 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":56:23)
#loc54 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":56:13)
#loc55 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":56:18)
#loc56 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":56:19)
#loc57 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":56:31)
#loc58 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:31)
#loc59 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":54:30)
#loc60 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":59:23)
#loc61 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":59:9)
#loc62 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":59:14)
#loc63 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":59:18)
#loc64 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":59:19)
#loc65 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":60:19)
#loc66 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":60:9)
#loc67 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":129:1)
#loc68 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":133:1)
#loc69 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":131:5)
#loc70 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":131:14)
#loc71 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":132:5)
#loc72 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":132:14)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":150:15)
#loc78 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":152:15)
#loc79 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":155:15)
#loc80 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":157:15)
#loc81 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":145:1)
#loc82 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":160:1)
#loc87 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":146:1)
#loc88 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":148:27)
#loc89 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":148:22)
#loc90 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":148:5)
#loc91 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":150:5)
#loc92 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":151:5)
#loc93 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":151:57)
#loc94 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":152:5)
#loc95 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":155:5)
#loc96 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":156:5)
#loc97 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":156:56)
#loc98 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":157:5)
#loc99 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":159:12)
#loc100 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":159:5)
#loc101 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":25:1)
#loc102 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":28:1)
#loc103 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":27:12)
#loc104 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":27:5)
#loc105 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":78:19)
#loc106 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":69:1)
#loc107 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":99:1)
#loc108 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":71:5)
#loc109 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":71:12)
#loc110 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":72:5)
#loc111 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":72:24)
#loc112 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":73:12)
#loc113 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":73:24)
#loc114 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":73:29)
#loc115 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":73:33)
#loc116 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":73:5)
#loc117 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":73:34)
#loc118 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":74:25)
#loc119 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":74:16)
#loc120 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":74:20)
#loc121 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":74:5)
#loc122 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":75:5)
#loc123 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":84:5)
#loc124 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":75:8)
#loc125 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":75:27)
#loc126 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":76:5)
#loc127 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":79:5)
#loc128 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":81:5)
#loc129 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":78:9)
#loc130 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":83:16)
#loc131 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":83:9)
#loc132 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":85:5)
#loc133 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":98:5)
#loc134 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":86:9)
#loc135 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":86:16)
#loc136 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":87:9)
#loc137 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":87:24)
#loc138 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":88:16)
#loc139 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":88:24)
#loc140 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":88:29)
#loc141 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":88:33)
#loc142 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":88:9)
#loc143 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":88:34)
#loc144 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":89:25)
#loc145 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":89:16)
#loc146 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":89:20)
#loc147 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":89:9)
#loc148 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:9)
#loc149 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":94:9)
#loc150 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:18)
#loc151 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:14)
#loc152 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:21)
#loc153 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:25)
#loc154 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:23)
#loc155 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":92:9)
#loc156 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":93:30)
#loc157 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":93:23)
#loc158 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":93:13)
#loc159 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":93:18)
#loc160 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":93:19)
#loc161 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":93:31)
#loc162 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:31)
#loc163 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":91:30)
#loc164 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":96:23)
#loc165 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":96:9)
#loc166 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":96:14)
#loc167 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":96:18)
#loc168 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":96:19)
#loc169 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":97:19)
#loc170 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":97:9)
#loc171 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":30:1)
#loc172 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":33:1)
#loc173 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":32:12)
#loc174 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":32:5)
#loc175 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":102:1)
#loc176 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":127:1)
#loc177 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":104:5)
#loc178 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":104:12)
#loc179 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":105:5)
#loc180 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":105:24)
#loc181 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":106:12)
#loc182 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":106:24)
#loc183 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":106:29)
#loc184 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":106:33)
#loc185 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":106:5)
#loc186 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":106:34)
#loc187 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":107:25)
#loc188 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":107:16)
#loc189 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":107:20)
#loc190 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":107:5)
#loc191 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":108:5)
#loc192 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":112:5)
#loc193 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":108:8)
#loc194 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":108:26)
#loc195 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":109:5)
#loc196 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":111:16)
#loc197 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":111:9)
#loc198 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":113:5)
#loc199 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":126:5)
#loc200 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":114:9)
#loc201 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":114:16)
#loc202 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":115:9)
#loc203 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":115:24)
#loc204 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":116:16)
#loc205 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":116:24)
#loc206 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":116:29)
#loc207 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":116:33)
#loc208 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":116:9)
#loc209 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":116:34)
#loc210 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":117:25)
#loc211 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":117:16)
#loc212 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":117:20)
#loc213 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":117:9)
#loc214 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:9)
#loc215 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":122:9)
#loc216 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:18)
#loc217 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:14)
#loc218 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:21)
#loc219 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:25)
#loc220 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:23)
#loc221 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":120:9)
#loc222 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":121:30)
#loc223 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":121:23)
#loc224 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":121:13)
#loc225 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":121:18)
#loc226 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":121:19)
#loc227 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":121:31)
#loc228 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:31)
#loc229 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":119:30)
#loc230 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":124:23)
#loc231 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":124:9)
#loc232 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":124:14)
#loc233 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":124:18)
#loc234 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":124:19)
#loc235 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":125:19)
#loc236 = loc("CWE124_Buffer_Underwrite__char_declare_loop_08.c":125:9)
#loc237 = loc(fused[#loc1, #loc2])
#loc238 = loc(fused[#loc3, #loc4])
#loc239 = loc(fused[#loc5, #loc6])
#loc240 = loc(fused[#loc7, #loc8])
#loc241 = loc(fused[#loc13, #loc14])
#loc242 = loc(fused[#loc18, #loc15])
#loc243 = loc(fused[#loc19, #loc20])
#loc244 = loc(fused[#loc21, #loc22])
#loc245 = loc(fused[#loc23, #loc20])
#loc246 = loc(fused[#loc27, #loc25])
#loc247 = loc(fused[#loc28, #loc29])
#loc248 = loc(fused[#loc30, #loc31])
#loc249 = loc(fused[#loc32, #loc33])
#loc250 = loc(fused[#loc38, #loc39])
#loc251 = loc(fused[#loc43, #loc40])
#loc252 = loc(fused[#loc44, #loc45])
#loc253 = loc(fused[#loc47, #loc46])
#loc254 = loc(fused[#loc48, #loc49])
#loc255 = loc(fused[#loc51, #loc45])
#loc256 = loc(fused[#loc54, #loc57])
#loc257 = loc(fused[#loc59, #loc58])
#loc258 = loc(fused[#loc61, #loc60])
#loc259 = loc(fused[#loc67, #loc68])
#loc260 = loc(fused[#loc69, #loc70])
#loc261 = loc(fused[#loc71, #loc72])
#loc262 = loc(fused[#loc73, #loc74])
#loc263 = loc(fused[#loc75, #loc76])
#loc264 = loc(fused[#loc81, #loc82])
#loc267 = loc(fused[#loc92, #loc93])
#loc268 = loc(fused[#loc96, #loc97])
#loc269 = loc(fused[#loc100, #loc99])
#loc270 = loc(fused[#loc101, #loc102])
#loc271 = loc(fused[#loc104, #loc103])
#loc272 = loc(fused[#loc106, #loc107])
#loc273 = loc(fused[#loc108, #loc109])
#loc274 = loc(fused[#loc110, #loc111])
#loc275 = loc(fused[#loc116, #loc117])
#loc276 = loc(fused[#loc121, #loc118])
#loc277 = loc(fused[#loc122, #loc123])
#loc278 = loc(fused[#loc124, #loc125])
#loc279 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc280 = loc(fused[#loc131, #loc130])
#loc281 = loc(fused[#loc132, #loc133])
#loc282 = loc(fused[#loc134, #loc135])
#loc283 = loc(fused[#loc136, #loc137])
#loc284 = loc(fused[#loc142, #loc143])
#loc285 = loc(fused[#loc147, #loc144])
#loc286 = loc(fused[#loc148, #loc149])
#loc287 = loc(fused[#loc151, #loc150])
#loc288 = loc(fused[#loc152, #loc153])
#loc289 = loc(fused[#loc155, #loc149])
#loc290 = loc(fused[#loc158, #loc161])
#loc291 = loc(fused[#loc163, #loc162])
#loc292 = loc(fused[#loc165, #loc164])
#loc293 = loc(fused[#loc171, #loc172])
#loc294 = loc(fused[#loc174, #loc173])
#loc295 = loc(fused[#loc175, #loc176])
#loc296 = loc(fused[#loc177, #loc178])
#loc297 = loc(fused[#loc179, #loc180])
#loc298 = loc(fused[#loc185, #loc186])
#loc299 = loc(fused[#loc190, #loc187])
#loc300 = loc(fused[#loc191, #loc192])
#loc301 = loc(fused[#loc193, #loc194])
#loc302 = loc(fused[#loc195, #loc192])
#loc303 = loc(fused[#loc197, #loc196])
#loc304 = loc(fused[#loc198, #loc199])
#loc305 = loc(fused[#loc200, #loc201])
#loc306 = loc(fused[#loc202, #loc203])
#loc307 = loc(fused[#loc208, #loc209])
#loc308 = loc(fused[#loc213, #loc210])
#loc309 = loc(fused[#loc214, #loc215])
#loc310 = loc(fused[#loc217, #loc216])
#loc311 = loc(fused[#loc218, #loc219])
#loc312 = loc(fused[#loc221, #loc215])
#loc313 = loc(fused[#loc224, #loc227])
#loc314 = loc(fused[#loc229, #loc228])
#loc315 = loc(fused[#loc231, #loc230])
