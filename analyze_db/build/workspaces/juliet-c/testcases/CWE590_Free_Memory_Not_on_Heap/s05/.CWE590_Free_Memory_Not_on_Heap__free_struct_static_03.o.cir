!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_static_03_bad.dataBuffer = #cir.zero : !cir.array<!ty__twoIntsStruct x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc181)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc182)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_static_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc187)
      cir.if %10 {
        cir.scope {
          %11 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_03_bad.dataBuffer : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>> loc(#loc1)
          cir.scope {
            %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc191)
            cir.scope {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc25)
              cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc193)
              cir.for : cond {
                %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc27)
                %17 = cir.const #cir.int<100> : !s32i loc(#loc28)
                %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc28)
                %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc194)
                cir.condition(%19) loc(#loc29)
              } body {
                cir.scope {
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
                  %17 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc32)
                  %18 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
                  %19 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
                  %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
                  cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc196)
                  %21 = cir.const #cir.int<1> : !s32i loc(#loc35)
                  %22 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc36)
                  %23 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                  %24 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                  %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                  cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc197)
                } loc(#loc195)
                cir.yield loc(#loc24)
              } step {
                %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc39)
                %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc40)
                cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc198)
                cir.yield loc(#loc192)
              } loc(#loc192)
            } loc(#loc192)
          } loc(#loc190)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
          cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
        } loc(#loc189)
      } loc(#loc188)
    } loc(#loc186)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc7)
  } loc(#loc183)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_static_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc202)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc200)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc57)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc205)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc208)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc71)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc72)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc210)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
      } else {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc213)
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc81)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc82)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc82)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc214)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc215)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc216)
          cir.store %18, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc218)
            cir.if %23 {
              %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc90)
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc92)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc219)
          } loc(#loc217)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc221)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc99)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc99)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc223)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc101)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc102)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc102)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc224)
                cir.condition(%26) loc(#loc103)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<1> : !s32i loc(#loc105)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc107)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
                  %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
                  cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc226)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %29 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
                  %30 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc111)
                  %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
                  %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                  cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc227)
                } loc(#loc225)
                cir.yield loc(#loc98)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc113)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc114)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc228)
                cir.yield loc(#loc222)
              } loc(#loc222)
            } loc(#loc222)
          } loc(#loc220)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc229)
        } loc(#loc212)
      } loc(#loc211)
    } loc(#loc209)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc120)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc121)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc122)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc121)
    cir.return loc(#loc64)
  } loc(#loc206)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc232)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc131)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc132)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc234)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc237)
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc138)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc139)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc139)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc238)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc239)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc240)
          cir.store %18, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc237)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc242)
            cir.if %23 {
              %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc147)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc147)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc148)
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc149)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc150)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc149)
            } loc(#loc243)
          } loc(#loc241)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc245)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc157)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc157)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc247)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc159)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc160)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc160)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc248)
                cir.condition(%26) loc(#loc161)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<1> : !s32i loc(#loc163)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc165)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
                  %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
                  cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc250)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc167)
                  %29 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
                  %30 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc169)
                  %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
                  %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                  cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc251)
                } loc(#loc249)
                cir.yield loc(#loc156)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc171)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc172)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc252)
                cir.yield loc(#loc246)
              } loc(#loc246)
            } loc(#loc246)
          } loc(#loc244)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc253)
        } loc(#loc236)
      } loc(#loc235)
    } loc(#loc233)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc178)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc179)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc180)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc180)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
    cir.return loc(#loc124)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":31:34)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":23:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":46:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":25:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":25:21)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":26:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":26:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":42:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":27:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":27:11)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":28:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":29:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":41:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":32:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":39:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":33:17)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":33:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":38:17)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:26)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:22)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:29)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:31)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":35:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":36:44)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":36:32)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":36:21)
#loc34 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":37:44)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":37:32)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":37:21)
#loc38 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:39)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":34:38)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":40:20)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":40:13)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":43:22)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":43:27)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":43:28)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":43:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":45:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":45:10)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":119:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":123:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":121:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":121:14)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":122:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":122:14)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":60:19)
#loc58 = loc("/usr/include/stdlib.h":672:1)
#loc59 = loc("/usr/include/stdlib.h":672:45)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":69:27)
#loc61 = loc("/usr/include/stdlib.h":756:1)
#loc62 = loc("/usr/include/stdlib.h":756:70)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":53:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":86:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":55:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":55:21)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":56:12)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":56:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":57:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":82:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":57:8)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":57:11)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":58:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":61:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":63:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":60:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":64:9)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":81:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":66:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":66:91)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":66:59)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":66:66)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":66:70)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":66:90)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":67:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":71:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":67:17)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":67:31)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":68:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":69:17)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":70:17)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":70:22)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":72:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":79:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":73:17)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":73:24)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:17)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":78:17)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:26)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:22)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:29)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:33)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:31)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":75:17)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":76:44)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":76:21)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":76:32)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":76:33)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":77:44)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":77:21)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":77:32)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":77:33)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:39)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":74:38)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":80:20)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":80:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":83:22)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":83:27)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":83:28)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":83:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":85:5)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":85:10)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":89:1)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":117:1)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":91:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":91:21)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":92:12)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":92:5)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":93:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":113:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":93:8)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":93:11)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":94:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":95:9)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":112:9)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":97:13)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":97:91)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":97:59)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":97:66)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":97:70)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":97:90)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":98:13)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":102:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":98:17)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":98:31)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":99:13)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":100:27)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":100:17)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":101:17)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":101:22)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":103:13)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":110:13)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":104:17)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":104:24)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:17)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":109:17)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:26)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:22)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:29)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:33)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:31)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":106:17)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":107:44)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":107:21)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":107:32)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":107:33)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":108:44)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":108:21)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":108:32)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":108:33)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:39)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":105:38)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":111:20)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":111:13)
#loc175 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":114:22)
#loc176 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":114:27)
#loc177 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":114:28)
#loc178 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":114:5)
#loc179 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":116:5)
#loc180 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_03.c":116:10)
#loc181 = loc(fused[#loc2, #loc3])
#loc182 = loc(fused[#loc4, #loc5])
#loc183 = loc(fused[#loc6, #loc7])
#loc184 = loc(fused[#loc8, #loc9])
#loc185 = loc(fused[#loc11, #loc10])
#loc186 = loc(fused[#loc12, #loc13])
#loc187 = loc(fused[#loc14, #loc15])
#loc188 = loc(fused[#loc16, #loc13])
#loc189 = loc(fused[#loc17, #loc18])
#loc190 = loc(fused[#loc19, #loc20])
#loc191 = loc(fused[#loc21, #loc22])
#loc192 = loc(fused[#loc23, #loc24])
#loc193 = loc(fused[#loc26, #loc25])
#loc194 = loc(fused[#loc27, #loc28])
#loc195 = loc(fused[#loc30, #loc24])
#loc196 = loc(fused[#loc33, #loc31])
#loc197 = loc(fused[#loc37, #loc35])
#loc198 = loc(fused[#loc40, #loc39])
#loc199 = loc(fused[#loc42, #loc41])
#loc200 = loc(fused[#loc49, #loc50])
#loc201 = loc(fused[#loc51, #loc52])
#loc202 = loc(fused[#loc53, #loc54])
#loc203 = loc(fused[#loc55, #loc56])
#loc204 = loc(fused[#loc58, #loc59])
#loc205 = loc(fused[#loc61, #loc62])
#loc206 = loc(fused[#loc63, #loc64])
#loc207 = loc(fused[#loc65, #loc66])
#loc208 = loc(fused[#loc68, #loc67])
#loc209 = loc(fused[#loc69, #loc70])
#loc210 = loc(fused[#loc71, #loc72])
#loc211 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc212 = loc(fused[#loc77, #loc78])
#loc213 = loc(fused[#loc79, #loc80])
#loc214 = loc(fused[#loc83, #loc84])
#loc215 = loc(fused[#loc82, #loc84])
#loc216 = loc(fused[#loc81, #loc80])
#loc217 = loc(fused[#loc85, #loc86])
#loc218 = loc(fused[#loc87, #loc88])
#loc219 = loc(fused[#loc89, #loc86])
#loc220 = loc(fused[#loc93, #loc94])
#loc221 = loc(fused[#loc95, #loc96])
#loc222 = loc(fused[#loc97, #loc98])
#loc223 = loc(fused[#loc100, #loc99])
#loc224 = loc(fused[#loc101, #loc102])
#loc225 = loc(fused[#loc104, #loc98])
#loc226 = loc(fused[#loc106, #loc105])
#loc227 = loc(fused[#loc110, #loc109])
#loc228 = loc(fused[#loc114, #loc113])
#loc229 = loc(fused[#loc116, #loc115])
#loc230 = loc(fused[#loc123, #loc124])
#loc231 = loc(fused[#loc125, #loc126])
#loc232 = loc(fused[#loc128, #loc127])
#loc233 = loc(fused[#loc129, #loc130])
#loc234 = loc(fused[#loc131, #loc132])
#loc235 = loc(fused[#loc133, #loc130])
#loc236 = loc(fused[#loc134, #loc135])
#loc237 = loc(fused[#loc136, #loc137])
#loc238 = loc(fused[#loc140, #loc141])
#loc239 = loc(fused[#loc139, #loc141])
#loc240 = loc(fused[#loc138, #loc137])
#loc241 = loc(fused[#loc142, #loc143])
#loc242 = loc(fused[#loc144, #loc145])
#loc243 = loc(fused[#loc146, #loc143])
#loc244 = loc(fused[#loc151, #loc152])
#loc245 = loc(fused[#loc153, #loc154])
#loc246 = loc(fused[#loc155, #loc156])
#loc247 = loc(fused[#loc158, #loc157])
#loc248 = loc(fused[#loc159, #loc160])
#loc249 = loc(fused[#loc162, #loc156])
#loc250 = loc(fused[#loc164, #loc163])
#loc251 = loc(fused[#loc168, #loc167])
#loc252 = loc(fused[#loc172, #loc171])
#loc253 = loc(fused[#loc174, #loc173])
