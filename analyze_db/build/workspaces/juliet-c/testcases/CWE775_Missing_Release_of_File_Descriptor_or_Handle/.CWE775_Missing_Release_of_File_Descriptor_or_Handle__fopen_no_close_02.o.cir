!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc79)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc11)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc80)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc16)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc16)
      cir.if %9 {
      } loc(#loc82)
    } loc(#loc81)
    cir.return loc(#loc6)
  } loc(#loc77)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc83)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc87)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc33)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc35)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc36)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc36)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc37)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc37)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc35)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc91)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc42)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc42)
      cir.if %9 {
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } else {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc50)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc95)
          cir.if %13 {
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
            %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc53)
          } loc(#loc96)
        } loc(#loc94)
      } loc(#loc93)
    } loc(#loc92)
    cir.return loc(#loc30)
  } loc(#loc88)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc60)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc61)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc61)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc60)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc67)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc67)
      cir.if %9 {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc72)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc104)
          cir.if %13 {
            %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
            %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc75)
          } loc(#loc105)
        } loc(#loc103)
      } loc(#loc102)
    } loc(#loc101)
    cir.return loc(#loc55)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":26:18)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":26:41)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":21:1)
#loc6 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":32:1)
#loc7 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":23:5)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":23:12)
#loc9 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":24:12)
#loc10 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":24:5)
#loc11 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":26:12)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":26:5)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":26:45)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":27:5)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":31:5)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":27:8)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":28:5)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":77:1)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":81:1)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":79:5)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":79:14)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":80:5)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":80:14)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":48:19)
#loc27 = loc("/usr/include/stdio.h":184:1)
#loc28 = loc("/usr/include/stdio.h":184:36)
#loc29 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":39:1)
#loc30 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":58:1)
#loc31 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":41:5)
#loc32 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":41:12)
#loc33 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":42:12)
#loc34 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":42:5)
#loc35 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":44:12)
#loc36 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":44:18)
#loc37 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":44:41)
#loc38 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":44:5)
#loc39 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":44:45)
#loc40 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":45:5)
#loc41 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":57:5)
#loc42 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":45:8)
#loc43 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":46:5)
#loc44 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":49:5)
#loc45 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":51:5)
#loc46 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":48:9)
#loc47 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":53:9)
#loc48 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":56:9)
#loc49 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":53:13)
#loc50 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":53:21)
#loc51 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":54:9)
#loc52 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":55:20)
#loc53 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":55:13)
#loc54 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":61:1)
#loc55 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":75:1)
#loc56 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":63:5)
#loc57 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":63:12)
#loc58 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":64:12)
#loc59 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":64:5)
#loc60 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":66:12)
#loc61 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":66:18)
#loc62 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":66:41)
#loc63 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":66:5)
#loc64 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":66:45)
#loc65 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":67:5)
#loc66 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":74:5)
#loc67 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":67:8)
#loc68 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":68:5)
#loc69 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":70:9)
#loc70 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":73:9)
#loc71 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":70:13)
#loc72 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":70:21)
#loc73 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":71:9)
#loc74 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":72:20)
#loc75 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_02.c":72:13)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc10, #loc9])
#loc80 = loc(fused[#loc12, #loc13])
#loc81 = loc(fused[#loc14, #loc15])
#loc82 = loc(fused[#loc17, #loc15])
#loc83 = loc(fused[#loc18, #loc19])
#loc84 = loc(fused[#loc20, #loc21])
#loc85 = loc(fused[#loc22, #loc23])
#loc86 = loc(fused[#loc24, #loc25])
#loc87 = loc(fused[#loc27, #loc28])
#loc88 = loc(fused[#loc29, #loc30])
#loc89 = loc(fused[#loc31, #loc32])
#loc90 = loc(fused[#loc34, #loc33])
#loc91 = loc(fused[#loc38, #loc39])
#loc92 = loc(fused[#loc40, #loc41])
#loc93 = loc(fused[#loc43, #loc44, #loc45, #loc41])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc51, #loc48])
#loc97 = loc(fused[#loc54, #loc55])
#loc98 = loc(fused[#loc56, #loc57])
#loc99 = loc(fused[#loc59, #loc58])
#loc100 = loc(fused[#loc63, #loc64])
#loc101 = loc(fused[#loc65, #loc66])
#loc102 = loc(fused[#loc68, #loc66])
#loc103 = loc(fused[#loc69, #loc70])
#loc104 = loc(fused[#loc71, #loc72])
#loc105 = loc(fused[#loc73, #loc70])
