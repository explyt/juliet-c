!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":26:66)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":26:128)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":46:70)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":46:132)
#loc72 = loc(fused[#loc5, #loc6])
#loc84 = loc(fused[#loc39, #loc40])
!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType = !cir.record<struct "_CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType" {!cir.ptr<!s32i>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc70)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b_badSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc73)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc74)
    %2 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc72)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc75)
    cir.store %arg0, %2 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType> loc(#loc13)
    %4 = cir.get_member %2[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    cir.store %5, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc75)
    cir.br ^bb1 loc(#loc76)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc73)
    cir.store %6, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc73)
    cir.br ^bb2 loc(#loc77)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc78)
    cir.br ^bb3 loc(#loc77)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc21)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc22)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc79)
    cir.brcond %12 ^bb4, ^bb8 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc26)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !u64i), !cir.ptr<!s32i> loc(#loc26)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc29)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc32)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc82)
    cir.br ^bb3 loc(#loc77)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc35)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc36)
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc71)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b_goodG2BSink(%arg0: !ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType loc(fused[#loc39, #loc40])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc85)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc86)
    %2 = cir.alloca !ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc84)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc87)
    cir.store %arg0, %2 : !ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType, !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType> loc(#loc47)
    %4 = cir.get_member %2[0] {name = "structFirst"} : !cir.ptr<!ty__CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    cir.store %5, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc85)
    cir.store %6, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc85)
    cir.br ^bb2 loc(#loc89)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc52)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc90)
    cir.br ^bb3 loc(#loc89)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc55)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc55)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc91)
    cir.brcond %12 ^bb4, ^bb8 loc(#loc56)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc59)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !u64i), !cir.ptr<!s32i> loc(#loc59)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc62)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.br ^bb6 loc(#loc51)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc51)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc65)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc94)
    cir.br ^bb3 loc(#loc89)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc51)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc69)
    cir.br ^bb10 loc(#loc49)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc38)
  } loc(#loc83)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":39:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":30:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":30:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":31:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":31:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":28:27)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":27:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":21:11)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":36:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:21)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:25)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":34:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":35:30)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":35:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":35:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":35:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":35:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":35:31)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:30)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":33:29)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":37:22)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":37:27)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":37:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":37:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":46:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":59:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":50:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":50:28)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":51:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":51:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":48:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":48:27)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":47:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":49:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":58:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":56:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:18)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:21)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:25)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:23)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":54:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":55:30)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":55:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":55:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":55:18)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":55:19)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":55:31)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:30)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":53:29)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":57:22)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":57:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":57:28)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_loop_67b.c":57:9)
#loc70 = loc(fused[#loc1, #loc2])
#loc71 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc7, #loc8])
#loc74 = loc(fused[#loc9, #loc10])
#loc75 = loc(fused[#loc11, #loc12])
#loc76 = loc(fused[#loc15, #loc16])
#loc77 = loc(fused[#loc17, #loc18])
#loc78 = loc(fused[#loc20, #loc19])
#loc79 = loc(fused[#loc21, #loc22])
#loc80 = loc(fused[#loc24, #loc18])
#loc81 = loc(fused[#loc27, #loc30])
#loc82 = loc(fused[#loc32, #loc31])
#loc83 = loc(fused[#loc37, #loc38])
#loc85 = loc(fused[#loc41, #loc42])
#loc86 = loc(fused[#loc43, #loc44])
#loc87 = loc(fused[#loc45, #loc46])
#loc88 = loc(fused[#loc48, #loc49])
#loc89 = loc(fused[#loc50, #loc51])
#loc90 = loc(fused[#loc53, #loc52])
#loc91 = loc(fused[#loc54, #loc55])
#loc92 = loc(fused[#loc57, #loc51])
#loc93 = loc(fused[#loc60, #loc63])
#loc94 = loc(fused[#loc65, #loc64])
