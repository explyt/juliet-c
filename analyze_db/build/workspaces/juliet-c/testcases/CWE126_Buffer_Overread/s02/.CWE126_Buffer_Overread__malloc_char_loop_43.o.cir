!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":26:23)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":26:31)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":63:27)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":63:35)
#loc177 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc93, #loc94])
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc175)
  cir.func internal private @_ZN43CWE126_Buffer_Overread__malloc_char_loop_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc177)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc179)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
      %28 = cir.cmp(eq, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc183)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc23)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc184)
    } loc(#loc182)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc25)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc25)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc26)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc26)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc30)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc32)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc32)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %18, %24 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    cir.return loc(#loc6)
  } loc(#loc176)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func @_ZN43CWE126_Buffer_Overread__malloc_char_loop_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc45)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.call @_ZN43CWE126_Buffer_Overread__malloc_char_loop_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc47)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc194)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc195)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc196)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
      %7 = cir.const #cir.int<67> : !s8i loc(#loc56)
      %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc56)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc57)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc57)
      cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
      %13 = cir.const #cir.int<0> : !s8i loc(#loc61)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc62)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc64)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc198)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc65)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc65)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc199)
      cir.scope {
        %32 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc71)
        cir.store %33, %2 : !u64i, !cir.ptr<!u64i> loc(#loc201)
        cir.for : cond {
          %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %36 = cir.cmp(lt, %34, %35) : !u64i, !cir.bool loc(#loc202)
          cir.condition(%36) loc(#loc202)
        } body {
          cir.scope {
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc78)
            %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc76)
            %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %39 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
            %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc80)
            cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc204)
          } loc(#loc203)
          cir.yield loc(#loc70)
        } step {
          %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc82)
          cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc205)
          cir.yield loc(#loc200)
        } loc(#loc200)
      } loc(#loc200)
      %22 = cir.const #cir.int<0> : !s8i loc(#loc83)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc84)
      %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc86)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc206)
      %28 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
      cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    } loc(#loc193)
    cir.return loc(#loc42)
  } loc(#loc190)
  cir.func internal private @_ZN43CWE126_Buffer_Overread__malloc_char_loop_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc208)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc95)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc97)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc209)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc210)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc211)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
      %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
      %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
      %28 = cir.cmp(eq, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc214)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc108)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc109)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
      } loc(#loc215)
    } loc(#loc213)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc111)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc111)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc112)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc112)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc216)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc116)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc118)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %18, %24 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.return loc(#loc92)
  } loc(#loc207)
  cir.func internal private @_ZN43CWE126_Buffer_Overread__malloc_char_loop_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc125)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.call @_ZN43CWE126_Buffer_Overread__malloc_char_loop_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc127)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc222)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc223)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc224)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
      %7 = cir.const #cir.int<67> : !s8i loc(#loc136)
      %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc136)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc137)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc138)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc137)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc137)
      cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
      %13 = cir.const #cir.int<0> : !s8i loc(#loc141)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc142)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc144)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc226)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc145)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc145)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc227)
      cir.scope {
        %32 = cir.const #cir.int<0> : !s32i loc(#loc151)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc151)
        cir.store %33, %2 : !u64i, !cir.ptr<!u64i> loc(#loc229)
        cir.for : cond {
          %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc153)
          %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %36 = cir.cmp(lt, %34, %35) : !u64i, !cir.bool loc(#loc230)
          cir.condition(%36) loc(#loc230)
        } body {
          cir.scope {
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
            %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc157)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc158)
            %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc156)
            %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc159)
            %39 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
            %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc160)
            cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc232)
          } loc(#loc231)
          cir.yield loc(#loc150)
        } step {
          %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc161)
          %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc162)
          cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc233)
          cir.yield loc(#loc228)
        } loc(#loc228)
      } loc(#loc228)
      %22 = cir.const #cir.int<0> : !s8i loc(#loc163)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc165)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc164)
      %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc166)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc234)
      %28 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc168)
      %29 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc169)
      %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
      %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
      cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
    } loc(#loc221)
    cir.return loc(#loc122)
  } loc(#loc218)
  cir.func @_ZN43CWE126_Buffer_Overread__malloc_char_loop_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN43CWE126_Buffer_Overread__malloc_char_loop_43L7goodG2BEv() : () -> () loc(#loc173)
    cir.return loc(#loc172)
  } loc(#loc235)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":26:1)
#loc6 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":33:1)
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":27:1)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":29:20)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":29:27)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":29:30)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":29:41)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":29:42)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":29:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:33)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:9)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:17)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:23)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:30)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":30:29)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":31:12)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":31:18)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":31:23)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":31:26)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":31:5)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":31:27)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":32:18)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":32:5)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":32:10)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":32:13)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":32:14)
#loc35 = loc("/usr/include/string.h":407:1)
#loc36 = loc("/usr/include/string.h":408:33)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("/usr/include/stdlib.h":687:1)
#loc40 = loc("/usr/include/stdlib.h":687:32)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":35:1)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":56:1)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":37:5)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":37:12)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":38:12)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":38:5)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":39:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":40:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":55:5)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":41:9)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":41:16)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":41:19)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":42:9)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":42:22)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":43:16)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":43:22)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":43:27)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":43:31)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":43:9)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":43:32)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":44:23)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":44:14)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":44:18)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":44:9)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":45:19)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":45:26)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":45:9)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":45:30)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:9)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":51:9)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:18)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:14)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:21)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:25)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":49:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":50:23)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":50:28)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":50:29)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":50:18)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":50:13)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:35)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":48:34)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":52:23)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":52:14)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":52:18)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":52:9)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":53:19)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":53:9)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":54:9)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":54:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":63:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":70:1)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":64:1)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":66:20)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":66:27)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":66:31)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":66:42)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":66:43)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":66:5)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:5)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:33)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:9)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:17)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:23)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:24)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:30)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":67:29)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":68:12)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":68:18)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":68:23)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":68:27)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":68:5)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":68:28)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":69:19)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":69:5)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":69:10)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":69:14)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":69:15)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":72:1)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":93:1)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":74:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":74:12)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":75:12)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":75:5)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":76:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":77:5)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":92:5)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":78:9)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":78:16)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":78:19)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":79:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":79:22)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":80:16)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":80:22)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":80:27)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":80:31)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":80:9)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":80:32)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":81:23)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":81:14)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":81:18)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":81:9)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":82:19)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":82:26)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":82:9)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":82:30)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:9)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":88:9)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:18)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:14)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:21)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:25)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":86:9)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":87:23)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":87:28)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":87:29)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":87:18)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":87:13)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:35)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":85:34)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":89:23)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":89:14)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":89:18)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":89:9)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":90:19)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":90:9)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":91:9)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":91:14)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":95:1)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":98:1)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_43.cpp":97:5)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc5, #loc6])
#loc178 = loc(fused[#loc12, #loc13])
#loc179 = loc(fused[#loc11, #loc13])
#loc180 = loc(fused[#loc10, #loc14])
#loc181 = loc(fused[#loc15, #loc14])
#loc182 = loc(fused[#loc16, #loc17])
#loc183 = loc(fused[#loc18, #loc19])
#loc184 = loc(fused[#loc20, #loc17])
#loc185 = loc(fused[#loc28, #loc29])
#loc186 = loc(fused[#loc31, #loc30])
#loc187 = loc(fused[#loc35, #loc36])
#loc188 = loc(fused[#loc37, #loc38])
#loc189 = loc(fused[#loc39, #loc40])
#loc190 = loc(fused[#loc41, #loc42])
#loc191 = loc(fused[#loc43, #loc44])
#loc192 = loc(fused[#loc46, #loc45])
#loc193 = loc(fused[#loc48, #loc49])
#loc194 = loc(fused[#loc50, #loc51])
#loc195 = loc(fused[#loc50, #loc52])
#loc196 = loc(fused[#loc53, #loc54])
#loc197 = loc(fused[#loc59, #loc60])
#loc198 = loc(fused[#loc64, #loc61])
#loc199 = loc(fused[#loc67, #loc68])
#loc200 = loc(fused[#loc69, #loc70])
#loc201 = loc(fused[#loc72, #loc71])
#loc202 = loc(fused[#loc73, #loc74])
#loc203 = loc(fused[#loc75, #loc70])
#loc204 = loc(fused[#loc80, #loc78])
#loc205 = loc(fused[#loc82, #loc81])
#loc206 = loc(fused[#loc86, #loc83])
#loc207 = loc(fused[#loc91, #loc92])
#loc209 = loc(fused[#loc98, #loc99])
#loc210 = loc(fused[#loc97, #loc99])
#loc211 = loc(fused[#loc96, #loc100])
#loc212 = loc(fused[#loc101, #loc100])
#loc213 = loc(fused[#loc102, #loc103])
#loc214 = loc(fused[#loc104, #loc105])
#loc215 = loc(fused[#loc106, #loc103])
#loc216 = loc(fused[#loc114, #loc115])
#loc217 = loc(fused[#loc117, #loc116])
#loc218 = loc(fused[#loc121, #loc122])
#loc219 = loc(fused[#loc123, #loc124])
#loc220 = loc(fused[#loc126, #loc125])
#loc221 = loc(fused[#loc128, #loc129])
#loc222 = loc(fused[#loc130, #loc131])
#loc223 = loc(fused[#loc130, #loc132])
#loc224 = loc(fused[#loc133, #loc134])
#loc225 = loc(fused[#loc139, #loc140])
#loc226 = loc(fused[#loc144, #loc141])
#loc227 = loc(fused[#loc147, #loc148])
#loc228 = loc(fused[#loc149, #loc150])
#loc229 = loc(fused[#loc152, #loc151])
#loc230 = loc(fused[#loc153, #loc154])
#loc231 = loc(fused[#loc155, #loc150])
#loc232 = loc(fused[#loc160, #loc158])
#loc233 = loc(fused[#loc162, #loc161])
#loc234 = loc(fused[#loc166, #loc163])
#loc235 = loc(fused[#loc171, #loc172])
