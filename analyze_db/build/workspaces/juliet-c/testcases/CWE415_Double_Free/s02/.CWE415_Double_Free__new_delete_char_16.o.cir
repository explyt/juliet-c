!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_char_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc73)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc74)
  cir.func @_ZN38CWE415_Double_Free__new_delete_char_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc76)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%3) loc(#loc13)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<1> : !u64i loc(#loc80)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
          cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc17)
          cir.break loc(#loc20)
        } loc(#loc79)
        cir.yield loc(#loc12)
      } loc(#loc78)
    } loc(#loc78)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%3) loc(#loc23)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
          cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc17)
          cir.break loc(#loc26)
        } loc(#loc83)
        cir.yield loc(#loc22)
      } loc(#loc82)
    } loc(#loc82)
    cir.return loc(#loc6)
  } loc(#loc75)
  cir.func internal private @_ZN38CWE415_Double_Free__new_delete_char_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc35)
        cir.condition(%3) loc(#loc35)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<1> : !u64i loc(#loc89)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc39)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
          cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
          cir.break loc(#loc42)
        } loc(#loc88)
        cir.yield loc(#loc34)
      } loc(#loc87)
    } loc(#loc87)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc45)
        cir.condition(%3) loc(#loc45)
      } do {
        cir.scope {
          cir.break loc(#loc47)
        } loc(#loc92)
        cir.yield loc(#loc44)
      } loc(#loc91)
    } loc(#loc91)
    cir.return loc(#loc28)
  } loc(#loc84)
  cir.func internal private @_ZN38CWE415_Double_Free__new_delete_char_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc52)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc56)
        cir.condition(%3) loc(#loc56)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<1> : !u64i loc(#loc98)
          %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc60)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
          cir.break loc(#loc62)
        } loc(#loc97)
        cir.yield loc(#loc55)
      } loc(#loc96)
    } loc(#loc96)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc65)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc65)
        cir.condition(%3) loc(#loc65)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
          %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
          cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
          cir.break loc(#loc68)
        } loc(#loc101)
        cir.yield loc(#loc64)
      } loc(#loc100)
    } loc(#loc100)
    cir.return loc(#loc49)
  } loc(#loc93)
  cir.func @_ZN38CWE415_Double_Free__new_delete_char_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN38CWE415_Double_Free__new_delete_char_16L7goodB2GEv() : () -> () loc(#loc71)
    cir.call @_ZN38CWE415_Double_Free__new_delete_char_16L7goodG2BEv() : () -> () loc(#loc72)
    cir.return loc(#loc70)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_char_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("CWE415_Double_Free__new_delete_char_16.cpp":26:1)
#loc6 = loc("CWE415_Double_Free__new_delete_char_16.cpp":44:1)
#loc7 = loc("CWE415_Double_Free__new_delete_char_16.cpp":28:5)
#loc8 = loc("CWE415_Double_Free__new_delete_char_16.cpp":28:12)
#loc9 = loc("CWE415_Double_Free__new_delete_char_16.cpp":30:12)
#loc10 = loc("CWE415_Double_Free__new_delete_char_16.cpp":30:5)
#loc11 = loc("CWE415_Double_Free__new_delete_char_16.cpp":31:5)
#loc12 = loc("CWE415_Double_Free__new_delete_char_16.cpp":37:5)
#loc13 = loc("CWE415_Double_Free__new_delete_char_16.cpp":31:11)
#loc14 = loc("CWE415_Double_Free__new_delete_char_16.cpp":32:5)
#loc15 = loc("CWE415_Double_Free__new_delete_char_16.cpp":33:16)
#loc16 = loc("CWE415_Double_Free__new_delete_char_16.cpp":33:20)
#loc17 = loc("CWE415_Double_Free__new_delete_char_16.cpp":26:6)
#loc18 = loc("CWE415_Double_Free__new_delete_char_16.cpp":33:9)
#loc19 = loc("CWE415_Double_Free__new_delete_char_16.cpp":35:16)
#loc20 = loc("CWE415_Double_Free__new_delete_char_16.cpp":36:9)
#loc21 = loc("CWE415_Double_Free__new_delete_char_16.cpp":38:5)
#loc22 = loc("CWE415_Double_Free__new_delete_char_16.cpp":43:5)
#loc23 = loc("CWE415_Double_Free__new_delete_char_16.cpp":38:11)
#loc24 = loc("CWE415_Double_Free__new_delete_char_16.cpp":39:5)
#loc25 = loc("CWE415_Double_Free__new_delete_char_16.cpp":41:16)
#loc26 = loc("CWE415_Double_Free__new_delete_char_16.cpp":42:9)
#loc27 = loc("CWE415_Double_Free__new_delete_char_16.cpp":51:1)
#loc28 = loc("CWE415_Double_Free__new_delete_char_16.cpp":70:1)
#loc29 = loc("CWE415_Double_Free__new_delete_char_16.cpp":53:5)
#loc30 = loc("CWE415_Double_Free__new_delete_char_16.cpp":53:12)
#loc31 = loc("CWE415_Double_Free__new_delete_char_16.cpp":55:12)
#loc32 = loc("CWE415_Double_Free__new_delete_char_16.cpp":55:5)
#loc33 = loc("CWE415_Double_Free__new_delete_char_16.cpp":56:5)
#loc34 = loc("CWE415_Double_Free__new_delete_char_16.cpp":62:5)
#loc35 = loc("CWE415_Double_Free__new_delete_char_16.cpp":56:11)
#loc36 = loc("CWE415_Double_Free__new_delete_char_16.cpp":57:5)
#loc37 = loc("CWE415_Double_Free__new_delete_char_16.cpp":58:16)
#loc38 = loc("CWE415_Double_Free__new_delete_char_16.cpp":58:20)
#loc39 = loc("CWE415_Double_Free__new_delete_char_16.cpp":51:13)
#loc40 = loc("CWE415_Double_Free__new_delete_char_16.cpp":58:9)
#loc41 = loc("CWE415_Double_Free__new_delete_char_16.cpp":60:16)
#loc42 = loc("CWE415_Double_Free__new_delete_char_16.cpp":61:9)
#loc43 = loc("CWE415_Double_Free__new_delete_char_16.cpp":63:5)
#loc44 = loc("CWE415_Double_Free__new_delete_char_16.cpp":69:5)
#loc45 = loc("CWE415_Double_Free__new_delete_char_16.cpp":63:11)
#loc46 = loc("CWE415_Double_Free__new_delete_char_16.cpp":64:5)
#loc47 = loc("CWE415_Double_Free__new_delete_char_16.cpp":68:9)
#loc48 = loc("CWE415_Double_Free__new_delete_char_16.cpp":73:1)
#loc49 = loc("CWE415_Double_Free__new_delete_char_16.cpp":90:1)
#loc50 = loc("CWE415_Double_Free__new_delete_char_16.cpp":75:5)
#loc51 = loc("CWE415_Double_Free__new_delete_char_16.cpp":75:12)
#loc52 = loc("CWE415_Double_Free__new_delete_char_16.cpp":77:12)
#loc53 = loc("CWE415_Double_Free__new_delete_char_16.cpp":77:5)
#loc54 = loc("CWE415_Double_Free__new_delete_char_16.cpp":78:5)
#loc55 = loc("CWE415_Double_Free__new_delete_char_16.cpp":83:5)
#loc56 = loc("CWE415_Double_Free__new_delete_char_16.cpp":78:11)
#loc57 = loc("CWE415_Double_Free__new_delete_char_16.cpp":79:5)
#loc58 = loc("CWE415_Double_Free__new_delete_char_16.cpp":80:16)
#loc59 = loc("CWE415_Double_Free__new_delete_char_16.cpp":80:20)
#loc60 = loc("CWE415_Double_Free__new_delete_char_16.cpp":73:13)
#loc61 = loc("CWE415_Double_Free__new_delete_char_16.cpp":80:9)
#loc62 = loc("CWE415_Double_Free__new_delete_char_16.cpp":82:9)
#loc63 = loc("CWE415_Double_Free__new_delete_char_16.cpp":84:5)
#loc64 = loc("CWE415_Double_Free__new_delete_char_16.cpp":89:5)
#loc65 = loc("CWE415_Double_Free__new_delete_char_16.cpp":84:11)
#loc66 = loc("CWE415_Double_Free__new_delete_char_16.cpp":85:5)
#loc67 = loc("CWE415_Double_Free__new_delete_char_16.cpp":87:16)
#loc68 = loc("CWE415_Double_Free__new_delete_char_16.cpp":88:9)
#loc69 = loc("CWE415_Double_Free__new_delete_char_16.cpp":92:1)
#loc70 = loc("CWE415_Double_Free__new_delete_char_16.cpp":96:1)
#loc71 = loc("CWE415_Double_Free__new_delete_char_16.cpp":94:5)
#loc72 = loc("CWE415_Double_Free__new_delete_char_16.cpp":95:5)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc5, #loc6])
#loc76 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc10, #loc9])
#loc78 = loc(fused[#loc11, #loc12])
#loc79 = loc(fused[#loc14, #loc12])
#loc80 = loc(fused[#loc15, #loc16])
#loc81 = loc(fused[#loc18, #loc16])
#loc82 = loc(fused[#loc21, #loc22])
#loc83 = loc(fused[#loc24, #loc22])
#loc84 = loc(fused[#loc27, #loc28])
#loc85 = loc(fused[#loc29, #loc30])
#loc86 = loc(fused[#loc32, #loc31])
#loc87 = loc(fused[#loc33, #loc34])
#loc88 = loc(fused[#loc36, #loc34])
#loc89 = loc(fused[#loc37, #loc38])
#loc90 = loc(fused[#loc40, #loc38])
#loc91 = loc(fused[#loc43, #loc44])
#loc92 = loc(fused[#loc46, #loc44])
#loc93 = loc(fused[#loc48, #loc49])
#loc94 = loc(fused[#loc50, #loc51])
#loc95 = loc(fused[#loc53, #loc52])
#loc96 = loc(fused[#loc54, #loc55])
#loc97 = loc(fused[#loc57, #loc55])
#loc98 = loc(fused[#loc58, #loc59])
#loc99 = loc(fused[#loc61, #loc59])
#loc100 = loc(fused[#loc63, #loc64])
#loc101 = loc(fused[#loc66, #loc64])
#loc102 = loc(fused[#loc69, #loc70])
