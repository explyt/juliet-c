!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc133)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc137)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc139)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc140)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc139)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc140)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc25)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc26)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc141)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc142)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc147)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc36)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc38)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
    cir.br ^bb3 loc(#loc32)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc43)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc44)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc44)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc48)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc50)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %37 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    cir.store %36, %37 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // pred: ^bb6
    %38 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.store %39, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    %40 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc137)
    cir.store %40, %2 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc137)
    %41 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc61)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc62)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %44 = cir.call @strcat(%42, %43) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc61)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %46 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc66)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb9 loc(#loc60)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc134)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    cir.return loc(#loc69)
  } loc(#loc154)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc159)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc161)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc162)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc161)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc162)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc87)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc163)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc164)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc99)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc104)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc105)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc105)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc105)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc109)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc111)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc111)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %37 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.store %36, %37 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // pred: ^bb6
    %38 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.store %39, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    %40 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc159)
    cir.store %40, %2 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc159)
    %41 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc122)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc123)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %44 = cir.call @strcat(%42, %43) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %46 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc127)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc118)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc73)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":149:1)
#loc6 = loc("/usr/include/string.h":150:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":23:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":47:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":31:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":31:24)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":38:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":38:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":40:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":40:29)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":25:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":25:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":26:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":26:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":27:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":27:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":28:20)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":28:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":28:31)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":28:42)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":28:43)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":28:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:17)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:24)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:30)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":29:29)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":30:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":36:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":31:23)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":33:16)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":33:22)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":33:27)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":33:31)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":33:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":33:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":34:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":34:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":34:14)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":34:18)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":34:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":35:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":35:10)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":35:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":37:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":46:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":38:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":39:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":45:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":42:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":42:20)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":42:26)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":43:23)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":43:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":44:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":44:18)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":80:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":83:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":82:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":82:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":54:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":78:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":62:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":62:24)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":69:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":69:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":71:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":71:29)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":56:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":56:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":57:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":57:25)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":58:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":58:25)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":59:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":59:27)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":59:31)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":59:42)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":59:43)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":59:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:33)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:30)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":60:29)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":61:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":67:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":62:23)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":64:16)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":64:22)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":64:27)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":64:30)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":64:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":64:31)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":65:22)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":65:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":65:14)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":65:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":65:18)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":66:21)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":66:10)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":66:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":68:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":77:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":69:23)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":70:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":76:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":73:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":73:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":73:26)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":74:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":74:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":75:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_32.c":75:18)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc13, #loc14])
#loc136 = loc(fused[#loc15, #loc16])
#loc137 = loc(fused[#loc17, #loc18])
#loc138 = loc(fused[#loc19, #loc20])
#loc139 = loc(fused[#loc21, #loc22])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc27, #loc28])
#loc142 = loc(fused[#loc26, #loc28])
#loc143 = loc(fused[#loc25, #loc29])
#loc144 = loc(fused[#loc30, #loc29])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc35, #loc32])
#loc148 = loc(fused[#loc39, #loc40])
#loc149 = loc(fused[#loc46, #loc47])
#loc150 = loc(fused[#loc49, #loc48])
#loc151 = loc(fused[#loc55, #loc53])
#loc152 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc59, #loc60])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc74, #loc75])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc78, #loc79])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc82, #loc83])
#loc162 = loc(fused[#loc84, #loc85])
#loc163 = loc(fused[#loc88, #loc89])
#loc164 = loc(fused[#loc87, #loc89])
#loc165 = loc(fused[#loc86, #loc90])
#loc166 = loc(fused[#loc91, #loc90])
#loc167 = loc(fused[#loc92, #loc93])
#loc168 = loc(fused[#loc94, #loc95])
#loc169 = loc(fused[#loc96, #loc93])
#loc170 = loc(fused[#loc100, #loc101])
#loc171 = loc(fused[#loc107, #loc108])
#loc172 = loc(fused[#loc110, #loc109])
#loc173 = loc(fused[#loc116, #loc114])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc120, #loc121])
