!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc56 = loc("CWE401_Memory_Leak__char_malloc_18.c":98:10)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_18.c":98:14)
#loc58 = loc("CWE401_Memory_Leak__char_malloc_18.c":98:20)
#loc59 = loc("CWE401_Memory_Leak__char_malloc_18.c":98:32)
#loc150 = loc(fused[#loc56, #loc57])
#loc151 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc129)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.goto "source" loc(#loc135)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc18)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc20)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc137)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc32)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc142)
    } loc(#loc140)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc33)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.goto "sink" loc(#loc143)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc39)
    cir.return loc(#loc11)
  } loc(#loc132)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc147)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE401_Memory_Leak__char_malloc_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE401_Memory_Leak__char_malloc_18_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE401_Memory_Leak__char_malloc_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE401_Memory_Leak__char_malloc_18_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.return %17 : !s32i loc(#loc154)
  } loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc155)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.goto "source" loc(#loc159)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc84)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc85)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc86)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc160)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc161)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc98)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
      } loc(#loc166)
    } loc(#loc164)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc99)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc101)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc101)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc99)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.goto "sink" loc(#loc167)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc106)
    %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc107)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
    cir.return loc(#loc77)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc113)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.goto "source" loc(#loc171)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc117)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc118)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc118)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc118)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc118)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc120)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc122)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc122)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.goto "sink" loc(#loc173)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc127)
    cir.return loc(#loc110)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_malloc_18.c":34:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_malloc_18.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_malloc_18.c":40:1)
#loc12 = loc("CWE401_Memory_Leak__char_malloc_18.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__char_malloc_18.c":26:12)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_18.c":27:12)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_18.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_18.c":28:5)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_18.c":28:10)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_18.c":29:1)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_18.c":31:20)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_18.c":31:27)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_18.c":31:31)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_18.c":31:42)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_18.c":31:43)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_18.c":31:5)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:5)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:33)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:9)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:17)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:23)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:24)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:30)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_18.c":32:29)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_18.c":34:5)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_18.c":34:12)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_18.c":35:15)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_18.c":35:5)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_18.c":36:5)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_18.c":36:10)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_18.c":37:1)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_18.c":83:1)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_18.c":87:1)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_18.c":85:5)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_18.c":85:13)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_18.c":86:5)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_18.c":86:13)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_18.c":103:15)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_18.c":105:15)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_18.c":108:15)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_18.c":110:15)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_18.c":98:1)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_18.c":113:1)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_18.c":99:1)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_18.c":101:27)
#loc62 = loc("CWE401_Memory_Leak__char_malloc_18.c":101:22)
#loc63 = loc("CWE401_Memory_Leak__char_malloc_18.c":101:5)
#loc64 = loc("CWE401_Memory_Leak__char_malloc_18.c":103:5)
#loc65 = loc("CWE401_Memory_Leak__char_malloc_18.c":104:5)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_18.c":104:45)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_18.c":105:5)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_18.c":108:5)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_18.c":109:5)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_18.c":109:44)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_18.c":110:5)
#loc72 = loc("CWE401_Memory_Leak__char_malloc_18.c":112:12)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_18.c":112:5)
#loc74 = loc("/usr/include/stdlib.h":687:1)
#loc75 = loc("/usr/include/stdlib.h":687:32)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_18.c":47:1)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_18.c":63:1)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_18.c":49:5)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_18.c":49:12)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_18.c":50:12)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_18.c":50:5)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_18.c":51:5)
#loc83 = loc("CWE401_Memory_Leak__char_malloc_18.c":51:10)
#loc84 = loc("CWE401_Memory_Leak__char_malloc_18.c":52:1)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_18.c":54:20)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_18.c":54:27)
#loc87 = loc("CWE401_Memory_Leak__char_malloc_18.c":54:31)
#loc88 = loc("CWE401_Memory_Leak__char_malloc_18.c":54:42)
#loc89 = loc("CWE401_Memory_Leak__char_malloc_18.c":54:43)
#loc90 = loc("CWE401_Memory_Leak__char_malloc_18.c":54:5)
#loc91 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:5)
#loc92 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:33)
#loc93 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:9)
#loc94 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:17)
#loc95 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:23)
#loc96 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:24)
#loc97 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:30)
#loc98 = loc("CWE401_Memory_Leak__char_malloc_18.c":55:29)
#loc99 = loc("CWE401_Memory_Leak__char_malloc_18.c":57:5)
#loc100 = loc("CWE401_Memory_Leak__char_malloc_18.c":57:12)
#loc101 = loc("CWE401_Memory_Leak__char_malloc_18.c":57:18)
#loc102 = loc("CWE401_Memory_Leak__char_malloc_18.c":58:15)
#loc103 = loc("CWE401_Memory_Leak__char_malloc_18.c":58:5)
#loc104 = loc("CWE401_Memory_Leak__char_malloc_18.c":59:5)
#loc105 = loc("CWE401_Memory_Leak__char_malloc_18.c":59:10)
#loc106 = loc("CWE401_Memory_Leak__char_malloc_18.c":60:1)
#loc107 = loc("CWE401_Memory_Leak__char_malloc_18.c":62:5)
#loc108 = loc("CWE401_Memory_Leak__char_malloc_18.c":62:10)
#loc109 = loc("CWE401_Memory_Leak__char_malloc_18.c":66:1)
#loc110 = loc("CWE401_Memory_Leak__char_malloc_18.c":81:1)
#loc111 = loc("CWE401_Memory_Leak__char_malloc_18.c":68:5)
#loc112 = loc("CWE401_Memory_Leak__char_malloc_18.c":68:12)
#loc113 = loc("CWE401_Memory_Leak__char_malloc_18.c":69:12)
#loc114 = loc("CWE401_Memory_Leak__char_malloc_18.c":69:5)
#loc115 = loc("CWE401_Memory_Leak__char_malloc_18.c":70:5)
#loc116 = loc("CWE401_Memory_Leak__char_malloc_18.c":70:10)
#loc117 = loc("CWE401_Memory_Leak__char_malloc_18.c":71:1)
#loc118 = loc("CWE401_Memory_Leak__char_malloc_18.c":73:20)
#loc119 = loc("CWE401_Memory_Leak__char_malloc_18.c":73:5)
#loc120 = loc("CWE401_Memory_Leak__char_malloc_18.c":75:5)
#loc121 = loc("CWE401_Memory_Leak__char_malloc_18.c":75:12)
#loc122 = loc("CWE401_Memory_Leak__char_malloc_18.c":75:18)
#loc123 = loc("CWE401_Memory_Leak__char_malloc_18.c":76:15)
#loc124 = loc("CWE401_Memory_Leak__char_malloc_18.c":76:5)
#loc125 = loc("CWE401_Memory_Leak__char_malloc_18.c":77:5)
#loc126 = loc("CWE401_Memory_Leak__char_malloc_18.c":77:10)
#loc127 = loc("CWE401_Memory_Leak__char_malloc_18.c":78:1)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc8, #loc9])
#loc132 = loc(fused[#loc10, #loc11])
#loc133 = loc(fused[#loc12, #loc13])
#loc134 = loc(fused[#loc15, #loc14])
#loc135 = loc(fused[#loc16, #loc17])
#loc136 = loc(fused[#loc21, #loc22])
#loc137 = loc(fused[#loc20, #loc22])
#loc138 = loc(fused[#loc19, #loc23])
#loc139 = loc(fused[#loc24, #loc23])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc27, #loc28])
#loc142 = loc(fused[#loc29, #loc26])
#loc143 = loc(fused[#loc37, #loc38])
#loc144 = loc(fused[#loc40, #loc41])
#loc145 = loc(fused[#loc42, #loc43])
#loc146 = loc(fused[#loc44, #loc45])
#loc147 = loc(fused[#loc46, #loc47])
#loc148 = loc(fused[#loc48, #loc49])
#loc149 = loc(fused[#loc54, #loc55])
#loc152 = loc(fused[#loc65, #loc66])
#loc153 = loc(fused[#loc69, #loc70])
#loc154 = loc(fused[#loc73, #loc72])
#loc155 = loc(fused[#loc74, #loc75])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc78, #loc79])
#loc158 = loc(fused[#loc81, #loc80])
#loc159 = loc(fused[#loc82, #loc83])
#loc160 = loc(fused[#loc87, #loc88])
#loc161 = loc(fused[#loc86, #loc88])
#loc162 = loc(fused[#loc85, #loc89])
#loc163 = loc(fused[#loc90, #loc89])
#loc164 = loc(fused[#loc91, #loc92])
#loc165 = loc(fused[#loc93, #loc94])
#loc166 = loc(fused[#loc95, #loc92])
#loc167 = loc(fused[#loc104, #loc105])
#loc168 = loc(fused[#loc109, #loc110])
#loc169 = loc(fused[#loc111, #loc112])
#loc170 = loc(fused[#loc114, #loc113])
#loc171 = loc(fused[#loc115, #loc116])
#loc172 = loc(fused[#loc119, #loc118])
#loc173 = loc(fused[#loc125, #loc126])
