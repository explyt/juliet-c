!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc158)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc161)
  cir.func private @printIntLine(!s32i) loc(#loc162)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_10_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc158)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc167)
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc169)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
          cir.store %8, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc167)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc28)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc29)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc172)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc33)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc173)
          } loc(#loc171)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc22)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
          cir.store %10, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
          %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc35)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc36)
          cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
          %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc39)
        } loc(#loc166)
      } loc(#loc165)
    } loc(#loc164)
    cir.return loc(#loc12)
  } loc(#loc163)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc174)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc177)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc55)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc184)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc185)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc184)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc71)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc72)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc188)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc74)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc76)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
            } loc(#loc189)
          } loc(#loc187)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc190)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
          cir.store %12, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc85)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc194)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc87)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc89)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
            } loc(#loc195)
          } loc(#loc193)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc90)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc196)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
          cir.store %15, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc197)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
            %21 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc99)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
            cir.store %22, %20 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
            %23 = cir.load deref %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
            %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc102)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc103)
          } loc(#loc198)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc104)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc105)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc105)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc104)
        } loc(#loc182)
      } loc(#loc181)
    } loc(#loc180)
    cir.return loc(#loc52)
  } loc(#loc179)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc158)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc110)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc205)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc118)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc206)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc205)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc209)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc126)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc127)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc128)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
            } loc(#loc210)
          } loc(#loc208)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc129)
          %10 = cir.const #cir.int<4> : !u64i loc(#loc211)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc212)
          cir.store %12, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc213)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc215)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc139)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc140)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc141)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
            } loc(#loc216)
          } loc(#loc214)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc142)
          %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc217)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
          %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc146)
          cir.store %15, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
          cir.scope {
            %20 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc220)
            %21 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
            cir.store %22, %20 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc220)
            %23 = cir.load deref %20 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
            %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc155)
          } loc(#loc219)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc156)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc157)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc201)
    cir.return loc(#loc107)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":32:1)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":22:5)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":31:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":22:8)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":23:5)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":24:9)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":30:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":25:13)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":25:60)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":27:13)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":27:27)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":25:40)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":25:47)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":25:59)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:13)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:44)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:17)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:28)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:34)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:35)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:41)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":26:40)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":27:26)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":28:13)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":28:18)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":29:27)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":29:26)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":29:13)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":89:1)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":93:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":91:5)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":91:11)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":92:5)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":92:11)
#loc46 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc47 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":44:19)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":39:1)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":64:1)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":41:5)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":63:5)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":41:8)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":42:5)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":45:5)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":47:5)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":44:9)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":48:9)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":62:9)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":49:13)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":49:19)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":50:13)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":50:60)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":50:40)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":50:47)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":50:59)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:13)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:44)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:17)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:28)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:34)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:35)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:41)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":51:40)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":53:27)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":53:34)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":53:44)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":53:45)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":53:13)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:13)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:41)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:17)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:25)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:31)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:32)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:38)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":54:37)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":55:21)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":55:14)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":55:13)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":56:24)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":56:14)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":56:13)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":57:13)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":60:13)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":58:17)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":58:31)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":58:30)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":59:31)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":59:30)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":59:17)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":61:13)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":61:18)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":67:1)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":87:1)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":69:5)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":86:5)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":69:8)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":70:5)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":71:9)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":85:9)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":72:13)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":72:19)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":73:13)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":73:60)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":73:40)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":73:47)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":73:59)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:13)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:44)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:17)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:28)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:34)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:35)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:41)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":74:40)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":76:27)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":76:34)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":76:44)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":76:45)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":76:13)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:13)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:41)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:17)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:25)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:31)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:32)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:38)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":77:37)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":78:21)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":78:14)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":78:13)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":79:24)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":79:14)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":79:13)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":80:13)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":83:13)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":81:17)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":81:31)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":81:30)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":82:31)
#loc154 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":82:30)
#loc155 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":82:17)
#loc156 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":84:13)
#loc157 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_10.c":84:18)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc7, #loc8])
#loc162 = loc(fused[#loc9, #loc10])
#loc163 = loc(fused[#loc11, #loc12])
#loc164 = loc(fused[#loc13, #loc14])
#loc165 = loc(fused[#loc16, #loc14])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc21, #loc22])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc23, #loc20])
#loc171 = loc(fused[#loc26, #loc27])
#loc172 = loc(fused[#loc28, #loc29])
#loc173 = loc(fused[#loc30, #loc27])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc42, #loc43])
#loc176 = loc(fused[#loc44, #loc45])
#loc177 = loc(fused[#loc46, #loc47])
#loc178 = loc(fused[#loc48, #loc49])
#loc179 = loc(fused[#loc51, #loc52])
#loc180 = loc(fused[#loc53, #loc54])
#loc181 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc182 = loc(fused[#loc60, #loc61])
#loc183 = loc(fused[#loc62, #loc63])
#loc184 = loc(fused[#loc64, #loc65])
#loc185 = loc(fused[#loc67, #loc68])
#loc186 = loc(fused[#loc66, #loc65])
#loc187 = loc(fused[#loc69, #loc70])
#loc188 = loc(fused[#loc71, #loc72])
#loc189 = loc(fused[#loc73, #loc70])
#loc190 = loc(fused[#loc78, #loc79])
#loc191 = loc(fused[#loc77, #loc80])
#loc192 = loc(fused[#loc81, #loc80])
#loc193 = loc(fused[#loc82, #loc83])
#loc194 = loc(fused[#loc84, #loc85])
#loc195 = loc(fused[#loc86, #loc83])
#loc196 = loc(fused[#loc92, #loc90])
#loc197 = loc(fused[#loc95, #loc93])
#loc198 = loc(fused[#loc96, #loc97])
#loc199 = loc(fused[#loc98, #loc99])
#loc200 = loc(fused[#loc106, #loc107])
#loc201 = loc(fused[#loc108, #loc109])
#loc202 = loc(fused[#loc111, #loc109])
#loc203 = loc(fused[#loc112, #loc113])
#loc204 = loc(fused[#loc114, #loc115])
#loc205 = loc(fused[#loc116, #loc117])
#loc206 = loc(fused[#loc119, #loc120])
#loc207 = loc(fused[#loc118, #loc117])
#loc208 = loc(fused[#loc121, #loc122])
#loc209 = loc(fused[#loc123, #loc124])
#loc210 = loc(fused[#loc125, #loc122])
#loc211 = loc(fused[#loc130, #loc131])
#loc212 = loc(fused[#loc129, #loc132])
#loc213 = loc(fused[#loc133, #loc132])
#loc214 = loc(fused[#loc134, #loc135])
#loc215 = loc(fused[#loc136, #loc137])
#loc216 = loc(fused[#loc138, #loc135])
#loc217 = loc(fused[#loc144, #loc142])
#loc218 = loc(fused[#loc147, #loc145])
#loc219 = loc(fused[#loc148, #loc149])
#loc220 = loc(fused[#loc150, #loc151])
