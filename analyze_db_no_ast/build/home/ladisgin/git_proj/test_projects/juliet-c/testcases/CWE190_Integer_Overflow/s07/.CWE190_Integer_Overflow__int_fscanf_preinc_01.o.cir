!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc73)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc74)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc75)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fscanf_preinc_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc14)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc14)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc80)
      %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc20)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc80)
      %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc23)
    } loc(#loc79)
    cir.return loc(#loc9)
  } loc(#loc76)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fscanf_preinc_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc83)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc84)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc82)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc86)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc34)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc36)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc90)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc42)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc90)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc45)
    } loc(#loc89)
    cir.return loc(#loc31)
  } loc(#loc85)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc55)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc74)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc57)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc57)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc55)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc61)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc97)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc62)
      cir.if %11 {
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc99)
        %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc68)
        cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc99)
        %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc71)
      } else {
        %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc48)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } loc(#loc98)
    } loc(#loc96)
    cir.return loc(#loc50)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":28:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":22:1)
#loc9 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":35:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":24:5)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":24:9)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":26:12)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":26:5)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":28:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":28:12)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":29:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":34:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":32:9)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":32:22)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":31:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":31:11)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":33:22)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":33:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":78:1)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":82:1)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":80:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":80:13)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":81:5)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":81:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":42:1)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":55:1)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":44:5)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":44:9)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":46:12)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":46:5)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":48:12)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":48:5)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":49:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":54:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":52:9)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":52:22)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":51:9)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":51:11)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":53:22)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":53:9)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":74:19)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":58:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":76:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":60:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":60:9)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":62:12)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":62:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":64:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":64:12)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":64:19)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":66:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":75:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":66:9)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":66:16)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":66:14)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":67:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":71:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":73:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":69:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":69:22)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":68:9)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":68:11)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":70:22)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":70:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_01.c":74:9)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc6, #loc7])
#loc76 = loc(fused[#loc8, #loc9])
#loc77 = loc(fused[#loc10, #loc11])
#loc78 = loc(fused[#loc13, #loc12])
#loc79 = loc(fused[#loc16, #loc17])
#loc80 = loc(fused[#loc18, #loc19])
#loc81 = loc(fused[#loc20, #loc21])
#loc82 = loc(fused[#loc24, #loc25])
#loc83 = loc(fused[#loc26, #loc27])
#loc84 = loc(fused[#loc28, #loc29])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc35, #loc34])
#loc88 = loc(fused[#loc37, #loc36])
#loc89 = loc(fused[#loc38, #loc39])
#loc90 = loc(fused[#loc40, #loc41])
#loc91 = loc(fused[#loc42, #loc43])
#loc92 = loc(fused[#loc46, #loc47])
#loc93 = loc(fused[#loc49, #loc50])
#loc94 = loc(fused[#loc51, #loc52])
#loc95 = loc(fused[#loc54, #loc53])
#loc96 = loc(fused[#loc58, #loc59])
#loc97 = loc(fused[#loc60, #loc61])
#loc98 = loc(fused[#loc63, #loc64, #loc65, #loc59])
#loc99 = loc(fused[#loc66, #loc67])
#loc100 = loc(fused[#loc68, #loc69])
