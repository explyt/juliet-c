!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":24:21)
#loc6 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":24:25)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":126:10)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":126:14)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":126:20)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":126:32)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":59:25)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":59:29)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":77:25)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":77:29)
#loc155 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc66, #loc67])
#loc178 = loc(fused[#loc68, #loc69])
#loc183 = loc(fused[#loc86, #loc87])
#loc191 = loc(fused[#loc108, #loc109])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc153)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc155)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    %3 = cir.binop(div, %1, %2) : !s32i loc(#loc156)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc10)
    cir.return loc(#loc4)
  } loc(#loc154)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc163)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc27)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc36)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc36)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc36)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc36)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc36)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc36)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc36)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc36)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc44)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc47)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc48)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc48)
    cir.return loc(#loc21)
  } loc(#loc161)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc171)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc174)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc73)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_divide_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE369_Divide_by_Zero__int_fgets_divide_44_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_divide_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE369_Divide_by_Zero__int_fgets_divide_44_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %17 : !s32i loc(#loc181)
  } loc(#loc176)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc86, #loc87])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %3 = cir.binop(div, %1, %2) : !s32i loc(#loc184)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc91)
    cir.return loc(#loc85)
  } loc(#loc182)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc187)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc99)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc101)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc103)
    cir.return loc(#loc93)
  } loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc105)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc108, #loc109])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc191)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc114)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc193)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc118)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %6 = cir.binop(div, %4, %5) : !s32i loc(#loc195)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc120)
      } else {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc105)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc121)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc107)
  } loc(#loc190)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc198)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc129)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc201)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc201)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc201)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc138)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc138)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc138)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc138)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc138)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc138)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc138)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc138)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc139)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc203)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc146)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc149)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc149)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc150)
        } loc(#loc204)
      } loc(#loc202)
    } loc(#loc200)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc151)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc151)
    cir.return loc(#loc123)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":24:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":28:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":25:1)
#loc8 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":27:18)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":27:24)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":27:5)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":47:23)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":30:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":52:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":32:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":32:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":34:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":34:29)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":36:13)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":36:12)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":36:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":37:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":49:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":38:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":38:45)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":40:9)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":48:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":40:19)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":40:32)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":40:49)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":40:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":40:59)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":41:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":44:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":46:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":43:25)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":43:20)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":43:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":43:36)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":47:13)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":51:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":51:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":112:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":116:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":114:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":114:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":115:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":115:13)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":131:15)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":133:15)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":136:15)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":138:15)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":126:1)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":141:1)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":127:1)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":129:27)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":129:22)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":129:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":131:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":132:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":132:53)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":133:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":136:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":137:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":137:52)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":138:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":140:12)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":140:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":59:1)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":63:1)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":60:1)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":62:18)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":62:24)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":62:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":65:1)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":74:1)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":67:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":67:9)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":68:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":68:29)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":70:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":70:12)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":70:5)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":72:12)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":72:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":73:5)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":73:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":86:19)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":77:1)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":88:1)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":78:1)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":80:5)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":87:5)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":80:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":80:17)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":81:5)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":83:5)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":85:5)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":82:22)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":82:28)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":82:9)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":86:9)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":90:1)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":110:1)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":92:5)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":92:9)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":93:5)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":93:29)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":95:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":95:12)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":95:5)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":96:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":108:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":97:9)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":97:45)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":99:9)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":107:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":99:19)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":99:32)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":99:49)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":99:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":99:59)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":100:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":103:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":105:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":102:25)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":102:20)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":102:13)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":102:36)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":106:23)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":106:13)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":109:5)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_divide_44.c":109:13)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc8, #loc9])
#loc157 = loc(fused[#loc11, #loc12])
#loc158 = loc(fused[#loc13, #loc14])
#loc159 = loc(fused[#loc15, #loc16])
#loc160 = loc(fused[#loc17, #loc18])
#loc161 = loc(fused[#loc20, #loc21])
#loc162 = loc(fused[#loc22, #loc23])
#loc163 = loc(fused[#loc24, #loc25])
#loc164 = loc(fused[#loc28, #loc26])
#loc165 = loc(fused[#loc29, #loc30])
#loc166 = loc(fused[#loc31, #loc32])
#loc167 = loc(fused[#loc33, #loc34])
#loc168 = loc(fused[#loc38, #loc39])
#loc169 = loc(fused[#loc40, #loc41, #loc42, #loc34])
#loc170 = loc(fused[#loc45, #loc46])
#loc171 = loc(fused[#loc50, #loc51])
#loc172 = loc(fused[#loc52, #loc53])
#loc173 = loc(fused[#loc54, #loc55])
#loc174 = loc(fused[#loc56, #loc57])
#loc175 = loc(fused[#loc58, #loc59])
#loc176 = loc(fused[#loc64, #loc65])
#loc179 = loc(fused[#loc75, #loc76])
#loc180 = loc(fused[#loc79, #loc80])
#loc181 = loc(fused[#loc83, #loc82])
#loc182 = loc(fused[#loc84, #loc85])
#loc184 = loc(fused[#loc89, #loc90])
#loc185 = loc(fused[#loc92, #loc93])
#loc186 = loc(fused[#loc94, #loc95])
#loc187 = loc(fused[#loc96, #loc97])
#loc188 = loc(fused[#loc100, #loc98])
#loc189 = loc(fused[#loc102, #loc101])
#loc190 = loc(fused[#loc106, #loc107])
#loc192 = loc(fused[#loc111, #loc112])
#loc193 = loc(fused[#loc113, #loc114])
#loc194 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc195 = loc(fused[#loc118, #loc119])
#loc196 = loc(fused[#loc122, #loc123])
#loc197 = loc(fused[#loc124, #loc125])
#loc198 = loc(fused[#loc126, #loc127])
#loc199 = loc(fused[#loc130, #loc128])
#loc200 = loc(fused[#loc131, #loc132])
#loc201 = loc(fused[#loc133, #loc134])
#loc202 = loc(fused[#loc135, #loc136])
#loc203 = loc(fused[#loc140, #loc141])
#loc204 = loc(fused[#loc142, #loc143, #loc144, #loc136])
#loc205 = loc(fused[#loc147, #loc148])
