!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
  cir.func private  @printIntLine(!s32i) loc(#loc110)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc111)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int_malloc_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc114)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc115)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc116)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc117)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
    cir.scope {
      %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc21)
      cir.if %10 {
        %11 = cir.const #cir.int<5> : !s32i loc(#loc23)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc26)
        cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc121)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc29)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc30)
        %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc32)
        cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
      } loc(#loc120)
    } loc(#loc119)
    cir.return loc(#loc8)
  } loc(#loc112)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int_malloc_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc122)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc41)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc46)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc48)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc49)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc129)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc130)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc131)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc56)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc56)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      } else {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc64)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc65)
          cir.if %15 {
            %16 = cir.const #cir.int<5> : !s32i loc(#loc67)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc69)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc70)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc138)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc72)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc73)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc71)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc74)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc75)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc76)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
          } loc(#loc137)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc133)
    cir.return loc(#loc43)
  } loc(#loc126)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc84)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc142)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc143)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc144)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    cir.scope {
      %9 = cir.const #cir.int<1> : !s32i loc(#loc91)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc91)
      cir.if %10 {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc96)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc97)
          cir.if %15 {
            %16 = cir.const #cir.int<5> : !s32i loc(#loc99)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc101)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc102)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc151)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc105)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc106)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc107)
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc108)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc150)
        } loc(#loc148)
      } loc(#loc147)
    } loc(#loc146)
    cir.return loc(#loc78)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":36:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":25:11)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":26:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":26:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":28:19)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":28:26)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":28:28)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":28:38)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":28:39)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":28:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":29:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":35:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":29:8)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":30:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":32:19)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":32:9)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":32:14)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":32:15)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":33:22)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":33:27)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":33:28)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":33:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":34:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":34:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":85:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":89:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":87:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":87:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":88:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":88:14)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":52:19)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":43:1)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":64:1)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":45:5)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":45:11)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":46:12)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":46:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":48:19)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":48:26)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":48:28)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":48:38)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":48:39)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":48:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":49:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":63:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":49:8)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":50:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":53:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":55:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":52:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":57:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":62:9)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":57:13)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":57:21)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":57:18)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":58:9)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":59:23)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":59:13)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":59:18)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":59:19)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":60:26)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":60:31)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":60:32)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":60:13)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":61:13)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":61:18)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":67:1)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":83:1)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":69:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":69:11)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":70:12)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":70:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":72:19)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":72:26)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":72:28)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":72:38)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":72:39)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":72:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":73:5)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":82:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":73:8)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":74:5)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":76:9)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":81:9)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":76:13)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":76:21)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":76:18)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":77:9)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":78:23)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":78:13)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":78:18)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":78:19)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":79:26)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":79:31)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":79:32)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":79:13)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":80:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int_malloc_02.c":80:18)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc9, #loc10])
#loc114 = loc(fused[#loc12, #loc11])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc14, #loc16])
#loc117 = loc(fused[#loc13, #loc17])
#loc118 = loc(fused[#loc18, #loc17])
#loc119 = loc(fused[#loc19, #loc20])
#loc120 = loc(fused[#loc22, #loc20])
#loc121 = loc(fused[#loc24, #loc23])
#loc122 = loc(fused[#loc33, #loc34])
#loc123 = loc(fused[#loc35, #loc36])
#loc124 = loc(fused[#loc37, #loc38])
#loc125 = loc(fused[#loc39, #loc40])
#loc126 = loc(fused[#loc42, #loc43])
#loc127 = loc(fused[#loc44, #loc45])
#loc128 = loc(fused[#loc47, #loc46])
#loc129 = loc(fused[#loc50, #loc51])
#loc130 = loc(fused[#loc49, #loc51])
#loc131 = loc(fused[#loc48, #loc52])
#loc132 = loc(fused[#loc53, #loc52])
#loc133 = loc(fused[#loc54, #loc55])
#loc134 = loc(fused[#loc57, #loc58, #loc59, #loc55])
#loc135 = loc(fused[#loc61, #loc62])
#loc136 = loc(fused[#loc63, #loc64])
#loc137 = loc(fused[#loc66, #loc62])
#loc138 = loc(fused[#loc68, #loc67])
#loc139 = loc(fused[#loc77, #loc78])
#loc140 = loc(fused[#loc79, #loc80])
#loc141 = loc(fused[#loc82, #loc81])
#loc142 = loc(fused[#loc85, #loc86])
#loc143 = loc(fused[#loc84, #loc86])
#loc144 = loc(fused[#loc83, #loc87])
#loc145 = loc(fused[#loc88, #loc87])
#loc146 = loc(fused[#loc89, #loc90])
#loc147 = loc(fused[#loc92, #loc90])
#loc148 = loc(fused[#loc93, #loc94])
#loc149 = loc(fused[#loc95, #loc96])
#loc150 = loc(fused[#loc98, #loc94])
#loc151 = loc(fused[#loc100, #loc99])
