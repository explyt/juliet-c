!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":130:10)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":130:14)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":130:20)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":130:32)
#loc237 = loc(fused[#loc79, #loc80])
#loc238 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc205)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc211)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_07_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc205)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc214)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc217)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc28)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc29)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc29)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc218)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc219)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
          cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc222)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc39)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
            } loc(#loc223)
          } loc(#loc221)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc43)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc44)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc46)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc46)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc224)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc225)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc229)
            cir.if %30 {
              %31 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc57)
              %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc14)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc14)
              %35 = cir.call @strcpy(%32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
              %36 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc60)
              %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
              cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
            } loc(#loc230)
          } loc(#loc228)
        } loc(#loc216)
      } loc(#loc215)
    } loc(#loc213)
    cir.return loc(#loc18)
  } loc(#loc212)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc231)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc234)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_07_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_07_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.return %17 : !s32i loc(#loc241)
  } loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc205)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc103)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc244)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc247)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc248)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc115)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc115)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc249)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc250)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc251)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc253)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc125)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
            } loc(#loc254)
          } loc(#loc252)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc126)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc128)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc128)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc131)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc133)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc133)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc255)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc256)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc146)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc148)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc148)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc150)
            } loc(#loc261)
          } loc(#loc259)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc151)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
        } loc(#loc246)
      } loc(#loc245)
    } loc(#loc243)
    cir.return loc(#loc99)
  } loc(#loc242)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc205)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc158)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc265)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc268)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc269)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc166)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc167)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc167)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc270)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc271)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc274)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc176)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc177)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
            } loc(#loc275)
          } loc(#loc273)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc178)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc180)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc180)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc178)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc182)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc183)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc185)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc185)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc276)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc277)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc183)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc278)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc194)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc281)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc198)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc200)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc200)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc202)
            } loc(#loc282)
          } loc(#loc280)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc203)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc203)
        } loc(#loc267)
      } loc(#loc266)
    } loc(#loc264)
    cir.return loc(#loc154)
  } loc(#loc263)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":25:1)
#loc2 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":37:26)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":683:1)
#loc13 = loc("/usr/include/stdlib.h":684:14)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":44:30)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":29:1)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":50:1)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":31:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":49:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":31:8)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":31:20)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":32:5)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":33:9)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":48:9)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:13)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:58)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:35)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:42)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:46)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":34:57)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:13)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:41)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:17)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:25)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:31)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:32)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:38)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":35:37)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":37:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":37:20)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":38:23)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":38:13)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:28)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:36)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:43)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:51)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:62)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:42)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:63)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":40:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":41:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":47:13)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":41:17)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":41:25)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":42:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":44:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":44:24)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":45:27)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":45:17)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":46:17)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":46:22)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":115:1)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":119:1)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":117:5)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":117:11)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":118:5)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":118:11)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":135:15)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":137:15)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":140:15)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":142:15)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":130:1)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":145:1)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":131:1)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":133:27)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":133:22)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":133:5)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":135:5)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":136:5)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":136:53)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":137:5)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":140:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":141:5)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":141:52)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":142:5)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":144:12)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":144:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":62:19)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":57:1)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":86:1)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":59:5)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":85:5)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":59:8)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":59:20)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":60:5)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":63:5)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":65:5)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":62:9)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":66:9)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":84:9)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:58)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":69:13)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":69:20)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:35)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:42)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:46)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":67:57)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:13)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:41)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:17)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:25)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:31)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:32)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:38)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":68:37)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":71:13)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":71:20)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":71:26)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":72:23)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":72:13)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:31)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:39)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:46)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:54)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:65)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:45)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:66)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":73:13)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":76:13)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":82:13)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":76:17)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":76:28)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":77:13)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":78:24)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":78:17)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":80:17)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":80:24)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":80:30)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":81:27)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":81:17)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":83:13)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":83:18)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":89:1)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":113:1)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":91:5)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":112:5)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":91:8)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":91:20)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":92:5)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":93:9)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":111:9)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:13)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:58)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":96:13)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":96:20)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:35)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:42)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:46)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":94:57)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:13)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:41)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:17)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:25)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:31)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:32)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:38)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":95:37)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":98:13)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":98:20)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":98:26)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":99:23)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":99:13)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:31)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:39)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:46)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:54)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:65)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:45)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:66)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":100:13)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":103:13)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":109:13)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":103:17)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":103:28)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":104:13)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":105:24)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":105:17)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":107:17)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":107:24)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":107:30)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":108:27)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":108:17)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":110:13)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_char_07.c":110:18)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc10, #loc11])
#loc210 = loc(fused[#loc12, #loc13])
#loc211 = loc(fused[#loc15, #loc16])
#loc212 = loc(fused[#loc17, #loc18])
#loc213 = loc(fused[#loc19, #loc20])
#loc214 = loc(fused[#loc21, #loc22])
#loc215 = loc(fused[#loc23, #loc20])
#loc216 = loc(fused[#loc24, #loc25])
#loc217 = loc(fused[#loc26, #loc27])
#loc218 = loc(fused[#loc30, #loc31])
#loc219 = loc(fused[#loc29, #loc31])
#loc220 = loc(fused[#loc28, #loc27])
#loc221 = loc(fused[#loc32, #loc33])
#loc222 = loc(fused[#loc34, #loc35])
#loc223 = loc(fused[#loc36, #loc33])
#loc224 = loc(fused[#loc47, #loc48])
#loc225 = loc(fused[#loc49, #loc48])
#loc226 = loc(fused[#loc44, #loc50])
#loc227 = loc(fused[#loc51, #loc50])
#loc228 = loc(fused[#loc52, #loc53])
#loc229 = loc(fused[#loc54, #loc55])
#loc230 = loc(fused[#loc56, #loc53])
#loc231 = loc(fused[#loc63, #loc64])
#loc232 = loc(fused[#loc65, #loc66])
#loc233 = loc(fused[#loc67, #loc68])
#loc234 = loc(fused[#loc69, #loc70])
#loc235 = loc(fused[#loc71, #loc72])
#loc236 = loc(fused[#loc77, #loc78])
#loc239 = loc(fused[#loc88, #loc89])
#loc240 = loc(fused[#loc92, #loc93])
#loc241 = loc(fused[#loc96, #loc95])
#loc242 = loc(fused[#loc98, #loc99])
#loc243 = loc(fused[#loc100, #loc101])
#loc244 = loc(fused[#loc102, #loc103])
#loc245 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc246 = loc(fused[#loc108, #loc109])
#loc247 = loc(fused[#loc110, #loc111])
#loc248 = loc(fused[#loc112, #loc113])
#loc249 = loc(fused[#loc116, #loc117])
#loc250 = loc(fused[#loc115, #loc117])
#loc251 = loc(fused[#loc114, #loc111])
#loc252 = loc(fused[#loc118, #loc119])
#loc253 = loc(fused[#loc120, #loc121])
#loc254 = loc(fused[#loc122, #loc119])
#loc255 = loc(fused[#loc134, #loc135])
#loc256 = loc(fused[#loc136, #loc135])
#loc257 = loc(fused[#loc131, #loc137])
#loc258 = loc(fused[#loc138, #loc137])
#loc259 = loc(fused[#loc139, #loc140])
#loc260 = loc(fused[#loc141, #loc142])
#loc261 = loc(fused[#loc143, #loc140])
#loc262 = loc(fused[#loc145, #loc144])
#loc263 = loc(fused[#loc153, #loc154])
#loc264 = loc(fused[#loc155, #loc156])
#loc265 = loc(fused[#loc157, #loc158])
#loc266 = loc(fused[#loc159, #loc156])
#loc267 = loc(fused[#loc160, #loc161])
#loc268 = loc(fused[#loc162, #loc163])
#loc269 = loc(fused[#loc164, #loc165])
#loc270 = loc(fused[#loc168, #loc169])
#loc271 = loc(fused[#loc167, #loc169])
#loc272 = loc(fused[#loc166, #loc163])
#loc273 = loc(fused[#loc170, #loc171])
#loc274 = loc(fused[#loc172, #loc173])
#loc275 = loc(fused[#loc174, #loc171])
#loc276 = loc(fused[#loc186, #loc187])
#loc277 = loc(fused[#loc188, #loc187])
#loc278 = loc(fused[#loc183, #loc189])
#loc279 = loc(fused[#loc190, #loc189])
#loc280 = loc(fused[#loc191, #loc192])
#loc281 = loc(fused[#loc193, #loc194])
#loc282 = loc(fused[#loc195, #loc192])
#loc283 = loc(fused[#loc197, #loc196])
