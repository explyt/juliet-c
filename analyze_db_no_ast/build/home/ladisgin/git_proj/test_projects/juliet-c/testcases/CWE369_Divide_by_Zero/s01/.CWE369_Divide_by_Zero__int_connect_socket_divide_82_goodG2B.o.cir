!s32i = !cir.int<s, 32>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":25:67)
#loc6 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":25:74)
#loc7 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":25:78)
#loc14 = loc(fused[#loc6, #loc7])
!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_base = !cir.struct<class "CWE369_Divide_by_Zero__int_connect_socket_divide_82::CWE369_Divide_by_Zero__int_connect_socket_divide_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B = !cir.struct<class "CWE369_Divide_by_Zero__int_connect_socket_divide_82::CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B" {!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc12)
  cir.func  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_divide_8259CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B6actionEi(%arg0: !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B> loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":25:67), %arg1: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc14)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B>> loc(#loc8)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B>>, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_connect_socket_divide_823A3ACWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B> loc(#loc5)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc9)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc15)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc11)
    cir.return loc(#loc4)
  } loc(#loc13)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":25:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":29:1)
#loc8 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":26:1)
#loc9 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":28:18)
#loc10 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":28:24)
#loc11 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_82_goodG2B.cpp":28:5)
#loc12 = loc(fused[#loc1, #loc2])
#loc13 = loc(fused[#loc3, #loc4])
#loc15 = loc(fused[#loc9, #loc10])
