!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__long_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc110)
  cir.func private  @printLongLine(!s64i) loc(#loc111)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__long_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc115)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc116)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc117)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc118)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc119)
    cir.scope {
      %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc121)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc121)
      %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc23)
      cir.if %12 {
        %13 = cir.const #cir.int<5> : !s64i loc(#loc28)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc31)
        cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc123)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc34)
        %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc32)
        cir.call @printLongLine(%20) : (!s64i) -> () loc(#loc35)
        %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc36)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc37)
        cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
      } else {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc41)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc125)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc42)
          cir.if %17 {
            %18 = cir.const #cir.int<5> : !s64i loc(#loc44)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc46)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc47)
            cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc127)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc50)
            %25 = cir.load %24 : !cir.ptr<!s64i>, !s64i loc(#loc48)
            cir.call @printLongLine(%25) : (!s64i) -> () loc(#loc51)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc53)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
          } loc(#loc126)
        } loc(#loc124)
      } loc(#loc122)
    } loc(#loc120)
    cir.return loc(#loc10)
  } loc(#loc113)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__long_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc128)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc132)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc64)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc65)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc133)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc134)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc135)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc136)
    cir.scope {
      %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc138)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc138)
      %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc72)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc72)
      cir.if %12 {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc79)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc80)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc141)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc81)
          cir.if %17 {
            %18 = cir.const #cir.int<5> : !s64i loc(#loc83)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc86)
            cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc143)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc87)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc88)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc89)
            %25 = cir.load %24 : !cir.ptr<!s64i>, !s64i loc(#loc87)
            cir.call @printLongLine(%25) : (!s64i) -> () loc(#loc90)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc91)
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc92)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc92)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
          } loc(#loc142)
        } loc(#loc140)
      } else {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc95)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc96)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc145)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc97)
          cir.if %17 {
            %18 = cir.const #cir.int<5> : !s64i loc(#loc99)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc100)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc101)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc102)
            cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc147)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
            %23 = cir.const #cir.int<0> : !s32i loc(#loc104)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc105)
            %25 = cir.load %24 : !cir.ptr<!s64i>, !s64i loc(#loc103)
            cir.call @printLongLine(%25) : (!s64i) -> () loc(#loc106)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc107)
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc108)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc108)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc146)
        } loc(#loc144)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc59)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__long_malloc_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":24:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":24:35)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":46:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":25:12)
#loc13 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":28:20)
#loc16 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":28:27)
#loc17 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":28:29)
#loc18 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":28:40)
#loc19 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":28:41)
#loc20 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":28:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":29:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":45:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":29:8)
#loc24 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":29:33)
#loc25 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":35:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":37:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":32:19)
#loc29 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":32:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":32:14)
#loc31 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":32:15)
#loc32 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":33:23)
#loc33 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":33:28)
#loc34 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":33:29)
#loc35 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":33:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":34:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":34:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":39:9)
#loc39 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":44:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":39:13)
#loc41 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":39:21)
#loc42 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":39:18)
#loc43 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":40:9)
#loc44 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":41:23)
#loc45 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":41:13)
#loc46 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":41:18)
#loc47 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":41:19)
#loc48 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":42:27)
#loc49 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":42:32)
#loc50 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":42:33)
#loc51 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":42:13)
#loc52 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":43:13)
#loc53 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":43:18)
#loc54 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":82:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":85:1)
#loc56 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":84:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":84:13)
#loc58 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":54:1)
#loc59 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":80:1)
#loc60 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":56:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":56:12)
#loc62 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":57:12)
#loc63 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":57:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":59:20)
#loc65 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":59:27)
#loc66 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":59:29)
#loc67 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":59:40)
#loc68 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":59:41)
#loc69 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":59:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":60:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":79:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":60:8)
#loc73 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":60:33)
#loc74 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":61:5)
#loc75 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":69:5)
#loc76 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":71:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":63:9)
#loc78 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":68:9)
#loc79 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":63:13)
#loc80 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":63:21)
#loc81 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":63:18)
#loc82 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":64:9)
#loc83 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":65:23)
#loc84 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":65:13)
#loc85 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":65:18)
#loc86 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":65:19)
#loc87 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":66:27)
#loc88 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":66:32)
#loc89 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":66:33)
#loc90 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":66:13)
#loc91 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":67:13)
#loc92 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":67:18)
#loc93 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":73:9)
#loc94 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":78:9)
#loc95 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":73:13)
#loc96 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":73:21)
#loc97 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":73:18)
#loc98 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":74:9)
#loc99 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":75:23)
#loc100 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":75:13)
#loc101 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":75:18)
#loc102 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":75:19)
#loc103 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":76:27)
#loc104 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":76:32)
#loc105 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":76:33)
#loc106 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":76:13)
#loc107 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":77:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__long_malloc_12.c":77:18)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc9, #loc10])
#loc114 = loc(fused[#loc11, #loc12])
#loc115 = loc(fused[#loc14, #loc13])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc16, #loc18])
#loc118 = loc(fused[#loc15, #loc19])
#loc119 = loc(fused[#loc20, #loc19])
#loc120 = loc(fused[#loc21, #loc22])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc123 = loc(fused[#loc29, #loc28])
#loc124 = loc(fused[#loc38, #loc39])
#loc125 = loc(fused[#loc40, #loc41])
#loc126 = loc(fused[#loc43, #loc39])
#loc127 = loc(fused[#loc45, #loc44])
#loc128 = loc(fused[#loc54, #loc55])
#loc129 = loc(fused[#loc56, #loc57])
#loc130 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc60, #loc61])
#loc132 = loc(fused[#loc63, #loc62])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc65, #loc67])
#loc135 = loc(fused[#loc64, #loc68])
#loc136 = loc(fused[#loc69, #loc68])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc72, #loc73])
#loc139 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc140 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc79, #loc80])
#loc142 = loc(fused[#loc82, #loc78])
#loc143 = loc(fused[#loc84, #loc83])
#loc144 = loc(fused[#loc93, #loc94])
#loc145 = loc(fused[#loc95, #loc96])
#loc146 = loc(fused[#loc98, #loc94])
#loc147 = loc(fused[#loc100, #loc99])
