!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":26:21)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":26:27)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":56:26)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":56:32)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":86:26)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":86:32)
#loc147 = loc(fused[#loc11, #loc12])
#loc164 = loc(fused[#loc57, #loc58])
#loc180 = loc(fused[#loc103, #loc104])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_calloc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc143)
  cir.func private  @printIntLine(!s32i) loc(#loc144)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func internal private  @badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc13)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc143)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
      cir.if %3 {
        %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc20)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc21)
        cir.store %4, %7 : !s32i, !cir.ptr<!s32i> loc(#loc150)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc24)
        %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc22)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc25)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc26)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc27)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc149)
    } loc(#loc148)
    cir.return loc(#loc10)
  } loc(#loc146)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int_calloc_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc34)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc35)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc154)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc155)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %9 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc143)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    cir.call @badSink(%10) : (!cir.ptr<!s32i>) -> () loc(#loc43)
    cir.return loc(#loc29)
  } loc(#loc151)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int_calloc_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc158)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc54)
  cir.func internal private  @goodB2G1Sink(%arg0: !cir.ptr<!s32i> loc(fused[#loc57, #loc58])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc59)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc161)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc62)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s32i>, !s32i loc(#loc168)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc71)
          cir.if %8 {
            %9 = cir.const #cir.int<5> : !s32i loc(#loc73)
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc75)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc76)
            cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc170)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc78)
            %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc79)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc77)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc80)
            %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc81)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc82)
            cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
          } loc(#loc169)
        } loc(#loc167)
      } loc(#loc166)
    } loc(#loc165)
    cir.return loc(#loc56)
  } loc(#loc163)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc173)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc89)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc90)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc174)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc175)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %9 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc161)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    cir.call @goodB2G1Sink(%10) : (!cir.ptr<!s32i>) -> () loc(#loc98)
    cir.return loc(#loc84)
  } loc(#loc171)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc178)
  cir.func internal private  @goodB2G2Sink(%arg0: !cir.ptr<!s32i> loc(fused[#loc103, #loc104])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc180)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc105)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc178)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc108)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc113)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc114)
          cir.if %8 {
            %9 = cir.const #cir.int<5> : !s32i loc(#loc116)
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc118)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc119)
            cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc186)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc121)
            %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc122)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc123)
            %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc124)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc125)
            cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
          } loc(#loc185)
        } loc(#loc183)
      } loc(#loc182)
    } loc(#loc181)
    cir.return loc(#loc102)
  } loc(#loc179)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc130)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc189)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc132)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc133)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc190)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %9 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc178)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    cir.call @goodB2G2Sink(%10) : (!cir.ptr<!s32i>) -> () loc(#loc141)
    cir.return loc(#loc127)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_calloc_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":24:1)
#loc4 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":24:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":26:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":35:1)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":27:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":28:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":34:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":28:8)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":29:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":31:19)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":31:9)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":31:14)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":31:15)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":32:22)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":32:27)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":32:28)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":32:9)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":33:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":33:14)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":37:1)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":45:1)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":39:5)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":39:11)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":40:12)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":40:5)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":42:19)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":42:26)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":42:29)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":42:39)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":42:40)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":42:5)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":43:17)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":43:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":44:13)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":44:5)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":110:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":114:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":112:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":112:14)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":113:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":113:14)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":52:1)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":52:29)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":61:19)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":56:1)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":73:1)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":57:1)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":58:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":72:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":58:8)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":59:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":62:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":64:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":61:9)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":66:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":71:9)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":66:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":66:21)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":66:18)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":67:9)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":68:23)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":68:13)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":68:18)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":68:19)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":69:26)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":69:31)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":69:32)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":69:13)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":70:13)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":70:18)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":75:1)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":83:1)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":77:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":77:11)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":78:12)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":78:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":80:19)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":80:26)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":80:29)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":80:39)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":80:40)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":80:5)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":81:22)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":81:5)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":82:18)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":82:5)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":53:1)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":53:29)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":86:1)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":98:1)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":87:1)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":88:5)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":97:5)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":88:8)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":89:5)
#loc110 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":91:9)
#loc111 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":96:9)
#loc112 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":91:13)
#loc113 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":91:21)
#loc114 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":91:18)
#loc115 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":92:9)
#loc116 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":93:23)
#loc117 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":93:13)
#loc118 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":93:18)
#loc119 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":93:19)
#loc120 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":94:26)
#loc121 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":94:31)
#loc122 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":94:32)
#loc123 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":94:13)
#loc124 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":95:13)
#loc125 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":95:18)
#loc126 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":100:1)
#loc127 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":108:1)
#loc128 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":102:5)
#loc129 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":102:11)
#loc130 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":103:12)
#loc131 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":103:5)
#loc132 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":105:19)
#loc133 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":105:26)
#loc134 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":105:29)
#loc135 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":105:39)
#loc136 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":105:40)
#loc137 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":105:5)
#loc138 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":106:22)
#loc139 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":106:5)
#loc140 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":107:18)
#loc141 = loc("CWE690_NULL_Deref_From_Return__int_calloc_21.c":107:5)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc14, #loc15])
#loc149 = loc(fused[#loc17, #loc15])
#loc150 = loc(fused[#loc19, #loc18])
#loc151 = loc(fused[#loc28, #loc29])
#loc152 = loc(fused[#loc30, #loc31])
#loc153 = loc(fused[#loc33, #loc32])
#loc154 = loc(fused[#loc36, #loc37])
#loc155 = loc(fused[#loc34, #loc38])
#loc156 = loc(fused[#loc39, #loc38])
#loc157 = loc(fused[#loc41, #loc40])
#loc158 = loc(fused[#loc44, #loc45])
#loc159 = loc(fused[#loc46, #loc47])
#loc160 = loc(fused[#loc48, #loc49])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc55, #loc56])
#loc165 = loc(fused[#loc60, #loc61])
#loc166 = loc(fused[#loc63, #loc64, #loc65, #loc61])
#loc167 = loc(fused[#loc67, #loc68])
#loc168 = loc(fused[#loc69, #loc70])
#loc169 = loc(fused[#loc72, #loc68])
#loc170 = loc(fused[#loc74, #loc73])
#loc171 = loc(fused[#loc83, #loc84])
#loc172 = loc(fused[#loc85, #loc86])
#loc173 = loc(fused[#loc88, #loc87])
#loc174 = loc(fused[#loc91, #loc92])
#loc175 = loc(fused[#loc89, #loc93])
#loc176 = loc(fused[#loc94, #loc93])
#loc177 = loc(fused[#loc96, #loc95])
#loc178 = loc(fused[#loc99, #loc100])
#loc179 = loc(fused[#loc101, #loc102])
#loc181 = loc(fused[#loc106, #loc107])
#loc182 = loc(fused[#loc109, #loc107])
#loc183 = loc(fused[#loc110, #loc111])
#loc184 = loc(fused[#loc112, #loc113])
#loc185 = loc(fused[#loc115, #loc111])
#loc186 = loc(fused[#loc117, #loc116])
#loc187 = loc(fused[#loc126, #loc127])
#loc188 = loc(fused[#loc128, #loc129])
#loc189 = loc(fused[#loc131, #loc130])
#loc190 = loc(fused[#loc134, #loc135])
#loc191 = loc(fused[#loc132, #loc136])
#loc192 = loc(fused[#loc137, #loc136])
#loc193 = loc(fused[#loc139, #loc138])
