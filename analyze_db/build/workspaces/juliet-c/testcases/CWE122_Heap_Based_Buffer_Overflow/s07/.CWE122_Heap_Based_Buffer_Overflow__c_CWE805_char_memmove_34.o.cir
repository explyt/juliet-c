!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType = !cir.record<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc142)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc18)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc147)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc148)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc30)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc153)
    } loc(#loc151)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc31)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %16 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
      %18 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
      cir.scope {
        %20 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc159)
        %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
        %23 = cir.const #cir.int<67> : !s32i loc(#loc48)
        %24 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc50)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc49)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc49)
        cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
        %28 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc53)
        %30 = cir.const #cir.int<100> : !s32i loc(#loc54)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc54)
        %33 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc56)
        cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc161)
        %35 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
        %37 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
        %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc59)
        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc59)
        %41 = cir.const #cir.int<1> : !u64i loc(#loc162)
        %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc163)
        cir.libc.memmove %42 bytes from %38 to %36 : !cir.ptr<!void>, !u64i loc(#loc164)
        %43 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc64)
        %45 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %46 = cir.const #cir.int<100> : !s32i loc(#loc66)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc67)
        %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc66)
        %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc68)
        cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc165)
        %50 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc70)
        %51 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc71)
        %52 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
        %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
        cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc10)
  } loc(#loc143)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc85)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc86)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc172)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc173)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc98)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
      } loc(#loc178)
    } loc(#loc176)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc99)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc179)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %16 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
      %18 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
      cir.store %19, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
      cir.scope {
        %20 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc184)
        %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
        %23 = cir.const #cir.int<67> : !s32i loc(#loc114)
        %24 = cir.const #cir.int<100> : !s32i loc(#loc115)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc115)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc115)
        cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
        %28 = cir.const #cir.int<0> : !s32i loc(#loc119)
        %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc119)
        %30 = cir.const #cir.int<100> : !s32i loc(#loc120)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc120)
        %33 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
        %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc122)
        cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc186)
        %35 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
        %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
        %37 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
        %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc125)
        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc125)
        %41 = cir.const #cir.int<1> : !u64i loc(#loc187)
        %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc188)
        cir.libc.memmove %42 bytes from %38 to %36 : !cir.ptr<!void>, !u64i loc(#loc189)
        %43 = cir.const #cir.int<0> : !s32i loc(#loc130)
        %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc130)
        %45 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
        %46 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc132)
        %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc134)
        cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc190)
        %50 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc136)
        %51 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc137)
        %52 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
        %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
        cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
      } loc(#loc183)
    } loc(#loc181)
    cir.return loc(#loc78)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":29:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":52:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":31:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":32:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":32:75)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":33:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":33:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":35:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":35:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":35:30)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":35:41)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":35:42)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":35:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:30)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":36:29)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":37:15)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":37:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":37:10)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":37:11)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":38:26)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":23:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":38:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":39:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":51:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":40:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":40:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":24:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":41:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":50:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":42:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":42:28)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":43:20)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":43:28)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":43:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":43:37)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":43:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":43:38)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":44:29)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":44:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":44:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":44:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:27)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:35)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:39)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:50)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":46:51)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":47:27)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":47:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":47:18)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":47:22)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":47:23)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":48:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":48:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":49:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":49:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":84:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":87:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":86:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":86:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":59:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":82:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":61:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":61:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":62:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":62:75)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":63:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":63:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":65:20)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":65:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":65:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":65:42)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":65:43)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":65:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:33)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:23)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:30)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":66:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":67:15)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":67:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":67:10)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":67:11)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":68:26)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":68:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":69:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":81:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":70:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":70:31)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":71:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":80:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":72:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":72:28)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":73:20)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":73:28)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":73:33)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":73:37)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":73:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":73:38)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":74:29)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":74:20)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":74:24)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":74:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:21)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:27)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:35)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:39)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:50)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":76:51)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":77:27)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":77:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":77:18)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":77:22)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":77:23)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":78:23)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":78:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":79:13)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_34.c":79:18)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc16, #loc15])
#loc147 = loc(fused[#loc19, #loc20])
#loc148 = loc(fused[#loc18, #loc20])
#loc149 = loc(fused[#loc17, #loc21])
#loc150 = loc(fused[#loc22, #loc21])
#loc151 = loc(fused[#loc23, #loc24])
#loc152 = loc(fused[#loc25, #loc26])
#loc153 = loc(fused[#loc27, #loc24])
#loc154 = loc(fused[#loc32, #loc31])
#loc155 = loc(fused[#loc37, #loc35])
#loc156 = loc(fused[#loc38, #loc39])
#loc157 = loc(fused[#loc40, #loc41])
#loc158 = loc(fused[#loc43, #loc44])
#loc159 = loc(fused[#loc45, #loc46])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc56, #loc53])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc59, #loc61])
#loc164 = loc(fused[#loc62, #loc63])
#loc165 = loc(fused[#loc65, #loc64])
#loc166 = loc(fused[#loc73, #loc74])
#loc167 = loc(fused[#loc75, #loc76])
#loc168 = loc(fused[#loc77, #loc78])
#loc169 = loc(fused[#loc79, #loc80])
#loc170 = loc(fused[#loc81, #loc82])
#loc171 = loc(fused[#loc84, #loc83])
#loc172 = loc(fused[#loc87, #loc88])
#loc173 = loc(fused[#loc86, #loc88])
#loc174 = loc(fused[#loc85, #loc89])
#loc175 = loc(fused[#loc90, #loc89])
#loc176 = loc(fused[#loc91, #loc92])
#loc177 = loc(fused[#loc93, #loc94])
#loc178 = loc(fused[#loc95, #loc92])
#loc179 = loc(fused[#loc100, #loc99])
#loc180 = loc(fused[#loc104, #loc103])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc107, #loc108])
#loc183 = loc(fused[#loc109, #loc110])
#loc184 = loc(fused[#loc111, #loc112])
#loc185 = loc(fused[#loc117, #loc118])
#loc186 = loc(fused[#loc122, #loc119])
#loc187 = loc(fused[#loc126, #loc127])
#loc188 = loc(fused[#loc125, #loc127])
#loc189 = loc(fused[#loc128, #loc129])
#loc190 = loc(fused[#loc131, #loc130])
