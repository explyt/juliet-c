!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68_badData : !u64i {alignment = 8 : i64} loc(#loc137)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68_badData : !cir.ptr<!u64i> loc(#loc137)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc144)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc146)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc25)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc148)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc149)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc31)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc151)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc152)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc153)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc42)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc43)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc44)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc42)
            } loc(#loc157)
          } loc(#loc155)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc45)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc48)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc49)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc51)
        } loc(#loc150)
      } loc(#loc147)
    } loc(#loc145)
    cir.return loc(#loc16)
  } loc(#loc143)
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68_goodG2BData : !u64i {alignment = 8 : i64} loc(#loc158)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b_goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68_goodG2BData : !cir.ptr<!u64i> loc(#loc158)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc162)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc164)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc165)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc70)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc167)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc168)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc81)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc82)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc83)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
            } loc(#loc173)
          } loc(#loc171)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc84)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc86)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc86)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc84)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc91)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        } loc(#loc166)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc55)
  } loc(#loc159)
  cir.global "private" external @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68_goodB2GData : !u64i {alignment = 8 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b_goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68_goodB2GData : !cir.ptr<!u64i> loc(#loc174)
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc176)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc178)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc180)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc181)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc182)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc109)
            cir.yield %13 : !cir.bool loc(#loc109)
          }, false {
            %13 = cir.const #false loc(#loc109)
            cir.yield %13 : !cir.bool loc(#loc109)
          }) : (!cir.bool) -> !cir.bool loc(#loc109)
          cir.yield %12 : !cir.bool loc(#loc109)
        }, false {
          %8 = cir.const #false loc(#loc109)
          cir.yield %8 : !cir.bool loc(#loc109)
        }) : (!cir.bool) -> !cir.bool loc(#loc109)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc115)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc116)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc184)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc185)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc189)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc126)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc127)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc128)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
            } loc(#loc190)
          } loc(#loc188)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc129)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc131)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc131)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc133)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc134)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc134)
        } else {
          %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc95)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc95)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc136)
        } loc(#loc183)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc97)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":26:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":26:15)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":45:30)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":51:23)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":32:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":54:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":34:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":34:19)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":35:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":53:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":36:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":36:16)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":40:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":52:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":40:13)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":40:20)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":40:39)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":41:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":48:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":50:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":42:32)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":42:39)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":42:44)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":42:55)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":42:56)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":42:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:45)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:17)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:29)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:35)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:36)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:42)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":43:41)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":45:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":45:20)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":46:23)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":46:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":47:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":47:18)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":51:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":27:1)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":27:15)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":61:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":83:1)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":63:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":63:19)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":64:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":82:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":65:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":65:16)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":69:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":81:9)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":69:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":69:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":69:39)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":70:9)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":77:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":79:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":71:32)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":71:39)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":71:44)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":71:55)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":71:56)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":71:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:45)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:29)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:35)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:36)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:42)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":72:41)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":74:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":74:20)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":74:30)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":75:23)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":75:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":76:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":76:18)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":80:23)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":80:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":28:1)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":28:15)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":105:23)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":86:1)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":108:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":88:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":88:19)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":89:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":107:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":90:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":90:16)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":106:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:39)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:41)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:44)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":94:51)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":95:9)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":102:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":104:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":96:32)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":96:39)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":96:44)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":96:55)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":96:56)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":96:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:45)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:29)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:35)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:36)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:42)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":97:41)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":99:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":99:20)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":99:30)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":100:23)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":100:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":101:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":101:18)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_68b.c":105:13)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc12, #loc13])
#loc143 = loc(fused[#loc15, #loc16])
#loc144 = loc(fused[#loc17, #loc18])
#loc145 = loc(fused[#loc19, #loc20])
#loc146 = loc(fused[#loc21, #loc22])
#loc147 = loc(fused[#loc23, #loc24])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc25, #loc27])
#loc150 = loc(fused[#loc28, #loc29, #loc30, #loc24])
#loc151 = loc(fused[#loc33, #loc34])
#loc152 = loc(fused[#loc32, #loc34])
#loc153 = loc(fused[#loc31, #loc35])
#loc154 = loc(fused[#loc36, #loc35])
#loc155 = loc(fused[#loc37, #loc38])
#loc156 = loc(fused[#loc39, #loc40])
#loc157 = loc(fused[#loc41, #loc38])
#loc158 = loc(fused[#loc52, #loc53])
#loc159 = loc(fused[#loc54, #loc55])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc62, #loc63])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc64, #loc66])
#loc166 = loc(fused[#loc67, #loc68, #loc69, #loc63])
#loc167 = loc(fused[#loc72, #loc73])
#loc168 = loc(fused[#loc71, #loc73])
#loc169 = loc(fused[#loc70, #loc74])
#loc170 = loc(fused[#loc75, #loc74])
#loc171 = loc(fused[#loc76, #loc77])
#loc172 = loc(fused[#loc78, #loc79])
#loc173 = loc(fused[#loc80, #loc77])
#loc174 = loc(fused[#loc93, #loc94])
#loc175 = loc(fused[#loc96, #loc97])
#loc176 = loc(fused[#loc98, #loc99])
#loc177 = loc(fused[#loc100, #loc101])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc107, #loc108])
#loc181 = loc(fused[#loc106, #loc108])
#loc182 = loc(fused[#loc110, #loc111])
#loc183 = loc(fused[#loc112, #loc113, #loc114, #loc105])
#loc184 = loc(fused[#loc117, #loc118])
#loc185 = loc(fused[#loc116, #loc118])
#loc186 = loc(fused[#loc115, #loc119])
#loc187 = loc(fused[#loc120, #loc119])
#loc188 = loc(fused[#loc121, #loc122])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc125, #loc122])
