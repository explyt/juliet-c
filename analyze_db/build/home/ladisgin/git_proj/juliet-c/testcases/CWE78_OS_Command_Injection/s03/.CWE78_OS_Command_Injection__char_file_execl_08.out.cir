!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":156:10)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":156:14)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":156:20)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":156:32)
#loc204 = loc(fused[#loc95, #loc96])
#loc205 = loc(fused[#loc97, #loc98])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc167)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc168)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execl_08_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc169)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc170)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc11)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc172)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc174)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execl_08_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc180)
      %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc32)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc32)
      cir.if %15 {
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc183)
          %17 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc184)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc41)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc41)
          cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc183)
          cir.scope {
            %21 = cir.const #cir.int<100> : !s32i loc(#loc45)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc45)
            %23 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc186)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc47)
            %27 = cir.cmp(gt, %24, %26) : !u64i, !cir.bool loc(#loc187)
            cir.if %27 {
              %28 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc49)
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc11)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc11)
              %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc12)
              %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc12)
              %33 = cir.call @fopen(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc49)
              cir.store %33, %17 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
              cir.scope {
                %34 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
                %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc55)
                %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc191)
                cir.if %37 {
                  cir.scope {
                    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                    %41 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc61)
                    %43 = cir.const #cir.int<100> : !s32i loc(#loc62)
                    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc62)
                    %45 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                    %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc194)
                    %47 = cir.cast(integral, %46 : !u64i), !s32i loc(#loc194)
                    %48 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
                    %49 = cir.call @fgets(%42, %47, %48) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
                    %50 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
                    %51 = cir.cast(bitcast, %50 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
                    %52 = cir.cmp(eq, %49, %51) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
                    cir.if %52 {
                      %53 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
                      %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
                      cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc68)
                      %55 = cir.const #cir.int<0> : !s32i loc(#loc69)
                      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc69)
                      %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                      %58 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                      %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                      cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc197)
                    } loc(#loc196)
                  } loc(#loc193)
                  %38 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
                  %39 = cir.call @fclose(%38) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc74)
                } loc(#loc192)
              } loc(#loc190)
            } loc(#loc188)
          } loc(#loc185)
        } loc(#loc182)
      } loc(#loc181)
    } loc(#loc179)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc22)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc22)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc75)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc23)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc78)
    cir.return loc(#loc25)
  } loc(#loc176)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execl_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc201)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc102)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_08_good() : () -> () loc(#loc104)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call @CWE78_OS_Command_Injection__char_file_execl_08_bad() : () -> () loc(#loc108)
    %14 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.return %17 : !s32i loc(#loc208)
  } loc(#loc203)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc115)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %2 : !s32i loc(#loc210)
  } loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc117)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.10" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc120)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc168)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.scope {
      %13 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc216)
      %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc129)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc129)
      cir.if %15 {
        %16 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc117)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc117)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } else {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc135)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
        %18 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc120)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc120)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
      } loc(#loc217)
    } loc(#loc215)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc137)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc137)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc138)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc138)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc139)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc139)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc142)
    cir.return loc(#loc122)
  } loc(#loc212)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc145)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.return %2 : !s32i loc(#loc219)
  } loc(#loc218)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc167)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc167)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc167)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.scope {
      %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
      %14 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc155)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc155)
      cir.if %15 {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc158)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
        %18 = cir.get_global @".str.10" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc160)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc160)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
      } loc(#loc225)
    } loc(#loc223)
    %4 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc161)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc161)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc162)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc162)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc163)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc163)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc166)
    cir.return loc(#loc148)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_08.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":128:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":128:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":107:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":107:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":68:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":68:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":264:1)
#loc10 = loc("/usr/include/stdio.h":266:3)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":79:31)
#loc12 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":79:41)
#loc13 = loc("/usr/include/stdio.h":654:1)
#loc14 = loc("/usr/include/stdio.h":655:59)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":85:35)
#loc18 = loc("/usr/include/stdio.h":184:1)
#loc19 = loc("/usr/include/stdio.h":184:36)
#loc20 = loc("/usr/include/unistd.h":594:1)
#loc21 = loc("/usr/include/unistd.h":595:14)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":96:11)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":96:47)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":65:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":97:1)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":67:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":67:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":69:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":69:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":70:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":93:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":70:8)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":70:26)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":71:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":72:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":92:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":74:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":74:41)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":75:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":75:20)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":74:30)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":74:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":77:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":91:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":77:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":77:21)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":77:31)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":78:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":79:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":79:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":79:44)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":80:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":90:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":80:21)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":80:30)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":81:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":88:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:36)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:51)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:55)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:65)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:25)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":83:75)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":84:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":85:25)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":87:41)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":87:25)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":87:30)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":87:37)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":89:28)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":89:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":96:29)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":96:61)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":96:75)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":96:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":140:1)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":144:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":142:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":142:14)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":143:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":143:14)
#loc85 = loc("/usr/include/stdlib.h":575:1)
#loc86 = loc("/usr/include/stdlib.h":575:41)
#loc87 = loc("/usr/include/time.h":76:1)
#loc88 = loc("/usr/include/time.h":76:38)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":161:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":163:15)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":166:15)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":168:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":156:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":171:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":157:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":159:27)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":159:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":159:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":161:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":162:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":162:57)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":163:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":166:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":167:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":167:56)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":168:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":170:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":170:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":53:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":56:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":55:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":55:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":112:19)
#loc118 = loc("/usr/include/string.h":149:1)
#loc119 = loc("/usr/include/string.h":150:14)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":117:22)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":104:1)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":122:1)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":106:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":106:12)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":108:12)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":108:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":109:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":118:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":109:8)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":109:27)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":110:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":113:5)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":115:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":112:9)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":117:9)
#loc136 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":117:16)
#loc137 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":121:11)
#loc138 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":121:29)
#loc139 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":121:47)
#loc140 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":121:61)
#loc141 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":121:75)
#loc142 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":121:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":58:1)
#loc144 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":61:1)
#loc145 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":60:12)
#loc146 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":60:5)
#loc147 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":125:1)
#loc148 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":138:1)
#loc149 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":127:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":127:12)
#loc151 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":129:12)
#loc152 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":129:5)
#loc153 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":130:5)
#loc154 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":134:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":130:8)
#loc156 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":130:26)
#loc157 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":131:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":133:9)
#loc159 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":133:16)
#loc160 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":133:22)
#loc161 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":137:11)
#loc162 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":137:29)
#loc163 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":137:47)
#loc164 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":137:61)
#loc165 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":137:75)
#loc166 = loc("CWE78_OS_Command_Injection__char_file_execl_08.c":137:5)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc9, #loc10])
#loc172 = loc(fused[#loc13, #loc14])
#loc173 = loc(fused[#loc15, #loc16])
#loc174 = loc(fused[#loc18, #loc19])
#loc175 = loc(fused[#loc20, #loc21])
#loc176 = loc(fused[#loc24, #loc25])
#loc177 = loc(fused[#loc26, #loc27])
#loc178 = loc(fused[#loc29, #loc28])
#loc179 = loc(fused[#loc30, #loc31])
#loc180 = loc(fused[#loc32, #loc33])
#loc181 = loc(fused[#loc34, #loc31])
#loc182 = loc(fused[#loc35, #loc36])
#loc183 = loc(fused[#loc37, #loc38])
#loc184 = loc(fused[#loc39, #loc40])
#loc185 = loc(fused[#loc43, #loc44])
#loc186 = loc(fused[#loc45, #loc46])
#loc187 = loc(fused[#loc45, #loc47])
#loc188 = loc(fused[#loc48, #loc44])
#loc189 = loc(fused[#loc50, #loc51])
#loc190 = loc(fused[#loc52, #loc53])
#loc191 = loc(fused[#loc54, #loc55])
#loc192 = loc(fused[#loc56, #loc53])
#loc193 = loc(fused[#loc57, #loc58])
#loc194 = loc(fused[#loc62, #loc63])
#loc195 = loc(fused[#loc65, #loc66])
#loc196 = loc(fused[#loc67, #loc58])
#loc197 = loc(fused[#loc70, #loc69])
#loc198 = loc(fused[#loc79, #loc80])
#loc199 = loc(fused[#loc81, #loc82])
#loc200 = loc(fused[#loc83, #loc84])
#loc201 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc87, #loc88])
#loc203 = loc(fused[#loc93, #loc94])
#loc206 = loc(fused[#loc104, #loc105])
#loc207 = loc(fused[#loc108, #loc109])
#loc208 = loc(fused[#loc112, #loc111])
#loc209 = loc(fused[#loc113, #loc114])
#loc210 = loc(fused[#loc116, #loc115])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc121, #loc122])
#loc213 = loc(fused[#loc123, #loc124])
#loc214 = loc(fused[#loc126, #loc125])
#loc215 = loc(fused[#loc127, #loc128])
#loc216 = loc(fused[#loc129, #loc130])
#loc217 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc218 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc146, #loc145])
#loc220 = loc(fused[#loc147, #loc148])
#loc221 = loc(fused[#loc149, #loc150])
#loc222 = loc(fused[#loc152, #loc151])
#loc223 = loc(fused[#loc153, #loc154])
#loc224 = loc(fused[#loc155, #loc156])
#loc225 = loc(fused[#loc157, #loc154])
