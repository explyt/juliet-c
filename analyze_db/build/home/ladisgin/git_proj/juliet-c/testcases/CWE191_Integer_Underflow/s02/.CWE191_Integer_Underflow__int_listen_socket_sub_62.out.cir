!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":47:16)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":47:21)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":125:20)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":125:25)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":132:20)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":132:25)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc270 = loc(fused[#loc19, #loc20])
#loc315 = loc(fused[#loc139, #loc140])
#loc318 = loc(fused[#loc147, #loc148])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc261)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc262)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc263)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc265)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc266)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc267)
  cir.func private @close(!s32i) -> !s32i loc(#loc268)
  cir.func @_ZN50CWE191_Integer_Underflow__int_listen_socket_sub_629badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc270)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc21)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc272)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc273)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc274)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc275)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc276)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc29)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc31)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc275)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc37)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc37)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc38)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc38)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc278)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc45)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc280)
            cir.if %60 {
              cir.break loc(#loc47)
            } loc(#loc281)
          } loc(#loc279)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc282)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc283)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc55)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc285)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc58)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc286)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc62)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc62)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc63)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc287)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc289)
            %59 = cir.const #cir.int<16> : !u64i loc(#loc290)
            %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc290)
            %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc75)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc291)
            cir.if %64 {
              cir.break loc(#loc77)
            } loc(#loc292)
          } loc(#loc288)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %58 = cir.const #cir.int<5> : !s32i loc(#loc81)
            %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc83)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc294)
            cir.if %62 {
              cir.break loc(#loc85)
            } loc(#loc295)
          } loc(#loc293)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc87)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc88)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc89)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc296)
          cir.scope {
            %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc95)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc298)
            cir.if %60 {
              cir.break loc(#loc97)
            } loc(#loc299)
          } loc(#loc297)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          %37 = cir.const #cir.int<3> : !s32i loc(#loc100)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc100)
          %39 = cir.const #cir.int<4> : !u64i loc(#loc100)
          %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc100)
          %41 = cir.const #cir.int<2> : !s32i loc(#loc100)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc100)
          %43 = cir.binop(add, %40, %42) : !u64i loc(#loc100)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc101)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc101)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc300)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc103)
          cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc301)
          cir.scope {
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc109)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc303)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc110)
              cir.yield %62 : !cir.bool loc(#loc110)
            }, false {
              %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc304)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc110)
                cir.yield %66 : !cir.bool loc(#loc110)
              }, false {
                %66 = cir.const #false loc(#loc110)
                cir.yield %66 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %65 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %61 {
              cir.break loc(#loc114)
            } loc(#loc305)
          } loc(#loc302)
          %50 = cir.const #cir.int<0> : !s8i loc(#loc115)
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
          %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc306)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
          %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
          cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc307)
          cir.yield loc(#loc35)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
          cir.condition(%11) loc(#loc122)
        } loc(#loc277)
      } loc(#loc277)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc126)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc309)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc129)
        } loc(#loc310)
      } loc(#loc308)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc133)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc312)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc313)
      } loc(#loc311)
    } loc(#loc271)
    cir.return loc(#loc18)
  } loc(#loc269)
  cir.func @_ZN50CWE191_Integer_Underflow__int_listen_socket_sub_6213goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc139, #loc140])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc315)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc143)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.return loc(#loc138)
  } loc(#loc314)
  cir.func @_ZN50CWE191_Integer_Underflow__int_listen_socket_sub_6213goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc147, #loc148])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc318)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc149)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc320)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc321)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc322)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc323)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc324)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc157)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc157)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc322)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc159)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc323)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc164)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc165)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc165)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc166)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc166)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc167)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc326)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc173)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc173)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc328)
            cir.if %60 {
              cir.break loc(#loc175)
            } loc(#loc329)
          } loc(#loc327)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc330)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc178)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc331)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc332)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc183)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc183)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc333)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc185)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc185)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc334)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc187)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc187)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc188)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc335)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc337)
            %59 = cir.const #cir.int<16> : !u64i loc(#loc338)
            %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc338)
            %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc198)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc199)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc199)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc339)
            cir.if %64 {
              cir.break loc(#loc201)
            } loc(#loc340)
          } loc(#loc336)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
            %58 = cir.const #cir.int<5> : !s32i loc(#loc205)
            %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc206)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc207)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc207)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc342)
            cir.if %62 {
              cir.break loc(#loc209)
            } loc(#loc343)
          } loc(#loc341)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc210)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc211)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc212)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc213)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc344)
          cir.scope {
            %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc219)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc219)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc346)
            cir.if %60 {
              cir.break loc(#loc221)
            } loc(#loc347)
          } loc(#loc345)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc223)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc223)
          %37 = cir.const #cir.int<3> : !s32i loc(#loc224)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc224)
          %39 = cir.const #cir.int<4> : !u64i loc(#loc224)
          %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc224)
          %41 = cir.const #cir.int<2> : !s32i loc(#loc224)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc224)
          %43 = cir.binop(add, %40, %42) : !u64i loc(#loc224)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc225)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc225)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc348)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc226)
          %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc227)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc227)
          cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc349)
          cir.scope {
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc232)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc233)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc233)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc351)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc234)
              cir.yield %62 : !cir.bool loc(#loc234)
            }, false {
              %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc236)
              %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc352)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc234)
                cir.yield %66 : !cir.bool loc(#loc234)
              }, false {
                %66 = cir.const #false loc(#loc234)
                cir.yield %66 : !cir.bool loc(#loc234)
              }) : (!cir.bool) -> !cir.bool loc(#loc234)
              cir.yield %65 : !cir.bool loc(#loc234)
            }) : (!cir.bool) -> !cir.bool loc(#loc234)
            cir.if %61 {
              cir.break loc(#loc238)
            } loc(#loc353)
          } loc(#loc350)
          %50 = cir.const #cir.int<0> : !s8i loc(#loc239)
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc240)
          %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc241)
          %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc241)
          cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc354)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
          %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc243)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc244)
          cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc355)
          cir.yield loc(#loc163)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc246)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc246)
          cir.condition(%11) loc(#loc246)
        } loc(#loc325)
      } loc(#loc325)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc250)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc250)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc357)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc253)
        } loc(#loc358)
      } loc(#loc356)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc256)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc257)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc257)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc360)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc259)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc260)
        } loc(#loc361)
      } loc(#loc359)
    } loc(#loc319)
    cir.return loc(#loc146)
  } loc(#loc317)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":47:1)
#loc18 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":118:1)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":48:1)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":49:5)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":117:5)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":54:9)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":54:13)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":55:9)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":55:28)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":56:9)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":56:31)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":57:9)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":57:31)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":58:9)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":58:41)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":59:9)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":102:17)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":69:35)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":69:44)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":69:57)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":69:28)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":69:13)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":69:68)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":70:13)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":73:13)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":70:17)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":70:33)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":71:13)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":72:17)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:20)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:21)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:30)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:33)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:47)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:13)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":74:48)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":75:34)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":75:13)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":76:39)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":76:13)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":77:38)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":77:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":77:13)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":77:46)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:13)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":81:13)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:22)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:54)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:55)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:64)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:78)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:17)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":78:84)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":79:13)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":80:17)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":82:13)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":85:13)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":82:24)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":82:38)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":82:17)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":82:57)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":83:13)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":84:17)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":86:35)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":86:49)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":86:55)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":86:28)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":86:13)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":86:59)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":87:13)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":90:13)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":87:17)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":87:33)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":88:13)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":89:17)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:31)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:45)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:58)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:76)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:79)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:26)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:13)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":92:80)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":93:13)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":96:13)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":93:17)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":93:31)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":93:44)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":93:47)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":93:61)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":94:13)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":95:17)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":98:39)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":98:25)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":98:13)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":100:25)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":100:20)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":100:13)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":100:36)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":102:16)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":103:9)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":106:9)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":103:13)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":103:29)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":104:9)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":105:26)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":105:13)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":107:9)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":110:9)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":107:13)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":107:29)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":108:9)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":109:26)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":109:13)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":125:1)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":129:1)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":126:1)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":128:13)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":128:12)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":128:5)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":132:1)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":203:1)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":133:1)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":134:5)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":202:5)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":139:9)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":139:13)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":140:9)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":140:28)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":141:9)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":141:31)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":142:9)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":142:31)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":143:9)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":143:41)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":144:9)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":187:17)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":154:35)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":154:44)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":154:57)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":154:28)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":154:13)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":154:68)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":155:13)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":158:13)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":155:17)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":155:33)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":156:13)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":157:17)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:20)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:21)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:30)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:33)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:47)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:13)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":159:48)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":160:34)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":160:13)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":161:39)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":161:13)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":162:38)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":162:32)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":162:13)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":162:46)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:13)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":166:13)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:22)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:54)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:55)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:64)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:78)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:17)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":163:84)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":164:13)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":165:17)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":167:13)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":170:13)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":167:24)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":167:38)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":167:17)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":167:57)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":168:13)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":169:17)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":171:35)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":171:49)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":171:55)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":171:28)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":171:13)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":171:59)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":172:13)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":175:13)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":172:17)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":172:33)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":173:13)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":174:17)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:31)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:45)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:58)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:76)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:79)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:26)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:13)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":177:80)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":178:13)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":181:13)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":178:17)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":178:31)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":178:44)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":178:47)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":178:61)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":179:13)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":180:17)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":183:39)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":183:25)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":183:13)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":185:25)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":185:20)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":185:13)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":185:36)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":187:16)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":188:9)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":191:9)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":188:13)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":188:29)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":189:9)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":190:26)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":190:13)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":192:9)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":195:9)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":192:13)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":192:29)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":193:9)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":194:26)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_sub_62b.cpp":194:13)
#loc261 = loc(fused[#loc1, #loc2])
#loc262 = loc(fused[#loc3, #loc4])
#loc263 = loc(fused[#loc5, #loc6])
#loc264 = loc(fused[#loc7, #loc8])
#loc265 = loc(fused[#loc9, #loc10])
#loc266 = loc(fused[#loc11, #loc12])
#loc267 = loc(fused[#loc13, #loc14])
#loc268 = loc(fused[#loc15, #loc16])
#loc269 = loc(fused[#loc17, #loc18])
#loc271 = loc(fused[#loc22, #loc23])
#loc272 = loc(fused[#loc24, #loc25])
#loc273 = loc(fused[#loc26, #loc27])
#loc274 = loc(fused[#loc28, #loc29])
#loc275 = loc(fused[#loc30, #loc31])
#loc276 = loc(fused[#loc32, #loc33])
#loc277 = loc(fused[#loc34, #loc35])
#loc278 = loc(fused[#loc40, #loc41])
#loc279 = loc(fused[#loc42, #loc43])
#loc280 = loc(fused[#loc44, #loc45])
#loc281 = loc(fused[#loc46, #loc43])
#loc282 = loc(fused[#loc48, #loc49])
#loc283 = loc(fused[#loc51, #loc52])
#loc284 = loc(fused[#loc53, #loc54])
#loc285 = loc(fused[#loc57, #loc55])
#loc286 = loc(fused[#loc61, #loc58])
#loc287 = loc(fused[#loc65, #loc66])
#loc288 = loc(fused[#loc67, #loc68])
#loc289 = loc(fused[#loc70, #loc71])
#loc290 = loc(fused[#loc72, #loc73])
#loc291 = loc(fused[#loc74, #loc75])
#loc292 = loc(fused[#loc76, #loc68])
#loc293 = loc(fused[#loc78, #loc79])
#loc294 = loc(fused[#loc82, #loc83])
#loc295 = loc(fused[#loc84, #loc79])
#loc296 = loc(fused[#loc90, #loc91])
#loc297 = loc(fused[#loc92, #loc93])
#loc298 = loc(fused[#loc94, #loc95])
#loc299 = loc(fused[#loc96, #loc93])
#loc300 = loc(fused[#loc100, #loc101])
#loc301 = loc(fused[#loc104, #loc105])
#loc302 = loc(fused[#loc106, #loc107])
#loc303 = loc(fused[#loc108, #loc109])
#loc304 = loc(fused[#loc111, #loc112])
#loc305 = loc(fused[#loc113, #loc107])
#loc306 = loc(fused[#loc117, #loc115])
#loc307 = loc(fused[#loc120, #loc121])
#loc308 = loc(fused[#loc123, #loc124])
#loc309 = loc(fused[#loc125, #loc126])
#loc310 = loc(fused[#loc127, #loc124])
#loc311 = loc(fused[#loc130, #loc131])
#loc312 = loc(fused[#loc132, #loc133])
#loc313 = loc(fused[#loc134, #loc131])
#loc314 = loc(fused[#loc137, #loc138])
#loc316 = loc(fused[#loc144, #loc142])
#loc317 = loc(fused[#loc145, #loc146])
#loc319 = loc(fused[#loc150, #loc151])
#loc320 = loc(fused[#loc152, #loc153])
#loc321 = loc(fused[#loc154, #loc155])
#loc322 = loc(fused[#loc156, #loc157])
#loc323 = loc(fused[#loc158, #loc159])
#loc324 = loc(fused[#loc160, #loc161])
#loc325 = loc(fused[#loc162, #loc163])
#loc326 = loc(fused[#loc168, #loc169])
#loc327 = loc(fused[#loc170, #loc171])
#loc328 = loc(fused[#loc172, #loc173])
#loc329 = loc(fused[#loc174, #loc171])
#loc330 = loc(fused[#loc176, #loc177])
#loc331 = loc(fused[#loc179, #loc180])
#loc332 = loc(fused[#loc181, #loc182])
#loc333 = loc(fused[#loc184, #loc183])
#loc334 = loc(fused[#loc186, #loc185])
#loc335 = loc(fused[#loc189, #loc190])
#loc336 = loc(fused[#loc191, #loc192])
#loc337 = loc(fused[#loc194, #loc195])
#loc338 = loc(fused[#loc196, #loc197])
#loc339 = loc(fused[#loc198, #loc199])
#loc340 = loc(fused[#loc200, #loc192])
#loc341 = loc(fused[#loc202, #loc203])
#loc342 = loc(fused[#loc206, #loc207])
#loc343 = loc(fused[#loc208, #loc203])
#loc344 = loc(fused[#loc214, #loc215])
#loc345 = loc(fused[#loc216, #loc217])
#loc346 = loc(fused[#loc218, #loc219])
#loc347 = loc(fused[#loc220, #loc217])
#loc348 = loc(fused[#loc224, #loc225])
#loc349 = loc(fused[#loc228, #loc229])
#loc350 = loc(fused[#loc230, #loc231])
#loc351 = loc(fused[#loc232, #loc233])
#loc352 = loc(fused[#loc235, #loc236])
#loc353 = loc(fused[#loc237, #loc231])
#loc354 = loc(fused[#loc241, #loc239])
#loc355 = loc(fused[#loc244, #loc245])
#loc356 = loc(fused[#loc247, #loc248])
#loc357 = loc(fused[#loc249, #loc250])
#loc358 = loc(fused[#loc251, #loc248])
#loc359 = loc(fused[#loc254, #loc255])
#loc360 = loc(fused[#loc256, #loc257])
#loc361 = loc(fused[#loc258, #loc255])
