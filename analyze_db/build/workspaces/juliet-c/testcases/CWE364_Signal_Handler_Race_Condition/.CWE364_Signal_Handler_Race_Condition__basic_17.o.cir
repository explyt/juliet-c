!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":28:27)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":36:24)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc173 = loc(fused[#loc15, #loc16])
#loc206 = loc(fused[#loc91, #loc92])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc166)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc167)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc168)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc169)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc170)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc171)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc173)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc175)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc177)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc14)
  } loc(#loc172)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc179)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc32)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc182)
        cir.condition(%4) loc(#loc36)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc185)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc41)
            cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc185)
            %4 = cir.const #cir.int<2> : !s32i loc(#loc42)
            %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc43)
            %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc44)
            cir.scope {
              %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
              %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc47)
              %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc48)
              %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc187)
              cir.if %24 {
                %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
                %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc51)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc51)
                cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc52)
                %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
                cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc189)
              } loc(#loc188)
            } loc(#loc186)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc54)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc190)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc191)
            cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc192)
            cir.scope {
              %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc61)
              %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc62)
              %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc194)
              cir.if %23 {
                %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc64)
                %25 = cir.const #cir.int<1> : !s32i loc(#loc65)
                %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc66)
                cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc64)
              } loc(#loc195)
            } loc(#loc193)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc67)
            %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
            cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc196)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc70)
            %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc197)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc71)
            %18 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
            %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc73)
            cir.scope {
              %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
              %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc76)
              %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc77)
              %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc199)
              cir.if %24 {
                %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc79)
                %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc80)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc80)
                cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc81)
                %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc166)
                cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc201)
              } loc(#loc200)
            } loc(#loc198)
          } loc(#loc184)
        } loc(#loc183)
        cir.yield loc(#loc31)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc84)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
        cir.yield loc(#loc180)
      } loc(#loc180)
    } loc(#loc180)
    cir.return loc(#loc27)
  } loc(#loc178)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc203)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc91, #loc92])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc206)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc96)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc97)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc208)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc99)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc100)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc210)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc90)
  } loc(#loc205)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc212)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc107)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc215)
        cir.condition(%4) loc(#loc111)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc218)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc116)
            cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc218)
            %4 = cir.const #cir.int<2> : !s32i loc(#loc117)
            %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc118)
            %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc119)
            cir.scope {
              %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
              %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc122)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc123)
              %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc220)
              cir.if %30 {
                %31 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc125)
                %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
                %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc126)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc126)
                cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc127)
                %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
                cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc222)
              } loc(#loc221)
            } loc(#loc219)
            %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc129)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc223)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc224)
            cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc225)
            cir.scope {
              %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc136)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc137)
              %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc227)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc139)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc141)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
              } loc(#loc228)
            } loc(#loc226)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc142)
            %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
            cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc229)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc145)
            %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc230)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc146)
            %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc147)
            %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc148)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc149)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc150)
            %22 = cir.call @signal(%20, %21) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc151)
            cir.scope {
              %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
              %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc154)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc155)
              %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc232)
              cir.if %30 {
                %31 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc157)
                %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
                %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc158)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc158)
                cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc159)
                %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_17StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc167)
                cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc234)
              } loc(#loc233)
            } loc(#loc231)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc161)
            %24 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc162)
            %25 = cir.call @signal(%23, %24) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc163)
          } loc(#loc217)
        } loc(#loc216)
        cir.yield loc(#loc106)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc165)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
        cir.yield loc(#loc213)
      } loc(#loc213)
    } loc(#loc213)
    cir.return loc(#loc102)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_17.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":87:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":48:5)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":48:9)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:5)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":86:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:13)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:9)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:16)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:20)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:18)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":50:5)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":51:9)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":85:9)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":52:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":52:49)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":53:20)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":53:28)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":53:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":54:13)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":58:13)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":54:17)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":54:85)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":55:13)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":56:17)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":56:22)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":57:84)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":57:17)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":59:50)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":59:57)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":59:79)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":59:80)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":59:13)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:13)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:53)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:17)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:37)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:43)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:44)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:50)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":60:49)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":61:80)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":61:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":62:85)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":62:13)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":70:20)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":70:28)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":70:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":80:13)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":84:13)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":80:17)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":80:85)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":81:13)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":82:17)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":82:22)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":83:84)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":83:17)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:24)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":49:23)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":135:1)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":138:1)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":137:5)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":137:11)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":36:1)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":42:1)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":37:1)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":38:5)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":41:5)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":38:9)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":38:78)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":39:5)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":40:82)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":40:9)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":94:1)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":133:1)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":96:5)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":96:9)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":132:5)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:13)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:9)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:16)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:20)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:18)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":98:5)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":99:9)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":131:9)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":100:13)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":100:49)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":101:20)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":101:28)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":101:13)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":102:13)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":106:13)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":102:17)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":102:86)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":103:13)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":104:17)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":104:22)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":105:85)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":105:17)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":107:50)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":107:57)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":107:79)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":107:80)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":107:13)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:13)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:53)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:17)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:37)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:43)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:44)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:50)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":108:49)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":109:81)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":109:13)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":110:86)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":110:13)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":118:20)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":118:28)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":118:13)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":124:20)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":124:28)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":124:13)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":125:13)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":129:13)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":125:17)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":125:86)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":126:13)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":127:17)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":127:22)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":128:85)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":128:17)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":130:20)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":130:28)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":130:13)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:24)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_17.c":97:23)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc9, #loc10])
#loc171 = loc(fused[#loc11, #loc12])
#loc172 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc18, #loc19])
#loc175 = loc(fused[#loc20, #loc21])
#loc176 = loc(fused[#loc22, #loc19])
#loc177 = loc(fused[#loc24, #loc23])
#loc178 = loc(fused[#loc26, #loc27])
#loc179 = loc(fused[#loc28, #loc29])
#loc180 = loc(fused[#loc30, #loc31])
#loc181 = loc(fused[#loc33, #loc32])
#loc182 = loc(fused[#loc34, #loc35])
#loc183 = loc(fused[#loc37, #loc31])
#loc184 = loc(fused[#loc38, #loc39])
#loc185 = loc(fused[#loc40, #loc41])
#loc186 = loc(fused[#loc45, #loc46])
#loc187 = loc(fused[#loc47, #loc48])
#loc188 = loc(fused[#loc49, #loc46])
#loc189 = loc(fused[#loc53, #loc52])
#loc190 = loc(fused[#loc55, #loc56])
#loc191 = loc(fused[#loc54, #loc57])
#loc192 = loc(fused[#loc58, #loc57])
#loc193 = loc(fused[#loc59, #loc60])
#loc194 = loc(fused[#loc61, #loc62])
#loc195 = loc(fused[#loc63, #loc60])
#loc196 = loc(fused[#loc68, #loc67])
#loc197 = loc(fused[#loc70, #loc69])
#loc198 = loc(fused[#loc74, #loc75])
#loc199 = loc(fused[#loc76, #loc77])
#loc200 = loc(fused[#loc78, #loc75])
#loc201 = loc(fused[#loc82, #loc81])
#loc202 = loc(fused[#loc84, #loc83])
#loc203 = loc(fused[#loc85, #loc86])
#loc204 = loc(fused[#loc87, #loc88])
#loc205 = loc(fused[#loc89, #loc90])
#loc207 = loc(fused[#loc94, #loc95])
#loc208 = loc(fused[#loc96, #loc97])
#loc209 = loc(fused[#loc98, #loc95])
#loc210 = loc(fused[#loc100, #loc99])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc103, #loc104])
#loc213 = loc(fused[#loc105, #loc106])
#loc214 = loc(fused[#loc108, #loc107])
#loc215 = loc(fused[#loc109, #loc110])
#loc216 = loc(fused[#loc112, #loc106])
#loc217 = loc(fused[#loc113, #loc114])
#loc218 = loc(fused[#loc115, #loc116])
#loc219 = loc(fused[#loc120, #loc121])
#loc220 = loc(fused[#loc122, #loc123])
#loc221 = loc(fused[#loc124, #loc121])
#loc222 = loc(fused[#loc128, #loc127])
#loc223 = loc(fused[#loc130, #loc131])
#loc224 = loc(fused[#loc129, #loc132])
#loc225 = loc(fused[#loc133, #loc132])
#loc226 = loc(fused[#loc134, #loc135])
#loc227 = loc(fused[#loc136, #loc137])
#loc228 = loc(fused[#loc138, #loc135])
#loc229 = loc(fused[#loc143, #loc142])
#loc230 = loc(fused[#loc145, #loc144])
#loc231 = loc(fused[#loc152, #loc153])
#loc232 = loc(fused[#loc154, #loc155])
#loc233 = loc(fused[#loc156, #loc153])
#loc234 = loc(fused[#loc160, #loc159])
#loc235 = loc(fused[#loc165, #loc164])
