!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:48)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:48)
#loc416 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc512)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc513)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc514)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc515)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc516)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc517)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc518)
  cir.func private @close(!s32i) -> !s32i loc(#loc519)
  cir.func private @printIntLine(!s32i) loc(#loc520)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc523)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc524)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc525)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc526)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc527)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc528)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc35)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc529)
    cir.br ^bb1 loc(#loc530)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %9 ^bb2, ^bb48 loc(#loc531)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc532)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    cir.br ^bb4 loc(#loc533)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc533)
  ^bb5:  // pred: ^bb36
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %15 ^bb6, ^bb37 loc(#loc45)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc534)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc50)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.br ^bb8 loc(#loc536)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc57)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc537)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc538)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc59)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc539)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc540)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc541)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc67)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc542)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc70)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc543)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc74)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc74)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc544)
    cir.br ^bb12 loc(#loc545)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc546)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc547)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc547)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc87)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc548)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc549)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc89)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc80)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc550)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc95)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc551)
    cir.brcond %51 ^bb17, ^bb18 loc(#loc552)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc97)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc91)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc553)
    cir.br ^bb20 loc(#loc554)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc107)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc555)
    cir.brcond %59 ^bb21, ^bb22 loc(#loc556)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc109)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc105)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc111)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %63 = cir.const #cir.int<20> : !s32i loc(#loc112)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc112)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc112)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %68 = cir.call @recv(%60, %62, %66, %67) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
    %69 = cir.cast(integral, %68 : !s64i), !s32i loc(#loc115)
    cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc557)
    cir.br ^bb24 loc(#loc558)
  ^bb24:  // pred: ^bb23
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc121)
    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc559)
    cir.brcond %73 ^bb25, ^bb26 loc(#loc122)
  ^bb25:  // pred: ^bb24
    %74 = cir.const #true loc(#loc122)
    cir.br ^bb31(%74 : !cir.bool) loc(#loc122)
  ^bb26:  // pred: ^bb24
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc560)
    cir.brcond %77 ^bb27, ^bb28 loc(#loc122)
  ^bb27:  // pred: ^bb26
    %78 = cir.const #true loc(#loc122)
    cir.br ^bb29(%78 : !cir.bool) loc(#loc122)
  ^bb28:  // pred: ^bb26
    %79 = cir.const #false loc(#loc122)
    cir.br ^bb29(%79 : !cir.bool) loc(#loc122)
  ^bb29(%80: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc122)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%80 : !cir.bool) loc(#loc122)
  ^bb31(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc122)
  ^bb32:  // pred: ^bb31
    cir.brcond %81 ^bb33, ^bb34 loc(#loc561)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc126)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc119)
  ^bb35:  // pred: ^bb34
    %82 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc127)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc129)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc562)
    %87 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc130)
    %88 = cir.call @atof(%87) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc131)
    %89 = cir.cast(floating, %88 : !cir.double), !cir.float loc(#loc131)
    cir.store %89, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc563)
    cir.br ^bb36 loc(#loc47)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc44)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc44)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc564)
  ^bb39:  // pred: ^bb38
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %91 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %92 = cir.unary(minus, %91) nsw : !s32i, !s32i loc(#loc137)
    %93 = cir.cmp(ne, %90, %92) : !s32i, !cir.bool loc(#loc565)
    cir.brcond %93 ^bb40, ^bb41 loc(#loc566)
  ^bb40:  // pred: ^bb39
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %95 = cir.call @close(%94) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb41 loc(#loc135)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc135)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc567)
  ^bb43:  // pred: ^bb42
    %96 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc144)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %99 ^bb44, ^bb45 loc(#loc569)
  ^bb44:  // pred: ^bb43
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb45 loc(#loc142)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc142)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc42)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc38)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc38)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc570)
  ^bb50:  // pred: ^bb49
    %102 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %103 = cir.cast(int_to_bool, %102 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %103 ^bb51, ^bb54 loc(#loc571)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc572)
  ^bb52:  // pred: ^bb51
    %104 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc154)
    %105 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc155)
    %106 = cir.cast(floating, %105 : !cir.float), !cir.double loc(#loc155)
    %107 = cir.binop(div, %104, %106) : !cir.double loc(#loc573)
    %108 = cir.cast(float_to_int, %107 : !cir.double), !s32i loc(#loc573)
    cir.store %108, %5 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @printIntLine(%109) : (!s32i) -> () loc(#loc157)
    cir.br ^bb53 loc(#loc153)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc149)
  ^bb54:  // 2 preds: ^bb50, ^bb53
    cir.br ^bb55 loc(#loc149)
  ^bb55:  // pred: ^bb54
    cir.return loc(#loc20)
  } loc(#loc521)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc575)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc576)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc162)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc577)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc164)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc578)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    cir.return loc(#loc159)
  } loc(#loc574)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc579)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc171)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc581)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc582)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc583)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc584)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc585)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc586)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc587)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc188)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc588)
    cir.br ^bb1 loc(#loc589)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc192)
    cir.brcond %9 ^bb2, ^bb48 loc(#loc590)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc591)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc179)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc181)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.br ^bb4 loc(#loc592)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc592)
  ^bb5:  // pred: ^bb36
    %14 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %15 ^bb6, ^bb37 loc(#loc198)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc593)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc203)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc204)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.br ^bb8 loc(#loc595)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc210)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc596)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc597)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc212)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc208)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc598)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc599)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc600)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc220)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc220)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc601)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc222)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc602)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc224)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc224)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc225)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc603)
    cir.br ^bb12 loc(#loc604)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc605)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc606)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc606)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc235)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc236)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc607)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc608)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc238)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc229)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc609)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc242)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc243)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc244)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %51 ^bb17, ^bb18 loc(#loc611)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc246)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc240)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc248)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc249)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc250)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb20 loc(#loc613)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc256)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc614)
    cir.brcond %59 ^bb21, ^bb22 loc(#loc615)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc258)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc254)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc260)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
    %63 = cir.const #cir.int<20> : !s32i loc(#loc261)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc261)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc261)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc263)
    %68 = cir.call @recv(%60, %62, %66, %67) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
    %69 = cir.cast(integral, %68 : !s64i), !s32i loc(#loc264)
    cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc616)
    cir.br ^bb24 loc(#loc617)
  ^bb24:  // pred: ^bb23
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc270)
    %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc270)
    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc618)
    cir.brcond %73 ^bb25, ^bb26 loc(#loc271)
  ^bb25:  // pred: ^bb24
    %74 = cir.const #true loc(#loc271)
    cir.br ^bb31(%74 : !cir.bool) loc(#loc271)
  ^bb26:  // pred: ^bb24
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc619)
    cir.brcond %77 ^bb27, ^bb28 loc(#loc271)
  ^bb27:  // pred: ^bb26
    %78 = cir.const #true loc(#loc271)
    cir.br ^bb29(%78 : !cir.bool) loc(#loc271)
  ^bb28:  // pred: ^bb26
    %79 = cir.const #false loc(#loc271)
    cir.br ^bb29(%79 : !cir.bool) loc(#loc271)
  ^bb29(%80: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc271)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%80 : !cir.bool) loc(#loc271)
  ^bb31(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc271)
  ^bb32:  // pred: ^bb31
    cir.brcond %81 ^bb33, ^bb34 loc(#loc620)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc275)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc268)
  ^bb35:  // pred: ^bb34
    %82 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc276)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc278)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc278)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc621)
    %87 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc279)
    %88 = cir.call @atof(%87) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc280)
    %89 = cir.cast(floating, %88 : !cir.double), !cir.float loc(#loc280)
    cir.store %89, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc622)
    cir.br ^bb36 loc(#loc200)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc197)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc197)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc623)
  ^bb39:  // pred: ^bb38
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %91 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %92 = cir.unary(minus, %91) nsw : !s32i, !s32i loc(#loc286)
    %93 = cir.cmp(ne, %90, %92) : !s32i, !cir.bool loc(#loc624)
    cir.brcond %93 ^bb40, ^bb41 loc(#loc625)
  ^bb40:  // pred: ^bb39
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %95 = cir.call @close(%94) : (!s32i) -> !s32i loc(#loc289)
    cir.br ^bb41 loc(#loc284)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc284)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc626)
  ^bb43:  // pred: ^bb42
    %96 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc293)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc627)
    cir.brcond %99 ^bb44, ^bb45 loc(#loc628)
  ^bb44:  // pred: ^bb43
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc296)
    cir.br ^bb45 loc(#loc291)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc291)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc195)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc191)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc191)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc629)
  ^bb50:  // pred: ^bb49
    %102 = cir.const #cir.int<0> : !s32i loc(#loc299)
    %103 = cir.cast(int_to_bool, %102 : !s32i), !cir.bool loc(#loc299)
    cir.brcond %103 ^bb51, ^bb52 loc(#loc630)
  ^bb51:  // pred: ^bb50
    %104 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc170)
    %105 = cir.cast(array_to_ptrdecay, %104 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%105) : (!cir.ptr<!s8i>) -> () loc(#loc303)
    cir.br ^bb58 loc(#loc301)
  ^bb52:  // pred: ^bb50
    cir.br ^bb53 loc(#loc631)
  ^bb53:  // pred: ^bb52
    %106 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc306)
    %107 = cir.cast(floating, %106 : !cir.float), !cir.double loc(#loc306)
    %108 = cir.fabs %107 : !cir.double loc(#loc306)
    %109 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc307)
    %110 = cir.cmp(gt, %108, %109) : !cir.double, !cir.bool loc(#loc632)
    cir.brcond %110 ^bb54, ^bb55 loc(#loc633)
  ^bb54:  // pred: ^bb53
    %111 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc312)
    %112 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc313)
    %113 = cir.cast(floating, %112 : !cir.float), !cir.double loc(#loc313)
    %114 = cir.binop(div, %111, %113) : !cir.double loc(#loc634)
    %115 = cir.cast(float_to_int, %114 : !cir.double), !s32i loc(#loc634)
    cir.store %115, %5 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    %116 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc315)
    cir.br ^bb56 loc(#loc310)
  ^bb55:  // pred: ^bb53
    %117 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc171)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc316)
    cir.br ^bb56 loc(#loc305)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc305)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc298)
  ^bb58:  // 2 preds: ^bb51, ^bb57
    cir.br ^bb59 loc(#loc298)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc173)
  } loc(#loc580)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc636)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc637)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc638)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc639)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc640)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc641)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc642)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc333)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc643)
    cir.br ^bb1 loc(#loc644)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc337)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc337)
    cir.brcond %9 ^bb2, ^bb48 loc(#loc645)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc646)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc324)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc638)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc326)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc326)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    cir.br ^bb4 loc(#loc647)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc647)
  ^bb5:  // pred: ^bb36
    %14 = cir.const #cir.int<0> : !s32i loc(#loc343)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc343)
    cir.brcond %15 ^bb6, ^bb37 loc(#loc343)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc648)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc346)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc347)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc348)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc349)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc649)
    cir.br ^bb8 loc(#loc650)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc354)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc355)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc355)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc651)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc652)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc357)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc353)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc653)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc360)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc654)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc655)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc365)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc365)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc656)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc367)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc367)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc657)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc369)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc369)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc370)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc658)
    cir.br ^bb12 loc(#loc659)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc375)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc660)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc661)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc661)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc380)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc381)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc381)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc662)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc663)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc383)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc374)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc664)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc387)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc388)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc389)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc389)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc665)
    cir.brcond %51 ^bb17, ^bb18 loc(#loc666)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc391)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc385)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc392)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc393)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc394)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc395)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc667)
    cir.br ^bb20 loc(#loc668)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc401)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc401)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc669)
    cir.brcond %59 ^bb21, ^bb22 loc(#loc670)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc403)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc399)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc405)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc405)
    %63 = cir.const #cir.int<20> : !s32i loc(#loc406)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc407)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc406)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc406)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc408)
    %68 = cir.call @recv(%60, %62, %66, %67) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc409)
    %69 = cir.cast(integral, %68 : !s64i), !s32i loc(#loc409)
    cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc671)
    cir.br ^bb24 loc(#loc672)
  ^bb24:  // pred: ^bb23
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc414)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc415)
    %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc415)
    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc673)
    cir.brcond %73 ^bb25, ^bb26 loc(#loc416)
  ^bb25:  // pred: ^bb24
    %74 = cir.const #true loc(#loc416)
    cir.br ^bb31(%74 : !cir.bool) loc(#loc416)
  ^bb26:  // pred: ^bb24
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc418)
    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc674)
    cir.brcond %77 ^bb27, ^bb28 loc(#loc416)
  ^bb27:  // pred: ^bb26
    %78 = cir.const #true loc(#loc416)
    cir.br ^bb29(%78 : !cir.bool) loc(#loc416)
  ^bb28:  // pred: ^bb26
    %79 = cir.const #false loc(#loc416)
    cir.br ^bb29(%79 : !cir.bool) loc(#loc416)
  ^bb29(%80: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc416)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%80 : !cir.bool) loc(#loc416)
  ^bb31(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc416)
  ^bb32:  // pred: ^bb31
    cir.brcond %81 ^bb33, ^bb34 loc(#loc675)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc420)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc413)
  ^bb35:  // pred: ^bb34
    %82 = cir.const #cir.int<0> : !s32i loc(#loc421)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc421)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc422)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc423)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc423)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc676)
    %87 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc424)
    %88 = cir.call @atof(%87) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc425)
    %89 = cir.cast(floating, %88 : !cir.double), !cir.float loc(#loc425)
    cir.store %89, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc677)
    cir.br ^bb36 loc(#loc345)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc342)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc342)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc678)
  ^bb39:  // pred: ^bb38
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    %91 = cir.const #cir.int<1> : !s32i loc(#loc431)
    %92 = cir.unary(minus, %91) nsw : !s32i, !s32i loc(#loc431)
    %93 = cir.cmp(ne, %90, %92) : !s32i, !cir.bool loc(#loc679)
    cir.brcond %93 ^bb40, ^bb41 loc(#loc680)
  ^bb40:  // pred: ^bb39
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    %95 = cir.call @close(%94) : (!s32i) -> !s32i loc(#loc434)
    cir.br ^bb41 loc(#loc429)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc429)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc681)
  ^bb43:  // pred: ^bb42
    %96 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc437)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc438)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc438)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc682)
    cir.brcond %99 ^bb44, ^bb45 loc(#loc683)
  ^bb44:  // pred: ^bb43
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc440)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc441)
    cir.br ^bb45 loc(#loc436)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc436)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc340)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc336)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc336)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc684)
  ^bb50:  // pred: ^bb49
    %102 = cir.const #cir.int<1> : !s32i loc(#loc444)
    %103 = cir.cast(int_to_bool, %102 : !s32i), !cir.bool loc(#loc444)
    cir.brcond %103 ^bb51, ^bb57 loc(#loc685)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc686)
  ^bb52:  // pred: ^bb51
    %104 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc448)
    %105 = cir.cast(floating, %104 : !cir.float), !cir.double loc(#loc448)
    %106 = cir.fabs %105 : !cir.double loc(#loc448)
    %107 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc449)
    %108 = cir.cmp(gt, %106, %107) : !cir.double, !cir.bool loc(#loc687)
    cir.brcond %108 ^bb53, ^bb54 loc(#loc688)
  ^bb53:  // pred: ^bb52
    %109 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc454)
    %110 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc455)
    %111 = cir.cast(floating, %110 : !cir.float), !cir.double loc(#loc455)
    %112 = cir.binop(div, %109, %111) : !cir.double loc(#loc689)
    %113 = cir.cast(float_to_int, %112 : !cir.double), !s32i loc(#loc689)
    cir.store %113, %5 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc457)
    cir.br ^bb55 loc(#loc452)
  ^bb54:  // pred: ^bb52
    %115 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc458)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc458)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc459)
    cir.br ^bb55 loc(#loc447)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc447)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc443)
  ^bb57:  // 2 preds: ^bb50, ^bb56
    cir.br ^bb58 loc(#loc443)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc318)
  } loc(#loc635)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc691)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc692)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc466)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc693)
    cir.br ^bb1 loc(#loc694)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc470)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc470)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc695)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc474)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc474)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc475)
    cir.br ^bb4 loc(#loc472)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc476)
    cir.store %7, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc696)
    cir.br ^bb4 loc(#loc469)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc469)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc697)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc480)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc480)
    cir.brcond %9 ^bb7, ^bb10 loc(#loc698)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc699)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc484)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc485)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc485)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc700)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc700)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc691)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc486)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc487)
    cir.br ^bb9 loc(#loc483)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc479)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc479)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc461)
  } loc(#loc690)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc702)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc703)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc494)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc704)
    cir.br ^bb1 loc(#loc705)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc498)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc498)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc706)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc500)
    cir.store %5, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc707)
    cir.br ^bb3 loc(#loc497)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc497)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc708)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<1> : !s32i loc(#loc504)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc504)
    cir.brcond %7 ^bb6, ^bb9 loc(#loc709)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc710)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc508)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc509)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc509)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc711)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc711)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc702)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc510)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc511)
    cir.br ^bb8 loc(#loc507)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc503)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc503)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc489)
  } loc(#loc701)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_04.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":52:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":137:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":64:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":64:17)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":65:13)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":65:32)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":66:13)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":66:35)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":67:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":67:35)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":68:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":68:45)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":133:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":133:44)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":54:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":54:11)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":56:12)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":56:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":57:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":128:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":57:8)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":58:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":59:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":127:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":69:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":112:21)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":112:20)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":70:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":111:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":78:39)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":78:48)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":78:61)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":78:32)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":78:17)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":78:72)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":79:17)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":82:17)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":79:21)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":79:37)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":80:17)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":81:21)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:24)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:25)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:34)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:37)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:51)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:17)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":83:52)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":84:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":84:17)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":85:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":85:17)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":86:42)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":86:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":86:17)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":86:50)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:17)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":90:17)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:26)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:58)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:59)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:68)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:82)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:21)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":87:88)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":88:17)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":89:21)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":91:17)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":94:17)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":91:28)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":91:42)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":91:21)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":91:61)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":92:17)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":93:21)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":95:39)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":95:53)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":95:59)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":95:32)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":95:17)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":95:63)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":96:17)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":99:17)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":96:21)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":96:37)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":97:17)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":98:21)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:35)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:49)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:62)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:80)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:83)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:30)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:17)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":102:84)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:17)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":106:17)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:21)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:35)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:51)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":103:65)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":104:17)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":105:21)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":108:43)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":108:29)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":108:17)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":110:36)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":110:31)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":110:17)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":110:47)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":113:13)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":116:13)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":113:17)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":113:33)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":114:13)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":115:30)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":115:17)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":117:13)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":120:13)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":117:17)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":117:33)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":118:13)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":119:30)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":119:17)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":129:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":136:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":129:8)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":130:5)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":131:9)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":135:9)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":133:32)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":133:40)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":134:26)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":134:13)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":381:1)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":387:1)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":383:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":383:14)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":384:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":384:14)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":385:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":385:14)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":386:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":386:14)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":224:19)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":236:23)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":144:1)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":239:1)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":156:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":156:17)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":157:13)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":157:32)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":158:13)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":158:35)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":159:13)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":159:35)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":160:13)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":160:45)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":231:13)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":231:44)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":146:5)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":146:11)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":148:12)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":148:5)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":149:5)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":220:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":149:8)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":150:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":151:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":219:9)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":161:13)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":204:21)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":204:20)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":162:13)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":203:13)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":170:39)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":170:48)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":170:61)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":170:32)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":170:17)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":170:72)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":171:17)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":174:17)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":171:21)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":171:37)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":172:17)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":173:21)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:24)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:25)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:34)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:37)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:51)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:17)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":175:52)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":176:38)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":176:17)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":177:43)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":177:17)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":178:42)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":178:36)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":178:17)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":178:50)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:17)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":182:17)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:26)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:58)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:59)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:68)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:82)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:21)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":179:88)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":180:17)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":181:21)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":183:17)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":186:17)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":183:28)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":183:42)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":183:21)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":183:61)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":184:17)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":185:21)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":187:39)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":187:53)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":187:59)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":187:32)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":187:17)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":187:63)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":188:17)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":191:17)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":188:21)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":188:37)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":189:17)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":190:21)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:35)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:49)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:62)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:80)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:83)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:30)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:17)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":194:84)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:17)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":198:17)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:21)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:35)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:51)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":195:65)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":196:17)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":197:21)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":200:43)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":200:29)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":200:17)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":202:36)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":202:31)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":202:17)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":202:47)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":205:13)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":208:13)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":205:17)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":205:33)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":206:13)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":207:30)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":207:17)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":209:13)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":212:13)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":209:17)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":209:33)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":210:13)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":211:30)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":211:17)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":221:5)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":238:5)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":221:8)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":222:5)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":225:5)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":227:5)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":224:9)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":229:9)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":237:9)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":229:17)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":229:25)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":229:12)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":230:9)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":233:9)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":235:9)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":231:32)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":231:40)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":232:26)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":232:13)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":236:13)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":242:1)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":332:1)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":254:13)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":254:17)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":255:13)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":255:32)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":256:13)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":256:35)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":257:13)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":257:35)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":258:13)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":258:45)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":324:13)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":324:44)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":244:5)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":244:11)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":246:12)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":246:5)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":247:5)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":318:5)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":247:8)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":248:5)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":249:9)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":317:9)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":259:13)
#loc342 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":302:21)
#loc343 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":302:20)
#loc344 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":260:13)
#loc345 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":301:13)
#loc346 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":268:39)
#loc347 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":268:48)
#loc348 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":268:61)
#loc349 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":268:32)
#loc350 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":268:17)
#loc351 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":268:72)
#loc352 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":269:17)
#loc353 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":272:17)
#loc354 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":269:21)
#loc355 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":269:37)
#loc356 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":270:17)
#loc357 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":271:21)
#loc358 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:24)
#loc359 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:25)
#loc360 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:34)
#loc361 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:37)
#loc362 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:51)
#loc363 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:17)
#loc364 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":273:52)
#loc365 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":274:38)
#loc366 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":274:17)
#loc367 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":275:43)
#loc368 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":275:17)
#loc369 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":276:42)
#loc370 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":276:36)
#loc371 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":276:17)
#loc372 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":276:50)
#loc373 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:17)
#loc374 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":280:17)
#loc375 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:26)
#loc376 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:58)
#loc377 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:59)
#loc378 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:68)
#loc379 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:82)
#loc380 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:21)
#loc381 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":277:88)
#loc382 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":278:17)
#loc383 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":279:21)
#loc384 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":281:17)
#loc385 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":284:17)
#loc386 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":281:28)
#loc387 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":281:42)
#loc388 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":281:21)
#loc389 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":281:61)
#loc390 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":282:17)
#loc391 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":283:21)
#loc392 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":285:39)
#loc393 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":285:53)
#loc394 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":285:59)
#loc395 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":285:32)
#loc396 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":285:17)
#loc397 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":285:63)
#loc398 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":286:17)
#loc399 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":289:17)
#loc400 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":286:21)
#loc401 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":286:37)
#loc402 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":287:17)
#loc403 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":288:21)
#loc404 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:35)
#loc405 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:49)
#loc406 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:62)
#loc407 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:80)
#loc408 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:83)
#loc409 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:30)
#loc410 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:17)
#loc411 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":292:84)
#loc412 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:17)
#loc413 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":296:17)
#loc414 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:21)
#loc415 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:35)
#loc417 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:51)
#loc418 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":293:65)
#loc419 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":294:17)
#loc420 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":295:21)
#loc421 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":298:43)
#loc422 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":298:29)
#loc423 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":298:17)
#loc424 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":300:36)
#loc425 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":300:31)
#loc426 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":300:17)
#loc427 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":300:47)
#loc428 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":303:13)
#loc429 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":306:13)
#loc430 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":303:17)
#loc431 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":303:33)
#loc432 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":304:13)
#loc433 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":305:30)
#loc434 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":305:17)
#loc435 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":307:13)
#loc436 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":310:13)
#loc437 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":307:17)
#loc438 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":307:33)
#loc439 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":308:13)
#loc440 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":309:30)
#loc441 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":309:17)
#loc442 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":319:5)
#loc443 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":331:5)
#loc444 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":319:8)
#loc445 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":320:5)
#loc446 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":322:9)
#loc447 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":330:9)
#loc448 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":322:17)
#loc449 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":322:25)
#loc450 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":322:12)
#loc451 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":323:9)
#loc452 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":326:9)
#loc453 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":328:9)
#loc454 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":324:32)
#loc455 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":324:40)
#loc456 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":325:26)
#loc457 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":325:13)
#loc458 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":329:23)
#loc459 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":329:13)
#loc460 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":335:1)
#loc461 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":358:1)
#loc462 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":354:13)
#loc463 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":354:44)
#loc464 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":337:5)
#loc465 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":337:11)
#loc466 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":339:12)
#loc467 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":339:5)
#loc468 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":340:5)
#loc469 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":349:5)
#loc470 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":340:8)
#loc471 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":341:5)
#loc472 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":344:5)
#loc473 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":346:5)
#loc474 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":343:19)
#loc475 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":343:9)
#loc476 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":348:16)
#loc477 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":348:9)
#loc478 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":350:5)
#loc479 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":357:5)
#loc480 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":350:8)
#loc481 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":351:5)
#loc482 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":352:9)
#loc483 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":356:9)
#loc484 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":354:32)
#loc485 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":354:40)
#loc486 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":355:26)
#loc487 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":355:13)
#loc488 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":361:1)
#loc489 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":379:1)
#loc490 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":375:13)
#loc491 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":375:44)
#loc492 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":363:5)
#loc493 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":363:11)
#loc494 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":365:12)
#loc495 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":365:5)
#loc496 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":366:5)
#loc497 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":370:5)
#loc498 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":366:8)
#loc499 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":367:5)
#loc500 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":369:16)
#loc501 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":369:9)
#loc502 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":371:5)
#loc503 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":378:5)
#loc504 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":371:8)
#loc505 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":372:5)
#loc506 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":373:9)
#loc507 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":377:9)
#loc508 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":375:32)
#loc509 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":375:40)
#loc510 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":376:26)
#loc511 = loc("CWE369_Divide_by_Zero__float_listenSocket_04.c":376:13)
#loc512 = loc(fused[#loc1, #loc2])
#loc513 = loc(fused[#loc3, #loc4])
#loc514 = loc(fused[#loc5, #loc6])
#loc515 = loc(fused[#loc7, #loc8])
#loc516 = loc(fused[#loc9, #loc10])
#loc517 = loc(fused[#loc11, #loc12])
#loc518 = loc(fused[#loc13, #loc14])
#loc519 = loc(fused[#loc15, #loc16])
#loc520 = loc(fused[#loc17, #loc18])
#loc521 = loc(fused[#loc19, #loc20])
#loc522 = loc(fused[#loc21, #loc22])
#loc523 = loc(fused[#loc23, #loc24])
#loc524 = loc(fused[#loc25, #loc26])
#loc525 = loc(fused[#loc27, #loc28])
#loc526 = loc(fused[#loc29, #loc30])
#loc527 = loc(fused[#loc31, #loc32])
#loc528 = loc(fused[#loc33, #loc34])
#loc529 = loc(fused[#loc36, #loc35])
#loc530 = loc(fused[#loc37, #loc38])
#loc531 = loc(fused[#loc40, #loc38])
#loc532 = loc(fused[#loc41, #loc42])
#loc533 = loc(fused[#loc43, #loc44])
#loc534 = loc(fused[#loc46, #loc47])
#loc535 = loc(fused[#loc52, #loc53])
#loc536 = loc(fused[#loc54, #loc55])
#loc537 = loc(fused[#loc56, #loc57])
#loc538 = loc(fused[#loc58, #loc55])
#loc539 = loc(fused[#loc60, #loc61])
#loc540 = loc(fused[#loc63, #loc64])
#loc541 = loc(fused[#loc65, #loc66])
#loc542 = loc(fused[#loc69, #loc67])
#loc543 = loc(fused[#loc73, #loc70])
#loc544 = loc(fused[#loc77, #loc78])
#loc545 = loc(fused[#loc79, #loc80])
#loc546 = loc(fused[#loc82, #loc83])
#loc547 = loc(fused[#loc84, #loc85])
#loc548 = loc(fused[#loc86, #loc87])
#loc549 = loc(fused[#loc88, #loc80])
#loc550 = loc(fused[#loc90, #loc91])
#loc551 = loc(fused[#loc94, #loc95])
#loc552 = loc(fused[#loc96, #loc91])
#loc553 = loc(fused[#loc102, #loc103])
#loc554 = loc(fused[#loc104, #loc105])
#loc555 = loc(fused[#loc106, #loc107])
#loc556 = loc(fused[#loc108, #loc105])
#loc557 = loc(fused[#loc116, #loc117])
#loc558 = loc(fused[#loc118, #loc119])
#loc559 = loc(fused[#loc120, #loc121])
#loc560 = loc(fused[#loc123, #loc124])
#loc561 = loc(fused[#loc125, #loc119])
#loc562 = loc(fused[#loc129, #loc127])
#loc563 = loc(fused[#loc132, #loc133])
#loc564 = loc(fused[#loc134, #loc135])
#loc565 = loc(fused[#loc136, #loc137])
#loc566 = loc(fused[#loc138, #loc135])
#loc567 = loc(fused[#loc141, #loc142])
#loc568 = loc(fused[#loc143, #loc144])
#loc569 = loc(fused[#loc145, #loc142])
#loc570 = loc(fused[#loc148, #loc149])
#loc571 = loc(fused[#loc151, #loc149])
#loc572 = loc(fused[#loc152, #loc153])
#loc573 = loc(fused[#loc154, #loc155])
#loc574 = loc(fused[#loc158, #loc159])
#loc575 = loc(fused[#loc160, #loc161])
#loc576 = loc(fused[#loc162, #loc163])
#loc577 = loc(fused[#loc164, #loc165])
#loc578 = loc(fused[#loc166, #loc167])
#loc579 = loc(fused[#loc168, #loc169])
#loc580 = loc(fused[#loc172, #loc173])
#loc581 = loc(fused[#loc174, #loc175])
#loc582 = loc(fused[#loc176, #loc177])
#loc583 = loc(fused[#loc178, #loc179])
#loc584 = loc(fused[#loc180, #loc181])
#loc585 = loc(fused[#loc182, #loc183])
#loc586 = loc(fused[#loc184, #loc185])
#loc587 = loc(fused[#loc186, #loc187])
#loc588 = loc(fused[#loc189, #loc188])
#loc589 = loc(fused[#loc190, #loc191])
#loc590 = loc(fused[#loc193, #loc191])
#loc591 = loc(fused[#loc194, #loc195])
#loc592 = loc(fused[#loc196, #loc197])
#loc593 = loc(fused[#loc199, #loc200])
#loc594 = loc(fused[#loc205, #loc206])
#loc595 = loc(fused[#loc207, #loc208])
#loc596 = loc(fused[#loc209, #loc210])
#loc597 = loc(fused[#loc211, #loc208])
#loc598 = loc(fused[#loc213, #loc214])
#loc599 = loc(fused[#loc216, #loc217])
#loc600 = loc(fused[#loc218, #loc219])
#loc601 = loc(fused[#loc221, #loc220])
#loc602 = loc(fused[#loc223, #loc222])
#loc603 = loc(fused[#loc226, #loc227])
#loc604 = loc(fused[#loc228, #loc229])
#loc605 = loc(fused[#loc231, #loc232])
#loc606 = loc(fused[#loc233, #loc234])
#loc607 = loc(fused[#loc235, #loc236])
#loc608 = loc(fused[#loc237, #loc229])
#loc609 = loc(fused[#loc239, #loc240])
#loc610 = loc(fused[#loc243, #loc244])
#loc611 = loc(fused[#loc245, #loc240])
#loc612 = loc(fused[#loc251, #loc252])
#loc613 = loc(fused[#loc253, #loc254])
#loc614 = loc(fused[#loc255, #loc256])
#loc615 = loc(fused[#loc257, #loc254])
#loc616 = loc(fused[#loc265, #loc266])
#loc617 = loc(fused[#loc267, #loc268])
#loc618 = loc(fused[#loc269, #loc270])
#loc619 = loc(fused[#loc272, #loc273])
#loc620 = loc(fused[#loc274, #loc268])
#loc621 = loc(fused[#loc278, #loc276])
#loc622 = loc(fused[#loc281, #loc282])
#loc623 = loc(fused[#loc283, #loc284])
#loc624 = loc(fused[#loc285, #loc286])
#loc625 = loc(fused[#loc287, #loc284])
#loc626 = loc(fused[#loc290, #loc291])
#loc627 = loc(fused[#loc292, #loc293])
#loc628 = loc(fused[#loc294, #loc291])
#loc629 = loc(fused[#loc297, #loc298])
#loc630 = loc(fused[#loc300, #loc301, #loc302, #loc298])
#loc631 = loc(fused[#loc304, #loc305])
#loc632 = loc(fused[#loc308, #loc307])
#loc633 = loc(fused[#loc309, #loc310, #loc311, #loc305])
#loc634 = loc(fused[#loc312, #loc313])
#loc635 = loc(fused[#loc317, #loc318])
#loc636 = loc(fused[#loc319, #loc320])
#loc637 = loc(fused[#loc321, #loc322])
#loc638 = loc(fused[#loc323, #loc324])
#loc639 = loc(fused[#loc325, #loc326])
#loc640 = loc(fused[#loc327, #loc328])
#loc641 = loc(fused[#loc329, #loc330])
#loc642 = loc(fused[#loc331, #loc332])
#loc643 = loc(fused[#loc334, #loc333])
#loc644 = loc(fused[#loc335, #loc336])
#loc645 = loc(fused[#loc338, #loc336])
#loc646 = loc(fused[#loc339, #loc340])
#loc647 = loc(fused[#loc341, #loc342])
#loc648 = loc(fused[#loc344, #loc345])
#loc649 = loc(fused[#loc350, #loc351])
#loc650 = loc(fused[#loc352, #loc353])
#loc651 = loc(fused[#loc354, #loc355])
#loc652 = loc(fused[#loc356, #loc353])
#loc653 = loc(fused[#loc358, #loc359])
#loc654 = loc(fused[#loc361, #loc362])
#loc655 = loc(fused[#loc363, #loc364])
#loc656 = loc(fused[#loc366, #loc365])
#loc657 = loc(fused[#loc368, #loc367])
#loc658 = loc(fused[#loc371, #loc372])
#loc659 = loc(fused[#loc373, #loc374])
#loc660 = loc(fused[#loc376, #loc377])
#loc661 = loc(fused[#loc378, #loc379])
#loc662 = loc(fused[#loc380, #loc381])
#loc663 = loc(fused[#loc382, #loc374])
#loc664 = loc(fused[#loc384, #loc385])
#loc665 = loc(fused[#loc388, #loc389])
#loc666 = loc(fused[#loc390, #loc385])
#loc667 = loc(fused[#loc396, #loc397])
#loc668 = loc(fused[#loc398, #loc399])
#loc669 = loc(fused[#loc400, #loc401])
#loc670 = loc(fused[#loc402, #loc399])
#loc671 = loc(fused[#loc410, #loc411])
#loc672 = loc(fused[#loc412, #loc413])
#loc673 = loc(fused[#loc414, #loc415])
#loc674 = loc(fused[#loc417, #loc418])
#loc675 = loc(fused[#loc419, #loc413])
#loc676 = loc(fused[#loc423, #loc421])
#loc677 = loc(fused[#loc426, #loc427])
#loc678 = loc(fused[#loc428, #loc429])
#loc679 = loc(fused[#loc430, #loc431])
#loc680 = loc(fused[#loc432, #loc429])
#loc681 = loc(fused[#loc435, #loc436])
#loc682 = loc(fused[#loc437, #loc438])
#loc683 = loc(fused[#loc439, #loc436])
#loc684 = loc(fused[#loc442, #loc443])
#loc685 = loc(fused[#loc445, #loc443])
#loc686 = loc(fused[#loc446, #loc447])
#loc687 = loc(fused[#loc450, #loc449])
#loc688 = loc(fused[#loc451, #loc452, #loc453, #loc447])
#loc689 = loc(fused[#loc454, #loc455])
#loc690 = loc(fused[#loc460, #loc461])
#loc691 = loc(fused[#loc462, #loc463])
#loc692 = loc(fused[#loc464, #loc465])
#loc693 = loc(fused[#loc467, #loc466])
#loc694 = loc(fused[#loc468, #loc469])
#loc695 = loc(fused[#loc471, #loc472, #loc473, #loc469])
#loc696 = loc(fused[#loc477, #loc476])
#loc697 = loc(fused[#loc478, #loc479])
#loc698 = loc(fused[#loc481, #loc479])
#loc699 = loc(fused[#loc482, #loc483])
#loc700 = loc(fused[#loc484, #loc485])
#loc701 = loc(fused[#loc488, #loc489])
#loc702 = loc(fused[#loc490, #loc491])
#loc703 = loc(fused[#loc492, #loc493])
#loc704 = loc(fused[#loc495, #loc494])
#loc705 = loc(fused[#loc496, #loc497])
#loc706 = loc(fused[#loc499, #loc497])
#loc707 = loc(fused[#loc501, #loc500])
#loc708 = loc(fused[#loc502, #loc503])
#loc709 = loc(fused[#loc505, #loc503])
#loc710 = loc(fused[#loc506, #loc507])
#loc711 = loc(fused[#loc508, #loc509])
