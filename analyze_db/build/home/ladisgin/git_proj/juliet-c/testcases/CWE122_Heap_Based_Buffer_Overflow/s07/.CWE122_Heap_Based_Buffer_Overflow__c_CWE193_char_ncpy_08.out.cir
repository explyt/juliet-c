!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":129:10)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":129:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":129:20)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":129:32)
#loc210 = loc(fused[#loc72, #loc73])
#loc211 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc180)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc181)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc182)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc183)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc184)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc185)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc188)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc193)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc31)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc195)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc196)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.br ^bb3 loc(#loc199)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc200)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc201)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc43)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc202)
  ^bb9:  // pred: ^bb8
    %20 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc182)
    cir.copy %20 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc182)
    %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc46)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc50)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc51)
    %29 = cir.binop(add, %26, %28) : !u64i loc(#loc203)
    %30 = cir.call @strncpy(%22, %23, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc54)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc20)
  } loc(#loc189)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc204)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.return %17 : !s32i loc(#loc214)
  } loc(#loc209)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc92)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %2 : !s32i loc(#loc216)
  } loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.br ^bb1 loc(#loc220)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc221)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc103)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb8 loc(#loc106)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc110)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc110)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc110)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc223)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc224)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.br ^bb4 loc(#loc227)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc228)
    cir.brcond %20 ^bb5, ^bb6 loc(#loc229)
  ^bb5:  // pred: ^bb4
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc124)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc118)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc102)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc230)
  ^bb10:  // pred: ^bb9
    %24 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc181)
    cir.copy %24 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc181)
    %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc127)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc129)
    %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc130)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc131)
    %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc130)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc132)
    %33 = cir.binop(add, %30, %32) : !u64i loc(#loc231)
    %34 = cir.call @strncpy(%26, %27, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb11 loc(#loc126)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc96)
  } loc(#loc217)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc139)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    cir.return %2 : !s32i loc(#loc233)
  } loc(#loc232)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc145)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc238)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc149)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc239)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc152)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc153)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc153)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc153)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc240)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc241)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.br ^bb3 loc(#loc244)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc246)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc167)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc161)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc148)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc247)
  ^bb9:  // pred: ^bb8
    %22 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc180)
    cir.copy %22 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc180)
    %23 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc170)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc172)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc173)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc174)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc175)
    %31 = cir.binop(add, %28, %30) : !u64i loc(#loc248)
    %32 = cir.call @strncpy(%24, %25, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc178)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb10 loc(#loc169)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc142)
  } loc(#loc234)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":104:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":104:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":83:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":83:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":53:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":53:29)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":144:1)
#loc12 = loc("/usr/include/string.h":146:14)
#loc13 = loc("/usr/include/string.h":407:1)
#loc14 = loc("/usr/include/string.h":408:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":42:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":60:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":44:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":44:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":45:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":45:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":46:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":51:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":46:8)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":46:26)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":47:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":49:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":49:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":49:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":49:45)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":49:46)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":49:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":50:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":52:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":59:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":56:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":56:17)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":56:23)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":56:31)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":56:38)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":56:48)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":57:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":57:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":58:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":58:14)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":113:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":117:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":115:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":115:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":116:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":116:14)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":134:15)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":136:15)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":139:15)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":141:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":129:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":144:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":130:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":132:27)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":132:22)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":132:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":134:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":135:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":135:67)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":136:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":139:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":140:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":140:66)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":141:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":143:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":143:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":30:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":33:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":32:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":32:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":74:19)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":67:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":90:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":69:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":69:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":70:12)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":70:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":71:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":81:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":71:8)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":71:27)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":72:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":75:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":77:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":74:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:24)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:32)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:35)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:38)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:49)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:31)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:50)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":79:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:37)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:27)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:28)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":80:33)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":82:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":89:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":86:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":86:17)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":86:23)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":86:31)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":86:38)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":86:48)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":87:19)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":87:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":88:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":88:14)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":35:1)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":38:1)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":37:12)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":37:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":93:1)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":111:1)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":95:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":95:12)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":96:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":96:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":97:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":102:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":97:8)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":97:26)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":98:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:24)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:32)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:35)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:38)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:49)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:31)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:50)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":100:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:37)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:21)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:27)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:28)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:34)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":101:33)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":103:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":110:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":107:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":107:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":107:23)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":107:31)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":107:38)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":107:48)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":108:19)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":108:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":109:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_08.c":109:14)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc5, #loc6])
#loc183 = loc(fused[#loc7, #loc8])
#loc184 = loc(fused[#loc9, #loc10])
#loc185 = loc(fused[#loc11, #loc12])
#loc186 = loc(fused[#loc13, #loc14])
#loc187 = loc(fused[#loc15, #loc16])
#loc188 = loc(fused[#loc17, #loc18])
#loc189 = loc(fused[#loc19, #loc20])
#loc190 = loc(fused[#loc21, #loc22])
#loc191 = loc(fused[#loc24, #loc23])
#loc192 = loc(fused[#loc25, #loc26])
#loc193 = loc(fused[#loc27, #loc28])
#loc194 = loc(fused[#loc29, #loc26])
#loc195 = loc(fused[#loc32, #loc33])
#loc196 = loc(fused[#loc31, #loc33])
#loc197 = loc(fused[#loc30, #loc34])
#loc198 = loc(fused[#loc35, #loc34])
#loc199 = loc(fused[#loc36, #loc37])
#loc200 = loc(fused[#loc38, #loc39])
#loc201 = loc(fused[#loc40, #loc37])
#loc202 = loc(fused[#loc44, #loc45])
#loc203 = loc(fused[#loc49, #loc51])
#loc204 = loc(fused[#loc56, #loc57])
#loc205 = loc(fused[#loc58, #loc59])
#loc206 = loc(fused[#loc60, #loc61])
#loc207 = loc(fused[#loc62, #loc63])
#loc208 = loc(fused[#loc64, #loc65])
#loc209 = loc(fused[#loc70, #loc71])
#loc212 = loc(fused[#loc81, #loc82])
#loc213 = loc(fused[#loc85, #loc86])
#loc214 = loc(fused[#loc89, #loc88])
#loc215 = loc(fused[#loc90, #loc91])
#loc216 = loc(fused[#loc93, #loc92])
#loc217 = loc(fused[#loc95, #loc96])
#loc218 = loc(fused[#loc97, #loc98])
#loc219 = loc(fused[#loc100, #loc99])
#loc220 = loc(fused[#loc101, #loc102])
#loc221 = loc(fused[#loc103, #loc104])
#loc222 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc223 = loc(fused[#loc112, #loc113])
#loc224 = loc(fused[#loc114, #loc113])
#loc225 = loc(fused[#loc109, #loc115])
#loc226 = loc(fused[#loc116, #loc115])
#loc227 = loc(fused[#loc117, #loc118])
#loc228 = loc(fused[#loc119, #loc120])
#loc229 = loc(fused[#loc121, #loc118])
#loc230 = loc(fused[#loc125, #loc126])
#loc231 = loc(fused[#loc130, #loc132])
#loc232 = loc(fused[#loc137, #loc138])
#loc233 = loc(fused[#loc140, #loc139])
#loc234 = loc(fused[#loc141, #loc142])
#loc235 = loc(fused[#loc143, #loc144])
#loc236 = loc(fused[#loc146, #loc145])
#loc237 = loc(fused[#loc147, #loc148])
#loc238 = loc(fused[#loc149, #loc150])
#loc239 = loc(fused[#loc151, #loc148])
#loc240 = loc(fused[#loc155, #loc156])
#loc241 = loc(fused[#loc157, #loc156])
#loc242 = loc(fused[#loc152, #loc158])
#loc243 = loc(fused[#loc159, #loc158])
#loc244 = loc(fused[#loc160, #loc161])
#loc245 = loc(fused[#loc162, #loc163])
#loc246 = loc(fused[#loc164, #loc161])
#loc247 = loc(fused[#loc168, #loc169])
#loc248 = loc(fused[#loc173, #loc175])
