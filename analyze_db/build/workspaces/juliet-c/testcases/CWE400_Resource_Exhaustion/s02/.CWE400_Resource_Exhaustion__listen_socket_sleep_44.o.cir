!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":50:21)
#loc9 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":50:25)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":142:25)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":142:29)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":161:25)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":161:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc334 = loc(fused[#loc8, #loc9])
#loc395 = loc(fused[#loc166, #loc167])
#loc402 = loc(fused[#loc190, #loc191])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @usleep(!u32i) -> !s32i loc(#loc331)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc334)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc11)
    %3 = cir.call @usleep(%2) : (!u32i) -> !s32i loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc13)
    cir.return loc(#loc7)
  } loc(#loc333)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc335)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc336)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc337)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc338)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc339)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc340)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc341)
  cir.func private @close(!s32i) -> !s32i loc(#loc342)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc344)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc345)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc345)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc37)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc348)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc349)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc350)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc351)
      %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc352)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc46)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc350)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc48)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc351)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc55)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc57)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc58)
            cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc355)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc63)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc64)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc64)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc357)
              cir.if %64 {
                cir.break loc(#loc66)
              } loc(#loc358)
            } loc(#loc356)
            %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc359)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc69)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc360)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc361)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc74)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc74)
            %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc362)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc77)
            %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc77)
            %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
            %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
            cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc363)
            %30 = cir.const #cir.int<27015> : !s32i loc(#loc81)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc81)
            %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc82)
            %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc364)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc366)
              %63 = cir.const #cir.int<16> : !u64i loc(#loc367)
              %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc367)
              %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc93)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc94)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc368)
              cir.if %68 {
                cir.break loc(#loc96)
              } loc(#loc369)
            } loc(#loc365)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %62 = cir.const #cir.int<5> : !s32i loc(#loc100)
              %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc101)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc102)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc371)
              cir.if %66 {
                cir.break loc(#loc104)
              } loc(#loc372)
            } loc(#loc370)
            %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
            %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
            cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc373)
            cir.scope {
              %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc114)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc114)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc375)
              cir.if %64 {
                cir.break loc(#loc116)
              } loc(#loc376)
            } loc(#loc374)
            %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
            %41 = cir.const #cir.int<3> : !s32i loc(#loc119)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc119)
            %43 = cir.const #cir.int<4> : !u64i loc(#loc119)
            %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc119)
            %45 = cir.const #cir.int<2> : !s32i loc(#loc119)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc119)
            %47 = cir.binop(add, %44, %46) : !u64i loc(#loc119)
            %48 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc120)
            %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc377)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc121)
            %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc122)
            cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc378)
            cir.scope {
              %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc128)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc128)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc380)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc129)
                cir.yield %66 : !cir.bool loc(#loc129)
              }, false {
                %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                %67 = cir.const #cir.int<0> : !s32i loc(#loc131)
                %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc381)
                %69 = cir.ternary(%68, true {
                  %70 = cir.const #true loc(#loc129)
                  cir.yield %70 : !cir.bool loc(#loc129)
                }, false {
                  %70 = cir.const #false loc(#loc129)
                  cir.yield %70 : !cir.bool loc(#loc129)
                }) : (!cir.bool) -> !cir.bool loc(#loc129)
                cir.yield %69 : !cir.bool loc(#loc129)
              }) : (!cir.bool) -> !cir.bool loc(#loc129)
              cir.if %65 {
                cir.break loc(#loc133)
              } loc(#loc382)
            } loc(#loc379)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc134)
            %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
            %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc136)
            cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc383)
            %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
            %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc138)
            cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc384)
          } loc(#loc354)
          cir.yield loc(#loc52)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc141)
          cir.condition(%17) loc(#loc141)
        } loc(#loc353)
      } loc(#loc353)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc145)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc145)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc386)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc148)
        } loc(#loc387)
      } loc(#loc385)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc152)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc389)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc155)
        } loc(#loc390)
      } loc(#loc388)
    } loc(#loc347)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc156)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc156)
    cir.return loc(#loc31)
  } loc(#loc343)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc392)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc393)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc162)
    cir.return loc(#loc159)
  } loc(#loc391)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc166, #loc167])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc395)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc169)
    %3 = cir.call @usleep(%2) : (!u32i) -> !s32i loc(#loc170)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc171)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.return loc(#loc165)
  } loc(#loc394)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc397)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc398)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc178)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc398)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc180)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc182)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc184)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc184)
    cir.return loc(#loc174)
  } loc(#loc396)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc187)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc190, #loc191])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc402)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc196)
      %3 = cir.cmp(gt, %1, %2) : !s32i, !cir.bool loc(#loc404)
      %4 = cir.ternary(%3, true {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc198)
        %6 = cir.const #cir.int<2000> : !s32i loc(#loc199)
        %7 = cir.cmp(le, %5, %6) : !s32i, !cir.bool loc(#loc405)
        %8 = cir.ternary(%7, true {
          %9 = cir.const #true loc(#loc197)
          cir.yield %9 : !cir.bool loc(#loc197)
        }, false {
          %9 = cir.const #false loc(#loc197)
          cir.yield %9 : !cir.bool loc(#loc197)
        }) : (!cir.bool) -> !cir.bool loc(#loc197)
        cir.yield %8 : !cir.bool loc(#loc197)
      }, false {
        %5 = cir.const #false loc(#loc197)
        cir.yield %5 : !cir.bool loc(#loc197)
      }) : (!cir.bool) -> !cir.bool loc(#loc197)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc203)
        %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc204)
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc186)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc205)
      } else {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc187)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc187)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc206)
      } loc(#loc406)
    } loc(#loc403)
    cir.return loc(#loc189)
  } loc(#loc401)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc408)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc409)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc212)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc409)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc214)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc412)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc413)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc414)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc415)
      %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc416)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc223)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc223)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc414)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc225)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc225)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc415)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc232)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc233)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc234)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc235)
            cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc419)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc240)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc241)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc241)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc421)
              cir.if %64 {
                cir.break loc(#loc243)
              } loc(#loc422)
            } loc(#loc420)
            %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc423)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc246)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc424)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc425)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc251)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc251)
            %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc426)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc253)
            %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc253)
            %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
            %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
            cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc427)
            %30 = cir.const #cir.int<27015> : !s32i loc(#loc255)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc255)
            %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc256)
            %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc428)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc261)
              %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc430)
              %63 = cir.const #cir.int<16> : !u64i loc(#loc431)
              %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc431)
              %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc266)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc267)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc267)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc432)
              cir.if %68 {
                cir.break loc(#loc269)
              } loc(#loc433)
            } loc(#loc429)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc272)
              %62 = cir.const #cir.int<5> : !s32i loc(#loc273)
              %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc274)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc275)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc275)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc435)
              cir.if %66 {
                cir.break loc(#loc277)
              } loc(#loc436)
            } loc(#loc434)
            %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc278)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc279)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc280)
            %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc281)
            cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc437)
            cir.scope {
              %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc287)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc287)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc439)
              cir.if %64 {
                cir.break loc(#loc289)
              } loc(#loc440)
            } loc(#loc438)
            %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
            %41 = cir.const #cir.int<3> : !s32i loc(#loc292)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc292)
            %43 = cir.const #cir.int<4> : !u64i loc(#loc292)
            %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc292)
            %45 = cir.const #cir.int<2> : !s32i loc(#loc292)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc292)
            %47 = cir.binop(add, %44, %46) : !u64i loc(#loc292)
            %48 = cir.const #cir.int<1> : !s32i loc(#loc293)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc293)
            %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc441)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc294)
            %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc295)
            cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc442)
            cir.scope {
              %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc301)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc301)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc444)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc302)
                cir.yield %66 : !cir.bool loc(#loc302)
              }, false {
                %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                %67 = cir.const #cir.int<0> : !s32i loc(#loc304)
                %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc445)
                %69 = cir.ternary(%68, true {
                  %70 = cir.const #true loc(#loc302)
                  cir.yield %70 : !cir.bool loc(#loc302)
                }, false {
                  %70 = cir.const #false loc(#loc302)
                  cir.yield %70 : !cir.bool loc(#loc302)
                }) : (!cir.bool) -> !cir.bool loc(#loc302)
                cir.yield %69 : !cir.bool loc(#loc302)
              }) : (!cir.bool) -> !cir.bool loc(#loc302)
              cir.if %65 {
                cir.break loc(#loc306)
              } loc(#loc446)
            } loc(#loc443)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc307)
            %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc307)
            %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc308)
            %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
            %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc309)
            cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc447)
            %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc310)
            %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc311)
            cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc448)
          } loc(#loc418)
          cir.yield loc(#loc229)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc314)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc314)
          cir.condition(%17) loc(#loc314)
        } loc(#loc417)
      } loc(#loc417)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc317)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc318)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc318)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc450)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc320)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc321)
        } loc(#loc451)
      } loc(#loc449)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc324)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc325)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc325)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc453)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc327)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc328)
        } loc(#loc454)
      } loc(#loc452)
    } loc(#loc411)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc329)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc330)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc329)
    cir.return loc(#loc208)
  } loc(#loc407)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":0:0)
#loc1 = loc("/usr/include/unistd.h":480:1)
#loc2 = loc("/usr/include/unistd.h":480:43)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":54:15)
#loc6 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":50:1)
#loc7 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":55:1)
#loc10 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":51:1)
#loc11 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":53:11)
#loc12 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":53:5)
#loc13 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":54:5)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc16 = loc("/usr/include/netinet/in.h":402:1)
#loc17 = loc("/usr/include/netinet/in.h":403:40)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc22 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc23 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc24 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc25 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc26 = loc("/usr/include/stdlib.h":105:1)
#loc27 = loc("/usr/include/stdlib.h":106:33)
#loc28 = loc("/usr/include/unistd.h":358:1)
#loc29 = loc("/usr/include/unistd.h":358:27)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":57:1)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":135:1)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":59:5)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":59:9)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":61:5)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":61:29)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":63:14)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":63:13)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":63:5)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":64:5)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":132:5)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":69:9)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":69:13)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":70:9)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":70:28)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":71:9)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":71:31)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":72:9)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":72:31)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":73:9)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":73:41)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":74:9)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":117:17)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":75:9)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":116:9)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":84:35)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":84:44)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":84:57)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":84:28)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":84:13)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":84:68)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":85:13)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":88:13)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":85:17)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":85:33)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":86:13)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":87:17)
#loc67 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:20)
#loc68 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:21)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:30)
#loc70 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:33)
#loc71 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:47)
#loc72 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:13)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":89:48)
#loc74 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":90:34)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":90:13)
#loc77 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":91:39)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":91:13)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":92:38)
#loc82 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":92:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":92:13)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":92:46)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:13)
#loc87 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":96:13)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:22)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:54)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:55)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:64)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:78)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:17)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":93:84)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":94:13)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":95:17)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":97:13)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":100:13)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":97:24)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":97:38)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":97:17)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":97:57)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":98:13)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":99:17)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":101:35)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":101:49)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":101:55)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":101:28)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":101:13)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":101:59)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":102:13)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":105:13)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":102:17)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":102:33)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":103:13)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":104:17)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:31)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:45)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:58)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:76)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:79)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:26)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:13)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":107:80)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":108:13)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":111:13)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":108:17)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":108:31)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":108:44)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":108:47)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":108:61)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":109:13)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":110:17)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":113:39)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":113:25)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":113:13)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":115:26)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":115:21)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":115:13)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":115:37)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":117:16)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":118:9)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":121:9)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":118:13)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":118:29)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":119:9)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":120:26)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":120:13)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":122:9)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":125:9)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":122:13)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":122:29)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":123:9)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":124:26)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":124:13)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":134:5)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":134:13)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":253:1)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":257:1)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":255:5)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":255:13)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":256:5)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":256:13)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":142:1)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":147:1)
#loc168 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":143:1)
#loc169 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":145:11)
#loc170 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":145:5)
#loc171 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":146:15)
#loc172 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":146:5)
#loc173 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":149:1)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":158:1)
#loc175 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":151:5)
#loc176 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":151:9)
#loc177 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":152:5)
#loc178 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":152:29)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":154:14)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":154:13)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":154:5)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":156:13)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":156:5)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":157:5)
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":157:13)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":167:19)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":171:19)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":161:1)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":173:1)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":162:1)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":164:5)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":172:5)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":164:9)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":164:17)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":164:19)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":164:22)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":164:31)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":165:5)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":168:5)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":170:5)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":166:15)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":166:9)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":167:9)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":171:9)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":175:1)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":251:1)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":177:5)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":177:9)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":178:5)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":178:29)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":180:14)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":180:13)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":180:5)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":181:5)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":249:5)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":186:9)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":186:13)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":187:9)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":187:28)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":188:9)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":188:31)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":189:9)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":189:31)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":190:9)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":190:41)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":191:9)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":234:17)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":192:9)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":233:9)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":201:35)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":201:44)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":201:57)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":201:28)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":201:13)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":201:68)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":202:13)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":205:13)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":202:17)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":202:33)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":203:13)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":204:17)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:20)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:21)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:30)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:33)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:47)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:13)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":206:48)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":207:34)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":207:13)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":208:39)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":208:13)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":209:38)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":209:32)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":209:13)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":209:46)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:13)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":213:13)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:22)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:54)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:55)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:64)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:78)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:17)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":210:84)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":211:13)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":212:17)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":214:13)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":217:13)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":214:24)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":214:38)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":214:17)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":214:57)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":215:13)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":216:17)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":218:35)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":218:49)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":218:55)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":218:28)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":218:13)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":218:59)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":219:13)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":222:13)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":219:17)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":219:33)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":220:13)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":221:17)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:31)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:45)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:58)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:76)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:79)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:26)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:13)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":224:80)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":225:13)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":228:13)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":225:17)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":225:31)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":225:44)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":225:47)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":225:61)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":226:13)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":227:17)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":230:39)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":230:25)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":230:13)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":232:26)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":232:21)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":232:13)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":232:37)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":234:16)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":235:9)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":238:9)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":235:13)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":235:29)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":236:9)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":237:26)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":237:13)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":239:9)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":242:9)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":239:13)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":239:29)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":240:9)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":241:26)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":241:13)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":250:5)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_44.c":250:13)
#loc331 = loc(fused[#loc1, #loc2])
#loc332 = loc(fused[#loc3, #loc4])
#loc333 = loc(fused[#loc6, #loc7])
#loc335 = loc(fused[#loc14, #loc15])
#loc336 = loc(fused[#loc16, #loc17])
#loc337 = loc(fused[#loc18, #loc19])
#loc338 = loc(fused[#loc20, #loc21])
#loc339 = loc(fused[#loc22, #loc23])
#loc340 = loc(fused[#loc24, #loc25])
#loc341 = loc(fused[#loc26, #loc27])
#loc342 = loc(fused[#loc28, #loc29])
#loc343 = loc(fused[#loc30, #loc31])
#loc344 = loc(fused[#loc32, #loc33])
#loc345 = loc(fused[#loc34, #loc35])
#loc346 = loc(fused[#loc38, #loc36])
#loc347 = loc(fused[#loc39, #loc40])
#loc348 = loc(fused[#loc41, #loc42])
#loc349 = loc(fused[#loc43, #loc44])
#loc350 = loc(fused[#loc45, #loc46])
#loc351 = loc(fused[#loc47, #loc48])
#loc352 = loc(fused[#loc49, #loc50])
#loc353 = loc(fused[#loc51, #loc52])
#loc354 = loc(fused[#loc53, #loc54])
#loc355 = loc(fused[#loc59, #loc60])
#loc356 = loc(fused[#loc61, #loc62])
#loc357 = loc(fused[#loc63, #loc64])
#loc358 = loc(fused[#loc65, #loc62])
#loc359 = loc(fused[#loc67, #loc68])
#loc360 = loc(fused[#loc70, #loc71])
#loc361 = loc(fused[#loc72, #loc73])
#loc362 = loc(fused[#loc76, #loc74])
#loc363 = loc(fused[#loc80, #loc77])
#loc364 = loc(fused[#loc84, #loc85])
#loc365 = loc(fused[#loc86, #loc87])
#loc366 = loc(fused[#loc89, #loc90])
#loc367 = loc(fused[#loc91, #loc92])
#loc368 = loc(fused[#loc93, #loc94])
#loc369 = loc(fused[#loc95, #loc87])
#loc370 = loc(fused[#loc97, #loc98])
#loc371 = loc(fused[#loc101, #loc102])
#loc372 = loc(fused[#loc103, #loc98])
#loc373 = loc(fused[#loc109, #loc110])
#loc374 = loc(fused[#loc111, #loc112])
#loc375 = loc(fused[#loc113, #loc114])
#loc376 = loc(fused[#loc115, #loc112])
#loc377 = loc(fused[#loc119, #loc120])
#loc378 = loc(fused[#loc123, #loc124])
#loc379 = loc(fused[#loc125, #loc126])
#loc380 = loc(fused[#loc127, #loc128])
#loc381 = loc(fused[#loc130, #loc131])
#loc382 = loc(fused[#loc132, #loc126])
#loc383 = loc(fused[#loc136, #loc134])
#loc384 = loc(fused[#loc139, #loc140])
#loc385 = loc(fused[#loc142, #loc143])
#loc386 = loc(fused[#loc144, #loc145])
#loc387 = loc(fused[#loc146, #loc143])
#loc388 = loc(fused[#loc149, #loc150])
#loc389 = loc(fused[#loc151, #loc152])
#loc390 = loc(fused[#loc153, #loc150])
#loc391 = loc(fused[#loc158, #loc159])
#loc392 = loc(fused[#loc160, #loc161])
#loc393 = loc(fused[#loc162, #loc163])
#loc394 = loc(fused[#loc164, #loc165])
#loc396 = loc(fused[#loc173, #loc174])
#loc397 = loc(fused[#loc175, #loc176])
#loc398 = loc(fused[#loc177, #loc178])
#loc399 = loc(fused[#loc181, #loc179])
#loc400 = loc(fused[#loc183, #loc182])
#loc401 = loc(fused[#loc188, #loc189])
#loc403 = loc(fused[#loc193, #loc194])
#loc404 = loc(fused[#loc195, #loc196])
#loc405 = loc(fused[#loc198, #loc199])
#loc406 = loc(fused[#loc200, #loc201, #loc202, #loc194])
#loc407 = loc(fused[#loc207, #loc208])
#loc408 = loc(fused[#loc209, #loc210])
#loc409 = loc(fused[#loc211, #loc212])
#loc410 = loc(fused[#loc215, #loc213])
#loc411 = loc(fused[#loc216, #loc217])
#loc412 = loc(fused[#loc218, #loc219])
#loc413 = loc(fused[#loc220, #loc221])
#loc414 = loc(fused[#loc222, #loc223])
#loc415 = loc(fused[#loc224, #loc225])
#loc416 = loc(fused[#loc226, #loc227])
#loc417 = loc(fused[#loc228, #loc229])
#loc418 = loc(fused[#loc230, #loc231])
#loc419 = loc(fused[#loc236, #loc237])
#loc420 = loc(fused[#loc238, #loc239])
#loc421 = loc(fused[#loc240, #loc241])
#loc422 = loc(fused[#loc242, #loc239])
#loc423 = loc(fused[#loc244, #loc245])
#loc424 = loc(fused[#loc247, #loc248])
#loc425 = loc(fused[#loc249, #loc250])
#loc426 = loc(fused[#loc252, #loc251])
#loc427 = loc(fused[#loc254, #loc253])
#loc428 = loc(fused[#loc257, #loc258])
#loc429 = loc(fused[#loc259, #loc260])
#loc430 = loc(fused[#loc262, #loc263])
#loc431 = loc(fused[#loc264, #loc265])
#loc432 = loc(fused[#loc266, #loc267])
#loc433 = loc(fused[#loc268, #loc260])
#loc434 = loc(fused[#loc270, #loc271])
#loc435 = loc(fused[#loc274, #loc275])
#loc436 = loc(fused[#loc276, #loc271])
#loc437 = loc(fused[#loc282, #loc283])
#loc438 = loc(fused[#loc284, #loc285])
#loc439 = loc(fused[#loc286, #loc287])
#loc440 = loc(fused[#loc288, #loc285])
#loc441 = loc(fused[#loc292, #loc293])
#loc442 = loc(fused[#loc296, #loc297])
#loc443 = loc(fused[#loc298, #loc299])
#loc444 = loc(fused[#loc300, #loc301])
#loc445 = loc(fused[#loc303, #loc304])
#loc446 = loc(fused[#loc305, #loc299])
#loc447 = loc(fused[#loc309, #loc307])
#loc448 = loc(fused[#loc312, #loc313])
#loc449 = loc(fused[#loc315, #loc316])
#loc450 = loc(fused[#loc317, #loc318])
#loc451 = loc(fused[#loc319, #loc316])
#loc452 = loc(fused[#loc322, #loc323])
#loc453 = loc(fused[#loc324, #loc325])
#loc454 = loc(fused[#loc326, #loc323])
