!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc116 = loc("CWE367_TOC_TOU__access_08.c":192:10)
#loc117 = loc("CWE367_TOC_TOU__access_08.c":192:14)
#loc118 = loc("CWE367_TOC_TOU__access_08.c":192:20)
#loc119 = loc("CWE367_TOC_TOU__access_08.c":192:32)
#loc333 = loc(fused[#loc116, #loc117])
#loc334 = loc(fused[#loc118, #loc119])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc288)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc289)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc290)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc291)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc293)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc294)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc296)
  cir.func no_proto @CWE367_TOC_TOU__access_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc299)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc25)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc302)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc303)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc302)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc302)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc38)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc305)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc43)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc44)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc44)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc45)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc46)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc307)
            } loc(#loc306)
          } loc(#loc304)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc51)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc309)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc53)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc53)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc56)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc311)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc57)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc312)
            } loc(#loc310)
          } loc(#loc308)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %13 = cir.call @access(%11, %12) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc64)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc314)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc67)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
            } loc(#loc315)
          } loc(#loc313)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc69)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc70)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc316)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc77)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc318)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc80)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
            } loc(#loc319)
          } loc(#loc317)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %15 = cir.const #cir.int<11> : !u64i loc(#loc321)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc86)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc88)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc88)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc322)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc91)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
            } loc(#loc323)
          } loc(#loc320)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc96)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc325)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc99)
            } loc(#loc326)
          } loc(#loc324)
        } loc(#loc301)
      } loc(#loc300)
    } loc(#loc298)
    cir.return loc(#loc22)
  } loc(#loc297)
  cir.func no_proto @CWE367_TOC_TOU__access_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc328)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc329)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    cir.return loc(#loc101)
  } loc(#loc327)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc330)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc113)
  cir.func @main(%arg0: !s32i loc(fused[#loc116, #loc117]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc118, #loc119])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc333)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc334)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc115)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc120)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc121)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc122)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc122)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc123)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc110)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %8 = cir.get_global @CWE367_TOC_TOU__access_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc335)
    cir.call @CWE367_TOC_TOU__access_08_good() : () -> () loc(#loc125)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc111)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc112)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %13 = cir.get_global @CWE367_TOC_TOU__access_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc336)
    cir.call @CWE367_TOC_TOU__access_08_bad() : () -> () loc(#loc129)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc113)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc132)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    cir.return %17 : !s32i loc(#loc337)
  } loc(#loc332)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc136)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    cir.return %2 : !s32i loc(#loc339)
  } loc(#loc338)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc139)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc342)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc144)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc144)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc138)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc138)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc149)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc345)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc346)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc345)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc345)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc155)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc156)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc346)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc160)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc348)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc165)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc165)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc166)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc167)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc167)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc168)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc169)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc350)
            } loc(#loc349)
          } loc(#loc347)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc172)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc172)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc174)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc174)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc352)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc176)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc176)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc177)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc177)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc179)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc354)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc180)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc355)
            } loc(#loc353)
          } loc(#loc351)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc182)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc183)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc356)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc190)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc358)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc192)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc193)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc192)
            } loc(#loc359)
          } loc(#loc357)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc196)
            %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc139)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc139)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc361)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc199)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc200)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc201)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc201)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc362)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc203)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc204)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
            } loc(#loc363)
          } loc(#loc360)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc207)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc208)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc209)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc365)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc211)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc212)
            } loc(#loc366)
          } loc(#loc364)
        } loc(#loc344)
      } loc(#loc343)
    } loc(#loc341)
    cir.return loc(#loc141)
  } loc(#loc340)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc215)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    cir.return %2 : !s32i loc(#loc368)
  } loc(#loc367)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc371)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc221)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc221)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc374)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc375)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc374)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc374)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc229)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc230)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc375)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc233)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc234)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc235)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc236)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc237)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc237)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc377)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc239)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc239)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc240)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc241)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc241)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc242)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc243)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc243)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc379)
            } loc(#loc378)
          } loc(#loc376)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc246)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc246)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc248)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc248)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc381)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc250)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc250)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc251)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc252)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc251)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc253)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc253)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc383)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc254)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc254)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc384)
            } loc(#loc382)
          } loc(#loc380)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc255)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc256)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc257)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc385)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc262)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc263)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc264)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc387)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc266)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc267)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc266)
            } loc(#loc388)
          } loc(#loc386)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc271)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc271)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc271)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc390)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc274)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc275)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc276)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc276)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc391)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc278)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc279)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc278)
            } loc(#loc392)
          } loc(#loc389)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc282)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc283)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc284)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc394)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc287)
            } loc(#loc395)
          } loc(#loc393)
        } loc(#loc373)
      } loc(#loc372)
    } loc(#loc370)
    cir.return loc(#loc218)
  } loc(#loc369)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_08.c":66:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_08.c":84:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_08.c":57:1)
#loc22 = loc("CWE367_TOC_TOU__access_08.c":94:1)
#loc23 = loc("CWE367_TOC_TOU__access_08.c":59:5)
#loc24 = loc("CWE367_TOC_TOU__access_08.c":93:5)
#loc25 = loc("CWE367_TOC_TOU__access_08.c":59:8)
#loc26 = loc("CWE367_TOC_TOU__access_08.c":59:26)
#loc27 = loc("CWE367_TOC_TOU__access_08.c":60:5)
#loc28 = loc("CWE367_TOC_TOU__access_08.c":61:9)
#loc29 = loc("CWE367_TOC_TOU__access_08.c":92:9)
#loc30 = loc("CWE367_TOC_TOU__access_08.c":62:13)
#loc31 = loc("CWE367_TOC_TOU__access_08.c":62:34)
#loc32 = loc("CWE367_TOC_TOU__access_08.c":63:13)
#loc33 = loc("CWE367_TOC_TOU__access_08.c":63:29)
#loc34 = loc("CWE367_TOC_TOU__access_08.c":63:28)
#loc35 = loc("CWE367_TOC_TOU__access_08.c":64:13)
#loc36 = loc("CWE367_TOC_TOU__access_08.c":69:13)
#loc37 = loc("CWE367_TOC_TOU__access_08.c":64:23)
#loc38 = loc("CWE367_TOC_TOU__access_08.c":64:33)
#loc39 = loc("CWE367_TOC_TOU__access_08.c":64:38)
#loc40 = loc("CWE367_TOC_TOU__access_08.c":64:17)
#loc41 = loc("CWE367_TOC_TOU__access_08.c":64:48)
#loc42 = loc("CWE367_TOC_TOU__access_08.c":65:13)
#loc43 = loc("CWE367_TOC_TOU__access_08.c":66:17)
#loc44 = loc("CWE367_TOC_TOU__access_08.c":68:31)
#loc45 = loc("CWE367_TOC_TOU__access_08.c":68:26)
#loc46 = loc("CWE367_TOC_TOU__access_08.c":68:17)
#loc47 = loc("CWE367_TOC_TOU__access_08.c":70:13)
#loc48 = loc("CWE367_TOC_TOU__access_08.c":73:13)
#loc49 = loc("CWE367_TOC_TOU__access_08.c":70:17)
#loc50 = loc("CWE367_TOC_TOU__access_08.c":70:24)
#loc51 = loc("CWE367_TOC_TOU__access_08.c":70:36)
#loc52 = loc("CWE367_TOC_TOU__access_08.c":71:13)
#loc53 = loc("CWE367_TOC_TOU__access_08.c":72:48)
#loc54 = loc("CWE367_TOC_TOU__access_08.c":72:26)
#loc55 = loc("CWE367_TOC_TOU__access_08.c":72:33)
#loc56 = loc("CWE367_TOC_TOU__access_08.c":72:43)
#loc57 = loc("CWE367_TOC_TOU__access_08.c":72:17)
#loc58 = loc("CWE367_TOC_TOU__access_08.c":75:13)
#loc59 = loc("CWE367_TOC_TOU__access_08.c":78:13)
#loc60 = loc("CWE367_TOC_TOU__access_08.c":75:24)
#loc61 = loc("CWE367_TOC_TOU__access_08.c":75:34)
#loc62 = loc("CWE367_TOC_TOU__access_08.c":75:17)
#loc63 = loc("CWE367_TOC_TOU__access_08.c":75:44)
#loc64 = loc("CWE367_TOC_TOU__access_08.c":75:43)
#loc65 = loc("CWE367_TOC_TOU__access_08.c":76:13)
#loc66 = loc("CWE367_TOC_TOU__access_08.c":77:17)
#loc67 = loc("CWE367_TOC_TOU__access_08.c":77:22)
#loc68 = loc("CWE367_TOC_TOU__access_08.c":79:30)
#loc69 = loc("CWE367_TOC_TOU__access_08.c":79:40)
#loc70 = loc("CWE367_TOC_TOU__access_08.c":79:25)
#loc71 = loc("CWE367_TOC_TOU__access_08.c":79:13)
#loc72 = loc("CWE367_TOC_TOU__access_08.c":79:46)
#loc73 = loc("CWE367_TOC_TOU__access_08.c":80:13)
#loc74 = loc("CWE367_TOC_TOU__access_08.c":83:13)
#loc75 = loc("CWE367_TOC_TOU__access_08.c":80:17)
#loc76 = loc("CWE367_TOC_TOU__access_08.c":80:30)
#loc77 = loc("CWE367_TOC_TOU__access_08.c":80:29)
#loc78 = loc("CWE367_TOC_TOU__access_08.c":81:13)
#loc79 = loc("CWE367_TOC_TOU__access_08.c":82:17)
#loc80 = loc("CWE367_TOC_TOU__access_08.c":82:22)
#loc81 = loc("CWE367_TOC_TOU__access_08.c":84:13)
#loc82 = loc("CWE367_TOC_TOU__access_08.c":87:13)
#loc83 = loc("CWE367_TOC_TOU__access_08.c":84:23)
#loc84 = loc("CWE367_TOC_TOU__access_08.c":84:50)
#loc85 = loc("CWE367_TOC_TOU__access_08.c":84:72)
#loc86 = loc("CWE367_TOC_TOU__access_08.c":84:17)
#loc87 = loc("CWE367_TOC_TOU__access_08.c":84:79)
#loc88 = loc("CWE367_TOC_TOU__access_08.c":84:78)
#loc89 = loc("CWE367_TOC_TOU__access_08.c":85:13)
#loc90 = loc("CWE367_TOC_TOU__access_08.c":86:17)
#loc91 = loc("CWE367_TOC_TOU__access_08.c":86:22)
#loc92 = loc("CWE367_TOC_TOU__access_08.c":88:13)
#loc93 = loc("CWE367_TOC_TOU__access_08.c":91:13)
#loc94 = loc("CWE367_TOC_TOU__access_08.c":88:17)
#loc95 = loc("CWE367_TOC_TOU__access_08.c":88:30)
#loc96 = loc("CWE367_TOC_TOU__access_08.c":88:29)
#loc97 = loc("CWE367_TOC_TOU__access_08.c":89:13)
#loc98 = loc("CWE367_TOC_TOU__access_08.c":90:23)
#loc99 = loc("CWE367_TOC_TOU__access_08.c":90:17)
#loc100 = loc("CWE367_TOC_TOU__access_08.c":177:1)
#loc101 = loc("CWE367_TOC_TOU__access_08.c":181:1)
#loc102 = loc("CWE367_TOC_TOU__access_08.c":179:5)
#loc103 = loc("CWE367_TOC_TOU__access_08.c":179:11)
#loc104 = loc("CWE367_TOC_TOU__access_08.c":180:5)
#loc105 = loc("CWE367_TOC_TOU__access_08.c":180:11)
#loc106 = loc("/usr/include/stdlib.h":575:1)
#loc107 = loc("/usr/include/stdlib.h":575:41)
#loc108 = loc("/usr/include/time.h":76:1)
#loc109 = loc("/usr/include/time.h":76:38)
#loc110 = loc("CWE367_TOC_TOU__access_08.c":197:15)
#loc111 = loc("CWE367_TOC_TOU__access_08.c":199:15)
#loc112 = loc("CWE367_TOC_TOU__access_08.c":202:15)
#loc113 = loc("CWE367_TOC_TOU__access_08.c":204:15)
#loc114 = loc("CWE367_TOC_TOU__access_08.c":192:1)
#loc115 = loc("CWE367_TOC_TOU__access_08.c":207:1)
#loc120 = loc("CWE367_TOC_TOU__access_08.c":193:1)
#loc121 = loc("CWE367_TOC_TOU__access_08.c":195:27)
#loc122 = loc("CWE367_TOC_TOU__access_08.c":195:22)
#loc123 = loc("CWE367_TOC_TOU__access_08.c":195:5)
#loc124 = loc("CWE367_TOC_TOU__access_08.c":197:5)
#loc125 = loc("CWE367_TOC_TOU__access_08.c":198:5)
#loc126 = loc("CWE367_TOC_TOU__access_08.c":198:36)
#loc127 = loc("CWE367_TOC_TOU__access_08.c":199:5)
#loc128 = loc("CWE367_TOC_TOU__access_08.c":202:5)
#loc129 = loc("CWE367_TOC_TOU__access_08.c":203:5)
#loc130 = loc("CWE367_TOC_TOU__access_08.c":203:35)
#loc131 = loc("CWE367_TOC_TOU__access_08.c":204:5)
#loc132 = loc("CWE367_TOC_TOU__access_08.c":206:12)
#loc133 = loc("CWE367_TOC_TOU__access_08.c":206:5)
#loc134 = loc("CWE367_TOC_TOU__access_08.c":45:1)
#loc135 = loc("CWE367_TOC_TOU__access_08.c":48:1)
#loc136 = loc("CWE367_TOC_TOU__access_08.c":47:12)
#loc137 = loc("CWE367_TOC_TOU__access_08.c":47:5)
#loc138 = loc("CWE367_TOC_TOU__access_08.c":106:19)
#loc139 = loc("CWE367_TOC_TOU__access_08.c":129:33)
#loc140 = loc("CWE367_TOC_TOU__access_08.c":101:1)
#loc141 = loc("CWE367_TOC_TOU__access_08.c":139:1)
#loc142 = loc("CWE367_TOC_TOU__access_08.c":103:5)
#loc143 = loc("CWE367_TOC_TOU__access_08.c":138:5)
#loc144 = loc("CWE367_TOC_TOU__access_08.c":103:8)
#loc145 = loc("CWE367_TOC_TOU__access_08.c":103:27)
#loc146 = loc("CWE367_TOC_TOU__access_08.c":104:5)
#loc147 = loc("CWE367_TOC_TOU__access_08.c":107:5)
#loc148 = loc("CWE367_TOC_TOU__access_08.c":109:5)
#loc149 = loc("CWE367_TOC_TOU__access_08.c":106:9)
#loc150 = loc("CWE367_TOC_TOU__access_08.c":110:9)
#loc151 = loc("CWE367_TOC_TOU__access_08.c":137:9)
#loc152 = loc("CWE367_TOC_TOU__access_08.c":111:13)
#loc153 = loc("CWE367_TOC_TOU__access_08.c":111:34)
#loc154 = loc("CWE367_TOC_TOU__access_08.c":112:13)
#loc155 = loc("CWE367_TOC_TOU__access_08.c":112:29)
#loc156 = loc("CWE367_TOC_TOU__access_08.c":112:28)
#loc157 = loc("CWE367_TOC_TOU__access_08.c":113:13)
#loc158 = loc("CWE367_TOC_TOU__access_08.c":118:13)
#loc159 = loc("CWE367_TOC_TOU__access_08.c":113:23)
#loc160 = loc("CWE367_TOC_TOU__access_08.c":113:33)
#loc161 = loc("CWE367_TOC_TOU__access_08.c":113:38)
#loc162 = loc("CWE367_TOC_TOU__access_08.c":113:17)
#loc163 = loc("CWE367_TOC_TOU__access_08.c":113:48)
#loc164 = loc("CWE367_TOC_TOU__access_08.c":114:13)
#loc165 = loc("CWE367_TOC_TOU__access_08.c":115:27)
#loc166 = loc("CWE367_TOC_TOU__access_08.c":115:17)
#loc167 = loc("CWE367_TOC_TOU__access_08.c":117:31)
#loc168 = loc("CWE367_TOC_TOU__access_08.c":117:26)
#loc169 = loc("CWE367_TOC_TOU__access_08.c":117:17)
#loc170 = loc("CWE367_TOC_TOU__access_08.c":119:13)
#loc171 = loc("CWE367_TOC_TOU__access_08.c":122:13)
#loc172 = loc("CWE367_TOC_TOU__access_08.c":119:17)
#loc173 = loc("CWE367_TOC_TOU__access_08.c":119:24)
#loc174 = loc("CWE367_TOC_TOU__access_08.c":119:36)
#loc175 = loc("CWE367_TOC_TOU__access_08.c":120:13)
#loc176 = loc("CWE367_TOC_TOU__access_08.c":121:48)
#loc177 = loc("CWE367_TOC_TOU__access_08.c":121:26)
#loc178 = loc("CWE367_TOC_TOU__access_08.c":121:33)
#loc179 = loc("CWE367_TOC_TOU__access_08.c":121:43)
#loc180 = loc("CWE367_TOC_TOU__access_08.c":121:17)
#loc181 = loc("CWE367_TOC_TOU__access_08.c":124:30)
#loc182 = loc("CWE367_TOC_TOU__access_08.c":124:40)
#loc183 = loc("CWE367_TOC_TOU__access_08.c":124:25)
#loc184 = loc("CWE367_TOC_TOU__access_08.c":124:13)
#loc185 = loc("CWE367_TOC_TOU__access_08.c":124:46)
#loc186 = loc("CWE367_TOC_TOU__access_08.c":125:13)
#loc187 = loc("CWE367_TOC_TOU__access_08.c":128:13)
#loc188 = loc("CWE367_TOC_TOU__access_08.c":125:17)
#loc189 = loc("CWE367_TOC_TOU__access_08.c":125:30)
#loc190 = loc("CWE367_TOC_TOU__access_08.c":125:29)
#loc191 = loc("CWE367_TOC_TOU__access_08.c":126:13)
#loc192 = loc("CWE367_TOC_TOU__access_08.c":127:17)
#loc193 = loc("CWE367_TOC_TOU__access_08.c":127:22)
#loc194 = loc("CWE367_TOC_TOU__access_08.c":129:13)
#loc195 = loc("CWE367_TOC_TOU__access_08.c":132:13)
#loc196 = loc("CWE367_TOC_TOU__access_08.c":129:23)
#loc197 = loc("CWE367_TOC_TOU__access_08.c":129:51)
#loc198 = loc("CWE367_TOC_TOU__access_08.c":129:74)
#loc199 = loc("CWE367_TOC_TOU__access_08.c":129:17)
#loc200 = loc("CWE367_TOC_TOU__access_08.c":129:81)
#loc201 = loc("CWE367_TOC_TOU__access_08.c":129:80)
#loc202 = loc("CWE367_TOC_TOU__access_08.c":130:13)
#loc203 = loc("CWE367_TOC_TOU__access_08.c":131:17)
#loc204 = loc("CWE367_TOC_TOU__access_08.c":131:22)
#loc205 = loc("CWE367_TOC_TOU__access_08.c":133:13)
#loc206 = loc("CWE367_TOC_TOU__access_08.c":136:13)
#loc207 = loc("CWE367_TOC_TOU__access_08.c":133:17)
#loc208 = loc("CWE367_TOC_TOU__access_08.c":133:30)
#loc209 = loc("CWE367_TOC_TOU__access_08.c":133:29)
#loc210 = loc("CWE367_TOC_TOU__access_08.c":134:13)
#loc211 = loc("CWE367_TOC_TOU__access_08.c":135:23)
#loc212 = loc("CWE367_TOC_TOU__access_08.c":135:17)
#loc213 = loc("CWE367_TOC_TOU__access_08.c":50:1)
#loc214 = loc("CWE367_TOC_TOU__access_08.c":53:1)
#loc215 = loc("CWE367_TOC_TOU__access_08.c":52:12)
#loc216 = loc("CWE367_TOC_TOU__access_08.c":52:5)
#loc217 = loc("CWE367_TOC_TOU__access_08.c":142:1)
#loc218 = loc("CWE367_TOC_TOU__access_08.c":175:1)
#loc219 = loc("CWE367_TOC_TOU__access_08.c":144:5)
#loc220 = loc("CWE367_TOC_TOU__access_08.c":174:5)
#loc221 = loc("CWE367_TOC_TOU__access_08.c":144:8)
#loc222 = loc("CWE367_TOC_TOU__access_08.c":144:26)
#loc223 = loc("CWE367_TOC_TOU__access_08.c":145:5)
#loc224 = loc("CWE367_TOC_TOU__access_08.c":146:9)
#loc225 = loc("CWE367_TOC_TOU__access_08.c":173:9)
#loc226 = loc("CWE367_TOC_TOU__access_08.c":147:13)
#loc227 = loc("CWE367_TOC_TOU__access_08.c":147:34)
#loc228 = loc("CWE367_TOC_TOU__access_08.c":148:13)
#loc229 = loc("CWE367_TOC_TOU__access_08.c":148:29)
#loc230 = loc("CWE367_TOC_TOU__access_08.c":148:28)
#loc231 = loc("CWE367_TOC_TOU__access_08.c":149:13)
#loc232 = loc("CWE367_TOC_TOU__access_08.c":154:13)
#loc233 = loc("CWE367_TOC_TOU__access_08.c":149:23)
#loc234 = loc("CWE367_TOC_TOU__access_08.c":149:33)
#loc235 = loc("CWE367_TOC_TOU__access_08.c":149:38)
#loc236 = loc("CWE367_TOC_TOU__access_08.c":149:17)
#loc237 = loc("CWE367_TOC_TOU__access_08.c":149:48)
#loc238 = loc("CWE367_TOC_TOU__access_08.c":150:13)
#loc239 = loc("CWE367_TOC_TOU__access_08.c":151:27)
#loc240 = loc("CWE367_TOC_TOU__access_08.c":151:17)
#loc241 = loc("CWE367_TOC_TOU__access_08.c":153:31)
#loc242 = loc("CWE367_TOC_TOU__access_08.c":153:26)
#loc243 = loc("CWE367_TOC_TOU__access_08.c":153:17)
#loc244 = loc("CWE367_TOC_TOU__access_08.c":155:13)
#loc245 = loc("CWE367_TOC_TOU__access_08.c":158:13)
#loc246 = loc("CWE367_TOC_TOU__access_08.c":155:17)
#loc247 = loc("CWE367_TOC_TOU__access_08.c":155:24)
#loc248 = loc("CWE367_TOC_TOU__access_08.c":155:36)
#loc249 = loc("CWE367_TOC_TOU__access_08.c":156:13)
#loc250 = loc("CWE367_TOC_TOU__access_08.c":157:48)
#loc251 = loc("CWE367_TOC_TOU__access_08.c":157:26)
#loc252 = loc("CWE367_TOC_TOU__access_08.c":157:33)
#loc253 = loc("CWE367_TOC_TOU__access_08.c":157:43)
#loc254 = loc("CWE367_TOC_TOU__access_08.c":157:17)
#loc255 = loc("CWE367_TOC_TOU__access_08.c":160:30)
#loc256 = loc("CWE367_TOC_TOU__access_08.c":160:40)
#loc257 = loc("CWE367_TOC_TOU__access_08.c":160:25)
#loc258 = loc("CWE367_TOC_TOU__access_08.c":160:13)
#loc259 = loc("CWE367_TOC_TOU__access_08.c":160:46)
#loc260 = loc("CWE367_TOC_TOU__access_08.c":161:13)
#loc261 = loc("CWE367_TOC_TOU__access_08.c":164:13)
#loc262 = loc("CWE367_TOC_TOU__access_08.c":161:17)
#loc263 = loc("CWE367_TOC_TOU__access_08.c":161:30)
#loc264 = loc("CWE367_TOC_TOU__access_08.c":161:29)
#loc265 = loc("CWE367_TOC_TOU__access_08.c":162:13)
#loc266 = loc("CWE367_TOC_TOU__access_08.c":163:17)
#loc267 = loc("CWE367_TOC_TOU__access_08.c":163:22)
#loc268 = loc("CWE367_TOC_TOU__access_08.c":165:13)
#loc269 = loc("CWE367_TOC_TOU__access_08.c":168:13)
#loc270 = loc("CWE367_TOC_TOU__access_08.c":165:23)
#loc271 = loc("CWE367_TOC_TOU__access_08.c":165:33)
#loc272 = loc("CWE367_TOC_TOU__access_08.c":165:51)
#loc273 = loc("CWE367_TOC_TOU__access_08.c":165:74)
#loc274 = loc("CWE367_TOC_TOU__access_08.c":165:17)
#loc275 = loc("CWE367_TOC_TOU__access_08.c":165:81)
#loc276 = loc("CWE367_TOC_TOU__access_08.c":165:80)
#loc277 = loc("CWE367_TOC_TOU__access_08.c":166:13)
#loc278 = loc("CWE367_TOC_TOU__access_08.c":167:17)
#loc279 = loc("CWE367_TOC_TOU__access_08.c":167:22)
#loc280 = loc("CWE367_TOC_TOU__access_08.c":169:13)
#loc281 = loc("CWE367_TOC_TOU__access_08.c":172:13)
#loc282 = loc("CWE367_TOC_TOU__access_08.c":169:17)
#loc283 = loc("CWE367_TOC_TOU__access_08.c":169:30)
#loc284 = loc("CWE367_TOC_TOU__access_08.c":169:29)
#loc285 = loc("CWE367_TOC_TOU__access_08.c":170:13)
#loc286 = loc("CWE367_TOC_TOU__access_08.c":171:23)
#loc287 = loc("CWE367_TOC_TOU__access_08.c":171:17)
#loc288 = loc(fused[#loc1, #loc2])
#loc289 = loc(fused[#loc3, #loc4])
#loc290 = loc(fused[#loc5, #loc6])
#loc291 = loc(fused[#loc8, #loc9])
#loc292 = loc(fused[#loc10, #loc11])
#loc293 = loc(fused[#loc12, #loc13])
#loc294 = loc(fused[#loc14, #loc15])
#loc295 = loc(fused[#loc16, #loc17])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc21, #loc22])
#loc298 = loc(fused[#loc23, #loc24])
#loc299 = loc(fused[#loc25, #loc26])
#loc300 = loc(fused[#loc27, #loc24])
#loc301 = loc(fused[#loc28, #loc29])
#loc302 = loc(fused[#loc30, #loc31])
#loc303 = loc(fused[#loc32, #loc33])
#loc304 = loc(fused[#loc35, #loc36])
#loc305 = loc(fused[#loc40, #loc41])
#loc306 = loc(fused[#loc42, #loc36])
#loc307 = loc(fused[#loc46, #loc44])
#loc308 = loc(fused[#loc47, #loc48])
#loc309 = loc(fused[#loc49, #loc51])
#loc310 = loc(fused[#loc52, #loc48])
#loc311 = loc(fused[#loc54, #loc56])
#loc312 = loc(fused[#loc57, #loc53])
#loc313 = loc(fused[#loc58, #loc59])
#loc314 = loc(fused[#loc62, #loc63])
#loc315 = loc(fused[#loc65, #loc59])
#loc316 = loc(fused[#loc71, #loc72])
#loc317 = loc(fused[#loc73, #loc74])
#loc318 = loc(fused[#loc75, #loc76])
#loc319 = loc(fused[#loc78, #loc74])
#loc320 = loc(fused[#loc81, #loc82])
#loc321 = loc(fused[#loc84, #loc85])
#loc322 = loc(fused[#loc86, #loc87])
#loc323 = loc(fused[#loc89, #loc82])
#loc324 = loc(fused[#loc92, #loc93])
#loc325 = loc(fused[#loc94, #loc95])
#loc326 = loc(fused[#loc97, #loc93])
#loc327 = loc(fused[#loc100, #loc101])
#loc328 = loc(fused[#loc102, #loc103])
#loc329 = loc(fused[#loc104, #loc105])
#loc330 = loc(fused[#loc106, #loc107])
#loc331 = loc(fused[#loc108, #loc109])
#loc332 = loc(fused[#loc114, #loc115])
#loc335 = loc(fused[#loc125, #loc126])
#loc336 = loc(fused[#loc129, #loc130])
#loc337 = loc(fused[#loc133, #loc132])
#loc338 = loc(fused[#loc134, #loc135])
#loc339 = loc(fused[#loc137, #loc136])
#loc340 = loc(fused[#loc140, #loc141])
#loc341 = loc(fused[#loc142, #loc143])
#loc342 = loc(fused[#loc144, #loc145])
#loc343 = loc(fused[#loc146, #loc147, #loc148, #loc143])
#loc344 = loc(fused[#loc150, #loc151])
#loc345 = loc(fused[#loc152, #loc153])
#loc346 = loc(fused[#loc154, #loc155])
#loc347 = loc(fused[#loc157, #loc158])
#loc348 = loc(fused[#loc162, #loc163])
#loc349 = loc(fused[#loc164, #loc158])
#loc350 = loc(fused[#loc169, #loc167])
#loc351 = loc(fused[#loc170, #loc171])
#loc352 = loc(fused[#loc172, #loc174])
#loc353 = loc(fused[#loc175, #loc171])
#loc354 = loc(fused[#loc177, #loc179])
#loc355 = loc(fused[#loc180, #loc176])
#loc356 = loc(fused[#loc184, #loc185])
#loc357 = loc(fused[#loc186, #loc187])
#loc358 = loc(fused[#loc188, #loc189])
#loc359 = loc(fused[#loc191, #loc187])
#loc360 = loc(fused[#loc194, #loc195])
#loc361 = loc(fused[#loc197, #loc198])
#loc362 = loc(fused[#loc199, #loc200])
#loc363 = loc(fused[#loc202, #loc195])
#loc364 = loc(fused[#loc205, #loc206])
#loc365 = loc(fused[#loc207, #loc208])
#loc366 = loc(fused[#loc210, #loc206])
#loc367 = loc(fused[#loc213, #loc214])
#loc368 = loc(fused[#loc216, #loc215])
#loc369 = loc(fused[#loc217, #loc218])
#loc370 = loc(fused[#loc219, #loc220])
#loc371 = loc(fused[#loc221, #loc222])
#loc372 = loc(fused[#loc223, #loc220])
#loc373 = loc(fused[#loc224, #loc225])
#loc374 = loc(fused[#loc226, #loc227])
#loc375 = loc(fused[#loc228, #loc229])
#loc376 = loc(fused[#loc231, #loc232])
#loc377 = loc(fused[#loc236, #loc237])
#loc378 = loc(fused[#loc238, #loc232])
#loc379 = loc(fused[#loc243, #loc241])
#loc380 = loc(fused[#loc244, #loc245])
#loc381 = loc(fused[#loc246, #loc248])
#loc382 = loc(fused[#loc249, #loc245])
#loc383 = loc(fused[#loc251, #loc253])
#loc384 = loc(fused[#loc254, #loc250])
#loc385 = loc(fused[#loc258, #loc259])
#loc386 = loc(fused[#loc260, #loc261])
#loc387 = loc(fused[#loc262, #loc263])
#loc388 = loc(fused[#loc265, #loc261])
#loc389 = loc(fused[#loc268, #loc269])
#loc390 = loc(fused[#loc272, #loc273])
#loc391 = loc(fused[#loc274, #loc275])
#loc392 = loc(fused[#loc277, #loc269])
#loc393 = loc(fused[#loc280, #loc281])
#loc394 = loc(fused[#loc282, #loc283])
#loc395 = loc(fused[#loc285, #loc281])
