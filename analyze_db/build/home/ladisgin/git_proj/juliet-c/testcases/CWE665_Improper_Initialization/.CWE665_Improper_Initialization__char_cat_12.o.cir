!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc91)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc95)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc97)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc100)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc100)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc101)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc22)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc24)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc102)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc31)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc32)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc32)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc104)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc36)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc37)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %27 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    %30 = cir.call @strcat(%28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc8)
  } loc(#loc94)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc106)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc111)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc114)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc114)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc61)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc115)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc66)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.br ^bb4 loc(#loc64)
  ^bb3:  // pred: ^bb1
    %13 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc70)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    %20 = cir.const #cir.int<67> : !s32i loc(#loc77)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc78)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc78)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc82)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc83)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %32 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc86)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    %35 = cir.call @strcat(%33, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb7 loc(#loc75)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc50)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":149:1)
#loc4 = loc("/usr/include/string.h":150:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_12.c":23:1)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_12.c":46:1)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_12.c":39:9)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_12.c":39:24)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_12.c":25:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_12.c":25:12)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_12.c":26:5)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_12.c":26:24)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_12.c":27:12)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_12.c":27:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_12.c":28:5)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_12.c":37:5)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_12.c":28:8)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_12.c":28:33)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_12.c":29:5)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_12.c":32:5)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_12.c":34:5)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:19)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:9)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:14)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:15)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_12.c":38:5)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_12.c":45:5)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:16)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:24)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:29)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:33)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:9)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:34)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:25)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:16)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:20)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:9)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_12.c":43:9)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_12.c":43:16)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_12.c":43:22)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_12.c":44:19)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_12.c":44:9)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_12.c":79:1)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_12.c":82:1)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_12.c":81:5)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_12.c":81:13)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_12.c":54:1)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_12.c":77:1)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_12.c":70:9)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_12.c":70:24)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_12.c":56:5)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_12.c":56:12)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_12.c":57:5)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_12.c":57:24)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_12.c":58:12)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_12.c":58:5)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_12.c":59:5)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_12.c":68:5)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_12.c":59:8)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_12.c":59:33)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_12.c":60:5)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_12.c":63:5)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_12.c":65:5)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:19)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:9)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:14)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:15)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:19)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:9)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:14)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:15)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_12.c":69:5)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_12.c":76:5)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:16)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:24)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:29)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:33)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:9)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:34)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:25)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:16)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:20)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:9)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_12.c":74:9)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_12.c":74:16)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_12.c":74:22)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_12.c":75:19)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_12.c":75:9)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc16, #loc15])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc102 = loc(fused[#loc25, #loc24])
#loc103 = loc(fused[#loc28, #loc29])
#loc104 = loc(fused[#loc34, #loc35])
#loc105 = loc(fused[#loc39, #loc36])
#loc106 = loc(fused[#loc45, #loc46])
#loc107 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc49, #loc50])
#loc109 = loc(fused[#loc51, #loc52])
#loc110 = loc(fused[#loc53, #loc54])
#loc111 = loc(fused[#loc55, #loc56])
#loc112 = loc(fused[#loc58, #loc57])
#loc113 = loc(fused[#loc59, #loc60])
#loc114 = loc(fused[#loc61, #loc62])
#loc115 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc116 = loc(fused[#loc67, #loc66])
#loc117 = loc(fused[#loc71, #loc70])
#loc118 = loc(fused[#loc74, #loc75])
#loc119 = loc(fused[#loc80, #loc81])
#loc120 = loc(fused[#loc85, #loc82])
