!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":113:10)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":113:14)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":113:20)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":113:32)
#loc155 = loc(fused[#loc53, #loc54])
#loc156 = loc(fused[#loc55, #loc56])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc145)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %9 = cir.const #cir.int<6> : !s32i loc(#loc25)
      cir.switch (%9 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc27)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc30)
          %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
          cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
          cir.break loc(#loc33)
        } loc(#loc26)
        cir.case(default, []) {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          cir.break loc(#loc36)
        } loc(#loc34)
        cir.yield loc(#loc23)
      } loc(#loc23)
    } loc(#loc148)
    cir.return loc(#loc12)
  } loc(#loc141)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc149)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc152)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_15_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_15_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc77)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc78)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc78)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc163)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc164)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc165)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %9 = cir.const #cir.int<5> : !s32i loc(#loc85)
      cir.switch (%9 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          cir.break loc(#loc89)
        } loc(#loc86)
        cir.case(default, []) {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
            %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
            cir.if %13 {
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc96)
              %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc98)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc98)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc96)
              %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc100)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc101)
              %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
            } loc(#loc170)
          } loc(#loc168)
          cir.break loc(#loc103)
        } loc(#loc90)
        cir.yield loc(#loc83)
      } loc(#loc83)
    } loc(#loc167)
    cir.return loc(#loc72)
  } loc(#loc160)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc108)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc111)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc111)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc174)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc175)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %9 = cir.const #cir.int<6> : !s32i loc(#loc118)
      cir.switch (%9 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
            %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
            cir.if %13 {
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc125)
              %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc127)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc127)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
              %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc129)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc130)
              %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc130)
            } loc(#loc181)
          } loc(#loc179)
          cir.break loc(#loc132)
        } loc(#loc119)
        cir.case(default, []) {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc135)
          cir.break loc(#loc136)
        } loc(#loc133)
        cir.yield loc(#loc116)
      } loc(#loc116)
    } loc(#loc178)
    cir.return loc(#loc105)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":33:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":39:19)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":23:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":42:1)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":25:5)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":25:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":26:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":26:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":28:20)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":28:27)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":28:30)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":28:41)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":28:42)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":28:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":29:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":41:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":29:12)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":31:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":33:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":33:16)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":34:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":34:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":35:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":35:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":36:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":37:5)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":39:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":40:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":98:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":102:1)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":100:5)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":100:14)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":101:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":101:14)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":118:15)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":120:15)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":123:15)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":125:15)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":113:1)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":128:1)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":114:1)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":116:27)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":116:22)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":116:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":118:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":119:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":119:56)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":120:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":123:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":124:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":124:55)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":125:5)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":127:12)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":127:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":49:1)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":71:1)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":51:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":51:12)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":52:12)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":52:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":54:20)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":54:27)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":54:30)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":54:41)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":54:42)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":54:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":55:5)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":70:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":55:12)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":57:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":59:19)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":59:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":60:9)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":61:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":63:9)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":68:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":63:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":63:21)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":64:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":65:13)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":65:20)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":65:26)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":66:23)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":66:13)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":67:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":67:18)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":69:9)
#loc104 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":74:1)
#loc105 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":96:1)
#loc106 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":76:5)
#loc107 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":76:12)
#loc108 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":77:12)
#loc109 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":77:5)
#loc110 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":79:20)
#loc111 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":79:27)
#loc112 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":79:30)
#loc113 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":79:41)
#loc114 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":79:42)
#loc115 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":79:5)
#loc116 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":80:5)
#loc117 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":95:5)
#loc118 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":80:12)
#loc119 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":82:5)
#loc120 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":84:9)
#loc121 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":89:9)
#loc122 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":84:13)
#loc123 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":84:21)
#loc124 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":85:9)
#loc125 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":86:13)
#loc126 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":86:20)
#loc127 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":86:26)
#loc128 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":87:23)
#loc129 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":87:13)
#loc130 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":88:13)
#loc131 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":88:18)
#loc132 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":90:9)
#loc133 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":91:5)
#loc134 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":93:19)
#loc135 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":93:9)
#loc136 = loc("CWE690_NULL_Deref_From_Return__char_malloc_15.c":94:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc6, #loc7])
#loc140 = loc(fused[#loc8, #loc9])
#loc141 = loc(fused[#loc11, #loc12])
#loc142 = loc(fused[#loc13, #loc14])
#loc143 = loc(fused[#loc16, #loc15])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc18, #loc20])
#loc146 = loc(fused[#loc17, #loc21])
#loc147 = loc(fused[#loc22, #loc21])
#loc148 = loc(fused[#loc23, #loc24])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc39, #loc40])
#loc151 = loc(fused[#loc41, #loc42])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc62, #loc63])
#loc158 = loc(fused[#loc66, #loc67])
#loc159 = loc(fused[#loc70, #loc69])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc73, #loc74])
#loc162 = loc(fused[#loc76, #loc75])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc78, #loc80])
#loc165 = loc(fused[#loc77, #loc81])
#loc166 = loc(fused[#loc82, #loc81])
#loc167 = loc(fused[#loc83, #loc84])
#loc168 = loc(fused[#loc91, #loc92])
#loc169 = loc(fused[#loc93, #loc94])
#loc170 = loc(fused[#loc95, #loc92])
#loc171 = loc(fused[#loc104, #loc105])
#loc172 = loc(fused[#loc106, #loc107])
#loc173 = loc(fused[#loc109, #loc108])
#loc174 = loc(fused[#loc112, #loc113])
#loc175 = loc(fused[#loc111, #loc113])
#loc176 = loc(fused[#loc110, #loc114])
#loc177 = loc(fused[#loc115, #loc114])
#loc178 = loc(fused[#loc116, #loc117])
#loc179 = loc(fused[#loc120, #loc121])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc124, #loc121])
