!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc264)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc265)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc268)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc269)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc270)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc271)
  cir.func private @close(!s32i) -> !s32i loc(#loc272)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc273)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc276)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc276)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc276)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc264)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc33)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc279)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc282)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc283)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc284)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc285)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc286)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc44)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc285)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
          cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc286)
          cir.scope {
            cir.do {
              cir.scope {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc53)
                %19 = cir.const #cir.int<1> : !u32i loc(#loc54)
                %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc54)
                %21 = cir.const #cir.int<6> : !u32i loc(#loc55)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc55)
                %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc289)
                cir.scope {
                  %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc62)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc291)
                  cir.if %76 {
                    cir.break loc(#loc64)
                  } loc(#loc292)
                } loc(#loc290)
                %24 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc293)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc67)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc294)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc295)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc72)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc72)
                %29 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc296)
                %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
                %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
                %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
                %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc297)
                %35 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc80)
                %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc298)
                cir.scope {
                  %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %74 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc300)
                  %75 = cir.const #cir.int<16> : !u64i loc(#loc301)
                  %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc301)
                  %77 = cir.call @connect(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc93)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc302)
                  cir.if %80 {
                    cir.break loc(#loc95)
                  } loc(#loc303)
                } loc(#loc299)
                %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
                %41 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc98)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc99)
                %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc304)
                %44 = cir.const #cir.int<1> : !u64i loc(#loc305)
                %45 = cir.const #cir.int<4096> : !s32i loc(#loc104)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc104)
                %47 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc105)
                %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc306)
                %49 = cir.const #cir.int<1> : !s32i loc(#loc106)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc106)
                %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc307)
                %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc308)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc108)
                %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
                %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc109)
                cir.store %55, %8 : !s32i, !cir.ptr<!s32i> loc(#loc309)
                cir.scope {
                  %73 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc115)
                  %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc115)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc311)
                  %77 = cir.ternary(%76, true {
                    %78 = cir.const #true loc(#loc116)
                    cir.yield %78 : !cir.bool loc(#loc116)
                  }, false {
                    %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc118)
                    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc312)
                    %81 = cir.ternary(%80, true {
                      %82 = cir.const #true loc(#loc116)
                      cir.yield %82 : !cir.bool loc(#loc116)
                    }, false {
                      %82 = cir.const #false loc(#loc116)
                      cir.yield %82 : !cir.bool loc(#loc116)
                    }) : (!cir.bool) -> !cir.bool loc(#loc116)
                    cir.yield %81 : !cir.bool loc(#loc116)
                  }) : (!cir.bool) -> !cir.bool loc(#loc116)
                  cir.if %77 {
                    cir.break loc(#loc120)
                  } loc(#loc313)
                } loc(#loc310)
                %56 = cir.const #cir.int<0> : !s8i loc(#loc121)
                %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
                %58 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc123)
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc124)
                %61 = cir.const #cir.int<1> : !u64i loc(#loc314)
                %62 = cir.binop(div, %60, %61) : !u64i loc(#loc315)
                %63 = cir.binop(add, %58, %62) : !u64i loc(#loc316)
                %64 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc127)
                cir.store %56, %64 : !s8i, !cir.ptr<!s8i> loc(#loc317)
                %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
                %66 = cir.const #cir.int<13> : !s8i loc(#loc129)
                %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc129)
                %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc130)
                cir.store %68, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
                cir.scope {
                  %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
                  %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
                  cir.if %74 {
                    %75 = cir.const #cir.int<0> : !s8i loc(#loc137)
                    %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc321)
                  } loc(#loc320)
                } loc(#loc319)
                %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
                %70 = cir.const #cir.int<10> : !s8i loc(#loc141)
                %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc141)
                %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc142)
                cir.store %72, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
                cir.scope {
                  %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                  %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
                  cir.if %74 {
                    %75 = cir.const #cir.int<0> : !s8i loc(#loc149)
                    %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc325)
                  } loc(#loc324)
                } loc(#loc323)
              } loc(#loc288)
              cir.yield loc(#loc50)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc152)
              cir.condition(%19) loc(#loc152)
            } loc(#loc287)
          } loc(#loc287)
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc156)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc327)
            cir.if %21 {
              %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc159)
            } loc(#loc328)
          } loc(#loc326)
        } loc(#loc281)
      } loc(#loc280)
    } loc(#loc278)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc330)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc165)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc166)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc331)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc167)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc168)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc332)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc169)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc333)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc176)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc335)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc178)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc179)
        } loc(#loc336)
      } loc(#loc334)
    } loc(#loc329)
    cir.return loc(#loc23)
  } loc(#loc274)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc337)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc182)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc338)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc185)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc340)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc341)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc341)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc341)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc264)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc196)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc197)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc344)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc182)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc182)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc201)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc202)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc185)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc185)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc202)
      } loc(#loc345)
    } loc(#loc343)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc347)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc209)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc210)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc348)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc211)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc212)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc349)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc213)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc350)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc220)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc352)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc223)
        } loc(#loc353)
      } loc(#loc351)
    } loc(#loc346)
    cir.return loc(#loc187)
  } loc(#loc339)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc355)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc356)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc356)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc356)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc230)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
    cir.scope {
      %4 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc264)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc234)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc235)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc359)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc237)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
        %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc239)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc239)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc237)
      } loc(#loc360)
    } loc(#loc358)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc362)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc245)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc246)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc363)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc247)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc248)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc364)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc249)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc365)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc254)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc255)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc256)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc367)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc258)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc259)
        } loc(#loc368)
      } loc(#loc366)
    } loc(#loc361)
    cir.return loc(#loc225)
  } loc(#loc354)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_07L8goodG2B1Ev() : () -> () loc(#loc262)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_07L8goodG2B2Ev() : () -> () loc(#loc263)
    cir.return loc(#loc261)
  } loc(#loc369)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":0:0)
#loc1 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":55:1)
#loc2 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":55:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":96:53)
#loc10 = loc("/usr/include/netinet/in.h":402:1)
#loc11 = loc("/usr/include/netinet/in.h":403:40)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":226:1)
#loc17 = loc("/usr/include/string.h":227:50)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/include/fcntl.h":209:1)
#loc21 = loc("/usr/include/fcntl.h":209:56)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":62:1)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":146:1)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":64:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":64:12)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":65:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":65:37)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":66:12)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":66:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":67:5)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":136:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":67:8)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":67:20)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":68:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":69:9)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":135:9)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":74:13)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":74:17)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":75:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":75:32)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":76:13)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":76:19)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":77:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":77:36)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":78:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":78:41)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":78:30)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":78:37)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":79:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":124:21)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":80:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":123:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":89:40)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":89:49)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":89:62)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":89:33)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":89:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":89:73)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":90:17)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":93:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":90:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":90:38)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":91:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":92:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:24)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:25)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:34)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:37)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:51)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:17)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":94:52)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":95:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":95:17)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":96:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":96:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":96:63)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":97:42)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":97:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":97:17)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":97:50)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":101:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:29)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:62)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:63)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:72)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:86)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:21)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":98:92)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":99:17)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":100:21)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:35)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:59)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:66)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:64)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:50)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:73)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:76)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:87)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:92)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:107)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:117)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:118)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:121)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:30)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":105:122)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":106:17)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":109:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":106:21)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":106:35)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":106:48)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":106:51)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":106:65)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":107:17)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":108:21)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:61)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:17)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:22)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:32)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:45)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:56)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":111:57)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":113:34)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":113:40)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":113:27)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":113:17)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":113:44)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":114:17)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":117:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":114:21)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":115:17)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":116:32)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":116:22)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":116:21)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":118:34)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":118:40)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":118:27)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":118:17)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":118:44)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":119:17)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":122:17)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":119:21)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":120:17)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":121:32)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":121:22)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":121:21)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":124:20)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":125:13)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":128:13)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":125:17)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":125:34)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":126:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":127:30)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":127:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":137:5)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":145:5)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":138:9)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":138:13)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:25)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:31)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:38)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:47)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:55)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:20)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:9)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":140:63)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":141:9)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":144:9)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":141:13)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":141:26)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":141:25)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":142:9)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":143:19)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":143:13)
#loc180 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":161:19)
#loc183 = loc("/usr/include/string.h":149:1)
#loc184 = loc("/usr/include/string.h":150:14)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":170:22)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":153:1)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":182:1)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":155:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":155:12)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":156:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":156:37)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":157:12)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":157:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":158:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":172:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":158:8)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":158:20)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":159:5)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":162:5)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":164:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":161:9)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":170:9)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":170:16)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":173:5)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":181:5)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":174:9)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":174:13)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:25)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:31)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:38)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:47)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:55)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:20)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:9)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":176:63)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":177:9)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":180:9)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":177:13)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":177:26)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":177:25)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":178:9)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":179:19)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":179:13)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":185:1)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":209:1)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":187:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":187:12)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":188:5)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":188:37)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":189:12)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":189:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":190:5)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":199:5)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":190:8)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":190:20)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":191:5)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":197:9)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":197:16)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":197:22)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":200:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":208:5)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":201:9)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":201:13)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:25)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:31)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:38)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:47)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:55)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:20)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:9)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":203:63)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":204:9)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":207:9)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":204:13)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":204:26)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":204:25)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":205:9)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":206:19)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":206:13)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":211:1)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":215:1)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":213:5)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_07.cpp":214:5)
#loc264 = loc(fused[#loc1, #loc2])
#loc265 = loc(fused[#loc3, #loc4])
#loc266 = loc(fused[#loc5, #loc6])
#loc267 = loc(fused[#loc7, #loc8])
#loc268 = loc(fused[#loc10, #loc11])
#loc269 = loc(fused[#loc12, #loc13])
#loc270 = loc(fused[#loc14, #loc15])
#loc271 = loc(fused[#loc16, #loc17])
#loc272 = loc(fused[#loc18, #loc19])
#loc273 = loc(fused[#loc20, #loc21])
#loc274 = loc(fused[#loc22, #loc23])
#loc275 = loc(fused[#loc24, #loc25])
#loc276 = loc(fused[#loc26, #loc27])
#loc277 = loc(fused[#loc29, #loc28])
#loc278 = loc(fused[#loc30, #loc31])
#loc279 = loc(fused[#loc32, #loc33])
#loc280 = loc(fused[#loc34, #loc31])
#loc281 = loc(fused[#loc35, #loc36])
#loc282 = loc(fused[#loc37, #loc38])
#loc283 = loc(fused[#loc39, #loc40])
#loc284 = loc(fused[#loc41, #loc42])
#loc285 = loc(fused[#loc43, #loc44])
#loc286 = loc(fused[#loc45, #loc46])
#loc287 = loc(fused[#loc49, #loc50])
#loc288 = loc(fused[#loc51, #loc52])
#loc289 = loc(fused[#loc57, #loc58])
#loc290 = loc(fused[#loc59, #loc60])
#loc291 = loc(fused[#loc61, #loc62])
#loc292 = loc(fused[#loc63, #loc60])
#loc293 = loc(fused[#loc65, #loc66])
#loc294 = loc(fused[#loc68, #loc69])
#loc295 = loc(fused[#loc70, #loc71])
#loc296 = loc(fused[#loc74, #loc72])
#loc297 = loc(fused[#loc78, #loc79])
#loc298 = loc(fused[#loc83, #loc84])
#loc299 = loc(fused[#loc85, #loc86])
#loc300 = loc(fused[#loc88, #loc89])
#loc301 = loc(fused[#loc90, #loc91])
#loc302 = loc(fused[#loc92, #loc93])
#loc303 = loc(fused[#loc94, #loc86])
#loc304 = loc(fused[#loc100, #loc101])
#loc305 = loc(fused[#loc102, #loc103])
#loc306 = loc(fused[#loc104, #loc105])
#loc307 = loc(fused[#loc104, #loc106])
#loc308 = loc(fused[#loc102, #loc107])
#loc309 = loc(fused[#loc110, #loc111])
#loc310 = loc(fused[#loc112, #loc113])
#loc311 = loc(fused[#loc114, #loc115])
#loc312 = loc(fused[#loc117, #loc118])
#loc313 = loc(fused[#loc119, #loc113])
#loc314 = loc(fused[#loc125, #loc126])
#loc315 = loc(fused[#loc124, #loc126])
#loc316 = loc(fused[#loc123, #loc126])
#loc317 = loc(fused[#loc122, #loc121])
#loc318 = loc(fused[#loc131, #loc132])
#loc319 = loc(fused[#loc133, #loc134])
#loc320 = loc(fused[#loc136, #loc134])
#loc321 = loc(fused[#loc139, #loc137])
#loc322 = loc(fused[#loc143, #loc144])
#loc323 = loc(fused[#loc145, #loc146])
#loc324 = loc(fused[#loc148, #loc146])
#loc325 = loc(fused[#loc151, #loc149])
#loc326 = loc(fused[#loc153, #loc154])
#loc327 = loc(fused[#loc155, #loc156])
#loc328 = loc(fused[#loc157, #loc154])
#loc329 = loc(fused[#loc160, #loc161])
#loc330 = loc(fused[#loc162, #loc163])
#loc331 = loc(fused[#loc165, #loc166])
#loc332 = loc(fused[#loc167, #loc168])
#loc333 = loc(fused[#loc170, #loc171])
#loc334 = loc(fused[#loc172, #loc173])
#loc335 = loc(fused[#loc174, #loc175])
#loc336 = loc(fused[#loc177, #loc173])
#loc337 = loc(fused[#loc180, #loc181])
#loc338 = loc(fused[#loc183, #loc184])
#loc339 = loc(fused[#loc186, #loc187])
#loc340 = loc(fused[#loc188, #loc189])
#loc341 = loc(fused[#loc190, #loc191])
#loc342 = loc(fused[#loc193, #loc192])
#loc343 = loc(fused[#loc194, #loc195])
#loc344 = loc(fused[#loc196, #loc197])
#loc345 = loc(fused[#loc198, #loc199, #loc200, #loc195])
#loc346 = loc(fused[#loc204, #loc205])
#loc347 = loc(fused[#loc206, #loc207])
#loc348 = loc(fused[#loc209, #loc210])
#loc349 = loc(fused[#loc211, #loc212])
#loc350 = loc(fused[#loc214, #loc215])
#loc351 = loc(fused[#loc216, #loc217])
#loc352 = loc(fused[#loc218, #loc219])
#loc353 = loc(fused[#loc221, #loc217])
#loc354 = loc(fused[#loc224, #loc225])
#loc355 = loc(fused[#loc226, #loc227])
#loc356 = loc(fused[#loc228, #loc229])
#loc357 = loc(fused[#loc231, #loc230])
#loc358 = loc(fused[#loc232, #loc233])
#loc359 = loc(fused[#loc234, #loc235])
#loc360 = loc(fused[#loc236, #loc233])
#loc361 = loc(fused[#loc240, #loc241])
#loc362 = loc(fused[#loc242, #loc243])
#loc363 = loc(fused[#loc245, #loc246])
#loc364 = loc(fused[#loc247, #loc248])
#loc365 = loc(fused[#loc250, #loc251])
#loc366 = loc(fused[#loc252, #loc253])
#loc367 = loc(fused[#loc254, #loc255])
#loc368 = loc(fused[#loc257, #loc253])
#loc369 = loc(fused[#loc260, #loc261])
