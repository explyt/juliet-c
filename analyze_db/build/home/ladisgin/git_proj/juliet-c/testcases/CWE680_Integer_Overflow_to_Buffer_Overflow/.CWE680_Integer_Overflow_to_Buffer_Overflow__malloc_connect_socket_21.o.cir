!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":46:22)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":46:26)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:48)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":142:27)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":142:31)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":181:27)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":181:31)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc334 = loc(fused[#loc20, #loc21])
#loc401 = loc(fused[#loc190, #loc191])
#loc429 = loc(fused[#loc261, #loc262])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc325)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc328)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc329)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc330)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc331)
  cir.func private @close(!s32i) -> !s32i loc(#loc332)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc20, #loc21])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc336)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc337)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc338)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc334)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc19)
    cir.store %arg0, %4 : !s32i, !cir.ptr<!s32i> loc(#loc30)
    cir.br ^bb1 loc(#loc339)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc325)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %8 ^bb2, ^bb34 loc(#loc340)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc341)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc27)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb4 loc(#loc342)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc342)
  ^bb5:  // pred: ^bb26
    %11 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %12 ^bb6, ^bb27 loc(#loc39)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %13 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc42)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb7 loc(#loc344)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc49)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc346)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc51)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc47)
  ^bb10:  // pred: ^bb9
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc347)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc348)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc349)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc59)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc350)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc351)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc67)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc67)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc352)
    cir.br ^bb11 loc(#loc353)
  ^bb11:  // pred: ^bb10
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc354)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc355)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc355)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc80)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %43 ^bb12, ^bb13 loc(#loc357)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc82)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc73)
  ^bb14:  // pred: ^bb13
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc85)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc85)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc85)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc85)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc85)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc85)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc86)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc358)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc88)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb15 loc(#loc360)
  ^bb15:  // pred: ^bb14
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc94)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %63 ^bb16, ^bb17 loc(#loc95)
  ^bb16:  // pred: ^bb15
    %64 = cir.const #true loc(#loc95)
    cir.br ^bb22(%64 : !cir.bool) loc(#loc95)
  ^bb17:  // pred: ^bb15
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %67 ^bb18, ^bb19 loc(#loc95)
  ^bb18:  // pred: ^bb17
    %68 = cir.const #true loc(#loc95)
    cir.br ^bb20(%68 : !cir.bool) loc(#loc95)
  ^bb19:  // pred: ^bb17
    %69 = cir.const #false loc(#loc95)
    cir.br ^bb20(%69 : !cir.bool) loc(#loc95)
  ^bb20(%70: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc95)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%70 : !cir.bool) loc(#loc95)
  ^bb22(%71: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc95)
  ^bb23:  // pred: ^bb22
    cir.brcond %71 ^bb24, ^bb25 loc(#loc363)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc99)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc92)
  ^bb26:  // pred: ^bb25
    %72 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc100)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc364)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc104)
    cir.store %78, %4 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb5 loc(#loc38)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc38)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc366)
  ^bb29:  // pred: ^bb28
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc110)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %82 ^bb30, ^bb31 loc(#loc368)
  ^bb30:  // pred: ^bb29
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc113)
    cir.br ^bb31 loc(#loc108)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc108)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc36)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc32)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc32)
  ^bb35:  // pred: ^bb34
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.store %85, %5 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    %86 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    cir.return %86 : !s32i loc(#loc369)
  } loc(#loc333)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc370)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc371)
  cir.func private @printIntLine(!s32i) loc(#loc372)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc373)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc375)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc376)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc377)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc133)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc325)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %8 = cir.call @badSource(%7) : (!s32i) -> !s32i loc(#loc138)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.br ^bb1 loc(#loc381)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc144)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc382)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc383)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc384)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc385)
    cir.br ^bb2 loc(#loc386)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc387)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc388)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc156)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc150)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc389)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc159)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc390)
    cir.br ^bb7 loc(#loc389)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc161)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc162)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc391)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc163)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc392)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc168)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb10 loc(#loc158)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc158)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc169)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc170)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc394)
    cir.br ^bb7 loc(#loc389)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc158)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc173)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc174)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc175)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc176)
    cir.br ^bb14 loc(#loc142)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc125)
  } loc(#loc374)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc396)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc179)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc397)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc181)
    cir.return loc(#loc178)
  } loc(#loc395)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc398)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc399)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc187)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc190, #loc191])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc401)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc189)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb1 loc(#loc402)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc398)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc195)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc403)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc187)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    cir.br ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc200)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.br ^bb4 loc(#loc194)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    cir.return %9 : !s32i loc(#loc405)
  } loc(#loc400)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc407)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc408)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc409)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc213)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %6 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc398)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %8 = cir.call @goodG2B1Source(%7) : (!s32i) -> !s32i loc(#loc218)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb1 loc(#loc413)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc223)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc224)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc414)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc415)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc223)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc416)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc417)
    cir.br ^bb2 loc(#loc418)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc231)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc232)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc419)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc420)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc234)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc236)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc234)
    cir.br ^bb4 loc(#loc230)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc421)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc239)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc239)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc422)
    cir.br ^bb7 loc(#loc421)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc241)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc242)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc423)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc243)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc424)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc246)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc247)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc248)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc238)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc249)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc250)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc426)
    cir.br ^bb7 loc(#loc421)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc238)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc251)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc252)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc253)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc254)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc255)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc256)
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc205)
  } loc(#loc406)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc427)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc261, #loc262])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc260)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb1 loc(#loc430)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc427)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc266)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc431)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<20> : !s32i loc(#loc268)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    cir.br ^bb3 loc(#loc265)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc265)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    cir.return %7 : !s32i loc(#loc433)
  } loc(#loc428)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc435)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc436)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc437)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc281)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc283)
    %6 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc427)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %8 = cir.call @goodG2B2Source(%7) : (!s32i) -> !s32i loc(#loc286)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    cir.br ^bb1 loc(#loc441)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc291)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc292)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc442)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc443)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc291)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc444)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc445)
    cir.br ^bb2 loc(#loc446)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc299)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc300)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc300)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc447)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc448)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc302)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc304)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc302)
    cir.br ^bb4 loc(#loc298)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc298)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc449)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<0> : !s32i loc(#loc307)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc307)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc450)
    cir.br ^bb7 loc(#loc449)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc309)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc310)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc451)
    cir.brcond %28 ^bb8, ^bb12 loc(#loc311)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc452)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc313)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc314)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc315)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc316)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    cir.br ^bb10 loc(#loc306)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc306)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc317)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc318)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc454)
    cir.br ^bb7 loc(#loc449)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc306)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc319)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc320)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc321)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc322)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc323)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc323)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc324)
    cir.br ^bb14 loc(#loc290)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc273)
  } loc(#loc434)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":44:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":44:24)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":76:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":46:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":108:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":55:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":55:17)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":56:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":56:32)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":57:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":57:36)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":58:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":58:45)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":47:1)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":48:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":106:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":48:8)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":49:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":50:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":105:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":59:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":94:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":94:20)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":69:40)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":69:49)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":69:62)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":69:33)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":69:17)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":69:73)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":70:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":73:17)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":70:21)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":70:38)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":71:17)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":72:21)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:24)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:25)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:34)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:37)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:51)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":74:52)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":75:38)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":75:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":76:43)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":76:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":76:63)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":77:42)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":77:36)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":77:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":77:50)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":81:17)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:29)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:62)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:63)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:72)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:86)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:21)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":78:92)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":79:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":80:21)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:35)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:50)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:63)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:81)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:84)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:30)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":84:85)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":88:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:35)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:51)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":85:65)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":86:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":87:21)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":90:43)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":90:29)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":90:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":92:29)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":92:24)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":92:17)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":92:40)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":95:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":98:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":95:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":95:34)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":96:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":97:30)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":97:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":107:12)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":107:5)
#loc116 = loc("/usr/include/stdlib.h":672:1)
#loc117 = loc("/usr/include/stdlib.h":672:45)
#loc118 = loc("/usr/include/stdlib.h":756:1)
#loc119 = loc("/usr/include/stdlib.h":756:70)
#loc120 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc121 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc122 = loc("/usr/include/stdlib.h":687:1)
#loc123 = loc("/usr/include/stdlib.h":687:32)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":110:1)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":131:1)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":118:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":118:16)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":119:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":119:14)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":112:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":112:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":114:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":114:12)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":114:5)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":115:17)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":115:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":116:22)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":116:12)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":116:5)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":116:26)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":117:5)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":130:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":122:28)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":122:35)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":122:42)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":122:52)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":122:53)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":122:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:43)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:27)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:33)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:34)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:40)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":123:39)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":127:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:18)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:14)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:21)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:33)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:23)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":125:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":126:29)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":126:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":126:24)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":126:25)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:40)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":124:39)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":128:22)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":128:33)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":128:34)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":128:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":129:14)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":129:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":214:1)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":218:1)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":216:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":216:14)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":217:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":217:14)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":138:1)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":138:29)
#loc185 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc186 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":147:19)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":142:1)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":155:1)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":143:1)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":144:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":153:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":144:8)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":145:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":148:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":150:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":147:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":152:16)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":152:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":154:12)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":154:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":157:1)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":178:1)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":165:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":165:16)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":166:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":166:14)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":159:5)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":159:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":161:13)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":161:12)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":161:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":162:22)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":162:5)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":163:27)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":163:12)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":163:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":163:31)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":164:5)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":177:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":169:28)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":169:35)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":169:42)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":169:52)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":169:53)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":169:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:9)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:43)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:13)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:27)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:33)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:34)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:40)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":170:39)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:9)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":174:9)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:18)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:14)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:21)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:33)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:23)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":172:9)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":173:29)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":173:13)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":173:24)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":173:25)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:40)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":171:39)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":175:22)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":175:33)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":175:34)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":175:9)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":176:14)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":176:9)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":139:1)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":139:29)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":181:1)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":189:1)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":182:1)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":183:5)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":187:5)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":183:8)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":184:5)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":186:16)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":186:9)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":188:12)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":188:5)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":191:1)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":212:1)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":199:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":199:16)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":200:9)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":200:14)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":193:5)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":193:9)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":195:13)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":195:12)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":195:5)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":196:22)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":196:5)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":197:27)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":197:12)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":197:5)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":197:31)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":198:5)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":211:5)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":203:28)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":203:35)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":203:42)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":203:52)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":203:53)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":203:9)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:9)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:43)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:13)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:27)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:33)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:34)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:40)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":204:39)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:9)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":208:9)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:18)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:14)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:21)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:33)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:23)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":206:9)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":207:29)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":207:13)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":207:24)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":207:25)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:40)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":205:39)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":209:22)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":209:33)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":209:34)
#loc322 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":209:9)
#loc323 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":210:14)
#loc324 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_21.c":210:9)
#loc325 = loc(fused[#loc1, #loc2])
#loc326 = loc(fused[#loc3, #loc4])
#loc327 = loc(fused[#loc5, #loc6])
#loc328 = loc(fused[#loc8, #loc9])
#loc329 = loc(fused[#loc10, #loc11])
#loc330 = loc(fused[#loc12, #loc13])
#loc331 = loc(fused[#loc14, #loc15])
#loc332 = loc(fused[#loc16, #loc17])
#loc333 = loc(fused[#loc18, #loc19])
#loc335 = loc(fused[#loc22, #loc23])
#loc336 = loc(fused[#loc24, #loc25])
#loc337 = loc(fused[#loc26, #loc27])
#loc338 = loc(fused[#loc28, #loc29])
#loc339 = loc(fused[#loc31, #loc32])
#loc340 = loc(fused[#loc34, #loc32])
#loc341 = loc(fused[#loc35, #loc36])
#loc342 = loc(fused[#loc37, #loc38])
#loc343 = loc(fused[#loc44, #loc45])
#loc344 = loc(fused[#loc46, #loc47])
#loc345 = loc(fused[#loc48, #loc49])
#loc346 = loc(fused[#loc50, #loc47])
#loc347 = loc(fused[#loc52, #loc53])
#loc348 = loc(fused[#loc55, #loc56])
#loc349 = loc(fused[#loc57, #loc58])
#loc350 = loc(fused[#loc61, #loc59])
#loc351 = loc(fused[#loc65, #loc66])
#loc352 = loc(fused[#loc70, #loc71])
#loc353 = loc(fused[#loc72, #loc73])
#loc354 = loc(fused[#loc75, #loc76])
#loc355 = loc(fused[#loc77, #loc78])
#loc356 = loc(fused[#loc79, #loc80])
#loc357 = loc(fused[#loc81, #loc73])
#loc358 = loc(fused[#loc85, #loc86])
#loc359 = loc(fused[#loc89, #loc90])
#loc360 = loc(fused[#loc91, #loc92])
#loc361 = loc(fused[#loc93, #loc94])
#loc362 = loc(fused[#loc96, #loc97])
#loc363 = loc(fused[#loc98, #loc92])
#loc364 = loc(fused[#loc102, #loc100])
#loc365 = loc(fused[#loc105, #loc106])
#loc366 = loc(fused[#loc107, #loc108])
#loc367 = loc(fused[#loc109, #loc110])
#loc368 = loc(fused[#loc111, #loc108])
#loc369 = loc(fused[#loc115, #loc114])
#loc370 = loc(fused[#loc116, #loc117])
#loc371 = loc(fused[#loc118, #loc119])
#loc372 = loc(fused[#loc120, #loc121])
#loc373 = loc(fused[#loc122, #loc123])
#loc374 = loc(fused[#loc124, #loc125])
#loc375 = loc(fused[#loc126, #loc127])
#loc376 = loc(fused[#loc128, #loc129])
#loc377 = loc(fused[#loc130, #loc131])
#loc378 = loc(fused[#loc134, #loc132])
#loc379 = loc(fused[#loc136, #loc135])
#loc380 = loc(fused[#loc139, #loc140])
#loc381 = loc(fused[#loc141, #loc142])
#loc382 = loc(fused[#loc145, #loc146])
#loc383 = loc(fused[#loc144, #loc146])
#loc384 = loc(fused[#loc143, #loc147])
#loc385 = loc(fused[#loc148, #loc147])
#loc386 = loc(fused[#loc149, #loc150])
#loc387 = loc(fused[#loc151, #loc152])
#loc388 = loc(fused[#loc153, #loc150])
#loc389 = loc(fused[#loc157, #loc158])
#loc390 = loc(fused[#loc160, #loc159])
#loc391 = loc(fused[#loc161, #loc162])
#loc392 = loc(fused[#loc164, #loc158])
#loc393 = loc(fused[#loc166, #loc165])
#loc394 = loc(fused[#loc170, #loc169])
#loc395 = loc(fused[#loc177, #loc178])
#loc396 = loc(fused[#loc179, #loc180])
#loc397 = loc(fused[#loc181, #loc182])
#loc398 = loc(fused[#loc183, #loc184])
#loc399 = loc(fused[#loc185, #loc186])
#loc400 = loc(fused[#loc188, #loc189])
#loc402 = loc(fused[#loc193, #loc194])
#loc403 = loc(fused[#loc196, #loc197, #loc198, #loc194])
#loc404 = loc(fused[#loc201, #loc200])
#loc405 = loc(fused[#loc203, #loc202])
#loc406 = loc(fused[#loc204, #loc205])
#loc407 = loc(fused[#loc206, #loc207])
#loc408 = loc(fused[#loc208, #loc209])
#loc409 = loc(fused[#loc210, #loc211])
#loc410 = loc(fused[#loc214, #loc212])
#loc411 = loc(fused[#loc216, #loc215])
#loc412 = loc(fused[#loc219, #loc220])
#loc413 = loc(fused[#loc221, #loc222])
#loc414 = loc(fused[#loc225, #loc226])
#loc415 = loc(fused[#loc224, #loc226])
#loc416 = loc(fused[#loc223, #loc227])
#loc417 = loc(fused[#loc228, #loc227])
#loc418 = loc(fused[#loc229, #loc230])
#loc419 = loc(fused[#loc231, #loc232])
#loc420 = loc(fused[#loc233, #loc230])
#loc421 = loc(fused[#loc237, #loc238])
#loc422 = loc(fused[#loc240, #loc239])
#loc423 = loc(fused[#loc241, #loc242])
#loc424 = loc(fused[#loc244, #loc238])
#loc425 = loc(fused[#loc246, #loc245])
#loc426 = loc(fused[#loc250, #loc249])
#loc427 = loc(fused[#loc257, #loc258])
#loc428 = loc(fused[#loc259, #loc260])
#loc430 = loc(fused[#loc264, #loc265])
#loc431 = loc(fused[#loc267, #loc265])
#loc432 = loc(fused[#loc269, #loc268])
#loc433 = loc(fused[#loc271, #loc270])
#loc434 = loc(fused[#loc272, #loc273])
#loc435 = loc(fused[#loc274, #loc275])
#loc436 = loc(fused[#loc276, #loc277])
#loc437 = loc(fused[#loc278, #loc279])
#loc438 = loc(fused[#loc282, #loc280])
#loc439 = loc(fused[#loc284, #loc283])
#loc440 = loc(fused[#loc287, #loc288])
#loc441 = loc(fused[#loc289, #loc290])
#loc442 = loc(fused[#loc293, #loc294])
#loc443 = loc(fused[#loc292, #loc294])
#loc444 = loc(fused[#loc291, #loc295])
#loc445 = loc(fused[#loc296, #loc295])
#loc446 = loc(fused[#loc297, #loc298])
#loc447 = loc(fused[#loc299, #loc300])
#loc448 = loc(fused[#loc301, #loc298])
#loc449 = loc(fused[#loc305, #loc306])
#loc450 = loc(fused[#loc308, #loc307])
#loc451 = loc(fused[#loc309, #loc310])
#loc452 = loc(fused[#loc312, #loc306])
#loc453 = loc(fused[#loc314, #loc313])
#loc454 = loc(fused[#loc318, #loc317])
