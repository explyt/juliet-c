!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":68:10)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":68:14)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":68:20)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":68:32)
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func private @printDoubleLine(!cir.double) loc(#loc119)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc122)
      %1 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
      %3 = cir.const #cir.int<8> : !u64i loc(#loc124)
      %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc125)
      cir.store %5, %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc122)
      cir.scope {
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc22)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc23)
        %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc127)
        cir.if %16 {
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc27)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
        } loc(#loc128)
      } loc(#loc126)
      %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc16)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc28)
      cir.store %7, %1 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc123)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc29)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc30)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc30)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc31)
      %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc32)
      cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc33)
    } loc(#loc121)
    cir.return loc(#loc10)
  } loc(#loc120)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc129)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc131)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_01_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_01_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %17 : !s32i loc(#loc139)
  } loc(#loc134)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc142)
      %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc143)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc76)
      %3 = cir.const #cir.int<8> : !u64i loc(#loc144)
      %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc145)
      cir.store %5, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc143)
      cir.scope {
        %17 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc81)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc82)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc147)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc85)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc86)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
        } loc(#loc148)
      } loc(#loc146)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc87)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc149)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc150)
      cir.store %9, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc151)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc94)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc95)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.double>, !cir.bool loc(#loc153)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc98)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc99)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
        } loc(#loc154)
      } loc(#loc152)
      %10 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc100)
      %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc101)
      cir.store %10, %11 : !cir.double, !cir.ptr<!cir.double> loc(#loc155)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
      %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc104)
      cir.store %12, %13 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc156)
      cir.scope {
        %17 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
        %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc109)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc110)
        cir.store %19, %17 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc158)
        %20 = cir.load deref %17 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc111)
        %21 = cir.load %20 : !cir.ptr<!cir.double>, !cir.double loc(#loc112)
        cir.call @printDoubleLine(%21) : (!cir.double) -> () loc(#loc113)
      } loc(#loc157)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc114)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc115)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc115)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
    } loc(#loc141)
    cir.return loc(#loc69)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":29:1)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":28:5)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":23:9)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":23:65)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":25:9)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":25:26)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":23:42)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":23:49)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":23:64)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:9)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:40)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:13)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:24)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:30)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:31)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:37)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":24:36)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":25:25)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":26:9)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":26:14)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":27:26)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":27:25)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":27:9)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":54:1)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":57:1)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":56:5)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":56:11)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":73:15)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":75:15)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":78:15)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":80:15)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":68:1)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":83:1)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":69:1)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":71:27)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":71:22)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":71:5)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":73:5)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":74:5)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":74:66)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":75:5)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":78:5)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":79:5)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":79:65)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":80:5)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":82:12)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":82:5)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":35:1)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":52:1)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":37:5)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":51:5)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":38:9)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":38:18)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":39:9)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":39:65)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":39:42)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":39:49)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":39:64)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:9)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:40)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:13)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:24)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:30)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:31)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:37)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":40:36)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":42:26)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":42:33)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":42:46)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":42:47)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":42:9)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:9)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:37)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:13)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:21)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:27)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:28)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:34)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":43:33)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":44:17)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":44:10)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":44:9)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":45:20)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":45:10)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":45:9)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":46:9)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":49:9)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":47:13)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":47:30)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":47:29)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":48:30)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":48:29)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":48:13)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":50:9)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_01.c":50:14)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc13, #loc14])
#loc123 = loc(fused[#loc15, #loc16])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc17, #loc14])
#loc126 = loc(fused[#loc20, #loc21])
#loc127 = loc(fused[#loc22, #loc23])
#loc128 = loc(fused[#loc24, #loc21])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc42, #loc43])
#loc134 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc59, #loc60])
#loc138 = loc(fused[#loc63, #loc64])
#loc139 = loc(fused[#loc67, #loc66])
#loc140 = loc(fused[#loc68, #loc69])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc72, #loc73])
#loc143 = loc(fused[#loc74, #loc75])
#loc144 = loc(fused[#loc77, #loc78])
#loc145 = loc(fused[#loc76, #loc75])
#loc146 = loc(fused[#loc79, #loc80])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc83, #loc80])
#loc149 = loc(fused[#loc88, #loc89])
#loc150 = loc(fused[#loc87, #loc90])
#loc151 = loc(fused[#loc91, #loc90])
#loc152 = loc(fused[#loc92, #loc93])
#loc153 = loc(fused[#loc94, #loc95])
#loc154 = loc(fused[#loc96, #loc93])
#loc155 = loc(fused[#loc102, #loc100])
#loc156 = loc(fused[#loc105, #loc103])
#loc157 = loc(fused[#loc106, #loc107])
#loc158 = loc(fused[#loc108, #loc109])
