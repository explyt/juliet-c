!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":83:10)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":83:14)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":83:20)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":83:32)
#loc125 = loc(fused[#loc40, #loc41])
#loc126 = loc(fused[#loc42, #loc43])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc108)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc110)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_11_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc113)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc113)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc12)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc15)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc116)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc117)
    %10 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %12 = cir.call @fwrite(%7, %8, %9, %11) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc15)
    cir.br ^bb3 loc(#loc11)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc11)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc9)
  } loc(#loc111)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_11_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc121)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc37)
  cir.func @main(%arg0: !s32i loc(fused[#loc40, #loc41]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc39)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc44)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc45)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc46)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc46)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc47)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fwrite_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE252_Unchecked_Return_Value__char_fwrite_11_good() : () -> () loc(#loc49)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc36)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fwrite_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE252_Unchecked_Return_Value__char_fwrite_11_bad() : () -> () loc(#loc53)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc37)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.return %17 : !s32i loc(#loc129)
  } loc(#loc124)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc133)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc133)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc66)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb8 loc(#loc69)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc74)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc75)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc75)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc137)
    %11 = cir.const #cir.int<6> : !u64i loc(#loc138)
    %12 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
    %14 = cir.call @fwrite(%9, %10, %11, %13) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc74)
    %15 = cir.const #cir.int<6> : !u64i loc(#loc139)
    %16 = cir.cmp(ne, %14, %15) : !u64i, !cir.bool loc(#loc140)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc63)
  } loc(#loc131)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc144)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc144)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc90)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc145)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc95)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc96)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc96)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc148)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc149)
    %10 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
    %12 = cir.call @fwrite(%7, %8, %9, %11) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc95)
    %13 = cir.const #cir.int<6> : !u64i loc(#loc150)
    %14 = cir.cmp(ne, %12, %13) : !u64i, !cir.bool loc(#loc151)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc152)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb5 loc(#loc94)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc94)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc87)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":735:1)
#loc4 = loc("/usr/include/stdio.h":736:43)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:24)
#loc6 = loc("/usr/include/stdio.h":150:1)
#loc7 = loc("/usr/include/stdio.h":150:14)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":24:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":31:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":26:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":30:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":26:8)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":26:26)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":27:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:9)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:16)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:34)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:45)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:48)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:63)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":29:66)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":68:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":72:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":70:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":70:11)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":71:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":71:11)
#loc28 = loc("/usr/include/stdlib.h":575:1)
#loc29 = loc("/usr/include/stdlib.h":575:41)
#loc30 = loc("/usr/include/time.h":76:1)
#loc31 = loc("/usr/include/time.h":76:38)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":88:15)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":90:15)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":93:15)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":95:15)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":83:1)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":98:1)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":84:1)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":86:27)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":86:22)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":86:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":88:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":89:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":89:56)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":90:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":93:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":94:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":94:55)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":95:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":97:12)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":97:5)
#loc58 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc59 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":43:19)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":50:23)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":38:1)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":53:1)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":40:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":52:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":40:8)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":40:27)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":41:5)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":44:5)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":46:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":43:9)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:9)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":51:9)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:13)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:28)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:20)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:38)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:49)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:52)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:67)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:70)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:81)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":48:96)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":49:9)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":50:13)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":56:1)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":66:1)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":58:5)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":65:5)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":58:8)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":58:26)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":59:5)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:9)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":64:9)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:13)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:28)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:20)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:38)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:49)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:52)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:67)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:70)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:81)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":61:96)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":62:9)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":63:23)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_fwrite_11.c":63:13)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc6, #loc7])
#loc111 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc11])
#loc115 = loc(fused[#loc16, #loc5])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc22, #loc23])
#loc119 = loc(fused[#loc24, #loc25])
#loc120 = loc(fused[#loc26, #loc27])
#loc121 = loc(fused[#loc28, #loc29])
#loc122 = loc(fused[#loc30, #loc31])
#loc123 = loc(fused[#loc32, #loc33])
#loc124 = loc(fused[#loc38, #loc39])
#loc127 = loc(fused[#loc49, #loc50])
#loc128 = loc(fused[#loc53, #loc54])
#loc129 = loc(fused[#loc57, #loc56])
#loc130 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc62, #loc63])
#loc132 = loc(fused[#loc64, #loc65])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc135 = loc(fused[#loc72, #loc73])
#loc136 = loc(fused[#loc76, #loc75])
#loc137 = loc(fused[#loc77, #loc78])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc82, #loc83])
#loc140 = loc(fused[#loc74, #loc83])
#loc141 = loc(fused[#loc84, #loc73])
#loc142 = loc(fused[#loc86, #loc87])
#loc143 = loc(fused[#loc88, #loc89])
#loc144 = loc(fused[#loc90, #loc91])
#loc145 = loc(fused[#loc92, #loc89])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc97, #loc96])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc100, #loc101])
#loc150 = loc(fused[#loc103, #loc104])
#loc151 = loc(fused[#loc95, #loc104])
#loc152 = loc(fused[#loc105, #loc94])
