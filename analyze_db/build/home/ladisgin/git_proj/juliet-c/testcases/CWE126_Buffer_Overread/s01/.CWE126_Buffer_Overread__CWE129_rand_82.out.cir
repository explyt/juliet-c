!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":32:7)
#loc27 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":42:7)
#loc47 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":48:7)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":88:10)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":88:14)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":88:20)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":88:32)
#loc101 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":23:7)
#loc131 = loc(fused[#loc83, #loc84])
#loc132 = loc(fused[#loc85, #loc86])
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base = !cir.struct<class "CWE126_Buffer_Overread__CWE129_rand_82::CWE126_Buffer_Overread__CWE129_rand_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad = !cir.struct<class "CWE126_Buffer_Overread__CWE129_rand_82::CWE126_Buffer_Overread__CWE129_rand_82_bad" {!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base} #cir.record.decl.ast>
!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G = !cir.struct<class "CWE126_Buffer_Overread__CWE129_rand_82::CWE126_Buffer_Overread__CWE129_rand_82_goodB2G" {!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base} #cir.record.decl.ast>
!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B = !cir.struct<class "CWE126_Buffer_Overread__CWE129_rand_82::CWE126_Buffer_Overread__CWE129_rand_82_goodG2B" {!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_rand_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc102)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc103)
  cir.func linkonce_odr @_ZN38CWE126_Buffer_Overread__CWE129_rand_8242CWE126_Buffer_Overread__CWE129_rand_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad> loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":32:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad> loc(#loc5)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc5)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>) -> () extra(#fn_attr) loc(#loc5)
    %3 = cir.vtable.address_point(@_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8242CWE126_Buffer_Overread__CWE129_rand_82_badE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc104)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc5)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc105)
  cir.func @_ZN38CWE126_Buffer_Overread__CWE129_rand_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc108)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc17)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    %8 = cir.ternary(%7, true {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc19)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc19)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc19)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc19)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc19)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc19)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc19)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc19)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc19)
      cir.yield %33 : !u32i loc(#loc19)
    }, false {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc19)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc19)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc19)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc19)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc19)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc19)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc19)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc19)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc19)
      %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc19)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc19)
      %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc19)
      cir.yield %37 : !u32i loc(#loc19)
    }) : (!cir.bool) -> !u32i loc(#loc19)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc19)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc111)
    %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc108)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad> loc(#loc111)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_8242CWE126_Buffer_Overread__CWE129_rand_82_badC2Ev(%12) : (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad>) -> () extra(#fn_attr) loc(#loc15)
    %13 = cir.base_class_addr(%12 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc21)
    cir.store %13, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>> loc(#loc108)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc22)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %16 = cir.cast(bitcast, %14 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>> loc(#loc22)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>> loc(#loc22)
    %18 = cir.vtable.address_point( %17 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>> loc(#loc22)
    %19 = cir.load align(8) %18 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>> loc(#loc22)
    cir.call %19(%14, %15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i) -> () loc(#loc24)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc25)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!void> loc(#loc25)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc26)
    cir.return loc(#loc11)
  } loc(#loc106)
  cir.func linkonce_odr @_ZN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B> loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":42:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc27)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>> loc(#loc27)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B> loc(#loc27)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc27)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>) -> () extra(#fn_attr) loc(#loc27)
    %3 = cir.vtable.address_point(@_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodG2BE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc112)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc27)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc27)
    cir.return loc(#loc27)
  } loc(#loc27)
  cir.func internal private @_ZN38CWE126_Buffer_Overread__CWE129_rand_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc37)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc39)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc118)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc115)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B> loc(#loc118)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodG2BC2Ev(%7) : (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B>) -> () extra(#fn_attr) loc(#loc35)
    %8 = cir.base_class_addr(%7 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc41)
    cir.store %8, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>> loc(#loc115)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc42)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>> loc(#loc42)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>> loc(#loc42)
    %13 = cir.vtable.address_point( %12 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>> loc(#loc42)
    %14 = cir.load align(8) %13 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>> loc(#loc42)
    cir.call %14(%9, %10) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i) -> () loc(#loc44)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc45)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!void> loc(#loc45)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.return loc(#loc31)
  } loc(#loc113)
  cir.func linkonce_odr @_ZN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodB2GC2Ev(%arg0: !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G> loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":48:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc47)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>> loc(#loc47)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G> loc(#loc47)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc47)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>) -> () extra(#fn_attr) loc(#loc47)
    %3 = cir.vtable.address_point(@_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodB2GE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc119)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc47)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc47)
    cir.return loc(#loc47)
  } loc(#loc47)
  cir.func internal private @_ZN38CWE126_Buffer_Overread__CWE129_rand_82L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc57)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc59)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc59)
    %8 = cir.ternary(%7, true {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc59)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc59)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc59)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc59)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc59)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc59)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc59)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc59)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc59)
      cir.yield %33 : !u32i loc(#loc59)
    }, false {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc59)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc59)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc59)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc59)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc59)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc59)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc59)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc59)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc59)
      %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc59)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc59)
      %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc59)
      cir.yield %37 : !u32i loc(#loc59)
    }) : (!cir.bool) -> !u32i loc(#loc59)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc59)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G> loc(#loc125)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodB2GC2Ev(%12) : (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G>) -> () extra(#fn_attr) loc(#loc55)
    %13 = cir.base_class_addr(%12 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc61)
    cir.store %13, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>> loc(#loc122)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc62)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %16 = cir.cast(bitcast, %14 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>> loc(#loc62)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>> loc(#loc62)
    %18 = cir.vtable.address_point( %17 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>> loc(#loc62)
    %19 = cir.load align(8) %18 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>> loc(#loc62)
    cir.call %19(%14, %15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i)>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !s32i) -> () loc(#loc64)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc65)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!void> loc(#loc65)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    cir.return loc(#loc51)
  } loc(#loc120)
  cir.func @_ZN38CWE126_Buffer_Overread__CWE129_rand_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_82L7goodG2BEv() : () -> () loc(#loc69)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_82L7goodB2GEv() : () -> () loc(#loc70)
    cir.return loc(#loc68)
  } loc(#loc126)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc127)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_824goodEv() : () -> () loc(#loc92)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.call @_ZN38CWE126_Buffer_Overread__CWE129_rand_823badEv() : () -> () loc(#loc95)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %15 : !s32i loc(#loc133)
  } loc(#loc130)
  cir.global linkonce_odr dsolocal @_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc134)
  cir.func linkonce_odr @_ZN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":23:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>, !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>> loc(#loc101)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>>, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base> loc(#loc101)
    %2 = cir.vtable.address_point(@_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc134)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_rand_823A3ACWE126_Buffer_Overread__CWE129_rand_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc101)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc101)
    cir.return loc(#loc101)
  } loc(#loc101)
  cir.global "private" external @_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8242CWE126_Buffer_Overread__CWE129_rand_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc104)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc99)
  cir.global linkonce_odr comdat @_ZTSN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE = #cir.const_array<"N38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE" : !cir.array<!s8i x 87>> : !cir.array<!s8i x 87> {alignment = 1 : i64} loc(#loc99)
  cir.global constant external @_ZTIN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN38CWE126_Buffer_Overread__CWE129_rand_8243CWE126_Buffer_Overread__CWE129_rand_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc99)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc112)
  cir.global "private" external @_ZTVN38CWE126_Buffer_Overread__CWE129_rand_8246CWE126_Buffer_Overread__CWE129_rand_82_goodB2GE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc119)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_rand_82a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc6 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":32:1)
#loc7 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":36:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":26:1)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":36:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":28:5)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":28:9)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":33:5)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":33:67)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":30:13)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":30:12)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":30:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":32:12)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":32:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":33:63)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":34:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":34:24)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":34:17)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":35:12)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":26:6)
#loc28 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":42:1)
#loc29 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":46:1)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":43:1)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":54:1)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":45:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":45:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":51:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":51:67)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":47:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":47:12)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":47:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":50:12)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":50:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":51:63)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":52:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":52:24)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":52:17)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":53:12)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":43:13)
#loc48 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":48:1)
#loc49 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":52:1)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":57:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":67:1)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":59:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":59:9)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":64:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":64:67)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":61:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":61:12)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":61:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":63:12)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":63:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":64:63)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":65:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":65:24)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":65:17)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":66:12)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":57:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":69:1)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":73:1)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":71:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":72:5)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":93:15)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":95:15)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":98:15)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":100:15)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":88:1)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":103:1)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":89:1)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":91:27)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":91:22)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":91:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":93:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":94:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":95:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":98:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":99:5)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":100:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":102:12)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_rand_82a.cpp":102:5)
#loc99 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":23:1)
#loc100 = loc("./CWE126_Buffer_Overread__CWE129_rand_82.h":28:1)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc6, #loc7])
#loc105 = loc(fused[#loc8, #loc9])
#loc106 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc12, #loc13])
#loc108 = loc(fused[#loc14, #loc15])
#loc109 = loc(fused[#loc18, #loc16])
#loc110 = loc(fused[#loc20, #loc19])
#loc111 = loc(fused[#loc21, #loc15])
#loc112 = loc(fused[#loc28, #loc29])
#loc113 = loc(fused[#loc30, #loc31])
#loc114 = loc(fused[#loc32, #loc33])
#loc115 = loc(fused[#loc34, #loc35])
#loc116 = loc(fused[#loc38, #loc36])
#loc117 = loc(fused[#loc40, #loc39])
#loc118 = loc(fused[#loc41, #loc35])
#loc119 = loc(fused[#loc48, #loc49])
#loc120 = loc(fused[#loc50, #loc51])
#loc121 = loc(fused[#loc52, #loc53])
#loc122 = loc(fused[#loc54, #loc55])
#loc123 = loc(fused[#loc58, #loc56])
#loc124 = loc(fused[#loc60, #loc59])
#loc125 = loc(fused[#loc61, #loc55])
#loc126 = loc(fused[#loc67, #loc68])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc73, #loc74])
#loc129 = loc(fused[#loc75, #loc76])
#loc130 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc98, #loc97])
#loc134 = loc(fused[#loc99, #loc100])
