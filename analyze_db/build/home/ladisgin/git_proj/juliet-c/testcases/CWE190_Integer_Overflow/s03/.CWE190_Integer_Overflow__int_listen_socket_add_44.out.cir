!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":44:21)
#loc6 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":44:25)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:44)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":265:10)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":265:14)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":265:20)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":265:32)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":138:25)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":138:29)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":159:25)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":159:29)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc358 = loc(fused[#loc5, #loc6])
#loc423 = loc(fused[#loc174, #loc175])
#loc424 = loc(fused[#loc176, #loc177])
#loc429 = loc(fused[#loc194, #loc195])
#loc438 = loc(fused[#loc219, #loc220])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc356)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc358)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.br ^bb1 loc(#loc360)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc12)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc14)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc357)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc361)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc362)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc363)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc364)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc365)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc366)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc367)
  cir.func private @close(!s32i) -> !s32i loc(#loc368)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_add_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc370)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc371)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc372)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc373)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc374)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc375)
    %6 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc376)
    %7 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
    cir.store %7, %6 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc376)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb1 loc(#loc378)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc38)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc40)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb2 loc(#loc379)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc379)
  ^bb3:  // pred: ^bb32
    %13 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %14 ^bb4, ^bb33 loc(#loc53)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc56)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc57)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.br ^bb5 loc(#loc381)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc63)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc382)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc383)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc65)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc61)
  ^bb8:  // pred: ^bb7
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc384)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc385)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc386)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc73)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc387)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc76)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc388)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc80)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc80)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc81)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc389)
    cir.br ^bb9 loc(#loc390)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc391)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc392)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc392)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc92)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc93)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc394)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc95)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc86)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc395)
  ^bb13:  // pred: ^bb12
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc100)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc101)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %50 ^bb14, ^bb15 loc(#loc397)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc103)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc97)
  ^bb16:  // pred: ^bb15
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb17 loc(#loc399)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc113)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc400)
    cir.brcond %58 ^bb18, ^bb19 loc(#loc401)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc115)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc111)
  ^bb20:  // pred: ^bb19
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc118)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc118)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc118)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc118)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc118)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc118)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc119)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc402)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc121)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.br ^bb21 loc(#loc404)
  ^bb21:  // pred: ^bb20
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc127)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc405)
    cir.brcond %78 ^bb22, ^bb23 loc(#loc128)
  ^bb22:  // pred: ^bb21
    %79 = cir.const #true loc(#loc128)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc128)
  ^bb23:  // pred: ^bb21
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc406)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc128)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc128)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc128)
  ^bb25:  // pred: ^bb23
    %84 = cir.const #false loc(#loc128)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc128)
  ^bb26(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc128)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%85 : !cir.bool) loc(#loc128)
  ^bb28(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc128)
  ^bb29:  // pred: ^bb28
    cir.brcond %86 ^bb30, ^bb31 loc(#loc407)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc132)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc125)
  ^bb32:  // pred: ^bb31
    %87 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc133)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc408)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc137)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.br ^bb3 loc(#loc52)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc52)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc410)
  ^bb35:  // pred: ^bb34
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc143)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc411)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc412)
  ^bb36:  // pred: ^bb35
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb37 loc(#loc141)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc141)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc413)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc150)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc414)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc415)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc153)
    cir.br ^bb41 loc(#loc148)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc148)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc50)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.call %106(%107) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc154)
    cir.return loc(#loc32)
  } loc(#loc369)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_add_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc417)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc418)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    cir.return loc(#loc157)
  } loc(#loc416)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc419)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc420)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc421)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc171)
  cir.func @main(%arg0: !s32i loc(fused[#loc174, #loc175]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc176, #loc177])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc423)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc424)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc173)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc178)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc179)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc180)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc180)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc181)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc168)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_add_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc425)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_add_44_good() : () -> () loc(#loc183)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc169)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc170)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_add_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc426)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_add_44_bad() : () -> () loc(#loc187)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc171)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc190)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc427)
    cir.return %17 : !s32i loc(#loc427)
  } loc(#loc422)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc194, #loc195])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc430)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc429)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb1 loc(#loc431)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc201)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc203)
    cir.br ^bb2 loc(#loc200)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc193)
  } loc(#loc428)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc434)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc209)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc434)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc210)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc212)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc214)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc214)
    cir.return loc(#loc205)
  } loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc216)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc219, #loc220])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc438)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb1 loc(#loc440)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc227)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc441)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc442)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc231)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc233)
    cir.br ^bb4 loc(#loc229)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc216)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.br ^bb4 loc(#loc225)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc225)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc218)
  } loc(#loc437)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc444)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc445)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc446)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc447)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc448)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc449)
    %6 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc450)
    %7 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc250)
    cir.store %7, %6 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc450)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc251)
    cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.br ^bb1 loc(#loc452)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc242)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc446)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc244)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.br ^bb2 loc(#loc453)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc453)
  ^bb3:  // pred: ^bb32
    %13 = cir.const #cir.int<0> : !s32i loc(#loc257)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc257)
    cir.brcond %14 ^bb4, ^bb33 loc(#loc257)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc258)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc260)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc261)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    cir.br ^bb5 loc(#loc455)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc267)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc456)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc457)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc269)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // pred: ^bb7
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc458)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc459)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc460)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc277)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc277)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc461)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc279)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc279)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc462)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc281)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc281)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc282)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc463)
    cir.br ^bb9 loc(#loc464)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc465)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc466)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc466)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr1) loc(#loc292)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc293)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %44 ^bb10, ^bb11 loc(#loc468)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc295)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc286)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc469)
  ^bb13:  // pred: ^bb12
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc299)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc300)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc301)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc470)
    cir.brcond %50 ^bb14, ^bb15 loc(#loc471)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc303)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc297)
  ^bb16:  // pred: ^bb15
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc305)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc306)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc307)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    cir.br ^bb17 loc(#loc473)
  ^bb17:  // pred: ^bb16
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc313)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc313)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc474)
    cir.brcond %58 ^bb18, ^bb19 loc(#loc475)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc315)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc311)
  ^bb20:  // pred: ^bb19
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc317)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc317)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc318)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc318)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc318)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc318)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc318)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc318)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc318)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc319)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc319)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc476)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc320)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc321)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc321)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.br ^bb21 loc(#loc478)
  ^bb21:  // pred: ^bb20
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc327)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc327)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc479)
    cir.brcond %78 ^bb22, ^bb23 loc(#loc328)
  ^bb22:  // pred: ^bb21
    %79 = cir.const #true loc(#loc328)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc328)
  ^bb23:  // pred: ^bb21
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc330)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc480)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc328)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc328)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc328)
  ^bb25:  // pred: ^bb23
    %84 = cir.const #false loc(#loc328)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc328)
  ^bb26(%85: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc328)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%85 : !cir.bool) loc(#loc328)
  ^bb28(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc328)
  ^bb29:  // pred: ^bb28
    cir.brcond %86 ^bb30, ^bb31 loc(#loc481)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc332)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc325)
  ^bb32:  // pred: ^bb31
    %87 = cir.const #cir.int<0> : !s32i loc(#loc333)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc333)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc335)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc335)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc482)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc336)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc337)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc483)
    cir.br ^bb3 loc(#loc256)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc256)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc484)
  ^bb35:  // pred: ^bb34
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc342)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc343)
    %96 = cir.unary(minus, %95) : !s32i, !s32i loc(#loc343)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc486)
  ^bb36:  // pred: ^bb35
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc345)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc346)
    cir.br ^bb37 loc(#loc341)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc341)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc487)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc349)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc350)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc488)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc489)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc352)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc353)
    cir.br ^bb41 loc(#loc348)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc348)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc254)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc354)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc355)
    cir.call %106(%107) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc354)
    cir.return loc(#loc236)
  } loc(#loc443)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":44:1)
#loc4 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":51:1)
#loc7 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":48:9)
#loc8 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":48:29)
#loc9 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":45:1)
#loc10 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":46:5)
#loc11 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":50:5)
#loc12 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":48:22)
#loc13 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":49:22)
#loc14 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":49:9)
#loc15 = loc("/usr/include/sys/socket.h":102:1)
#loc16 = loc("/usr/include/sys/socket.h":102:62)
#loc17 = loc("/usr/include/netinet/in.h":404:1)
#loc18 = loc("/usr/include/netinet/in.h":405:40)
#loc19 = loc("/usr/include/sys/socket.h":112:1)
#loc20 = loc("/usr/include/sys/socket.h":113:6)
#loc21 = loc("/usr/include/sys/socket.h":296:1)
#loc22 = loc("/usr/include/sys/socket.h":296:39)
#loc23 = loc("/usr/include/sys/socket.h":306:1)
#loc24 = loc("/usr/include/sys/socket.h":307:38)
#loc25 = loc("/usr/include/sys/socket.h":145:1)
#loc26 = loc("/usr/include/sys/socket.h":145:68)
#loc27 = loc("/usr/include/stdlib.h":105:1)
#loc28 = loc("/usr/include/stdlib.h":106:33)
#loc29 = loc("/usr/include/unistd.h":358:1)
#loc30 = loc("/usr/include/unistd.h":358:27)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":53:1)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":131:1)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":65:9)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":65:13)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":66:9)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":66:28)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":67:9)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":67:31)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":68:9)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":68:31)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":69:9)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":69:41)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":55:5)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":55:9)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":57:5)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":57:29)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":59:12)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":59:5)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":60:5)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":128:5)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":70:9)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":113:17)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":113:16)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":80:35)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":80:44)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":80:57)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":80:28)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":80:13)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":80:68)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":81:13)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":84:13)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":81:17)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":81:33)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":82:13)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":83:17)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:20)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:21)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:30)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:33)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:47)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":85:48)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":86:34)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":86:13)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":87:39)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":87:13)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":88:38)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":88:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":88:13)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":88:46)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:13)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":92:13)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:22)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:54)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:55)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:64)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:78)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:17)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":89:84)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":90:13)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":91:17)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":93:13)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":96:13)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":93:24)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":93:38)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":93:17)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":93:57)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":94:13)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":95:17)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":97:35)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":97:49)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":97:55)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":97:28)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":97:13)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":97:59)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":98:13)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":101:13)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":98:17)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":98:33)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":99:13)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":100:17)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:31)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:45)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:58)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:76)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:79)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:26)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:13)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":103:80)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:13)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":107:13)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:17)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:31)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:47)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":104:61)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":105:13)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":106:17)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":109:39)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":109:25)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":109:13)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":111:25)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":111:20)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":111:13)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":111:36)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":114:9)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":117:9)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":114:13)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":114:29)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":115:9)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":116:26)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":116:13)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":118:9)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":121:9)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":118:13)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":118:29)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":119:9)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":120:26)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":120:13)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":130:5)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":130:13)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":251:1)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":255:1)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":253:5)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":253:13)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":254:5)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":254:13)
#loc162 = loc("/usr/include/stdlib.h":575:1)
#loc163 = loc("/usr/include/stdlib.h":575:41)
#loc164 = loc("/usr/include/time.h":76:1)
#loc165 = loc("/usr/include/time.h":76:38)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc167 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":270:15)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":272:15)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":275:15)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":277:15)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":265:1)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":280:1)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":266:1)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":268:27)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":268:22)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":268:5)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":270:5)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":271:5)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":271:60)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":272:5)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":275:5)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":276:5)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":276:59)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":277:5)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":279:12)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":279:5)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":138:1)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":145:1)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":142:9)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":142:29)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":139:1)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":140:5)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":144:5)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":142:22)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":143:22)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":143:9)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":147:1)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":156:1)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":149:5)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":149:9)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":150:5)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":150:29)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":152:12)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":152:5)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":154:12)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":154:5)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":155:5)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":155:13)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":169:19)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":159:1)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":171:1)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":164:9)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":164:29)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":160:1)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":162:5)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":170:5)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":162:9)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":162:16)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":163:5)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":166:5)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":168:5)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":164:22)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":165:22)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":165:9)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":169:9)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":173:1)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":249:1)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":184:9)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":184:13)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":185:9)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":185:28)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":186:9)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":186:31)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":187:9)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":187:31)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":188:9)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":188:41)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":175:5)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":175:9)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":176:5)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":176:29)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":178:12)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":178:5)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":179:5)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":247:5)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":189:9)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":232:17)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":232:16)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":199:35)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":199:44)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":199:57)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":199:28)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":199:13)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":199:68)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":200:13)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":203:13)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":200:17)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":200:33)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":201:13)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":202:17)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:20)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:21)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:30)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:33)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:47)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:13)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":204:48)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":205:34)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":205:13)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":206:39)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":206:13)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":207:38)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":207:32)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":207:13)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":207:46)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:13)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":211:13)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:22)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:54)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:55)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:64)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:78)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:17)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":208:84)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":209:13)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":210:17)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":212:13)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":215:13)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":212:24)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":212:38)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":212:17)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":212:57)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":213:13)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":214:17)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":216:35)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":216:49)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":216:55)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":216:28)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":216:13)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":216:59)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":217:13)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":220:13)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":217:17)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":217:33)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":218:13)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":219:17)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:31)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:45)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:58)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:76)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:79)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:26)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:13)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":222:80)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:13)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":226:13)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:17)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:31)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:47)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":223:61)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":224:13)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":225:17)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":228:39)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":228:25)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":228:13)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":230:25)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":230:20)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":230:13)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":230:36)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":233:9)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":236:9)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":233:13)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":233:29)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":234:9)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":235:26)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":235:13)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":237:9)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":240:9)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":237:13)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":237:29)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":238:9)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":239:26)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":239:13)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":248:5)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_add_44.c":248:13)
#loc356 = loc(fused[#loc1, #loc2])
#loc357 = loc(fused[#loc3, #loc4])
#loc359 = loc(fused[#loc7, #loc8])
#loc360 = loc(fused[#loc10, #loc11])
#loc361 = loc(fused[#loc15, #loc16])
#loc362 = loc(fused[#loc17, #loc18])
#loc363 = loc(fused[#loc19, #loc20])
#loc364 = loc(fused[#loc21, #loc22])
#loc365 = loc(fused[#loc23, #loc24])
#loc366 = loc(fused[#loc25, #loc26])
#loc367 = loc(fused[#loc27, #loc28])
#loc368 = loc(fused[#loc29, #loc30])
#loc369 = loc(fused[#loc31, #loc32])
#loc370 = loc(fused[#loc33, #loc34])
#loc371 = loc(fused[#loc35, #loc36])
#loc372 = loc(fused[#loc37, #loc38])
#loc373 = loc(fused[#loc39, #loc40])
#loc374 = loc(fused[#loc41, #loc42])
#loc375 = loc(fused[#loc43, #loc44])
#loc376 = loc(fused[#loc45, #loc46])
#loc377 = loc(fused[#loc48, #loc47])
#loc378 = loc(fused[#loc49, #loc50])
#loc379 = loc(fused[#loc51, #loc52])
#loc380 = loc(fused[#loc58, #loc59])
#loc381 = loc(fused[#loc60, #loc61])
#loc382 = loc(fused[#loc62, #loc63])
#loc383 = loc(fused[#loc64, #loc61])
#loc384 = loc(fused[#loc66, #loc67])
#loc385 = loc(fused[#loc69, #loc70])
#loc386 = loc(fused[#loc71, #loc72])
#loc387 = loc(fused[#loc75, #loc73])
#loc388 = loc(fused[#loc79, #loc76])
#loc389 = loc(fused[#loc83, #loc84])
#loc390 = loc(fused[#loc85, #loc86])
#loc391 = loc(fused[#loc88, #loc89])
#loc392 = loc(fused[#loc90, #loc91])
#loc393 = loc(fused[#loc92, #loc93])
#loc394 = loc(fused[#loc94, #loc86])
#loc395 = loc(fused[#loc96, #loc97])
#loc396 = loc(fused[#loc100, #loc101])
#loc397 = loc(fused[#loc102, #loc97])
#loc398 = loc(fused[#loc108, #loc109])
#loc399 = loc(fused[#loc110, #loc111])
#loc400 = loc(fused[#loc112, #loc113])
#loc401 = loc(fused[#loc114, #loc111])
#loc402 = loc(fused[#loc118, #loc119])
#loc403 = loc(fused[#loc122, #loc123])
#loc404 = loc(fused[#loc124, #loc125])
#loc405 = loc(fused[#loc126, #loc127])
#loc406 = loc(fused[#loc129, #loc130])
#loc407 = loc(fused[#loc131, #loc125])
#loc408 = loc(fused[#loc135, #loc133])
#loc409 = loc(fused[#loc138, #loc139])
#loc410 = loc(fused[#loc140, #loc141])
#loc411 = loc(fused[#loc142, #loc143])
#loc412 = loc(fused[#loc144, #loc141])
#loc413 = loc(fused[#loc147, #loc148])
#loc414 = loc(fused[#loc149, #loc150])
#loc415 = loc(fused[#loc151, #loc148])
#loc416 = loc(fused[#loc156, #loc157])
#loc417 = loc(fused[#loc158, #loc159])
#loc418 = loc(fused[#loc160, #loc161])
#loc419 = loc(fused[#loc162, #loc163])
#loc420 = loc(fused[#loc164, #loc165])
#loc421 = loc(fused[#loc166, #loc167])
#loc422 = loc(fused[#loc172, #loc173])
#loc425 = loc(fused[#loc183, #loc184])
#loc426 = loc(fused[#loc187, #loc188])
#loc427 = loc(fused[#loc191, #loc190])
#loc428 = loc(fused[#loc192, #loc193])
#loc430 = loc(fused[#loc196, #loc197])
#loc431 = loc(fused[#loc199, #loc200])
#loc432 = loc(fused[#loc204, #loc205])
#loc433 = loc(fused[#loc206, #loc207])
#loc434 = loc(fused[#loc208, #loc209])
#loc435 = loc(fused[#loc211, #loc210])
#loc436 = loc(fused[#loc213, #loc212])
#loc437 = loc(fused[#loc217, #loc218])
#loc439 = loc(fused[#loc221, #loc222])
#loc440 = loc(fused[#loc224, #loc225])
#loc441 = loc(fused[#loc226, #loc227])
#loc442 = loc(fused[#loc228, #loc229, #loc230, #loc225])
#loc443 = loc(fused[#loc235, #loc236])
#loc444 = loc(fused[#loc237, #loc238])
#loc445 = loc(fused[#loc239, #loc240])
#loc446 = loc(fused[#loc241, #loc242])
#loc447 = loc(fused[#loc243, #loc244])
#loc448 = loc(fused[#loc245, #loc246])
#loc449 = loc(fused[#loc247, #loc248])
#loc450 = loc(fused[#loc249, #loc250])
#loc451 = loc(fused[#loc252, #loc251])
#loc452 = loc(fused[#loc253, #loc254])
#loc453 = loc(fused[#loc255, #loc256])
#loc454 = loc(fused[#loc262, #loc263])
#loc455 = loc(fused[#loc264, #loc265])
#loc456 = loc(fused[#loc266, #loc267])
#loc457 = loc(fused[#loc268, #loc265])
#loc458 = loc(fused[#loc270, #loc271])
#loc459 = loc(fused[#loc273, #loc274])
#loc460 = loc(fused[#loc275, #loc276])
#loc461 = loc(fused[#loc278, #loc277])
#loc462 = loc(fused[#loc280, #loc279])
#loc463 = loc(fused[#loc283, #loc284])
#loc464 = loc(fused[#loc285, #loc286])
#loc465 = loc(fused[#loc288, #loc289])
#loc466 = loc(fused[#loc290, #loc291])
#loc467 = loc(fused[#loc292, #loc293])
#loc468 = loc(fused[#loc294, #loc286])
#loc469 = loc(fused[#loc296, #loc297])
#loc470 = loc(fused[#loc300, #loc301])
#loc471 = loc(fused[#loc302, #loc297])
#loc472 = loc(fused[#loc308, #loc309])
#loc473 = loc(fused[#loc310, #loc311])
#loc474 = loc(fused[#loc312, #loc313])
#loc475 = loc(fused[#loc314, #loc311])
#loc476 = loc(fused[#loc318, #loc319])
#loc477 = loc(fused[#loc322, #loc323])
#loc478 = loc(fused[#loc324, #loc325])
#loc479 = loc(fused[#loc326, #loc327])
#loc480 = loc(fused[#loc329, #loc330])
#loc481 = loc(fused[#loc331, #loc325])
#loc482 = loc(fused[#loc335, #loc333])
#loc483 = loc(fused[#loc338, #loc339])
#loc484 = loc(fused[#loc340, #loc341])
#loc485 = loc(fused[#loc342, #loc343])
#loc486 = loc(fused[#loc344, #loc341])
#loc487 = loc(fused[#loc347, #loc348])
#loc488 = loc(fused[#loc349, #loc350])
#loc489 = loc(fused[#loc351, #loc348])
