!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":160:10)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":160:14)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":160:20)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":160:32)
#loc305 = loc(fused[#loc101, #loc102])
#loc306 = loc(fused[#loc103, #loc104])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc267)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc268)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc269)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc270)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc271)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc276)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc276)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc278)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc279)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc280)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
        cir.scope {
          %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc283)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc37)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
          } loc(#loc284)
        } loc(#loc282)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc39)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc40)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc285)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc44)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc46)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc48)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc286)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc49)
        %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc51)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc52)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc52)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc287)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc288)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc62)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc64)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
          } loc(#loc293)
        } loc(#loc291)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc66)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc67)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc67)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc67)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc71)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc73)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc73)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc75)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc295)
      } loc(#loc277)
    } loc(#loc275)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc297)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc297)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc78)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc78)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc84)
      } else {
      } loc(#loc298)
    } loc(#loc296)
    cir.return loc(#loc12)
  } loc(#loc272)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc86)
  } loc(#loc299)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc302)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc98)
  cir.func @main(%arg0: !s32i loc(fused[#loc101, #loc102]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc103, #loc104])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc306)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc100)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc105)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc106)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc107)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc107)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc108)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc95)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call @CWE416_Use_After_Free__malloc_free_char_12_good() : () -> () loc(#loc110)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc97)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call @CWE416_Use_After_Free__malloc_free_char_12_bad() : () -> () loc(#loc114)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc98)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc117)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    cir.return %17 : !s32i loc(#loc309)
  } loc(#loc304)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc314)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc314)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc127)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc127)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc132)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc133)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc133)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc316)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc317)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc318)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
        cir.scope {
          %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc321)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc145)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
          } loc(#loc322)
        } loc(#loc320)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc147)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc148)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc148)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc148)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc152)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc152)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc154)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc154)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc156)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc324)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc157)
        %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc160)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc160)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc325)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc326)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc327)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
        cir.scope {
          %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
          %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc330)
          cir.if %33 {
            %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc171)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc172)
            cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
          } loc(#loc331)
        } loc(#loc329)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc174)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc175)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc176)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc175)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc175)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc332)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc179)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc179)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc181)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc182)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc181)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc183)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc333)
        %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc184)
        %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
        cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc184)
      } loc(#loc315)
    } loc(#loc313)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc335)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc335)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc188)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc188)
      cir.if %5 {
      } else {
      } loc(#loc336)
    } loc(#loc334)
    cir.return loc(#loc120)
  } loc(#loc310)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc197)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc341)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc341)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc201)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc201)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc206)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc207)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc207)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc343)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc344)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc206)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc345)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc348)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc217)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc218)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc219)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc217)
          } loc(#loc349)
        } loc(#loc347)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc221)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc222)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc223)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc222)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc222)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc350)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc226)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc226)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc228)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc229)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc228)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc230)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc351)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc231)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc232)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc232)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc352)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc353)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc231)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc354)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc355)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc240)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc357)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc242)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc243)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc244)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
          } loc(#loc358)
        } loc(#loc356)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc246)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc247)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc248)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc247)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc247)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc359)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc251)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc251)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc253)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc254)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc253)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc255)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc360)
      } loc(#loc342)
    } loc(#loc340)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc362)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc362)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc258)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc258)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc264)
      } else {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc266)
      } loc(#loc363)
    } loc(#loc361)
    cir.return loc(#loc194)
  } loc(#loc337)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":24:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":59:1)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":26:5)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":26:12)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":28:12)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":28:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":29:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":45:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":29:8)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":29:33)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":30:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":37:5)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":39:5)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":31:24)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":31:31)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":31:35)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":31:46)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":31:47)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":31:9)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:9)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:37)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:13)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:21)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:27)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:28)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:34)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":32:33)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":33:16)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":33:22)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":33:27)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":33:31)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":33:9)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":33:32)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":34:23)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":34:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":34:14)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":34:18)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":34:19)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":36:9)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":36:14)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":40:24)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":40:31)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":40:35)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":40:46)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":40:47)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":40:9)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:9)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:37)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:13)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:21)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:27)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:28)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:34)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":41:33)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":42:16)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":42:22)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":42:27)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":42:31)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":42:9)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":42:32)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":43:23)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":43:9)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":43:14)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":43:18)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":43:19)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":46:5)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":58:5)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":46:8)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":46:33)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":47:5)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":51:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":53:5)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":49:19)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":49:9)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":145:1)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":149:1)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":147:5)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":147:13)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":148:5)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":148:13)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":165:15)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":167:15)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":170:15)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":172:15)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":160:1)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":175:1)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":161:1)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":163:27)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":163:22)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":163:5)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":165:5)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":166:5)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":166:53)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":167:5)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":170:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":171:5)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":171:52)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":172:5)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":174:12)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":174:5)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":68:1)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":105:1)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":70:5)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":70:12)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":72:12)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":72:5)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":73:5)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":90:5)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":73:8)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":73:33)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":74:5)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":81:5)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":83:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":75:24)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":75:31)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":75:35)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":75:46)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":75:47)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":75:9)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:9)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:37)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:13)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:21)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:27)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:28)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:34)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":76:33)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":77:16)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":77:22)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":77:27)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":77:31)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":77:9)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":77:32)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":78:23)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":78:9)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":78:14)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":78:18)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":78:19)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":80:9)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":80:14)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":84:24)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":84:31)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":84:35)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":84:46)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":84:47)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":84:9)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:9)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:37)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:13)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:21)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:27)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:28)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:34)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":85:33)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":86:16)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":86:22)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":86:27)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":86:31)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":86:9)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":86:32)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":87:23)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":87:9)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":87:14)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":87:18)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":87:19)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":89:9)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":89:14)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":91:5)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":104:5)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":91:8)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":91:33)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":92:5)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":97:5)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":99:5)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":110:1)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":143:1)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":112:5)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":112:12)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":114:12)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":114:5)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":115:5)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":130:5)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":115:8)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":115:33)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":116:5)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":122:5)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":124:5)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":117:24)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":117:31)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":117:35)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":117:46)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":117:47)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":117:9)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:9)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:37)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:13)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:21)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:27)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:28)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:34)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":118:33)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":119:16)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":119:22)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":119:27)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":119:31)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":119:9)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":119:32)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":120:23)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":120:9)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":120:14)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":120:18)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":120:19)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":125:24)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":125:31)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":125:35)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":125:46)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":125:47)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":125:9)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:9)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:37)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:13)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:21)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:27)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:28)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:34)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":126:33)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":127:16)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":127:22)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":127:27)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":127:31)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":127:9)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":127:32)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":128:23)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":128:9)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":128:14)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":128:18)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":128:19)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":131:5)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":142:5)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":131:8)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":131:33)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":132:5)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":136:5)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":138:5)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":134:19)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":134:9)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":140:19)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_char_12.c":140:9)
#loc267 = loc(fused[#loc1, #loc2])
#loc268 = loc(fused[#loc3, #loc4])
#loc269 = loc(fused[#loc5, #loc6])
#loc270 = loc(fused[#loc7, #loc8])
#loc271 = loc(fused[#loc9, #loc10])
#loc272 = loc(fused[#loc11, #loc12])
#loc273 = loc(fused[#loc13, #loc14])
#loc274 = loc(fused[#loc16, #loc15])
#loc275 = loc(fused[#loc17, #loc18])
#loc276 = loc(fused[#loc19, #loc20])
#loc277 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc278 = loc(fused[#loc26, #loc27])
#loc279 = loc(fused[#loc25, #loc27])
#loc280 = loc(fused[#loc24, #loc28])
#loc281 = loc(fused[#loc29, #loc28])
#loc282 = loc(fused[#loc30, #loc31])
#loc283 = loc(fused[#loc32, #loc33])
#loc284 = loc(fused[#loc34, #loc31])
#loc285 = loc(fused[#loc42, #loc43])
#loc286 = loc(fused[#loc45, #loc44])
#loc287 = loc(fused[#loc53, #loc54])
#loc288 = loc(fused[#loc52, #loc54])
#loc289 = loc(fused[#loc51, #loc55])
#loc290 = loc(fused[#loc56, #loc55])
#loc291 = loc(fused[#loc57, #loc58])
#loc292 = loc(fused[#loc59, #loc60])
#loc293 = loc(fused[#loc61, #loc58])
#loc294 = loc(fused[#loc69, #loc70])
#loc295 = loc(fused[#loc72, #loc71])
#loc296 = loc(fused[#loc76, #loc77])
#loc297 = loc(fused[#loc78, #loc79])
#loc298 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc299 = loc(fused[#loc85, #loc86])
#loc300 = loc(fused[#loc87, #loc88])
#loc301 = loc(fused[#loc89, #loc90])
#loc302 = loc(fused[#loc91, #loc92])
#loc303 = loc(fused[#loc93, #loc94])
#loc304 = loc(fused[#loc99, #loc100])
#loc307 = loc(fused[#loc110, #loc111])
#loc308 = loc(fused[#loc114, #loc115])
#loc309 = loc(fused[#loc118, #loc117])
#loc310 = loc(fused[#loc119, #loc120])
#loc311 = loc(fused[#loc121, #loc122])
#loc312 = loc(fused[#loc124, #loc123])
#loc313 = loc(fused[#loc125, #loc126])
#loc314 = loc(fused[#loc127, #loc128])
#loc315 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc316 = loc(fused[#loc134, #loc135])
#loc317 = loc(fused[#loc133, #loc135])
#loc318 = loc(fused[#loc132, #loc136])
#loc319 = loc(fused[#loc137, #loc136])
#loc320 = loc(fused[#loc138, #loc139])
#loc321 = loc(fused[#loc140, #loc141])
#loc322 = loc(fused[#loc142, #loc139])
#loc323 = loc(fused[#loc150, #loc151])
#loc324 = loc(fused[#loc153, #loc152])
#loc325 = loc(fused[#loc161, #loc162])
#loc326 = loc(fused[#loc160, #loc162])
#loc327 = loc(fused[#loc159, #loc163])
#loc328 = loc(fused[#loc164, #loc163])
#loc329 = loc(fused[#loc165, #loc166])
#loc330 = loc(fused[#loc167, #loc168])
#loc331 = loc(fused[#loc169, #loc166])
#loc332 = loc(fused[#loc177, #loc178])
#loc333 = loc(fused[#loc180, #loc179])
#loc334 = loc(fused[#loc186, #loc187])
#loc335 = loc(fused[#loc188, #loc189])
#loc336 = loc(fused[#loc190, #loc191, #loc192, #loc187])
#loc337 = loc(fused[#loc193, #loc194])
#loc338 = loc(fused[#loc195, #loc196])
#loc339 = loc(fused[#loc198, #loc197])
#loc340 = loc(fused[#loc199, #loc200])
#loc341 = loc(fused[#loc201, #loc202])
#loc342 = loc(fused[#loc203, #loc204, #loc205, #loc200])
#loc343 = loc(fused[#loc208, #loc209])
#loc344 = loc(fused[#loc207, #loc209])
#loc345 = loc(fused[#loc206, #loc210])
#loc346 = loc(fused[#loc211, #loc210])
#loc347 = loc(fused[#loc212, #loc213])
#loc348 = loc(fused[#loc214, #loc215])
#loc349 = loc(fused[#loc216, #loc213])
#loc350 = loc(fused[#loc224, #loc225])
#loc351 = loc(fused[#loc227, #loc226])
#loc352 = loc(fused[#loc233, #loc234])
#loc353 = loc(fused[#loc232, #loc234])
#loc354 = loc(fused[#loc231, #loc235])
#loc355 = loc(fused[#loc236, #loc235])
#loc356 = loc(fused[#loc237, #loc238])
#loc357 = loc(fused[#loc239, #loc240])
#loc358 = loc(fused[#loc241, #loc238])
#loc359 = loc(fused[#loc249, #loc250])
#loc360 = loc(fused[#loc252, #loc251])
#loc361 = loc(fused[#loc256, #loc257])
#loc362 = loc(fused[#loc258, #loc259])
#loc363 = loc(fused[#loc260, #loc261, #loc262, #loc257])
