!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":154:10)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":154:14)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":154:20)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":154:32)
#loc236 = loc(fused[#loc155, #loc156])
#loc237 = loc(fused[#loc157, #loc158])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc171)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc172)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc175)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc178)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc178)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
      } loc(#loc177)
    } loc(#loc176)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc23)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc24)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc181)
    } loc(#loc180)
    cir.return loc(#loc6)
  } loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc25)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc182)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc185)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc36)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc188)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc40)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc188)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc189)
      } loc(#loc187)
    } loc(#loc186)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc44)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc25)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc25)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc49)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc49)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
      } loc(#loc191)
    } loc(#loc190)
    cir.return loc(#loc29)
  } loc(#loc183)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc194)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc58)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc197)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc62)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc197)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc198)
      } loc(#loc196)
    } loc(#loc195)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc68)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
      } loc(#loc200)
    } loc(#loc199)
    cir.return loc(#loc51)
  } loc(#loc192)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc201)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc202)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc205)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc81)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc87)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc88)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc88)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc208)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc209)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc210)
        cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc211)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc95)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc96)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc213)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc100)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
          } loc(#loc214)
        } loc(#loc212)
      } loc(#loc207)
    } loc(#loc206)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc103)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc103)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc106)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc106)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
      } loc(#loc216)
    } loc(#loc215)
    cir.return loc(#loc74)
  } loc(#loc203)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc219)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc115)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc117)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc118)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc118)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc222)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc223)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc224)
        cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc225)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc125)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc126)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc227)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc130)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
          } loc(#loc228)
        } loc(#loc226)
      } loc(#loc221)
    } loc(#loc220)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc133)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc136)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc136)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
      } loc(#loc230)
    } loc(#loc229)
    cir.return loc(#loc108)
  } loc(#loc217)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodB2G1Ev() : () -> () loc(#loc139)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodB2G2Ev() : () -> () loc(#loc140)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodG2B1Ev() : () -> () loc(#loc141)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_02L8goodG2B2Ev() : () -> () loc(#loc142)
    cir.return loc(#loc138)
  } loc(#loc231)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc232)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc233)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc152)
  cir.func @main(%arg0: !s32i loc(fused[#loc155, #loc156]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc157, #loc158])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc154)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc159)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc160)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc161)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc161)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc162)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc149)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_024goodEv() : () -> () loc(#loc164)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc151)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_long_023badEv() : () -> () loc(#loc167)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc152)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc169)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    cir.return %15 : !s32i loc(#loc238)
  } loc(#loc235)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":25:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":41:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":27:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":27:12)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":29:12)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":29:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":30:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":34:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":30:8)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":31:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":33:16)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":33:20)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":25:6)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":33:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":35:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":40:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":35:8)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":36:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":39:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":39:14)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":61:19)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc27 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":48:1)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":68:1)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":50:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":50:12)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":52:12)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":52:5)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":53:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":57:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":53:8)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":54:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":56:16)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":56:20)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":48:13)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":56:9)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":58:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":67:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":58:8)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":59:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":62:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":64:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":61:9)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":66:16)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":71:1)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":86:1)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":73:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":73:12)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":75:12)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":75:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":76:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":80:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":76:8)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":77:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":79:16)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":79:20)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":71:13)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":79:9)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":81:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":85:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":81:8)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":82:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":84:16)
#loc69 = loc("/usr/include/stdlib.h":672:1)
#loc70 = loc("/usr/include/stdlib.h":672:45)
#loc71 = loc("/usr/include/stdlib.h":756:1)
#loc72 = loc("/usr/include/stdlib.h":756:70)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":89:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":111:1)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":91:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":91:12)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":93:12)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":93:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":94:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":104:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":94:8)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":95:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":98:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":100:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":97:19)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":97:9)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":102:24)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":102:31)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":102:35)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":102:46)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":102:47)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":102:9)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:37)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:13)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:21)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:27)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:28)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:34)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":103:33)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":105:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":110:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":105:8)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":106:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":109:9)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":109:14)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":114:1)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":131:1)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":116:5)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":116:12)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":118:12)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":118:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":119:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":124:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":119:8)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":120:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":122:24)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":122:31)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":122:35)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":122:46)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":122:47)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":122:9)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:9)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:37)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:13)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:21)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:27)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:28)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:34)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":123:33)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":125:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":130:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":125:8)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":126:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":129:9)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":129:14)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":133:1)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":139:1)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":135:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":136:5)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":137:5)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":138:5)
#loc143 = loc("/usr/include/stdlib.h":575:1)
#loc144 = loc("/usr/include/stdlib.h":575:41)
#loc145 = loc("/usr/include/time.h":76:1)
#loc146 = loc("/usr/include/time.h":76:38)
#loc147 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc148 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":159:15)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":161:15)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":164:15)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":166:15)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":154:1)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":169:1)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":155:1)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":157:27)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":157:22)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":157:5)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":159:5)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":160:5)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":161:5)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":164:5)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":165:5)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":166:5)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":168:12)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_long_02.cpp":168:5)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc10, #loc9])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc14, #loc12])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc18, #loc16])
#loc180 = loc(fused[#loc19, #loc20])
#loc181 = loc(fused[#loc22, #loc20])
#loc182 = loc(fused[#loc26, #loc27])
#loc183 = loc(fused[#loc28, #loc29])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc33, #loc32])
#loc186 = loc(fused[#loc34, #loc35])
#loc187 = loc(fused[#loc37, #loc35])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc41, #loc39])
#loc190 = loc(fused[#loc42, #loc43])
#loc191 = loc(fused[#loc45, #loc46, #loc47, #loc43])
#loc192 = loc(fused[#loc50, #loc51])
#loc193 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc55, #loc54])
#loc195 = loc(fused[#loc56, #loc57])
#loc196 = loc(fused[#loc59, #loc57])
#loc197 = loc(fused[#loc60, #loc61])
#loc198 = loc(fused[#loc63, #loc61])
#loc199 = loc(fused[#loc64, #loc65])
#loc200 = loc(fused[#loc67, #loc65])
#loc201 = loc(fused[#loc69, #loc70])
#loc202 = loc(fused[#loc71, #loc72])
#loc203 = loc(fused[#loc73, #loc74])
#loc204 = loc(fused[#loc75, #loc76])
#loc205 = loc(fused[#loc78, #loc77])
#loc206 = loc(fused[#loc79, #loc80])
#loc207 = loc(fused[#loc82, #loc83, #loc84, #loc80])
#loc208 = loc(fused[#loc89, #loc90])
#loc209 = loc(fused[#loc88, #loc90])
#loc210 = loc(fused[#loc87, #loc91])
#loc211 = loc(fused[#loc92, #loc91])
#loc212 = loc(fused[#loc93, #loc94])
#loc213 = loc(fused[#loc95, #loc96])
#loc214 = loc(fused[#loc97, #loc94])
#loc215 = loc(fused[#loc101, #loc102])
#loc216 = loc(fused[#loc104, #loc102])
#loc217 = loc(fused[#loc107, #loc108])
#loc218 = loc(fused[#loc109, #loc110])
#loc219 = loc(fused[#loc112, #loc111])
#loc220 = loc(fused[#loc113, #loc114])
#loc221 = loc(fused[#loc116, #loc114])
#loc222 = loc(fused[#loc119, #loc120])
#loc223 = loc(fused[#loc118, #loc120])
#loc224 = loc(fused[#loc117, #loc121])
#loc225 = loc(fused[#loc122, #loc121])
#loc226 = loc(fused[#loc123, #loc124])
#loc227 = loc(fused[#loc125, #loc126])
#loc228 = loc(fused[#loc127, #loc124])
#loc229 = loc(fused[#loc131, #loc132])
#loc230 = loc(fused[#loc134, #loc132])
#loc231 = loc(fused[#loc137, #loc138])
#loc232 = loc(fused[#loc143, #loc144])
#loc233 = loc(fused[#loc145, #loc146])
#loc234 = loc(fused[#loc147, #loc148])
#loc235 = loc(fused[#loc153, #loc154])
#loc238 = loc(fused[#loc170, #loc169])
