!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc190)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc191)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func private @printIntLine(!s32i) loc(#loc195)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc196)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc25)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc190)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc32)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc192)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %14 = cir.call @__isoc99_fscanf(%11, %13, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc32)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc37)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc206)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc207)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc208)
    cir.store %21, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc209)
    cir.br ^bb6 loc(#loc210)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc45)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc211)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc212)
  ^bb7:  // pred: ^bb6
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc47)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc49)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc213)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc52)
    cir.store %30, %0 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.br ^bb11 loc(#loc213)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc55)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc215)
    cir.brcond %34 ^bb12, ^bb16 loc(#loc56)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc216)
  ^bb13:  // pred: ^bb12
    %35 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !u64i), !cir.ptr<!s32i> loc(#loc61)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb14 loc(#loc51)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc51)
  ^bb15:  // pred: ^bb14
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc63)
    cir.store %40, %0 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb11 loc(#loc213)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc51)
  ^bb17:  // pred: ^bb16
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc66)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc67)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb18 loc(#loc35)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc17)
  } loc(#loc197)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc221)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc219)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc226)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc88)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc190)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc229)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<20> : !s32i loc(#loc98)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc232)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc102)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc103)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc233)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc234)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc235)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc236)
    cir.br ^bb7 loc(#loc237)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc111)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc238)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc239)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc113)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc115)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb9 loc(#loc109)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc109)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc240)
  ^bb11:  // pred: ^bb10
    %26 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc118)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    cir.br ^bb12 loc(#loc240)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc121)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc242)
    cir.brcond %31 ^bb13, ^bb17 loc(#loc122)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc243)
  ^bb14:  // pred: ^bb13
    %32 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !u64i), !cir.ptr<!s32i> loc(#loc127)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb15 loc(#loc117)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc117)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc129)
    cir.store %37, %0 : !u64i, !cir.ptr<!u64i> loc(#loc245)
    cir.br ^bb12 loc(#loc240)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc117)
  ^bb18:  // pred: ^bb17
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc132)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc133)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc134)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb19 loc(#loc101)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc80)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc249)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc145)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc190)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc252)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc253)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc152)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc255)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc156)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc157)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc256)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc257)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc259)
    cir.br ^bb6 loc(#loc260)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc165)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc261)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc262)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc167)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc169)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb8 loc(#loc163)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc163)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc263)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc172)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc264)
    cir.br ^bb11 loc(#loc263)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc174)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc175)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc265)
    cir.brcond %29 ^bb12, ^bb16 loc(#loc176)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc266)
  ^bb13:  // pred: ^bb12
    %30 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc181)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb14 loc(#loc171)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc171)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc182)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc183)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc268)
    cir.br ^bb11 loc(#loc263)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc171)
  ^bb17:  // pred: ^bb16
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc186)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc187)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc188)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc189)
    cir.br ^bb18 loc(#loc155)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc137)
  } loc(#loc246)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":23:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":35:23)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":27:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":51:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":38:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":38:16)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":39:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":39:14)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":29:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":29:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":31:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":31:12)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":31:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":32:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":36:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":32:8)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":32:20)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":33:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":35:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":35:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":37:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":50:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":42:28)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":42:35)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":42:42)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":42:52)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":42:53)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":42:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:43)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:27)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:33)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:34)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":43:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":47:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:18)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:14)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:21)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:23)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":45:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":46:29)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":46:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":46:24)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":46:25)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:40)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":44:39)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":48:22)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":48:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":48:34)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":48:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":49:14)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":49:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":116:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":120:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":118:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":118:14)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":119:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":119:14)
#loc76 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc77 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":66:19)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":58:1)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":87:1)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":74:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":74:16)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":75:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":75:14)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":60:5)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":60:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":62:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":62:12)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":62:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":63:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":72:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":63:8)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":63:20)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":64:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":67:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":69:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":66:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":71:16)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":71:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":73:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":86:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":78:28)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":78:35)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":78:42)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":78:52)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":78:53)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":78:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:43)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:27)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:33)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:34)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:40)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":79:39)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":83:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:18)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:14)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:21)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:33)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:23)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":81:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":82:29)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":82:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":82:24)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":82:25)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:40)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":80:39)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":84:22)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":84:33)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":84:34)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":84:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":85:14)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":85:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":90:1)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":114:1)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":101:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":101:16)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":102:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":102:14)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":92:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":92:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":94:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":94:12)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":94:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":95:5)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":99:5)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":95:8)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":95:20)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":96:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":98:16)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":98:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":100:5)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":113:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":105:28)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":105:35)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":105:42)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":105:52)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":105:53)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":105:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:43)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:13)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:27)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:33)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:34)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:40)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":106:39)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":110:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:18)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:14)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:21)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:33)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:23)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":108:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":109:29)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":109:13)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":109:24)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":109:25)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:40)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":107:39)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":111:22)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":111:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":111:34)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":111:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":112:14)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_07.c":112:9)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc3, #loc4])
#loc192 = loc(fused[#loc5, #loc6])
#loc193 = loc(fused[#loc8, #loc9])
#loc194 = loc(fused[#loc10, #loc11])
#loc195 = loc(fused[#loc12, #loc13])
#loc196 = loc(fused[#loc14, #loc15])
#loc197 = loc(fused[#loc16, #loc17])
#loc198 = loc(fused[#loc18, #loc19])
#loc199 = loc(fused[#loc20, #loc21])
#loc200 = loc(fused[#loc22, #loc23])
#loc201 = loc(fused[#loc26, #loc24])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc29, #loc30])
#loc204 = loc(fused[#loc31, #loc28])
#loc205 = loc(fused[#loc34, #loc35])
#loc206 = loc(fused[#loc38, #loc39])
#loc207 = loc(fused[#loc37, #loc39])
#loc208 = loc(fused[#loc36, #loc40])
#loc209 = loc(fused[#loc41, #loc40])
#loc210 = loc(fused[#loc42, #loc43])
#loc211 = loc(fused[#loc44, #loc45])
#loc212 = loc(fused[#loc46, #loc43])
#loc213 = loc(fused[#loc50, #loc51])
#loc214 = loc(fused[#loc53, #loc52])
#loc215 = loc(fused[#loc54, #loc55])
#loc216 = loc(fused[#loc57, #loc51])
#loc217 = loc(fused[#loc59, #loc58])
#loc218 = loc(fused[#loc63, #loc62])
#loc219 = loc(fused[#loc70, #loc71])
#loc220 = loc(fused[#loc72, #loc73])
#loc221 = loc(fused[#loc74, #loc75])
#loc222 = loc(fused[#loc76, #loc77])
#loc223 = loc(fused[#loc79, #loc80])
#loc224 = loc(fused[#loc81, #loc82])
#loc225 = loc(fused[#loc83, #loc84])
#loc226 = loc(fused[#loc85, #loc86])
#loc227 = loc(fused[#loc89, #loc87])
#loc228 = loc(fused[#loc90, #loc91])
#loc229 = loc(fused[#loc92, #loc93])
#loc230 = loc(fused[#loc94, #loc95, #loc96, #loc91])
#loc231 = loc(fused[#loc99, #loc98])
#loc232 = loc(fused[#loc100, #loc101])
#loc233 = loc(fused[#loc104, #loc105])
#loc234 = loc(fused[#loc103, #loc105])
#loc235 = loc(fused[#loc102, #loc106])
#loc236 = loc(fused[#loc107, #loc106])
#loc237 = loc(fused[#loc108, #loc109])
#loc238 = loc(fused[#loc110, #loc111])
#loc239 = loc(fused[#loc112, #loc109])
#loc240 = loc(fused[#loc116, #loc117])
#loc241 = loc(fused[#loc119, #loc118])
#loc242 = loc(fused[#loc120, #loc121])
#loc243 = loc(fused[#loc123, #loc117])
#loc244 = loc(fused[#loc125, #loc124])
#loc245 = loc(fused[#loc129, #loc128])
#loc246 = loc(fused[#loc136, #loc137])
#loc247 = loc(fused[#loc138, #loc139])
#loc248 = loc(fused[#loc140, #loc141])
#loc249 = loc(fused[#loc142, #loc143])
#loc250 = loc(fused[#loc146, #loc144])
#loc251 = loc(fused[#loc147, #loc148])
#loc252 = loc(fused[#loc149, #loc150])
#loc253 = loc(fused[#loc151, #loc148])
#loc254 = loc(fused[#loc153, #loc152])
#loc255 = loc(fused[#loc154, #loc155])
#loc256 = loc(fused[#loc158, #loc159])
#loc257 = loc(fused[#loc157, #loc159])
#loc258 = loc(fused[#loc156, #loc160])
#loc259 = loc(fused[#loc161, #loc160])
#loc260 = loc(fused[#loc162, #loc163])
#loc261 = loc(fused[#loc164, #loc165])
#loc262 = loc(fused[#loc166, #loc163])
#loc263 = loc(fused[#loc170, #loc171])
#loc264 = loc(fused[#loc173, #loc172])
#loc265 = loc(fused[#loc174, #loc175])
#loc266 = loc(fused[#loc177, #loc171])
#loc267 = loc(fused[#loc179, #loc178])
#loc268 = loc(fused[#loc183, #loc182])
