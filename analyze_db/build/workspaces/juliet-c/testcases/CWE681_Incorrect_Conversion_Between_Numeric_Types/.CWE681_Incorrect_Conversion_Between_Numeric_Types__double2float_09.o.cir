!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc88 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:40)
#loc129 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:40)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc139)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printFloatLine(!cir.float) loc(#loc144)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %4 ^bb2, ^bb10 loc(#loc149)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc150)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc19)
    cir.store %6, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc147)
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc28)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc29)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc36)
    %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc37)
    cir.store %16, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc154)
    cir.br ^bb7 loc(#loc34)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc41)
    %20 = cir.cast(floating, %19 : !cir.double), !cir.float loc(#loc41)
    cir.call @printFloatLine(%20) : (!cir.float) -> () loc(#loc42)
    cir.br ^bb9 loc(#loc25)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc21)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc15)
  } loc(#loc145)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc155)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Value is too small or large to be represented as a float\00" : !cir.array<!s8i x 57>> : !cir.array<!s8i x 57> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc160)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc158)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb24 loc(#loc63)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %8 = cir.cast(int_to_float, %7 : !s32i), !cir.double loc(#loc58)
    cir.store %8, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc161)
    cir.br ^bb5 loc(#loc165)
  ^bb5:  // pred: ^bb4
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc70)
    %10 = cir.const #cir.int<256> : !s32i loc(#loc71)
    %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
    %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc73)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc78)
    %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc79)
    cir.store %18, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc168)
    cir.br ^bb8 loc(#loc76)
  ^bb7:  // pred: ^bb5
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc69)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc169)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc86)
    %22 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc87)
    %23 = cir.cast(floating, %22 : !cir.float), !cir.double loc(#loc87)
    %24 = cir.cmp(gt, %21, %23) : !cir.double, !cir.bool loc(#loc170)
    cir.brcond %24 ^bb11, ^bb12 loc(#loc88)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #true loc(#loc88)
    cir.br ^bb17(%25 : !cir.bool) loc(#loc88)
  ^bb12:  // pred: ^bb10
    %26 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc89)
    %27 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc90)
    %28 = cir.cast(floating, %27 : !cir.float), !cir.double loc(#loc90)
    %29 = cir.cmp(lt, %26, %28) : !cir.double, !cir.bool loc(#loc171)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc88)
  ^bb13:  // pred: ^bb12
    %30 = cir.const #true loc(#loc88)
    cir.br ^bb15(%30 : !cir.bool) loc(#loc88)
  ^bb14:  // pred: ^bb12
    %31 = cir.const #false loc(#loc88)
    cir.br ^bb15(%31 : !cir.bool) loc(#loc88)
  ^bb15(%32: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:40)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc88)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17(%32 : !cir.bool) loc(#loc88)
  ^bb17(%33: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:40)):  // 2 preds: ^bb11, ^bb16
    cir.br ^bb18 loc(#loc88)
  ^bb18:  // pred: ^bb17
    cir.brcond %33 ^bb19, ^bb20 loc(#loc172)
  ^bb19:  // pred: ^bb18
    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc52)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb21 loc(#loc92)
  ^bb20:  // pred: ^bb18
    %36 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc95)
    %37 = cir.cast(floating, %36 : !cir.double), !cir.float loc(#loc95)
    cir.call @printFloatLine(%37) : (!cir.float) -> () loc(#loc96)
    cir.br ^bb21 loc(#loc85)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc85)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc67)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc60)
  ^bb24:  // 2 preds: ^bb2, ^bb23
    cir.br ^bb25 loc(#loc60)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc54)
  } loc(#loc159)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc174)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc139)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %4 ^bb2, ^bb23 loc(#loc177)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc102)
    cir.store %6, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc175)
    cir.br ^bb4 loc(#loc179)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc111)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc112)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc181)
  ^bb5:  // pred: ^bb4
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc119)
    %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc120)
    cir.store %16, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc182)
    cir.br ^bb7 loc(#loc117)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc183)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc127)
    %20 = cir.const #cir.fp<3.40282347E+38> : !cir.float loc(#loc128)
    %21 = cir.cast(floating, %20 : !cir.float), !cir.double loc(#loc128)
    %22 = cir.cmp(gt, %19, %21) : !cir.double, !cir.bool loc(#loc184)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc129)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #true loc(#loc129)
    cir.br ^bb16(%23 : !cir.bool) loc(#loc129)
  ^bb11:  // pred: ^bb9
    %24 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc130)
    %25 = cir.const #cir.fp<1.17549435E-38> : !cir.float loc(#loc131)
    %26 = cir.cast(floating, %25 : !cir.float), !cir.double loc(#loc131)
    %27 = cir.cmp(lt, %24, %26) : !cir.double, !cir.bool loc(#loc185)
    cir.brcond %27 ^bb12, ^bb13 loc(#loc129)
  ^bb12:  // pred: ^bb11
    %28 = cir.const #true loc(#loc129)
    cir.br ^bb14(%28 : !cir.bool) loc(#loc129)
  ^bb13:  // pred: ^bb11
    %29 = cir.const #false loc(#loc129)
    cir.br ^bb14(%29 : !cir.bool) loc(#loc129)
  ^bb14(%30: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:40)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc129)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16(%30 : !cir.bool) loc(#loc129)
  ^bb16(%31: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:40)):  // 2 preds: ^bb10, ^bb15
    cir.br ^bb17 loc(#loc129)
  ^bb17:  // pred: ^bb16
    cir.brcond %31 ^bb18, ^bb19 loc(#loc186)
  ^bb18:  // pred: ^bb17
    %32 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc135)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb20 loc(#loc133)
  ^bb19:  // pred: ^bb17
    %34 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc137)
    %35 = cir.cast(floating, %34 : !cir.double), !cir.float loc(#loc137)
    cir.call @printFloatLine(%35) : (!cir.float) -> () loc(#loc138)
    cir.br ^bb20 loc(#loc126)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc126)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc108)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc104)
  ^bb23:  // 2 preds: ^bb1, ^bb22
    cir.br ^bb24 loc(#loc104)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc98)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":102:1)
#loc8 = loc("/usr/include/stdlib.h":103:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":42:27)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":22:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":22:39)
#loc14 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":23:1)
#loc15 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":48:1)
#loc16 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":28:13)
#loc17 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":28:45)
#loc18 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":29:13)
#loc19 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":29:35)
#loc20 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":25:5)
#loc21 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":47:5)
#loc22 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":25:8)
#loc23 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":26:5)
#loc24 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":27:9)
#loc25 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":46:9)
#loc26 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":35:13)
#loc27 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":43:13)
#loc28 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":35:23)
#loc29 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":35:36)
#loc30 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":35:53)
#loc31 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":35:17)
#loc32 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":35:63)
#loc33 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":36:13)
#loc34 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":39:13)
#loc35 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":41:13)
#loc36 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":38:37)
#loc37 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":38:32)
#loc38 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":38:17)
#loc39 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":38:48)
#loc40 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":42:17)
#loc41 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":45:35)
#loc42 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":45:13)
#loc43 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":129:1)
#loc44 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":133:1)
#loc45 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":131:5)
#loc46 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":131:11)
#loc47 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":132:5)
#loc48 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":132:11)
#loc49 = loc("../../testcasesupport/std_testcase.h":110:1)
#loc50 = loc("../../testcasesupport/std_testcase.h":110:18)
#loc51 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":60:19)
#loc52 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":84:27)
#loc53 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":55:1)
#loc54 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":92:1)
#loc55 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":65:13)
#loc56 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":65:45)
#loc57 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":66:13)
#loc58 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":66:35)
#loc59 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":57:5)
#loc60 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":91:5)
#loc61 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":57:8)
#loc62 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":58:5)
#loc63 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":61:5)
#loc64 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":63:5)
#loc65 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":60:9)
#loc66 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":64:9)
#loc67 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":90:9)
#loc68 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":72:13)
#loc69 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":80:13)
#loc70 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":72:23)
#loc71 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":72:36)
#loc72 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":72:53)
#loc73 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":72:17)
#loc74 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":72:63)
#loc75 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":73:13)
#loc76 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":76:13)
#loc77 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":78:13)
#loc78 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":75:37)
#loc79 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":75:32)
#loc80 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":75:17)
#loc81 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":75:48)
#loc82 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":79:27)
#loc83 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":79:17)
#loc84 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:13)
#loc85 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":89:13)
#loc86 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:17)
#loc87 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:32)
#loc89 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:43)
#loc90 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":82:58)
#loc91 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":83:13)
#loc92 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":85:13)
#loc93 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":87:13)
#loc94 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":84:17)
#loc95 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":88:39)
#loc96 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":88:17)
#loc97 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":95:1)
#loc98 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":127:1)
#loc99 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":100:13)
#loc100 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":100:45)
#loc101 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":101:13)
#loc102 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":101:35)
#loc103 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":97:5)
#loc104 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":126:5)
#loc105 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":97:8)
#loc106 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":98:5)
#loc107 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":99:9)
#loc108 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":125:9)
#loc109 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":107:13)
#loc110 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":115:13)
#loc111 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":107:23)
#loc112 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":107:36)
#loc113 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":107:53)
#loc114 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":107:17)
#loc115 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":107:63)
#loc116 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":108:13)
#loc117 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":111:13)
#loc118 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":113:13)
#loc119 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":110:37)
#loc120 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":110:32)
#loc121 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":110:17)
#loc122 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":110:48)
#loc123 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":114:27)
#loc124 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":114:17)
#loc125 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:13)
#loc126 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":124:13)
#loc127 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:17)
#loc128 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:32)
#loc130 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:43)
#loc131 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":117:58)
#loc132 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":118:13)
#loc133 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":120:13)
#loc134 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":122:13)
#loc135 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":119:27)
#loc136 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":119:17)
#loc137 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":123:39)
#loc138 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2float_09.c":123:17)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc12, #loc13])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc16, #loc17])
#loc147 = loc(fused[#loc18, #loc19])
#loc148 = loc(fused[#loc20, #loc21])
#loc149 = loc(fused[#loc23, #loc21])
#loc150 = loc(fused[#loc24, #loc25])
#loc151 = loc(fused[#loc26, #loc27])
#loc152 = loc(fused[#loc31, #loc32])
#loc153 = loc(fused[#loc33, #loc34, #loc35, #loc27])
#loc154 = loc(fused[#loc38, #loc39])
#loc155 = loc(fused[#loc43, #loc44])
#loc156 = loc(fused[#loc45, #loc46])
#loc157 = loc(fused[#loc47, #loc48])
#loc158 = loc(fused[#loc49, #loc50])
#loc159 = loc(fused[#loc53, #loc54])
#loc160 = loc(fused[#loc55, #loc56])
#loc161 = loc(fused[#loc57, #loc58])
#loc162 = loc(fused[#loc59, #loc60])
#loc163 = loc(fused[#loc62, #loc63, #loc64, #loc60])
#loc164 = loc(fused[#loc66, #loc67])
#loc165 = loc(fused[#loc68, #loc69])
#loc166 = loc(fused[#loc73, #loc74])
#loc167 = loc(fused[#loc75, #loc76, #loc77, #loc69])
#loc168 = loc(fused[#loc80, #loc81])
#loc169 = loc(fused[#loc84, #loc85])
#loc170 = loc(fused[#loc86, #loc87])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc91, #loc92, #loc93, #loc85])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc99, #loc100])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc106, #loc104])
#loc178 = loc(fused[#loc107, #loc108])
#loc179 = loc(fused[#loc109, #loc110])
#loc180 = loc(fused[#loc114, #loc115])
#loc181 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc182 = loc(fused[#loc121, #loc122])
#loc183 = loc(fused[#loc125, #loc126])
#loc184 = loc(fused[#loc127, #loc128])
#loc185 = loc(fused[#loc130, #loc131])
#loc186 = loc(fused[#loc132, #loc133, #loc134, #loc126])
