!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc11)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc115)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
            %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc19)
            %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc3)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc3)
            %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc19)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc22)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc23)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
            %15 = cir.const #cir.int<4> : !s32i loc(#loc25)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc26)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
            %18 = cir.const #cir.int<10> : !s32i loc(#loc27)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc27)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc119)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc120)
            cir.libc.memcpy %21 bytes from %17 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc121)
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc33)
          } loc(#loc114)
          cir.break loc(#loc34)
        } loc(#loc12)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          cir.break loc(#loc37)
        } loc(#loc35)
        cir.yield loc(#loc9)
      } loc(#loc9)
    } loc(#loc113)
    cir.return loc(#loc8)
  } loc(#loc112)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc122)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc48)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          cir.break loc(#loc52)
        } loc(#loc49)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
            %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc60)
            %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc62)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc62)
            %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc60)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc64)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc65)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
            %15 = cir.const #cir.int<4> : !s32i loc(#loc67)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc68)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
            %18 = cir.const #cir.int<10> : !s32i loc(#loc69)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc69)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc132)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc133)
            cir.libc.memmove %21 bytes from %17 to %13 : !cir.ptr<!void>, !u64i loc(#loc134)
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc75)
          } loc(#loc127)
          cir.break loc(#loc76)
        } loc(#loc53)
        cir.yield loc(#loc46)
      } loc(#loc46)
    } loc(#loc126)
    cir.return loc(#loc45)
  } loc(#loc125)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc81)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc138)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc138)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
            %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc89)
            %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc91)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc91)
            %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc93)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc94)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %15 = cir.const #cir.int<4> : !s32i loc(#loc96)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
            %18 = cir.const #cir.int<10> : !s32i loc(#loc98)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc98)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc142)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc143)
            cir.libc.memmove %21 bytes from %17 to %13 : !cir.ptr<!void>, !u64i loc(#loc144)
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          } loc(#loc137)
          cir.break loc(#loc105)
        } loc(#loc82)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc108)
          cir.break loc(#loc109)
        } loc(#loc106)
        cir.yield loc(#loc79)
      } loc(#loc79)
    } loc(#loc136)
    cir.return loc(#loc78)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":30:22)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":38:19)
#loc7 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":22:1)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":41:1)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":24:5)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":40:5)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":24:12)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":26:5)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":27:5)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":34:5)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":28:9)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":28:32)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":29:9)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":29:23)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":30:9)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":30:16)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:16)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:23)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:21)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:26)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:33)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:31)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:36)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:39)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:50)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:9)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:51)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":33:19)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":33:9)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":35:5)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":36:5)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":38:9)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":39:9)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":91:1)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":95:1)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":93:5)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":93:11)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":94:5)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":94:11)
#loc44 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":48:1)
#loc45 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":67:1)
#loc46 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":50:5)
#loc47 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":66:5)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":50:12)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":52:5)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":54:19)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":54:9)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":55:9)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":56:5)
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":57:5)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":64:5)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":58:9)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":58:32)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":59:9)
#loc59 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":59:23)
#loc60 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":60:9)
#loc61 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":60:16)
#loc62 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":60:22)
#loc63 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:17)
#loc64 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:24)
#loc65 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:22)
#loc66 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:27)
#loc67 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:34)
#loc68 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:32)
#loc69 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:37)
#loc70 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:40)
#loc71 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:51)
#loc72 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:9)
#loc73 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:52)
#loc74 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":63:19)
#loc75 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":63:9)
#loc76 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":65:5)
#loc77 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":70:1)
#loc78 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":89:1)
#loc79 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":72:5)
#loc80 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":88:5)
#loc81 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":72:12)
#loc82 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":74:5)
#loc83 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":75:5)
#loc84 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":82:5)
#loc85 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":76:9)
#loc86 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":76:32)
#loc87 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":77:9)
#loc88 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":77:23)
#loc89 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":78:9)
#loc90 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":78:16)
#loc91 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":78:22)
#loc92 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:17)
#loc93 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:24)
#loc94 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:22)
#loc95 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:27)
#loc96 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:34)
#loc97 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:32)
#loc98 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:37)
#loc99 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:40)
#loc100 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:51)
#loc101 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:9)
#loc102 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:52)
#loc103 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":81:19)
#loc104 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":81:9)
#loc105 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":83:5)
#loc106 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":84:5)
#loc107 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":86:19)
#loc108 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":86:9)
#loc109 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":87:9)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc4, #loc5])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc9, #loc10])
#loc114 = loc(fused[#loc13, #loc14])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc17, #loc18])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc24, #loc25])
#loc119 = loc(fused[#loc28, #loc29])
#loc120 = loc(fused[#loc27, #loc29])
#loc121 = loc(fused[#loc30, #loc31])
#loc122 = loc(fused[#loc38, #loc39])
#loc123 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc45])
#loc126 = loc(fused[#loc46, #loc47])
#loc127 = loc(fused[#loc54, #loc55])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc58, #loc59])
#loc130 = loc(fused[#loc63, #loc64])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc70, #loc71])
#loc133 = loc(fused[#loc69, #loc71])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc77, #loc78])
#loc136 = loc(fused[#loc79, #loc80])
#loc137 = loc(fused[#loc83, #loc84])
#loc138 = loc(fused[#loc85, #loc86])
#loc139 = loc(fused[#loc87, #loc88])
#loc140 = loc(fused[#loc92, #loc93])
#loc141 = loc(fused[#loc95, #loc96])
#loc142 = loc(fused[#loc99, #loc100])
#loc143 = loc(fused[#loc98, #loc100])
#loc144 = loc(fused[#loc101, #loc102])
