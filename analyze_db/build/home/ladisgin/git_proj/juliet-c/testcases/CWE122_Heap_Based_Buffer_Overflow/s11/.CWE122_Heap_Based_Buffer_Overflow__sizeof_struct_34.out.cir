!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":87:10)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":87:14)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":87:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":87:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc142 = loc(fused[#loc64, #loc65])
#loc143 = loc(fused[#loc66, #loc67])
!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType" {!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc119)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc120)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc129)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc29)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc130)
    } loc(#loc128)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %14 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc37)
    cir.store %13, %14 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
      %16 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc43)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
      cir.store %17, %15 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc135)
      %18 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
      cir.call @printStructLine(%18) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc45)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
      %20 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    } loc(#loc134)
    cir.return loc(#loc10)
  } loc(#loc121)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc136)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %17 : !s32i loc(#loc146)
  } loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc151)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc155)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc102)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
      } loc(#loc156)
    } loc(#loc154)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %14 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc37)
    cir.store %13, %14 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
      %16 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34_unionType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc43)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
      cir.store %17, %15 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
      %18 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
      cir.call @printStructLine(%18) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc114)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc115)
      %20 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc116)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    } loc(#loc160)
    cir.return loc(#loc83)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":46:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":29:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":30:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":30:67)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":32:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":32:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":35:29)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":35:36)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":35:47)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":35:48)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":35:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:17)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:23)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:30)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":36:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":37:20)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":37:5)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":38:20)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":38:5)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":39:26)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":21:21)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":39:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":40:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":45:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":41:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":41:40)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":22:21)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":43:25)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":43:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":44:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":44:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":73:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":76:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":75:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":75:13)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":92:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":94:15)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":97:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":99:15)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":87:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":102:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":88:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":90:27)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":90:22)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":90:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":92:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":93:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":93:62)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":94:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":97:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":98:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":98:61)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":99:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":101:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":101:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":53:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":71:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":55:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":55:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":56:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":56:67)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":58:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":58:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":60:29)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":60:36)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":60:48)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":60:49)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":60:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:33)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:23)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:30)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":61:29)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":62:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":62:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":63:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":63:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":64:26)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":64:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":65:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":70:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":66:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":66:40)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":68:25)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":68:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":69:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_34.c":69:14)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc16, #loc15])
#loc125 = loc(fused[#loc18, #loc19])
#loc126 = loc(fused[#loc17, #loc20])
#loc127 = loc(fused[#loc21, #loc20])
#loc128 = loc(fused[#loc22, #loc23])
#loc129 = loc(fused[#loc24, #loc25])
#loc130 = loc(fused[#loc26, #loc23])
#loc131 = loc(fused[#loc31, #loc30])
#loc132 = loc(fused[#loc34, #loc33])
#loc133 = loc(fused[#loc38, #loc36])
#loc134 = loc(fused[#loc39, #loc40])
#loc135 = loc(fused[#loc41, #loc42])
#loc136 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc50, #loc51])
#loc138 = loc(fused[#loc52, #loc53])
#loc139 = loc(fused[#loc54, #loc55])
#loc140 = loc(fused[#loc56, #loc57])
#loc141 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc73, #loc74])
#loc145 = loc(fused[#loc77, #loc78])
#loc146 = loc(fused[#loc81, #loc80])
#loc147 = loc(fused[#loc82, #loc83])
#loc148 = loc(fused[#loc84, #loc85])
#loc149 = loc(fused[#loc86, #loc87])
#loc150 = loc(fused[#loc89, #loc88])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc90, #loc93])
#loc153 = loc(fused[#loc94, #loc93])
#loc154 = loc(fused[#loc95, #loc96])
#loc155 = loc(fused[#loc97, #loc98])
#loc156 = loc(fused[#loc99, #loc96])
#loc157 = loc(fused[#loc104, #loc103])
#loc158 = loc(fused[#loc106, #loc105])
#loc159 = loc(fused[#loc108, #loc107])
#loc160 = loc(fused[#loc109, #loc110])
#loc161 = loc(fused[#loc111, #loc112])
