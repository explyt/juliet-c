!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc93 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:44)
#loc132 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":159:10)
#loc133 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":159:14)
#loc134 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":159:20)
#loc135 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":159:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc229 = loc(fused[#loc132, #loc133])
#loc230 = loc(fused[#loc134, #loc135])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__connect_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc178)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc180)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc181)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc182)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc183)
  cir.func private @close(!s32i) -> !s32i loc(#loc184)
  cir.global "private" internal dsolocal @CWE617_Reachable_Assertion__connect_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc185)
  cir.func no_proto @CWE617_Reachable_Assertion__connect_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc189)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc190)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc31)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc25)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc194)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc40)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb5 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc47)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc198)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc49)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc199)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc200)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc201)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc57)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc202)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc60)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc203)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc65)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc65)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc66)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc204)
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc206)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc207)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc207)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc77)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc78)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc209)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc80)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc71)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc83)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc83)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc83)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc83)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc83)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc83)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc84)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc210)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc86)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc86)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb13 loc(#loc212)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc92)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc93)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc93)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc93)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc93)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc93)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc93)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc93)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc93)
  ^bb18(%68: !cir.bool loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc93)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc93)
  ^bb20(%69: !cir.bool loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc93)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc215)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc97)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc90)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc98)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc216)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc102)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb3 loc(#loc36)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc36)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc218)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc108)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc220)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc111)
    cir.br ^bb29 loc(#loc106)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc106)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc34)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %84 = cir.get_global @CWE617_Reachable_Assertion__connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc185)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %85 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call %85() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc114)
    cir.return loc(#loc19)
  } loc(#loc186)
  cir.func no_proto @CWE617_Reachable_Assertion__connect_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc118)
    cir.return loc(#loc117)
  } loc(#loc223)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc225)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc226)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc129)
  cir.func @main(%arg0: !s32i loc(fused[#loc132, #loc133]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc134, #loc135])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc131)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc136)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc137)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc138)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc138)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc139)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc126)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %8 = cir.get_global @CWE617_Reachable_Assertion__connect_socket_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call @CWE617_Reachable_Assertion__connect_socket_45_good() : () -> () loc(#loc141)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc128)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    %13 = cir.get_global @CWE617_Reachable_Assertion__connect_socket_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call @CWE617_Reachable_Assertion__connect_socket_45_bad() : () -> () loc(#loc145)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc129)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc148)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    cir.return %17 : !s32i loc(#loc233)
  } loc(#loc228)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"CWE617_Reachable_Assertion__connect_socket_45.c\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"void badSink()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc152)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.get_global @CWE617_Reachable_Assertion__connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc185)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc152)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc152)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc152)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc152)
  ^bb4:  // pred: ^bb2
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc152)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc152)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc152)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc152)
    %11 = cir.const #cir.int<54> : !s32i loc(#loc152)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc152)
    %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc152)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @__assert_fail(%8, %10, %12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc154)
  } loc(#loc235)
  cir.global "private" internal dsolocal @CWE617_Reachable_Assertion__connect_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc237)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc164)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc166)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc166)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %7 = cir.get_global @CWE617_Reachable_Assertion__connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc237)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %8 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    cir.return loc(#loc160)
  } loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"void goodG2BSink()\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc173)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc245)
    %1 = cir.get_global @CWE617_Reachable_Assertion__connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc237)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc173)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc173)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc173)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc173)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc173)
  ^bb4:  // pred: ^bb2
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc173)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc173)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc173)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc173)
    %11 = cir.const #cir.int<131> : !s32i loc(#loc173)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc173)
    %13 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc173)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @__assert_fail(%8, %10, %12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc173)
    cir.br ^bb5 loc(#loc173)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc173)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc175)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__connect_socket_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":88:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":45:1)
#loc17 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":45:12)
#loc18 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":57:1)
#loc19 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":120:1)
#loc20 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":67:9)
#loc21 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":67:13)
#loc22 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":68:9)
#loc23 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":68:28)
#loc24 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":69:9)
#loc25 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":69:32)
#loc26 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":70:9)
#loc27 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":70:41)
#loc28 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":59:5)
#loc29 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":59:9)
#loc30 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":61:13)
#loc31 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":61:12)
#loc32 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":61:5)
#loc33 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":62:5)
#loc34 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":117:5)
#loc35 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":71:9)
#loc36 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":106:17)
#loc37 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":106:16)
#loc38 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":81:36)
#loc39 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":81:45)
#loc40 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":81:58)
#loc41 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":81:29)
#loc42 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":81:13)
#loc43 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":81:69)
#loc44 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":82:13)
#loc45 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":85:13)
#loc46 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":82:17)
#loc47 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":82:34)
#loc48 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":83:13)
#loc49 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":84:17)
#loc50 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:20)
#loc51 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:21)
#loc52 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:30)
#loc53 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:33)
#loc54 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:47)
#loc55 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:13)
#loc56 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":86:48)
#loc57 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":87:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":87:13)
#loc60 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":88:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":88:13)
#loc64 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":88:59)
#loc65 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":89:38)
#loc66 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":89:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":89:13)
#loc69 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":89:46)
#loc70 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:13)
#loc71 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":93:13)
#loc72 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:25)
#loc73 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:58)
#loc74 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:59)
#loc75 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:68)
#loc76 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:82)
#loc77 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:17)
#loc78 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":90:88)
#loc79 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":91:13)
#loc80 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":92:17)
#loc81 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:31)
#loc82 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:46)
#loc83 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:59)
#loc84 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:77)
#loc85 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:80)
#loc86 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:26)
#loc87 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:13)
#loc88 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":96:81)
#loc89 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:13)
#loc90 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":100:13)
#loc91 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:17)
#loc92 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:31)
#loc94 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:47)
#loc95 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":97:61)
#loc96 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":98:13)
#loc97 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":99:17)
#loc98 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":102:39)
#loc99 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":102:25)
#loc100 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":102:13)
#loc101 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":104:25)
#loc102 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":104:20)
#loc103 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":104:13)
#loc104 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":104:36)
#loc105 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":107:9)
#loc106 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":110:9)
#loc107 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":107:13)
#loc108 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":107:30)
#loc109 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":108:9)
#loc110 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":109:26)
#loc111 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":109:13)
#loc112 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":118:61)
#loc113 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":118:5)
#loc114 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":119:5)
#loc115 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":119:13)
#loc116 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":145:1)
#loc117 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":148:1)
#loc118 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":147:5)
#loc119 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":147:13)
#loc120 = loc("/usr/include/stdlib.h":575:1)
#loc121 = loc("/usr/include/stdlib.h":575:41)
#loc122 = loc("/usr/include/time.h":76:1)
#loc123 = loc("/usr/include/time.h":76:38)
#loc124 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc125 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc126 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":164:15)
#loc127 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":166:15)
#loc128 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":169:15)
#loc129 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":171:15)
#loc130 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":159:1)
#loc131 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":174:1)
#loc136 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":160:1)
#loc137 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":162:27)
#loc138 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":162:22)
#loc139 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":162:5)
#loc140 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":164:5)
#loc141 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":165:5)
#loc142 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":165:56)
#loc143 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":166:5)
#loc144 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":169:5)
#loc145 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":170:5)
#loc146 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":170:55)
#loc147 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":171:5)
#loc148 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":173:12)
#loc149 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":173:5)
#loc150 = loc("/usr/include/assert.h":67:1)
#loc151 = loc("/usr/include/assert.h":69:43)
#loc152 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":54:5)
#loc153 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":50:1)
#loc154 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":55:1)
#loc155 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":52:5)
#loc156 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":52:16)
#loc157 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":46:1)
#loc158 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":46:12)
#loc159 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":134:1)
#loc160 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":143:1)
#loc161 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":136:5)
#loc162 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":136:9)
#loc163 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":138:13)
#loc164 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":138:12)
#loc165 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":138:5)
#loc166 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":140:12)
#loc167 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":140:25)
#loc168 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":140:5)
#loc169 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":141:65)
#loc170 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":141:5)
#loc171 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":142:5)
#loc172 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":142:17)
#loc173 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":131:5)
#loc174 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":127:1)
#loc175 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":132:1)
#loc176 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":129:5)
#loc177 = loc("CWE617_Reachable_Assertion__connect_socket_45.c":129:16)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc6, #loc7])
#loc181 = loc(fused[#loc8, #loc9])
#loc182 = loc(fused[#loc10, #loc11])
#loc183 = loc(fused[#loc12, #loc13])
#loc184 = loc(fused[#loc14, #loc15])
#loc185 = loc(fused[#loc16, #loc17])
#loc186 = loc(fused[#loc18, #loc19])
#loc187 = loc(fused[#loc20, #loc21])
#loc188 = loc(fused[#loc22, #loc23])
#loc189 = loc(fused[#loc24, #loc25])
#loc190 = loc(fused[#loc26, #loc27])
#loc191 = loc(fused[#loc28, #loc29])
#loc192 = loc(fused[#loc32, #loc30])
#loc193 = loc(fused[#loc33, #loc34])
#loc194 = loc(fused[#loc35, #loc36])
#loc195 = loc(fused[#loc42, #loc43])
#loc196 = loc(fused[#loc44, #loc45])
#loc197 = loc(fused[#loc46, #loc47])
#loc198 = loc(fused[#loc48, #loc45])
#loc199 = loc(fused[#loc50, #loc51])
#loc200 = loc(fused[#loc53, #loc54])
#loc201 = loc(fused[#loc55, #loc56])
#loc202 = loc(fused[#loc59, #loc57])
#loc203 = loc(fused[#loc63, #loc64])
#loc204 = loc(fused[#loc68, #loc69])
#loc205 = loc(fused[#loc70, #loc71])
#loc206 = loc(fused[#loc73, #loc74])
#loc207 = loc(fused[#loc75, #loc76])
#loc208 = loc(fused[#loc77, #loc78])
#loc209 = loc(fused[#loc79, #loc71])
#loc210 = loc(fused[#loc83, #loc84])
#loc211 = loc(fused[#loc87, #loc88])
#loc212 = loc(fused[#loc89, #loc90])
#loc213 = loc(fused[#loc91, #loc92])
#loc214 = loc(fused[#loc94, #loc95])
#loc215 = loc(fused[#loc96, #loc90])
#loc216 = loc(fused[#loc100, #loc98])
#loc217 = loc(fused[#loc103, #loc104])
#loc218 = loc(fused[#loc105, #loc106])
#loc219 = loc(fused[#loc107, #loc108])
#loc220 = loc(fused[#loc109, #loc106])
#loc221 = loc(fused[#loc113, #loc112])
#loc222 = loc(fused[#loc114, #loc115])
#loc223 = loc(fused[#loc116, #loc117])
#loc224 = loc(fused[#loc118, #loc119])
#loc225 = loc(fused[#loc120, #loc121])
#loc226 = loc(fused[#loc122, #loc123])
#loc227 = loc(fused[#loc124, #loc125])
#loc228 = loc(fused[#loc130, #loc131])
#loc231 = loc(fused[#loc141, #loc142])
#loc232 = loc(fused[#loc145, #loc146])
#loc233 = loc(fused[#loc149, #loc148])
#loc234 = loc(fused[#loc150, #loc151])
#loc235 = loc(fused[#loc153, #loc154])
#loc236 = loc(fused[#loc155, #loc156])
#loc237 = loc(fused[#loc157, #loc158])
#loc238 = loc(fused[#loc159, #loc160])
#loc239 = loc(fused[#loc161, #loc162])
#loc240 = loc(fused[#loc165, #loc163])
#loc241 = loc(fused[#loc168, #loc167])
#loc242 = loc(fused[#loc170, #loc169])
#loc243 = loc(fused[#loc171, #loc172])
#loc244 = loc(fused[#loc174, #loc175])
#loc245 = loc(fused[#loc176, #loc177])
