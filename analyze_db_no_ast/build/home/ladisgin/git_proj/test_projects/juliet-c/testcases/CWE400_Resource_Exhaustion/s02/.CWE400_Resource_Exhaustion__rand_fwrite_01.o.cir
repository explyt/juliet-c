!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc212)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc213)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc214)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc215)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc216)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      cir.yield %20 : !u32i loc(#loc21)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc21)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc21)
      cir.yield %24 : !u32i loc(#loc21)
    }) : (!cir.bool) -> !u32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc21)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc222)
      %10 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc223)
      %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc224)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
      cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc222)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc28)
      cir.store %14, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
      %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
      cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
      %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc30)
      %18 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
      %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
      %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc30)
      cir.store %21, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc225)
      cir.scope {
        %22 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
        %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc37)
        %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc227)
        %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc38)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc41)
          cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
        } loc(#loc228)
      } loc(#loc226)
      cir.scope {
        %22 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc44)
        cir.store %23, %9 : !u64i, !cir.ptr<!u64i> loc(#loc230)
        cir.for : cond {
          %24 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc47)
          %27 = cir.cmp(lt, %24, %26) : !u64i, !s32i loc(#loc231)
          %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc48)
          cir.condition(%28) loc(#loc48)
        } body {
          cir.scope {
            cir.scope {
              %24 = cir.const #cir.int<50> : !u64i loc(#loc234)
              %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc54)
              %26 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
              %29 = cir.const #cir.int<1> : !u64i loc(#loc235)
              %30 = cir.const #cir.int<50> : !u64i loc(#loc236)
              %31 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
              %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc54)
              %33 = cir.cmp(ne, %24, %32) : !u64i, !s32i loc(#loc237)
              %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc61)
              cir.if %34 {
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc63)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc64)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc63)
              } loc(#loc238)
            } loc(#loc233)
          } loc(#loc232)
          cir.yield loc(#loc43)
        } step {
          %24 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc65)
          %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc66)
          cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc239)
          cir.yield loc(#loc229)
        } loc(#loc229)
      } loc(#loc229)
      cir.scope {
        %22 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
        %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc69)
        cir.if %23 {
          %24 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
          %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc72)
        } loc(#loc241)
      } loc(#loc240)
    } loc(#loc221)
    cir.return loc(#loc15)
  } loc(#loc217)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc74)
  } loc(#loc242)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc84)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc86)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc250)
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc251)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc252)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc91)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc250)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc93)
      cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc95)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc95)
      cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
      %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc96)
      %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc98)
      %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc98)
      %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc96)
      cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
      cir.scope {
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc104)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc255)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc105)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc108)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
        } loc(#loc256)
      } loc(#loc254)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc111)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc111)
        cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc258)
        cir.for : cond {
          %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc113)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc114)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc259)
          %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc115)
          cir.condition(%23) loc(#loc115)
        } body {
          cir.scope {
            cir.scope {
              %19 = cir.const #cir.int<50> : !u64i loc(#loc262)
              %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc121)
              %21 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc122)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc122)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
              %24 = cir.const #cir.int<1> : !u64i loc(#loc263)
              %25 = cir.const #cir.int<50> : !u64i loc(#loc264)
              %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
              %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc121)
              %28 = cir.cmp(ne, %19, %27) : !u64i, !s32i loc(#loc265)
              %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc129)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc132)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
              } loc(#loc266)
            } loc(#loc261)
          } loc(#loc260)
          cir.yield loc(#loc110)
        } step {
          %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc134)
          cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc267)
          cir.yield loc(#loc257)
        } loc(#loc257)
      } loc(#loc257)
      cir.scope {
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
        %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc137)
        cir.if %18 {
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc139)
          %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc140)
        } loc(#loc269)
      } loc(#loc268)
    } loc(#loc249)
    cir.return loc(#loc80)
  } loc(#loc245)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc141)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc271)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc147)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc149)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc149)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc149)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc149)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc149)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc149)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc149)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc149)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc149)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc149)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc149)
      cir.yield %20 : !u32i loc(#loc149)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc149)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc149)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc149)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc149)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc149)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc149)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc149)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc149)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc149)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc149)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc149)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc149)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc149)
      cir.yield %24 : !u32i loc(#loc149)
    }) : (!cir.bool) -> !u32i loc(#loc149)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc149)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc275)
      %10 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc276)
      %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc277)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc154)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc154)
      cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc275)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc156)
      cir.store %14, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc276)
      %15 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc141)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc141)
      cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc161)
        %19 = cir.cmp(gt, %17, %18) : !s32i, !s32i loc(#loc279)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc162)
        %21 = cir.ternary(%20, true {
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
          %23 = cir.const #cir.int<20> : !s32i loc(#loc165)
          %24 = cir.cmp(le, %22, %23) : !s32i, !s32i loc(#loc280)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc166)
          %26 = cir.ternary(%25, true {
            %27 = cir.const #true loc(#loc163)
            cir.yield %27 : !cir.bool loc(#loc163)
          }, false {
            %27 = cir.const #false loc(#loc163)
            cir.yield %27 : !cir.bool loc(#loc163)
          }) : (!cir.bool) -> !cir.bool loc(#loc163)
          cir.yield %26 : !cir.bool loc(#loc163)
        }, false {
          %22 = cir.const #false loc(#loc163)
          cir.yield %22 : !cir.bool loc(#loc163)
        }) : (!cir.bool) -> !cir.bool loc(#loc163)
        cir.if %21 {
          %22 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc168)
          %23 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
          %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc170)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc170)
          %26 = cir.call @fopen(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc168)
          cir.store %26, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc282)
          cir.scope {
            %27 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc175)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc176)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc284)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc177)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc179)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc180)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc179)
            } loc(#loc285)
          } loc(#loc283)
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc183)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc183)
            cir.store %28, %9 : !u64i, !cir.ptr<!u64i> loc(#loc287)
            cir.for : cond {
              %29 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc185)
              %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc186)
              %32 = cir.cmp(lt, %29, %31) : !u64i, !s32i loc(#loc288)
              %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc187)
              cir.condition(%33) loc(#loc187)
            } body {
              cir.scope {
                cir.scope {
                  %29 = cir.const #cir.int<50> : !u64i loc(#loc291)
                  %30 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc193)
                  %31 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc194)
                  %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc194)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
                  %34 = cir.const #cir.int<1> : !u64i loc(#loc292)
                  %35 = cir.const #cir.int<50> : !u64i loc(#loc293)
                  %36 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc199)
                  %37 = cir.call @fwrite(%33, %34, %35, %36) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc193)
                  %38 = cir.cmp(ne, %29, %37) : !u64i, !s32i loc(#loc294)
                  %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc201)
                  cir.if %39 {
                    %40 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc202)
                    %41 = cir.const #cir.int<1> : !s32i loc(#loc203)
                    cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc202)
                  } loc(#loc295)
                } loc(#loc290)
              } loc(#loc289)
              cir.yield loc(#loc182)
            } step {
              %29 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc204)
              %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc205)
              cir.store %30, %9 : !u64i, !cir.ptr<!u64i> loc(#loc296)
              cir.yield loc(#loc286)
            } loc(#loc286)
          } loc(#loc286)
          cir.scope {
            %27 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
            %28 = cir.cast(ptr_to_bool, %27 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc208)
            cir.if %28 {
              %29 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc210)
              %30 = cir.call @fclose(%29) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc211)
            } loc(#loc298)
          } loc(#loc297)
        } loc(#loc281)
      } loc(#loc278)
    } loc(#loc274)
    cir.return loc(#loc143)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":34:32)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:33)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:44)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":54:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":28:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":28:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":30:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":30:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":31:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":53:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":32:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":32:20)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":33:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":33:23)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":34:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:17)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:23)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:37)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":39:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:22)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:19)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":37:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":38:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":38:18)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":48:9)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:18)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:14)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:21)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:33)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:23)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":43:9)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":47:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:17)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:32)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:37)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:54)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:65)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:68)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:83)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:86)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:91)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:34)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":45:13)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":46:17)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":46:22)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:41)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:40)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":49:9)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":52:9)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":49:13)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":50:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":51:20)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":51:13)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":125:1)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":129:1)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":127:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":127:13)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":128:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":128:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":61:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":91:1)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":63:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":63:9)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":65:14)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":65:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":65:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":67:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":67:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":68:5)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":90:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":69:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":69:20)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":70:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":70:23)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":71:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":71:32)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:17)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:23)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:33)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:37)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:9)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":76:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:13)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:22)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:19)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":74:9)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":75:13)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":75:18)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":85:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:18)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:14)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:21)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:33)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:23)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":80:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:13)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":84:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:17)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:32)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:37)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:44)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:54)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:65)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:68)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:83)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:86)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:91)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:34)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":82:13)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":83:17)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":83:22)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:41)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:40)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":86:9)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":89:9)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":86:13)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":87:9)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":88:20)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":88:13)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":104:32)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":94:1)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":123:1)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":96:5)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":96:9)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":98:14)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":98:13)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":98:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":100:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":100:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":101:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":122:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":102:9)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":102:20)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":103:9)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":103:23)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":104:9)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:9)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":121:9)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:13)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:21)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:19)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:23)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:26)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:35)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:32)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":107:9)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:21)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:27)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:37)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:13)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:41)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:13)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":112:13)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:17)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:26)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:23)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":110:13)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":111:17)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":111:22)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:13)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":116:13)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:22)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:18)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:25)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:37)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:27)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":114:13)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:17)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:104)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:21)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:36)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:41)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:48)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:58)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:69)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:72)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:87)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:90)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:95)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:38)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:98)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:103)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:45)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:44)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":117:13)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":120:13)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":117:17)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":118:13)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":119:24)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":119:17)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc4, #loc5])
#loc214 = loc(fused[#loc7, #loc8])
#loc215 = loc(fused[#loc9, #loc10])
#loc216 = loc(fused[#loc12, #loc13])
#loc217 = loc(fused[#loc14, #loc15])
#loc218 = loc(fused[#loc16, #loc17])
#loc219 = loc(fused[#loc20, #loc18])
#loc220 = loc(fused[#loc22, #loc21])
#loc221 = loc(fused[#loc23, #loc24])
#loc222 = loc(fused[#loc25, #loc26])
#loc223 = loc(fused[#loc27, #loc28])
#loc224 = loc(fused[#loc29, #loc3])
#loc225 = loc(fused[#loc32, #loc33])
#loc226 = loc(fused[#loc34, #loc35])
#loc227 = loc(fused[#loc36, #loc37])
#loc228 = loc(fused[#loc39, #loc35])
#loc229 = loc(fused[#loc42, #loc43])
#loc230 = loc(fused[#loc45, #loc44])
#loc231 = loc(fused[#loc46, #loc47])
#loc232 = loc(fused[#loc49, #loc43])
#loc233 = loc(fused[#loc50, #loc51])
#loc234 = loc(fused[#loc52, #loc53])
#loc235 = loc(fused[#loc55, #loc56])
#loc236 = loc(fused[#loc57, #loc58])
#loc237 = loc(fused[#loc52, #loc60])
#loc238 = loc(fused[#loc62, #loc51])
#loc239 = loc(fused[#loc66, #loc65])
#loc240 = loc(fused[#loc67, #loc68])
#loc241 = loc(fused[#loc70, #loc68])
#loc242 = loc(fused[#loc73, #loc74])
#loc243 = loc(fused[#loc75, #loc76])
#loc244 = loc(fused[#loc77, #loc78])
#loc245 = loc(fused[#loc79, #loc80])
#loc246 = loc(fused[#loc81, #loc82])
#loc247 = loc(fused[#loc85, #loc83])
#loc248 = loc(fused[#loc87, #loc86])
#loc249 = loc(fused[#loc88, #loc89])
#loc250 = loc(fused[#loc90, #loc91])
#loc251 = loc(fused[#loc92, #loc93])
#loc252 = loc(fused[#loc94, #loc95])
#loc253 = loc(fused[#loc99, #loc100])
#loc254 = loc(fused[#loc101, #loc102])
#loc255 = loc(fused[#loc103, #loc104])
#loc256 = loc(fused[#loc106, #loc102])
#loc257 = loc(fused[#loc109, #loc110])
#loc258 = loc(fused[#loc112, #loc111])
#loc259 = loc(fused[#loc113, #loc114])
#loc260 = loc(fused[#loc116, #loc110])
#loc261 = loc(fused[#loc117, #loc118])
#loc262 = loc(fused[#loc119, #loc120])
#loc263 = loc(fused[#loc123, #loc124])
#loc264 = loc(fused[#loc125, #loc126])
#loc265 = loc(fused[#loc119, #loc128])
#loc266 = loc(fused[#loc130, #loc118])
#loc267 = loc(fused[#loc134, #loc133])
#loc268 = loc(fused[#loc135, #loc136])
#loc269 = loc(fused[#loc138, #loc136])
#loc270 = loc(fused[#loc142, #loc143])
#loc271 = loc(fused[#loc144, #loc145])
#loc272 = loc(fused[#loc148, #loc146])
#loc273 = loc(fused[#loc150, #loc149])
#loc274 = loc(fused[#loc151, #loc152])
#loc275 = loc(fused[#loc153, #loc154])
#loc276 = loc(fused[#loc155, #loc156])
#loc277 = loc(fused[#loc157, #loc141])
#loc278 = loc(fused[#loc158, #loc159])
#loc279 = loc(fused[#loc160, #loc161])
#loc280 = loc(fused[#loc164, #loc165])
#loc281 = loc(fused[#loc167, #loc159])
#loc282 = loc(fused[#loc171, #loc172])
#loc283 = loc(fused[#loc173, #loc174])
#loc284 = loc(fused[#loc175, #loc176])
#loc285 = loc(fused[#loc178, #loc174])
#loc286 = loc(fused[#loc181, #loc182])
#loc287 = loc(fused[#loc184, #loc183])
#loc288 = loc(fused[#loc185, #loc186])
#loc289 = loc(fused[#loc188, #loc182])
#loc290 = loc(fused[#loc189, #loc190])
#loc291 = loc(fused[#loc191, #loc192])
#loc292 = loc(fused[#loc195, #loc196])
#loc293 = loc(fused[#loc197, #loc198])
#loc294 = loc(fused[#loc191, #loc200])
#loc295 = loc(fused[#loc202, #loc190])
#loc296 = loc(fused[#loc205, #loc204])
#loc297 = loc(fused[#loc206, #loc207])
#loc298 = loc(fused[#loc209, #loc207])
