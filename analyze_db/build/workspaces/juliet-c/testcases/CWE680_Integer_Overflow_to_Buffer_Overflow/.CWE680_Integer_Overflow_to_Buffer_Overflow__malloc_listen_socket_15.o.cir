!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc322)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc323)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc325)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc326)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc327)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc328)
  cir.func private @close(!s32i) -> !s32i loc(#loc329)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc331)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc332)
  cir.func private @printIntLine(!s32i) loc(#loc333)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc334)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc33)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc37)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc340)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc341)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc342)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc343)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc344)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc46)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc342)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc48)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc343)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc55)
                  %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
                  %15 = cir.const #cir.int<6> : !s32i loc(#loc57)
                  %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc347)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc64)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc64)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc349)
                    cir.if %61 {
                      cir.break loc(#loc66)
                    } loc(#loc350)
                  } loc(#loc348)
                  %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc351)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc69)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc352)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc353)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc74)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc74)
                  %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc354)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc77)
                  %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc77)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc355)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc81)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc81)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc356)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                    %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc358)
                    %60 = cir.const #cir.int<16> : !u64i loc(#loc359)
                    %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc359)
                    %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc94)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc94)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc360)
                    cir.if %65 {
                      cir.break loc(#loc96)
                    } loc(#loc361)
                  } loc(#loc357)
                  cir.scope {
                    %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                    %59 = cir.const #cir.int<5> : !s32i loc(#loc100)
                    %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
                    %61 = cir.const #cir.int<1> : !s32i loc(#loc102)
                    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc102)
                    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc363)
                    cir.if %63 {
                      cir.break loc(#loc104)
                    } loc(#loc364)
                  } loc(#loc362)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
                  %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
                  cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc365)
                  cir.scope {
                    %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc114)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc114)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc367)
                    cir.if %61 {
                      cir.break loc(#loc116)
                    } loc(#loc368)
                  } loc(#loc366)
                  %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
                  %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
                  %38 = cir.const #cir.int<3> : !s32i loc(#loc119)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc119)
                  %40 = cir.const #cir.int<4> : !u64i loc(#loc119)
                  %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc119)
                  %42 = cir.const #cir.int<2> : !s32i loc(#loc119)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc119)
                  %44 = cir.binop(add, %41, %43) : !u64i loc(#loc119)
                  %45 = cir.const #cir.int<1> : !s32i loc(#loc120)
                  %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc120)
                  %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc369)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc121)
                  %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc122)
                  cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc370)
                  cir.scope {
                    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc128)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc128)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc372)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc129)
                      cir.yield %63 : !cir.bool loc(#loc129)
                    }, false {
                      %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                      %64 = cir.const #cir.int<0> : !s32i loc(#loc131)
                      %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc373)
                      %66 = cir.ternary(%65, true {
                        %67 = cir.const #true loc(#loc129)
                        cir.yield %67 : !cir.bool loc(#loc129)
                      }, false {
                        %67 = cir.const #false loc(#loc129)
                        cir.yield %67 : !cir.bool loc(#loc129)
                      }) : (!cir.bool) -> !cir.bool loc(#loc129)
                      cir.yield %66 : !cir.bool loc(#loc129)
                    }) : (!cir.bool) -> !cir.bool loc(#loc129)
                    cir.if %62 {
                      cir.break loc(#loc133)
                    } loc(#loc374)
                  } loc(#loc371)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc134)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc134)
                  %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                  %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
                  %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc136)
                  cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc375)
                  %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
                  %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc138)
                  cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc376)
                } loc(#loc346)
                cir.yield loc(#loc52)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc141)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc141)
                cir.condition(%14) loc(#loc141)
              } loc(#loc345)
            } loc(#loc345)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc145)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc378)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc148)
              } loc(#loc379)
            } loc(#loc377)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc152)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc152)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc381)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc155)
              } loc(#loc382)
            } loc(#loc380)
          } loc(#loc339)
          cir.break loc(#loc156)
        } loc(#loc38)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc158)
          cir.break loc(#loc159)
        } loc(#loc157)
        cir.yield loc(#loc35)
      } loc(#loc35)
    } loc(#loc338)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc384)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc385)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc166)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc167)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc386)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc387)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc388)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc389)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc175)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc175)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc391)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc177)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc178)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc179)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc177)
        } loc(#loc392)
      } loc(#loc390)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc182)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc182)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc394)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc184)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc185)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc395)
          cir.condition(%24) loc(#loc186)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc188)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc190)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc191)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc397)
          } loc(#loc396)
          cir.yield loc(#loc181)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc192)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc193)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc398)
          cir.yield loc(#loc393)
        } loc(#loc393)
      } loc(#loc393)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc195)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc196)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc197)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc198)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc199)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc199)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc198)
    } loc(#loc383)
    cir.return loc(#loc29)
  } loc(#loc335)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc400)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc202)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc401)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc204)
    cir.return loc(#loc201)
  } loc(#loc399)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc211)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc215)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc217)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc217)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc218)
          cir.break loc(#loc219)
        } loc(#loc216)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc221)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc406)
          cir.break loc(#loc223)
        } loc(#loc220)
        cir.yield loc(#loc213)
      } loc(#loc213)
    } loc(#loc405)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc408)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc409)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc230)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc231)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc410)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc411)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc412)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc413)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc239)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc239)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc415)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc241)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc242)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc243)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc241)
        } loc(#loc416)
      } loc(#loc414)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc246)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc246)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc418)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc248)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc249)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc419)
          cir.condition(%24) loc(#loc250)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc252)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc254)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc255)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc421)
          } loc(#loc420)
          cir.yield loc(#loc245)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc256)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc257)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc422)
          cir.yield loc(#loc417)
        } loc(#loc417)
      } loc(#loc417)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc258)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc259)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc260)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc258)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc261)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc262)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc263)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc263)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc262)
    } loc(#loc407)
    cir.return loc(#loc207)
  } loc(#loc402)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc269)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc273)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc275)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc427)
          cir.break loc(#loc277)
        } loc(#loc274)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc279)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc279)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc280)
          cir.break loc(#loc281)
        } loc(#loc278)
        cir.yield loc(#loc271)
      } loc(#loc271)
    } loc(#loc426)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc429)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc430)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc288)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc289)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc431)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc432)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc288)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc433)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc434)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc296)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc297)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc297)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc436)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc299)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc300)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc301)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc299)
        } loc(#loc437)
      } loc(#loc435)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc304)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc304)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc439)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc306)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc307)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc440)
          cir.condition(%24) loc(#loc308)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc310)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc312)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc313)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc442)
          } loc(#loc441)
          cir.yield loc(#loc303)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc314)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc315)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc443)
          cir.yield loc(#loc438)
        } loc(#loc438)
      } loc(#loc438)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc316)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc317)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc318)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc316)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc319)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc320)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc321)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc321)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc320)
    } loc(#loc428)
    cir.return loc(#loc265)
  } loc(#loc423)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":123:19)
#loc20 = loc("/usr/include/stdlib.h":672:1)
#loc21 = loc("/usr/include/stdlib.h":672:45)
#loc22 = loc("/usr/include/stdlib.h":756:1)
#loc23 = loc("/usr/include/stdlib.h":756:70)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":43:1)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":140:1)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":45:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":45:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":47:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":47:12)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":47:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":48:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":125:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":48:12)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":50:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":51:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":119:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":56:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":56:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":57:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":57:28)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":58:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":58:31)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":59:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":59:31)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":60:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":60:41)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":61:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":104:17)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":62:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":103:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":71:35)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":71:44)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":71:57)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":71:28)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":71:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":71:68)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":72:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":75:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":72:17)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":72:33)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":73:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":74:17)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:20)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:21)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:30)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:33)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:47)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":76:48)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":77:34)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":77:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":78:39)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":78:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":79:38)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":79:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":79:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":79:46)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":83:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:22)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:54)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:55)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:64)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:78)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":80:84)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":81:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":82:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":84:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":87:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":84:24)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":84:38)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":84:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":84:57)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":85:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":86:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":88:35)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":88:49)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":88:55)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":88:28)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":88:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":88:59)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":89:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":92:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":89:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":89:33)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":90:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":91:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:31)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:45)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:58)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:76)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:79)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:26)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":94:80)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":95:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":98:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":95:17)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":95:31)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":95:44)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":95:47)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":95:61)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":96:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":97:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":100:39)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":100:25)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":100:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":102:25)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":102:20)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":102:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":102:36)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":104:16)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":105:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":108:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":105:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":105:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":106:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":107:26)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":107:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":109:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":112:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":109:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":109:29)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":110:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":111:26)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":111:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":120:5)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":121:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":123:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":124:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":126:5)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":139:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":127:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":127:16)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":128:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":128:14)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":131:28)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":131:35)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":131:42)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":131:52)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":131:53)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":131:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:43)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:13)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:27)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:34)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:40)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":132:39)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":136:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:18)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:14)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:21)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:23)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":134:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":135:29)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":135:13)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":135:24)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":135:25)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:40)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":133:39)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":137:22)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":137:33)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":137:34)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":137:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":138:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":138:14)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":212:1)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":216:1)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":214:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":214:14)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":215:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":215:14)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":147:1)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":177:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":149:5)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":149:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":151:13)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":151:12)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":151:5)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":152:5)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":162:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":152:12)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":154:5)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":156:19)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":156:9)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":157:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":158:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":160:16)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":160:9)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":161:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":163:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":176:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":164:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":164:16)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":165:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":165:14)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":168:28)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":168:35)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":168:42)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":168:52)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":168:53)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":168:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:43)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:13)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:27)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:33)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:34)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:40)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":169:39)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:9)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":173:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:18)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:14)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:21)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:33)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:23)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":171:9)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":172:29)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":172:13)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":172:24)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":172:25)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:40)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":170:39)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":174:22)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":174:33)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":174:34)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":174:9)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":175:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":175:14)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":180:1)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":210:1)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":182:5)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":182:9)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":184:13)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":184:12)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":184:5)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":185:5)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":195:5)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":185:12)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":187:5)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":189:16)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":189:9)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":190:9)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":191:5)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":193:19)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":193:9)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":194:9)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":196:5)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":209:5)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":197:9)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":197:16)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":198:9)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":198:14)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":201:28)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":201:35)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":201:42)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":201:52)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":201:53)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":201:9)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:9)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:43)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:13)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:27)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:33)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:34)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:40)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":202:39)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:9)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":206:9)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:18)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:14)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:21)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:33)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:23)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":204:9)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":205:29)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":205:13)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":205:24)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":205:25)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:40)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":203:39)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":207:22)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":207:33)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":207:34)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":207:9)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":208:9)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_15.c":208:14)
#loc322 = loc(fused[#loc1, #loc2])
#loc323 = loc(fused[#loc3, #loc4])
#loc324 = loc(fused[#loc5, #loc6])
#loc325 = loc(fused[#loc7, #loc8])
#loc326 = loc(fused[#loc9, #loc10])
#loc327 = loc(fused[#loc11, #loc12])
#loc328 = loc(fused[#loc13, #loc14])
#loc329 = loc(fused[#loc15, #loc16])
#loc330 = loc(fused[#loc17, #loc18])
#loc331 = loc(fused[#loc20, #loc21])
#loc332 = loc(fused[#loc22, #loc23])
#loc333 = loc(fused[#loc24, #loc25])
#loc334 = loc(fused[#loc26, #loc27])
#loc335 = loc(fused[#loc28, #loc29])
#loc336 = loc(fused[#loc30, #loc31])
#loc337 = loc(fused[#loc34, #loc32])
#loc338 = loc(fused[#loc35, #loc36])
#loc339 = loc(fused[#loc39, #loc40])
#loc340 = loc(fused[#loc41, #loc42])
#loc341 = loc(fused[#loc43, #loc44])
#loc342 = loc(fused[#loc45, #loc46])
#loc343 = loc(fused[#loc47, #loc48])
#loc344 = loc(fused[#loc49, #loc50])
#loc345 = loc(fused[#loc51, #loc52])
#loc346 = loc(fused[#loc53, #loc54])
#loc347 = loc(fused[#loc59, #loc60])
#loc348 = loc(fused[#loc61, #loc62])
#loc349 = loc(fused[#loc63, #loc64])
#loc350 = loc(fused[#loc65, #loc62])
#loc351 = loc(fused[#loc67, #loc68])
#loc352 = loc(fused[#loc70, #loc71])
#loc353 = loc(fused[#loc72, #loc73])
#loc354 = loc(fused[#loc76, #loc74])
#loc355 = loc(fused[#loc80, #loc77])
#loc356 = loc(fused[#loc84, #loc85])
#loc357 = loc(fused[#loc86, #loc87])
#loc358 = loc(fused[#loc89, #loc90])
#loc359 = loc(fused[#loc91, #loc92])
#loc360 = loc(fused[#loc93, #loc94])
#loc361 = loc(fused[#loc95, #loc87])
#loc362 = loc(fused[#loc97, #loc98])
#loc363 = loc(fused[#loc101, #loc102])
#loc364 = loc(fused[#loc103, #loc98])
#loc365 = loc(fused[#loc109, #loc110])
#loc366 = loc(fused[#loc111, #loc112])
#loc367 = loc(fused[#loc113, #loc114])
#loc368 = loc(fused[#loc115, #loc112])
#loc369 = loc(fused[#loc119, #loc120])
#loc370 = loc(fused[#loc123, #loc124])
#loc371 = loc(fused[#loc125, #loc126])
#loc372 = loc(fused[#loc127, #loc128])
#loc373 = loc(fused[#loc130, #loc131])
#loc374 = loc(fused[#loc132, #loc126])
#loc375 = loc(fused[#loc136, #loc134])
#loc376 = loc(fused[#loc139, #loc140])
#loc377 = loc(fused[#loc142, #loc143])
#loc378 = loc(fused[#loc144, #loc145])
#loc379 = loc(fused[#loc146, #loc143])
#loc380 = loc(fused[#loc149, #loc150])
#loc381 = loc(fused[#loc151, #loc152])
#loc382 = loc(fused[#loc153, #loc150])
#loc383 = loc(fused[#loc160, #loc161])
#loc384 = loc(fused[#loc162, #loc163])
#loc385 = loc(fused[#loc164, #loc165])
#loc386 = loc(fused[#loc168, #loc169])
#loc387 = loc(fused[#loc167, #loc169])
#loc388 = loc(fused[#loc166, #loc170])
#loc389 = loc(fused[#loc171, #loc170])
#loc390 = loc(fused[#loc172, #loc173])
#loc391 = loc(fused[#loc174, #loc175])
#loc392 = loc(fused[#loc176, #loc173])
#loc393 = loc(fused[#loc180, #loc181])
#loc394 = loc(fused[#loc183, #loc182])
#loc395 = loc(fused[#loc184, #loc185])
#loc396 = loc(fused[#loc187, #loc181])
#loc397 = loc(fused[#loc189, #loc188])
#loc398 = loc(fused[#loc193, #loc192])
#loc399 = loc(fused[#loc200, #loc201])
#loc400 = loc(fused[#loc202, #loc203])
#loc401 = loc(fused[#loc204, #loc205])
#loc402 = loc(fused[#loc206, #loc207])
#loc403 = loc(fused[#loc208, #loc209])
#loc404 = loc(fused[#loc212, #loc210])
#loc405 = loc(fused[#loc213, #loc214])
#loc406 = loc(fused[#loc222, #loc221])
#loc407 = loc(fused[#loc224, #loc225])
#loc408 = loc(fused[#loc226, #loc227])
#loc409 = loc(fused[#loc228, #loc229])
#loc410 = loc(fused[#loc232, #loc233])
#loc411 = loc(fused[#loc231, #loc233])
#loc412 = loc(fused[#loc230, #loc234])
#loc413 = loc(fused[#loc235, #loc234])
#loc414 = loc(fused[#loc236, #loc237])
#loc415 = loc(fused[#loc238, #loc239])
#loc416 = loc(fused[#loc240, #loc237])
#loc417 = loc(fused[#loc244, #loc245])
#loc418 = loc(fused[#loc247, #loc246])
#loc419 = loc(fused[#loc248, #loc249])
#loc420 = loc(fused[#loc251, #loc245])
#loc421 = loc(fused[#loc253, #loc252])
#loc422 = loc(fused[#loc257, #loc256])
#loc423 = loc(fused[#loc264, #loc265])
#loc424 = loc(fused[#loc266, #loc267])
#loc425 = loc(fused[#loc270, #loc268])
#loc426 = loc(fused[#loc271, #loc272])
#loc427 = loc(fused[#loc276, #loc275])
#loc428 = loc(fused[#loc282, #loc283])
#loc429 = loc(fused[#loc284, #loc285])
#loc430 = loc(fused[#loc286, #loc287])
#loc431 = loc(fused[#loc290, #loc291])
#loc432 = loc(fused[#loc289, #loc291])
#loc433 = loc(fused[#loc288, #loc292])
#loc434 = loc(fused[#loc293, #loc292])
#loc435 = loc(fused[#loc294, #loc295])
#loc436 = loc(fused[#loc296, #loc297])
#loc437 = loc(fused[#loc298, #loc295])
#loc438 = loc(fused[#loc302, #loc303])
#loc439 = loc(fused[#loc305, #loc304])
#loc440 = loc(fused[#loc306, #loc307])
#loc441 = loc(fused[#loc309, #loc303])
#loc442 = loc(fused[#loc311, #loc310])
#loc443 = loc(fused[#loc315, #loc314])
