!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":44:22)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":44:26)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:44)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":238:10)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":238:14)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":238:20)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":238:32)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":144:26)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":144:30)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:44)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":123:26)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":123:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc314 = loc(fused[#loc18, #loc19])
#loc362 = loc(fused[#loc147, #loc148])
#loc363 = loc(fused[#loc149, #loc150])
#loc368 = loc(fused[#loc167, #loc168])
#loc411 = loc(fused[#loc282, #loc283])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc306)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc308)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc309)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc310)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc311)
  cir.func private @close(!s32i) -> !s32i loc(#loc312)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc315)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc316)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc317)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc318)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc314)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %4 : !s32i, !cir.ptr<!s32i> loc(#loc28)
    cir.br ^bb1 loc(#loc319)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc25)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb2 loc(#loc320)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc320)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc36)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc37)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb5 loc(#loc322)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc43)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc324)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc45)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc325)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc326)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc327)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc53)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc328)
    %24 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc56)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc329)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc61)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc61)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc62)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc330)
    cir.br ^bb9 loc(#loc331)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc332)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc333)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc333)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc73)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc74)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc334)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc335)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc76)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc67)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc78)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc79)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc79)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc79)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc79)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc79)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc79)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc80)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc336)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc82)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc82)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb13 loc(#loc338)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc88)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc89)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc89)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc89)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc89)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc89)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc89)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc89)
  ^bb18(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc89)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc89)
  ^bb20(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc89)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc341)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc93)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc86)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc94)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc342)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc98)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb3 loc(#loc32)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc32)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc344)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc104)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc346)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc107)
    cir.br ^bb29 loc(#loc102)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc102)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc30)
  ^bb31:  // pred: ^bb30
    %82 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %82, %5 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    cir.return %83 : !s32i loc(#loc347)
  } loc(#loc313)
  cir.func private @printIntLine(!s32i) loc(#loc348)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc121)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb1 loc(#loc354)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc126)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc128)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc113)
  } loc(#loc349)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_add_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc356)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc131)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc357)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc133)
    cir.return loc(#loc130)
  } loc(#loc355)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc358)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc359)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc360)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc144)
  cir.func @main(%arg0: !s32i loc(fused[#loc147, #loc148]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc149, #loc150])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc363)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc146)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc151)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc152)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc153)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc153)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc154)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc141)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_add_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc364)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_add_42_good() : () -> () loc(#loc156)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc142)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc143)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_add_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc365)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_add_42_bad() : () -> () loc(#loc160)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc144)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc163)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc366)
    cir.return %17 : !s32i loc(#loc366)
  } loc(#loc361)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc167, #loc168])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc370)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc371)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc368)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc166)
    cir.store %arg0, %4 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb1 loc(#loc373)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc174)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb2 loc(#loc374)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc374)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc182)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc183)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc185)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc186)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb5 loc(#loc376)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc192)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc377)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc378)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc194)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc190)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc379)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc380)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc381)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc202)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc202)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc382)
    %24 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc204)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc204)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc205)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc383)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc208)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc208)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc209)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc384)
    cir.br ^bb9 loc(#loc385)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc386)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc387)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc387)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc219)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc220)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc220)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc389)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc222)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc213)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc224)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc225)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc225)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc225)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc225)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc225)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc225)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc225)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc226)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc390)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc228)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc228)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb13 loc(#loc392)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc234)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc234)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc235)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc235)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc235)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc394)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc235)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc235)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc235)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc235)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc235)
  ^bb18(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc235)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc235)
  ^bb20(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc235)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc395)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc239)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc232)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc240)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc242)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc396)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc243)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc244)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb3 loc(#loc181)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc181)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc398)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc250)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc399)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc400)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc253)
    cir.br ^bb29 loc(#loc248)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc248)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc179)
  ^bb31:  // pred: ^bb30
    %82 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    cir.store %82, %5 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    cir.return %83 : !s32i loc(#loc401)
  } loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc256)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc404)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc263)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc266)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb1 loc(#loc407)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc272)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc409)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc276)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc278)
    cir.br ^bb4 loc(#loc274)
  ^bb3:  // pred: ^bb1
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc256)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc256)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    cir.br ^bb4 loc(#loc270)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc258)
  } loc(#loc402)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc282, #loc283])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc411)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc281)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc285)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    cir.return %4 : !s32i loc(#loc413)
  } loc(#loc410)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc415)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc416)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc295)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc298)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    cir.br ^bb1 loc(#loc419)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc292)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc303)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc305)
    cir.br ^bb2 loc(#loc302)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc290)
  } loc(#loc414)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_add_42.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":72:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":44:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":103:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":51:9)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":51:13)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":52:9)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":52:28)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":53:9)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":53:32)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":54:9)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":54:41)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":45:1)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":46:5)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":101:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":55:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":90:17)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":90:16)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":65:36)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":65:45)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":65:58)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":65:29)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":65:13)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":65:69)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":66:13)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":69:13)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":66:17)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":66:34)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":67:13)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":68:17)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:20)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:21)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:30)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:33)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:47)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":70:48)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":71:34)
#loc54 = loc("/usr/include/netinet/in.h":249:5)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":71:13)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":72:39)
#loc57 = loc("/usr/include/netinet/in.h":251:20)
#loc58 = loc("/usr/include/netinet/in.h":33:15)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":72:13)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":72:59)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":73:38)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":73:32)
#loc63 = loc("/usr/include/netinet/in.h":250:15)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":73:13)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":73:46)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:13)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":77:13)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:25)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:58)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:59)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:68)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:82)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:17)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":74:88)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":75:13)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":76:17)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:31)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:46)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:59)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:77)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:80)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:26)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:13)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":80:81)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:13)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":84:13)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:17)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:31)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:47)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":81:61)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":82:13)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":83:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":86:39)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":86:25)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":86:13)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":88:25)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":88:20)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":88:13)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":88:36)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":91:9)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":94:9)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":91:13)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":91:30)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":92:9)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":93:26)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":93:13)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":102:12)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":102:5)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":105:1)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":116:1)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":113:9)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":113:29)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":107:5)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":107:9)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":109:12)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":109:5)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":110:22)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":110:12)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":110:5)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":110:26)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":111:5)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":115:5)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":113:22)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":114:22)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":114:9)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":223:1)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":227:1)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":225:5)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":225:13)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":226:5)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":226:13)
#loc135 = loc("/usr/include/stdlib.h":575:1)
#loc136 = loc("/usr/include/stdlib.h":575:41)
#loc137 = loc("/usr/include/time.h":76:1)
#loc138 = loc("/usr/include/time.h":76:38)
#loc139 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc140 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":243:15)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":245:15)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":248:15)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":250:15)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":238:1)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":253:1)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":239:1)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":241:27)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":241:22)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":241:5)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":243:5)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":244:5)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":244:61)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":245:5)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":248:5)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":249:5)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":249:60)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":250:5)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":252:12)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":252:5)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":144:1)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":203:1)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":151:9)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":151:13)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":152:9)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":152:28)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":153:9)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":153:32)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":154:9)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":154:41)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":145:1)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":146:5)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":201:5)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":155:9)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":190:17)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":190:16)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":165:36)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":165:45)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":165:58)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":165:29)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":165:13)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":165:69)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":166:13)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":169:13)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":166:17)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":166:34)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":167:13)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":168:17)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:20)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:21)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:30)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:33)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:47)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:13)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":170:48)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":171:34)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":171:13)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":172:49)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":172:39)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":172:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":172:59)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":173:38)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":173:32)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":173:13)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":173:46)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:13)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":177:13)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:25)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:58)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:59)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:68)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:82)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:17)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":174:88)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":175:13)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":176:17)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:31)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:46)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:59)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:77)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:80)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:26)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:13)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":180:81)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:13)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":184:13)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:17)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:31)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:47)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":181:61)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":182:13)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":183:17)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":186:39)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":186:25)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":186:13)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":188:25)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":188:20)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":188:13)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":188:36)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":191:9)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":194:9)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":191:13)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":191:30)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":192:9)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":193:26)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":193:13)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":202:12)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":202:5)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":219:19)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":205:1)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":221:1)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":214:9)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":214:29)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":207:5)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":207:9)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":209:12)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":209:5)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":210:26)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":210:12)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":210:5)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":210:30)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":212:5)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":220:5)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":212:9)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":212:16)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":213:5)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":216:5)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":218:5)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":214:22)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":215:22)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":215:9)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":219:9)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":123:1)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":128:1)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":124:1)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":126:12)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":126:5)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":127:12)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":127:5)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":130:1)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":141:1)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":138:9)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":138:29)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":132:5)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":132:9)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":134:12)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":134:5)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":135:26)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":135:12)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":135:5)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":135:30)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":136:5)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":140:5)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":138:22)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":139:22)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_add_42.c":139:9)
#loc306 = loc(fused[#loc1, #loc2])
#loc307 = loc(fused[#loc3, #loc4])
#loc308 = loc(fused[#loc6, #loc7])
#loc309 = loc(fused[#loc8, #loc9])
#loc310 = loc(fused[#loc10, #loc11])
#loc311 = loc(fused[#loc12, #loc13])
#loc312 = loc(fused[#loc14, #loc15])
#loc313 = loc(fused[#loc16, #loc17])
#loc315 = loc(fused[#loc20, #loc21])
#loc316 = loc(fused[#loc22, #loc23])
#loc317 = loc(fused[#loc24, #loc25])
#loc318 = loc(fused[#loc26, #loc27])
#loc319 = loc(fused[#loc29, #loc30])
#loc320 = loc(fused[#loc31, #loc32])
#loc321 = loc(fused[#loc38, #loc39])
#loc322 = loc(fused[#loc40, #loc41])
#loc323 = loc(fused[#loc42, #loc43])
#loc324 = loc(fused[#loc44, #loc41])
#loc325 = loc(fused[#loc46, #loc47])
#loc326 = loc(fused[#loc49, #loc50])
#loc327 = loc(fused[#loc51, #loc52])
#loc328 = loc(fused[#loc55, #loc53])
#loc329 = loc(fused[#loc59, #loc60])
#loc330 = loc(fused[#loc64, #loc65])
#loc331 = loc(fused[#loc66, #loc67])
#loc332 = loc(fused[#loc69, #loc70])
#loc333 = loc(fused[#loc71, #loc72])
#loc334 = loc(fused[#loc73, #loc74])
#loc335 = loc(fused[#loc75, #loc67])
#loc336 = loc(fused[#loc79, #loc80])
#loc337 = loc(fused[#loc83, #loc84])
#loc338 = loc(fused[#loc85, #loc86])
#loc339 = loc(fused[#loc87, #loc88])
#loc340 = loc(fused[#loc90, #loc91])
#loc341 = loc(fused[#loc92, #loc86])
#loc342 = loc(fused[#loc96, #loc94])
#loc343 = loc(fused[#loc99, #loc100])
#loc344 = loc(fused[#loc101, #loc102])
#loc345 = loc(fused[#loc103, #loc104])
#loc346 = loc(fused[#loc105, #loc102])
#loc347 = loc(fused[#loc109, #loc108])
#loc348 = loc(fused[#loc110, #loc111])
#loc349 = loc(fused[#loc112, #loc113])
#loc350 = loc(fused[#loc114, #loc115])
#loc351 = loc(fused[#loc116, #loc117])
#loc352 = loc(fused[#loc119, #loc118])
#loc353 = loc(fused[#loc122, #loc123])
#loc354 = loc(fused[#loc124, #loc125])
#loc355 = loc(fused[#loc129, #loc130])
#loc356 = loc(fused[#loc131, #loc132])
#loc357 = loc(fused[#loc133, #loc134])
#loc358 = loc(fused[#loc135, #loc136])
#loc359 = loc(fused[#loc137, #loc138])
#loc360 = loc(fused[#loc139, #loc140])
#loc361 = loc(fused[#loc145, #loc146])
#loc364 = loc(fused[#loc156, #loc157])
#loc365 = loc(fused[#loc160, #loc161])
#loc366 = loc(fused[#loc164, #loc163])
#loc367 = loc(fused[#loc165, #loc166])
#loc369 = loc(fused[#loc169, #loc170])
#loc370 = loc(fused[#loc171, #loc172])
#loc371 = loc(fused[#loc173, #loc174])
#loc372 = loc(fused[#loc175, #loc176])
#loc373 = loc(fused[#loc178, #loc179])
#loc374 = loc(fused[#loc180, #loc181])
#loc375 = loc(fused[#loc187, #loc188])
#loc376 = loc(fused[#loc189, #loc190])
#loc377 = loc(fused[#loc191, #loc192])
#loc378 = loc(fused[#loc193, #loc190])
#loc379 = loc(fused[#loc195, #loc196])
#loc380 = loc(fused[#loc198, #loc199])
#loc381 = loc(fused[#loc200, #loc201])
#loc382 = loc(fused[#loc203, #loc202])
#loc383 = loc(fused[#loc206, #loc207])
#loc384 = loc(fused[#loc210, #loc211])
#loc385 = loc(fused[#loc212, #loc213])
#loc386 = loc(fused[#loc215, #loc216])
#loc387 = loc(fused[#loc217, #loc218])
#loc388 = loc(fused[#loc219, #loc220])
#loc389 = loc(fused[#loc221, #loc213])
#loc390 = loc(fused[#loc225, #loc226])
#loc391 = loc(fused[#loc229, #loc230])
#loc392 = loc(fused[#loc231, #loc232])
#loc393 = loc(fused[#loc233, #loc234])
#loc394 = loc(fused[#loc236, #loc237])
#loc395 = loc(fused[#loc238, #loc232])
#loc396 = loc(fused[#loc242, #loc240])
#loc397 = loc(fused[#loc245, #loc246])
#loc398 = loc(fused[#loc247, #loc248])
#loc399 = loc(fused[#loc249, #loc250])
#loc400 = loc(fused[#loc251, #loc248])
#loc401 = loc(fused[#loc255, #loc254])
#loc402 = loc(fused[#loc257, #loc258])
#loc403 = loc(fused[#loc259, #loc260])
#loc404 = loc(fused[#loc261, #loc262])
#loc405 = loc(fused[#loc264, #loc263])
#loc406 = loc(fused[#loc267, #loc268])
#loc407 = loc(fused[#loc269, #loc270])
#loc408 = loc(fused[#loc271, #loc272])
#loc409 = loc(fused[#loc273, #loc274, #loc275, #loc270])
#loc410 = loc(fused[#loc280, #loc281])
#loc412 = loc(fused[#loc286, #loc285])
#loc413 = loc(fused[#loc288, #loc287])
#loc414 = loc(fused[#loc289, #loc290])
#loc415 = loc(fused[#loc291, #loc292])
#loc416 = loc(fused[#loc293, #loc294])
#loc417 = loc(fused[#loc296, #loc295])
#loc418 = loc(fused[#loc299, #loc300])
#loc419 = loc(fused[#loc301, #loc302])
