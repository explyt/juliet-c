!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":120:10)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":120:14)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":120:20)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":120:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc262 = loc(fused[#loc113, #loc114])
#loc263 = loc(fused[#loc115, #loc116])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc218)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc219)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc220)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc224)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc225)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc226)
    %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc227)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc228)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc229)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc228)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc229)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    cir.store %8, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc222)
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc32)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc33)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc33)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc232)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc233)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc234)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc235)
    cir.br ^bb2 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc237)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc238)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // pred: ^bb4
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %26 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc47)
    cir.store %25, %26 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc239)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc240)
  ^bb7:  // pred: ^bb6
    %27 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc14)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    cir.store %28, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc223)
    cir.br ^bb8 loc(#loc241)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc242)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc243)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc58)
    cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb11 loc(#loc243)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc61)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc245)
    cir.brcond %34 ^bb12, ^bb16 loc(#loc62)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc246)
  ^bb13:  // pred: ^bb12
    %35 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %37 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %39 = cir.get_member %38[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc67)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!ty__twoIntsStruct>, %41 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %44 = cir.get_member %43[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc71)
    cir.store %40, %44 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.br ^bb14 loc(#loc57)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc57)
  ^bb15:  // pred: ^bb14
    %45 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc73)
    cir.store %46, %3 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb11 loc(#loc243)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc57)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc55)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc250)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc251)
  ^bb20:  // pred: ^bb19
    %47 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc78)
    cir.store %48, %4 : !u64i, !cir.ptr<!u64i> loc(#loc252)
    cir.br ^bb21 loc(#loc251)
  ^bb21:  // 2 preds: ^bb20, ^bb25
    %49 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc81)
    %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc253)
    cir.brcond %52 ^bb22, ^bb26 loc(#loc82)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc254)
  ^bb23:  // pred: ^bb22
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    %54 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %54 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %57 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!ty__twoIntsStruct>, %56 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.copy %58 to %55 : !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.br ^bb24 loc(#loc77)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc77)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %60 = cir.unary(inc, %59) : !u64i, !u64i loc(#loc90)
    cir.store %60, %4 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb21 loc(#loc251)
  ^bb26:  // pred: ^bb21
    cir.br ^bb27 loc(#loc77)
  ^bb27:  // pred: ^bb26
    %61 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!ty__twoIntsStruct>, %62 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.call @printStructLine(%63) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc94)
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc95)
    cir.call @free(%65) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc96)
    cir.br ^bb28 loc(#loc75)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc53)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc50)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc10)
  } loc(#loc221)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc256)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc110)
  cir.func @main(%arg0: !s32i loc(fused[#loc113, #loc114]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc115, #loc116])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc112)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc117)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc118)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc119)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc119)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc120)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32_good() : () -> () loc(#loc122)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc109)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32_bad() : () -> () loc(#loc126)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc110)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc129)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    cir.return %17 : !s32i loc(#loc266)
  } loc(#loc261)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc270)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc271)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc272)
    %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc273)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc274)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc275)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc274)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc275)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    cir.store %8, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc268)
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc154)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc155)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc278)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc279)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc280)
    cir.store %17, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc281)
    cir.br ^bb2 loc(#loc282)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc283)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc284)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc167)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // pred: ^bb4
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
    %26 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc169)
    cir.store %25, %26 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc285)
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc286)
  ^bb7:  // pred: ^bb6
    %27 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
    cir.store %28, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc269)
    cir.br ^bb8 loc(#loc287)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc288)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc289)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc180)
    cir.store %30, %3 : !u64i, !cir.ptr<!u64i> loc(#loc290)
    cir.br ^bb11 loc(#loc289)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %31 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc182)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc183)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc183)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc291)
    cir.brcond %34 ^bb12, ^bb16 loc(#loc184)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc292)
  ^bb13:  // pred: ^bb12
    %35 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc187)
    %37 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    %39 = cir.get_member %38[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc67)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %41 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc190)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!ty__twoIntsStruct>, %41 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %44 = cir.get_member %43[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc71)
    cir.store %40, %44 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb14 loc(#loc179)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc179)
  ^bb15:  // pred: ^bb14
    %45 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc192)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc193)
    cir.store %46, %3 : !u64i, !cir.ptr<!u64i> loc(#loc295)
    cir.br ^bb11 loc(#loc289)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc179)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc177)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc296)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc297)
  ^bb20:  // pred: ^bb19
    %47 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc198)
    cir.store %48, %4 : !u64i, !cir.ptr<!u64i> loc(#loc298)
    cir.br ^bb21 loc(#loc297)
  ^bb21:  // 2 preds: ^bb20, ^bb25
    %49 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc201)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc201)
    %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc299)
    cir.brcond %52 ^bb22, ^bb26 loc(#loc202)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc300)
  ^bb23:  // pred: ^bb22
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc204)
    %54 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc205)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %54 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc207)
    %57 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc208)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!ty__twoIntsStruct>, %56 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc208)
    cir.copy %58 to %55 : !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
    cir.br ^bb24 loc(#loc197)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc197)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc209)
    %60 = cir.unary(inc, %59) : !u64i, !u64i loc(#loc210)
    cir.store %60, %4 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.br ^bb21 loc(#loc297)
  ^bb26:  // pred: ^bb21
    cir.br ^bb27 loc(#loc197)
  ^bb27:  // pred: ^bb26
    %61 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc211)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!ty__twoIntsStruct>, %62 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
    cir.call @printStructLine(%63) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc214)
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc215)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc215)
    cir.call @free(%65) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc216)
    cir.br ^bb28 loc(#loc195)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc175)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc172)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc132)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":59:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":28:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":28:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":35:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":35:33)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":37:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":37:37)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":39:17)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":39:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":48:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":48:24)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":23:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":23:21)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":24:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":24:34)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":25:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":25:34)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":26:12)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":26:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":27:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":33:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":28:32)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":30:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":30:40)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":30:43)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":30:63)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":30:64)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":30:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:37)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:21)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:28)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:34)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":31:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":32:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":32:10)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":32:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":34:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":58:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":35:32)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":36:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":57:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":38:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":46:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:17)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":45:17)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:26)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:22)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:33)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:31)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":42:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":43:40)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":43:28)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":43:21)
#loc67 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":44:40)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":44:28)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":44:21)
#loc71 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:39)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":41:38)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":47:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":56:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":53:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:26)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:22)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:29)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:33)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:31)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":51:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":52:21)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":52:26)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":52:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":52:38)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":52:31)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:39)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":50:38)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":54:34)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":54:39)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":54:40)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":54:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":55:22)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":55:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":106:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":109:1)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":108:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":108:13)
#loc101 = loc("/usr/include/stdlib.h":575:1)
#loc102 = loc("/usr/include/stdlib.h":575:41)
#loc103 = loc("/usr/include/time.h":76:1)
#loc104 = loc("/usr/include/time.h":76:38)
#loc105 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc106 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":125:15)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":127:15)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":130:15)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":132:15)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":120:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":135:1)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":121:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":123:27)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":123:22)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":123:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":125:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":126:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":126:69)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":127:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":130:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":131:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":131:68)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":132:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":134:12)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":134:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":66:1)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":104:1)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":73:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":73:33)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":80:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":80:33)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":82:13)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":82:37)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":84:17)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":84:24)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":93:17)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":93:24)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":68:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":68:21)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":69:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":69:34)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":70:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":70:34)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":71:12)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":71:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":72:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":78:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":73:32)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":75:33)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":75:40)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":75:44)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":75:64)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":75:65)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":75:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:37)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:21)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:27)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:28)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:34)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":76:33)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":77:21)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":77:10)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":77:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":79:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":103:5)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":80:32)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":81:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":102:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":83:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":91:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:17)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":90:17)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:26)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:22)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:29)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:33)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:31)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":87:17)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":88:40)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":88:28)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":88:21)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":89:40)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":89:28)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":89:21)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:39)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":86:38)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":92:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":101:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:17)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":98:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:26)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:22)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:29)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:33)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:31)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":96:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":97:21)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":97:26)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":97:27)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":97:38)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":97:31)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:39)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":95:38)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":99:34)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":99:39)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":99:40)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":99:17)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":100:22)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_32.c":100:17)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc11, #loc12])
#loc223 = loc(fused[#loc13, #loc14])
#loc224 = loc(fused[#loc15, #loc16])
#loc225 = loc(fused[#loc17, #loc18])
#loc226 = loc(fused[#loc19, #loc20])
#loc227 = loc(fused[#loc21, #loc22])
#loc228 = loc(fused[#loc23, #loc24])
#loc229 = loc(fused[#loc25, #loc26])
#loc230 = loc(fused[#loc28, #loc27])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc34, #loc35])
#loc233 = loc(fused[#loc33, #loc35])
#loc234 = loc(fused[#loc32, #loc36])
#loc235 = loc(fused[#loc37, #loc36])
#loc236 = loc(fused[#loc38, #loc39])
#loc237 = loc(fused[#loc40, #loc41])
#loc238 = loc(fused[#loc42, #loc39])
#loc239 = loc(fused[#loc48, #loc46])
#loc240 = loc(fused[#loc49, #loc50])
#loc241 = loc(fused[#loc52, #loc53])
#loc242 = loc(fused[#loc54, #loc55])
#loc243 = loc(fused[#loc56, #loc57])
#loc244 = loc(fused[#loc59, #loc58])
#loc245 = loc(fused[#loc60, #loc61])
#loc246 = loc(fused[#loc63, #loc57])
#loc247 = loc(fused[#loc66, #loc64])
#loc248 = loc(fused[#loc70, #loc68])
#loc249 = loc(fused[#loc73, #loc72])
#loc250 = loc(fused[#loc74, #loc75])
#loc251 = loc(fused[#loc76, #loc77])
#loc252 = loc(fused[#loc79, #loc78])
#loc253 = loc(fused[#loc80, #loc81])
#loc254 = loc(fused[#loc83, #loc77])
#loc255 = loc(fused[#loc90, #loc89])
#loc256 = loc(fused[#loc97, #loc98])
#loc257 = loc(fused[#loc99, #loc100])
#loc258 = loc(fused[#loc101, #loc102])
#loc259 = loc(fused[#loc103, #loc104])
#loc260 = loc(fused[#loc105, #loc106])
#loc261 = loc(fused[#loc111, #loc112])
#loc264 = loc(fused[#loc122, #loc123])
#loc265 = loc(fused[#loc126, #loc127])
#loc266 = loc(fused[#loc130, #loc129])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc133, #loc134])
#loc269 = loc(fused[#loc135, #loc136])
#loc270 = loc(fused[#loc137, #loc138])
#loc271 = loc(fused[#loc139, #loc140])
#loc272 = loc(fused[#loc141, #loc142])
#loc273 = loc(fused[#loc143, #loc144])
#loc274 = loc(fused[#loc145, #loc146])
#loc275 = loc(fused[#loc147, #loc148])
#loc276 = loc(fused[#loc150, #loc149])
#loc277 = loc(fused[#loc151, #loc152])
#loc278 = loc(fused[#loc156, #loc157])
#loc279 = loc(fused[#loc155, #loc157])
#loc280 = loc(fused[#loc154, #loc158])
#loc281 = loc(fused[#loc159, #loc158])
#loc282 = loc(fused[#loc160, #loc161])
#loc283 = loc(fused[#loc162, #loc163])
#loc284 = loc(fused[#loc164, #loc161])
#loc285 = loc(fused[#loc170, #loc168])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc174, #loc175])
#loc288 = loc(fused[#loc176, #loc177])
#loc289 = loc(fused[#loc178, #loc179])
#loc290 = loc(fused[#loc181, #loc180])
#loc291 = loc(fused[#loc182, #loc183])
#loc292 = loc(fused[#loc185, #loc179])
#loc293 = loc(fused[#loc188, #loc186])
#loc294 = loc(fused[#loc191, #loc189])
#loc295 = loc(fused[#loc193, #loc192])
#loc296 = loc(fused[#loc194, #loc195])
#loc297 = loc(fused[#loc196, #loc197])
#loc298 = loc(fused[#loc199, #loc198])
#loc299 = loc(fused[#loc200, #loc201])
#loc300 = loc(fused[#loc203, #loc197])
#loc301 = loc(fused[#loc210, #loc209])
