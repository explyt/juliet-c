!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc256)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc257)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc258)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc267)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc267)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc267)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc39)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc42)
            } loc(#loc270)
          } loc(#loc268)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc264)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc45)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc275)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc275)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc275)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc54)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc277)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc59)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc59)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc60)
            } else {
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc61)
            } loc(#loc278)
          } loc(#loc276)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc272)
    cir.return loc(#loc14)
  } loc(#loc261)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc280)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc281)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc66)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc282)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc283)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    cir.return loc(#loc63)
  } loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc73)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc79)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc83)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc290)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc290)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc290)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc92)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc92)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc92)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc92)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc92)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc92)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc92)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc92)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc94)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc292)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc100)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc104)
            } loc(#loc293)
          } loc(#loc291)
        } loc(#loc289)
      } loc(#loc288)
    } loc(#loc287)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc107)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc107)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc111)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc298)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc298)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc298)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc119)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc300)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc122)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc301)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc120)
                cir.yield %15 : !cir.bool loc(#loc120)
              }, false {
                %15 = cir.const #false loc(#loc120)
                cir.yield %15 : !cir.bool loc(#loc120)
              }) : (!cir.bool) -> !cir.bool loc(#loc120)
              cir.yield %14 : !cir.bool loc(#loc120)
            }, false {
              %11 = cir.const #false loc(#loc120)
              cir.yield %11 : !cir.bool loc(#loc120)
            }) : (!cir.bool) -> !cir.bool loc(#loc120)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc128)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc128)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc129)
            } else {
              %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc73)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc73)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc130)
            } loc(#loc302)
          } loc(#loc299)
        } loc(#loc297)
      } loc(#loc296)
    } loc(#loc295)
    cir.return loc(#loc75)
  } loc(#loc284)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc136)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc140)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc140)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc309)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc309)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc309)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc148)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc149)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc149)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc149)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc149)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc149)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc149)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc149)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc149)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc150)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc151)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc311)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc156)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc157)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc160)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc161)
            } loc(#loc312)
          } loc(#loc310)
        } loc(#loc308)
      } loc(#loc307)
    } loc(#loc306)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc164)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc164)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc317)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc317)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc317)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc173)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc319)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc176)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc320)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc174)
                cir.yield %15 : !cir.bool loc(#loc174)
              }, false {
                %15 = cir.const #false loc(#loc174)
                cir.yield %15 : !cir.bool loc(#loc174)
              }) : (!cir.bool) -> !cir.bool loc(#loc174)
              cir.yield %14 : !cir.bool loc(#loc174)
            }, false {
              %11 = cir.const #false loc(#loc174)
              cir.yield %11 : !cir.bool loc(#loc174)
            }) : (!cir.bool) -> !cir.bool loc(#loc174)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc182)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc182)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc182)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc183)
            } else {
              %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc184)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc184)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc185)
            } loc(#loc321)
          } loc(#loc318)
        } loc(#loc316)
      } loc(#loc315)
    } loc(#loc314)
    cir.return loc(#loc132)
  } loc(#loc303)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc191)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc195)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc195)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc200)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc201)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
      } loc(#loc326)
    } loc(#loc325)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc205)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc205)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc331)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc331)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc331)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc214)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc333)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc219)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc219)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc220)
            } else {
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc221)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc221)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc222)
            } loc(#loc334)
          } loc(#loc332)
        } loc(#loc330)
      } loc(#loc329)
    } loc(#loc328)
    cir.return loc(#loc187)
  } loc(#loc322)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc228)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc232)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc232)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc234)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
      } loc(#loc339)
    } loc(#loc338)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc238)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc238)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc344)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc344)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc344)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc247)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc346)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc252)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc252)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc253)
            } else {
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc254)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc254)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc255)
            } loc(#loc347)
          } loc(#loc345)
        } loc(#loc343)
      } loc(#loc342)
    } loc(#loc341)
    cir.return loc(#loc224)
  } loc(#loc335)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":57:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":61:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":28:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":28:12)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":44:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":29:8)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":30:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":31:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":43:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":32:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":32:49)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":34:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":42:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":34:23)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":34:36)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":34:53)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":34:17)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":34:63)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":35:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":38:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":40:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":37:29)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":37:24)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":37:17)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":37:40)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":41:17)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":45:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":60:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":45:8)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":46:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":47:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":59:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":48:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":48:34)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":51:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":58:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":51:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":51:25)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":52:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":54:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":56:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":53:37)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":53:30)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":53:17)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":57:17)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":215:1)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":221:1)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":217:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":217:14)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":218:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":218:14)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":219:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":219:14)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":220:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":220:14)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":92:19)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":105:27)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":68:1)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":109:1)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":70:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":70:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":72:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":72:12)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":72:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":73:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":88:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":73:8)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":74:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":75:9)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":87:9)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":76:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":76:49)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":78:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":86:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":78:23)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":78:36)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":78:53)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":78:17)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":78:63)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":79:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":82:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":84:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":81:29)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":81:24)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":81:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":81:40)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":85:27)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":85:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":89:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":108:5)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":89:8)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":90:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":93:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":95:5)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":92:9)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":96:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":107:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":97:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":97:34)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":106:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:17)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:25)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:27)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:30)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:38)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":99:40)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":100:13)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":102:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":104:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":101:37)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":101:30)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":101:17)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":105:17)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":112:1)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":148:1)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":114:5)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":114:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":116:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":116:12)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":116:5)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":117:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":132:5)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":117:8)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":118:5)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":119:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":131:9)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":120:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":120:49)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":122:13)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":130:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":122:23)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":122:36)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":122:53)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":122:17)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":122:63)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":123:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":126:13)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":128:13)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":125:29)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":125:24)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":125:17)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":125:40)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":129:27)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":129:17)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":133:5)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":147:5)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":133:8)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":134:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":135:9)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":146:9)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":136:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":136:34)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:13)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":145:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:17)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:25)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:27)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:30)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:38)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":138:40)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":139:13)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":141:13)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":143:13)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":140:37)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":140:30)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":140:17)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":144:27)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":144:17)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":151:1)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":183:1)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":153:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":153:9)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":155:13)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":155:12)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":155:5)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":156:5)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":166:5)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":156:8)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":157:5)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":160:5)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":162:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":159:19)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":159:9)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":165:16)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":165:9)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":167:5)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":182:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":167:8)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":168:5)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":169:9)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":181:9)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":170:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":170:34)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":173:13)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":180:13)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":173:17)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":173:25)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":174:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":176:13)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":178:13)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":175:37)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":175:30)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":175:17)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":179:27)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":179:17)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":186:1)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":213:1)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":188:5)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":188:9)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":190:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":190:12)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":190:5)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":191:5)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":196:5)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":191:8)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":192:5)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":195:16)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":195:9)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":197:5)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":212:5)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":197:8)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":198:5)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":199:9)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":211:9)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":200:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":200:34)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":203:13)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":210:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":203:17)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":203:25)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":204:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":206:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":208:13)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":205:37)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":205:30)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":205:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":209:27)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_fgets_02.c":209:17)
#loc256 = loc(fused[#loc1, #loc2])
#loc257 = loc(fused[#loc3, #loc4])
#loc258 = loc(fused[#loc5, #loc6])
#loc259 = loc(fused[#loc7, #loc8])
#loc260 = loc(fused[#loc10, #loc11])
#loc261 = loc(fused[#loc13, #loc14])
#loc262 = loc(fused[#loc15, #loc16])
#loc263 = loc(fused[#loc19, #loc17])
#loc264 = loc(fused[#loc20, #loc21])
#loc265 = loc(fused[#loc23, #loc21])
#loc266 = loc(fused[#loc24, #loc25])
#loc267 = loc(fused[#loc26, #loc27])
#loc268 = loc(fused[#loc28, #loc29])
#loc269 = loc(fused[#loc33, #loc34])
#loc270 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc271 = loc(fused[#loc40, #loc41])
#loc272 = loc(fused[#loc43, #loc44])
#loc273 = loc(fused[#loc46, #loc44])
#loc274 = loc(fused[#loc47, #loc48])
#loc275 = loc(fused[#loc49, #loc50])
#loc276 = loc(fused[#loc51, #loc52])
#loc277 = loc(fused[#loc53, #loc54])
#loc278 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc279 = loc(fused[#loc62, #loc63])
#loc280 = loc(fused[#loc64, #loc65])
#loc281 = loc(fused[#loc66, #loc67])
#loc282 = loc(fused[#loc68, #loc69])
#loc283 = loc(fused[#loc70, #loc71])
#loc284 = loc(fused[#loc74, #loc75])
#loc285 = loc(fused[#loc76, #loc77])
#loc286 = loc(fused[#loc80, #loc78])
#loc287 = loc(fused[#loc81, #loc82])
#loc288 = loc(fused[#loc84, #loc82])
#loc289 = loc(fused[#loc85, #loc86])
#loc290 = loc(fused[#loc87, #loc88])
#loc291 = loc(fused[#loc89, #loc90])
#loc292 = loc(fused[#loc94, #loc95])
#loc293 = loc(fused[#loc96, #loc97, #loc98, #loc90])
#loc294 = loc(fused[#loc101, #loc102])
#loc295 = loc(fused[#loc105, #loc106])
#loc296 = loc(fused[#loc108, #loc109, #loc110, #loc106])
#loc297 = loc(fused[#loc112, #loc113])
#loc298 = loc(fused[#loc114, #loc115])
#loc299 = loc(fused[#loc116, #loc117])
#loc300 = loc(fused[#loc118, #loc119])
#loc301 = loc(fused[#loc121, #loc123])
#loc302 = loc(fused[#loc124, #loc125, #loc126, #loc117])
#loc303 = loc(fused[#loc131, #loc132])
#loc304 = loc(fused[#loc133, #loc134])
#loc305 = loc(fused[#loc137, #loc135])
#loc306 = loc(fused[#loc138, #loc139])
#loc307 = loc(fused[#loc141, #loc139])
#loc308 = loc(fused[#loc142, #loc143])
#loc309 = loc(fused[#loc144, #loc145])
#loc310 = loc(fused[#loc146, #loc147])
#loc311 = loc(fused[#loc151, #loc152])
#loc312 = loc(fused[#loc153, #loc154, #loc155, #loc147])
#loc313 = loc(fused[#loc158, #loc159])
#loc314 = loc(fused[#loc162, #loc163])
#loc315 = loc(fused[#loc165, #loc163])
#loc316 = loc(fused[#loc166, #loc167])
#loc317 = loc(fused[#loc168, #loc169])
#loc318 = loc(fused[#loc170, #loc171])
#loc319 = loc(fused[#loc172, #loc173])
#loc320 = loc(fused[#loc175, #loc177])
#loc321 = loc(fused[#loc178, #loc179, #loc180, #loc171])
#loc322 = loc(fused[#loc186, #loc187])
#loc323 = loc(fused[#loc188, #loc189])
#loc324 = loc(fused[#loc192, #loc190])
#loc325 = loc(fused[#loc193, #loc194])
#loc326 = loc(fused[#loc196, #loc197, #loc198, #loc194])
#loc327 = loc(fused[#loc202, #loc201])
#loc328 = loc(fused[#loc203, #loc204])
#loc329 = loc(fused[#loc206, #loc204])
#loc330 = loc(fused[#loc207, #loc208])
#loc331 = loc(fused[#loc209, #loc210])
#loc332 = loc(fused[#loc211, #loc212])
#loc333 = loc(fused[#loc213, #loc214])
#loc334 = loc(fused[#loc215, #loc216, #loc217, #loc212])
#loc335 = loc(fused[#loc223, #loc224])
#loc336 = loc(fused[#loc225, #loc226])
#loc337 = loc(fused[#loc229, #loc227])
#loc338 = loc(fused[#loc230, #loc231])
#loc339 = loc(fused[#loc233, #loc231])
#loc340 = loc(fused[#loc235, #loc234])
#loc341 = loc(fused[#loc236, #loc237])
#loc342 = loc(fused[#loc239, #loc237])
#loc343 = loc(fused[#loc240, #loc241])
#loc344 = loc(fused[#loc242, #loc243])
#loc345 = loc(fused[#loc244, #loc245])
#loc346 = loc(fused[#loc246, #loc247])
#loc347 = loc(fused[#loc248, #loc249, #loc250, #loc245])
