!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc15)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc152)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc19)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc21)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %24 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %25 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %26 = cir.cmp(eq, %24, %25) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %26 ^bb2, ^bb3 loc(#loc156)
  ^bb2:  // pred: ^bb1
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %28 = cir.const #cir.int<8> : !s32i loc(#loc30)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc30)
    %30 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %30, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %33 = cir.const #cir.int<67> : !s32i loc(#loc36)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc37)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc37)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc159)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc41)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc42)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %45 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %48 = cir.call @strcpy(%46, %47) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc148)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc64)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc64)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc64)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc64)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc64)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc66)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc67)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc67)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc71)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc73)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc75)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %24 = cir.const #cir.int<5> : !s32i loc(#loc78)
    %25 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %26 = cir.cmp(ne, %24, %25) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %26 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb4 loc(#loc81)
  ^bb3:  // pred: ^bb1
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.store %29, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc77)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc89)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc90)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc90)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc94)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc95)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc97)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %44 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc98)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    %47 = cir.call @strcpy(%45, %46) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc58)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc180)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc110)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc110)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc110)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc110)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc110)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc112)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc113)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc113)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc181)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc117)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc119)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %24 = cir.const #cir.int<5> : !s32i loc(#loc124)
    %25 = cir.const #cir.int<5> : !s32i loc(#loc125)
    %26 = cir.cmp(eq, %24, %25) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %26 ^bb2, ^bb3 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.store %27, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb3 loc(#loc123)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc132)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc133)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc133)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc133)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc188)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc137)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc138)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    %42 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc141)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    %45 = cir.call @strcpy(%43, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc104)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":27:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":46:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":39:9)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":39:24)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":29:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":29:12)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":30:5)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":30:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":31:12)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":31:24)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":31:29)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":31:33)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":31:5)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":31:34)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":32:25)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":32:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":32:16)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":32:20)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":32:21)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":33:5)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":37:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":33:8)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":33:27)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":34:5)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":36:16)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":36:29)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":36:27)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":36:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":38:5)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":45:5)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":40:16)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":40:24)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":40:29)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":40:33)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":40:9)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":40:34)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":41:25)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":41:16)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":41:20)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":41:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":43:9)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":43:16)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":43:22)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":44:19)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":44:9)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":101:1)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":105:1)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":103:5)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":103:14)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":104:5)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":104:14)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":62:19)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":53:1)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":77:1)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":70:9)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":70:24)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":55:5)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":55:12)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":56:5)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":56:33)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":57:12)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":57:24)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":57:29)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":57:33)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":57:5)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":57:34)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":58:25)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":58:5)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":58:16)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":58:20)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":58:21)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":59:5)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":68:5)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":59:8)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":59:27)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":60:5)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":63:5)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":65:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":62:9)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":67:16)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":67:9)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":69:5)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":76:5)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":71:16)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":71:24)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":71:29)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":71:33)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":71:9)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":71:34)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":72:25)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":72:16)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":72:20)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":72:9)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":74:9)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":74:16)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":74:22)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":75:19)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":75:9)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":80:1)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":99:1)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":92:9)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":92:24)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":82:5)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":82:12)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":83:5)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":83:33)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":84:12)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":84:24)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":84:29)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":84:33)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":84:5)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":84:34)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":85:25)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":85:5)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":85:16)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":85:20)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":85:21)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":86:5)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":90:5)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":86:8)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":86:27)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":87:5)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":89:16)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":89:9)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":91:5)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":98:5)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":93:16)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":93:24)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":93:29)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":93:33)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":93:9)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":93:34)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":94:25)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":94:16)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":94:20)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":94:9)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":96:9)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":96:16)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":96:22)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":97:19)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_06.c":97:9)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc17, #loc18])
#loc153 = loc(fused[#loc20, #loc19])
#loc154 = loc(fused[#loc24, #loc25])
#loc155 = loc(fused[#loc26, #loc27])
#loc156 = loc(fused[#loc28, #loc25])
#loc157 = loc(fused[#loc32, #loc30])
#loc158 = loc(fused[#loc33, #loc34])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc44, #loc41])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc54, #loc55])
#loc164 = loc(fused[#loc57, #loc58])
#loc165 = loc(fused[#loc59, #loc60])
#loc166 = loc(fused[#loc61, #loc62])
#loc167 = loc(fused[#loc63, #loc64])
#loc168 = loc(fused[#loc69, #loc70])
#loc169 = loc(fused[#loc72, #loc71])
#loc170 = loc(fused[#loc76, #loc77])
#loc171 = loc(fused[#loc78, #loc79])
#loc172 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc173 = loc(fused[#loc85, #loc84])
#loc174 = loc(fused[#loc86, #loc87])
#loc175 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc97, #loc94])
#loc177 = loc(fused[#loc103, #loc104])
#loc178 = loc(fused[#loc105, #loc106])
#loc179 = loc(fused[#loc107, #loc108])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc118, #loc117])
#loc183 = loc(fused[#loc122, #loc123])
#loc184 = loc(fused[#loc124, #loc125])
#loc185 = loc(fused[#loc126, #loc123])
#loc186 = loc(fused[#loc128, #loc127])
#loc187 = loc(fused[#loc129, #loc130])
#loc188 = loc(fused[#loc135, #loc136])
#loc189 = loc(fused[#loc140, #loc137])
