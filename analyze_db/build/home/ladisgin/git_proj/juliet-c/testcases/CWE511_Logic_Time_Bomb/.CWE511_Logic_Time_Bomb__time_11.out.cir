!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc42 = loc("CWE511_Logic_Time_Bomb__time_11.c":105:10)
#loc43 = loc("CWE511_Logic_Time_Bomb__time_11.c":105:14)
#loc44 = loc("CWE511_Logic_Time_Bomb__time_11.c":105:20)
#loc45 = loc("CWE511_Logic_Time_Bomb__time_11.c":105:32)
#loc122 = loc(fused[#loc42, #loc43])
#loc123 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__time_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc104)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc105)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"important_file.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE511_Logic_Time_Bomb__time_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["currentTime"] {alignment = 8 : i64} loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc110)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc110)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc111)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %5 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc19)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc22)
    %7 = cir.const #cir.int<1199163600> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc23)
    %9 = cir.cmp(gt, %6, %8) : !s64i, !cir.bool loc(#loc114)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc7)
    %12 = cir.call @unlink(%11) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc25)
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc13)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc107)
  cir.func no_proto @CWE511_Logic_Time_Bomb__time_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc116)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc49)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE511_Logic_Time_Bomb__time_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE511_Logic_Time_Bomb__time_11_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE511_Logic_Time_Bomb__time_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call @CWE511_Logic_Time_Bomb__time_11_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.return %17 : !s32i loc(#loc126)
  } loc(#loc121)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Happy New Year!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["currentTime"] {alignment = 8 : i64} loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc131)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc131)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc70)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb10 loc(#loc73)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // pred: ^bb3
    %7 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    cir.br ^bb5 loc(#loc134)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc81)
    %9 = cir.const #cir.int<1199163600> : !s32i loc(#loc82)
    %10 = cir.cast(integral, %9 : !s32i), !s64i loc(#loc82)
    %11 = cir.cmp(gt, %8, %10) : !s64i, !cir.bool loc(#loc135)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc136)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc77)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc69)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc65)
  } loc(#loc128)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["currentTime"] {alignment = 8 : i64} loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc140)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc140)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc91)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc141)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc142)
  ^bb3:  // pred: ^bb2
    %5 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc99)
    %7 = cir.const #cir.int<1199163600> : !s32i loc(#loc100)
    %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc100)
    %9 = cir.cmp(gt, %6, %8) : !s64i, !cir.bool loc(#loc144)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc145)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc102)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc95)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc90)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc90)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc86)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__time_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/time.h":76:1)
#loc4 = loc("/usr/include/time.h":76:38)
#loc5 = loc("/usr/include/unistd.h":858:1)
#loc6 = loc("/usr/include/unistd.h":858:48)
#loc7 = loc("CWE511_Logic_Time_Bomb__time_11.c":41:24)
#loc8 = loc("CWE511_Logic_Time_Bomb__time_11.c":31:1)
#loc9 = loc("CWE511_Logic_Time_Bomb__time_11.c":45:1)
#loc10 = loc("CWE511_Logic_Time_Bomb__time_11.c":36:13)
#loc11 = loc("CWE511_Logic_Time_Bomb__time_11.c":36:20)
#loc12 = loc("CWE511_Logic_Time_Bomb__time_11.c":33:5)
#loc13 = loc("CWE511_Logic_Time_Bomb__time_11.c":44:5)
#loc14 = loc("CWE511_Logic_Time_Bomb__time_11.c":33:8)
#loc15 = loc("CWE511_Logic_Time_Bomb__time_11.c":33:26)
#loc16 = loc("CWE511_Logic_Time_Bomb__time_11.c":34:5)
#loc17 = loc("CWE511_Logic_Time_Bomb__time_11.c":35:9)
#loc18 = loc("CWE511_Logic_Time_Bomb__time_11.c":43:9)
#loc19 = loc("CWE511_Logic_Time_Bomb__time_11.c":38:13)
#loc20 = loc("CWE511_Logic_Time_Bomb__time_11.c":39:13)
#loc21 = loc("CWE511_Logic_Time_Bomb__time_11.c":42:13)
#loc22 = loc("CWE511_Logic_Time_Bomb__time_11.c":39:17)
#loc23 = loc("CWE511_Logic_Time_Bomb__time_11.c":39:31)
#loc24 = loc("CWE511_Logic_Time_Bomb__time_11.c":40:13)
#loc25 = loc("CWE511_Logic_Time_Bomb__time_11.c":41:17)
#loc26 = loc("CWE511_Logic_Time_Bomb__time_11.c":90:1)
#loc27 = loc("CWE511_Logic_Time_Bomb__time_11.c":94:1)
#loc28 = loc("CWE511_Logic_Time_Bomb__time_11.c":92:5)
#loc29 = loc("CWE511_Logic_Time_Bomb__time_11.c":92:11)
#loc30 = loc("CWE511_Logic_Time_Bomb__time_11.c":93:5)
#loc31 = loc("CWE511_Logic_Time_Bomb__time_11.c":93:11)
#loc32 = loc("/usr/include/stdlib.h":575:1)
#loc33 = loc("/usr/include/stdlib.h":575:41)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE511_Logic_Time_Bomb__time_11.c":110:15)
#loc37 = loc("CWE511_Logic_Time_Bomb__time_11.c":112:15)
#loc38 = loc("CWE511_Logic_Time_Bomb__time_11.c":115:15)
#loc39 = loc("CWE511_Logic_Time_Bomb__time_11.c":117:15)
#loc40 = loc("CWE511_Logic_Time_Bomb__time_11.c":105:1)
#loc41 = loc("CWE511_Logic_Time_Bomb__time_11.c":120:1)
#loc46 = loc("CWE511_Logic_Time_Bomb__time_11.c":106:1)
#loc47 = loc("CWE511_Logic_Time_Bomb__time_11.c":108:27)
#loc48 = loc("CWE511_Logic_Time_Bomb__time_11.c":108:22)
#loc49 = loc("CWE511_Logic_Time_Bomb__time_11.c":108:5)
#loc50 = loc("CWE511_Logic_Time_Bomb__time_11.c":110:5)
#loc51 = loc("CWE511_Logic_Time_Bomb__time_11.c":111:5)
#loc52 = loc("CWE511_Logic_Time_Bomb__time_11.c":111:42)
#loc53 = loc("CWE511_Logic_Time_Bomb__time_11.c":112:5)
#loc54 = loc("CWE511_Logic_Time_Bomb__time_11.c":115:5)
#loc55 = loc("CWE511_Logic_Time_Bomb__time_11.c":116:5)
#loc56 = loc("CWE511_Logic_Time_Bomb__time_11.c":116:41)
#loc57 = loc("CWE511_Logic_Time_Bomb__time_11.c":117:5)
#loc58 = loc("CWE511_Logic_Time_Bomb__time_11.c":119:12)
#loc59 = loc("CWE511_Logic_Time_Bomb__time_11.c":119:5)
#loc60 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc61 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc62 = loc("CWE511_Logic_Time_Bomb__time_11.c":57:19)
#loc63 = loc("CWE511_Logic_Time_Bomb__time_11.c":67:27)
#loc64 = loc("CWE511_Logic_Time_Bomb__time_11.c":52:1)
#loc65 = loc("CWE511_Logic_Time_Bomb__time_11.c":71:1)
#loc66 = loc("CWE511_Logic_Time_Bomb__time_11.c":62:13)
#loc67 = loc("CWE511_Logic_Time_Bomb__time_11.c":62:20)
#loc68 = loc("CWE511_Logic_Time_Bomb__time_11.c":54:5)
#loc69 = loc("CWE511_Logic_Time_Bomb__time_11.c":70:5)
#loc70 = loc("CWE511_Logic_Time_Bomb__time_11.c":54:8)
#loc71 = loc("CWE511_Logic_Time_Bomb__time_11.c":54:27)
#loc72 = loc("CWE511_Logic_Time_Bomb__time_11.c":55:5)
#loc73 = loc("CWE511_Logic_Time_Bomb__time_11.c":58:5)
#loc74 = loc("CWE511_Logic_Time_Bomb__time_11.c":60:5)
#loc75 = loc("CWE511_Logic_Time_Bomb__time_11.c":57:9)
#loc76 = loc("CWE511_Logic_Time_Bomb__time_11.c":61:9)
#loc77 = loc("CWE511_Logic_Time_Bomb__time_11.c":69:9)
#loc78 = loc("CWE511_Logic_Time_Bomb__time_11.c":64:13)
#loc79 = loc("CWE511_Logic_Time_Bomb__time_11.c":65:13)
#loc80 = loc("CWE511_Logic_Time_Bomb__time_11.c":68:13)
#loc81 = loc("CWE511_Logic_Time_Bomb__time_11.c":65:17)
#loc82 = loc("CWE511_Logic_Time_Bomb__time_11.c":65:31)
#loc83 = loc("CWE511_Logic_Time_Bomb__time_11.c":66:13)
#loc84 = loc("CWE511_Logic_Time_Bomb__time_11.c":67:17)
#loc85 = loc("CWE511_Logic_Time_Bomb__time_11.c":74:1)
#loc86 = loc("CWE511_Logic_Time_Bomb__time_11.c":88:1)
#loc87 = loc("CWE511_Logic_Time_Bomb__time_11.c":79:13)
#loc88 = loc("CWE511_Logic_Time_Bomb__time_11.c":79:20)
#loc89 = loc("CWE511_Logic_Time_Bomb__time_11.c":76:5)
#loc90 = loc("CWE511_Logic_Time_Bomb__time_11.c":87:5)
#loc91 = loc("CWE511_Logic_Time_Bomb__time_11.c":76:8)
#loc92 = loc("CWE511_Logic_Time_Bomb__time_11.c":76:26)
#loc93 = loc("CWE511_Logic_Time_Bomb__time_11.c":77:5)
#loc94 = loc("CWE511_Logic_Time_Bomb__time_11.c":78:9)
#loc95 = loc("CWE511_Logic_Time_Bomb__time_11.c":86:9)
#loc96 = loc("CWE511_Logic_Time_Bomb__time_11.c":81:13)
#loc97 = loc("CWE511_Logic_Time_Bomb__time_11.c":82:13)
#loc98 = loc("CWE511_Logic_Time_Bomb__time_11.c":85:13)
#loc99 = loc("CWE511_Logic_Time_Bomb__time_11.c":82:17)
#loc100 = loc("CWE511_Logic_Time_Bomb__time_11.c":82:31)
#loc101 = loc("CWE511_Logic_Time_Bomb__time_11.c":83:13)
#loc102 = loc("CWE511_Logic_Time_Bomb__time_11.c":84:27)
#loc103 = loc("CWE511_Logic_Time_Bomb__time_11.c":84:17)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc8, #loc9])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc12, #loc13])
#loc110 = loc(fused[#loc14, #loc15])
#loc111 = loc(fused[#loc16, #loc13])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc20, #loc21])
#loc114 = loc(fused[#loc22, #loc23])
#loc115 = loc(fused[#loc24, #loc21])
#loc116 = loc(fused[#loc26, #loc27])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc30, #loc31])
#loc119 = loc(fused[#loc32, #loc33])
#loc120 = loc(fused[#loc34, #loc35])
#loc121 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc51, #loc52])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc59, #loc58])
#loc127 = loc(fused[#loc60, #loc61])
#loc128 = loc(fused[#loc64, #loc65])
#loc129 = loc(fused[#loc66, #loc67])
#loc130 = loc(fused[#loc68, #loc69])
#loc131 = loc(fused[#loc70, #loc71])
#loc132 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc133 = loc(fused[#loc76, #loc77])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc83, #loc80])
#loc137 = loc(fused[#loc85, #loc86])
#loc138 = loc(fused[#loc87, #loc88])
#loc139 = loc(fused[#loc89, #loc90])
#loc140 = loc(fused[#loc91, #loc92])
#loc141 = loc(fused[#loc93, #loc90])
#loc142 = loc(fused[#loc94, #loc95])
#loc143 = loc(fused[#loc97, #loc98])
#loc144 = loc(fused[#loc99, #loc100])
#loc145 = loc(fused[#loc101, #loc98])
