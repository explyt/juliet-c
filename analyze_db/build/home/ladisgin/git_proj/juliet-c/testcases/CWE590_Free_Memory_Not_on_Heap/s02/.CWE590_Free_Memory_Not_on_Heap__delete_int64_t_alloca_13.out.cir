!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":110:10)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":110:14)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":110:20)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":110:32)
#loc163 = loc(fused[#loc106, #loc107])
#loc164 = loc(fused[#loc108, #loc109])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc122)
  cir.func private @printLongLongLine(!s64i) loc(#loc123)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc124)
  cir.func @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_133badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc127)
    cir.scope {
      %6 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc122)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc129)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc21)
          %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc21)
          cir.store %14, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc132)
          %15 = cir.const #cir.int<5> : !s64i loc(#loc22)
          %16 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
          cir.store %15, %16 : !s64i, !cir.ptr<!s64i> loc(#loc133)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
          cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc134)
        } loc(#loc131)
      } loc(#loc130)
    } loc(#loc128)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc28)
    cir.call @printLongLongLine(%3) : (!s64i) -> () loc(#loc29)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc30)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.return loc(#loc8)
  } loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc135)
  cir.func internal private @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc39)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc138)
    cir.scope {
      %6 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc122)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc140)
      cir.if %9 {
        %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc143)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc144)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc143)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc144)
          cir.store %13, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc143)
          %14 = cir.const #cir.int<5> : !s64i loc(#loc54)
          %15 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
          cir.store %14, %15 : !s64i, !cir.ptr<!s64i> loc(#loc145)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc57)
          cir.store %16, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
        } loc(#loc142)
      } loc(#loc141)
    } loc(#loc139)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc60)
    cir.call @printLongLongLine(%3) : (!s64i) -> () loc(#loc61)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc62)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.return loc(#loc36)
  } loc(#loc136)
  cir.func internal private @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    cir.scope {
      %6 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc122)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc151)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc154)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc155)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc154)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc155)
          cir.store %13, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc154)
          %14 = cir.const #cir.int<5> : !s64i loc(#loc80)
          %15 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
          cir.store %14, %15 : !s64i, !cir.ptr<!s64i> loc(#loc156)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
          cir.store %16, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc157)
        } loc(#loc153)
      } loc(#loc152)
    } loc(#loc150)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc85)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc86)
    cir.call @printLongLongLine(%3) : (!s64i) -> () loc(#loc87)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc88)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.return loc(#loc65)
  } loc(#loc147)
  cir.func @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_134goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13L8goodG2B1Ev() : () -> () loc(#loc92)
    cir.call @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13L8goodG2B2Ev() : () -> () loc(#loc93)
    cir.return loc(#loc91)
  } loc(#loc158)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc103)
  cir.func @main(%arg0: !s32i loc(fused[#loc106, #loc107]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc108, #loc109])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc112)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc112)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc113)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.call @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_134goodEv() : () -> () loc(#loc115)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc101)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc102)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.call @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_133badEv() : () -> () loc(#loc118)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc103)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %15 : !s32i loc(#loc165)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":26:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":42:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":28:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":28:15)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":29:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":29:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":30:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":38:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":30:8)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":30:27)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":31:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":32:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":37:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":34:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":34:47)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":35:27)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":35:14)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":35:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":36:20)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":36:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":39:24)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":39:23)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":39:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":41:12)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":26:6)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":56:19)
#loc33 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc34 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":49:1)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":70:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":51:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":51:15)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":52:12)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":52:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":53:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":66:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":53:8)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":53:27)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":54:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":57:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":59:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":56:9)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":60:9)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":65:9)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":62:13)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":62:40)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":62:36)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":63:27)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":63:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":63:13)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":64:20)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":64:13)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":67:24)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":67:23)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":67:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":69:12)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":49:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":73:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":89:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":75:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":75:15)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":76:12)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":76:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":77:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":85:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":77:8)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":77:27)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":78:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":79:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":84:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":81:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":81:40)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":81:36)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":82:27)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":82:14)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":82:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":83:20)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":83:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":86:24)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":86:23)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":86:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":88:12)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":73:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":91:1)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":95:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":93:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":94:5)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc99 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":115:15)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":117:15)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":120:15)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":122:15)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":110:1)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":125:1)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":111:1)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":113:27)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":113:22)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":113:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":115:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":116:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":117:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":120:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":121:5)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":122:5)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":124:12)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int64_t_alloca_13.cpp":124:5)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc7, #loc8])
#loc126 = loc(fused[#loc9, #loc10])
#loc127 = loc(fused[#loc12, #loc11])
#loc128 = loc(fused[#loc13, #loc14])
#loc129 = loc(fused[#loc15, #loc16])
#loc130 = loc(fused[#loc17, #loc14])
#loc131 = loc(fused[#loc18, #loc19])
#loc132 = loc(fused[#loc20, #loc21])
#loc133 = loc(fused[#loc24, #loc22])
#loc134 = loc(fused[#loc26, #loc25])
#loc135 = loc(fused[#loc33, #loc34])
#loc136 = loc(fused[#loc35, #loc36])
#loc137 = loc(fused[#loc37, #loc38])
#loc138 = loc(fused[#loc40, #loc39])
#loc139 = loc(fused[#loc41, #loc42])
#loc140 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc142 = loc(fused[#loc49, #loc50])
#loc143 = loc(fused[#loc51, #loc52])
#loc144 = loc(fused[#loc53, #loc52])
#loc145 = loc(fused[#loc56, #loc54])
#loc146 = loc(fused[#loc58, #loc57])
#loc147 = loc(fused[#loc64, #loc65])
#loc148 = loc(fused[#loc66, #loc67])
#loc149 = loc(fused[#loc69, #loc68])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc72, #loc73])
#loc152 = loc(fused[#loc74, #loc71])
#loc153 = loc(fused[#loc75, #loc76])
#loc154 = loc(fused[#loc77, #loc78])
#loc155 = loc(fused[#loc79, #loc78])
#loc156 = loc(fused[#loc82, #loc80])
#loc157 = loc(fused[#loc84, #loc83])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc94, #loc95])
#loc160 = loc(fused[#loc96, #loc97])
#loc161 = loc(fused[#loc98, #loc99])
#loc162 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc121, #loc120])
