clang: warning: argument unused during compilation: '-c' [-Wunused-command-line-argument]
warning: unknown warning option '-Wno-terminate' [-Wunknown-warning-option]
loc(fused["CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp":122:84, "CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp":122:151]): error: operand #0 does not dominate this use
loc(fused["CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp":139:93, "CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp":139:164]): error: operand #0 does not dominate this use
loc(fused["CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp":218:93, "CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp":218:164]): error: operand #0 does not dominate this use
fatal error: error in backend: CIR codegen: module verification error before running CIR passes
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /workspaces/clangir/install/bin/clang -S -Xclang -emit-cir-flat -std=c++11 -Wno-terminate -std=c++11 -I ../../../testcasesupport -c CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.cpp -o /workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/.CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_listen_socket_81a.o.cir
1.	<eof> parser at end of file
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang     0x000056464e0fbb68 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
1  clang     0x000056464e0f973e llvm::sys::RunSignalHandlers() + 238
2  clang     0x000056464e06a757
3  clang     0x000056464e06a6ef llvm::CrashRecoveryContext::HandleExit(int) + 47
4  clang     0x000056464e0f6487 llvm::sys::Process::Exit(int, bool) + 39
5  clang     0x000056464cecdfd6
6  clang     0x000056464e070bb9 llvm::report_fatal_error(llvm::Twine const&, bool) + 265
7  clang     0x000056464e070aa6
8  clang     0x000056464f3a517a
9  clang     0x00005646514a6a09 clang::ParseAST(clang::Sema&, bool, bool) + 617
10 clang     0x000056464ebc1d36 clang::FrontendAction::Execute() + 38
11 clang     0x000056464eb2d3ad clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1149
12 clang     0x000056464ecaaedf clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 815
13 clang     0x000056464cecda7a cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 6074
14 clang     0x000056464ceca06d
15 clang     0x000056464e974339
16 clang     0x000056464e06a686 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 150
17 clang     0x000056464e973892 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 242
18 clang     0x000056464e92fc27 clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 455
19 clang     0x000056464e92ff17 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 135
20 clang     0x000056464e94f928 clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 904
21 clang     0x000056464cec96ba clang_main(int, char**, llvm::ToolContext const&) + 6090
22 clang     0x000056464ced9147 main + 87
23 libc.so.6 0x00007f2d7642a1ca
24 libc.so.6 0x00007f2d7642a28b __libc_start_main + 139
25 clang     0x000056464cec7aa5 _start + 37
clang: error: clang frontend command failed with exit code 70 (use -v to see invocation)
clang version 21.0.0git (git@github.com:llvm/clangir.git 4e7a2236d38507e994cbe5b79c888cf86427e7db)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /workspaces/clangir/install/bin
Build config: +assertions
clang: note: diagnostic msg: Error generating preprocessed source(s).
