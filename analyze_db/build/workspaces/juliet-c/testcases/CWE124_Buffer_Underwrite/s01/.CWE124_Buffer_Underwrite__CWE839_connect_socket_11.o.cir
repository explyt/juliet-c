!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc555)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc556)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc557)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc558)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc559)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc560)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc561)
  cir.func private @close(!s32i) -> !s32i loc(#loc562)
  cir.func private @printIntLine(!s32i) loc(#loc563)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc564)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc566)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc569)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc569)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc32)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc32)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc572)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc573)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc574)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc575)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc42)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc574)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc49)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc50)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc51)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc578)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc58)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc580)
                  cir.if %58 {
                    cir.break loc(#loc60)
                  } loc(#loc581)
                } loc(#loc579)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc582)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc63)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc583)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc584)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc68)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc68)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc585)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc586)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc76)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc587)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc589)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc590)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc590)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc89)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc89)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc591)
                  cir.if %62 {
                    cir.break loc(#loc91)
                  } loc(#loc592)
                } loc(#loc588)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc94)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc94)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc94)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc94)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc94)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc94)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc94)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc95)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc593)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc97)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc594)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc103)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc103)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc596)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc104)
                    cir.yield %60 : !cir.bool loc(#loc104)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc106)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc597)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc104)
                      cir.yield %64 : !cir.bool loc(#loc104)
                    }, false {
                      %64 = cir.const #false loc(#loc104)
                      cir.yield %64 : !cir.bool loc(#loc104)
                    }) : (!cir.bool) -> !cir.bool loc(#loc104)
                    cir.yield %63 : !cir.bool loc(#loc104)
                  }) : (!cir.bool) -> !cir.bool loc(#loc104)
                  cir.if %59 {
                    cir.break loc(#loc108)
                  } loc(#loc598)
                } loc(#loc595)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc109)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc109)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc111)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc599)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc113)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc600)
              } loc(#loc577)
              cir.yield loc(#loc46)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc116)
              cir.condition(%14) loc(#loc116)
            } loc(#loc576)
          } loc(#loc576)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc120)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc602)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc123)
            } loc(#loc603)
          } loc(#loc601)
        } loc(#loc571)
      } loc(#loc570)
    } loc(#loc568)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc605)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc605)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc126)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc126)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc608)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc609)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc609)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc609)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc138)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc611)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc142)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc144)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc144)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc613)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc147)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc615)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc150)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc616)
                  cir.condition(%20) loc(#loc151)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc154)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc154)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc155)
                  } loc(#loc617)
                  cir.yield loc(#loc146)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc157)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc618)
                  cir.yield loc(#loc614)
                } loc(#loc614)
              } loc(#loc614)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc22)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc22)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc158)
            } loc(#loc612)
          } loc(#loc610)
        } loc(#loc607)
      } loc(#loc606)
    } loc(#loc604)
    cir.return loc(#loc24)
  } loc(#loc565)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc620)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc621)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc622)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc165)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc623)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc167)
    cir.return loc(#loc160)
  } loc(#loc619)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc624)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc172)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc626)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc629)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc629)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc182)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc182)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc632)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc633)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc634)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc635)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc192)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc192)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc634)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc199)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc200)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc201)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc202)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc638)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc208)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc208)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc640)
                  cir.if %58 {
                    cir.break loc(#loc210)
                  } loc(#loc641)
                } loc(#loc639)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc642)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc213)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc643)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc644)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc218)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc218)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc645)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc220)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc220)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc221)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc646)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc224)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc224)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc225)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc647)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc649)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc650)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc650)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc235)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc236)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc236)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc651)
                  cir.if %62 {
                    cir.break loc(#loc238)
                  } loc(#loc652)
                } loc(#loc648)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc240)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc240)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc241)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc241)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc241)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc241)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc241)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc241)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc241)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc242)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc242)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc653)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc243)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc244)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc654)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc250)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc250)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc656)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc251)
                    cir.yield %60 : !cir.bool loc(#loc251)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc253)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc657)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc251)
                      cir.yield %64 : !cir.bool loc(#loc251)
                    }, false {
                      %64 = cir.const #false loc(#loc251)
                      cir.yield %64 : !cir.bool loc(#loc251)
                    }) : (!cir.bool) -> !cir.bool loc(#loc251)
                    cir.yield %63 : !cir.bool loc(#loc251)
                  }) : (!cir.bool) -> !cir.bool loc(#loc251)
                  cir.if %59 {
                    cir.break loc(#loc255)
                  } loc(#loc658)
                } loc(#loc655)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc256)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc256)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc258)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc258)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc659)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc259)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc260)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc660)
              } loc(#loc637)
              cir.yield loc(#loc196)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc263)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc263)
              cir.condition(%14) loc(#loc263)
            } loc(#loc636)
          } loc(#loc636)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc266)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc267)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc267)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc662)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc269)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc270)
            } loc(#loc663)
          } loc(#loc661)
        } loc(#loc631)
      } loc(#loc630)
    } loc(#loc628)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc665)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc665)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc273)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc273)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc278)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc668)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc669)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc669)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc669)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc288)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc671)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc291)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc672)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc289)
                cir.yield %18 : !cir.bool loc(#loc289)
              }, false {
                %18 = cir.const #false loc(#loc289)
                cir.yield %18 : !cir.bool loc(#loc289)
              }) : (!cir.bool) -> !cir.bool loc(#loc289)
              cir.yield %17 : !cir.bool loc(#loc289)
            }, false {
              %14 = cir.const #false loc(#loc289)
              cir.yield %14 : !cir.bool loc(#loc289)
            }) : (!cir.bool) -> !cir.bool loc(#loc289)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc296)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc298)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc298)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc674)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc301)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc676)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc304)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc677)
                  cir.condition(%21) loc(#loc305)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc308)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc308)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc309)
                  } loc(#loc678)
                  cir.yield loc(#loc300)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc311)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc679)
                  cir.yield loc(#loc675)
                } loc(#loc675)
              } loc(#loc675)
            } else {
              %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc172)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc172)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc312)
            } loc(#loc673)
          } loc(#loc670)
        } loc(#loc667)
      } loc(#loc666)
    } loc(#loc664)
    cir.return loc(#loc174)
  } loc(#loc625)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc681)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc318)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc682)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc684)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc684)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc322)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc322)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc687)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc688)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc689)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc690)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc332)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc332)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc689)
          cir.scope {
            cir.do {
              cir.scope {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc339)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc340)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc341)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
                cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc693)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc347)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc348)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc348)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc695)
                  cir.if %58 {
                    cir.break loc(#loc350)
                  } loc(#loc696)
                } loc(#loc694)
                %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc697)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc353)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc698)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc699)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc358)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc358)
                %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc700)
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc360)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc360)
                %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc361)
                %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc701)
                %28 = cir.const #cir.int<27015> : !s32i loc(#loc364)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc364)
                %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc365)
                %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc702)
                cir.scope {
                  %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                  %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc704)
                  %57 = cir.const #cir.int<16> : !u64i loc(#loc705)
                  %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc705)
                  %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc375)
                  %60 = cir.const #cir.int<1> : !s32i loc(#loc376)
                  %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc376)
                  %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc706)
                  cir.if %62 {
                    cir.break loc(#loc378)
                  } loc(#loc707)
                } loc(#loc703)
                %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc379)
                %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc380)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc380)
                %35 = cir.const #cir.int<3> : !s32i loc(#loc381)
                %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc381)
                %37 = cir.const #cir.int<4> : !u64i loc(#loc381)
                %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc381)
                %39 = cir.const #cir.int<2> : !s32i loc(#loc381)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc381)
                %41 = cir.binop(add, %38, %40) : !u64i loc(#loc381)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc382)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc382)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc708)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc383)
                %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc384)
                %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc384)
                cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc709)
                cir.scope {
                  %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc389)
                  %56 = cir.const #cir.int<1> : !s32i loc(#loc390)
                  %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc390)
                  %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc711)
                  %59 = cir.ternary(%58, true {
                    %60 = cir.const #true loc(#loc391)
                    cir.yield %60 : !cir.bool loc(#loc391)
                  }, false {
                    %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                    %61 = cir.const #cir.int<0> : !s32i loc(#loc393)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc712)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc391)
                      cir.yield %64 : !cir.bool loc(#loc391)
                    }, false {
                      %64 = cir.const #false loc(#loc391)
                      cir.yield %64 : !cir.bool loc(#loc391)
                    }) : (!cir.bool) -> !cir.bool loc(#loc391)
                    cir.yield %63 : !cir.bool loc(#loc391)
                  }) : (!cir.bool) -> !cir.bool loc(#loc391)
                  cir.if %59 {
                    cir.break loc(#loc395)
                  } loc(#loc713)
                } loc(#loc710)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc396)
                %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc396)
                %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc397)
                %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc398)
                %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc398)
                cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc714)
                %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc399)
                %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc400)
                cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc715)
              } loc(#loc692)
              cir.yield loc(#loc336)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc403)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc403)
              cir.condition(%14) loc(#loc403)
            } loc(#loc691)
          } loc(#loc691)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc406)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc407)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc407)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc717)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc409)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc410)
            } loc(#loc718)
          } loc(#loc716)
        } loc(#loc686)
      } loc(#loc685)
    } loc(#loc683)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc720)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc720)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc413)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc413)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc723)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc724)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc724)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc724)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc424)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc425)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc726)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc427)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc428)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc727)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc426)
                cir.yield %18 : !cir.bool loc(#loc426)
              }, false {
                %18 = cir.const #false loc(#loc426)
                cir.yield %18 : !cir.bool loc(#loc426)
              }) : (!cir.bool) -> !cir.bool loc(#loc426)
              cir.yield %17 : !cir.bool loc(#loc426)
            }, false {
              %14 = cir.const #false loc(#loc426)
              cir.yield %14 : !cir.bool loc(#loc426)
            }) : (!cir.bool) -> !cir.bool loc(#loc426)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc433)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc434)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc435)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc435)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc729)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc438)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc731)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc440)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc441)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc732)
                  cir.condition(%21) loc(#loc442)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc444)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc445)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc445)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc446)
                  } loc(#loc733)
                  cir.yield loc(#loc437)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc447)
                  %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc448)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc734)
                  cir.yield loc(#loc730)
                } loc(#loc730)
              } loc(#loc730)
            } else {
              %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc449)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc449)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc450)
            } loc(#loc728)
          } loc(#loc725)
        } loc(#loc722)
      } loc(#loc721)
    } loc(#loc719)
    cir.return loc(#loc314)
  } loc(#loc680)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc736)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc455)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc456)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc737)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc739)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc739)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc460)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc460)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc465)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc465)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc466)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc467)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc741)
      } loc(#loc740)
    } loc(#loc738)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc743)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc743)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc471)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc471)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc746)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc747)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc747)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc747)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc482)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc483)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc749)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc487)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc488)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc489)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc489)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc751)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc492)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc753)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc494)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc495)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc754)
                  cir.condition(%20) loc(#loc496)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc498)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc499)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc499)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc499)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc500)
                  } loc(#loc755)
                  cir.yield loc(#loc491)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc501)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc502)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc756)
                  cir.yield loc(#loc752)
                } loc(#loc752)
              } loc(#loc752)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc503)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc503)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc504)
            } loc(#loc750)
          } loc(#loc748)
        } loc(#loc745)
      } loc(#loc744)
    } loc(#loc742)
    cir.return loc(#loc452)
  } loc(#loc735)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc758)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc509)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc510)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc759)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc761)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc761)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc514)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc514)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc517)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc763)
      } loc(#loc762)
    } loc(#loc760)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc765)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc765)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc521)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc521)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc768)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc769)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc769)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc769)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc532)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc533)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc771)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc537)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc538)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc539)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc539)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc773)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc542)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc775)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc544)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc545)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc776)
                  cir.condition(%20) loc(#loc546)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc548)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc549)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc549)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc549)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc550)
                  } loc(#loc777)
                  cir.yield loc(#loc541)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc551)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc552)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc778)
                  cir.yield loc(#loc774)
                } loc(#loc774)
              } loc(#loc774)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc553)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc553)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc554)
            } loc(#loc772)
          } loc(#loc770)
        } loc(#loc767)
      } loc(#loc766)
    } loc(#loc764)
    cir.return loc(#loc506)
  } loc(#loc757)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":126:27)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":44:1)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":130:1)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":46:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":46:9)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":48:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":48:12)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":48:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":49:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":107:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":49:8)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":49:26)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":50:5)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":51:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":106:9)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":56:13)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":56:17)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":57:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":57:32)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":58:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":58:36)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":59:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":59:45)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":60:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":95:21)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":61:13)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":94:13)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":70:40)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":70:49)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":70:62)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":70:33)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":70:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":70:73)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":71:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":74:17)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":71:21)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":71:38)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":72:17)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":73:21)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:24)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:25)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:34)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:37)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:51)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:17)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":75:52)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":76:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":76:17)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":77:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":77:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":77:63)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":78:42)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":78:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":78:17)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":78:50)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":82:17)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:29)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:62)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:63)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:72)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:86)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:21)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":79:92)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":80:17)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":81:21)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:35)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:50)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:63)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:81)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:84)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:30)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:17)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":85:85)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":86:17)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":89:17)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":86:21)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":86:35)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":86:48)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":86:51)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":86:65)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":87:17)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":88:21)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":91:43)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":91:29)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":91:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":93:29)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":93:24)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":93:17)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":93:40)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":95:20)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":96:13)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":99:13)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":96:17)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":96:34)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":97:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":98:30)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":98:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":108:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":129:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":108:8)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":108:26)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":109:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":110:9)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":128:9)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":111:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":111:17)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":112:13)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":112:34)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":115:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":127:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":115:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":115:24)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":116:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":123:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":125:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":117:32)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":117:24)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":117:17)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:17)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":122:17)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:25)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:21)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:28)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:32)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:30)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":120:17)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":121:41)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":121:34)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":121:21)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:37)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":119:36)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":126:17)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":394:1)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":400:1)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":396:5)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":396:14)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":397:5)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":397:14)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":398:5)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":398:14)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":399:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":399:14)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":204:19)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":223:27)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":137:1)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":227:1)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":139:5)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":139:9)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":141:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":141:12)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":141:5)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":142:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":200:5)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":142:8)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":142:26)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":143:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":144:9)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":199:9)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":149:13)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":149:17)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":150:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":150:32)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":151:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":151:36)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":152:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":152:45)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":153:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":188:21)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":154:13)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":187:13)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":163:40)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":163:49)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":163:62)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":163:33)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":163:17)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":163:73)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":164:17)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":167:17)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":164:21)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":164:38)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":165:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":166:21)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:24)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:25)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:34)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:37)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:51)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":168:52)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":169:38)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":169:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":170:53)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":170:43)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":170:17)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":170:63)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":171:42)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":171:36)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":171:17)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":171:50)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:17)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":175:17)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:29)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:62)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:63)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:72)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:86)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:21)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":172:92)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":173:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":174:21)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:35)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:50)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:63)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:81)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:84)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:30)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:17)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":178:85)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":179:17)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":182:17)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":179:21)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":179:35)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":179:48)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":179:51)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":179:65)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":180:17)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":181:21)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":184:43)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":184:29)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":184:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":186:29)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":186:24)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":186:17)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":186:40)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":188:20)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":189:13)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":192:13)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":189:17)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":189:34)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":190:13)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":191:30)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":191:17)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":201:5)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":226:5)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":201:8)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":201:27)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":202:5)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":205:5)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":207:5)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":204:9)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":208:9)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":225:9)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":209:13)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":209:17)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":210:13)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":210:34)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":224:13)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:17)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:25)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:27)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:30)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:38)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":212:40)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":213:13)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":220:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":222:13)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":214:32)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":214:24)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":214:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:17)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":219:17)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:25)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:21)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:28)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:32)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:30)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":217:17)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":218:41)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":218:34)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":218:21)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:37)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":216:36)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":223:17)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":230:1)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":315:1)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":232:5)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":232:9)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":234:13)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":234:12)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":234:5)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":235:5)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":293:5)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":235:8)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":235:26)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":236:5)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":237:9)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":292:9)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":242:13)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":242:17)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":243:13)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":243:32)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":244:13)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":244:36)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":245:13)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":245:45)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":246:13)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":281:21)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":247:13)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":280:13)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":256:40)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":256:49)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":256:62)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":256:33)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":256:17)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":256:73)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":257:17)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":260:17)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":257:21)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":257:38)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":258:17)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":259:21)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:24)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:25)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:34)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:37)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:51)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:17)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":261:52)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":262:38)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":262:17)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":263:53)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":263:43)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":263:17)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":263:63)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":264:42)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":264:36)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":264:17)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":264:50)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:17)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":268:17)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:29)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:62)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:63)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:72)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:86)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:21)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":265:92)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":266:17)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":267:21)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:35)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:50)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:63)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:81)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:84)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:30)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:17)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":271:85)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":272:17)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":275:17)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":272:21)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":272:35)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":272:48)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":272:51)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":272:65)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":273:17)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":274:21)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":277:43)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":277:29)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":277:17)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":279:29)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":279:24)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":279:17)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":279:40)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":281:20)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":282:13)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":285:13)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":282:17)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":282:34)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":283:13)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":284:30)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":284:17)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":294:5)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":314:5)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":294:8)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":294:26)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":295:5)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":296:9)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":313:9)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":297:13)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":297:17)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":298:13)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":298:34)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:13)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":312:13)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:17)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:25)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:27)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:30)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:38)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":300:40)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":301:13)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":308:13)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":310:13)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":302:32)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":302:24)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":302:17)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:17)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":307:17)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:25)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:21)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:28)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:32)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:30)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":305:17)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":306:41)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":306:34)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":306:21)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:37)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":304:36)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":311:27)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":311:17)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":318:1)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":356:1)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":320:5)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":320:9)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":322:13)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":322:12)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":322:5)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":323:5)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":333:5)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":323:8)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":323:27)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":324:5)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":327:5)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":329:5)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":326:19)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":326:9)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":332:16)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":332:9)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":334:5)
#loc470 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":355:5)
#loc471 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":334:8)
#loc472 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":334:26)
#loc473 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":335:5)
#loc474 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":336:9)
#loc475 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":354:9)
#loc476 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":337:13)
#loc477 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":337:17)
#loc478 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":338:13)
#loc479 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":338:34)
#loc480 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":341:13)
#loc481 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":353:13)
#loc482 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":341:17)
#loc483 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":341:24)
#loc484 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":342:13)
#loc485 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":349:13)
#loc486 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":351:13)
#loc487 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":343:32)
#loc488 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":343:24)
#loc489 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":343:17)
#loc490 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:17)
#loc491 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":348:17)
#loc492 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:25)
#loc493 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:21)
#loc494 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:28)
#loc495 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:32)
#loc496 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:30)
#loc497 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":346:17)
#loc498 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":347:41)
#loc499 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":347:34)
#loc500 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":347:21)
#loc501 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:37)
#loc502 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":345:36)
#loc503 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":352:27)
#loc504 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":352:17)
#loc505 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":359:1)
#loc506 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":392:1)
#loc507 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":361:5)
#loc508 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":361:9)
#loc509 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":363:13)
#loc510 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":363:12)
#loc511 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":363:5)
#loc512 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":364:5)
#loc513 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":369:5)
#loc514 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":364:8)
#loc515 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":364:26)
#loc516 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":365:5)
#loc517 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":368:16)
#loc518 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":368:9)
#loc519 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":370:5)
#loc520 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":391:5)
#loc521 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":370:8)
#loc522 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":370:26)
#loc523 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":371:5)
#loc524 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":372:9)
#loc525 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":390:9)
#loc526 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":373:13)
#loc527 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":373:17)
#loc528 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":374:13)
#loc529 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":374:34)
#loc530 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":377:13)
#loc531 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":389:13)
#loc532 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":377:17)
#loc533 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":377:24)
#loc534 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":378:13)
#loc535 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":385:13)
#loc536 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":387:13)
#loc537 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":379:32)
#loc538 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":379:24)
#loc539 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":379:17)
#loc540 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:17)
#loc541 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":384:17)
#loc542 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:25)
#loc543 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:21)
#loc544 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:28)
#loc545 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:32)
#loc546 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:30)
#loc547 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":382:17)
#loc548 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":383:41)
#loc549 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":383:34)
#loc550 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":383:21)
#loc551 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:37)
#loc552 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":381:36)
#loc553 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":388:27)
#loc554 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_11.c":388:17)
#loc555 = loc(fused[#loc1, #loc2])
#loc556 = loc(fused[#loc3, #loc4])
#loc557 = loc(fused[#loc5, #loc6])
#loc558 = loc(fused[#loc8, #loc9])
#loc559 = loc(fused[#loc10, #loc11])
#loc560 = loc(fused[#loc12, #loc13])
#loc561 = loc(fused[#loc14, #loc15])
#loc562 = loc(fused[#loc16, #loc17])
#loc563 = loc(fused[#loc18, #loc19])
#loc564 = loc(fused[#loc20, #loc21])
#loc565 = loc(fused[#loc23, #loc24])
#loc566 = loc(fused[#loc25, #loc26])
#loc567 = loc(fused[#loc29, #loc27])
#loc568 = loc(fused[#loc30, #loc31])
#loc569 = loc(fused[#loc32, #loc33])
#loc570 = loc(fused[#loc34, #loc31])
#loc571 = loc(fused[#loc35, #loc36])
#loc572 = loc(fused[#loc37, #loc38])
#loc573 = loc(fused[#loc39, #loc40])
#loc574 = loc(fused[#loc41, #loc42])
#loc575 = loc(fused[#loc43, #loc44])
#loc576 = loc(fused[#loc45, #loc46])
#loc577 = loc(fused[#loc47, #loc48])
#loc578 = loc(fused[#loc53, #loc54])
#loc579 = loc(fused[#loc55, #loc56])
#loc580 = loc(fused[#loc57, #loc58])
#loc581 = loc(fused[#loc59, #loc56])
#loc582 = loc(fused[#loc61, #loc62])
#loc583 = loc(fused[#loc64, #loc65])
#loc584 = loc(fused[#loc66, #loc67])
#loc585 = loc(fused[#loc70, #loc68])
#loc586 = loc(fused[#loc74, #loc75])
#loc587 = loc(fused[#loc79, #loc80])
#loc588 = loc(fused[#loc81, #loc82])
#loc589 = loc(fused[#loc84, #loc85])
#loc590 = loc(fused[#loc86, #loc87])
#loc591 = loc(fused[#loc88, #loc89])
#loc592 = loc(fused[#loc90, #loc82])
#loc593 = loc(fused[#loc94, #loc95])
#loc594 = loc(fused[#loc98, #loc99])
#loc595 = loc(fused[#loc100, #loc101])
#loc596 = loc(fused[#loc102, #loc103])
#loc597 = loc(fused[#loc105, #loc106])
#loc598 = loc(fused[#loc107, #loc101])
#loc599 = loc(fused[#loc111, #loc109])
#loc600 = loc(fused[#loc114, #loc115])
#loc601 = loc(fused[#loc117, #loc118])
#loc602 = loc(fused[#loc119, #loc120])
#loc603 = loc(fused[#loc121, #loc118])
#loc604 = loc(fused[#loc124, #loc125])
#loc605 = loc(fused[#loc126, #loc127])
#loc606 = loc(fused[#loc128, #loc125])
#loc607 = loc(fused[#loc129, #loc130])
#loc608 = loc(fused[#loc131, #loc132])
#loc609 = loc(fused[#loc133, #loc134])
#loc610 = loc(fused[#loc135, #loc136])
#loc611 = loc(fused[#loc137, #loc138])
#loc612 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc613 = loc(fused[#loc144, #loc142])
#loc614 = loc(fused[#loc145, #loc146])
#loc615 = loc(fused[#loc148, #loc147])
#loc616 = loc(fused[#loc149, #loc150])
#loc617 = loc(fused[#loc152, #loc146])
#loc618 = loc(fused[#loc157, #loc156])
#loc619 = loc(fused[#loc159, #loc160])
#loc620 = loc(fused[#loc161, #loc162])
#loc621 = loc(fused[#loc163, #loc164])
#loc622 = loc(fused[#loc165, #loc166])
#loc623 = loc(fused[#loc167, #loc168])
#loc624 = loc(fused[#loc169, #loc170])
#loc625 = loc(fused[#loc173, #loc174])
#loc626 = loc(fused[#loc175, #loc176])
#loc627 = loc(fused[#loc179, #loc177])
#loc628 = loc(fused[#loc180, #loc181])
#loc629 = loc(fused[#loc182, #loc183])
#loc630 = loc(fused[#loc184, #loc181])
#loc631 = loc(fused[#loc185, #loc186])
#loc632 = loc(fused[#loc187, #loc188])
#loc633 = loc(fused[#loc189, #loc190])
#loc634 = loc(fused[#loc191, #loc192])
#loc635 = loc(fused[#loc193, #loc194])
#loc636 = loc(fused[#loc195, #loc196])
#loc637 = loc(fused[#loc197, #loc198])
#loc638 = loc(fused[#loc203, #loc204])
#loc639 = loc(fused[#loc205, #loc206])
#loc640 = loc(fused[#loc207, #loc208])
#loc641 = loc(fused[#loc209, #loc206])
#loc642 = loc(fused[#loc211, #loc212])
#loc643 = loc(fused[#loc214, #loc215])
#loc644 = loc(fused[#loc216, #loc217])
#loc645 = loc(fused[#loc219, #loc218])
#loc646 = loc(fused[#loc222, #loc223])
#loc647 = loc(fused[#loc226, #loc227])
#loc648 = loc(fused[#loc228, #loc229])
#loc649 = loc(fused[#loc231, #loc232])
#loc650 = loc(fused[#loc233, #loc234])
#loc651 = loc(fused[#loc235, #loc236])
#loc652 = loc(fused[#loc237, #loc229])
#loc653 = loc(fused[#loc241, #loc242])
#loc654 = loc(fused[#loc245, #loc246])
#loc655 = loc(fused[#loc247, #loc248])
#loc656 = loc(fused[#loc249, #loc250])
#loc657 = loc(fused[#loc252, #loc253])
#loc658 = loc(fused[#loc254, #loc248])
#loc659 = loc(fused[#loc258, #loc256])
#loc660 = loc(fused[#loc261, #loc262])
#loc661 = loc(fused[#loc264, #loc265])
#loc662 = loc(fused[#loc266, #loc267])
#loc663 = loc(fused[#loc268, #loc265])
#loc664 = loc(fused[#loc271, #loc272])
#loc665 = loc(fused[#loc273, #loc274])
#loc666 = loc(fused[#loc275, #loc276, #loc277, #loc272])
#loc667 = loc(fused[#loc279, #loc280])
#loc668 = loc(fused[#loc281, #loc282])
#loc669 = loc(fused[#loc283, #loc284])
#loc670 = loc(fused[#loc285, #loc286])
#loc671 = loc(fused[#loc287, #loc288])
#loc672 = loc(fused[#loc290, #loc292])
#loc673 = loc(fused[#loc293, #loc294, #loc295, #loc286])
#loc674 = loc(fused[#loc298, #loc296])
#loc675 = loc(fused[#loc299, #loc300])
#loc676 = loc(fused[#loc302, #loc301])
#loc677 = loc(fused[#loc303, #loc304])
#loc678 = loc(fused[#loc306, #loc300])
#loc679 = loc(fused[#loc311, #loc310])
#loc680 = loc(fused[#loc313, #loc314])
#loc681 = loc(fused[#loc315, #loc316])
#loc682 = loc(fused[#loc319, #loc317])
#loc683 = loc(fused[#loc320, #loc321])
#loc684 = loc(fused[#loc322, #loc323])
#loc685 = loc(fused[#loc324, #loc321])
#loc686 = loc(fused[#loc325, #loc326])
#loc687 = loc(fused[#loc327, #loc328])
#loc688 = loc(fused[#loc329, #loc330])
#loc689 = loc(fused[#loc331, #loc332])
#loc690 = loc(fused[#loc333, #loc334])
#loc691 = loc(fused[#loc335, #loc336])
#loc692 = loc(fused[#loc337, #loc338])
#loc693 = loc(fused[#loc343, #loc344])
#loc694 = loc(fused[#loc345, #loc346])
#loc695 = loc(fused[#loc347, #loc348])
#loc696 = loc(fused[#loc349, #loc346])
#loc697 = loc(fused[#loc351, #loc352])
#loc698 = loc(fused[#loc354, #loc355])
#loc699 = loc(fused[#loc356, #loc357])
#loc700 = loc(fused[#loc359, #loc358])
#loc701 = loc(fused[#loc362, #loc363])
#loc702 = loc(fused[#loc366, #loc367])
#loc703 = loc(fused[#loc368, #loc369])
#loc704 = loc(fused[#loc371, #loc372])
#loc705 = loc(fused[#loc373, #loc374])
#loc706 = loc(fused[#loc375, #loc376])
#loc707 = loc(fused[#loc377, #loc369])
#loc708 = loc(fused[#loc381, #loc382])
#loc709 = loc(fused[#loc385, #loc386])
#loc710 = loc(fused[#loc387, #loc388])
#loc711 = loc(fused[#loc389, #loc390])
#loc712 = loc(fused[#loc392, #loc393])
#loc713 = loc(fused[#loc394, #loc388])
#loc714 = loc(fused[#loc398, #loc396])
#loc715 = loc(fused[#loc401, #loc402])
#loc716 = loc(fused[#loc404, #loc405])
#loc717 = loc(fused[#loc406, #loc407])
#loc718 = loc(fused[#loc408, #loc405])
#loc719 = loc(fused[#loc411, #loc412])
#loc720 = loc(fused[#loc413, #loc414])
#loc721 = loc(fused[#loc415, #loc412])
#loc722 = loc(fused[#loc416, #loc417])
#loc723 = loc(fused[#loc418, #loc419])
#loc724 = loc(fused[#loc420, #loc421])
#loc725 = loc(fused[#loc422, #loc423])
#loc726 = loc(fused[#loc424, #loc425])
#loc727 = loc(fused[#loc427, #loc429])
#loc728 = loc(fused[#loc430, #loc431, #loc432, #loc423])
#loc729 = loc(fused[#loc435, #loc433])
#loc730 = loc(fused[#loc436, #loc437])
#loc731 = loc(fused[#loc439, #loc438])
#loc732 = loc(fused[#loc440, #loc441])
#loc733 = loc(fused[#loc443, #loc437])
#loc734 = loc(fused[#loc448, #loc447])
#loc735 = loc(fused[#loc451, #loc452])
#loc736 = loc(fused[#loc453, #loc454])
#loc737 = loc(fused[#loc457, #loc455])
#loc738 = loc(fused[#loc458, #loc459])
#loc739 = loc(fused[#loc460, #loc461])
#loc740 = loc(fused[#loc462, #loc463, #loc464, #loc459])
#loc741 = loc(fused[#loc468, #loc467])
#loc742 = loc(fused[#loc469, #loc470])
#loc743 = loc(fused[#loc471, #loc472])
#loc744 = loc(fused[#loc473, #loc470])
#loc745 = loc(fused[#loc474, #loc475])
#loc746 = loc(fused[#loc476, #loc477])
#loc747 = loc(fused[#loc478, #loc479])
#loc748 = loc(fused[#loc480, #loc481])
#loc749 = loc(fused[#loc482, #loc483])
#loc750 = loc(fused[#loc484, #loc485, #loc486, #loc481])
#loc751 = loc(fused[#loc489, #loc487])
#loc752 = loc(fused[#loc490, #loc491])
#loc753 = loc(fused[#loc493, #loc492])
#loc754 = loc(fused[#loc494, #loc495])
#loc755 = loc(fused[#loc497, #loc491])
#loc756 = loc(fused[#loc502, #loc501])
#loc757 = loc(fused[#loc505, #loc506])
#loc758 = loc(fused[#loc507, #loc508])
#loc759 = loc(fused[#loc511, #loc509])
#loc760 = loc(fused[#loc512, #loc513])
#loc761 = loc(fused[#loc514, #loc515])
#loc762 = loc(fused[#loc516, #loc513])
#loc763 = loc(fused[#loc518, #loc517])
#loc764 = loc(fused[#loc519, #loc520])
#loc765 = loc(fused[#loc521, #loc522])
#loc766 = loc(fused[#loc523, #loc520])
#loc767 = loc(fused[#loc524, #loc525])
#loc768 = loc(fused[#loc526, #loc527])
#loc769 = loc(fused[#loc528, #loc529])
#loc770 = loc(fused[#loc530, #loc531])
#loc771 = loc(fused[#loc532, #loc533])
#loc772 = loc(fused[#loc534, #loc535, #loc536, #loc531])
#loc773 = loc(fused[#loc539, #loc537])
#loc774 = loc(fused[#loc540, #loc541])
#loc775 = loc(fused[#loc543, #loc542])
#loc776 = loc(fused[#loc544, #loc545])
#loc777 = loc(fused[#loc547, #loc541])
#loc778 = loc(fused[#loc552, #loc551])
