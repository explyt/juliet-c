!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:48)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc56)
    cir.br ^bb1 loc(#loc57)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %2 ^bb3, ^bb12 loc(#loc10)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc59)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc56)
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // pred: ^bb5
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc61)
    %8 = cir.cast(bool_to_int, %7 : !cir.bool), !s32i loc(#loc61)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc62)
    %14 = cir.cast(bool_to_int, %13 : !cir.bool), !s32i loc(#loc62)
    %15 = cir.binop(and, %8, %14) : !s32i loc(#loc63)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %16 ^bb7, ^bb8 loc(#loc64)
  ^bb7:  // pred: ^bb6
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc27)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc9)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc9)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc5)
  } loc(#loc55)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc66)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc29)
  } loc(#loc65)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc68)
    cir.br ^bb1 loc(#loc69)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // 2 preds: ^bb1, ^bb19
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %2 ^bb3, ^bb20 loc(#loc38)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc68)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc73)
    cir.brcond %7 ^bb7, ^bb12 loc(#loc46)
  ^bb7:  // pred: ^bb6
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc74)
    cir.brcond %12 ^bb8, ^bb9 loc(#loc46)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #true loc(#loc46)
    cir.br ^bb10(%13 : !cir.bool) loc(#loc46)
  ^bb9:  // pred: ^bb7
    %14 = cir.const #false loc(#loc46)
    cir.br ^bb10(%14 : !cir.bool) loc(#loc46)
  ^bb10(%15: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:48)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%15 : !cir.bool) loc(#loc46)
  ^bb12:  // pred: ^bb6
    %16 = cir.const #false loc(#loc46)
    cir.br ^bb13(%16 : !cir.bool) loc(#loc46)
  ^bb13(%17: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:48)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc46)
  ^bb14:  // pred: ^bb13
    cir.brcond %17 ^bb15, ^bb16 loc(#loc75)
  ^bb15:  // pred: ^bb14
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc51)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb16 loc(#loc43)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc43)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc41)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc53)
  ^bb19:  // no predecessors
    cir.br ^bb2 loc(#loc37)
  ^bb20:  // 2 preds: ^bb2, ^bb18
    cir.br ^bb21 loc(#loc37)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc33)
  } loc(#loc67)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":30:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":20:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":35:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":25:13)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":25:51)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":22:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":34:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":22:11)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":23:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":24:9)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":32:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:13)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":31:13)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:18)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:42)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:51)
#loc19 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:73)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:83)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:17)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:84)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":28:48)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":29:13)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":30:17)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":33:9)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":59:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":62:1)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":61:5)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":61:11)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":42:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":57:1)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":47:13)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":47:51)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":44:5)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":56:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":44:11)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":45:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":46:9)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":54:9)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:13)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":53:13)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:18)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:42)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:52)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:74)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":50:84)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":51:13)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":52:27)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":52:17)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_16.c":55:9)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc4, #loc5])
#loc56 = loc(fused[#loc6, #loc7])
#loc57 = loc(fused[#loc8, #loc9])
#loc58 = loc(fused[#loc11, #loc9])
#loc59 = loc(fused[#loc12, #loc13])
#loc60 = loc(fused[#loc14, #loc15])
#loc61 = loc(fused[#loc16, #loc17])
#loc62 = loc(fused[#loc18, #loc21])
#loc63 = loc(fused[#loc22, #loc23])
#loc64 = loc(fused[#loc25, #loc15])
#loc65 = loc(fused[#loc28, #loc29])
#loc66 = loc(fused[#loc30, #loc31])
#loc67 = loc(fused[#loc32, #loc33])
#loc68 = loc(fused[#loc34, #loc35])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc39, #loc37])
#loc71 = loc(fused[#loc40, #loc41])
#loc72 = loc(fused[#loc42, #loc43])
#loc73 = loc(fused[#loc44, #loc45])
#loc74 = loc(fused[#loc47, #loc49])
#loc75 = loc(fused[#loc50, #loc43])
