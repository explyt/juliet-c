!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":116:10)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":116:14)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":116:20)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":116:32)
#loc140 = loc(fused[#loc92, #loc93])
#loc141 = loc(fused[#loc94, #loc95])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16L7goodB2GEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc108)
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_163badEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc109)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc111)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%3) loc(#loc17)
      } do {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc109)
          %3 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_163badEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc109)
          cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc109)
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc20)
          %5 = cir.call @strdup(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc21)
          cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
        } loc(#loc116)
        cir.break loc(#loc24)
      } loc(#loc115)
    } loc(#loc115)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%3) loc(#loc27)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
        cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
        cir.break loc(#loc30)
      } loc(#loc118)
    } loc(#loc118)
    cir.return loc(#loc10)
  } loc(#loc112)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc41)
        cir.condition(%3) loc(#loc41)
      } do {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc108)
          %3 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16L7goodB2GEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc108)
          cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc108)
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc44)
          %5 = cir.call @strdup(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
          cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
        } loc(#loc124)
        cir.break loc(#loc48)
      } loc(#loc123)
    } loc(#loc123)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc51)
        cir.condition(%3) loc(#loc51)
      } do {
        %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
        cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
        cir.break loc(#loc54)
      } loc(#loc126)
    } loc(#loc126)
    cir.return loc(#loc34)
  } loc(#loc120)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc127)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc65)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc65)
        cir.condition(%3) loc(#loc65)
      } do {
        %2 = cir.const #cir.int<1> : !u64i loc(#loc132)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc68)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
        cir.break loc(#loc70)
      } loc(#loc131)
    } loc(#loc131)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc73)
        cir.condition(%3) loc(#loc73)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
        cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
        cir.break loc(#loc75)
      } loc(#loc134)
    } loc(#loc134)
    cir.return loc(#loc58)
  } loc(#loc128)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16L7goodB2GEv() : () -> () loc(#loc78)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16L7goodG2BEv() : () -> () loc(#loc79)
    cir.return loc(#loc77)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc99)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_164goodEv() : () -> () loc(#loc101)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_163badEv() : () -> () loc(#loc104)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.return %15 : !s32i loc(#loc142)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":62:13)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":62:31)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":34:13)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":34:31)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":26:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":47:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":28:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":28:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":30:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":30:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":31:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":39:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":31:11)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":33:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":37:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":36:27)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":36:20)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":36:13)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":36:35)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":38:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":40:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":46:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":40:11)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":44:16)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":26:6)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":45:9)
#loc31 = loc("/usr/include/stdlib.h":687:1)
#loc32 = loc("/usr/include/stdlib.h":687:32)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":54:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":74:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":56:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":56:12)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":58:12)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":58:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":59:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":67:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":59:11)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":61:9)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":65:9)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":64:27)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":64:20)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":64:13)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":64:35)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":66:9)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":68:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":73:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":68:11)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":71:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":71:14)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":72:9)
#loc55 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc56 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":77:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":95:1)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":79:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":79:12)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":81:12)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":81:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":82:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":87:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":82:11)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":85:16)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":85:20)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":77:13)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":85:9)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":86:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":88:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":94:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":88:11)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":92:16)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":93:9)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":97:1)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":101:1)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":99:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":100:5)
#loc80 = loc("/usr/include/stdlib.h":575:1)
#loc81 = loc("/usr/include/stdlib.h":575:41)
#loc82 = loc("/usr/include/time.h":76:1)
#loc83 = loc("/usr/include/time.h":76:38)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc85 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":121:15)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":123:15)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":126:15)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":128:15)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":116:1)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":131:1)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":117:1)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":119:27)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":119:22)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":119:5)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":121:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":122:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":123:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":126:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":127:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":128:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":130:12)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_16.cpp":130:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc14, #loc13])
#loc115 = loc(fused[#loc15, #loc16])
#loc116 = loc(fused[#loc18, #loc19])
#loc117 = loc(fused[#loc22, #loc23])
#loc118 = loc(fused[#loc25, #loc26])
#loc119 = loc(fused[#loc31, #loc32])
#loc120 = loc(fused[#loc33, #loc34])
#loc121 = loc(fused[#loc35, #loc36])
#loc122 = loc(fused[#loc38, #loc37])
#loc123 = loc(fused[#loc39, #loc40])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc46, #loc47])
#loc126 = loc(fused[#loc49, #loc50])
#loc127 = loc(fused[#loc55, #loc56])
#loc128 = loc(fused[#loc57, #loc58])
#loc129 = loc(fused[#loc59, #loc60])
#loc130 = loc(fused[#loc62, #loc61])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc66, #loc67])
#loc133 = loc(fused[#loc69, #loc67])
#loc134 = loc(fused[#loc71, #loc72])
#loc135 = loc(fused[#loc76, #loc77])
#loc136 = loc(fused[#loc80, #loc81])
#loc137 = loc(fused[#loc82, #loc83])
#loc138 = loc(fused[#loc84, #loc85])
#loc139 = loc(fused[#loc90, #loc91])
#loc142 = loc(fused[#loc107, #loc106])
