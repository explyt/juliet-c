!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE665_Improper_Initialization__char_cat_21.c":26:25)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_21.c":26:32)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_21.c":138:10)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_21.c":138:14)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_21.c":138:20)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_21.c":138:32)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_21.c":62:30)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_21.c":62:37)
#loc143 = loc("CWE665_Improper_Initialization__char_cat_21.c":95:30)
#loc144 = loc("CWE665_Improper_Initialization__char_cat_21.c":95:37)
#loc191 = loc(fused[#loc5, #loc6])
#loc213 = loc(fused[#loc67, #loc68])
#loc214 = loc(fused[#loc69, #loc70])
#loc220 = loc(fused[#loc90, #loc91])
#loc237 = loc(fused[#loc143, #loc144])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc189)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc189)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc9)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc9)
  ^bb4:  // pred: ^bb3
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    cir.return %6 : !cir.ptr<!s8i> loc(#loc194)
  } loc(#loc190)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc200)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc189)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %7 = cir.call @badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc31)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc37)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc38)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc205)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc42)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc43)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    %22 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc46)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc46)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb2 loc(#loc35)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc19)
  } loc(#loc197)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc207)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc210)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc74)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_cat_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call @CWE665_Improper_Initialization__char_cat_21_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_cat_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call @CWE665_Improper_Initialization__char_cat_21_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.return %17 : !s32i loc(#loc217)
  } loc(#loc212)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc87)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc90, #loc91])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc89)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc218)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc100)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc94)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc224)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc228)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %5 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc218)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %7 = cir.call @goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc119)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc125)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc126)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc126)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc233)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc130)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc131)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc234)
    %22 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc134)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
    %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc134)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc107)
  } loc(#loc225)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc235)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc143, #loc144])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc142)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc235)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc239)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc150)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc153)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb3 loc(#loc147)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
    cir.return %11 : !cir.ptr<!s8i> loc(#loc241)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc245)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %5 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc235)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %7 = cir.call @goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc169)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc174)
    %10 = cir.const #cir.int<67> : !s32i loc(#loc175)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc176)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc176)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc176)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc250)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc180)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc181)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc181)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc183)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc251)
    %22 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc184)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc186)
    %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc184)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    cir.br ^bb2 loc(#loc173)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc157)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_21.c":0:0)
#loc1 = loc("CWE665_Improper_Initialization__char_cat_21.c":24:1)
#loc2 = loc("CWE665_Improper_Initialization__char_cat_21.c":24:24)
#loc3 = loc("CWE665_Improper_Initialization__char_cat_21.c":26:1)
#loc4 = loc("CWE665_Improper_Initialization__char_cat_21.c":34:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_21.c":27:1)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_21.c":28:5)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_21.c":32:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_21.c":28:8)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_21.c":29:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_21.c":33:12)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_21.c":33:5)
#loc14 = loc("/usr/include/string.h":149:1)
#loc15 = loc("/usr/include/string.h":150:14)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_21.c":36:1)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_21.c":51:1)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_21.c":44:9)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_21.c":44:24)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_21.c":38:5)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_21.c":38:12)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_21.c":39:5)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_21.c":39:24)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_21.c":40:12)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_21.c":40:5)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_21.c":41:17)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_21.c":41:5)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_21.c":42:22)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_21.c":42:12)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_21.c":42:5)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_21.c":42:26)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_21.c":43:5)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_21.c":50:5)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_21.c":45:16)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_21.c":45:24)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_21.c":45:29)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_21.c":45:33)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_21.c":45:9)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_21.c":45:34)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_21.c":46:25)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_21.c":46:16)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_21.c":46:20)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_21.c":46:9)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_21.c":48:9)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_21.c":48:16)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_21.c":48:22)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_21.c":49:19)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_21.c":49:9)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_21.c":122:1)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_21.c":126:1)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_21.c":124:5)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_21.c":124:14)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_21.c":125:5)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_21.c":125:14)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_21.c":143:15)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_21.c":145:15)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_21.c":148:15)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_21.c":150:15)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_21.c":138:1)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_21.c":153:1)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_21.c":139:1)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_21.c":141:27)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_21.c":141:22)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_21.c":141:5)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_21.c":143:5)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_21.c":144:5)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_21.c":144:54)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_21.c":145:5)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_21.c":148:5)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_21.c":149:5)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_21.c":149:53)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_21.c":150:5)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_21.c":152:12)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_21.c":152:5)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_21.c":58:1)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_21.c":58:29)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_21.c":67:19)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_21.c":62:1)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_21.c":75:1)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_21.c":63:1)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_21.c":64:5)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_21.c":73:5)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_21.c":64:8)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_21.c":65:5)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_21.c":68:5)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_21.c":70:5)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_21.c":67:9)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_21.c":72:19)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_21.c":72:9)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_21.c":72:14)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_21.c":72:15)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_21.c":74:12)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_21.c":74:5)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_21.c":77:1)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_21.c":92:1)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_21.c":85:9)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_21.c":85:24)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_21.c":79:5)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_21.c":79:12)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_21.c":80:5)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_21.c":80:24)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_21.c":81:12)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_21.c":81:5)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_21.c":82:22)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_21.c":82:5)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_21.c":83:27)
#loc119 = loc("CWE665_Improper_Initialization__char_cat_21.c":83:12)
#loc120 = loc("CWE665_Improper_Initialization__char_cat_21.c":83:5)
#loc121 = loc("CWE665_Improper_Initialization__char_cat_21.c":83:31)
#loc122 = loc("CWE665_Improper_Initialization__char_cat_21.c":84:5)
#loc123 = loc("CWE665_Improper_Initialization__char_cat_21.c":91:5)
#loc124 = loc("CWE665_Improper_Initialization__char_cat_21.c":86:16)
#loc125 = loc("CWE665_Improper_Initialization__char_cat_21.c":86:24)
#loc126 = loc("CWE665_Improper_Initialization__char_cat_21.c":86:29)
#loc127 = loc("CWE665_Improper_Initialization__char_cat_21.c":86:33)
#loc128 = loc("CWE665_Improper_Initialization__char_cat_21.c":86:9)
#loc129 = loc("CWE665_Improper_Initialization__char_cat_21.c":86:34)
#loc130 = loc("CWE665_Improper_Initialization__char_cat_21.c":87:25)
#loc131 = loc("CWE665_Improper_Initialization__char_cat_21.c":87:16)
#loc132 = loc("CWE665_Improper_Initialization__char_cat_21.c":87:20)
#loc133 = loc("CWE665_Improper_Initialization__char_cat_21.c":87:9)
#loc134 = loc("CWE665_Improper_Initialization__char_cat_21.c":89:9)
#loc135 = loc("CWE665_Improper_Initialization__char_cat_21.c":89:16)
#loc136 = loc("CWE665_Improper_Initialization__char_cat_21.c":89:22)
#loc137 = loc("CWE665_Improper_Initialization__char_cat_21.c":90:19)
#loc138 = loc("CWE665_Improper_Initialization__char_cat_21.c":90:9)
#loc139 = loc("CWE665_Improper_Initialization__char_cat_21.c":59:1)
#loc140 = loc("CWE665_Improper_Initialization__char_cat_21.c":59:29)
#loc141 = loc("CWE665_Improper_Initialization__char_cat_21.c":95:1)
#loc142 = loc("CWE665_Improper_Initialization__char_cat_21.c":103:1)
#loc145 = loc("CWE665_Improper_Initialization__char_cat_21.c":96:1)
#loc146 = loc("CWE665_Improper_Initialization__char_cat_21.c":97:5)
#loc147 = loc("CWE665_Improper_Initialization__char_cat_21.c":101:5)
#loc148 = loc("CWE665_Improper_Initialization__char_cat_21.c":97:8)
#loc149 = loc("CWE665_Improper_Initialization__char_cat_21.c":98:5)
#loc150 = loc("CWE665_Improper_Initialization__char_cat_21.c":100:19)
#loc151 = loc("CWE665_Improper_Initialization__char_cat_21.c":100:9)
#loc152 = loc("CWE665_Improper_Initialization__char_cat_21.c":100:14)
#loc153 = loc("CWE665_Improper_Initialization__char_cat_21.c":100:15)
#loc154 = loc("CWE665_Improper_Initialization__char_cat_21.c":102:12)
#loc155 = loc("CWE665_Improper_Initialization__char_cat_21.c":102:5)
#loc156 = loc("CWE665_Improper_Initialization__char_cat_21.c":105:1)
#loc157 = loc("CWE665_Improper_Initialization__char_cat_21.c":120:1)
#loc158 = loc("CWE665_Improper_Initialization__char_cat_21.c":113:9)
#loc159 = loc("CWE665_Improper_Initialization__char_cat_21.c":113:24)
#loc160 = loc("CWE665_Improper_Initialization__char_cat_21.c":107:5)
#loc161 = loc("CWE665_Improper_Initialization__char_cat_21.c":107:12)
#loc162 = loc("CWE665_Improper_Initialization__char_cat_21.c":108:5)
#loc163 = loc("CWE665_Improper_Initialization__char_cat_21.c":108:24)
#loc164 = loc("CWE665_Improper_Initialization__char_cat_21.c":109:12)
#loc165 = loc("CWE665_Improper_Initialization__char_cat_21.c":109:5)
#loc166 = loc("CWE665_Improper_Initialization__char_cat_21.c":110:22)
#loc167 = loc("CWE665_Improper_Initialization__char_cat_21.c":110:5)
#loc168 = loc("CWE665_Improper_Initialization__char_cat_21.c":111:27)
#loc169 = loc("CWE665_Improper_Initialization__char_cat_21.c":111:12)
#loc170 = loc("CWE665_Improper_Initialization__char_cat_21.c":111:5)
#loc171 = loc("CWE665_Improper_Initialization__char_cat_21.c":111:31)
#loc172 = loc("CWE665_Improper_Initialization__char_cat_21.c":112:5)
#loc173 = loc("CWE665_Improper_Initialization__char_cat_21.c":119:5)
#loc174 = loc("CWE665_Improper_Initialization__char_cat_21.c":114:16)
#loc175 = loc("CWE665_Improper_Initialization__char_cat_21.c":114:24)
#loc176 = loc("CWE665_Improper_Initialization__char_cat_21.c":114:29)
#loc177 = loc("CWE665_Improper_Initialization__char_cat_21.c":114:33)
#loc178 = loc("CWE665_Improper_Initialization__char_cat_21.c":114:9)
#loc179 = loc("CWE665_Improper_Initialization__char_cat_21.c":114:34)
#loc180 = loc("CWE665_Improper_Initialization__char_cat_21.c":115:25)
#loc181 = loc("CWE665_Improper_Initialization__char_cat_21.c":115:16)
#loc182 = loc("CWE665_Improper_Initialization__char_cat_21.c":115:20)
#loc183 = loc("CWE665_Improper_Initialization__char_cat_21.c":115:9)
#loc184 = loc("CWE665_Improper_Initialization__char_cat_21.c":117:9)
#loc185 = loc("CWE665_Improper_Initialization__char_cat_21.c":117:16)
#loc186 = loc("CWE665_Improper_Initialization__char_cat_21.c":117:22)
#loc187 = loc("CWE665_Improper_Initialization__char_cat_21.c":118:19)
#loc188 = loc("CWE665_Improper_Initialization__char_cat_21.c":118:9)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc192 = loc(fused[#loc8, #loc9])
#loc193 = loc(fused[#loc11, #loc9])
#loc194 = loc(fused[#loc13, #loc12])
#loc195 = loc(fused[#loc14, #loc15])
#loc196 = loc(fused[#loc16, #loc17])
#loc197 = loc(fused[#loc18, #loc19])
#loc198 = loc(fused[#loc20, #loc21])
#loc199 = loc(fused[#loc22, #loc23])
#loc200 = loc(fused[#loc24, #loc25])
#loc201 = loc(fused[#loc27, #loc26])
#loc202 = loc(fused[#loc29, #loc28])
#loc203 = loc(fused[#loc32, #loc33])
#loc204 = loc(fused[#loc34, #loc35])
#loc205 = loc(fused[#loc40, #loc41])
#loc206 = loc(fused[#loc45, #loc42])
#loc207 = loc(fused[#loc51, #loc52])
#loc208 = loc(fused[#loc53, #loc54])
#loc209 = loc(fused[#loc55, #loc56])
#loc210 = loc(fused[#loc57, #loc58])
#loc211 = loc(fused[#loc59, #loc60])
#loc212 = loc(fused[#loc65, #loc66])
#loc215 = loc(fused[#loc76, #loc77])
#loc216 = loc(fused[#loc80, #loc81])
#loc217 = loc(fused[#loc84, #loc83])
#loc218 = loc(fused[#loc85, #loc86])
#loc219 = loc(fused[#loc88, #loc89])
#loc221 = loc(fused[#loc93, #loc94])
#loc222 = loc(fused[#loc96, #loc97, #loc98, #loc94])
#loc223 = loc(fused[#loc101, #loc100])
#loc224 = loc(fused[#loc105, #loc104])
#loc225 = loc(fused[#loc106, #loc107])
#loc226 = loc(fused[#loc108, #loc109])
#loc227 = loc(fused[#loc110, #loc111])
#loc228 = loc(fused[#loc112, #loc113])
#loc229 = loc(fused[#loc115, #loc114])
#loc230 = loc(fused[#loc117, #loc116])
#loc231 = loc(fused[#loc120, #loc121])
#loc232 = loc(fused[#loc122, #loc123])
#loc233 = loc(fused[#loc128, #loc129])
#loc234 = loc(fused[#loc133, #loc130])
#loc235 = loc(fused[#loc139, #loc140])
#loc236 = loc(fused[#loc141, #loc142])
#loc238 = loc(fused[#loc146, #loc147])
#loc239 = loc(fused[#loc149, #loc147])
#loc240 = loc(fused[#loc151, #loc150])
#loc241 = loc(fused[#loc155, #loc154])
#loc242 = loc(fused[#loc156, #loc157])
#loc243 = loc(fused[#loc158, #loc159])
#loc244 = loc(fused[#loc160, #loc161])
#loc245 = loc(fused[#loc162, #loc163])
#loc246 = loc(fused[#loc165, #loc164])
#loc247 = loc(fused[#loc167, #loc166])
#loc248 = loc(fused[#loc170, #loc171])
#loc249 = loc(fused[#loc172, #loc173])
#loc250 = loc(fused[#loc178, #loc179])
#loc251 = loc(fused[#loc183, #loc180])
