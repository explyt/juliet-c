!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc25 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":38:7)
#loc198 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":48:7)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":170:10)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":170:14)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":170:20)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":170:32)
#loc250 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":29:7)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc340 = loc(fused[#loc232, #loc233])
#loc341 = loc(fused[#loc234, #loc235])
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base = !cir.struct<class "CWE23_Relative_Path_Traversal__char_listen_socket_open_82::CWE23_Relative_Path_Traversal__char_listen_socket_open_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad = !cir.struct<class "CWE23_Relative_Path_Traversal__char_listen_socket_open_82::CWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad" {!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base} #cir.record.decl.ast>
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B = !cir.struct<class "CWE23_Relative_Path_Traversal__char_listen_socket_open_82::CWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B" {!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_82L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc251)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_823badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc252)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc253)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc254)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc255)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc257)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc258)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc259)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc260)
  cir.func private @close(!s32i) -> !s32i loc(#loc261)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc262)
  cir.func linkonce_odr @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8261CWE23_Relative_Path_Traversal__char_listen_socket_open_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad> loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":38:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc25)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>> loc(#loc25)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad> loc(#loc25)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc25)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>) -> () extra(#fn_attr) loc(#loc25)
    %3 = cir.vtable.address_point(@_ZTVN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8261CWE23_Relative_Path_Traversal__char_listen_socket_open_82_badE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc263)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc25)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc25)
    cir.return loc(#loc25)
  } loc(#loc25)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc264)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc252)
    %2 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc267)
    %3 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_823badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc252)
    cir.copy %3 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc252)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.scope {
      %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc270)
      %18 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc271)
      %19 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc272)
      %20 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc273)
      %21 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc274)
      %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc275)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc47)
      %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc47)
      cir.store %24, %20 : !s32i, !cir.ptr<!s32i> loc(#loc273)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc49)
      cir.store %26, %21 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
      %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
      cir.store %29, %22 : !u64i, !cir.ptr<!u64i> loc(#loc275)
      cir.scope {
        cir.do {
          %30 = cir.const #cir.int<2> : !s32i loc(#loc56)
          %31 = cir.const #cir.int<1> : !u32i loc(#loc57)
          %32 = cir.cast(integral, %31 : !u32i), !s32i loc(#loc57)
          %33 = cir.const #cir.int<6> : !u32i loc(#loc58)
          %34 = cir.cast(integral, %33 : !u32i), !s32i loc(#loc58)
          %35 = cir.call @socket(%30, %32, %34) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
          cir.store %35, %20 : !s32i, !cir.ptr<!s32i> loc(#loc277)
          cir.scope {
            %88 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc64)
            %89 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %90 = cir.unary(minus, %89) : !s32i, !s32i loc(#loc65)
            %91 = cir.cmp(eq, %88, %90) : !s32i, !cir.bool loc(#loc279)
            cir.if %91 {
              cir.break loc(#loc67)
            } loc(#loc280)
          } loc(#loc278)
          %36 = cir.cast(bitcast, %18 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc281)
          %37 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %38 = cir.const #cir.int<16> : !u64i loc(#loc282)
          cir.libc.memset %38 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc283)
          %39 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc75)
          %41 = cir.get_member %18[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc284)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %43 = cir.cast(integral, %42 : !s32i), !u32i loc(#loc78)
          %44 = cir.get_member %18[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
          %45 = cir.get_member %44[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
          cir.store %43, %45 : !u32i, !cir.ptr<!u32i> loc(#loc285)
          %46 = cir.const #cir.int<27015> : !s32i loc(#loc82)
          %47 = cir.cast(integral, %46 : !s32i), !u16i loc(#loc82)
          %48 = cir.call @htons(%47) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc83)
          %49 = cir.get_member %18[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
          cir.store %48, %49 : !u16i, !cir.ptr<!u16i> loc(#loc286)
          cir.scope {
            %88 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %89 = cir.cast(bitcast, %18 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc288)
            %90 = cir.const #cir.int<16> : !u64i loc(#loc289)
            %91 = cir.cast(integral, %90 : !u64i), !u32i loc(#loc289)
            %92 = cir.call @bind(%88, %89, %91) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc94)
            %93 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %94 = cir.unary(minus, %93) : !s32i, !s32i loc(#loc95)
            %95 = cir.cmp(eq, %92, %94) : !s32i, !cir.bool loc(#loc290)
            cir.if %95 {
              cir.break loc(#loc97)
            } loc(#loc291)
          } loc(#loc287)
          cir.scope {
            %88 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %89 = cir.const #cir.int<5> : !s32i loc(#loc101)
            %90 = cir.call @listen(%88, %89) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc102)
            %91 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %92 = cir.unary(minus, %91) : !s32i, !s32i loc(#loc103)
            %93 = cir.cmp(eq, %90, %92) : !s32i, !cir.bool loc(#loc293)
            cir.if %93 {
              cir.break loc(#loc105)
            } loc(#loc294)
          } loc(#loc292)
          %50 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc107)
          %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc108)
          %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc109)
          cir.store %53, %21 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          cir.scope {
            %88 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %89 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %90 = cir.unary(minus, %89) : !s32i, !s32i loc(#loc115)
            %91 = cir.cmp(eq, %88, %90) : !s32i, !cir.bool loc(#loc297)
            cir.if %91 {
              cir.break loc(#loc117)
            } loc(#loc298)
          } loc(#loc296)
          %54 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
          %56 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc120)
          %57 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc121)
          %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc299)
          %59 = cir.const #cir.int<1> : !u64i loc(#loc300)
          %60 = cir.const #cir.int<4096> : !s32i loc(#loc126)
          %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc126)
          %62 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc127)
          %63 = cir.binop(sub, %61, %62) : !u64i loc(#loc301)
          %64 = cir.const #cir.int<1> : !s32i loc(#loc128)
          %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc128)
          %66 = cir.binop(sub, %63, %65) : !u64i loc(#loc302)
          %67 = cir.binop(mul, %59, %66) : !u64i loc(#loc303)
          %68 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %69 = cir.call @recv(%54, %58, %67, %68) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc131)
          %70 = cir.cast(integral, %69 : !s64i), !s32i loc(#loc131)
          cir.store %70, %17 : !s32i, !cir.ptr<!s32i> loc(#loc304)
          cir.scope {
            %88 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc136)
            %89 = cir.const #cir.int<1> : !s32i loc(#loc137)
            %90 = cir.unary(minus, %89) : !s32i, !s32i loc(#loc137)
            %91 = cir.cmp(eq, %88, %90) : !s32i, !cir.bool loc(#loc306)
            %92 = cir.ternary(%91, true {
              %93 = cir.const #true loc(#loc138)
              cir.yield %93 : !cir.bool loc(#loc138)
            }, false {
              %93 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %94 = cir.const #cir.int<0> : !s32i loc(#loc140)
              %95 = cir.cmp(eq, %93, %94) : !s32i, !cir.bool loc(#loc307)
              %96 = cir.ternary(%95, true {
                %97 = cir.const #true loc(#loc138)
                cir.yield %97 : !cir.bool loc(#loc138)
              }, false {
                %97 = cir.const #false loc(#loc138)
                cir.yield %97 : !cir.bool loc(#loc138)
              }) : (!cir.bool) -> !cir.bool loc(#loc138)
              cir.yield %96 : !cir.bool loc(#loc138)
            }) : (!cir.bool) -> !cir.bool loc(#loc138)
            cir.if %92 {
              cir.break loc(#loc142)
            } loc(#loc308)
          } loc(#loc305)
          %71 = cir.const #cir.int<0> : !s8i loc(#loc143)
          %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
          %73 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc145)
          %74 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %75 = cir.cast(integral, %74 : !s32i), !u64i loc(#loc146)
          %76 = cir.const #cir.int<1> : !u64i loc(#loc309)
          %77 = cir.binop(div, %75, %76) : !u64i loc(#loc310)
          %78 = cir.binop(add, %73, %77) : !u64i loc(#loc311)
          %79 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %78 : !u64i), !cir.ptr<!s8i> loc(#loc149)
          cir.store %71, %79 : !s8i, !cir.ptr<!s8i> loc(#loc312)
          %80 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
          %81 = cir.const #cir.int<13> : !s8i loc(#loc151)
          %82 = cir.cast(integral, %81 : !s8i), !s32i loc(#loc151)
          %83 = cir.call @strchr(%80, %82) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
          cir.store %83, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc313)
          cir.scope {
            %88 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
            %89 = cir.cast(ptr_to_bool, %88 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
            cir.if %89 {
              %90 = cir.const #cir.int<0> : !s8i loc(#loc159)
              %91 = cir.load deref %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
              cir.store %90, %91 : !s8i, !cir.ptr<!s8i> loc(#loc316)
            } loc(#loc315)
          } loc(#loc314)
          %84 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
          %85 = cir.const #cir.int<10> : !s8i loc(#loc163)
          %86 = cir.cast(integral, %85 : !s8i), !s32i loc(#loc163)
          %87 = cir.call @strchr(%84, %86) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
          cir.store %87, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
          cir.scope {
            %88 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
            %89 = cir.cast(ptr_to_bool, %88 : !cir.ptr<!s8i>), !cir.bool loc(#loc169)
            cir.if %89 {
              %90 = cir.const #cir.int<0> : !s8i loc(#loc171)
              %91 = cir.load deref %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
              cir.store %90, %91 : !s8i, !cir.ptr<!s8i> loc(#loc320)
            } loc(#loc319)
          } loc(#loc318)
          cir.yield loc(#loc55)
        } while {
          %30 = cir.const #cir.int<0> : !s32i loc(#loc174)
          %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc174)
          cir.condition(%31) loc(#loc174)
        } loc(#loc276)
      } loc(#loc276)
      cir.scope {
        %30 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc178)
        %33 = cir.cmp(ne, %30, %32) : !s32i, !cir.bool loc(#loc322)
        cir.if %33 {
          %34 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %35 = cir.call @close(%34) : (!s32i) -> !s32i loc(#loc181)
        } loc(#loc323)
      } loc(#loc321)
      cir.scope {
        %30 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc184)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc185)
        %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc185)
        %33 = cir.cmp(ne, %30, %32) : !s32i, !cir.bool loc(#loc325)
        cir.if %33 {
          %34 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc187)
          %35 = cir.call @close(%34) : (!s32i) -> !s32i loc(#loc188)
        } loc(#loc326)
      } loc(#loc324)
    } loc(#loc269)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc327)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc267)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad> loc(#loc327)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8261CWE23_Relative_Path_Traversal__char_listen_socket_open_82_badC2Ev(%7) : (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad>) -> () extra(#fn_attr) loc(#loc35)
    %8 = cir.base_class_addr(%7 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc189)
    cir.store %8, %2 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>> loc(#loc267)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc190)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>> loc(#loc190)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>> loc(#loc190)
    %13 = cir.vtable.address_point( %12 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>> loc(#loc190)
    %14 = cir.load align(8) %13 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>> loc(#loc190)
    cir.call %14(%9, %10) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>) -> () loc(#loc192)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc193)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>), !cir.ptr<!void> loc(#loc193)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc194)
    cir.return loc(#loc31)
  } loc(#loc265)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc197)
  cir.func linkonce_odr @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8265CWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B> loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":48:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc198)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>> loc(#loc198)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B> loc(#loc198)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc198)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>) -> () extra(#fn_attr) loc(#loc198)
    %3 = cir.vtable.address_point(@_ZTVN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8265CWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2BE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc329)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc198)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc198)
    cir.return loc(#loc198)
  } loc(#loc198)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc331)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc251)
    %2 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc332)
    %3 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_82L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc251)
    cir.copy %3 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc251)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc207)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc209)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc197)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc197)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc209)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc334)
    %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc332)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B> loc(#loc334)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8265CWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2BC2Ev(%12) : (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B>) -> () extra(#fn_attr) loc(#loc206)
    %13 = cir.base_class_addr(%12 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc211)
    cir.store %13, %2 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>> loc(#loc332)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc212)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %16 = cir.cast(bitcast, %14 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>> loc(#loc212)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>> loc(#loc212)
    %18 = cir.vtable.address_point( %17 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>> loc(#loc212)
    %19 = cir.load align(8) %18 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>> loc(#loc212)
    cir.call %19(%14, %15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>)>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!s8i>) -> () loc(#loc214)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc215)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>), !cir.ptr<!void> loc(#loc215)
    cir.call @_ZdlPv(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc216)
    cir.return loc(#loc202)
  } loc(#loc330)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_82L7goodG2BEv() : () -> () loc(#loc219)
    cir.return loc(#loc218)
  } loc(#loc335)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc336)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc337)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc338)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc229)
  cir.func @main(%arg0: !s32i loc(fused[#loc232, #loc233]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc234, #loc235])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc340)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc341)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc231)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc236)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc237)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc238)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc238)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc239)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc226)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc226)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc240)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_824goodEv() : () -> () loc(#loc241)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc227)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc242)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc228)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc228)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc243)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_823badEv() : () -> () loc(#loc244)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc229)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc229)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc246)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc342)
    cir.return %15 : !s32i loc(#loc342)
  } loc(#loc339)
  cir.global linkonce_odr dsolocal @_ZTVN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc343)
  cir.func linkonce_odr @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":29:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc250)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>> loc(#loc250)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base> loc(#loc250)
    %2 = cir.vtable.address_point(@_ZTVN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc343)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_open_823A3ACWE23_Relative_Path_Traversal__char_listen_socket_open_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc250)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc250)
    cir.return loc(#loc250)
  } loc(#loc250)
  cir.global "private" external @_ZTVN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8261CWE23_Relative_Path_Traversal__char_listen_socket_open_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc263)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc248)
  cir.global linkonce_odr comdat @_ZTSN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE = #cir.const_array<"N57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE" : !cir.array<!s8i x 125>> : !cir.array<!s8i x 125> {alignment = 1 : i64} loc(#loc248)
  cir.global constant external @_ZTIN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8262CWE23_Relative_Path_Traversal__char_listen_socket_open_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc248)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN57CWE23_Relative_Path_Traversal__char_listen_socket_open_8265CWE23_Relative_Path_Traversal__char_listen_socket_open_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc329)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":143:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":143:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":49:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":49:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc24 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc26 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":38:1)
#loc27 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":42:1)
#loc28 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc29 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":46:1)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":133:1)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":48:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":48:12)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":130:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":130:86)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":50:12)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":50:5)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":51:5)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":129:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":56:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":56:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":57:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":57:28)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":58:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":58:15)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":59:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":59:31)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":60:9)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":60:31)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":61:9)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":61:37)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":61:26)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":61:33)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":62:9)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":114:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":72:35)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":72:44)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":72:57)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":72:28)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":72:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":72:68)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":73:13)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":76:13)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":73:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":73:33)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":74:13)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":75:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:20)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:21)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:30)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:33)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:47)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:13)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":77:48)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":78:34)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":78:13)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":79:39)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":79:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":80:38)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":80:32)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":80:13)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":80:46)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:13)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":84:13)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:22)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:54)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:55)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:64)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:78)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":81:84)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":82:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":83:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":85:13)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":88:13)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":85:24)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":85:38)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":85:17)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":85:57)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":86:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":87:17)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":89:35)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":89:49)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":89:55)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":89:28)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":89:13)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":89:59)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":90:13)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":93:13)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":90:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":90:33)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":91:13)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":92:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:31)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:54)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:61)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:59)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:45)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:68)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:71)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:82)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:87)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:102)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:112)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:113)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:116)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:26)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":95:117)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":96:13)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":99:13)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":96:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":96:31)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":96:44)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":96:47)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":96:61)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":97:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":98:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:57)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:13)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:18)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:28)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:41)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:52)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":101:53)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":103:30)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":103:36)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":103:23)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":103:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":103:40)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":104:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":107:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":104:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":105:13)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":106:28)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":106:18)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":106:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":108:30)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":108:36)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":108:23)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":108:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":108:40)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":109:13)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":112:13)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":109:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":110:13)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":111:28)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":111:18)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":111:17)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":114:16)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":115:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":118:9)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":115:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":115:29)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":116:9)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":117:26)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":117:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":119:9)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":122:9)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":119:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":119:29)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":120:9)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":121:26)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":121:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":130:82)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":131:5)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":131:24)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":131:17)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":132:12)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":46:6)
#loc195 = loc("/usr/include/string.h":149:1)
#loc196 = loc("/usr/include/string.h":150:14)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":146:18)
#loc199 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":48:1)
#loc200 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":52:1)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":140:1)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":150:1)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":142:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":142:12)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":147:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":147:86)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":144:12)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":144:5)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":146:5)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":146:12)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":147:82)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":148:5)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":148:24)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":148:17)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":149:12)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":140:13)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":152:1)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":155:1)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":154:5)
#loc220 = loc("/usr/include/stdlib.h":575:1)
#loc221 = loc("/usr/include/stdlib.h":575:41)
#loc222 = loc("/usr/include/time.h":76:1)
#loc223 = loc("/usr/include/time.h":76:38)
#loc224 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc225 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":175:15)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":177:15)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":180:15)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":182:15)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":170:1)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":185:1)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":171:1)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":173:27)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":173:22)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":173:5)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":175:5)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":176:5)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":177:5)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":180:5)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":181:5)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":182:5)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":184:12)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_82a.cpp":184:5)
#loc248 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":29:1)
#loc249 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_open_82.h":34:1)
#loc251 = loc(fused[#loc1, #loc2])
#loc252 = loc(fused[#loc3, #loc4])
#loc253 = loc(fused[#loc5, #loc6])
#loc254 = loc(fused[#loc7, #loc8])
#loc255 = loc(fused[#loc9, #loc10])
#loc256 = loc(fused[#loc11, #loc12])
#loc257 = loc(fused[#loc13, #loc14])
#loc258 = loc(fused[#loc15, #loc16])
#loc259 = loc(fused[#loc17, #loc18])
#loc260 = loc(fused[#loc19, #loc20])
#loc261 = loc(fused[#loc21, #loc22])
#loc262 = loc(fused[#loc23, #loc24])
#loc263 = loc(fused[#loc26, #loc27])
#loc264 = loc(fused[#loc28, #loc29])
#loc265 = loc(fused[#loc30, #loc31])
#loc266 = loc(fused[#loc32, #loc33])
#loc267 = loc(fused[#loc34, #loc35])
#loc268 = loc(fused[#loc37, #loc36])
#loc269 = loc(fused[#loc38, #loc39])
#loc270 = loc(fused[#loc40, #loc41])
#loc271 = loc(fused[#loc42, #loc43])
#loc272 = loc(fused[#loc44, #loc45])
#loc273 = loc(fused[#loc46, #loc47])
#loc274 = loc(fused[#loc48, #loc49])
#loc275 = loc(fused[#loc50, #loc51])
#loc276 = loc(fused[#loc54, #loc55])
#loc277 = loc(fused[#loc60, #loc61])
#loc278 = loc(fused[#loc62, #loc63])
#loc279 = loc(fused[#loc64, #loc65])
#loc280 = loc(fused[#loc66, #loc63])
#loc281 = loc(fused[#loc68, #loc69])
#loc282 = loc(fused[#loc71, #loc72])
#loc283 = loc(fused[#loc73, #loc74])
#loc284 = loc(fused[#loc77, #loc75])
#loc285 = loc(fused[#loc81, #loc78])
#loc286 = loc(fused[#loc85, #loc86])
#loc287 = loc(fused[#loc87, #loc88])
#loc288 = loc(fused[#loc90, #loc91])
#loc289 = loc(fused[#loc92, #loc93])
#loc290 = loc(fused[#loc94, #loc95])
#loc291 = loc(fused[#loc96, #loc88])
#loc292 = loc(fused[#loc98, #loc99])
#loc293 = loc(fused[#loc102, #loc103])
#loc294 = loc(fused[#loc104, #loc99])
#loc295 = loc(fused[#loc110, #loc111])
#loc296 = loc(fused[#loc112, #loc113])
#loc297 = loc(fused[#loc114, #loc115])
#loc298 = loc(fused[#loc116, #loc113])
#loc299 = loc(fused[#loc122, #loc123])
#loc300 = loc(fused[#loc124, #loc125])
#loc301 = loc(fused[#loc126, #loc127])
#loc302 = loc(fused[#loc126, #loc128])
#loc303 = loc(fused[#loc124, #loc129])
#loc304 = loc(fused[#loc132, #loc133])
#loc305 = loc(fused[#loc134, #loc135])
#loc306 = loc(fused[#loc136, #loc137])
#loc307 = loc(fused[#loc139, #loc140])
#loc308 = loc(fused[#loc141, #loc135])
#loc309 = loc(fused[#loc147, #loc148])
#loc310 = loc(fused[#loc146, #loc148])
#loc311 = loc(fused[#loc145, #loc148])
#loc312 = loc(fused[#loc144, #loc143])
#loc313 = loc(fused[#loc153, #loc154])
#loc314 = loc(fused[#loc155, #loc156])
#loc315 = loc(fused[#loc158, #loc156])
#loc316 = loc(fused[#loc161, #loc159])
#loc317 = loc(fused[#loc165, #loc166])
#loc318 = loc(fused[#loc167, #loc168])
#loc319 = loc(fused[#loc170, #loc168])
#loc320 = loc(fused[#loc173, #loc171])
#loc321 = loc(fused[#loc175, #loc176])
#loc322 = loc(fused[#loc177, #loc178])
#loc323 = loc(fused[#loc179, #loc176])
#loc324 = loc(fused[#loc182, #loc183])
#loc325 = loc(fused[#loc184, #loc185])
#loc326 = loc(fused[#loc186, #loc183])
#loc327 = loc(fused[#loc189, #loc35])
#loc328 = loc(fused[#loc195, #loc196])
#loc329 = loc(fused[#loc199, #loc200])
#loc330 = loc(fused[#loc201, #loc202])
#loc331 = loc(fused[#loc203, #loc204])
#loc332 = loc(fused[#loc205, #loc206])
#loc333 = loc(fused[#loc208, #loc207])
#loc334 = loc(fused[#loc211, #loc206])
#loc335 = loc(fused[#loc217, #loc218])
#loc336 = loc(fused[#loc220, #loc221])
#loc337 = loc(fused[#loc222, #loc223])
#loc338 = loc(fused[#loc224, #loc225])
#loc339 = loc(fused[#loc230, #loc231])
#loc342 = loc(fused[#loc247, #loc246])
#loc343 = loc(fused[#loc248, #loc249])
