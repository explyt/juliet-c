!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc1)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_badData = #cir.ptr<null> : !cir.ptr<!void> {alignment = 8 : i64} loc(#loc55)
  cir.func no_proto private @CWE121_Stack_Based_Buffer_Overflow__CWE135_68b_badSink(...) loc(#loc56)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc59)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc1)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc1)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc1)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc60)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc13)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_badData : !cir.ptr<!cir.ptr<!void>> loc(#loc55)
    cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc61)
    %7 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc62)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc62)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc7)
  } loc(#loc57)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc64)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc65)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc63)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!void> {alignment = 8 : i64} loc(#loc66)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_goodB2GData = #cir.ptr<null> : !cir.ptr<!void> {alignment = 8 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto private @CWE121_Stack_Based_Buffer_Overflow__CWE135_68b_goodG2BSink(...) loc(#loc68)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc70)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc71)
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc27)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc27)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc72)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc37)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_goodG2BData : !cir.ptr<!cir.ptr<!void>> loc(#loc66)
    cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc73)
    %7 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc74)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc31)
  } loc(#loc69)
  cir.func no_proto private @CWE121_Stack_Based_Buffer_Overflow__CWE135_68b_goodB2GSink(...) loc(#loc75)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc78)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc49)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc49)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc49)
    cir.store %4, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc79)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc51)
    %6 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_68_goodB2GData : !cir.ptr<!cir.ptr<!void>> loc(#loc67)
    cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc80)
    %7 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_68b_goodB2GSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc81)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc81)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc44)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":39:20)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":25:1)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":25:8)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":32:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":32:61)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":42:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":36:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":37:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":37:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":39:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":40:61)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":40:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":41:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":41:60)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":74:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":78:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":76:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":76:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":77:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":77:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":26:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":26:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":27:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":27:8)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":58:20)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":49:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":49:65)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":53:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":61:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":55:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":55:12)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":56:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":56:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":58:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":59:65)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":59:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":60:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":60:64)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":50:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":50:65)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":64:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":72:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":66:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":66:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":67:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":67:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":69:20)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":69:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":70:65)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":70:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":71:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_68a.c":71:64)
#loc55 = loc(fused[#loc2, #loc3])
#loc56 = loc(fused[#loc4, #loc5])
#loc57 = loc(fused[#loc6, #loc7])
#loc58 = loc(fused[#loc8, #loc9])
#loc59 = loc(fused[#loc11, #loc10])
#loc60 = loc(fused[#loc12, #loc1])
#loc61 = loc(fused[#loc14, #loc13])
#loc62 = loc(fused[#loc15, #loc16])
#loc63 = loc(fused[#loc17, #loc18])
#loc64 = loc(fused[#loc19, #loc20])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc25, #loc26])
#loc68 = loc(fused[#loc28, #loc29])
#loc69 = loc(fused[#loc30, #loc31])
#loc70 = loc(fused[#loc32, #loc33])
#loc71 = loc(fused[#loc35, #loc34])
#loc72 = loc(fused[#loc36, #loc27])
#loc73 = loc(fused[#loc38, #loc37])
#loc74 = loc(fused[#loc39, #loc40])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc43, #loc44])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc48, #loc47])
#loc79 = loc(fused[#loc50, #loc49])
#loc80 = loc(fused[#loc52, #loc51])
#loc81 = loc(fused[#loc53, #loc54])
