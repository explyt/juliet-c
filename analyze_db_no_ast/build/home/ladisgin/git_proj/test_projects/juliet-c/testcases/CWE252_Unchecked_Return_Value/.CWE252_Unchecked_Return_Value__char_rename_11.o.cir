!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_rename_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrue(...) -> !s32i loc(#loc63)
  cir.func private  @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc64)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_rename_11_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc67)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc67)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc11)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc6)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc6)
        %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc14)
      } loc(#loc68)
    } loc(#loc66)
    cir.return loc(#loc8)
  } loc(#loc65)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_rename_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc70)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc71)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc69)
  cir.func no_proto private  @globalReturnsFalse(...) -> !s32i loc(#loc72)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc73)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc25)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc26)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc27)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc76)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc76)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc33)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc25)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc25)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc38)
      } else {
        cir.scope {
          %4 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc26)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc26)
          %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc27)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc27)
          %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc79)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc43)
          cir.if %11 {
            %12 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          } loc(#loc80)
        } loc(#loc78)
      } loc(#loc77)
    } loc(#loc75)
    cir.return loc(#loc30)
  } loc(#loc74)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc83)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc83)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc50)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc50)
      cir.if %3 {
        cir.scope {
          %4 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc55)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc55)
          %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc56)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc56)
          %8 = cir.call @rename(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc57)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc86)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc59)
          cir.if %11 {
            %12 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc62)
          } loc(#loc87)
        } loc(#loc85)
      } loc(#loc84)
    } loc(#loc82)
    cir.return loc(#loc47)
  } loc(#loc81)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_rename_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":160:1)
#loc4 = loc("/usr/include/stdio.h":160:58)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":38:16)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":38:35)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":33:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":40:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":35:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":39:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":35:8)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":35:26)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":36:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":38:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":77:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":81:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":79:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":79:11)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":80:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":80:11)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":52:19)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":57:20)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":57:40)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":59:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":47:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":62:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":49:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":61:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":49:8)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":49:27)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":50:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":53:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":55:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":52:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":57:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":60:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":57:13)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":57:66)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":57:63)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":58:9)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":59:13)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":65:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":75:1)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":67:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":74:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":67:8)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":67:26)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":68:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":70:9)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":73:9)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":70:20)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":70:40)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":70:13)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":70:66)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":70:63)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":71:9)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":72:23)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_rename_11.c":72:13)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc7, #loc8])
#loc66 = loc(fused[#loc9, #loc10])
#loc67 = loc(fused[#loc11, #loc12])
#loc68 = loc(fused[#loc13, #loc10])
#loc69 = loc(fused[#loc15, #loc16])
#loc70 = loc(fused[#loc17, #loc18])
#loc71 = loc(fused[#loc19, #loc20])
#loc72 = loc(fused[#loc21, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc29, #loc30])
#loc75 = loc(fused[#loc31, #loc32])
#loc76 = loc(fused[#loc33, #loc34])
#loc77 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc78 = loc(fused[#loc39, #loc40])
#loc79 = loc(fused[#loc41, #loc42])
#loc80 = loc(fused[#loc44, #loc40])
#loc81 = loc(fused[#loc46, #loc47])
#loc82 = loc(fused[#loc48, #loc49])
#loc83 = loc(fused[#loc50, #loc51])
#loc84 = loc(fused[#loc52, #loc49])
#loc85 = loc(fused[#loc53, #loc54])
#loc86 = loc(fused[#loc57, #loc58])
#loc87 = loc(fused[#loc60, #loc54])
