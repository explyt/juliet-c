!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc157)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc161)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc162)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc163)
    %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc165)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc166)
    %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc167)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc165)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc166)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc22)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc22)
    %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc22)
    %14 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc168)
    %15 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc22)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %16, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc24)
    %19 = cir.const #cir.int<8> : !u64i loc(#loc24)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc24)
    %21 = cir.alloca !u8i, !cir.ptr<!u8i>, %20 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc24)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc24)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    cir.store %23, %14 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %24 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc6)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    cir.store %25, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    cir.store %26, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc170)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %28 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc31)
    cir.store %27, %28 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc171)
    cir.br ^bb2 loc(#loc26)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %29 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc8)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    cir.store %30, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
    cir.br ^bb4 loc(#loc173)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %31 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc42)
    cir.store %32, %3 : !u64i, !cir.ptr<!u64i> loc(#loc176)
    cir.br ^bb7 loc(#loc175)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc45)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc177)
    cir.brcond %36 ^bb8, ^bb12 loc(#loc46)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc178)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %38 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %39 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc51)
    cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %43 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    %46 = cir.get_member %45[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc55)
    cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb10 loc(#loc41)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc41)
  ^bb11:  // pred: ^bb10
    %47 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %48 = cir.unary(inc, %47) : !u64i, !u64i loc(#loc57)
    cir.store %48, %3 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb7 loc(#loc175)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc39)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc182)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc183)
  ^bb16:  // pred: ^bb15
    %49 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc62)
    cir.store %50, %4 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb17 loc(#loc183)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %51 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc65)
    %54 = cir.cmp(lt, %51, %53) : !u64i, !cir.bool loc(#loc185)
    cir.brcond %54 ^bb18, ^bb22 loc(#loc66)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc186)
  ^bb19:  // pred: ^bb18
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!ty__twoIntsStruct>, %56 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %58 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %59 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!ty__twoIntsStruct>, %58 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    cir.copy %60 to %57 : !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    cir.br ^bb20 loc(#loc61)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc61)
  ^bb21:  // pred: ^bb20
    %61 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc74)
    cir.store %62, %4 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb17 loc(#loc183)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // pred: ^bb22
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %65 = cir.ptr_stride(%63 : !cir.ptr<!ty__twoIntsStruct>, %64 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.call @printStructLine(%65) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc78)
    cir.br ^bb24 loc(#loc59)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc37)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc34)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc4)
  } loc(#loc158)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc80)
  } loc(#loc188)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc193)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc194)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
    %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc197)
    %7 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc198)
    %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc199)
    cir.store %5, %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc197)
    cir.store %5, %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc198)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc102)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc102)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc102)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc102)
    %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc102)
    %14 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc200)
    %15 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc102)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    cir.store %16, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc104)
    %19 = cir.const #cir.int<8> : !u64i loc(#loc104)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc104)
    %21 = cir.alloca !u8i, !cir.ptr<!u8i>, %20 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    cir.store %23, %14 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %24 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc86)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    cir.store %25, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
    %26 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    cir.store %26, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc202)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
    %28 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.store %27, %28 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc203)
    cir.br ^bb2 loc(#loc106)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc204)
  ^bb3:  // pred: ^bb2
    %29 = cir.load deref %7 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc88)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %30, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
    cir.br ^bb4 loc(#loc205)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %31 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc122)
    cir.store %32, %3 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb7 loc(#loc207)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc125)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc209)
    cir.brcond %36 ^bb8, ^bb12 loc(#loc126)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc210)
  ^bb9:  // pred: ^bb8
    %37 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %38 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %39 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc51)
    cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %43 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %46 = cir.get_member %45[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc55)
    cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb10 loc(#loc121)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // pred: ^bb10
    %47 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %48 = cir.unary(inc, %47) : !u64i, !u64i loc(#loc135)
    cir.store %48, %3 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb7 loc(#loc207)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc119)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc214)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %49 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc140)
    cir.store %50, %4 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb17 loc(#loc215)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %51 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc143)
    %54 = cir.cmp(lt, %51, %53) : !u64i, !cir.bool loc(#loc217)
    cir.brcond %54 ^bb18, ^bb22 loc(#loc144)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc218)
  ^bb19:  // pred: ^bb18
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!ty__twoIntsStruct>, %56 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    %58 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %59 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!ty__twoIntsStruct>, %58 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    cir.copy %60 to %57 : !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    cir.br ^bb20 loc(#loc139)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc139)
  ^bb21:  // pred: ^bb20
    %61 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc152)
    cir.store %62, %4 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb17 loc(#loc215)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc139)
  ^bb23:  // pred: ^bb22
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %65 = cir.ptr_stride(%63 : !cir.ptr<!ty__twoIntsStruct>, %64 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    cir.call @printStructLine(%65) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc156)
    cir.br ^bb24 loc(#loc137)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc117)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc114)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc84)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":59:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":29:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":29:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":36:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":38:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":38:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":40:17)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":40:24)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":49:17)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":49:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":23:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":23:21)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":24:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":24:34)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":25:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":25:34)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":26:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":26:54)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":27:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":27:55)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":28:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":34:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":29:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":32:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":32:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":33:21)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":33:10)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":33:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":35:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":58:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":36:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":37:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":57:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":39:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":47:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":46:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:26)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:33)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:31)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":43:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":44:40)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":44:28)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":44:21)
#loc51 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":45:40)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":45:28)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":45:21)
#loc55 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:39)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":42:38)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":48:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":56:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":54:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:26)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:22)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:29)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:31)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":52:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:26)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:27)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:38)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":53:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:39)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":51:38)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:34)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:39)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:40)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":55:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":105:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":108:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":107:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":107:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":66:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":103:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":74:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":74:33)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":80:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":80:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":82:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":82:37)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":84:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":84:24)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":93:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":93:24)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":68:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":68:21)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":69:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":69:34)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":70:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":70:34)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":71:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":71:54)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":72:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":72:55)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":73:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":78:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":74:32)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":76:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":76:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":77:21)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":77:10)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":77:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":79:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":102:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":80:32)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":81:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":101:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":83:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":91:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:17)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":90:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:26)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:22)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:29)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:33)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:31)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":87:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":88:40)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":88:28)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":88:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":89:40)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":89:28)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":89:21)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:39)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":86:38)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":92:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":100:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:17)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":98:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:26)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:22)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:29)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:33)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:31)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":96:17)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:21)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:26)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:27)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:38)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":97:31)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:39)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":95:38)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:34)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:39)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:40)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_32.c":99:17)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc17, #loc18])
#loc166 = loc(fused[#loc19, #loc20])
#loc167 = loc(fused[#loc21, #loc22])
#loc168 = loc(fused[#loc23, #loc24])
#loc169 = loc(fused[#loc25, #loc26])
#loc170 = loc(fused[#loc29, #loc28])
#loc171 = loc(fused[#loc32, #loc30])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc38, #loc39])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc43, #loc42])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc47, #loc41])
#loc179 = loc(fused[#loc50, #loc48])
#loc180 = loc(fused[#loc54, #loc52])
#loc181 = loc(fused[#loc57, #loc56])
#loc182 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc60, #loc61])
#loc184 = loc(fused[#loc63, #loc62])
#loc185 = loc(fused[#loc64, #loc65])
#loc186 = loc(fused[#loc67, #loc61])
#loc187 = loc(fused[#loc74, #loc73])
#loc188 = loc(fused[#loc79, #loc80])
#loc189 = loc(fused[#loc81, #loc82])
#loc190 = loc(fused[#loc83, #loc84])
#loc191 = loc(fused[#loc85, #loc86])
#loc192 = loc(fused[#loc87, #loc88])
#loc193 = loc(fused[#loc89, #loc90])
#loc194 = loc(fused[#loc91, #loc92])
#loc195 = loc(fused[#loc93, #loc94])
#loc196 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc97, #loc98])
#loc198 = loc(fused[#loc99, #loc100])
#loc199 = loc(fused[#loc101, #loc102])
#loc200 = loc(fused[#loc103, #loc104])
#loc201 = loc(fused[#loc105, #loc106])
#loc202 = loc(fused[#loc109, #loc108])
#loc203 = loc(fused[#loc112, #loc110])
#loc204 = loc(fused[#loc113, #loc114])
#loc205 = loc(fused[#loc116, #loc117])
#loc206 = loc(fused[#loc118, #loc119])
#loc207 = loc(fused[#loc120, #loc121])
#loc208 = loc(fused[#loc123, #loc122])
#loc209 = loc(fused[#loc124, #loc125])
#loc210 = loc(fused[#loc127, #loc121])
#loc211 = loc(fused[#loc130, #loc128])
#loc212 = loc(fused[#loc133, #loc131])
#loc213 = loc(fused[#loc135, #loc134])
#loc214 = loc(fused[#loc136, #loc137])
#loc215 = loc(fused[#loc138, #loc139])
#loc216 = loc(fused[#loc141, #loc140])
#loc217 = loc(fused[#loc142, #loc143])
#loc218 = loc(fused[#loc145, #loc139])
#loc219 = loc(fused[#loc152, #loc151])
