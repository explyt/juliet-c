!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE843_Type_Confusion__short_64b_badSink(!cir.ptr<!void>) loc(#loc41)
  cir.func no_proto @CWE843_Type_Confusion__short_64_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc43)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc44)
    cir.scope {
      %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortBuffer", init] {alignment = 2 : i64} loc(#loc46)
      %4 = cir.const #cir.int<8> : !s32i loc(#loc12)
      %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc12)
      cir.store %5, %3 : !s16i, !cir.ptr<!s16i> loc(#loc46)
      %6 = cir.cast(bitcast, %3 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc47)
      cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc48)
    } loc(#loc45)
    %2 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!void>>), !cir.ptr<!void> loc(#loc49)
    cir.call @CWE843_Type_Confusion__short_64b_badSink(%2) : (!cir.ptr<!void>) -> () loc(#loc18)
    cir.return loc(#loc4)
  } loc(#loc42)
  cir.func no_proto @CWE843_Type_Confusion__short_64_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc51)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc50)
  cir.func private @CWE843_Type_Confusion__short_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc52)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc54)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc55)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc57)
      %4 = cir.const #cir.int<8> : !s32i loc(#loc34)
      cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc57)
      %5 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc58)
      cir.store %5, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc59)
    } loc(#loc56)
    %2 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!void>>), !cir.ptr<!void> loc(#loc60)
    cir.call @CWE843_Type_Confusion__short_64b_goodG2BSink(%2) : (!cir.ptr<!void>) -> () loc(#loc40)
    cir.return loc(#loc26)
  } loc(#loc53)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_64a.c":0:0)
#loc1 = loc("CWE843_Type_Confusion__short_64a.c":22:1)
#loc2 = loc("CWE843_Type_Confusion__short_64a.c":22:65)
#loc3 = loc("CWE843_Type_Confusion__short_64a.c":24:1)
#loc4 = loc("CWE843_Type_Confusion__short_64a.c":35:1)
#loc5 = loc("CWE843_Type_Confusion__short_64a.c":26:5)
#loc6 = loc("CWE843_Type_Confusion__short_64a.c":26:12)
#loc7 = loc("CWE843_Type_Confusion__short_64a.c":28:12)
#loc8 = loc("CWE843_Type_Confusion__short_64a.c":28:5)
#loc9 = loc("CWE843_Type_Confusion__short_64a.c":29:5)
#loc10 = loc("CWE843_Type_Confusion__short_64a.c":33:5)
#loc11 = loc("CWE843_Type_Confusion__short_64a.c":31:9)
#loc12 = loc("CWE843_Type_Confusion__short_64a.c":31:29)
#loc13 = loc("CWE843_Type_Confusion__short_64a.c":32:16)
#loc14 = loc("CWE843_Type_Confusion__short_64a.c":32:17)
#loc15 = loc("CWE843_Type_Confusion__short_64a.c":32:9)
#loc16 = loc("CWE843_Type_Confusion__short_64a.c":34:46)
#loc17 = loc("CWE843_Type_Confusion__short_64a.c":34:47)
#loc18 = loc("CWE843_Type_Confusion__short_64a.c":34:5)
#loc19 = loc("CWE843_Type_Confusion__short_64a.c":57:1)
#loc20 = loc("CWE843_Type_Confusion__short_64a.c":60:1)
#loc21 = loc("CWE843_Type_Confusion__short_64a.c":59:5)
#loc22 = loc("CWE843_Type_Confusion__short_64a.c":59:13)
#loc23 = loc("CWE843_Type_Confusion__short_64a.c":42:1)
#loc24 = loc("CWE843_Type_Confusion__short_64a.c":42:69)
#loc25 = loc("CWE843_Type_Confusion__short_64a.c":44:1)
#loc26 = loc("CWE843_Type_Confusion__short_64a.c":55:1)
#loc27 = loc("CWE843_Type_Confusion__short_64a.c":46:5)
#loc28 = loc("CWE843_Type_Confusion__short_64a.c":46:12)
#loc29 = loc("CWE843_Type_Confusion__short_64a.c":48:12)
#loc30 = loc("CWE843_Type_Confusion__short_64a.c":48:5)
#loc31 = loc("CWE843_Type_Confusion__short_64a.c":49:5)
#loc32 = loc("CWE843_Type_Confusion__short_64a.c":53:5)
#loc33 = loc("CWE843_Type_Confusion__short_64a.c":51:9)
#loc34 = loc("CWE843_Type_Confusion__short_64a.c":51:25)
#loc35 = loc("CWE843_Type_Confusion__short_64a.c":52:16)
#loc36 = loc("CWE843_Type_Confusion__short_64a.c":52:17)
#loc37 = loc("CWE843_Type_Confusion__short_64a.c":52:9)
#loc38 = loc("CWE843_Type_Confusion__short_64a.c":54:50)
#loc39 = loc("CWE843_Type_Confusion__short_64a.c":54:51)
#loc40 = loc("CWE843_Type_Confusion__short_64a.c":54:5)
#loc41 = loc(fused[#loc1, #loc2])
#loc42 = loc(fused[#loc3, #loc4])
#loc43 = loc(fused[#loc5, #loc6])
#loc44 = loc(fused[#loc8, #loc7])
#loc45 = loc(fused[#loc9, #loc10])
#loc46 = loc(fused[#loc11, #loc12])
#loc47 = loc(fused[#loc13, #loc14])
#loc48 = loc(fused[#loc15, #loc14])
#loc49 = loc(fused[#loc16, #loc17])
#loc50 = loc(fused[#loc19, #loc20])
#loc51 = loc(fused[#loc21, #loc22])
#loc52 = loc(fused[#loc23, #loc24])
#loc53 = loc(fused[#loc25, #loc26])
#loc54 = loc(fused[#loc27, #loc28])
#loc55 = loc(fused[#loc30, #loc29])
#loc56 = loc(fused[#loc31, #loc32])
#loc57 = loc(fused[#loc33, #loc34])
#loc58 = loc(fused[#loc35, #loc36])
#loc59 = loc(fused[#loc37, #loc36])
#loc60 = loc(fused[#loc38, #loc39])
