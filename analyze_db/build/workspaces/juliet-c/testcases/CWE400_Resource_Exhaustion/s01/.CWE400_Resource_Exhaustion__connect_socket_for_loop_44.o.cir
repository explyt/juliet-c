!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":44:21)
#loc7 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":44:25)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":128:25)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":128:29)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":152:25)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":152:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc307 = loc(fused[#loc6, #loc7])
#loc363 = loc(fused[#loc147, #loc148])
#loc377 = loc(fused[#loc181, #loc182])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc305)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc307)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc309)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc12)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
      cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc309)
      cir.scope {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc15)
        cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc311)
        cir.for : cond {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc17)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc312)
          cir.condition(%9) loc(#loc19)
        } body {
          cir.scope {
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          } loc(#loc313)
          cir.yield loc(#loc14)
        } step {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
          %7 = cir.unary(inc, %6) : !u64i, !u64i loc(#loc23)
          cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc314)
          cir.yield loc(#loc310)
        } loc(#loc310)
      } loc(#loc310)
    } loc(#loc308)
    cir.return loc(#loc5)
  } loc(#loc306)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc315)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc28)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc317)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc318)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc319)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc320)
  cir.func private @close(!s32i) -> !s32i loc(#loc321)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc324)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc44)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc324)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc46)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc327)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc328)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc329)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc330)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc55)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc329)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc62)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %15 = cir.const #cir.int<6> : !s32i loc(#loc64)
            %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc65)
            cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc333)
            cir.scope {
              %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc71)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc335)
              cir.if %58 {
                cir.break loc(#loc73)
              } loc(#loc336)
            } loc(#loc334)
            %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc337)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc338)
            cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc339)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc81)
            %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc81)
            %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc340)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc28)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc28)
            %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc84)
            %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc341)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc89)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc89)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc90)
            %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc342)
            cir.scope {
              %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc344)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc345)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc345)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc101)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc102)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc346)
              cir.if %62 {
                cir.break loc(#loc104)
              } loc(#loc347)
            } loc(#loc343)
            %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
            %35 = cir.const #cir.int<3> : !s32i loc(#loc107)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc107)
            %37 = cir.const #cir.int<4> : !u64i loc(#loc107)
            %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc107)
            %39 = cir.const #cir.int<2> : !s32i loc(#loc107)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc107)
            %41 = cir.binop(add, %38, %40) : !u64i loc(#loc107)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc108)
            %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc348)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc109)
            %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
            %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc110)
            cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc349)
            cir.scope {
              %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc116)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc351)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc117)
                cir.yield %60 : !cir.bool loc(#loc117)
              }, false {
                %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc352)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc117)
                  cir.yield %64 : !cir.bool loc(#loc117)
                }, false {
                  %64 = cir.const #false loc(#loc117)
                  cir.yield %64 : !cir.bool loc(#loc117)
                }) : (!cir.bool) -> !cir.bool loc(#loc117)
                cir.yield %63 : !cir.bool loc(#loc117)
              }) : (!cir.bool) -> !cir.bool loc(#loc117)
              cir.if %59 {
                cir.break loc(#loc121)
              } loc(#loc353)
            } loc(#loc350)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc122)
            %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
            %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc124)
            cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc354)
            %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
            %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc126)
            cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
          } loc(#loc332)
          cir.yield loc(#loc59)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc129)
          cir.condition(%14) loc(#loc129)
        } loc(#loc331)
      } loc(#loc331)
      cir.scope {
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc133)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc357)
        cir.if %16 {
          %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc358)
      } loc(#loc356)
    } loc(#loc326)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc137)
    cir.return loc(#loc40)
  } loc(#loc322)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc360)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc361)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc143)
    cir.return loc(#loc140)
  } loc(#loc359)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc147, #loc148])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc363)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc365)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc153)
      cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc365)
      cir.scope {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc156)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc156)
        cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc367)
        cir.for : cond {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc158)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc159)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc368)
          cir.condition(%9) loc(#loc160)
        } body {
          cir.scope {
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc162)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc162)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          } loc(#loc369)
          cir.yield loc(#loc155)
        } step {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc164)
          %7 = cir.unary(inc, %6) : !u64i, !u64i loc(#loc165)
          cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc370)
          cir.yield loc(#loc366)
        } loc(#loc366)
      } loc(#loc366)
    } loc(#loc364)
    cir.return loc(#loc146)
  } loc(#loc362)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc372)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc373)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc171)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc373)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc173)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc175)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc177)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc177)
    cir.return loc(#loc167)
  } loc(#loc371)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc181, #loc182])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc377)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc379)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc187)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc187)
      cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc379)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc191)
        %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc381)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
          %9 = cir.const #cir.int<20> : !s32i loc(#loc194)
          %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc382)
          %11 = cir.ternary(%10, true {
            %12 = cir.const #true loc(#loc192)
            cir.yield %12 : !cir.bool loc(#loc192)
          }, false {
            %12 = cir.const #false loc(#loc192)
            cir.yield %12 : !cir.bool loc(#loc192)
          }) : (!cir.bool) -> !cir.bool loc(#loc192)
          cir.yield %11 : !cir.bool loc(#loc192)
        }, false {
          %8 = cir.const #false loc(#loc192)
          cir.yield %8 : !cir.bool loc(#loc192)
        }) : (!cir.bool) -> !cir.bool loc(#loc192)
        cir.if %7 {
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc198)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc198)
            cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc385)
            cir.for : cond {
              %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc200)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc201)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc201)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc386)
              cir.condition(%13) loc(#loc202)
            } body {
              cir.scope {
                %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc204)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc204)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc205)
              } loc(#loc387)
              cir.yield loc(#loc197)
            } step {
              %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc206)
              %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc207)
              cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc388)
              cir.yield loc(#loc384)
            } loc(#loc384)
          } loc(#loc384)
        } loc(#loc383)
      } loc(#loc380)
    } loc(#loc378)
    cir.return loc(#loc180)
  } loc(#loc376)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc390)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc391)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc213)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc391)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc215)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc394)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc395)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc396)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc397)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc224)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc224)
      cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc396)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc231)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc232)
            %15 = cir.const #cir.int<6> : !s32i loc(#loc233)
            %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc234)
            cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc400)
            cir.scope {
              %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc239)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc240)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc240)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc402)
              cir.if %58 {
                cir.break loc(#loc242)
              } loc(#loc403)
            } loc(#loc401)
            %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc404)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc245)
            %19 = cir.const #cir.int<16> : !u64i loc(#loc405)
            cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc406)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc250)
            %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc250)
            %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc407)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc252)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc252)
            %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc253)
            %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc408)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc256)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc256)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc257)
            %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc409)
            cir.scope {
              %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc262)
              %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc411)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc412)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc412)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc267)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc268)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc268)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc413)
              cir.if %62 {
                cir.break loc(#loc270)
              } loc(#loc414)
            } loc(#loc410)
            %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc271)
            %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc272)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc272)
            %35 = cir.const #cir.int<3> : !s32i loc(#loc273)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc273)
            %37 = cir.const #cir.int<4> : !u64i loc(#loc273)
            %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc273)
            %39 = cir.const #cir.int<2> : !s32i loc(#loc273)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc273)
            %41 = cir.binop(add, %38, %40) : !u64i loc(#loc273)
            %42 = cir.const #cir.int<1> : !s32i loc(#loc274)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc274)
            %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc415)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc275)
            %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc276)
            %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc276)
            cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc416)
            cir.scope {
              %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc282)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc282)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc418)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc283)
                cir.yield %60 : !cir.bool loc(#loc283)
              }, false {
                %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc284)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc285)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc419)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc283)
                  cir.yield %64 : !cir.bool loc(#loc283)
                }, false {
                  %64 = cir.const #false loc(#loc283)
                  cir.yield %64 : !cir.bool loc(#loc283)
                }) : (!cir.bool) -> !cir.bool loc(#loc283)
                cir.yield %63 : !cir.bool loc(#loc283)
              }) : (!cir.bool) -> !cir.bool loc(#loc283)
              cir.if %59 {
                cir.break loc(#loc287)
              } loc(#loc420)
            } loc(#loc417)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc288)
            %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc288)
            %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc289)
            %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc290)
            %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc290)
            cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc421)
            %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
            %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc292)
            cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc422)
          } loc(#loc399)
          cir.yield loc(#loc228)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc295)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc295)
          cir.condition(%14) loc(#loc295)
        } loc(#loc398)
      } loc(#loc398)
      cir.scope {
        %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc298)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc299)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc299)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc424)
        cir.if %16 {
          %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc301)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc302)
        } loc(#loc425)
      } loc(#loc423)
    } loc(#loc393)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc303)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc303)
    cir.return loc(#loc209)
  } loc(#loc389)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":51:23)
#loc4 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":44:1)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":54:1)
#loc8 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":45:1)
#loc9 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":46:5)
#loc10 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":53:5)
#loc11 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":47:9)
#loc12 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":47:20)
#loc13 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:9)
#loc14 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":52:9)
#loc15 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:18)
#loc16 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:14)
#loc17 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:21)
#loc18 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:33)
#loc19 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:23)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":50:9)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":51:13)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:41)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":49:40)
#loc24 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc25 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc26 = loc("/usr/include/arpa/inet.h":34:1)
#loc27 = loc("/usr/include/arpa/inet.h":34:47)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":89:49)
#loc29 = loc("/usr/include/netinet/in.h":402:1)
#loc30 = loc("/usr/include/netinet/in.h":403:40)
#loc31 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc32 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc33 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc34 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc35 = loc("/usr/include/stdlib.h":105:1)
#loc36 = loc("/usr/include/stdlib.h":106:33)
#loc37 = loc("/usr/include/unistd.h":358:1)
#loc38 = loc("/usr/include/unistd.h":358:27)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":56:1)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":121:1)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":58:5)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":58:9)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":60:5)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":60:29)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":62:14)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":62:13)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":62:5)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":63:5)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":118:5)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":68:9)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":68:13)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":69:9)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":69:28)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":70:9)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":70:32)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":71:9)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":71:41)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":72:9)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":107:17)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":73:9)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":106:9)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":82:36)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":82:45)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":82:58)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":82:29)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":82:13)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":82:69)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":83:13)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":86:13)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":83:17)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":83:34)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":84:13)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":85:17)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:20)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:21)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:30)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:33)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:47)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:13)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":87:48)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":88:34)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":88:13)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":89:39)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":89:13)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":89:59)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":90:38)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":90:32)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":90:13)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":90:46)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:13)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":94:13)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:25)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:58)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:59)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:68)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:82)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:17)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":91:88)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":92:13)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":93:17)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:31)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:46)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:59)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:77)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:80)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:26)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:13)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":97:81)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":98:13)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":101:13)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":98:17)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":98:31)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":98:44)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":98:47)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":98:61)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":99:13)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":100:17)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":103:39)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":103:25)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":103:13)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":105:26)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":105:21)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":105:13)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":105:37)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":107:16)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":108:9)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":111:9)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":108:13)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":108:30)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":109:9)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":110:26)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":110:13)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":120:5)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":120:13)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":232:1)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":236:1)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":234:5)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":234:13)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":235:5)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":235:13)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":128:1)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":138:1)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":129:1)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":130:5)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":137:5)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":131:9)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":131:20)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:9)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":136:9)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:18)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:14)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:21)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:33)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:23)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":134:9)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":135:23)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":135:13)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:41)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":133:40)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":140:1)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":149:1)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":142:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":142:9)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":143:5)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":143:29)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":145:14)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":145:13)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":145:5)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":147:13)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":147:5)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":148:5)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":148:13)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":152:1)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":165:1)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":153:1)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":154:5)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":164:5)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":155:9)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":155:20)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":157:9)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":163:9)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":157:13)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":157:21)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":157:23)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":157:26)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":157:35)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":158:9)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:13)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":162:13)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:22)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:18)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:25)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:37)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:27)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":160:13)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":161:27)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":161:17)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:45)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":159:44)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":167:1)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":230:1)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":169:5)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":169:9)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":170:5)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":170:29)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":172:14)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":172:13)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":172:5)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":173:5)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":228:5)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":178:9)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":178:13)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":179:9)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":179:28)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":180:9)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":180:32)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":181:9)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":181:41)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":182:9)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":217:17)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":183:9)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":216:9)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":192:36)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":192:45)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":192:58)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":192:29)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":192:13)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":192:69)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":193:13)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":196:13)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":193:17)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":193:34)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":194:13)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":195:17)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:20)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:21)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:30)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:33)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:47)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:13)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":197:48)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":198:34)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":198:13)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":199:49)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":199:39)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":199:13)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":199:59)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":200:38)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":200:32)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":200:13)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":200:46)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:13)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":204:13)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:25)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:58)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:59)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:68)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:82)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:17)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":201:88)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":202:13)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":203:17)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:31)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:46)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:59)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:77)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:80)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:26)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:13)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":207:81)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":208:13)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":211:13)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":208:17)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":208:31)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":208:44)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":208:47)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":208:61)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":209:13)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":210:17)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":213:39)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":213:25)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":213:13)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":215:26)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":215:21)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":215:13)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":215:37)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":217:16)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":218:9)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":221:9)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":218:13)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":218:30)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":219:9)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":220:26)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":220:13)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":229:5)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_44.c":229:13)
#loc305 = loc(fused[#loc1, #loc2])
#loc306 = loc(fused[#loc4, #loc5])
#loc308 = loc(fused[#loc9, #loc10])
#loc309 = loc(fused[#loc11, #loc12])
#loc310 = loc(fused[#loc13, #loc14])
#loc311 = loc(fused[#loc16, #loc15])
#loc312 = loc(fused[#loc17, #loc18])
#loc313 = loc(fused[#loc20, #loc14])
#loc314 = loc(fused[#loc23, #loc22])
#loc315 = loc(fused[#loc24, #loc25])
#loc316 = loc(fused[#loc26, #loc27])
#loc317 = loc(fused[#loc29, #loc30])
#loc318 = loc(fused[#loc31, #loc32])
#loc319 = loc(fused[#loc33, #loc34])
#loc320 = loc(fused[#loc35, #loc36])
#loc321 = loc(fused[#loc37, #loc38])
#loc322 = loc(fused[#loc39, #loc40])
#loc323 = loc(fused[#loc41, #loc42])
#loc324 = loc(fused[#loc43, #loc44])
#loc325 = loc(fused[#loc47, #loc45])
#loc326 = loc(fused[#loc48, #loc49])
#loc327 = loc(fused[#loc50, #loc51])
#loc328 = loc(fused[#loc52, #loc53])
#loc329 = loc(fused[#loc54, #loc55])
#loc330 = loc(fused[#loc56, #loc57])
#loc331 = loc(fused[#loc58, #loc59])
#loc332 = loc(fused[#loc60, #loc61])
#loc333 = loc(fused[#loc66, #loc67])
#loc334 = loc(fused[#loc68, #loc69])
#loc335 = loc(fused[#loc70, #loc71])
#loc336 = loc(fused[#loc72, #loc69])
#loc337 = loc(fused[#loc74, #loc75])
#loc338 = loc(fused[#loc77, #loc78])
#loc339 = loc(fused[#loc79, #loc80])
#loc340 = loc(fused[#loc83, #loc81])
#loc341 = loc(fused[#loc87, #loc88])
#loc342 = loc(fused[#loc92, #loc93])
#loc343 = loc(fused[#loc94, #loc95])
#loc344 = loc(fused[#loc97, #loc98])
#loc345 = loc(fused[#loc99, #loc100])
#loc346 = loc(fused[#loc101, #loc102])
#loc347 = loc(fused[#loc103, #loc95])
#loc348 = loc(fused[#loc107, #loc108])
#loc349 = loc(fused[#loc111, #loc112])
#loc350 = loc(fused[#loc113, #loc114])
#loc351 = loc(fused[#loc115, #loc116])
#loc352 = loc(fused[#loc118, #loc119])
#loc353 = loc(fused[#loc120, #loc114])
#loc354 = loc(fused[#loc124, #loc122])
#loc355 = loc(fused[#loc127, #loc128])
#loc356 = loc(fused[#loc130, #loc131])
#loc357 = loc(fused[#loc132, #loc133])
#loc358 = loc(fused[#loc134, #loc131])
#loc359 = loc(fused[#loc139, #loc140])
#loc360 = loc(fused[#loc141, #loc142])
#loc361 = loc(fused[#loc143, #loc144])
#loc362 = loc(fused[#loc145, #loc146])
#loc364 = loc(fused[#loc150, #loc151])
#loc365 = loc(fused[#loc152, #loc153])
#loc366 = loc(fused[#loc154, #loc155])
#loc367 = loc(fused[#loc157, #loc156])
#loc368 = loc(fused[#loc158, #loc159])
#loc369 = loc(fused[#loc161, #loc155])
#loc370 = loc(fused[#loc165, #loc164])
#loc371 = loc(fused[#loc166, #loc167])
#loc372 = loc(fused[#loc168, #loc169])
#loc373 = loc(fused[#loc170, #loc171])
#loc374 = loc(fused[#loc174, #loc172])
#loc375 = loc(fused[#loc176, #loc175])
#loc376 = loc(fused[#loc179, #loc180])
#loc378 = loc(fused[#loc184, #loc185])
#loc379 = loc(fused[#loc186, #loc187])
#loc380 = loc(fused[#loc188, #loc189])
#loc381 = loc(fused[#loc190, #loc191])
#loc382 = loc(fused[#loc193, #loc194])
#loc383 = loc(fused[#loc195, #loc189])
#loc384 = loc(fused[#loc196, #loc197])
#loc385 = loc(fused[#loc199, #loc198])
#loc386 = loc(fused[#loc200, #loc201])
#loc387 = loc(fused[#loc203, #loc197])
#loc388 = loc(fused[#loc207, #loc206])
#loc389 = loc(fused[#loc208, #loc209])
#loc390 = loc(fused[#loc210, #loc211])
#loc391 = loc(fused[#loc212, #loc213])
#loc392 = loc(fused[#loc216, #loc214])
#loc393 = loc(fused[#loc217, #loc218])
#loc394 = loc(fused[#loc219, #loc220])
#loc395 = loc(fused[#loc221, #loc222])
#loc396 = loc(fused[#loc223, #loc224])
#loc397 = loc(fused[#loc225, #loc226])
#loc398 = loc(fused[#loc227, #loc228])
#loc399 = loc(fused[#loc229, #loc230])
#loc400 = loc(fused[#loc235, #loc236])
#loc401 = loc(fused[#loc237, #loc238])
#loc402 = loc(fused[#loc239, #loc240])
#loc403 = loc(fused[#loc241, #loc238])
#loc404 = loc(fused[#loc243, #loc244])
#loc405 = loc(fused[#loc246, #loc247])
#loc406 = loc(fused[#loc248, #loc249])
#loc407 = loc(fused[#loc251, #loc250])
#loc408 = loc(fused[#loc254, #loc255])
#loc409 = loc(fused[#loc258, #loc259])
#loc410 = loc(fused[#loc260, #loc261])
#loc411 = loc(fused[#loc263, #loc264])
#loc412 = loc(fused[#loc265, #loc266])
#loc413 = loc(fused[#loc267, #loc268])
#loc414 = loc(fused[#loc269, #loc261])
#loc415 = loc(fused[#loc273, #loc274])
#loc416 = loc(fused[#loc277, #loc278])
#loc417 = loc(fused[#loc279, #loc280])
#loc418 = loc(fused[#loc281, #loc282])
#loc419 = loc(fused[#loc284, #loc285])
#loc420 = loc(fused[#loc286, #loc280])
#loc421 = loc(fused[#loc290, #loc288])
#loc422 = loc(fused[#loc293, #loc294])
#loc423 = loc(fused[#loc296, #loc297])
#loc424 = loc(fused[#loc298, #loc299])
#loc425 = loc(fused[#loc300, #loc297])
