!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":23:65)
#loc8 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":23:72)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":38:69)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":38:76)
#loc72 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc39, #loc40])
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc69)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc70)
  cir.func @CWE126_Buffer_Overread__malloc_char_memcpy_61b_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc72)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc73)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc74)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc78)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc23)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc79)
    } loc(#loc77)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc26)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc26)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc30)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc32)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc32)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc81)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.return %24 : !cir.ptr<!s8i> loc(#loc82)
  } loc(#loc71)
  cir.func @CWE126_Buffer_Overread__malloc_char_memcpy_61b_goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc39, #loc40])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc42)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc43)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc86)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.scope {
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
      %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc90)
      cir.if %28 {
        %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc53)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc55)
        cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
      } loc(#loc91)
    } loc(#loc89)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc57)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc58)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc58)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc62)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc64)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc93)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    cir.return %24 : !cir.ptr<!s8i> loc(#loc94)
  } loc(#loc83)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":31:1)
#loc9 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":24:1)
#loc10 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":26:20)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":26:27)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":26:30)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":26:41)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":26:42)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:33)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:9)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:17)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:23)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:30)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":27:29)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":28:12)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":28:18)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":28:23)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":28:26)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":28:5)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":28:27)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":29:18)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":29:5)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":29:10)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":29:13)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":29:14)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":30:12)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":30:5)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":38:1)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":46:1)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":39:1)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":41:20)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":41:27)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":41:31)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":41:42)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":41:43)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":41:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:33)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:9)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:17)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:23)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:24)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:30)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":42:29)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":43:12)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":43:18)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":43:23)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":43:27)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":43:5)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":43:28)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":44:19)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":44:5)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":44:10)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":44:14)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":44:15)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":45:12)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_61b.c":45:5)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc73 = loc(fused[#loc12, #loc13])
#loc74 = loc(fused[#loc11, #loc13])
#loc75 = loc(fused[#loc10, #loc14])
#loc76 = loc(fused[#loc15, #loc14])
#loc77 = loc(fused[#loc16, #loc17])
#loc78 = loc(fused[#loc18, #loc19])
#loc79 = loc(fused[#loc20, #loc17])
#loc80 = loc(fused[#loc28, #loc29])
#loc81 = loc(fused[#loc31, #loc30])
#loc82 = loc(fused[#loc36, #loc35])
#loc83 = loc(fused[#loc37, #loc38])
#loc85 = loc(fused[#loc44, #loc45])
#loc86 = loc(fused[#loc43, #loc45])
#loc87 = loc(fused[#loc42, #loc46])
#loc88 = loc(fused[#loc47, #loc46])
#loc89 = loc(fused[#loc48, #loc49])
#loc90 = loc(fused[#loc50, #loc51])
#loc91 = loc(fused[#loc52, #loc49])
#loc92 = loc(fused[#loc60, #loc61])
#loc93 = loc(fused[#loc63, #loc62])
#loc94 = loc(fused[#loc68, #loc67])
