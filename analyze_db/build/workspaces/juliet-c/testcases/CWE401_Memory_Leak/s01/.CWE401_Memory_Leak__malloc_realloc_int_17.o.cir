!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc142)
  cir.func private @printIntLine(!s32i) loc(#loc143)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc147)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc150)
        cir.condition(%4) loc(#loc21)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc27)
            %4 = cir.const #cir.int<100> : !s32i loc(#loc28)
            %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc28)
            %6 = cir.const #cir.int<4> : !u64i loc(#loc154)
            %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc155)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
            cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
            cir.scope {
              %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc34)
              %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s32i>, !cir.bool loc(#loc158)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc36)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc37)
                %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc38)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
              } loc(#loc159)
            } loc(#loc157)
            %10 = cir.const #cir.int<5> : !s32i loc(#loc39)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc42)
            cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc160)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc44)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc45)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc43)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc46)
            %18 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc47)
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
            %21 = cir.const #cir.int<130000> : !s32i loc(#loc49)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
            %23 = cir.const #cir.int<4> : !u64i loc(#loc161)
            %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc162)
            %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc163)
            cir.store %26, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
            cir.scope {
              %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc58)
              %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s32i>, !cir.bool loc(#loc166)
              cir.if %30 {
                %31 = cir.const #cir.int<10> : !s32i loc(#loc60)
                %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc62)
                %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc63)
                cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc168)
                %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc66)
                %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc67)
                %39 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc68)
                %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
                %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc69)
                cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
              } loc(#loc167)
            } loc(#loc165)
          } loc(#loc152)
        } loc(#loc151)
        cir.yield loc(#loc16)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc71)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc148)
    cir.return loc(#loc12)
  } loc(#loc146)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc170)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc173)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc82)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc176)
        cir.condition(%4) loc(#loc86)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc179)
            %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc180)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc94)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc95)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc95)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc181)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc182)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc183)
            cir.store %10, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
            cir.scope {
              %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc101)
              %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s32i>, !cir.bool loc(#loc185)
              cir.if %34 {
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc103)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc104)
                %37 = cir.unary(minus, %36) nsw : !s32i, !s32i loc(#loc105)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc103)
              } loc(#loc186)
            } loc(#loc184)
            %11 = cir.const #cir.int<5> : !s32i loc(#loc106)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc108)
            %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc109)
            cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc187)
            %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc112)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc113)
            %19 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc114)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc115)
            %22 = cir.const #cir.int<130000> : !s32i loc(#loc116)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc116)
            %24 = cir.const #cir.int<4> : !u64i loc(#loc188)
            %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc189)
            %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc190)
            cir.store %27, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
            cir.scope {
              %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc125)
              %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s32i>, !cir.bool loc(#loc193)
              cir.if %34 {
                %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
                cir.store %35, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
                %36 = cir.const #cir.int<10> : !s32i loc(#loc129)
                %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc131)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc132)
                cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc196)
                %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
                %41 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc135)
                %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc136)
              } loc(#loc194)
            } loc(#loc192)
            %28 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc137)
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc138)
            cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
          } loc(#loc178)
        } loc(#loc177)
        cir.yield loc(#loc81)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc140)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
        cir.yield loc(#loc174)
      } loc(#loc174)
    } loc(#loc174)
    cir.return loc(#loc77)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":46:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":26:9)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":45:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:13)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:9)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:16)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:20)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:18)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":28:5)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":29:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":44:9)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":30:13)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":30:55)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":30:33)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":30:40)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":30:44)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":30:54)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:13)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:41)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:17)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:25)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:31)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:32)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:38)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":31:37)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":33:23)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":33:13)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":33:18)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":33:19)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":34:26)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":34:31)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":34:32)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":34:13)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:27)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:35)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:42)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:50)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:60)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:41)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:61)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":36:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":37:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":43:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":37:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":37:25)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":38:13)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":40:27)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":40:17)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":40:22)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":40:23)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":41:30)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":41:35)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":41:36)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":41:17)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":42:17)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":42:22)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:24)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":27:23)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":80:1)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":83:1)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":82:5)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":82:11)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":53:1)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":78:1)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":55:5)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":55:9)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:5)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":77:5)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:13)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:9)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:16)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:20)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:18)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":57:5)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":58:9)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":76:9)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":59:13)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":59:55)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":61:13)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":61:19)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":59:33)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":59:40)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":59:44)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":59:54)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:13)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:41)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:17)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:25)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:31)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:32)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:38)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":60:37)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":63:23)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":63:13)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":63:18)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":63:19)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":64:26)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":64:31)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":64:32)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":64:13)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:30)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:38)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:45)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:53)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:63)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:44)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:64)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":65:13)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":68:13)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":74:13)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":68:17)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":68:28)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":69:13)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":70:24)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":70:17)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":72:27)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":72:17)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":72:22)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":72:23)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":73:30)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":73:35)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":73:36)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":73:17)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":75:13)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":75:18)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:24)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int_17.c":56:23)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc18, #loc17])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc22, #loc16])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc25, #loc26])
#loc154 = loc(fused[#loc29, #loc30])
#loc155 = loc(fused[#loc28, #loc30])
#loc156 = loc(fused[#loc27, #loc26])
#loc157 = loc(fused[#loc31, #loc32])
#loc158 = loc(fused[#loc33, #loc34])
#loc159 = loc(fused[#loc35, #loc32])
#loc160 = loc(fused[#loc40, #loc39])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc52, #loc51])
#loc163 = loc(fused[#loc47, #loc53])
#loc164 = loc(fused[#loc54, #loc53])
#loc165 = loc(fused[#loc55, #loc56])
#loc166 = loc(fused[#loc57, #loc58])
#loc167 = loc(fused[#loc59, #loc56])
#loc168 = loc(fused[#loc61, #loc60])
#loc169 = loc(fused[#loc71, #loc70])
#loc170 = loc(fused[#loc72, #loc73])
#loc171 = loc(fused[#loc74, #loc75])
#loc172 = loc(fused[#loc76, #loc77])
#loc173 = loc(fused[#loc78, #loc79])
#loc174 = loc(fused[#loc80, #loc81])
#loc175 = loc(fused[#loc83, #loc82])
#loc176 = loc(fused[#loc84, #loc85])
#loc177 = loc(fused[#loc87, #loc81])
#loc178 = loc(fused[#loc88, #loc89])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc92, #loc93])
#loc181 = loc(fused[#loc96, #loc97])
#loc182 = loc(fused[#loc95, #loc97])
#loc183 = loc(fused[#loc94, #loc91])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc102, #loc99])
#loc187 = loc(fused[#loc107, #loc106])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc119, #loc118])
#loc190 = loc(fused[#loc114, #loc120])
#loc191 = loc(fused[#loc121, #loc120])
#loc192 = loc(fused[#loc122, #loc123])
#loc193 = loc(fused[#loc124, #loc125])
#loc194 = loc(fused[#loc126, #loc123])
#loc195 = loc(fused[#loc128, #loc127])
#loc196 = loc(fused[#loc130, #loc129])
#loc197 = loc(fused[#loc140, #loc139])
