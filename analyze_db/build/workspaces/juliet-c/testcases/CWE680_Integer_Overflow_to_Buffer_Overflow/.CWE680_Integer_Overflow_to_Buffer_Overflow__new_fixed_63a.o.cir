!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_637badSinkEPi(!cir.ptr<!s32i>) loc(#loc30)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_633badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc32)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc33)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc10)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc34)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc12)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc34)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc35)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_637badSinkEPi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc14)
    cir.return loc(#loc4)
  } loc(#loc31)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_6311goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc36)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc38)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc39)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc24)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc40)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_6311goodG2BSinkEPi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc26)
    cir.return loc(#loc18)
  } loc(#loc37)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_634goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63L7goodG2BEv() : () -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc41)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":25:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":25:27)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":27:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":37:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":29:5)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":29:9)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":31:13)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":31:12)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":31:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":33:12)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":33:22)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":33:26)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":33:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":36:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":44:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":44:28)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":46:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":54:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":48:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":48:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":50:13)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":50:12)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":50:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":52:12)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":52:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":53:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":56:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":59:1)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_63a.cpp":58:5)
#loc30 = loc(fused[#loc1, #loc2])
#loc31 = loc(fused[#loc3, #loc4])
#loc32 = loc(fused[#loc5, #loc6])
#loc33 = loc(fused[#loc9, #loc7])
#loc34 = loc(fused[#loc10, #loc11])
#loc35 = loc(fused[#loc13, #loc12])
#loc36 = loc(fused[#loc15, #loc16])
#loc37 = loc(fused[#loc17, #loc18])
#loc38 = loc(fused[#loc19, #loc20])
#loc39 = loc(fused[#loc23, #loc21])
#loc40 = loc(fused[#loc25, #loc24])
#loc41 = loc(fused[#loc27, #loc28])
