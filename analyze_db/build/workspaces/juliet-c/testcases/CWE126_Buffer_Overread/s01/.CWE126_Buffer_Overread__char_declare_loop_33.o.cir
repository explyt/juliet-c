!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.func @_ZN44CWE126_Buffer_Overread__char_declare_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc167)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc168)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc10)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc15)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %6 = cir.const #cir.int<65> : !s8i loc(#loc16)
    %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc16)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc17)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %11 bytes from %5 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %12 = cir.const #cir.int<0> : !s8i loc(#loc21)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc22)
    %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc24)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %20 = cir.const #cir.int<65> : !s8i loc(#loc26)
    %21 = cir.cast(integral, %20 : !s8i), !s32i loc(#loc26)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc27)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %25 bytes from %19 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %26 = cir.const #cir.int<0> : !s8i loc(#loc31)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc32)
    %30 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %33 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc175)
      %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
      %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %35, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
      cir.scope {
        %36 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
        %37 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc178)
        %38 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc179)
        %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
        %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
        %41 = cir.const #cir.int<67> : !s8i loc(#loc49)
        %42 = cir.cast(integral, %41 : !s8i), !s32i loc(#loc49)
        %43 = cir.const #cir.int<100> : !s32i loc(#loc50)
        %44 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc50)
        %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc50)
        cir.libc.memset %46 bytes from %40 set to %42 : !cir.ptr<!void>, !s32i, !u64i loc(#loc180)
        %47 = cir.const #cir.int<0> : !s8i loc(#loc54)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc55)
        %49 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc55)
        %51 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
        %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc57)
        cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc181)
        %53 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
        %54 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
        %55 = cir.call @strlen(%54) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
        cir.store %55, %37 : !u64i, !cir.ptr<!u64i> loc(#loc182)
        cir.scope {
          %63 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc64)
          cir.store %64, %36 : !u64i, !cir.ptr<!u64i> loc(#loc184)
          cir.for : cond {
            %65 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc66)
            %66 = cir.load %37 : !cir.ptr<!u64i>, !u64i loc(#loc67)
            %67 = cir.cmp(lt, %65, %66) : !u64i, !cir.bool loc(#loc185)
            cir.condition(%67) loc(#loc185)
          } body {
            cir.scope {
              %65 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
              %66 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc70)
              %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc71)
              %68 = cir.load %67 : !cir.ptr<!s8i>, !s8i loc(#loc69)
              %69 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc72)
              %70 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
              %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc73)
              cir.store %68, %71 : !s8i, !cir.ptr<!s8i> loc(#loc187)
            } loc(#loc186)
            cir.yield loc(#loc63)
          } step {
            %65 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %66 = cir.unary(inc, %65) : !u64i, !u64i loc(#loc75)
            cir.store %66, %36 : !u64i, !cir.ptr<!u64i> loc(#loc188)
            cir.yield loc(#loc183)
          } loc(#loc183)
        } loc(#loc183)
        %56 = cir.const #cir.int<0> : !s8i loc(#loc76)
        %57 = cir.const #cir.int<100> : !s32i loc(#loc77)
        %58 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc77)
        %60 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
        %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc79)
        cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc189)
        %62 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
        cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc81)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc6)
  } loc(#loc164)
  cir.func internal private @_ZN44CWE126_Buffer_Overread__char_declare_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc193)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc194)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc92)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %6 = cir.const #cir.int<65> : !s8i loc(#loc93)
    %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc93)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc94)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc94)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc94)
    cir.libc.memset %11 bytes from %5 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %12 = cir.const #cir.int<0> : !s8i loc(#loc98)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc99)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc99)
    %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc101)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %20 = cir.const #cir.int<65> : !s8i loc(#loc103)
    %21 = cir.cast(integral, %20 : !s8i), !s32i loc(#loc103)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc104)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc104)
    cir.libc.memset %25 bytes from %19 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %26 = cir.const #cir.int<0> : !s8i loc(#loc108)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc109)
    %30 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc111)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %32 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.scope {
      %33 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
      cir.store %35, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      cir.scope {
        %36 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
        %37 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc204)
        %38 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc205)
        %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
        %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
        %41 = cir.const #cir.int<67> : !s8i loc(#loc126)
        %42 = cir.cast(integral, %41 : !s8i), !s32i loc(#loc126)
        %43 = cir.const #cir.int<100> : !s32i loc(#loc127)
        %44 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc127)
        %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc127)
        cir.libc.memset %46 bytes from %40 set to %42 : !cir.ptr<!void>, !s32i, !u64i loc(#loc206)
        %47 = cir.const #cir.int<0> : !s8i loc(#loc131)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %49 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc132)
        %51 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
        %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc134)
        cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc207)
        %53 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc135)
        %54 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
        %55 = cir.call @strlen(%54) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc135)
        cir.store %55, %37 : !u64i, !cir.ptr<!u64i> loc(#loc208)
        cir.scope {
          %63 = cir.const #cir.int<0> : !s32i loc(#loc141)
          %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc141)
          cir.store %64, %36 : !u64i, !cir.ptr<!u64i> loc(#loc210)
          cir.for : cond {
            %65 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc143)
            %66 = cir.load %37 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %67 = cir.cmp(lt, %65, %66) : !u64i, !cir.bool loc(#loc211)
            cir.condition(%67) loc(#loc211)
          } body {
            cir.scope {
              %65 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              %66 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc147)
              %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc148)
              %68 = cir.load %67 : !cir.ptr<!s8i>, !s8i loc(#loc146)
              %69 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc149)
              %70 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
              %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc150)
              cir.store %68, %71 : !s8i, !cir.ptr<!s8i> loc(#loc213)
            } loc(#loc212)
            cir.yield loc(#loc140)
          } step {
            %65 = cir.load %36 : !cir.ptr<!u64i>, !u64i loc(#loc151)
            %66 = cir.unary(inc, %65) : !u64i, !u64i loc(#loc152)
            cir.store %66, %36 : !u64i, !cir.ptr<!u64i> loc(#loc214)
            cir.yield loc(#loc209)
          } loc(#loc209)
        } loc(#loc209)
        %56 = cir.const #cir.int<0> : !s8i loc(#loc153)
        %57 = cir.const #cir.int<100> : !s32i loc(#loc154)
        %58 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc154)
        %60 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
        %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc156)
        cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc215)
        %62 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc158)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc83)
  } loc(#loc190)
  cir.func @_ZN44CWE126_Buffer_Overread__char_declare_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN44CWE126_Buffer_Overread__char_declare_loop_33L7goodG2BEv() : () -> () loc(#loc161)
    cir.return loc(#loc160)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_loop_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":26:1)
#loc6 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":56:1)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":28:5)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":28:12)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":29:5)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":29:23)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":30:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":30:26)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":31:5)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":31:28)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":32:12)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":32:27)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":32:32)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":32:35)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":32:5)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":32:36)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":33:27)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":33:19)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":33:22)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":33:5)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":34:12)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":34:28)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":34:33)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":34:37)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":34:5)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":34:38)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":35:29)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":35:20)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":35:24)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":35:5)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":37:12)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":37:5)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":38:5)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":55:5)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":39:9)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":39:23)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":40:9)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":54:9)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":41:13)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":41:20)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":41:23)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":42:13)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":42:26)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":43:20)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":43:26)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":43:31)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":43:35)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":43:13)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":43:36)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":44:27)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":44:18)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":44:22)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":44:13)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":45:23)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":45:30)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":45:13)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":45:34)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:13)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":51:13)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:22)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:18)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:25)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:29)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":49:13)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":50:27)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":50:32)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":50:33)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":50:22)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":50:17)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:39)
#loc75 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":48:38)
#loc76 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":52:27)
#loc77 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":52:18)
#loc78 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":52:22)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":52:13)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":53:23)
#loc81 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":53:13)
#loc82 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":63:1)
#loc83 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":93:1)
#loc84 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":65:5)
#loc85 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":65:12)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":66:5)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":66:23)
#loc88 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":67:5)
#loc89 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":67:26)
#loc90 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":68:5)
#loc91 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":68:28)
#loc92 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":69:12)
#loc93 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":69:27)
#loc94 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":69:32)
#loc95 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":69:35)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":69:5)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":69:36)
#loc98 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":70:27)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":70:19)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":70:22)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":70:5)
#loc102 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":71:12)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":71:28)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":71:33)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":71:37)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":71:5)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":71:38)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":72:29)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":72:20)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":72:24)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":72:5)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":74:12)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":74:5)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":75:5)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":92:5)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":76:9)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":76:23)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":77:9)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":91:9)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":78:13)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":78:20)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":78:23)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":79:13)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":79:26)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":80:20)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":80:26)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":80:31)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":80:35)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":80:13)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":80:36)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":81:27)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":81:18)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":81:22)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":81:13)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":82:23)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":82:30)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":82:13)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":82:34)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:13)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":88:13)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:22)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:18)
#loc143 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:25)
#loc144 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:29)
#loc145 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":86:13)
#loc146 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":87:27)
#loc147 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":87:32)
#loc148 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":87:33)
#loc149 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":87:22)
#loc150 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":87:17)
#loc151 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:39)
#loc152 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":85:38)
#loc153 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":89:27)
#loc154 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":89:18)
#loc155 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":89:22)
#loc156 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":89:13)
#loc157 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":90:23)
#loc158 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":90:13)
#loc159 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":95:1)
#loc160 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":98:1)
#loc161 = loc("CWE126_Buffer_Overread__char_declare_loop_33.cpp":97:5)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc9, #loc10])
#loc167 = loc(fused[#loc11, #loc12])
#loc168 = loc(fused[#loc13, #loc14])
#loc169 = loc(fused[#loc19, #loc20])
#loc170 = loc(fused[#loc24, #loc21])
#loc171 = loc(fused[#loc29, #loc30])
#loc172 = loc(fused[#loc34, #loc31])
#loc173 = loc(fused[#loc36, #loc35])
#loc174 = loc(fused[#loc37, #loc38])
#loc175 = loc(fused[#loc39, #loc40])
#loc176 = loc(fused[#loc41, #loc42])
#loc177 = loc(fused[#loc43, #loc44])
#loc178 = loc(fused[#loc43, #loc45])
#loc179 = loc(fused[#loc46, #loc47])
#loc180 = loc(fused[#loc52, #loc53])
#loc181 = loc(fused[#loc57, #loc54])
#loc182 = loc(fused[#loc60, #loc61])
#loc183 = loc(fused[#loc62, #loc63])
#loc184 = loc(fused[#loc65, #loc64])
#loc185 = loc(fused[#loc66, #loc67])
#loc186 = loc(fused[#loc68, #loc63])
#loc187 = loc(fused[#loc73, #loc71])
#loc188 = loc(fused[#loc75, #loc74])
#loc189 = loc(fused[#loc79, #loc76])
#loc190 = loc(fused[#loc82, #loc83])
#loc191 = loc(fused[#loc84, #loc85])
#loc192 = loc(fused[#loc86, #loc87])
#loc193 = loc(fused[#loc88, #loc89])
#loc194 = loc(fused[#loc90, #loc91])
#loc195 = loc(fused[#loc96, #loc97])
#loc196 = loc(fused[#loc101, #loc98])
#loc197 = loc(fused[#loc106, #loc107])
#loc198 = loc(fused[#loc111, #loc108])
#loc199 = loc(fused[#loc113, #loc112])
#loc200 = loc(fused[#loc114, #loc115])
#loc201 = loc(fused[#loc116, #loc117])
#loc202 = loc(fused[#loc118, #loc119])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc120, #loc122])
#loc205 = loc(fused[#loc123, #loc124])
#loc206 = loc(fused[#loc129, #loc130])
#loc207 = loc(fused[#loc134, #loc131])
#loc208 = loc(fused[#loc137, #loc138])
#loc209 = loc(fused[#loc139, #loc140])
#loc210 = loc(fused[#loc142, #loc141])
#loc211 = loc(fused[#loc143, #loc144])
#loc212 = loc(fused[#loc145, #loc140])
#loc213 = loc(fused[#loc150, #loc148])
#loc214 = loc(fused[#loc152, #loc151])
#loc215 = loc(fused[#loc156, #loc153])
#loc216 = loc(fused[#loc159, #loc160])
