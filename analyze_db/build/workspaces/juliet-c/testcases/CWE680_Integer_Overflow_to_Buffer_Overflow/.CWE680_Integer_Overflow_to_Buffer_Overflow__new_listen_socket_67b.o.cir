!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":51:14)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":51:25)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":74:18)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":74:29)
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType = !cir.record<struct "CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67::_structType" {!s32i}>
#loc91 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc49, #loc50])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc88)
  cir.func private @printIntLine(!s32i) loc(#loc89)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_677badSinkENS_11_structTypeE(%arg0: !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc92)
    cir.store %arg0, %0 : !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType> loc(#loc11)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType> -> !cir.ptr<!s32i> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc94)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc95)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc96)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc97)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc98)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc99)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc24)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc100)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc31)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc103)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc33)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc34)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc104)
          cir.condition(%25) loc(#loc104)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc36)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc39)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc106)
          } loc(#loc105)
          cir.yield loc(#loc30)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc41)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc107)
          cir.yield loc(#loc102)
        } loc(#loc102)
      } loc(#loc102)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc43)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc44)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc45)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
      cir.delete.array %19 : <!s32i> loc(#loc46)
    } loc(#loc93)
    cir.return loc(#loc6)
  } loc(#loc90)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_6711goodG2BSinkENS_11_structTypeE(%arg0: !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType loc(fused[#loc49, #loc50])) extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc109)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc110)
    cir.store %arg0, %0 : !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType> loc(#loc53)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_673A3A_structType> -> !cir.ptr<!s32i> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc112)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc113)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc114)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc61)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc115)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc116)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc117)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc65)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc66)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc118)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc72)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc72)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc121)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc75)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc122)
          cir.condition(%25) loc(#loc122)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc77)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc80)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc124)
          } loc(#loc123)
          cir.yield loc(#loc71)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc82)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc125)
          cir.yield loc(#loc120)
        } loc(#loc120)
      } loc(#loc120)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc85)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc86)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
      cir.delete.array %19 : <!s32i> loc(#loc87)
    } loc(#loc111)
    cir.return loc(#loc48)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":51:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":67:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":53:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":53:25)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":52:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":46:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":54:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":66:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":55:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":55:16)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":55:26)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":56:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":56:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":58:21)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":58:28)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":58:38)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":58:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":59:37)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":51:6)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":59:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":59:46)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":59:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":63:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:18)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:14)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:21)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:33)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":61:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":62:29)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":62:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":62:24)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":62:25)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:40)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":60:39)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":64:22)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":64:33)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":64:34)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":64:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":65:19)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":74:1)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":90:1)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":76:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":76:25)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":75:1)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":77:5)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":89:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":78:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":78:16)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":78:26)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":79:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":79:14)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":81:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":81:28)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":81:38)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":81:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":82:37)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":74:6)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":82:28)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":82:46)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":82:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":86:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:18)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:14)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:21)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:33)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":84:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":85:29)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":85:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":85:24)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":85:25)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:40)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":83:39)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":87:22)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":87:33)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":87:34)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":87:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_67b.cpp":88:19)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc15, #loc17])
#loc96 = loc(fused[#loc18, #loc19])
#loc97 = loc(fused[#loc21, #loc22])
#loc98 = loc(fused[#loc20, #loc22])
#loc99 = loc(fused[#loc23, #loc22])
#loc100 = loc(fused[#loc26, #loc27])
#loc101 = loc(fused[#loc28, #loc27])
#loc102 = loc(fused[#loc29, #loc30])
#loc103 = loc(fused[#loc32, #loc31])
#loc104 = loc(fused[#loc33, #loc34])
#loc105 = loc(fused[#loc35, #loc30])
#loc106 = loc(fused[#loc37, #loc36])
#loc107 = loc(fused[#loc41, #loc40])
#loc108 = loc(fused[#loc47, #loc48])
#loc110 = loc(fused[#loc51, #loc52])
#loc111 = loc(fused[#loc54, #loc55])
#loc112 = loc(fused[#loc56, #loc57])
#loc113 = loc(fused[#loc56, #loc58])
#loc114 = loc(fused[#loc59, #loc60])
#loc115 = loc(fused[#loc62, #loc63])
#loc116 = loc(fused[#loc61, #loc63])
#loc117 = loc(fused[#loc64, #loc63])
#loc118 = loc(fused[#loc67, #loc68])
#loc119 = loc(fused[#loc69, #loc68])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc73, #loc72])
#loc122 = loc(fused[#loc74, #loc75])
#loc123 = loc(fused[#loc76, #loc71])
#loc124 = loc(fused[#loc78, #loc77])
#loc125 = loc(fused[#loc82, #loc81])
