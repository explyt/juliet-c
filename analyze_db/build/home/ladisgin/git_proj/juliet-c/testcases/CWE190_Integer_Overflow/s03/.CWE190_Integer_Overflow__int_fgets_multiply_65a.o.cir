!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE190_Integer_Overflow__int_fgets_multiply_65b_badSink(!s32i) loc(#loc93)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc94)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc95)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_65_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc99)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc100)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc101)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_65b_badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc19)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc101)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb1 loc(#loc103)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc99)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc99)
    cir.br ^bb2 loc(#loc104)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc27)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc27)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc27)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc27)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc27)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc27)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc27)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc105)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc106)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.br ^bb5 loc(#loc32)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call %25(%26) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc39)
    cir.return loc(#loc13)
  } loc(#loc98)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_multiply_65_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc108)
  cir.func private @CWE190_Integer_Overflow__int_fgets_multiply_65b_goodG2BSink(!s32i) loc(#loc111)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc114)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc55)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc57)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc59)
    cir.return loc(#loc50)
  } loc(#loc112)
  cir.func private @CWE190_Integer_Overflow__int_fgets_multiply_65b_goodB2GSink(!s32i) loc(#loc117)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc119)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc120)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc121)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_fgets_multiply_65b_goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc121)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc119)
    cir.store %5, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc119)
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // pred: ^bb1
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc78)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc78)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc78)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc78)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc78)
    %13 = cir.binop(add, %10, %12) : !u64i loc(#loc78)
    %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc78)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
    %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc80)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc125)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc86)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.br ^bb5 loc(#loc83)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc89)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc76)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc74)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.call %25(%26) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc91)
    cir.return loc(#loc64)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_65a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":25:1)
#loc2 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":25:70)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":44:23)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":27:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":49:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":35:9)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":35:45)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":29:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":29:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":31:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":31:29)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":33:12)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":33:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":34:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":46:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":37:9)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":45:9)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":37:19)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":37:32)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":37:49)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":37:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":37:59)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":38:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":41:9)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":43:9)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":40:25)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":40:20)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":40:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":40:36)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":44:13)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":48:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":48:13)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":94:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":98:1)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":96:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":96:13)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":97:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":97:13)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":56:1)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":56:74)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":58:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":67:1)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":60:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":60:9)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":61:5)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":61:29)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":63:12)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":63:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":65:12)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":65:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":66:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":66:13)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":70:1)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":70:74)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":72:1)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":92:1)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":79:9)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":79:45)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":74:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":74:9)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":75:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":75:29)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":77:12)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":77:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":78:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":90:5)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":81:9)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":89:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":81:19)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":81:32)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":81:49)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":81:13)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":81:59)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":82:9)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":85:9)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":87:9)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":84:25)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":84:20)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":84:13)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":84:36)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":88:23)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":88:13)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":91:5)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_multiply_65a.c":91:13)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc12, #loc13])
#loc99 = loc(fused[#loc14, #loc15])
#loc100 = loc(fused[#loc16, #loc17])
#loc101 = loc(fused[#loc18, #loc19])
#loc102 = loc(fused[#loc21, #loc20])
#loc103 = loc(fused[#loc22, #loc23])
#loc104 = loc(fused[#loc24, #loc25])
#loc105 = loc(fused[#loc29, #loc30])
#loc106 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc107 = loc(fused[#loc36, #loc37])
#loc108 = loc(fused[#loc41, #loc42])
#loc109 = loc(fused[#loc43, #loc44])
#loc110 = loc(fused[#loc45, #loc46])
#loc111 = loc(fused[#loc47, #loc48])
#loc112 = loc(fused[#loc49, #loc50])
#loc113 = loc(fused[#loc51, #loc52])
#loc114 = loc(fused[#loc53, #loc54])
#loc115 = loc(fused[#loc56, #loc55])
#loc116 = loc(fused[#loc58, #loc57])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc64])
#loc119 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc67, #loc68])
#loc121 = loc(fused[#loc69, #loc70])
#loc122 = loc(fused[#loc72, #loc71])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc80, #loc81])
#loc126 = loc(fused[#loc82, #loc83, #loc84, #loc76])
#loc127 = loc(fused[#loc87, #loc88])
