!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":24:89)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":24:105)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":44:94)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":44:110)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":61:94)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":61:110)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc96 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc69, #loc70])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc92)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc93)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc94)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc9, #loc10])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_badGlobal : !cir.ptr<!s32i> loc(#loc92)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc98)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc99)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc100)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc104)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc105)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc29)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    cir.store %19, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc106)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    cir.return %20 : !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
  } loc(#loc95)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc107)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc39, #loc40])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc41)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc107)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb8 loc(#loc46)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc50)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc114)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc118)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc60)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc62)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb6 loc(#loc56)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc56)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    cir.store %21, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc120)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    cir.return %22 : !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
  } loc(#loc109)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc121)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc69, #loc70])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc68)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc71)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc121)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc76)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc77)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc126)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc127)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc131)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc132)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc89)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb5 loc(#loc83)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc73)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    cir.store %19, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.return %20 : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
  } loc(#loc122)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":22:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":33:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":25:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":26:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":26:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":29:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":29:40)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":29:43)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":29:63)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":29:64)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":29:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:37)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:21)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:34)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":30:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":32:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":32:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":40:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":40:12)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":49:19)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":44:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":58:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":45:1)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":46:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":56:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":46:8)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":47:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":50:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":52:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":49:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":54:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":54:40)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":54:44)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":54:64)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":54:65)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":54:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:37)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:21)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:27)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:28)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:34)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":55:33)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":57:12)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":57:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":41:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":41:12)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":61:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":70:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":62:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":63:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":68:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":63:8)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":64:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":66:33)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":66:40)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":66:44)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":66:64)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":66:65)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":66:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:37)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:28)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:34)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":67:33)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":69:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_22b.c":69:5)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc12, #loc13])
#loc98 = loc(fused[#loc15, #loc13])
#loc99 = loc(fused[#loc18, #loc19])
#loc100 = loc(fused[#loc17, #loc19])
#loc101 = loc(fused[#loc16, #loc20])
#loc102 = loc(fused[#loc21, #loc20])
#loc103 = loc(fused[#loc22, #loc23])
#loc104 = loc(fused[#loc24, #loc25])
#loc105 = loc(fused[#loc26, #loc23])
#loc106 = loc(fused[#loc31, #loc30])
#loc107 = loc(fused[#loc32, #loc33])
#loc108 = loc(fused[#loc34, #loc35])
#loc109 = loc(fused[#loc37, #loc38])
#loc111 = loc(fused[#loc42, #loc43])
#loc112 = loc(fused[#loc45, #loc46, #loc47, #loc43])
#loc113 = loc(fused[#loc51, #loc52])
#loc114 = loc(fused[#loc50, #loc52])
#loc115 = loc(fused[#loc49, #loc53])
#loc116 = loc(fused[#loc54, #loc53])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc59, #loc56])
#loc120 = loc(fused[#loc64, #loc63])
#loc121 = loc(fused[#loc65, #loc66])
#loc122 = loc(fused[#loc67, #loc68])
#loc124 = loc(fused[#loc72, #loc73])
#loc125 = loc(fused[#loc75, #loc73])
#loc126 = loc(fused[#loc78, #loc79])
#loc127 = loc(fused[#loc77, #loc79])
#loc128 = loc(fused[#loc76, #loc80])
#loc129 = loc(fused[#loc81, #loc80])
#loc130 = loc(fused[#loc82, #loc83])
#loc131 = loc(fused[#loc84, #loc85])
#loc132 = loc(fused[#loc86, #loc83])
#loc133 = loc(fused[#loc91, #loc90])
