!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc94)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc14)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc100)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc100)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc100)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
            cir.scope {
              %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc24)
              %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
              %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
              %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
              %11 = cir.call @__isoc99_fscanf(%7, %9, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc24)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc27)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc103)
              cir.if %13 {
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc29)
              } loc(#loc104)
            } loc(#loc102)
          } loc(#loc99)
          cir.break loc(#loc30)
        } loc(#loc15)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc31)
        cir.yield loc(#loc12)
      } loc(#loc12)
    } loc(#loc98)
    cir.return loc(#loc11)
  } loc(#loc97)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc106)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc105)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc44)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          cir.break loc(#loc48)
        } loc(#loc45)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc111)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc111)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc111)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
            cir.scope {
              %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc58)
              %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
              %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
              %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc60)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc60)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              %11 = cir.call @__isoc99_fscanf(%7, %9, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc58)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc62)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc114)
              cir.if %14 {
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc65)
              } loc(#loc115)
            } loc(#loc113)
          } loc(#loc110)
          cir.break loc(#loc66)
        } loc(#loc49)
        cir.yield loc(#loc42)
      } loc(#loc42)
    } loc(#loc109)
    cir.return loc(#loc41)
  } loc(#loc108)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc71)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
            cir.scope {
              %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc81)
              %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
              %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
              %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc83)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc83)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
              %11 = cir.call @__isoc99_fscanf(%7, %9, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc81)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc85)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc85)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc122)
              cir.if %14 {
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc88)
              } loc(#loc123)
            } loc(#loc121)
          } loc(#loc118)
          cir.break loc(#loc89)
        } loc(#loc72)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc92)
          cir.break loc(#loc93)
        } loc(#loc90)
        cir.yield loc(#loc69)
      } loc(#loc69)
    } loc(#loc117)
    cir.return loc(#loc68)
  } loc(#loc116)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":36:27)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":38:23)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":44:19)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":24:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":47:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":26:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":46:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":26:12)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":28:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":29:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":40:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":32:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":32:32)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":33:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":33:23)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":36:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":39:9)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":36:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":36:20)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":36:37)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":36:46)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":37:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":38:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":41:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":42:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":44:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":45:9)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":103:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":107:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":105:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":105:11)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":106:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":106:11)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":54:1)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":76:1)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":56:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":75:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":56:12)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":58:5)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":60:19)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":60:9)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":61:9)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":62:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":63:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":73:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":66:9)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":66:32)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":67:9)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":67:23)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":69:9)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":72:9)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":69:13)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":69:20)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":69:27)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":69:37)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":69:46)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":70:9)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":71:23)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":71:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":74:5)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":79:1)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":101:1)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":81:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":100:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":81:12)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":83:5)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":84:5)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":94:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":87:9)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":87:32)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":88:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":88:23)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":90:9)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":93:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":90:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":90:20)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":90:27)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":90:37)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":90:46)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":91:9)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":92:23)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":92:13)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":95:5)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":96:5)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":98:19)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":98:9)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_15.c":99:9)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc6, #loc7])
#loc97 = loc(fused[#loc10, #loc11])
#loc98 = loc(fused[#loc12, #loc13])
#loc99 = loc(fused[#loc16, #loc17])
#loc100 = loc(fused[#loc18, #loc19])
#loc101 = loc(fused[#loc20, #loc21])
#loc102 = loc(fused[#loc22, #loc23])
#loc103 = loc(fused[#loc24, #loc27])
#loc104 = loc(fused[#loc28, #loc23])
#loc105 = loc(fused[#loc34, #loc35])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc40, #loc41])
#loc109 = loc(fused[#loc42, #loc43])
#loc110 = loc(fused[#loc50, #loc51])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc54, #loc55])
#loc113 = loc(fused[#loc56, #loc57])
#loc114 = loc(fused[#loc58, #loc62])
#loc115 = loc(fused[#loc63, #loc57])
#loc116 = loc(fused[#loc67, #loc68])
#loc117 = loc(fused[#loc69, #loc70])
#loc118 = loc(fused[#loc73, #loc74])
#loc119 = loc(fused[#loc75, #loc76])
#loc120 = loc(fused[#loc77, #loc78])
#loc121 = loc(fused[#loc79, #loc80])
#loc122 = loc(fused[#loc81, #loc85])
#loc123 = loc(fused[#loc86, #loc80])
