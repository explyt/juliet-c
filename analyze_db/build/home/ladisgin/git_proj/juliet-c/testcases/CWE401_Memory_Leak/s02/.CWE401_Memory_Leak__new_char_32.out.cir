!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc123 = loc("CWE401_Memory_Leak__new_char_32.cpp":120:10)
#loc124 = loc("CWE401_Memory_Leak__new_char_32.cpp":120:14)
#loc125 = loc("CWE401_Memory_Leak__new_char_32.cpp":120:20)
#loc126 = loc("CWE401_Memory_Leak__new_char_32.cpp":120:32)
#loc186 = loc(fused[#loc123, #loc124])
#loc187 = loc(fused[#loc125, #loc126])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc139)
  cir.func private @printHexCharLine(!s8i) loc(#loc140)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_323badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc145)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc146)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc145)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc146)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc149)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %11 = cir.const #cir.int<65> : !s8i loc(#loc26)
    %12 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc31)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %18, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc141)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_32L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc156)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc159)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc160)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc159)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc160)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc52)
    cir.store %6, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %9 = cir.const #cir.int<65> : !s8i loc(#loc59)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc63)
    cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc64)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    cir.store %13, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb2 loc(#loc55)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc166)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.store %16, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc39)
  } loc(#loc154)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc167)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_32L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc172)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc173)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc172)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc173)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc92)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %11 = cir.const #cir.int<65> : !s8i loc(#loc94)
    %12 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc98)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc99)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %18, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc92)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc74)
  } loc(#loc168)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_324goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_32L7goodG2BEv() : () -> () loc(#loc109)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_32L7goodB2GEv() : () -> () loc(#loc110)
    cir.return loc(#loc108)
  } loc(#loc181)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc182)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc120)
  cir.func @main(%arg0: !s32i loc(fused[#loc123, #loc124]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc125, #loc126])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc122)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc127)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc128)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc129)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc129)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc130)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc117)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_324goodEv() : () -> () loc(#loc132)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc118)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc119)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_323badEv() : () -> () loc(#loc135)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc120)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %15 : !s32i loc(#loc188)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_32.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE401_Memory_Leak__new_char_32.cpp":29:1)
#loc6 = loc("CWE401_Memory_Leak__new_char_32.cpp":49:1)
#loc7 = loc("CWE401_Memory_Leak__new_char_32.cpp":36:9)
#loc8 = loc("CWE401_Memory_Leak__new_char_32.cpp":36:24)
#loc9 = loc("CWE401_Memory_Leak__new_char_32.cpp":45:9)
#loc10 = loc("CWE401_Memory_Leak__new_char_32.cpp":45:24)
#loc11 = loc("CWE401_Memory_Leak__new_char_32.cpp":31:5)
#loc12 = loc("CWE401_Memory_Leak__new_char_32.cpp":31:12)
#loc13 = loc("CWE401_Memory_Leak__new_char_32.cpp":32:5)
#loc14 = loc("CWE401_Memory_Leak__new_char_32.cpp":32:25)
#loc15 = loc("CWE401_Memory_Leak__new_char_32.cpp":33:5)
#loc16 = loc("CWE401_Memory_Leak__new_char_32.cpp":33:25)
#loc17 = loc("CWE401_Memory_Leak__new_char_32.cpp":34:12)
#loc18 = loc("CWE401_Memory_Leak__new_char_32.cpp":34:5)
#loc19 = loc("CWE401_Memory_Leak__new_char_32.cpp":35:5)
#loc20 = loc("CWE401_Memory_Leak__new_char_32.cpp":43:5)
#loc21 = loc("CWE401_Memory_Leak__new_char_32.cpp":36:23)
#loc22 = loc("CWE401_Memory_Leak__new_char_32.cpp":38:16)
#loc23 = loc("CWE401_Memory_Leak__new_char_32.cpp":38:20)
#loc24 = loc("CWE401_Memory_Leak__new_char_32.cpp":29:6)
#loc25 = loc("CWE401_Memory_Leak__new_char_32.cpp":38:9)
#loc26 = loc("CWE401_Memory_Leak__new_char_32.cpp":40:17)
#loc27 = loc("CWE401_Memory_Leak__new_char_32.cpp":40:10)
#loc28 = loc("CWE401_Memory_Leak__new_char_32.cpp":40:9)
#loc29 = loc("CWE401_Memory_Leak__new_char_32.cpp":41:27)
#loc30 = loc("CWE401_Memory_Leak__new_char_32.cpp":41:26)
#loc31 = loc("CWE401_Memory_Leak__new_char_32.cpp":41:9)
#loc32 = loc("CWE401_Memory_Leak__new_char_32.cpp":42:21)
#loc33 = loc("CWE401_Memory_Leak__new_char_32.cpp":42:10)
#loc34 = loc("CWE401_Memory_Leak__new_char_32.cpp":42:9)
#loc35 = loc("CWE401_Memory_Leak__new_char_32.cpp":44:5)
#loc36 = loc("CWE401_Memory_Leak__new_char_32.cpp":48:5)
#loc37 = loc("CWE401_Memory_Leak__new_char_32.cpp":45:23)
#loc38 = loc("CWE401_Memory_Leak__new_char_32.cpp":56:1)
#loc39 = loc("CWE401_Memory_Leak__new_char_32.cpp":77:1)
#loc40 = loc("CWE401_Memory_Leak__new_char_32.cpp":63:9)
#loc41 = loc("CWE401_Memory_Leak__new_char_32.cpp":63:24)
#loc42 = loc("CWE401_Memory_Leak__new_char_32.cpp":65:9)
#loc43 = loc("CWE401_Memory_Leak__new_char_32.cpp":65:14)
#loc44 = loc("CWE401_Memory_Leak__new_char_32.cpp":73:9)
#loc45 = loc("CWE401_Memory_Leak__new_char_32.cpp":73:24)
#loc46 = loc("CWE401_Memory_Leak__new_char_32.cpp":58:5)
#loc47 = loc("CWE401_Memory_Leak__new_char_32.cpp":58:12)
#loc48 = loc("CWE401_Memory_Leak__new_char_32.cpp":59:5)
#loc49 = loc("CWE401_Memory_Leak__new_char_32.cpp":59:25)
#loc50 = loc("CWE401_Memory_Leak__new_char_32.cpp":60:5)
#loc51 = loc("CWE401_Memory_Leak__new_char_32.cpp":60:25)
#loc52 = loc("CWE401_Memory_Leak__new_char_32.cpp":61:12)
#loc53 = loc("CWE401_Memory_Leak__new_char_32.cpp":61:5)
#loc54 = loc("CWE401_Memory_Leak__new_char_32.cpp":62:5)
#loc55 = loc("CWE401_Memory_Leak__new_char_32.cpp":71:5)
#loc56 = loc("CWE401_Memory_Leak__new_char_32.cpp":63:23)
#loc57 = loc("CWE401_Memory_Leak__new_char_32.cpp":66:9)
#loc58 = loc("CWE401_Memory_Leak__new_char_32.cpp":66:17)
#loc59 = loc("CWE401_Memory_Leak__new_char_32.cpp":68:17)
#loc60 = loc("CWE401_Memory_Leak__new_char_32.cpp":68:10)
#loc61 = loc("CWE401_Memory_Leak__new_char_32.cpp":68:9)
#loc62 = loc("CWE401_Memory_Leak__new_char_32.cpp":69:27)
#loc63 = loc("CWE401_Memory_Leak__new_char_32.cpp":69:26)
#loc64 = loc("CWE401_Memory_Leak__new_char_32.cpp":69:9)
#loc65 = loc("CWE401_Memory_Leak__new_char_32.cpp":70:21)
#loc66 = loc("CWE401_Memory_Leak__new_char_32.cpp":70:10)
#loc67 = loc("CWE401_Memory_Leak__new_char_32.cpp":70:9)
#loc68 = loc("CWE401_Memory_Leak__new_char_32.cpp":72:5)
#loc69 = loc("CWE401_Memory_Leak__new_char_32.cpp":76:5)
#loc70 = loc("CWE401_Memory_Leak__new_char_32.cpp":73:23)
#loc71 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc72 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc73 = loc("CWE401_Memory_Leak__new_char_32.cpp":80:1)
#loc74 = loc("CWE401_Memory_Leak__new_char_32.cpp":100:1)
#loc75 = loc("CWE401_Memory_Leak__new_char_32.cpp":87:9)
#loc76 = loc("CWE401_Memory_Leak__new_char_32.cpp":87:24)
#loc77 = loc("CWE401_Memory_Leak__new_char_32.cpp":96:9)
#loc78 = loc("CWE401_Memory_Leak__new_char_32.cpp":96:24)
#loc79 = loc("CWE401_Memory_Leak__new_char_32.cpp":82:5)
#loc80 = loc("CWE401_Memory_Leak__new_char_32.cpp":82:12)
#loc81 = loc("CWE401_Memory_Leak__new_char_32.cpp":83:5)
#loc82 = loc("CWE401_Memory_Leak__new_char_32.cpp":83:25)
#loc83 = loc("CWE401_Memory_Leak__new_char_32.cpp":84:5)
#loc84 = loc("CWE401_Memory_Leak__new_char_32.cpp":84:25)
#loc85 = loc("CWE401_Memory_Leak__new_char_32.cpp":85:12)
#loc86 = loc("CWE401_Memory_Leak__new_char_32.cpp":85:5)
#loc87 = loc("CWE401_Memory_Leak__new_char_32.cpp":86:5)
#loc88 = loc("CWE401_Memory_Leak__new_char_32.cpp":94:5)
#loc89 = loc("CWE401_Memory_Leak__new_char_32.cpp":87:23)
#loc90 = loc("CWE401_Memory_Leak__new_char_32.cpp":89:16)
#loc91 = loc("CWE401_Memory_Leak__new_char_32.cpp":89:20)
#loc92 = loc("CWE401_Memory_Leak__new_char_32.cpp":80:13)
#loc93 = loc("CWE401_Memory_Leak__new_char_32.cpp":89:9)
#loc94 = loc("CWE401_Memory_Leak__new_char_32.cpp":91:17)
#loc95 = loc("CWE401_Memory_Leak__new_char_32.cpp":91:10)
#loc96 = loc("CWE401_Memory_Leak__new_char_32.cpp":91:9)
#loc97 = loc("CWE401_Memory_Leak__new_char_32.cpp":92:27)
#loc98 = loc("CWE401_Memory_Leak__new_char_32.cpp":92:26)
#loc99 = loc("CWE401_Memory_Leak__new_char_32.cpp":92:9)
#loc100 = loc("CWE401_Memory_Leak__new_char_32.cpp":93:21)
#loc101 = loc("CWE401_Memory_Leak__new_char_32.cpp":93:10)
#loc102 = loc("CWE401_Memory_Leak__new_char_32.cpp":93:9)
#loc103 = loc("CWE401_Memory_Leak__new_char_32.cpp":95:5)
#loc104 = loc("CWE401_Memory_Leak__new_char_32.cpp":99:5)
#loc105 = loc("CWE401_Memory_Leak__new_char_32.cpp":96:23)
#loc106 = loc("CWE401_Memory_Leak__new_char_32.cpp":98:16)
#loc107 = loc("CWE401_Memory_Leak__new_char_32.cpp":102:1)
#loc108 = loc("CWE401_Memory_Leak__new_char_32.cpp":106:1)
#loc109 = loc("CWE401_Memory_Leak__new_char_32.cpp":104:5)
#loc110 = loc("CWE401_Memory_Leak__new_char_32.cpp":105:5)
#loc111 = loc("/usr/include/stdlib.h":575:1)
#loc112 = loc("/usr/include/stdlib.h":575:41)
#loc113 = loc("/usr/include/time.h":76:1)
#loc114 = loc("/usr/include/time.h":76:38)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc116 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc117 = loc("CWE401_Memory_Leak__new_char_32.cpp":125:15)
#loc118 = loc("CWE401_Memory_Leak__new_char_32.cpp":127:15)
#loc119 = loc("CWE401_Memory_Leak__new_char_32.cpp":130:15)
#loc120 = loc("CWE401_Memory_Leak__new_char_32.cpp":132:15)
#loc121 = loc("CWE401_Memory_Leak__new_char_32.cpp":120:1)
#loc122 = loc("CWE401_Memory_Leak__new_char_32.cpp":135:1)
#loc127 = loc("CWE401_Memory_Leak__new_char_32.cpp":121:1)
#loc128 = loc("CWE401_Memory_Leak__new_char_32.cpp":123:27)
#loc129 = loc("CWE401_Memory_Leak__new_char_32.cpp":123:22)
#loc130 = loc("CWE401_Memory_Leak__new_char_32.cpp":123:5)
#loc131 = loc("CWE401_Memory_Leak__new_char_32.cpp":125:5)
#loc132 = loc("CWE401_Memory_Leak__new_char_32.cpp":126:5)
#loc133 = loc("CWE401_Memory_Leak__new_char_32.cpp":127:5)
#loc134 = loc("CWE401_Memory_Leak__new_char_32.cpp":130:5)
#loc135 = loc("CWE401_Memory_Leak__new_char_32.cpp":131:5)
#loc136 = loc("CWE401_Memory_Leak__new_char_32.cpp":132:5)
#loc137 = loc("CWE401_Memory_Leak__new_char_32.cpp":134:12)
#loc138 = loc("CWE401_Memory_Leak__new_char_32.cpp":134:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc15, #loc16])
#loc147 = loc(fused[#loc18, #loc17])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc22, #loc23])
#loc150 = loc(fused[#loc25, #loc23])
#loc151 = loc(fused[#loc28, #loc26])
#loc152 = loc(fused[#loc34, #loc32])
#loc153 = loc(fused[#loc35, #loc36])
#loc154 = loc(fused[#loc38, #loc39])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc53, #loc52])
#loc162 = loc(fused[#loc54, #loc55])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc61, #loc59])
#loc165 = loc(fused[#loc67, #loc65])
#loc166 = loc(fused[#loc68, #loc69])
#loc167 = loc(fused[#loc71, #loc72])
#loc168 = loc(fused[#loc73, #loc74])
#loc169 = loc(fused[#loc75, #loc76])
#loc170 = loc(fused[#loc77, #loc78])
#loc171 = loc(fused[#loc79, #loc80])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc86, #loc85])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc90, #loc91])
#loc177 = loc(fused[#loc93, #loc91])
#loc178 = loc(fused[#loc96, #loc94])
#loc179 = loc(fused[#loc102, #loc100])
#loc180 = loc(fused[#loc103, #loc104])
#loc181 = loc(fused[#loc107, #loc108])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc113, #loc114])
#loc184 = loc(fused[#loc115, #loc116])
#loc185 = loc(fused[#loc121, #loc122])
#loc188 = loc(fused[#loc138, #loc137])
