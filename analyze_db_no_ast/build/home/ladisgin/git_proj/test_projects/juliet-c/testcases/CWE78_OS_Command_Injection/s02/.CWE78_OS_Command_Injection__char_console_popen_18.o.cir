!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc136)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc140)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc139)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.goto "source" loc(#loc142)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc27)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc28)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc28)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.scope {
      %8 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc32)
      %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc33)
      %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc144)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc34)
      %14 = cir.cmp(gt, %11, %13) : !u64i, !s32i loc(#loc145)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc35)
      cir.if %15 {
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc41)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
          %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc148)
          %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc148)
          %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
          %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
          %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
          %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc149)
          %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc47)
          cir.if %30 {
            %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
            %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
            cir.store %33, %2 : !u64i, !cir.ptr<!u64i> loc(#loc151)
            cir.scope {
              %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
              %35 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc58)
              %37 = cir.cmp(gt, %34, %36) : !u64i, !s32i loc(#loc153)
              %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc59)
              %39 = cir.ternary(%38, true {
                %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                %42 = cir.const #cir.int<1> : !s32i loc(#loc63)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc63)
                %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc154)
                %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc64)
                %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc61)
                %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc61)
                %48 = cir.const #cir.int<10> : !s32i loc(#loc65)
                %49 = cir.cmp(eq, %47, %48) : !s32i, !s32i loc(#loc155)
                %50 = cir.cast(int_to_bool, %49 : !s32i), !cir.bool loc(#loc66)
                %51 = cir.ternary(%50, true {
                  %52 = cir.const #true loc(#loc60)
                  cir.yield %52 : !cir.bool loc(#loc60)
                }, false {
                  %52 = cir.const #false loc(#loc60)
                  cir.yield %52 : !cir.bool loc(#loc60)
                }) : (!cir.bool) -> !cir.bool loc(#loc60)
                cir.yield %51 : !cir.bool loc(#loc60)
              }, false {
                %40 = cir.const #false loc(#loc60)
                cir.yield %40 : !cir.bool loc(#loc60)
              }) : (!cir.bool) -> !cir.bool loc(#loc60)
              cir.if %39 {
                %40 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc68)
                %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                %43 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc71)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc71)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc157)
                %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc158)
              } loc(#loc156)
            } loc(#loc152)
          } else {
            %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
            %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc73)
            %33 = cir.const #cir.int<0> : !s32i loc(#loc74)
            %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc74)
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc159)
          } loc(#loc150)
        } loc(#loc147)
      } loc(#loc146)
    } loc(#loc143)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc161)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc12)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc12)
      %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc83)
      cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
      cir.scope {
        %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc89)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc164)
        %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc90)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc93)
        } loc(#loc165)
      } loc(#loc163)
    } loc(#loc160)
    cir.return loc(#loc16)
  } loc(#loc137)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc95)
  } loc(#loc166)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc171)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc171)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc171)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.goto "source" loc(#loc173)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc111)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc112)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc100)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc175)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc119)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc119)
      %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc120)
      cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc176)
      cir.scope {
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc126)
        %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc178)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc127)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc129)
          %20 = cir.call @pclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc130)
        } loc(#loc179)
      } loc(#loc177)
    } loc(#loc174)
    cir.return loc(#loc102)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_18.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":65:27)
#loc10 = loc("/usr/include/stdio.h":903:1)
#loc11 = loc("/usr/include/stdio.h":904:3)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:28)
#loc13 = loc("/usr/include/stdio.h":897:1)
#loc14 = loc("/usr/include/stdio.h":897:36)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":39:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":80:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":41:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":41:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":42:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":42:26)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:37)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":43:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":43:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":44:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":44:10)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":45:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:26)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":48:33)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":69:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:17)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:27)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":50:25)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":51:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":68:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:23)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:28)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:27)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:43)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:47)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:57)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:67)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":53:64)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":54:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":62:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":64:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:27)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:34)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":57:38)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":61:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:31)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:29)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:33)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:36)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:41)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:49)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:50)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:55)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":58:52)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":59:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:39)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:21)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:26)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:34)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":60:35)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":65:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:33)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:22)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":67:29)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":71:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":79:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":72:9)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":72:15)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:16)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":74:31)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":78:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:21)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":75:18)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":76:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":77:20)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":77:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":107:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":110:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":109:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":109:13)
#loc98 = loc("/usr/include/string.h":149:1)
#loc99 = loc("/usr/include/string.h":150:14)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":95:18)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":87:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":105:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":89:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":89:12)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":90:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":90:26)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":91:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":91:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":92:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":92:10)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":93:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":95:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":95:12)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":96:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":104:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":97:9)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":97:15)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:22)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:28)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:16)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":99:31)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":103:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:13)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:21)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":100:18)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":101:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":102:20)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_18.c":102:13)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc10, #loc11])
#loc136 = loc(fused[#loc13, #loc14])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc24, #loc23])
#loc142 = loc(fused[#loc25, #loc26])
#loc143 = loc(fused[#loc30, #loc31])
#loc144 = loc(fused[#loc32, #loc33])
#loc145 = loc(fused[#loc32, #loc34])
#loc146 = loc(fused[#loc36, #loc31])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc45, #loc46])
#loc150 = loc(fused[#loc48, #loc49, #loc50, #loc38])
#loc151 = loc(fused[#loc53, #loc54])
#loc152 = loc(fused[#loc55, #loc56])
#loc153 = loc(fused[#loc57, #loc58])
#loc154 = loc(fused[#loc62, #loc63])
#loc155 = loc(fused[#loc61, #loc65])
#loc156 = loc(fused[#loc67, #loc56])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc69, #loc68])
#loc159 = loc(fused[#loc75, #loc74])
#loc160 = loc(fused[#loc78, #loc79])
#loc161 = loc(fused[#loc80, #loc81])
#loc162 = loc(fused[#loc84, #loc85])
#loc163 = loc(fused[#loc86, #loc87])
#loc164 = loc(fused[#loc88, #loc89])
#loc165 = loc(fused[#loc91, #loc87])
#loc166 = loc(fused[#loc94, #loc95])
#loc167 = loc(fused[#loc96, #loc97])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc101, #loc102])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc108, #loc107])
#loc173 = loc(fused[#loc109, #loc110])
#loc174 = loc(fused[#loc114, #loc115])
#loc175 = loc(fused[#loc116, #loc117])
#loc176 = loc(fused[#loc121, #loc122])
#loc177 = loc(fused[#loc123, #loc124])
#loc178 = loc(fused[#loc125, #loc126])
#loc179 = loc(fused[#loc128, #loc124])
