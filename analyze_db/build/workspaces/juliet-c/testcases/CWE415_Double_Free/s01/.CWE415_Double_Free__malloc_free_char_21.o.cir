!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE415_Double_Free__malloc_free_char_21.c":27:21)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_21.c":27:28)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_21.c":59:26)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_21.c":59:33)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_21.c":88:26)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_21.c":88:33)
#loc138 = loc("CWE415_Double_Free__malloc_free_char_21.c":112:25)
#loc139 = loc("CWE415_Double_Free__malloc_free_char_21.c":112:32)
#loc176 = loc(fused[#loc11, #loc12])
#loc197 = loc(fused[#loc61, #loc62])
#loc213 = loc(fused[#loc101, #loc102])
#loc229 = loc(fused[#loc138, #loc139])
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc173)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc174)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc18)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc18)
      } loc(#loc178)
    } loc(#loc177)
    cir.return loc(#loc10)
  } loc(#loc175)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc27)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc182)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc183)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc39)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
      } loc(#loc188)
    } loc(#loc186)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc40)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %13 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc174)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @badSink(%14) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.return loc(#loc21)
  } loc(#loc179)
  cir.func no_proto @CWE415_Double_Free__malloc_free_char_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc191)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc192)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc193)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc47)
  } loc(#loc190)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc61, #loc62])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc197)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc194)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } else {
      } loc(#loc199)
    } loc(#loc198)
    cir.return loc(#loc60)
  } loc(#loc196)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc78)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc203)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc204)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc205)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc90)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
      } loc(#loc209)
    } loc(#loc207)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc91)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %13 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc194)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @goodB2G1Sink(%14) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.return loc(#loc72)
  } loc(#loc200)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc101, #loc102])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc213)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc211)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc106)
      cir.if %3 {
      } loc(#loc215)
    } loc(#loc214)
    cir.return loc(#loc100)
  } loc(#loc212)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc112)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc114)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc115)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc219)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc220)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc125)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc127)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
      } loc(#loc225)
    } loc(#loc223)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc128)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc128)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %13 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc211)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    cir.call @goodB2G2Sink(%14) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.return loc(#loc109)
  } loc(#loc216)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc227)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc138, #loc139])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc227)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc143)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc145)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
      } loc(#loc231)
    } loc(#loc230)
    cir.return loc(#loc137)
  } loc(#loc228)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc151)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc153)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc154)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc235)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc236)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc237)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc240)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc164)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc165)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc166)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
      } loc(#loc241)
    } loc(#loc239)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %10 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc227)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    cir.call @goodG2BSink(%11) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.return loc(#loc148)
  } loc(#loc232)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_char_21.c":25:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_char_21.c":25:24)
#loc9 = loc("CWE415_Double_Free__malloc_free_char_21.c":27:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_21.c":34:1)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_21.c":28:1)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_21.c":29:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_21.c":33:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_21.c":29:8)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_21.c":30:5)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_21.c":32:9)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_21.c":32:14)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_21.c":36:1)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_21.c":47:1)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_21.c":38:5)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_21.c":38:12)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_21.c":40:12)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_21.c":40:5)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_21.c":41:20)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_21.c":41:27)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_21.c":41:31)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_21.c":41:42)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_21.c":41:43)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_21.c":41:5)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:5)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:33)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:9)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:17)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:23)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:24)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:30)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_21.c":42:29)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_21.c":44:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_21.c":44:10)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_21.c":45:17)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_21.c":45:5)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_21.c":46:13)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_21.c":46:5)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_21.c":133:1)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_21.c":138:1)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_21.c":135:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_21.c":135:14)
#loc50 = loc("CWE415_Double_Free__malloc_free_char_21.c":136:5)
#loc51 = loc("CWE415_Double_Free__malloc_free_char_21.c":136:14)
#loc52 = loc("CWE415_Double_Free__malloc_free_char_21.c":137:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_char_21.c":137:13)
#loc54 = loc("CWE415_Double_Free__malloc_free_char_21.c":54:1)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_21.c":54:29)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_21.c":64:19)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_21.c":59:1)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_21.c":72:1)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_21.c":60:1)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_21.c":61:5)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_21.c":71:5)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_21.c":61:8)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_21.c":62:5)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_21.c":65:5)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_21.c":67:5)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_21.c":64:9)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_21.c":74:1)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_21.c":85:1)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_21.c":76:5)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_21.c":76:12)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_21.c":78:12)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_21.c":78:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_21.c":79:20)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_21.c":79:27)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_21.c":79:31)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_21.c":79:42)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_21.c":79:43)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_21.c":79:5)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:5)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:33)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:9)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:17)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:23)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:24)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:30)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_21.c":80:29)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_21.c":82:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_21.c":82:10)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_21.c":83:22)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_21.c":83:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_21.c":84:18)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_21.c":84:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_21.c":55:1)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_21.c":55:29)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_21.c":88:1)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_21.c":96:1)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_21.c":89:1)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_21.c":90:5)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_21.c":95:5)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_21.c":90:8)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_21.c":91:5)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_21.c":98:1)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_21.c":109:1)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_21.c":100:5)
#loc111 = loc("CWE415_Double_Free__malloc_free_char_21.c":100:12)
#loc112 = loc("CWE415_Double_Free__malloc_free_char_21.c":102:12)
#loc113 = loc("CWE415_Double_Free__malloc_free_char_21.c":102:5)
#loc114 = loc("CWE415_Double_Free__malloc_free_char_21.c":103:20)
#loc115 = loc("CWE415_Double_Free__malloc_free_char_21.c":103:27)
#loc116 = loc("CWE415_Double_Free__malloc_free_char_21.c":103:31)
#loc117 = loc("CWE415_Double_Free__malloc_free_char_21.c":103:42)
#loc118 = loc("CWE415_Double_Free__malloc_free_char_21.c":103:43)
#loc119 = loc("CWE415_Double_Free__malloc_free_char_21.c":103:5)
#loc120 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:5)
#loc121 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:33)
#loc122 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:9)
#loc123 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:17)
#loc124 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:23)
#loc125 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:24)
#loc126 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:30)
#loc127 = loc("CWE415_Double_Free__malloc_free_char_21.c":104:29)
#loc128 = loc("CWE415_Double_Free__malloc_free_char_21.c":106:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_char_21.c":106:10)
#loc130 = loc("CWE415_Double_Free__malloc_free_char_21.c":107:22)
#loc131 = loc("CWE415_Double_Free__malloc_free_char_21.c":107:5)
#loc132 = loc("CWE415_Double_Free__malloc_free_char_21.c":108:18)
#loc133 = loc("CWE415_Double_Free__malloc_free_char_21.c":108:5)
#loc134 = loc("CWE415_Double_Free__malloc_free_char_21.c":56:1)
#loc135 = loc("CWE415_Double_Free__malloc_free_char_21.c":56:28)
#loc136 = loc("CWE415_Double_Free__malloc_free_char_21.c":112:1)
#loc137 = loc("CWE415_Double_Free__malloc_free_char_21.c":119:1)
#loc140 = loc("CWE415_Double_Free__malloc_free_char_21.c":113:1)
#loc141 = loc("CWE415_Double_Free__malloc_free_char_21.c":114:5)
#loc142 = loc("CWE415_Double_Free__malloc_free_char_21.c":118:5)
#loc143 = loc("CWE415_Double_Free__malloc_free_char_21.c":114:8)
#loc144 = loc("CWE415_Double_Free__malloc_free_char_21.c":115:5)
#loc145 = loc("CWE415_Double_Free__malloc_free_char_21.c":117:9)
#loc146 = loc("CWE415_Double_Free__malloc_free_char_21.c":117:14)
#loc147 = loc("CWE415_Double_Free__malloc_free_char_21.c":121:1)
#loc148 = loc("CWE415_Double_Free__malloc_free_char_21.c":131:1)
#loc149 = loc("CWE415_Double_Free__malloc_free_char_21.c":123:5)
#loc150 = loc("CWE415_Double_Free__malloc_free_char_21.c":123:12)
#loc151 = loc("CWE415_Double_Free__malloc_free_char_21.c":125:12)
#loc152 = loc("CWE415_Double_Free__malloc_free_char_21.c":125:5)
#loc153 = loc("CWE415_Double_Free__malloc_free_char_21.c":126:20)
#loc154 = loc("CWE415_Double_Free__malloc_free_char_21.c":126:27)
#loc155 = loc("CWE415_Double_Free__malloc_free_char_21.c":126:31)
#loc156 = loc("CWE415_Double_Free__malloc_free_char_21.c":126:42)
#loc157 = loc("CWE415_Double_Free__malloc_free_char_21.c":126:43)
#loc158 = loc("CWE415_Double_Free__malloc_free_char_21.c":126:5)
#loc159 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:5)
#loc160 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:33)
#loc161 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:9)
#loc162 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:17)
#loc163 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:23)
#loc164 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:24)
#loc165 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:30)
#loc166 = loc("CWE415_Double_Free__malloc_free_char_21.c":127:29)
#loc167 = loc("CWE415_Double_Free__malloc_free_char_21.c":129:21)
#loc168 = loc("CWE415_Double_Free__malloc_free_char_21.c":129:5)
#loc169 = loc("CWE415_Double_Free__malloc_free_char_21.c":130:17)
#loc170 = loc("CWE415_Double_Free__malloc_free_char_21.c":130:5)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc177 = loc(fused[#loc14, #loc15])
#loc178 = loc(fused[#loc17, #loc15])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc22, #loc23])
#loc181 = loc(fused[#loc25, #loc24])
#loc182 = loc(fused[#loc28, #loc29])
#loc183 = loc(fused[#loc27, #loc29])
#loc184 = loc(fused[#loc26, #loc30])
#loc185 = loc(fused[#loc31, #loc30])
#loc186 = loc(fused[#loc32, #loc33])
#loc187 = loc(fused[#loc34, #loc35])
#loc188 = loc(fused[#loc36, #loc33])
#loc189 = loc(fused[#loc43, #loc42])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc48, #loc49])
#loc192 = loc(fused[#loc50, #loc51])
#loc193 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc56, #loc57])
#loc196 = loc(fused[#loc59, #loc60])
#loc198 = loc(fused[#loc64, #loc65])
#loc199 = loc(fused[#loc67, #loc68, #loc69, #loc65])
#loc200 = loc(fused[#loc71, #loc72])
#loc201 = loc(fused[#loc73, #loc74])
#loc202 = loc(fused[#loc76, #loc75])
#loc203 = loc(fused[#loc79, #loc80])
#loc204 = loc(fused[#loc78, #loc80])
#loc205 = loc(fused[#loc77, #loc81])
#loc206 = loc(fused[#loc82, #loc81])
#loc207 = loc(fused[#loc83, #loc84])
#loc208 = loc(fused[#loc85, #loc86])
#loc209 = loc(fused[#loc87, #loc84])
#loc210 = loc(fused[#loc94, #loc93])
#loc211 = loc(fused[#loc97, #loc98])
#loc212 = loc(fused[#loc99, #loc100])
#loc214 = loc(fused[#loc104, #loc105])
#loc215 = loc(fused[#loc107, #loc105])
#loc216 = loc(fused[#loc108, #loc109])
#loc217 = loc(fused[#loc110, #loc111])
#loc218 = loc(fused[#loc113, #loc112])
#loc219 = loc(fused[#loc116, #loc117])
#loc220 = loc(fused[#loc115, #loc117])
#loc221 = loc(fused[#loc114, #loc118])
#loc222 = loc(fused[#loc119, #loc118])
#loc223 = loc(fused[#loc120, #loc121])
#loc224 = loc(fused[#loc122, #loc123])
#loc225 = loc(fused[#loc124, #loc121])
#loc226 = loc(fused[#loc131, #loc130])
#loc227 = loc(fused[#loc134, #loc135])
#loc228 = loc(fused[#loc136, #loc137])
#loc230 = loc(fused[#loc141, #loc142])
#loc231 = loc(fused[#loc144, #loc142])
#loc232 = loc(fused[#loc147, #loc148])
#loc233 = loc(fused[#loc149, #loc150])
#loc234 = loc(fused[#loc152, #loc151])
#loc235 = loc(fused[#loc155, #loc156])
#loc236 = loc(fused[#loc154, #loc156])
#loc237 = loc(fused[#loc153, #loc157])
#loc238 = loc(fused[#loc158, #loc157])
#loc239 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc161, #loc162])
#loc241 = loc(fused[#loc163, #loc160])
#loc242 = loc(fused[#loc168, #loc167])
