!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc77)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_03_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc80)
      cir.if %2 {
        %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc13)
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc83)
        %8 = cir.const #cir.int<6> : !u64i loc(#loc84)
        %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc77)
        %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
        %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc13)
      } loc(#loc81)
    } loc(#loc79)
    cir.return loc(#loc7)
  } loc(#loc78)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_03_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc29)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc35)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc91)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc39)
      } else {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc42)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc43)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc43)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc95)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc96)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc77)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc42)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc97)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc98)
          cir.if %13 {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc29)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc29)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc53)
          } loc(#loc99)
        } loc(#loc93)
      } loc(#loc92)
    } loc(#loc90)
    cir.return loc(#loc31)
  } loc(#loc89)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc58)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc59)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc102)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc63)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc64)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc64)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc106)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc107)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc77)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc63)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc108)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc109)
          cir.if %13 {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc75)
          } loc(#loc110)
        } loc(#loc104)
      } loc(#loc103)
    } loc(#loc101)
    cir.return loc(#loc55)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":745:1)
#loc2 = loc("/usr/include/stdio.h":746:43)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:24)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":24:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":31:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":26:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":30:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":26:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":26:11)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":27:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:16)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:34)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:45)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:48)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:63)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":29:66)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":68:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":72:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":70:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":70:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":71:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":71:11)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":43:19)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":50:23)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":38:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":53:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":40:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":52:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":40:8)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":40:11)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":41:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":44:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":46:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":43:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":51:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:28)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:20)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:38)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:49)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:52)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:67)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:70)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:81)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":48:96)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":49:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":50:13)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":56:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":66:1)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":58:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":65:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":58:8)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":58:11)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":59:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:9)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":64:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:28)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:20)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:38)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:49)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:52)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:67)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:70)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:81)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":61:96)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":62:9)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":63:23)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fwrite_03.c":63:13)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc4, #loc5])
#loc78 = loc(fused[#loc6, #loc7])
#loc79 = loc(fused[#loc8, #loc9])
#loc80 = loc(fused[#loc10, #loc11])
#loc81 = loc(fused[#loc12, #loc9])
#loc82 = loc(fused[#loc14, #loc3])
#loc83 = loc(fused[#loc15, #loc16])
#loc84 = loc(fused[#loc17, #loc18])
#loc85 = loc(fused[#loc20, #loc21])
#loc86 = loc(fused[#loc22, #loc23])
#loc87 = loc(fused[#loc24, #loc25])
#loc88 = loc(fused[#loc26, #loc27])
#loc89 = loc(fused[#loc30, #loc31])
#loc90 = loc(fused[#loc32, #loc33])
#loc91 = loc(fused[#loc34, #loc35])
#loc92 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc93 = loc(fused[#loc40, #loc41])
#loc94 = loc(fused[#loc44, #loc43])
#loc95 = loc(fused[#loc45, #loc46])
#loc96 = loc(fused[#loc47, #loc48])
#loc97 = loc(fused[#loc50, #loc51])
#loc98 = loc(fused[#loc42, #loc51])
#loc99 = loc(fused[#loc52, #loc41])
#loc100 = loc(fused[#loc54, #loc55])
#loc101 = loc(fused[#loc56, #loc57])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc60, #loc57])
#loc104 = loc(fused[#loc61, #loc62])
#loc105 = loc(fused[#loc65, #loc64])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc68, #loc69])
#loc108 = loc(fused[#loc71, #loc72])
#loc109 = loc(fused[#loc63, #loc72])
#loc110 = loc(fused[#loc73, #loc62])
