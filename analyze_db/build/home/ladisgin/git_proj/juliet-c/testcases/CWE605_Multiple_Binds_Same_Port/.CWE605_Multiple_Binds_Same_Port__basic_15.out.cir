!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":358:10)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":358:14)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":358:20)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":358:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc619 = loc(fused[#loc214, #loc215])
#loc620 = loc(fused[#loc216, #loc217])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc538)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc539)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc540)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc541)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc542)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc543)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc544)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc545)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc546)
  cir.func private @close(!s32i) -> !s32i loc(#loc547)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc548)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc28)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc552)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc553)
            %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc554)
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc555)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc556)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc557)
            %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc558)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc559)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc560)
            %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc552)
            cir.store %10, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc552)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc41)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc556)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc43)
            cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc557)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
            %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
            cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc558)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc47)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc559)
            %19 = cir.const #cir.int<4> : !u64i loc(#loc561)
            %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc561)
            cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc560)
            cir.scope {
              cir.do {
                %22 = cir.const #cir.int<2> : !s32i loc(#loc55)
                %23 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %24 = cir.const #cir.int<6> : !s32i loc(#loc57)
                %25 = cir.call @socket(%22, %23, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
                cir.store %25, %5 : !s32i, !cir.ptr<!s32i> loc(#loc563)
                cir.scope {
                  %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc64)
                  %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc64)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc565)
                  cir.if %77 {
                    cir.break loc(#loc66)
                  } loc(#loc566)
                } loc(#loc564)
                cir.scope {
                  %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc70)
                  %76 = cir.const #cir.int<2> : !s32i loc(#loc71)
                  %77 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc568)
                  %78 = cir.cast(bitcast, %77 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc569)
                  %79 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                  %80 = cir.cast(integral, %79 : !s32i), !u32i loc(#loc75)
                  %81 = cir.call @setsockopt(%74, %75, %76, %78, %80) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc76)
                  %82 = cir.const #cir.int<0> : !s32i loc(#loc77)
                  %83 = cir.cmp(ne, %81, %82) : !s32i, !cir.bool loc(#loc570)
                  cir.if %83 {
                    cir.break loc(#loc79)
                  } loc(#loc571)
                } loc(#loc567)
                %26 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc572)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc82)
                %28 = cir.const #cir.int<16> : !u64i loc(#loc573)
                cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc574)
                %29 = cir.const #cir.int<2> : !s32i loc(#loc87)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc87)
                %31 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc575)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc90)
                %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc90)
                %34 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
                %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
                cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc576)
                %36 = cir.const #cir.int<27015> : !s32i loc(#loc94)
                %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc94)
                %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc95)
                %39 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
                cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc577)
                cir.scope {
                  %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %75 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc579)
                  %76 = cir.const #cir.int<16> : !u64i loc(#loc580)
                  %77 = cir.cast(integral, %76 : !u64i), !u32i loc(#loc580)
                  %78 = cir.call @bind(%74, %75, %77) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc106)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc107)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc581)
                  cir.if %81 {
                    cir.break loc(#loc109)
                  } loc(#loc582)
                } loc(#loc578)
                cir.scope {
                  %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %75 = cir.const #cir.int<5> : !s32i loc(#loc113)
                  %76 = cir.call @listen(%74, %75) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc114)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc115)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc115)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc584)
                  cir.if %79 {
                    cir.break loc(#loc117)
                  } loc(#loc585)
                } loc(#loc583)
                %40 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc119)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc120)
                %43 = cir.call @accept(%40, %41, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc121)
                cir.store %43, %6 : !s32i, !cir.ptr<!s32i> loc(#loc586)
                cir.scope {
                  %74 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc127)
                  %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc127)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc588)
                  cir.if %77 {
                    cir.break loc(#loc129)
                  } loc(#loc589)
                } loc(#loc587)
                %44 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                %45 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
                %46 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc132)
                %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc133)
                %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc590)
                %49 = cir.const #cir.int<100> : !s32i loc(#loc134)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc134)
                %51 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc135)
                %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc591)
                %53 = cir.const #cir.int<1> : !s32i loc(#loc136)
                %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc136)
                %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc592)
                %56 = cir.cast(integral, %55 : !u64i), !s32i loc(#loc592)
                %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc592)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc137)
                %59 = cir.call @recv(%44, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
                %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc138)
                cir.store %60, %2 : !s32i, !cir.ptr<!s32i> loc(#loc593)
                cir.scope {
                  %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc144)
                  %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc144)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc595)
                  %78 = cir.ternary(%77, true {
                    %79 = cir.const #true loc(#loc145)
                    cir.yield %79 : !cir.bool loc(#loc145)
                  }, false {
                    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                    %80 = cir.const #cir.int<0> : !s32i loc(#loc147)
                    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc596)
                    %82 = cir.ternary(%81, true {
                      %83 = cir.const #true loc(#loc145)
                      cir.yield %83 : !cir.bool loc(#loc145)
                    }, false {
                      %83 = cir.const #false loc(#loc145)
                      cir.yield %83 : !cir.bool loc(#loc145)
                    }) : (!cir.bool) -> !cir.bool loc(#loc145)
                    cir.yield %82 : !cir.bool loc(#loc145)
                  }) : (!cir.bool) -> !cir.bool loc(#loc145)
                  cir.if %78 {
                    cir.break loc(#loc149)
                  } loc(#loc597)
                } loc(#loc594)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc150)
                %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc150)
                %63 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                %64 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
                %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc152)
                cir.store %62, %65 : !s8i, !cir.ptr<!s8i> loc(#loc598)
                %66 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc153)
                %67 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
                %68 = cir.const #cir.int<13> : !s32i loc(#loc155)
                %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
                cir.store %69, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc599)
                cir.scope {
                  %74 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                  %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
                  cir.if %75 {
                    %76 = cir.const #cir.int<0> : !s32i loc(#loc162)
                    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc162)
                    %78 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                    cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc602)
                  } loc(#loc601)
                } loc(#loc600)
                %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc165)
                %71 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
                %72 = cir.const #cir.int<10> : !s32i loc(#loc167)
                %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
                cir.store %73, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc603)
                cir.scope {
                  %74 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                  %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc172)
                  cir.if %75 {
                    %76 = cir.const #cir.int<0> : !s32i loc(#loc174)
                    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc174)
                    %78 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                    cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc606)
                  } loc(#loc605)
                } loc(#loc604)
                cir.yield loc(#loc54)
              } while {
                %22 = cir.const #cir.int<0> : !s32i loc(#loc177)
                %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc177)
                cir.condition(%23) loc(#loc177)
              } loc(#loc562)
            } loc(#loc562)
            cir.scope {
              %22 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc181)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc181)
              %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc608)
              cir.if %25 {
                %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc184)
              } loc(#loc609)
            } loc(#loc607)
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc188)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc188)
              %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc611)
              cir.if %25 {
                %26 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc191)
              } loc(#loc612)
            } loc(#loc610)
            %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc193)
          } loc(#loc551)
          cir.break loc(#loc194)
        } loc(#loc29)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc23)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc23)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc196)
          cir.break loc(#loc197)
        } loc(#loc195)
        cir.yield loc(#loc26)
      } loc(#loc26)
    } loc(#loc550)
    cir.return loc(#loc25)
  } loc(#loc549)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc614)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc200)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc615)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc202)
    cir.return loc(#loc199)
  } loc(#loc613)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc616)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc617)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc211)
  cir.func @main(%arg0: !s32i loc(fused[#loc214, #loc215]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc216, #loc217])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc619)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc620)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc219)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc220)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc221)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %8 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc621)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_15_good() : () -> () loc(#loc223)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %13 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc622)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_15_bad() : () -> () loc(#loc227)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc623)
    cir.return %17 : !s32i loc(#loc623)
  } loc(#loc618)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc236)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc238)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc238)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc239)
          cir.break loc(#loc240)
        } loc(#loc237)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc627)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc628)
            %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc629)
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc630)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc631)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc632)
            %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc633)
            %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc627)
            cir.store %8, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc627)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc253)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc253)
            cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc631)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc255)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc255)
            cir.store %12, %6 : !s32i, !cir.ptr<!s32i> loc(#loc632)
            %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc258)
            %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc259)
            %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc258)
            cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc633)
            cir.scope {
              cir.do {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc262)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc263)
                %19 = cir.const #cir.int<6> : !s32i loc(#loc264)
                %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc265)
                cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc635)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc271)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc271)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc637)
                  cir.if %72 {
                    cir.break loc(#loc273)
                  } loc(#loc638)
                } loc(#loc636)
                %21 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc639)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc276)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc640)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc641)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc281)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc281)
                %26 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc642)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc283)
                %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc283)
                %29 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
                %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
                cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc643)
                %31 = cir.const #cir.int<27015> : !s32i loc(#loc285)
                %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc285)
                %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
                %34 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
                cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc644)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                  %70 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc646)
                  %71 = cir.const #cir.int<16> : !u64i loc(#loc647)
                  %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc647)
                  %73 = cir.call @bind(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc296)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc297)
                  %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc297)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc648)
                  cir.if %76 {
                    cir.break loc(#loc299)
                  } loc(#loc649)
                } loc(#loc645)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                  %70 = cir.const #cir.int<5> : !s32i loc(#loc303)
                  %71 = cir.call @listen(%69, %70) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc304)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc305)
                  %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc305)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc651)
                  cir.if %74 {
                    cir.break loc(#loc307)
                  } loc(#loc652)
                } loc(#loc650)
                %35 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc309)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc310)
                %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc311)
                cir.store %38, %6 : !s32i, !cir.ptr<!s32i> loc(#loc653)
                cir.scope {
                  %69 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc316)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc317)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc317)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc655)
                  cir.if %72 {
                    cir.break loc(#loc319)
                  } loc(#loc656)
                } loc(#loc654)
                %39 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc320)
                %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc321)
                %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc322)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc323)
                %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc657)
                %44 = cir.const #cir.int<100> : !s32i loc(#loc324)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc324)
                %46 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc325)
                %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc658)
                %48 = cir.const #cir.int<1> : !s32i loc(#loc326)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc326)
                %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc659)
                %51 = cir.cast(integral, %50 : !u64i), !s32i loc(#loc659)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc659)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc327)
                %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc328)
                %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc328)
                cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc660)
                cir.scope {
                  %69 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc333)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc334)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc334)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc662)
                  %73 = cir.ternary(%72, true {
                    %74 = cir.const #true loc(#loc335)
                    cir.yield %74 : !cir.bool loc(#loc335)
                  }, false {
                    %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                    %75 = cir.const #cir.int<0> : !s32i loc(#loc337)
                    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc663)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc335)
                      cir.yield %78 : !cir.bool loc(#loc335)
                    }, false {
                      %78 = cir.const #false loc(#loc335)
                      cir.yield %78 : !cir.bool loc(#loc335)
                    }) : (!cir.bool) -> !cir.bool loc(#loc335)
                    cir.yield %77 : !cir.bool loc(#loc335)
                  }) : (!cir.bool) -> !cir.bool loc(#loc335)
                  cir.if %73 {
                    cir.break loc(#loc339)
                  } loc(#loc664)
                } loc(#loc661)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc340)
                %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc340)
                %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc341)
                %59 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc342)
                %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc342)
                cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc665)
                %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc343)
                %62 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc344)
                %63 = cir.const #cir.int<13> : !s32i loc(#loc345)
                %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc343)
                cir.store %64, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc666)
                cir.scope {
                  %69 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc350)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc350)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc352)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc352)
                    %73 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc353)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc669)
                  } loc(#loc668)
                } loc(#loc667)
                %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc355)
                %66 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc356)
                %67 = cir.const #cir.int<10> : !s32i loc(#loc357)
                %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc355)
                cir.store %68, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc670)
                cir.scope {
                  %69 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc362)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc362)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc364)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc364)
                    %73 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc365)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc673)
                  } loc(#loc672)
                } loc(#loc671)
                cir.yield loc(#loc261)
              } while {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc367)
                %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc367)
                cir.condition(%18) loc(#loc367)
              } loc(#loc634)
            } loc(#loc634)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc371)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc371)
              %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc675)
              cir.if %20 {
                %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc373)
                %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc374)
              } loc(#loc676)
            } loc(#loc674)
            cir.scope {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc377)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc378)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc378)
              %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc678)
              cir.if %20 {
                %21 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc381)
              } loc(#loc679)
            } loc(#loc677)
            %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc382)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc383)
          } loc(#loc626)
          cir.break loc(#loc384)
        } loc(#loc241)
        cir.yield loc(#loc234)
      } loc(#loc234)
    } loc(#loc625)
    cir.return loc(#loc233)
  } loc(#loc624)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc389)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc683)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc684)
            %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc685)
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc686)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc687)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc688)
            %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc689)
            %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc683)
            cir.store %8, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc683)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc402)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc402)
            cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc687)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc404)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc404)
            cir.store %12, %6 : !s32i, !cir.ptr<!s32i> loc(#loc688)
            %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc407)
            %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc408)
            %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc407)
            cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc689)
            cir.scope {
              cir.do {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc411)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc412)
                %19 = cir.const #cir.int<6> : !s32i loc(#loc413)
                %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc414)
                cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc691)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc419)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc420)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc420)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc693)
                  cir.if %72 {
                    cir.break loc(#loc422)
                  } loc(#loc694)
                } loc(#loc692)
                %21 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc695)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc425)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc696)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc697)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc430)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc430)
                %26 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc698)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc432)
                %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc432)
                %29 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
                %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
                cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc699)
                %31 = cir.const #cir.int<27015> : !s32i loc(#loc434)
                %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc434)
                %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc435)
                %34 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
                cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc700)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc440)
                  %70 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc702)
                  %71 = cir.const #cir.int<16> : !u64i loc(#loc703)
                  %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc703)
                  %73 = cir.call @bind(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc445)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc446)
                  %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc446)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc704)
                  cir.if %76 {
                    cir.break loc(#loc448)
                  } loc(#loc705)
                } loc(#loc701)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc451)
                  %70 = cir.const #cir.int<5> : !s32i loc(#loc452)
                  %71 = cir.call @listen(%69, %70) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc453)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc454)
                  %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc454)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc707)
                  cir.if %74 {
                    cir.break loc(#loc456)
                  } loc(#loc708)
                } loc(#loc706)
                %35 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc458)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc459)
                %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc460)
                cir.store %38, %6 : !s32i, !cir.ptr<!s32i> loc(#loc709)
                cir.scope {
                  %69 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc465)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc466)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc466)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc711)
                  cir.if %72 {
                    cir.break loc(#loc468)
                  } loc(#loc712)
                } loc(#loc710)
                %39 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc469)
                %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc470)
                %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc471)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc472)
                %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc713)
                %44 = cir.const #cir.int<100> : !s32i loc(#loc473)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc473)
                %46 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc474)
                %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc714)
                %48 = cir.const #cir.int<1> : !s32i loc(#loc475)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc475)
                %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc715)
                %51 = cir.cast(integral, %50 : !u64i), !s32i loc(#loc715)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc715)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc476)
                %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc477)
                %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc477)
                cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc716)
                cir.scope {
                  %69 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc482)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc483)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc483)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc718)
                  %73 = cir.ternary(%72, true {
                    %74 = cir.const #true loc(#loc484)
                    cir.yield %74 : !cir.bool loc(#loc484)
                  }, false {
                    %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc485)
                    %75 = cir.const #cir.int<0> : !s32i loc(#loc486)
                    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc719)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc484)
                      cir.yield %78 : !cir.bool loc(#loc484)
                    }, false {
                      %78 = cir.const #false loc(#loc484)
                      cir.yield %78 : !cir.bool loc(#loc484)
                    }) : (!cir.bool) -> !cir.bool loc(#loc484)
                    cir.yield %77 : !cir.bool loc(#loc484)
                  }) : (!cir.bool) -> !cir.bool loc(#loc484)
                  cir.if %73 {
                    cir.break loc(#loc488)
                  } loc(#loc720)
                } loc(#loc717)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc489)
                %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc489)
                %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc490)
                %59 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc491)
                %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc491)
                cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc721)
                %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc492)
                %62 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc493)
                %63 = cir.const #cir.int<13> : !s32i loc(#loc494)
                %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc492)
                cir.store %64, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc722)
                cir.scope {
                  %69 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc499)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc499)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc501)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc501)
                    %73 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc502)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc725)
                  } loc(#loc724)
                } loc(#loc723)
                %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc504)
                %66 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc505)
                %67 = cir.const #cir.int<10> : !s32i loc(#loc506)
                %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc504)
                cir.store %68, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc726)
                cir.scope {
                  %69 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc511)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc511)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc513)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc513)
                    %73 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc514)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc729)
                  } loc(#loc728)
                } loc(#loc727)
                cir.yield loc(#loc410)
              } while {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc516)
                %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc516)
                cir.condition(%18) loc(#loc516)
              } loc(#loc690)
            } loc(#loc690)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc519)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc520)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc520)
              %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc731)
              cir.if %20 {
                %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc522)
                %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc523)
              } loc(#loc732)
            } loc(#loc730)
            cir.scope {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc526)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc527)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc527)
              %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc734)
              cir.if %20 {
                %21 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc529)
                %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc530)
              } loc(#loc735)
            } loc(#loc733)
            %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc531)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc532)
          } loc(#loc682)
          cir.break loc(#loc533)
        } loc(#loc390)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc535)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc535)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc536)
          cir.break loc(#loc537)
        } loc(#loc534)
        cir.yield loc(#loc387)
      } loc(#loc387)
    } loc(#loc681)
    cir.return loc(#loc386)
  } loc(#loc680)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/sys/socket.h":277:1)
#loc6 = loc("/usr/include/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":404:1)
#loc8 = loc("/usr/include/netinet/in.h":405:40)
#loc9 = loc("/usr/include/sys/socket.h":112:1)
#loc10 = loc("/usr/include/sys/socket.h":113:6)
#loc11 = loc("/usr/include/sys/socket.h":296:1)
#loc12 = loc("/usr/include/sys/socket.h":296:39)
#loc13 = loc("/usr/include/sys/socket.h":306:1)
#loc14 = loc("/usr/include/sys/socket.h":307:38)
#loc15 = loc("/usr/include/sys/socket.h":145:1)
#loc16 = loc("/usr/include/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":144:19)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":44:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":147:1)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":46:5)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":146:5)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":46:12)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":48:5)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":49:5)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":140:5)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":50:9)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":50:26)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":55:9)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":55:13)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":56:9)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":56:28)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":57:9)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":57:15)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":58:9)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":58:31)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":59:9)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":59:31)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":60:9)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":60:37)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":65:9)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":65:23)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":66:9)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":66:33)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":60:26)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":60:33)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":66:23)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":68:9)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":124:17)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":77:35)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":77:44)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":77:57)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":77:28)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":77:13)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":77:68)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":78:13)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":81:13)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":78:17)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":78:33)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":79:13)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":80:17)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:13)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":86:13)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:28)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:42)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:54)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:75)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:76)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:68)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:85)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:17)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":83:97)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":84:13)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":85:17)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:20)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:21)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:30)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:33)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:47)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:13)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":87:48)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":88:34)
#loc88 = loc("/usr/include/netinet/in.h":249:5)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":88:13)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":89:39)
#loc91 = loc("/usr/include/netinet/in.h":251:20)
#loc92 = loc("/usr/include/netinet/in.h":33:15)
#loc93 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":89:13)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":90:38)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":90:32)
#loc96 = loc("/usr/include/netinet/in.h":250:15)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":90:13)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":90:46)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:13)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":94:13)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:22)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:54)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:55)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:64)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:78)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:17)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":91:84)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":92:13)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":93:17)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":95:13)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":98:13)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":95:24)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":95:38)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":95:17)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":95:57)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":96:13)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":97:17)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":99:35)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":99:49)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":99:55)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":99:28)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":99:13)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":99:59)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":100:13)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":103:13)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":100:17)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":100:33)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":101:13)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":102:17)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:31)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:45)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:50)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:49)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:65)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:69)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:77)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:81)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:26)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:13)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":105:82)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":106:13)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":109:13)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":106:17)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":106:31)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":106:44)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":106:47)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":106:61)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":107:13)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":108:17)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":111:32)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":111:18)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":111:13)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":113:23)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":113:30)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":113:36)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":113:13)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":113:40)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":114:13)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":117:13)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":114:17)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":115:13)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":116:28)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":116:18)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":116:17)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":118:23)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":118:30)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":118:36)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":118:13)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":118:40)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":119:13)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":122:13)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":119:17)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":120:13)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":121:28)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":121:18)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":121:17)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":124:16)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":125:9)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":128:9)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":125:13)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":125:29)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":126:9)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":127:26)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":127:13)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":129:9)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":132:9)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":129:13)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":129:29)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":130:9)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":131:26)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":131:13)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":139:19)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":139:9)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":141:5)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":142:5)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":144:9)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":145:9)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":343:1)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":347:1)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":345:5)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":345:11)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":346:5)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":346:11)
#loc204 = loc("/usr/include/stdlib.h":575:1)
#loc205 = loc("/usr/include/stdlib.h":575:41)
#loc206 = loc("/usr/include/time.h":76:1)
#loc207 = loc("/usr/include/time.h":76:38)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":363:15)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":365:15)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":368:15)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":370:15)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":358:1)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":373:1)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":359:1)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":361:27)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":361:22)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":361:5)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":363:5)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":364:5)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":364:52)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":365:5)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":368:5)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":369:5)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":369:51)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":370:5)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":372:12)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":372:5)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":154:1)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":246:1)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":156:5)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":245:5)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":156:12)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":158:5)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":160:19)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":160:9)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":161:9)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":162:5)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":163:5)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":243:5)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":164:9)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":164:26)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":169:9)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":169:13)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":170:9)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":170:28)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":171:9)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":171:15)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":172:9)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":172:31)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":173:9)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":173:31)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":174:9)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":174:37)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":174:26)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":174:33)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":175:9)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":227:17)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":184:35)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":184:44)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":184:57)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":184:28)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":184:13)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":184:68)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":185:13)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":188:13)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":185:17)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":185:33)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":186:13)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":187:17)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:20)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:21)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:30)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:33)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:47)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:13)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":190:48)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":191:34)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":191:13)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":192:39)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":192:13)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":193:38)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":193:32)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":193:13)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":193:46)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:13)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":197:13)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:22)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:54)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:55)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:64)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:78)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:17)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":194:84)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":195:13)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":196:17)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":198:13)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":201:13)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":198:24)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":198:38)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":198:17)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":198:57)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":199:13)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":200:17)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":202:35)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":202:49)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":202:55)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":202:28)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":202:13)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":202:59)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":203:13)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":206:13)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":203:17)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":203:33)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":204:13)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":205:17)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:31)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:45)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:50)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:49)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:65)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:69)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:77)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:81)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:26)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:13)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":208:82)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":209:13)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":212:13)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":209:17)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":209:31)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":209:44)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":209:47)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":209:61)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":210:13)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":211:17)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":214:32)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":214:18)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":214:13)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":216:23)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":216:30)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":216:36)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":216:13)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":216:40)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":217:13)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":220:13)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":217:17)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":218:13)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":219:28)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":219:18)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":219:17)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":221:23)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":221:30)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":221:36)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":221:13)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":221:40)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":222:13)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":225:13)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":222:17)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":223:13)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":224:28)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":224:18)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":224:17)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":227:16)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":228:9)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":231:9)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":228:13)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":228:29)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":229:9)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":230:26)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":230:13)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":232:9)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":235:9)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":232:13)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":232:29)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":233:9)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":234:26)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":234:13)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":242:19)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":242:9)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":244:5)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":249:1)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":341:1)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":251:5)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":340:5)
#loc389 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":251:12)
#loc390 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":253:5)
#loc391 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":254:5)
#loc392 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":334:5)
#loc393 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":255:9)
#loc394 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":255:26)
#loc395 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":260:9)
#loc396 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":260:13)
#loc397 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":261:9)
#loc398 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":261:28)
#loc399 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":262:9)
#loc400 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":262:15)
#loc401 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":263:9)
#loc402 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":263:31)
#loc403 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":264:9)
#loc404 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":264:31)
#loc405 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":265:9)
#loc406 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":265:37)
#loc407 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":265:26)
#loc408 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":265:33)
#loc409 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":266:9)
#loc410 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":318:17)
#loc411 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":275:35)
#loc412 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":275:44)
#loc413 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":275:57)
#loc414 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":275:28)
#loc415 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":275:13)
#loc416 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":275:68)
#loc417 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":276:13)
#loc418 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":279:13)
#loc419 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":276:17)
#loc420 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":276:33)
#loc421 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":277:13)
#loc422 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":278:17)
#loc423 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:20)
#loc424 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:21)
#loc425 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:30)
#loc426 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:33)
#loc427 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:47)
#loc428 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:13)
#loc429 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":281:48)
#loc430 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":282:34)
#loc431 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":282:13)
#loc432 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":283:39)
#loc433 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":283:13)
#loc434 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":284:38)
#loc435 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":284:32)
#loc436 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":284:13)
#loc437 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":284:46)
#loc438 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:13)
#loc439 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":288:13)
#loc440 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:22)
#loc441 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:54)
#loc442 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:55)
#loc443 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:64)
#loc444 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:78)
#loc445 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:17)
#loc446 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":285:84)
#loc447 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":286:13)
#loc448 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":287:17)
#loc449 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":289:13)
#loc450 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":292:13)
#loc451 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":289:24)
#loc452 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":289:38)
#loc453 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":289:17)
#loc454 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":289:57)
#loc455 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":290:13)
#loc456 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":291:17)
#loc457 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":293:35)
#loc458 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":293:49)
#loc459 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":293:55)
#loc460 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":293:28)
#loc461 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":293:13)
#loc462 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":293:59)
#loc463 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":294:13)
#loc464 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":297:13)
#loc465 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":294:17)
#loc466 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":294:33)
#loc467 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":295:13)
#loc468 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":296:17)
#loc469 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:31)
#loc470 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:45)
#loc471 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:50)
#loc472 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:49)
#loc473 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:65)
#loc474 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:69)
#loc475 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:77)
#loc476 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:81)
#loc477 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:26)
#loc478 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:13)
#loc479 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":299:82)
#loc480 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":300:13)
#loc481 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":303:13)
#loc482 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":300:17)
#loc483 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":300:31)
#loc484 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":300:44)
#loc485 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":300:47)
#loc486 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":300:61)
#loc487 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":301:13)
#loc488 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":302:17)
#loc489 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":305:32)
#loc490 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":305:18)
#loc491 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":305:13)
#loc492 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":307:23)
#loc493 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":307:30)
#loc494 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":307:36)
#loc495 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":307:13)
#loc496 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":307:40)
#loc497 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":308:13)
#loc498 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":311:13)
#loc499 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":308:17)
#loc500 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":309:13)
#loc501 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":310:28)
#loc502 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":310:18)
#loc503 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":310:17)
#loc504 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":312:23)
#loc505 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":312:30)
#loc506 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":312:36)
#loc507 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":312:13)
#loc508 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":312:40)
#loc509 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":313:13)
#loc510 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":316:13)
#loc511 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":313:17)
#loc512 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":314:13)
#loc513 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":315:28)
#loc514 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":315:18)
#loc515 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":315:17)
#loc516 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":318:16)
#loc517 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":319:9)
#loc518 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":322:9)
#loc519 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":319:13)
#loc520 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":319:29)
#loc521 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":320:9)
#loc522 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":321:26)
#loc523 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":321:13)
#loc524 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":323:9)
#loc525 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":326:9)
#loc526 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":323:13)
#loc527 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":323:29)
#loc528 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":324:9)
#loc529 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":325:26)
#loc530 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":325:13)
#loc531 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":333:19)
#loc532 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":333:9)
#loc533 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":335:5)
#loc534 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":336:5)
#loc535 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":338:19)
#loc536 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":338:9)
#loc537 = loc("CWE605_Multiple_Binds_Same_Port__basic_15.c":339:9)
#loc538 = loc(fused[#loc1, #loc2])
#loc539 = loc(fused[#loc3, #loc4])
#loc540 = loc(fused[#loc5, #loc6])
#loc541 = loc(fused[#loc7, #loc8])
#loc542 = loc(fused[#loc9, #loc10])
#loc543 = loc(fused[#loc11, #loc12])
#loc544 = loc(fused[#loc13, #loc14])
#loc545 = loc(fused[#loc15, #loc16])
#loc546 = loc(fused[#loc17, #loc18])
#loc547 = loc(fused[#loc19, #loc20])
#loc548 = loc(fused[#loc21, #loc22])
#loc549 = loc(fused[#loc24, #loc25])
#loc550 = loc(fused[#loc26, #loc27])
#loc551 = loc(fused[#loc30, #loc31])
#loc552 = loc(fused[#loc32, #loc33])
#loc553 = loc(fused[#loc34, #loc35])
#loc554 = loc(fused[#loc36, #loc37])
#loc555 = loc(fused[#loc38, #loc39])
#loc556 = loc(fused[#loc40, #loc41])
#loc557 = loc(fused[#loc42, #loc43])
#loc558 = loc(fused[#loc44, #loc45])
#loc559 = loc(fused[#loc46, #loc47])
#loc560 = loc(fused[#loc48, #loc49])
#loc561 = loc(fused[#loc52, #loc49])
#loc562 = loc(fused[#loc53, #loc54])
#loc563 = loc(fused[#loc59, #loc60])
#loc564 = loc(fused[#loc61, #loc62])
#loc565 = loc(fused[#loc63, #loc64])
#loc566 = loc(fused[#loc65, #loc62])
#loc567 = loc(fused[#loc67, #loc68])
#loc568 = loc(fused[#loc72, #loc73])
#loc569 = loc(fused[#loc74, #loc73])
#loc570 = loc(fused[#loc76, #loc77])
#loc571 = loc(fused[#loc78, #loc68])
#loc572 = loc(fused[#loc80, #loc81])
#loc573 = loc(fused[#loc83, #loc84])
#loc574 = loc(fused[#loc85, #loc86])
#loc575 = loc(fused[#loc89, #loc87])
#loc576 = loc(fused[#loc93, #loc90])
#loc577 = loc(fused[#loc97, #loc98])
#loc578 = loc(fused[#loc99, #loc100])
#loc579 = loc(fused[#loc102, #loc103])
#loc580 = loc(fused[#loc104, #loc105])
#loc581 = loc(fused[#loc106, #loc107])
#loc582 = loc(fused[#loc108, #loc100])
#loc583 = loc(fused[#loc110, #loc111])
#loc584 = loc(fused[#loc114, #loc115])
#loc585 = loc(fused[#loc116, #loc111])
#loc586 = loc(fused[#loc122, #loc123])
#loc587 = loc(fused[#loc124, #loc125])
#loc588 = loc(fused[#loc126, #loc127])
#loc589 = loc(fused[#loc128, #loc125])
#loc590 = loc(fused[#loc131, #loc132])
#loc591 = loc(fused[#loc134, #loc135])
#loc592 = loc(fused[#loc134, #loc136])
#loc593 = loc(fused[#loc139, #loc140])
#loc594 = loc(fused[#loc141, #loc142])
#loc595 = loc(fused[#loc143, #loc144])
#loc596 = loc(fused[#loc146, #loc147])
#loc597 = loc(fused[#loc148, #loc142])
#loc598 = loc(fused[#loc152, #loc150])
#loc599 = loc(fused[#loc156, #loc157])
#loc600 = loc(fused[#loc158, #loc159])
#loc601 = loc(fused[#loc161, #loc159])
#loc602 = loc(fused[#loc164, #loc162])
#loc603 = loc(fused[#loc168, #loc169])
#loc604 = loc(fused[#loc170, #loc171])
#loc605 = loc(fused[#loc173, #loc171])
#loc606 = loc(fused[#loc176, #loc174])
#loc607 = loc(fused[#loc178, #loc179])
#loc608 = loc(fused[#loc180, #loc181])
#loc609 = loc(fused[#loc182, #loc179])
#loc610 = loc(fused[#loc185, #loc186])
#loc611 = loc(fused[#loc187, #loc188])
#loc612 = loc(fused[#loc189, #loc186])
#loc613 = loc(fused[#loc198, #loc199])
#loc614 = loc(fused[#loc200, #loc201])
#loc615 = loc(fused[#loc202, #loc203])
#loc616 = loc(fused[#loc204, #loc205])
#loc617 = loc(fused[#loc206, #loc207])
#loc618 = loc(fused[#loc212, #loc213])
#loc621 = loc(fused[#loc223, #loc224])
#loc622 = loc(fused[#loc227, #loc228])
#loc623 = loc(fused[#loc231, #loc230])
#loc624 = loc(fused[#loc232, #loc233])
#loc625 = loc(fused[#loc234, #loc235])
#loc626 = loc(fused[#loc242, #loc243])
#loc627 = loc(fused[#loc244, #loc245])
#loc628 = loc(fused[#loc246, #loc247])
#loc629 = loc(fused[#loc248, #loc249])
#loc630 = loc(fused[#loc250, #loc251])
#loc631 = loc(fused[#loc252, #loc253])
#loc632 = loc(fused[#loc254, #loc255])
#loc633 = loc(fused[#loc256, #loc257])
#loc634 = loc(fused[#loc260, #loc261])
#loc635 = loc(fused[#loc266, #loc267])
#loc636 = loc(fused[#loc268, #loc269])
#loc637 = loc(fused[#loc270, #loc271])
#loc638 = loc(fused[#loc272, #loc269])
#loc639 = loc(fused[#loc274, #loc275])
#loc640 = loc(fused[#loc277, #loc278])
#loc641 = loc(fused[#loc279, #loc280])
#loc642 = loc(fused[#loc282, #loc281])
#loc643 = loc(fused[#loc284, #loc283])
#loc644 = loc(fused[#loc287, #loc288])
#loc645 = loc(fused[#loc289, #loc290])
#loc646 = loc(fused[#loc292, #loc293])
#loc647 = loc(fused[#loc294, #loc295])
#loc648 = loc(fused[#loc296, #loc297])
#loc649 = loc(fused[#loc298, #loc290])
#loc650 = loc(fused[#loc300, #loc301])
#loc651 = loc(fused[#loc304, #loc305])
#loc652 = loc(fused[#loc306, #loc301])
#loc653 = loc(fused[#loc312, #loc313])
#loc654 = loc(fused[#loc314, #loc315])
#loc655 = loc(fused[#loc316, #loc317])
#loc656 = loc(fused[#loc318, #loc315])
#loc657 = loc(fused[#loc321, #loc322])
#loc658 = loc(fused[#loc324, #loc325])
#loc659 = loc(fused[#loc324, #loc326])
#loc660 = loc(fused[#loc329, #loc330])
#loc661 = loc(fused[#loc331, #loc332])
#loc662 = loc(fused[#loc333, #loc334])
#loc663 = loc(fused[#loc336, #loc337])
#loc664 = loc(fused[#loc338, #loc332])
#loc665 = loc(fused[#loc342, #loc340])
#loc666 = loc(fused[#loc346, #loc347])
#loc667 = loc(fused[#loc348, #loc349])
#loc668 = loc(fused[#loc351, #loc349])
#loc669 = loc(fused[#loc354, #loc352])
#loc670 = loc(fused[#loc358, #loc359])
#loc671 = loc(fused[#loc360, #loc361])
#loc672 = loc(fused[#loc363, #loc361])
#loc673 = loc(fused[#loc366, #loc364])
#loc674 = loc(fused[#loc368, #loc369])
#loc675 = loc(fused[#loc370, #loc371])
#loc676 = loc(fused[#loc372, #loc369])
#loc677 = loc(fused[#loc375, #loc376])
#loc678 = loc(fused[#loc377, #loc378])
#loc679 = loc(fused[#loc379, #loc376])
#loc680 = loc(fused[#loc385, #loc386])
#loc681 = loc(fused[#loc387, #loc388])
#loc682 = loc(fused[#loc391, #loc392])
#loc683 = loc(fused[#loc393, #loc394])
#loc684 = loc(fused[#loc395, #loc396])
#loc685 = loc(fused[#loc397, #loc398])
#loc686 = loc(fused[#loc399, #loc400])
#loc687 = loc(fused[#loc401, #loc402])
#loc688 = loc(fused[#loc403, #loc404])
#loc689 = loc(fused[#loc405, #loc406])
#loc690 = loc(fused[#loc409, #loc410])
#loc691 = loc(fused[#loc415, #loc416])
#loc692 = loc(fused[#loc417, #loc418])
#loc693 = loc(fused[#loc419, #loc420])
#loc694 = loc(fused[#loc421, #loc418])
#loc695 = loc(fused[#loc423, #loc424])
#loc696 = loc(fused[#loc426, #loc427])
#loc697 = loc(fused[#loc428, #loc429])
#loc698 = loc(fused[#loc431, #loc430])
#loc699 = loc(fused[#loc433, #loc432])
#loc700 = loc(fused[#loc436, #loc437])
#loc701 = loc(fused[#loc438, #loc439])
#loc702 = loc(fused[#loc441, #loc442])
#loc703 = loc(fused[#loc443, #loc444])
#loc704 = loc(fused[#loc445, #loc446])
#loc705 = loc(fused[#loc447, #loc439])
#loc706 = loc(fused[#loc449, #loc450])
#loc707 = loc(fused[#loc453, #loc454])
#loc708 = loc(fused[#loc455, #loc450])
#loc709 = loc(fused[#loc461, #loc462])
#loc710 = loc(fused[#loc463, #loc464])
#loc711 = loc(fused[#loc465, #loc466])
#loc712 = loc(fused[#loc467, #loc464])
#loc713 = loc(fused[#loc470, #loc471])
#loc714 = loc(fused[#loc473, #loc474])
#loc715 = loc(fused[#loc473, #loc475])
#loc716 = loc(fused[#loc478, #loc479])
#loc717 = loc(fused[#loc480, #loc481])
#loc718 = loc(fused[#loc482, #loc483])
#loc719 = loc(fused[#loc485, #loc486])
#loc720 = loc(fused[#loc487, #loc481])
#loc721 = loc(fused[#loc491, #loc489])
#loc722 = loc(fused[#loc495, #loc496])
#loc723 = loc(fused[#loc497, #loc498])
#loc724 = loc(fused[#loc500, #loc498])
#loc725 = loc(fused[#loc503, #loc501])
#loc726 = loc(fused[#loc507, #loc508])
#loc727 = loc(fused[#loc509, #loc510])
#loc728 = loc(fused[#loc512, #loc510])
#loc729 = loc(fused[#loc515, #loc513])
#loc730 = loc(fused[#loc517, #loc518])
#loc731 = loc(fused[#loc519, #loc520])
#loc732 = loc(fused[#loc521, #loc518])
#loc733 = loc(fused[#loc524, #loc525])
#loc734 = loc(fused[#loc526, #loc527])
#loc735 = loc(fused[#loc528, #loc525])
