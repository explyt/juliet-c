!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":46:63)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":46:69)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:44)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":125:67)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":125:73)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":133:67)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":133:73)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc275 = loc(fused[#loc19, #loc20])
#loc320 = loc(fused[#loc141, #loc142])
#loc324 = loc(fused[#loc150, #loc151])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc267)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc268)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc270)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc271)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc272)
  cir.func private @close(!s32i) -> !s32i loc(#loc273)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_61b_badSource(%arg0: !cir.float loc(fused[#loc19, #loc20])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc277)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc278)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc279)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc280)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc275)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc18)
    cir.store %arg0, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc31)
    cir.br ^bb1 loc(#loc281)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc26)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc28)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb2 loc(#loc282)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc282)
  ^bb3:  // pred: ^bb32
    %11 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %12 ^bb4, ^bb33 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc39)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb5 loc(#loc284)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc46)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc285)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc286)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc48)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc44)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc287)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc288)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc289)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc56)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc290)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc59)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc291)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc63)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc63)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc64)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc292)
    cir.br ^bb9 loc(#loc293)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc294)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc295)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc295)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc75)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc76)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc297)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc78)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc69)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc298)
  ^bb13:  // pred: ^bb12
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc83)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc84)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc299)
    cir.brcond %48 ^bb14, ^bb15 loc(#loc300)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc86)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc80)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc88)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc89)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc90)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.br ^bb17 loc(#loc302)
  ^bb17:  // pred: ^bb16
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc96)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc303)
    cir.brcond %56 ^bb18, ^bb19 loc(#loc304)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc98)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc94)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc100)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc101)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc101)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc101)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc104)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc104)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb21 loc(#loc306)
  ^bb21:  // pred: ^bb20
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc110)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %70 ^bb22, ^bb23 loc(#loc111)
  ^bb22:  // pred: ^bb21
    %71 = cir.const #true loc(#loc111)
    cir.br ^bb28(%71 : !cir.bool) loc(#loc111)
  ^bb23:  // pred: ^bb21
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc111)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc111)
    cir.br ^bb26(%75 : !cir.bool) loc(#loc111)
  ^bb25:  // pred: ^bb23
    %76 = cir.const #false loc(#loc111)
    cir.br ^bb26(%76 : !cir.bool) loc(#loc111)
  ^bb26(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc111)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%77 : !cir.bool) loc(#loc111)
  ^bb28(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc111)
  ^bb29:  // pred: ^bb28
    cir.brcond %78 ^bb30, ^bb31 loc(#loc309)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc115)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc108)
  ^bb32:  // pred: ^bb31
    %79 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc116)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc118)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc310)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc119)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc120)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc120)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc311)
    cir.br ^bb3 loc(#loc35)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc35)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc312)
  ^bb35:  // pred: ^bb34
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %89 = cir.unary(minus, %88) : !s32i, !s32i loc(#loc126)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %90 ^bb36, ^bb37 loc(#loc314)
  ^bb36:  // pred: ^bb35
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc129)
    cir.br ^bb37 loc(#loc124)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc124)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc315)
  ^bb39:  // pred: ^bb38
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc133)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %96 ^bb40, ^bb41 loc(#loc317)
  ^bb40:  // pred: ^bb39
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc136)
    cir.br ^bb41 loc(#loc131)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc131)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc33)
  ^bb43:  // pred: ^bb42
    %99 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc137)
    cir.store %99, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc318)
    %100 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc318)
    cir.return %100 : !cir.float loc(#loc318)
  } loc(#loc274)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_61b_goodG2BSource(%arg0: !cir.float loc(fused[#loc141, #loc142])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc140)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc143)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc144)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc321)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc146)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc322)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc322)
    cir.return %4 : !cir.float loc(#loc322)
  } loc(#loc319)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_61b_goodB2GSource(%arg0: !cir.float loc(fused[#loc150, #loc151])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc326)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc327)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc328)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc329)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc324)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc162)
    cir.br ^bb1 loc(#loc330)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc157)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc159)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb2 loc(#loc331)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc331)
  ^bb3:  // pred: ^bb32
    %11 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc167)
    cir.brcond %12 ^bb4, ^bb33 loc(#loc167)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.const #cir.int<2> : !s32i loc(#loc168)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc170)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc171)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.br ^bb5 loc(#loc333)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc177)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc334)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc335)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc179)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc336)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc337)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc338)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc187)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc187)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc339)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc189)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc60)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc61)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc340)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc191)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc191)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc192)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc341)
    cir.br ^bb9 loc(#loc342)
  ^bb9:  // pred: ^bb8
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc343)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc344)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc344)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc202)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc203)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %42 ^bb10, ^bb11 loc(#loc346)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc205)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc196)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc347)
  ^bb13:  // pred: ^bb12
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc209)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc210)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc211)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc348)
    cir.brcond %48 ^bb14, ^bb15 loc(#loc349)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc213)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc207)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc215)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc216)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc217)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb17 loc(#loc351)
  ^bb17:  // pred: ^bb16
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc223)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %56 ^bb18, ^bb19 loc(#loc353)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc225)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc221)
  ^bb20:  // pred: ^bb19
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc227)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc227)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc228)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc228)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc228)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc231)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc231)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb21 loc(#loc355)
  ^bb21:  // pred: ^bb20
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc237)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %70 ^bb22, ^bb23 loc(#loc238)
  ^bb22:  // pred: ^bb21
    %71 = cir.const #true loc(#loc238)
    cir.br ^bb28(%71 : !cir.bool) loc(#loc238)
  ^bb23:  // pred: ^bb21
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc238)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc238)
    cir.br ^bb26(%75 : !cir.bool) loc(#loc238)
  ^bb25:  // pred: ^bb23
    %76 = cir.const #false loc(#loc238)
    cir.br ^bb26(%76 : !cir.bool) loc(#loc238)
  ^bb26(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc238)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%77 : !cir.bool) loc(#loc238)
  ^bb28(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc238)
  ^bb29:  // pred: ^bb28
    cir.brcond %78 ^bb30, ^bb31 loc(#loc358)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc242)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc235)
  ^bb32:  // pred: ^bb31
    %79 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc243)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc245)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc245)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc359)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc246)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc247)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc247)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc360)
    cir.br ^bb3 loc(#loc166)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc166)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc361)
  ^bb35:  // pred: ^bb34
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %89 = cir.unary(minus, %88) : !s32i, !s32i loc(#loc253)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %90 ^bb36, ^bb37 loc(#loc363)
  ^bb36:  // pred: ^bb35
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc256)
    cir.br ^bb37 loc(#loc251)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc251)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc364)
  ^bb39:  // pred: ^bb38
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc260)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %96 ^bb40, ^bb41 loc(#loc366)
  ^bb40:  // pred: ^bb39
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc263)
    cir.br ^bb41 loc(#loc258)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc258)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc164)
  ^bb43:  // pred: ^bb42
    %99 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc264)
    cir.store %99, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc367)
    %100 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc367)
    cir.return %100 : !cir.float loc(#loc367)
  } loc(#loc323)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_61b.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":46:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":118:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":53:9)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":53:13)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":54:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":54:28)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":55:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":55:31)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":56:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":56:31)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":57:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":57:41)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":47:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":48:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":116:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":58:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":101:17)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":101:16)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":67:35)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":67:44)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":67:57)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":67:28)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":67:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":67:68)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":68:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":71:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":68:17)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":68:33)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":69:13)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":70:17)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:20)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:21)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:30)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:33)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:47)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":72:48)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":73:34)
#loc57 = loc("/usr/include/netinet/in.h":249:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":73:13)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":74:39)
#loc60 = loc("/usr/include/netinet/in.h":251:20)
#loc61 = loc("/usr/include/netinet/in.h":33:15)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":74:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":75:38)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":75:32)
#loc65 = loc("/usr/include/netinet/in.h":250:15)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":75:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":75:46)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":79:13)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:22)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:54)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:55)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:64)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:78)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:17)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":76:84)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":77:13)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":78:17)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":80:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":83:13)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":80:24)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":80:38)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":80:17)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":80:57)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":81:13)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":82:17)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":84:35)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":84:49)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":84:55)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":84:28)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":84:13)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":84:59)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":85:13)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":88:13)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":85:17)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":85:33)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":86:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":87:17)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:31)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:45)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:58)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:76)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:79)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:26)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:13)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":91:80)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:13)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":95:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:17)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:31)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:47)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":92:61)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":93:13)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":94:17)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":97:39)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":97:25)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":97:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":99:32)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":99:27)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":99:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":99:43)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":102:9)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":105:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":102:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":102:29)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":103:9)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":104:26)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":104:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":106:9)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":109:9)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":106:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":106:29)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":107:9)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":108:26)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":108:13)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":117:12)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":117:5)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":125:1)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":130:1)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":126:1)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":128:12)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":128:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":129:12)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":129:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":133:1)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":205:1)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":140:9)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":140:13)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":141:9)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":141:28)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":142:9)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":142:31)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":143:9)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":143:31)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":144:9)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":144:41)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":134:1)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":135:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":203:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":145:9)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":188:17)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":188:16)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":154:35)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":154:44)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":154:57)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":154:28)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":154:13)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":154:68)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":155:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":158:13)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":155:17)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":155:33)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":156:13)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":157:17)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:20)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:21)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:30)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:33)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:47)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:13)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":159:48)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":160:34)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":160:13)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":161:39)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":161:13)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":162:38)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":162:32)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":162:13)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":162:46)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:13)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":166:13)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:22)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:54)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:55)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:64)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:78)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:17)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":163:84)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":164:13)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":165:17)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":167:13)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":170:13)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":167:24)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":167:38)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":167:17)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":167:57)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":168:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":169:17)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":171:35)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":171:49)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":171:55)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":171:28)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":171:13)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":171:59)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":172:13)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":175:13)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":172:17)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":172:33)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":173:13)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":174:17)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:31)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:45)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:58)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:76)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:79)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:26)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:13)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":178:80)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:13)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":182:13)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:17)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:31)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:47)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":179:61)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":180:13)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":181:17)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":184:39)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":184:25)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":184:13)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":186:32)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":186:27)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":186:13)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":186:43)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":189:9)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":192:9)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":189:13)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":189:29)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":190:9)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":191:26)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":191:13)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":193:9)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":196:9)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":193:13)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":193:29)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":194:9)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":195:26)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":195:13)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":204:12)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_61b.c":204:5)
#loc266 = loc(fused[#loc1, #loc2])
#loc267 = loc(fused[#loc3, #loc4])
#loc268 = loc(fused[#loc5, #loc6])
#loc269 = loc(fused[#loc7, #loc8])
#loc270 = loc(fused[#loc9, #loc10])
#loc271 = loc(fused[#loc11, #loc12])
#loc272 = loc(fused[#loc13, #loc14])
#loc273 = loc(fused[#loc15, #loc16])
#loc274 = loc(fused[#loc17, #loc18])
#loc276 = loc(fused[#loc21, #loc22])
#loc277 = loc(fused[#loc23, #loc24])
#loc278 = loc(fused[#loc25, #loc26])
#loc279 = loc(fused[#loc27, #loc28])
#loc280 = loc(fused[#loc29, #loc30])
#loc281 = loc(fused[#loc32, #loc33])
#loc282 = loc(fused[#loc34, #loc35])
#loc283 = loc(fused[#loc41, #loc42])
#loc284 = loc(fused[#loc43, #loc44])
#loc285 = loc(fused[#loc45, #loc46])
#loc286 = loc(fused[#loc47, #loc44])
#loc287 = loc(fused[#loc49, #loc50])
#loc288 = loc(fused[#loc52, #loc53])
#loc289 = loc(fused[#loc54, #loc55])
#loc290 = loc(fused[#loc58, #loc56])
#loc291 = loc(fused[#loc62, #loc59])
#loc292 = loc(fused[#loc66, #loc67])
#loc293 = loc(fused[#loc68, #loc69])
#loc294 = loc(fused[#loc71, #loc72])
#loc295 = loc(fused[#loc73, #loc74])
#loc296 = loc(fused[#loc75, #loc76])
#loc297 = loc(fused[#loc77, #loc69])
#loc298 = loc(fused[#loc79, #loc80])
#loc299 = loc(fused[#loc83, #loc84])
#loc300 = loc(fused[#loc85, #loc80])
#loc301 = loc(fused[#loc91, #loc92])
#loc302 = loc(fused[#loc93, #loc94])
#loc303 = loc(fused[#loc95, #loc96])
#loc304 = loc(fused[#loc97, #loc94])
#loc305 = loc(fused[#loc105, #loc106])
#loc306 = loc(fused[#loc107, #loc108])
#loc307 = loc(fused[#loc109, #loc110])
#loc308 = loc(fused[#loc112, #loc113])
#loc309 = loc(fused[#loc114, #loc108])
#loc310 = loc(fused[#loc118, #loc116])
#loc311 = loc(fused[#loc121, #loc122])
#loc312 = loc(fused[#loc123, #loc124])
#loc313 = loc(fused[#loc125, #loc126])
#loc314 = loc(fused[#loc127, #loc124])
#loc315 = loc(fused[#loc130, #loc131])
#loc316 = loc(fused[#loc132, #loc133])
#loc317 = loc(fused[#loc134, #loc131])
#loc318 = loc(fused[#loc138, #loc137])
#loc319 = loc(fused[#loc139, #loc140])
#loc321 = loc(fused[#loc145, #loc144])
#loc322 = loc(fused[#loc147, #loc146])
#loc323 = loc(fused[#loc148, #loc149])
#loc325 = loc(fused[#loc152, #loc153])
#loc326 = loc(fused[#loc154, #loc155])
#loc327 = loc(fused[#loc156, #loc157])
#loc328 = loc(fused[#loc158, #loc159])
#loc329 = loc(fused[#loc160, #loc161])
#loc330 = loc(fused[#loc163, #loc164])
#loc331 = loc(fused[#loc165, #loc166])
#loc332 = loc(fused[#loc172, #loc173])
#loc333 = loc(fused[#loc174, #loc175])
#loc334 = loc(fused[#loc176, #loc177])
#loc335 = loc(fused[#loc178, #loc175])
#loc336 = loc(fused[#loc180, #loc181])
#loc337 = loc(fused[#loc183, #loc184])
#loc338 = loc(fused[#loc185, #loc186])
#loc339 = loc(fused[#loc188, #loc187])
#loc340 = loc(fused[#loc190, #loc189])
#loc341 = loc(fused[#loc193, #loc194])
#loc342 = loc(fused[#loc195, #loc196])
#loc343 = loc(fused[#loc198, #loc199])
#loc344 = loc(fused[#loc200, #loc201])
#loc345 = loc(fused[#loc202, #loc203])
#loc346 = loc(fused[#loc204, #loc196])
#loc347 = loc(fused[#loc206, #loc207])
#loc348 = loc(fused[#loc210, #loc211])
#loc349 = loc(fused[#loc212, #loc207])
#loc350 = loc(fused[#loc218, #loc219])
#loc351 = loc(fused[#loc220, #loc221])
#loc352 = loc(fused[#loc222, #loc223])
#loc353 = loc(fused[#loc224, #loc221])
#loc354 = loc(fused[#loc232, #loc233])
#loc355 = loc(fused[#loc234, #loc235])
#loc356 = loc(fused[#loc236, #loc237])
#loc357 = loc(fused[#loc239, #loc240])
#loc358 = loc(fused[#loc241, #loc235])
#loc359 = loc(fused[#loc245, #loc243])
#loc360 = loc(fused[#loc248, #loc249])
#loc361 = loc(fused[#loc250, #loc251])
#loc362 = loc(fused[#loc252, #loc253])
#loc363 = loc(fused[#loc254, #loc251])
#loc364 = loc(fused[#loc257, #loc258])
#loc365 = loc(fused[#loc259, #loc260])
#loc366 = loc(fused[#loc261, #loc258])
#loc367 = loc(fused[#loc265, #loc264])
