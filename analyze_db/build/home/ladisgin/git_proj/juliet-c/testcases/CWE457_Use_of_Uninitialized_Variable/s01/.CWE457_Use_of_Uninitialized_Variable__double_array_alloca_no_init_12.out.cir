!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":200:10)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":200:14)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":200:20)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":200:32)
#loc365 = loc(fused[#loc115, #loc116])
#loc366 = loc(fused[#loc117, #loc118])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc317)
  cir.func private @printDoubleLine(!cir.double) loc(#loc318)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc9)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc9)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc9)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc321)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc323)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc323)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc13)
      cir.if %11 {
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc326)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc24)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc328)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc26)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc27)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc329)
              cir.condition(%16) loc(#loc28)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc30)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc30)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc31)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc32)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc33)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc331)
              } loc(#loc330)
              cir.yield loc(#loc23)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc34)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc35)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              cir.yield loc(#loc327)
            } loc(#loc327)
          } loc(#loc327)
        } loc(#loc325)
      } loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc334)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc334)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc38)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc337)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc49)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc339)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc51)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc52)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc340)
              cir.condition(%16) loc(#loc53)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc55)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc57)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc55)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc58)
              } loc(#loc341)
              cir.yield loc(#loc48)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc59)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc60)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc342)
              cir.yield loc(#loc338)
            } loc(#loc338)
          } loc(#loc338)
        } loc(#loc336)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc344)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc67)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc346)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc70)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc347)
              cir.condition(%16) loc(#loc71)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc73)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc74)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc76)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc349)
              } loc(#loc348)
              cir.yield loc(#loc66)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc78)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc350)
              cir.yield loc(#loc345)
            } loc(#loc345)
          } loc(#loc345)
        } loc(#loc343)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc352)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc85)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc354)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc88)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc355)
              cir.condition(%16) loc(#loc89)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc91)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc93)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc91)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc94)
              } loc(#loc356)
              cir.yield loc(#loc84)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc96)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc357)
              cir.yield loc(#loc353)
            } loc(#loc353)
          } loc(#loc353)
        } loc(#loc351)
      } loc(#loc335)
    } loc(#loc333)
    cir.return loc(#loc6)
  } loc(#loc319)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc360)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    cir.return loc(#loc98)
  } loc(#loc358)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc361)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc362)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc363)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc112)
  cir.func @main(%arg0: !s32i loc(fused[#loc115, #loc116]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc117, #loc118])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc365)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc366)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc114)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc120)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc121)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc121)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc122)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %8 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc367)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12_good() : () -> () loc(#loc124)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc110)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc111)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %13 = cir.get_global @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc368)
    cir.call @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12_bad() : () -> () loc(#loc128)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc112)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    cir.return %17 : !s32i loc(#loc369)
  } loc(#loc364)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc371)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc137)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc137)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc137)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc137)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc137)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc137)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc137)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc372)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc374)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc374)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc141)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc141)
      cir.if %11 {
      } else {
      } loc(#loc375)
    } loc(#loc373)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc377)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc377)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc148)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc148)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc159)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc382)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc162)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc383)
              cir.condition(%16) loc(#loc163)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc165)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc166)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc167)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc168)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc385)
              } loc(#loc384)
              cir.yield loc(#loc158)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc169)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc170)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc386)
              cir.yield loc(#loc381)
            } loc(#loc381)
          } loc(#loc381)
        } loc(#loc379)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc388)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc177)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc390)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc179)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc180)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc391)
              cir.condition(%16) loc(#loc181)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc183)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc185)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc183)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc186)
              } loc(#loc392)
              cir.yield loc(#loc176)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc188)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc393)
              cir.yield loc(#loc389)
            } loc(#loc389)
          } loc(#loc389)
        } loc(#loc387)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc395)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc195)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc397)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc197)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc198)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc398)
              cir.condition(%16) loc(#loc199)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc201)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc201)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc202)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc204)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc400)
              } loc(#loc399)
              cir.yield loc(#loc194)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc205)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc206)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc401)
              cir.yield loc(#loc396)
            } loc(#loc396)
          } loc(#loc396)
        } loc(#loc394)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc403)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc213)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc405)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc215)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc216)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc406)
              cir.condition(%16) loc(#loc217)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc219)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc221)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc219)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc222)
              } loc(#loc407)
              cir.yield loc(#loc212)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc223)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc224)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc408)
              cir.yield loc(#loc404)
            } loc(#loc404)
          } loc(#loc404)
        } loc(#loc402)
      } loc(#loc378)
    } loc(#loc376)
    cir.return loc(#loc134)
  } loc(#loc370)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc410)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc229)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc229)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc229)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc229)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc229)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc229)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc229)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc411)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc413)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc413)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc233)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc233)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc416)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc244)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc418)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc246)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc247)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc419)
              cir.condition(%16) loc(#loc248)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc250)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc251)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc253)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc421)
              } loc(#loc420)
              cir.yield loc(#loc243)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc254)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc255)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc422)
              cir.yield loc(#loc417)
            } loc(#loc417)
          } loc(#loc417)
        } loc(#loc415)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc424)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc262)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc426)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc264)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc265)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc427)
              cir.condition(%16) loc(#loc266)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc268)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc269)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc271)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc429)
              } loc(#loc428)
              cir.yield loc(#loc261)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc272)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc273)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc430)
              cir.yield loc(#loc425)
            } loc(#loc425)
          } loc(#loc425)
        } loc(#loc423)
      } loc(#loc414)
    } loc(#loc412)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc432)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc432)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc276)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc276)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc435)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc287)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc437)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc289)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc290)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc438)
              cir.condition(%16) loc(#loc291)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc293)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc295)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc293)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc296)
              } loc(#loc439)
              cir.yield loc(#loc286)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc297)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc298)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc440)
              cir.yield loc(#loc436)
            } loc(#loc436)
          } loc(#loc436)
        } loc(#loc434)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc442)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc305)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc444)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc307)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc308)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc445)
              cir.condition(%16) loc(#loc309)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc311)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc313)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc311)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc314)
              } loc(#loc446)
              cir.yield loc(#loc304)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc315)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc316)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc447)
              cir.yield loc(#loc443)
            } loc(#loc443)
          } loc(#loc443)
        } loc(#loc441)
      } loc(#loc433)
    } loc(#loc431)
    cir.return loc(#loc226)
  } loc(#loc409)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":22:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":71:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":24:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":24:14)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":25:22)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":25:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":41:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":26:8)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":26:33)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":27:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":30:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":32:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":34:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":40:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":35:13)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":35:17)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:13)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":39:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:19)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:17)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:22)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:24)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:23)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":37:13)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":38:35)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":38:17)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":38:22)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":38:23)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:29)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":36:28)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":42:5)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":70:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":42:8)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":42:33)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":43:5)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":52:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":54:5)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":45:9)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":51:9)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":46:13)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":46:17)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:13)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":50:13)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:19)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:17)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:22)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:24)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:23)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":48:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":49:33)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":49:38)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":49:39)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":49:17)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:29)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":47:28)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":56:9)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":62:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":57:13)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":57:17)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":61:13)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:19)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:17)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:22)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:24)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:23)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":59:13)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":60:35)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":60:17)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":60:22)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":60:23)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:29)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":58:28)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":63:9)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":69:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":64:13)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":64:17)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:13)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":68:13)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:19)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:17)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:24)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:23)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":66:13)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":67:33)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":67:38)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":67:39)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":67:17)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:29)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":65:28)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":185:1)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":189:1)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":187:5)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":187:13)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":188:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":188:13)
#loc103 = loc("/usr/include/stdlib.h":575:1)
#loc104 = loc("/usr/include/stdlib.h":575:41)
#loc105 = loc("/usr/include/time.h":76:1)
#loc106 = loc("/usr/include/time.h":76:38)
#loc107 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc108 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":205:15)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":207:15)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":210:15)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":212:15)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":200:1)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":215:1)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":201:1)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":203:27)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":203:22)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":203:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":205:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":206:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":206:79)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":207:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":210:5)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":211:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":211:78)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":212:5)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":214:12)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":214:5)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":80:1)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":130:1)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":82:5)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":82:14)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":83:22)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":83:5)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":84:5)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":93:5)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":84:8)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":84:33)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":85:5)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":88:5)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":90:5)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":94:5)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":129:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":94:8)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":94:33)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":95:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":111:5)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":113:5)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":97:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":103:9)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":98:13)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":98:17)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:13)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":102:13)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:19)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:17)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:22)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:24)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:23)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":100:13)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":101:35)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":101:17)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":101:22)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":101:23)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:29)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":99:28)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":104:9)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":110:9)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":105:13)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":105:17)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:13)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":109:13)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:19)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:17)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:22)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:24)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:23)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":107:13)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":108:33)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":108:38)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":108:39)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":108:17)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:29)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":106:28)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":115:9)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":121:9)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":116:13)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":116:17)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:13)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":120:13)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:19)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:17)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:22)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:24)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:23)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":118:13)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":119:35)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":119:17)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":119:22)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":119:23)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:29)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":117:28)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":122:9)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":128:9)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":123:13)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":123:17)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:13)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":127:13)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:19)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:17)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:22)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:24)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:23)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":125:13)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":126:33)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":126:38)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":126:39)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":126:17)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:29)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":124:28)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":135:1)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":183:1)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":137:5)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":137:14)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":138:22)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":138:5)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":139:5)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":160:5)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":139:8)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":139:33)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":140:5)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":149:5)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":151:5)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":142:9)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":148:9)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":143:13)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":143:17)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:13)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":147:13)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:19)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:17)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:22)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:24)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:23)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":145:13)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":146:35)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":146:17)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":146:22)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":146:23)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:29)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":144:28)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":153:9)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":159:9)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":154:13)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":154:17)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:13)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":158:13)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:19)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:17)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:22)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:24)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:23)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":156:13)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":157:35)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":157:17)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":157:22)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":157:23)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:29)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":155:28)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":161:5)
#loc275 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":182:5)
#loc276 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":161:8)
#loc277 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":161:33)
#loc278 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":162:5)
#loc279 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":171:5)
#loc280 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":173:5)
#loc281 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":164:9)
#loc282 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":170:9)
#loc283 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":165:13)
#loc284 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":165:17)
#loc285 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:13)
#loc286 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":169:13)
#loc287 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:19)
#loc288 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:17)
#loc289 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:22)
#loc290 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:24)
#loc291 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:23)
#loc292 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":167:13)
#loc293 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":168:33)
#loc294 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":168:38)
#loc295 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":168:39)
#loc296 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":168:17)
#loc297 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:29)
#loc298 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":166:28)
#loc299 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":175:9)
#loc300 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":181:9)
#loc301 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":176:13)
#loc302 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":176:17)
#loc303 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:13)
#loc304 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":180:13)
#loc305 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:19)
#loc306 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:17)
#loc307 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:22)
#loc308 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:24)
#loc309 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:23)
#loc310 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":178:13)
#loc311 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":179:33)
#loc312 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":179:38)
#loc313 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":179:39)
#loc314 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":179:17)
#loc315 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:29)
#loc316 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_12.c":177:28)
#loc317 = loc(fused[#loc1, #loc2])
#loc318 = loc(fused[#loc3, #loc4])
#loc319 = loc(fused[#loc5, #loc6])
#loc320 = loc(fused[#loc7, #loc8])
#loc321 = loc(fused[#loc10, #loc9])
#loc322 = loc(fused[#loc11, #loc12])
#loc323 = loc(fused[#loc13, #loc14])
#loc324 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc325 = loc(fused[#loc18, #loc19])
#loc326 = loc(fused[#loc20, #loc21])
#loc327 = loc(fused[#loc22, #loc23])
#loc328 = loc(fused[#loc25, #loc24])
#loc329 = loc(fused[#loc26, #loc27])
#loc330 = loc(fused[#loc29, #loc23])
#loc331 = loc(fused[#loc31, #loc30])
#loc332 = loc(fused[#loc35, #loc34])
#loc333 = loc(fused[#loc36, #loc37])
#loc334 = loc(fused[#loc38, #loc39])
#loc335 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc336 = loc(fused[#loc43, #loc44])
#loc337 = loc(fused[#loc45, #loc46])
#loc338 = loc(fused[#loc47, #loc48])
#loc339 = loc(fused[#loc50, #loc49])
#loc340 = loc(fused[#loc51, #loc52])
#loc341 = loc(fused[#loc54, #loc48])
#loc342 = loc(fused[#loc60, #loc59])
#loc343 = loc(fused[#loc61, #loc62])
#loc344 = loc(fused[#loc63, #loc64])
#loc345 = loc(fused[#loc65, #loc66])
#loc346 = loc(fused[#loc68, #loc67])
#loc347 = loc(fused[#loc69, #loc70])
#loc348 = loc(fused[#loc72, #loc66])
#loc349 = loc(fused[#loc74, #loc73])
#loc350 = loc(fused[#loc78, #loc77])
#loc351 = loc(fused[#loc79, #loc80])
#loc352 = loc(fused[#loc81, #loc82])
#loc353 = loc(fused[#loc83, #loc84])
#loc354 = loc(fused[#loc86, #loc85])
#loc355 = loc(fused[#loc87, #loc88])
#loc356 = loc(fused[#loc90, #loc84])
#loc357 = loc(fused[#loc96, #loc95])
#loc358 = loc(fused[#loc97, #loc98])
#loc359 = loc(fused[#loc99, #loc100])
#loc360 = loc(fused[#loc101, #loc102])
#loc361 = loc(fused[#loc103, #loc104])
#loc362 = loc(fused[#loc105, #loc106])
#loc363 = loc(fused[#loc107, #loc108])
#loc364 = loc(fused[#loc113, #loc114])
#loc367 = loc(fused[#loc124, #loc125])
#loc368 = loc(fused[#loc128, #loc129])
#loc369 = loc(fused[#loc132, #loc131])
#loc370 = loc(fused[#loc133, #loc134])
#loc371 = loc(fused[#loc135, #loc136])
#loc372 = loc(fused[#loc138, #loc137])
#loc373 = loc(fused[#loc139, #loc140])
#loc374 = loc(fused[#loc141, #loc142])
#loc375 = loc(fused[#loc143, #loc144, #loc145, #loc140])
#loc376 = loc(fused[#loc146, #loc147])
#loc377 = loc(fused[#loc148, #loc149])
#loc378 = loc(fused[#loc150, #loc151, #loc152, #loc147])
#loc379 = loc(fused[#loc153, #loc154])
#loc380 = loc(fused[#loc155, #loc156])
#loc381 = loc(fused[#loc157, #loc158])
#loc382 = loc(fused[#loc160, #loc159])
#loc383 = loc(fused[#loc161, #loc162])
#loc384 = loc(fused[#loc164, #loc158])
#loc385 = loc(fused[#loc166, #loc165])
#loc386 = loc(fused[#loc170, #loc169])
#loc387 = loc(fused[#loc171, #loc172])
#loc388 = loc(fused[#loc173, #loc174])
#loc389 = loc(fused[#loc175, #loc176])
#loc390 = loc(fused[#loc178, #loc177])
#loc391 = loc(fused[#loc179, #loc180])
#loc392 = loc(fused[#loc182, #loc176])
#loc393 = loc(fused[#loc188, #loc187])
#loc394 = loc(fused[#loc189, #loc190])
#loc395 = loc(fused[#loc191, #loc192])
#loc396 = loc(fused[#loc193, #loc194])
#loc397 = loc(fused[#loc196, #loc195])
#loc398 = loc(fused[#loc197, #loc198])
#loc399 = loc(fused[#loc200, #loc194])
#loc400 = loc(fused[#loc202, #loc201])
#loc401 = loc(fused[#loc206, #loc205])
#loc402 = loc(fused[#loc207, #loc208])
#loc403 = loc(fused[#loc209, #loc210])
#loc404 = loc(fused[#loc211, #loc212])
#loc405 = loc(fused[#loc214, #loc213])
#loc406 = loc(fused[#loc215, #loc216])
#loc407 = loc(fused[#loc218, #loc212])
#loc408 = loc(fused[#loc224, #loc223])
#loc409 = loc(fused[#loc225, #loc226])
#loc410 = loc(fused[#loc227, #loc228])
#loc411 = loc(fused[#loc230, #loc229])
#loc412 = loc(fused[#loc231, #loc232])
#loc413 = loc(fused[#loc233, #loc234])
#loc414 = loc(fused[#loc235, #loc236, #loc237, #loc232])
#loc415 = loc(fused[#loc238, #loc239])
#loc416 = loc(fused[#loc240, #loc241])
#loc417 = loc(fused[#loc242, #loc243])
#loc418 = loc(fused[#loc245, #loc244])
#loc419 = loc(fused[#loc246, #loc247])
#loc420 = loc(fused[#loc249, #loc243])
#loc421 = loc(fused[#loc251, #loc250])
#loc422 = loc(fused[#loc255, #loc254])
#loc423 = loc(fused[#loc256, #loc257])
#loc424 = loc(fused[#loc258, #loc259])
#loc425 = loc(fused[#loc260, #loc261])
#loc426 = loc(fused[#loc263, #loc262])
#loc427 = loc(fused[#loc264, #loc265])
#loc428 = loc(fused[#loc267, #loc261])
#loc429 = loc(fused[#loc269, #loc268])
#loc430 = loc(fused[#loc273, #loc272])
#loc431 = loc(fused[#loc274, #loc275])
#loc432 = loc(fused[#loc276, #loc277])
#loc433 = loc(fused[#loc278, #loc279, #loc280, #loc275])
#loc434 = loc(fused[#loc281, #loc282])
#loc435 = loc(fused[#loc283, #loc284])
#loc436 = loc(fused[#loc285, #loc286])
#loc437 = loc(fused[#loc288, #loc287])
#loc438 = loc(fused[#loc289, #loc290])
#loc439 = loc(fused[#loc292, #loc286])
#loc440 = loc(fused[#loc298, #loc297])
#loc441 = loc(fused[#loc299, #loc300])
#loc442 = loc(fused[#loc301, #loc302])
#loc443 = loc(fused[#loc303, #loc304])
#loc444 = loc(fused[#loc306, #loc305])
#loc445 = loc(fused[#loc307, #loc308])
#loc446 = loc(fused[#loc310, #loc304])
#loc447 = loc(fused[#loc316, #loc315])
