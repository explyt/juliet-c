!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc99)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc100)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61b_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc101)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc102)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc104)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %3 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61b_badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc100)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc110)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc111)
      %7 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc100)
      cir.copy %7 to %4 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc100)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc28)
      %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc29)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc28)
      cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc112)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc34)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc34)
        cir.store %16, %5 : !u64i, !cir.ptr<!u64i> loc(#loc114)
        cir.for : cond {
          %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc38)
          %21 = cir.binop(add, %18, %20) : !u64i loc(#loc115)
          %22 = cir.cmp(lt, %17, %21) : !u64i, !cir.bool loc(#loc116)
          cir.condition(%22) loc(#loc39)
        } body {
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %18 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc42)
            %20 = cir.load %19 : !cir.ptr<!s8i>, !s8i loc(#loc42)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
            %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc45)
            cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc118)
          } loc(#loc117)
          cir.yield loc(#loc33)
        } step {
          %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc48)
          cir.store %18, %5 : !u64i, !cir.ptr<!u64i> loc(#loc119)
          cir.yield loc(#loc113)
        } loc(#loc113)
      } loc(#loc113)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc51)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
    } loc(#loc109)
    cir.return loc(#loc14)
  } loc(#loc105)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc120)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61b_goodG2BSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc122)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %3 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61b_goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc66)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc99)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc128)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc129)
      %7 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc99)
      cir.copy %7 to %4 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc99)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc74)
      %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc75)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc74)
      cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc130)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc80)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc80)
        cir.store %16, %5 : !u64i, !cir.ptr<!u64i> loc(#loc132)
        cir.for : cond {
          %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc82)
          %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc83)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc84)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc84)
          %21 = cir.binop(add, %18, %20) : !u64i loc(#loc133)
          %22 = cir.cmp(lt, %17, %21) : !u64i, !cir.bool loc(#loc134)
          cir.condition(%22) loc(#loc85)
        } body {
          cir.scope {
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc87)
            %18 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc88)
            %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc88)
            %20 = cir.load %19 : !cir.ptr<!s8i>, !s8i loc(#loc88)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
            %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc91)
            cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc136)
          } loc(#loc135)
          cir.yield loc(#loc79)
        } step {
          %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc93)
          %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc94)
          cir.store %18, %5 : !u64i, !cir.ptr<!u64i> loc(#loc137)
          cir.yield loc(#loc131)
        } loc(#loc131)
      } loc(#loc131)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc96)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc97)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
    } loc(#loc127)
    cir.return loc(#loc60)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":64:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":64:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":37:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":37:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":29:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":29:87)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":31:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":49:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":33:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":33:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":34:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":34:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":35:80)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":35:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":35:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":35:84)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":36:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":48:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":38:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":38:16)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":38:19)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":39:21)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":39:28)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":39:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":39:34)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":45:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:14)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:21)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:25)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:37)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":43:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":44:30)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":44:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":44:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":44:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":44:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":44:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:41)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":42:40)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":46:19)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":46:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":47:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":47:14)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":78:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":81:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":80:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":80:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":56:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":56:91)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":58:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":76:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":60:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":60:12)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":61:12)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":61:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":62:84)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":62:12)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":62:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":62:88)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":63:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":75:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":65:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":65:16)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":65:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":66:21)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":66:28)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":66:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":66:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":72:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:18)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:14)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:25)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:37)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:23)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":70:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":71:30)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":71:23)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":71:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":71:18)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":71:19)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":71:31)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:41)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":69:40)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":73:19)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":73:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":74:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_61a.c":74:14)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc18, #loc17])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc23, #loc24])
#loc110 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc25, #loc27])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc35, #loc34])
#loc115 = loc(fused[#loc37, #loc38])
#loc116 = loc(fused[#loc36, #loc38])
#loc117 = loc(fused[#loc40, #loc33])
#loc118 = loc(fused[#loc43, #loc46])
#loc119 = loc(fused[#loc48, #loc47])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc64, #loc63])
#loc126 = loc(fused[#loc67, #loc68])
#loc127 = loc(fused[#loc69, #loc70])
#loc128 = loc(fused[#loc71, #loc72])
#loc129 = loc(fused[#loc71, #loc73])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc78, #loc79])
#loc132 = loc(fused[#loc81, #loc80])
#loc133 = loc(fused[#loc83, #loc84])
#loc134 = loc(fused[#loc82, #loc84])
#loc135 = loc(fused[#loc86, #loc79])
#loc136 = loc(fused[#loc89, #loc92])
#loc137 = loc(fused[#loc94, #loc93])
