!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__stdThread = !cir.struct<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":24:23)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":24:29)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":137:10)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":137:14)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":137:20)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":137:32)
#loc128 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":38:24)
#loc129 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":38:30)
#true = #cir.bool<true> : !cir.bool
#loc216 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc100, #loc101])
#loc253 = loc(fused[#loc102, #loc103])
#loc262 = loc(fused[#loc128, #loc129])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc214)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc218)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc217)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
      cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
      cir.for : cond {
        %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        %7 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc221)
        cir.condition(%8) loc(#loc18)
      } body {
        cir.scope {
          %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
          %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc21)
          %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc223)
        } loc(#loc222)
        cir.yield loc(#loc13)
      } step {
        %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc26)
        cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc224)
        cir.yield loc(#loc219)
      } loc(#loc219)
    } loc(#loc219)
    cir.return loc(#loc4)
  } loc(#loc215)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc225)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc226)
  cir.func private @printIntLine(!s32i) loc(#loc227)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valBadSink"] {alignment = 4 : i64} loc(#loc231)
    cir.goto "sink" loc(#loc232)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc43)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc229)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc38)
    cir.store %4, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc230)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.scope {
      %7 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc48)
      %8 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc235)
      %9 = cir.call @stdThreadCreate(%7, %8, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc51)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc51)
      %11 = cir.unary(not, %10) : !cir.bool, !cir.bool loc(#loc51)
      cir.if %11 {
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc53)
        cir.store %12, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc237)
      } loc(#loc236)
    } loc(#loc234)
    cir.scope {
      %7 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
      %8 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc239)
      %9 = cir.call @stdThreadCreate(%7, %8, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc60)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc60)
      %11 = cir.unary(not, %10) : !cir.bool, !cir.bool loc(#loc60)
      cir.if %11 {
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc62)
        cir.store %12, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc241)
      } loc(#loc240)
    } loc(#loc238)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc66)
      %8 = cir.cast(ptr_to_bool, %7 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc66)
      %9 = cir.ternary(%8, true {
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc68)
        %11 = cir.call @stdThreadJoin(%10) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc69)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc69)
        %13 = cir.ternary(%12, true {
          %14 = cir.const #true loc(#loc67)
          cir.yield %14 : !cir.bool loc(#loc67)
        }, false {
          %14 = cir.const #false loc(#loc67)
          cir.yield %14 : !cir.bool loc(#loc67)
        }) : (!cir.bool) -> !cir.bool loc(#loc67)
        cir.yield %13 : !cir.bool loc(#loc67)
      }, false {
        %10 = cir.const #false loc(#loc67)
        cir.yield %10 : !cir.bool loc(#loc67)
      }) : (!cir.bool) -> !cir.bool loc(#loc67)
      cir.if %9 {
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc71)
        %11 = cir.call @stdThreadDestroy(%10) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc72)
      } loc(#loc243)
    } loc(#loc242)
    cir.scope {
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc75)
      %8 = cir.cast(ptr_to_bool, %7 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc75)
      %9 = cir.ternary(%8, true {
        %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc77)
        %11 = cir.call @stdThreadJoin(%10) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc78)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc78)
        %13 = cir.ternary(%12, true {
          %14 = cir.const #true loc(#loc76)
          cir.yield %14 : !cir.bool loc(#loc76)
        }, false {
          %14 = cir.const #false loc(#loc76)
          cir.yield %14 : !cir.bool loc(#loc76)
        }) : (!cir.bool) -> !cir.bool loc(#loc76)
        cir.yield %13 : !cir.bool loc(#loc76)
      }, false {
        %10 = cir.const #false loc(#loc76)
        cir.yield %10 : !cir.bool loc(#loc76)
      }) : (!cir.bool) -> !cir.bool loc(#loc76)
      cir.if %9 {
        %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc80)
        %11 = cir.call @stdThreadDestroy(%10) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc81)
      } loc(#loc245)
    } loc(#loc244)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc83)
    cir.return loc(#loc34)
  } loc(#loc228)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc85)
  } loc(#loc246)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc248)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc249)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc97)
  cir.func @main(%arg0: !s32i loc(fused[#loc100, #loc101]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc106)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc106)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc107)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %8 = cir.get_global @CWE366_Race_Condition_Within_Thread__int_byref_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call @CWE366_Race_Condition_Within_Thread__int_byref_18_good() : () -> () loc(#loc109)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc95)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %13 = cir.get_global @CWE366_Race_Condition_Within_Thread__int_byref_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call @CWE366_Race_Condition_Within_Thread__int_byref_18_bad() : () -> () loc(#loc113)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.return %17 : !s32i loc(#loc256)
  } loc(#loc251)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc257)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc258)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc259)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc260)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc128, #loc129])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc264)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc134)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc131)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc131)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc263)
    %5 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc258)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc135)
    cir.call @stdThreadLockAcquire(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc136)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc139)
      cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
      cir.for : cond {
        %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %11 = cir.const #cir.int<1000000> : !s32i loc(#loc142)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc267)
        cir.condition(%12) loc(#loc143)
      } body {
        cir.scope {
          %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc145)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc147)
          %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc146)
          %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc269)
        } loc(#loc268)
        cir.yield loc(#loc138)
      } step {
        %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc151)
        cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
        cir.yield loc(#loc265)
      } loc(#loc265)
    } loc(#loc265)
    %7 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc258)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc152)
    cir.call @stdThreadLockRelease(%8) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc153)
    cir.return loc(#loc127)
  } loc(#loc261)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc271)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valGoodSink"] {alignment = 4 : i64} loc(#loc275)
    cir.goto "sink" loc(#loc276)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc166)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc159)
    cir.store %3, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc273)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc161)
    cir.store %4, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc274)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc167)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.scope {
      %9 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc258)
      %10 = cir.call @stdThreadLockCreate(%9) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc171)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc171)
      %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc171)
      cir.if %12 {
        cir.return loc(#loc173)
      } loc(#loc279)
    } loc(#loc278)
    cir.scope {
      %9 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc176)
      %10 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc281)
      %11 = cir.call @stdThreadCreate(%9, %10, %0) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc179)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc179)
      %13 = cir.unary(not, %12) : !cir.bool, !cir.bool loc(#loc179)
      cir.if %13 {
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc181)
        cir.store %14, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc283)
      } loc(#loc282)
    } loc(#loc280)
    cir.scope {
      %9 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc185)
      %10 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc285)
      %11 = cir.call @stdThreadCreate(%9, %10, %1) : (!cir.ptr<!cir.func<!void (!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc188)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc188)
      %13 = cir.unary(not, %12) : !cir.bool, !cir.bool loc(#loc188)
      cir.if %13 {
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc190)
        cir.store %14, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc287)
      } loc(#loc286)
    } loc(#loc284)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc194)
      %10 = cir.cast(ptr_to_bool, %9 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc194)
      %11 = cir.ternary(%10, true {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc196)
        %13 = cir.call @stdThreadJoin(%12) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc197)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc197)
        %15 = cir.ternary(%14, true {
          %16 = cir.const #true loc(#loc195)
          cir.yield %16 : !cir.bool loc(#loc195)
        }, false {
          %16 = cir.const #false loc(#loc195)
          cir.yield %16 : !cir.bool loc(#loc195)
        }) : (!cir.bool) -> !cir.bool loc(#loc195)
        cir.yield %15 : !cir.bool loc(#loc195)
      }, false {
        %12 = cir.const #false loc(#loc195)
        cir.yield %12 : !cir.bool loc(#loc195)
      }) : (!cir.bool) -> !cir.bool loc(#loc195)
      cir.if %11 {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc199)
        %13 = cir.call @stdThreadDestroy(%12) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc200)
      } loc(#loc289)
    } loc(#loc288)
    cir.scope {
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc203)
      %10 = cir.cast(ptr_to_bool, %9 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc203)
      %11 = cir.ternary(%10, true {
        %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc205)
        %13 = cir.call @stdThreadJoin(%12) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc206)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc206)
        %15 = cir.ternary(%14, true {
          %16 = cir.const #true loc(#loc204)
          cir.yield %16 : !cir.bool loc(#loc204)
        }, false {
          %16 = cir.const #false loc(#loc204)
          cir.yield %16 : !cir.bool loc(#loc204)
        }) : (!cir.bool) -> !cir.bool loc(#loc204)
        cir.yield %15 : !cir.bool loc(#loc204)
      }, false {
        %12 = cir.const #false loc(#loc204)
        cir.yield %12 : !cir.bool loc(#loc204)
      }) : (!cir.bool) -> !cir.bool loc(#loc204)
      cir.if %11 {
        %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc208)
        %13 = cir.call @stdThreadDestroy(%12) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc209)
      } loc(#loc291)
    } loc(#loc290)
    %6 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc258)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc210)
    cir.call @stdThreadLockDestroy(%7) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc211)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc213)
    cir.return loc(#loc157)
  } loc(#loc272)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_18.c":0:0)
#loc1 = loc("../../testcasesupport/std_thread.h":14:1)
#loc2 = loc("../../testcasesupport/std_thread.h":14:74)
#loc3 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":24:1)
#loc4 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":36:1)
#loc7 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":26:5)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":26:27)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":27:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":27:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":25:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":35:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":33:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":34:22)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":34:21)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":34:33)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":34:10)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":34:9)
#loc25 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:31)
#loc26 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":32:30)
#loc27 = loc("../../testcasesupport/std_thread.h":15:1)
#loc28 = loc("../../testcasesupport/std_thread.h":15:35)
#loc29 = loc("../../testcasesupport/std_thread.h":16:1)
#loc30 = loc("../../testcasesupport/std_thread.h":16:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":55:1)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":82:1)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":60:9)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":60:29)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":61:9)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":61:29)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":62:9)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":62:13)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":57:5)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":57:10)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":58:1)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":63:22)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":63:9)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":64:9)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":67:9)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":64:30)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":64:48)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":64:49)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":64:14)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":65:9)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":66:23)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":66:13)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":68:9)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":71:9)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":68:30)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":68:48)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":68:49)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":68:14)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":69:9)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":70:23)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":70:13)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":72:9)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":75:9)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":72:13)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":72:21)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":72:38)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":72:24)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":73:9)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":74:30)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":74:13)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":76:9)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":79:9)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":76:13)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":76:21)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":76:38)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":76:24)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":77:9)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":78:30)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":78:13)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":80:22)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":80:9)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":123:1)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":126:1)
#loc86 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":125:5)
#loc87 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":125:11)
#loc88 = loc("/usr/include/stdlib.h":575:1)
#loc89 = loc("/usr/include/stdlib.h":575:41)
#loc90 = loc("/usr/include/time.h":76:1)
#loc91 = loc("/usr/include/time.h":76:38)
#loc92 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc93 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":142:15)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":144:15)
#loc96 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":147:15)
#loc97 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":149:15)
#loc98 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":137:1)
#loc99 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":152:1)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":138:1)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":140:27)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":140:22)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":140:5)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":142:5)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":143:5)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":143:60)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":144:5)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":147:5)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":148:5)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":148:59)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":149:5)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":151:12)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":151:5)
#loc118 = loc("../../testcasesupport/std_thread.h":18:1)
#loc119 = loc("../../testcasesupport/std_thread.h":18:44)
#loc120 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":22:1)
#loc121 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":22:34)
#loc122 = loc("../../testcasesupport/std_thread.h":19:1)
#loc123 = loc("../../testcasesupport/std_thread.h":19:45)
#loc124 = loc("../../testcasesupport/std_thread.h":20:1)
#loc125 = loc("../../testcasesupport/std_thread.h":20:45)
#loc126 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":38:1)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":51:1)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":40:5)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":40:28)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":41:5)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":41:9)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":39:1)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":45:26)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":45:5)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:5)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":49:5)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:14)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:10)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:17)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:21)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:19)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":47:5)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":48:22)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":48:21)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":48:33)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":48:10)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":48:9)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:31)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":46:30)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":50:26)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":50:5)
#loc154 = loc("../../testcasesupport/std_thread.h":21:1)
#loc155 = loc("../../testcasesupport/std_thread.h":21:45)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":89:1)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":121:1)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":94:9)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":94:29)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":95:9)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":95:29)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":96:9)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":96:13)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":91:5)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":91:10)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":92:1)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":97:23)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":97:9)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":98:9)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":101:9)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":98:14)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":99:9)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":100:13)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":102:9)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":105:9)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":102:30)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":102:49)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":102:50)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":102:14)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":103:9)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":104:23)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":104:13)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":106:9)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":109:9)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":106:30)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":106:49)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":106:50)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":106:14)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":107:9)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":108:23)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":108:13)
#loc192 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":110:9)
#loc193 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":113:9)
#loc194 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":110:13)
#loc195 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":110:21)
#loc196 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":110:38)
#loc197 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":110:24)
#loc198 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":111:9)
#loc199 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":112:30)
#loc200 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":112:13)
#loc201 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":114:9)
#loc202 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":117:9)
#loc203 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":114:13)
#loc204 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":114:21)
#loc205 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":114:38)
#loc206 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":114:24)
#loc207 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":115:9)
#loc208 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":116:30)
#loc209 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":116:13)
#loc210 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":118:30)
#loc211 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":118:9)
#loc212 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":119:22)
#loc213 = loc("CWE366_Race_Condition_Within_Thread__int_byref_18.c":119:9)
#loc214 = loc(fused[#loc1, #loc2])
#loc215 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc7, #loc8])
#loc218 = loc(fused[#loc9, #loc10])
#loc219 = loc(fused[#loc12, #loc13])
#loc220 = loc(fused[#loc15, #loc14])
#loc221 = loc(fused[#loc16, #loc17])
#loc222 = loc(fused[#loc19, #loc13])
#loc223 = loc(fused[#loc24, #loc22])
#loc224 = loc(fused[#loc26, #loc25])
#loc225 = loc(fused[#loc27, #loc28])
#loc226 = loc(fused[#loc29, #loc30])
#loc227 = loc(fused[#loc31, #loc32])
#loc228 = loc(fused[#loc33, #loc34])
#loc229 = loc(fused[#loc35, #loc36])
#loc230 = loc(fused[#loc37, #loc38])
#loc231 = loc(fused[#loc39, #loc40])
#loc232 = loc(fused[#loc41, #loc42])
#loc233 = loc(fused[#loc45, #loc44])
#loc234 = loc(fused[#loc46, #loc47])
#loc235 = loc(fused[#loc49, #loc50])
#loc236 = loc(fused[#loc52, #loc47])
#loc237 = loc(fused[#loc54, #loc53])
#loc238 = loc(fused[#loc55, #loc56])
#loc239 = loc(fused[#loc58, #loc59])
#loc240 = loc(fused[#loc61, #loc56])
#loc241 = loc(fused[#loc63, #loc62])
#loc242 = loc(fused[#loc64, #loc65])
#loc243 = loc(fused[#loc70, #loc65])
#loc244 = loc(fused[#loc73, #loc74])
#loc245 = loc(fused[#loc79, #loc74])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc90, #loc91])
#loc250 = loc(fused[#loc92, #loc93])
#loc251 = loc(fused[#loc98, #loc99])
#loc254 = loc(fused[#loc109, #loc110])
#loc255 = loc(fused[#loc113, #loc114])
#loc256 = loc(fused[#loc117, #loc116])
#loc257 = loc(fused[#loc118, #loc119])
#loc258 = loc(fused[#loc120, #loc121])
#loc259 = loc(fused[#loc122, #loc123])
#loc260 = loc(fused[#loc124, #loc125])
#loc261 = loc(fused[#loc126, #loc127])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc132, #loc133])
#loc265 = loc(fused[#loc137, #loc138])
#loc266 = loc(fused[#loc140, #loc139])
#loc267 = loc(fused[#loc141, #loc142])
#loc268 = loc(fused[#loc144, #loc138])
#loc269 = loc(fused[#loc149, #loc147])
#loc270 = loc(fused[#loc151, #loc150])
#loc271 = loc(fused[#loc154, #loc155])
#loc272 = loc(fused[#loc156, #loc157])
#loc273 = loc(fused[#loc158, #loc159])
#loc274 = loc(fused[#loc160, #loc161])
#loc275 = loc(fused[#loc162, #loc163])
#loc276 = loc(fused[#loc164, #loc165])
#loc277 = loc(fused[#loc168, #loc167])
#loc278 = loc(fused[#loc169, #loc170])
#loc279 = loc(fused[#loc172, #loc170])
#loc280 = loc(fused[#loc174, #loc175])
#loc281 = loc(fused[#loc177, #loc178])
#loc282 = loc(fused[#loc180, #loc175])
#loc283 = loc(fused[#loc182, #loc181])
#loc284 = loc(fused[#loc183, #loc184])
#loc285 = loc(fused[#loc186, #loc187])
#loc286 = loc(fused[#loc189, #loc184])
#loc287 = loc(fused[#loc191, #loc190])
#loc288 = loc(fused[#loc192, #loc193])
#loc289 = loc(fused[#loc198, #loc193])
#loc290 = loc(fused[#loc201, #loc202])
#loc291 = loc(fused[#loc207, #loc202])
