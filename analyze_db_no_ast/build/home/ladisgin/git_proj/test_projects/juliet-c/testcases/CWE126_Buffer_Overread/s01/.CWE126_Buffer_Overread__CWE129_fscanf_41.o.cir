!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":22:21)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":22:25)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":83:25)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":83:29)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":54:25)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":54:29)
#true = #cir.bool<true> : !cir.bool
#loc126 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc52, #loc53])
#loc150 = loc(fused[#loc90, #loc91])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc121)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc122)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc123)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc126)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc128)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc128)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc128)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc130)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc29)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc29)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc29)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc30)
        } else {
          %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc131)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc12)
  } loc(#loc125)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc37)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc39)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc122)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc39)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @badSink(%9) : (!s32i) -> () loc(#loc42)
    cir.return loc(#loc33)
  } loc(#loc132)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc49)
  cir.func internal private  @goodB2GSink(%arg0: !s32i loc(fused[#loc52, #loc53])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc141)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc141)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc141)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc143)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc63)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc66)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc144)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc68)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc64)
            cir.yield %13 : !cir.bool loc(#loc64)
          }, false {
            %13 = cir.const #false loc(#loc64)
            cir.yield %13 : !cir.bool loc(#loc64)
          }) : (!cir.bool) -> !cir.bool loc(#loc64)
          cir.yield %12 : !cir.bool loc(#loc64)
        }, false {
          %8 = cir.const #false loc(#loc64)
          cir.yield %8 : !cir.bool loc(#loc64)
        }) : (!cir.bool) -> !cir.bool loc(#loc64)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc73)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc73)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc73)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc74)
        } else {
          %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc49)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc49)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc75)
        } loc(#loc145)
      } loc(#loc142)
    } loc(#loc140)
    cir.return loc(#loc51)
  } loc(#loc138)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc81)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc83)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc122)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc83)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @goodB2GSink(%9) : (!s32i) -> () loc(#loc87)
    cir.return loc(#loc77)
  } loc(#loc146)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc90, #loc91])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc152)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc152)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc152)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc154)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc101)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc106)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc106)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc107)
        } else {
          %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc108)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc108)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc109)
        } loc(#loc155)
      } loc(#loc153)
    } loc(#loc151)
    cir.return loc(#loc89)
  } loc(#loc149)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc115)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc117)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc120)
    cir.return loc(#loc111)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":45:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":34:23)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":22:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":37:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":23:1)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":24:5)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":36:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":25:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":25:30)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":35:9)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:13)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:21)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":28:18)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":29:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":31:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":33:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":30:33)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":30:26)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":30:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":34:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":39:1)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":47:1)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":41:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":41:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":43:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":43:12)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":43:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":45:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":45:12)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":46:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":46:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":109:1)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":113:1)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":111:5)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":111:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":112:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":112:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":94:23)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":83:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":97:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":84:1)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":85:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":96:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":86:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":86:30)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":95:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:21)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:18)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:23)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:26)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:34)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:36)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":88:31)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":89:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":91:9)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":93:9)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":90:33)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":90:26)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":90:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":94:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":99:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":107:1)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":101:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":101:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":103:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":103:12)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":103:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":105:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":105:12)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":105:19)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":106:17)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":106:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":54:1)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":69:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":55:1)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":56:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":68:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":57:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":57:30)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":67:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:21)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":60:18)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":61:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":63:9)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":65:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":62:33)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":62:26)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":62:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":66:23)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":66:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":71:1)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":80:1)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":73:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":73:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":75:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":75:12)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":75:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":78:12)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":78:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":79:17)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_41.c":79:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc6, #loc7])
#loc124 = loc(fused[#loc8, #loc9])
#loc125 = loc(fused[#loc11, #loc12])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc22, #loc23])
#loc131 = loc(fused[#loc25, #loc26, #loc27, #loc21])
#loc132 = loc(fused[#loc32, #loc33])
#loc133 = loc(fused[#loc34, #loc35])
#loc134 = loc(fused[#loc38, #loc36])
#loc135 = loc(fused[#loc43, #loc44])
#loc136 = loc(fused[#loc45, #loc46])
#loc137 = loc(fused[#loc47, #loc48])
#loc138 = loc(fused[#loc50, #loc51])
#loc140 = loc(fused[#loc55, #loc56])
#loc141 = loc(fused[#loc57, #loc58])
#loc142 = loc(fused[#loc59, #loc60])
#loc143 = loc(fused[#loc61, #loc62])
#loc144 = loc(fused[#loc65, #loc67])
#loc145 = loc(fused[#loc69, #loc70, #loc71, #loc60])
#loc146 = loc(fused[#loc76, #loc77])
#loc147 = loc(fused[#loc78, #loc79])
#loc148 = loc(fused[#loc82, #loc80])
#loc149 = loc(fused[#loc88, #loc89])
#loc151 = loc(fused[#loc93, #loc94])
#loc152 = loc(fused[#loc95, #loc96])
#loc153 = loc(fused[#loc97, #loc98])
#loc154 = loc(fused[#loc99, #loc100])
#loc155 = loc(fused[#loc102, #loc103, #loc104, #loc98])
#loc156 = loc(fused[#loc110, #loc111])
#loc157 = loc(fused[#loc112, #loc113])
#loc158 = loc(fused[#loc116, #loc114])
#loc159 = loc(fused[#loc118, #loc117])
