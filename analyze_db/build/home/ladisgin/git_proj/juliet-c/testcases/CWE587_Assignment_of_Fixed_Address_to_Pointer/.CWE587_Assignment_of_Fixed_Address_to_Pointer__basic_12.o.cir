!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc61)
  cir.func private @printHexCharLine(!s8i) loc(#loc62)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc64)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc65)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc66)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc68)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc68)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc69)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc70)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<4194304> : !s32i loc(#loc8)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc8)
    %9 = cir.cast(int_to_ptr, %8 : !u64i), !cir.ptr<!s8i> loc(#loc8)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc23)
    cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc24)
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc18)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<97> : !s32i loc(#loc10)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc10)
    cir.store %13, %1 : !s8i, !cir.ptr<!s8i> loc(#loc65)
    cir.store %1, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    %14 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc28)
    cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc29)
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc14)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc6)
  } loc(#loc63)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc31)
  } loc(#loc72)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc75)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc76)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc77)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc78)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc80)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc80)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc46)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %7 ^bb2, ^bb5 loc(#loc81)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc82)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<97> : !s32i loc(#loc37)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc37)
    cir.store %9, %0 : !s8i, !cir.ptr<!s8i> loc(#loc75)
    cir.store %0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc54)
    cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc55)
    cir.br ^bb4 loc(#loc52)
  ^bb4:  // pred: ^bb3
    cir.br ^bb8 loc(#loc49)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<97> : !s32i loc(#loc41)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc41)
    cir.store %13, %2 : !s8i, !cir.ptr<!s8i> loc(#loc77)
    cir.store %2, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc59)
    cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc60)
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc35)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":20:1)
#loc6 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":39:1)
#loc7 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":26:13)
#loc8 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":26:40)
#loc9 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":34:13)
#loc10 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":34:30)
#loc11 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":35:13)
#loc12 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":35:34)
#loc13 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":22:5)
#loc14 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":38:5)
#loc15 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":22:8)
#loc16 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":22:33)
#loc17 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":23:5)
#loc18 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":29:5)
#loc19 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":31:5)
#loc20 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":24:9)
#loc21 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":28:9)
#loc22 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":27:31)
#loc23 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":27:30)
#loc24 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":27:13)
#loc25 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":32:9)
#loc26 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":37:9)
#loc27 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":36:31)
#loc28 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":36:30)
#loc29 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":36:13)
#loc30 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":68:1)
#loc31 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":71:1)
#loc32 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":70:5)
#loc33 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":70:11)
#loc34 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":46:1)
#loc35 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":66:1)
#loc36 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":52:13)
#loc37 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":52:30)
#loc38 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":53:13)
#loc39 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":53:34)
#loc40 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":61:13)
#loc41 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":61:30)
#loc42 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":62:13)
#loc43 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":62:34)
#loc44 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":48:5)
#loc45 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":65:5)
#loc46 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":48:8)
#loc47 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":48:33)
#loc48 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":49:5)
#loc49 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":56:5)
#loc50 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":58:5)
#loc51 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":50:9)
#loc52 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":55:9)
#loc53 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":54:31)
#loc54 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":54:30)
#loc55 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":54:13)
#loc56 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":59:9)
#loc57 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":64:9)
#loc58 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":63:31)
#loc59 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":63:30)
#loc60 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_12.c":63:13)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc10])
#loc66 = loc(fused[#loc11, #loc12])
#loc67 = loc(fused[#loc13, #loc14])
#loc68 = loc(fused[#loc15, #loc16])
#loc69 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc70 = loc(fused[#loc20, #loc21])
#loc71 = loc(fused[#loc25, #loc26])
#loc72 = loc(fused[#loc30, #loc31])
#loc73 = loc(fused[#loc32, #loc33])
#loc74 = loc(fused[#loc34, #loc35])
#loc75 = loc(fused[#loc36, #loc37])
#loc76 = loc(fused[#loc38, #loc39])
#loc77 = loc(fused[#loc40, #loc41])
#loc78 = loc(fused[#loc42, #loc43])
#loc79 = loc(fused[#loc44, #loc45])
#loc80 = loc(fused[#loc46, #loc47])
#loc81 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc82 = loc(fused[#loc51, #loc52])
#loc83 = loc(fused[#loc56, #loc57])
