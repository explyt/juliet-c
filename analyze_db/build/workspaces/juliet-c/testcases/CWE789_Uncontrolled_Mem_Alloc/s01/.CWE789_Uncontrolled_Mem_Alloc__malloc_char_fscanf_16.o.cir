!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:45)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc185)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc24)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc196)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc28)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc30)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc186)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc30)
    cir.br ^bb6 loc(#loc32)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc27)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc198)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc198)
  ^bb9:  // 2 preds: ^bb8, ^bb23
    %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %13 ^bb10, ^bb24 loc(#loc35)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc199)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc200)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc201)
  ^bb13:  // pred: ^bb12
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %15 = cir.const #cir.int<5> : !u64i loc(#loc202)
    %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc203)
    cir.brcond %16 ^bb14, ^bb19 loc(#loc204)
  ^bb14:  // pred: ^bb13
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc47)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc205)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc206)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc207)
    cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.br ^bb15 loc(#loc209)
  ^bb15:  // pred: ^bb14
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
    cir.brcond %26 ^bb16, ^bb17 loc(#loc211)
  ^bb16:  // pred: ^bb15
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc60)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb17 loc(#loc54)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc54)
  ^bb18:  // pred: ^bb17
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
    %33 = cir.call @strcpy(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc62)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb20 loc(#loc45)
  ^bb19:  // pred: ^bb13
    %37 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb20 loc(#loc40)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc40)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc38)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24 loc(#loc68)
  ^bb23:  // no predecessors
    cir.br ^bb9 loc(#loc34)
  ^bb24:  // 2 preds: ^bb9, ^bb22
    cir.br ^bb25 loc(#loc34)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc19)
  } loc(#loc192)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc82)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc219)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc86)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc220)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc88)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc186)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc90)
    %11 = cir.call @__isoc99_fscanf(%8, %10, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc88)
    cir.br ^bb6 loc(#loc91)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc85)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc221)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc221)
  ^bb9:  // 2 preds: ^bb8, ^bb31
    %12 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %13 ^bb10, ^bb32 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc222)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc223)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc224)
  ^bb13:  // pred: ^bb12
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %15 = cir.const #cir.int<5> : !u64i loc(#loc225)
    %16 = cir.cmp(gt, %14, %15) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %16 ^bb14, ^bb19 loc(#loc103)
  ^bb14:  // pred: ^bb13
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc105)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc227)
    cir.brcond %20 ^bb15, ^bb16 loc(#loc103)
  ^bb15:  // pred: ^bb14
    %21 = cir.const #true loc(#loc103)
    cir.br ^bb17(%21 : !cir.bool) loc(#loc103)
  ^bb16:  // pred: ^bb14
    %22 = cir.const #false loc(#loc103)
    cir.br ^bb17(%22 : !cir.bool) loc(#loc103)
  ^bb17(%23: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:45)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc103)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%23 : !cir.bool) loc(#loc103)
  ^bb19:  // pred: ^bb13
    %24 = cir.const #false loc(#loc103)
    cir.br ^bb20(%24 : !cir.bool) loc(#loc103)
  ^bb20(%25: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:45)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc103)
  ^bb21:  // pred: ^bb20
    cir.brcond %25 ^bb22, ^bb27 loc(#loc228)
  ^bb22:  // pred: ^bb21
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc109)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc229)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc230)
    %30 = cir.call @malloc(%29) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc231)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
    cir.br ^bb23 loc(#loc233)
  ^bb23:  // pred: ^bb22
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
    cir.brcond %35 ^bb24, ^bb25 loc(#loc235)
  ^bb24:  // pred: ^bb23
    %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc120)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %38 = cir.unary(minus, %37) nsw : !s32i, !s32i loc(#loc122)
    cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb25 loc(#loc116)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc116)
  ^bb26:  // pred: ^bb25
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %40 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc124)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc124)
    %42 = cir.call @strcpy(%39, %41) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc129)
    cir.br ^bb28 loc(#loc107)
  ^bb27:  // pred: ^bb21
    %46 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc75)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb28 loc(#loc99)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc99)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc97)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc131)
  ^bb31:  // no predecessors
    cir.br ^bb9 loc(#loc93)
  ^bb32:  // 2 preds: ^bb9, ^bb30
    cir.br ^bb33 loc(#loc93)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc77)
  } loc(#loc215)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc138)
    cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc240)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %4 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc142)
    cir.brcond %5 ^bb3, ^bb6 loc(#loc142)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc241)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<20> : !s32i loc(#loc144)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc144)
    cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc242)
    cir.br ^bb6 loc(#loc146)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc141)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc243)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc243)
  ^bb9:  // 2 preds: ^bb8, ^bb23
    %8 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %9 ^bb10, ^bb24 loc(#loc149)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc244)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc245)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc246)
  ^bb13:  // pred: ^bb12
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc247)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc248)
    cir.brcond %12 ^bb14, ^bb19 loc(#loc249)
  ^bb14:  // pred: ^bb13
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc161)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc162)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc250)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc251)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.br ^bb15 loc(#loc254)
  ^bb15:  // pred: ^bb14
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc255)
    cir.brcond %22 ^bb16, ^bb17 loc(#loc256)
  ^bb16:  // pred: ^bb15
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc172)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc174)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
    cir.br ^bb17 loc(#loc168)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc168)
  ^bb18:  // pred: ^bb17
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc176)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc176)
    %29 = cir.call @strcpy(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc177)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc181)
    cir.br ^bb20 loc(#loc159)
  ^bb19:  // pred: ^bb13
    %33 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc182)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.br ^bb20 loc(#loc154)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc154)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc152)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24 loc(#loc184)
  ^bb23:  // no predecessors
    cir.br ^bb9 loc(#loc148)
  ^bb24:  // 2 preds: ^bb9, ^bb22
    cir.br ^bb25 loc(#loc148)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc133)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":36:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":51:34)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":57:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":28:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":62:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":42:13)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":42:20)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":30:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":30:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":32:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":32:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":33:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":38:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":33:11)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":34:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":36:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":36:16)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":37:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":39:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":61:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":39:11)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":40:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":41:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":59:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":46:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":58:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":46:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":46:24)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":46:43)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":47:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":54:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":56:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":48:36)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":48:43)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":48:48)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":48:59)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":48:60)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":48:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:49)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:21)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:39)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:40)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:46)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":49:45)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":51:24)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":51:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":52:27)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":52:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":53:22)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":53:17)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":57:17)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":60:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":142:1)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":146:1)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":144:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":144:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":145:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":145:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":98:27)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":69:1)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":103:1)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":83:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":83:20)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":71:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":71:12)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":73:12)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":73:5)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":74:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":79:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":74:11)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":75:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":77:9)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":77:16)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":77:23)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":78:9)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":80:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":102:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":80:11)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":81:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":82:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":100:9)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":99:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:24)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:43)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:48)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":87:55)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":88:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":95:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":97:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":89:36)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":89:43)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":89:48)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":89:59)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":89:60)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":89:17)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:49)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:21)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:33)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:39)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:40)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:46)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":90:45)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":92:24)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":92:34)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":92:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":93:27)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":93:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":94:22)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":94:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":98:17)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":101:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":106:1)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":140:1)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":120:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":120:20)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":108:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":108:12)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":110:12)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":110:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":111:5)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":116:5)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":111:11)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":112:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":114:16)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":114:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":115:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":117:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":139:5)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":117:11)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":118:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":119:9)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":137:9)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":124:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":136:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":124:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":124:24)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":124:43)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":125:13)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":132:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":134:13)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":126:36)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":126:43)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":126:48)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":126:59)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":126:60)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":126:17)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:49)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:21)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:33)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:39)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:40)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:46)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":127:45)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":129:24)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":129:34)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":129:17)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":130:27)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":130:17)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":131:22)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":131:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":135:27)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":135:17)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_16.c":138:9)
#loc185 = loc(fused[#loc1, #loc2])
#loc186 = loc(fused[#loc3, #loc4])
#loc187 = loc(fused[#loc6, #loc7])
#loc188 = loc(fused[#loc8, #loc9])
#loc189 = loc(fused[#loc10, #loc11])
#loc190 = loc(fused[#loc13, #loc14])
#loc191 = loc(fused[#loc15, #loc16])
#loc192 = loc(fused[#loc18, #loc19])
#loc193 = loc(fused[#loc20, #loc21])
#loc194 = loc(fused[#loc22, #loc23])
#loc195 = loc(fused[#loc25, #loc24])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc29, #loc27])
#loc198 = loc(fused[#loc33, #loc34])
#loc199 = loc(fused[#loc36, #loc34])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc39, #loc40])
#loc202 = loc(fused[#loc42, #loc43])
#loc203 = loc(fused[#loc41, #loc43])
#loc204 = loc(fused[#loc44, #loc45, #loc46, #loc40])
#loc205 = loc(fused[#loc49, #loc50])
#loc206 = loc(fused[#loc48, #loc50])
#loc207 = loc(fused[#loc47, #loc51])
#loc208 = loc(fused[#loc52, #loc51])
#loc209 = loc(fused[#loc53, #loc54])
#loc210 = loc(fused[#loc55, #loc56])
#loc211 = loc(fused[#loc57, #loc54])
#loc212 = loc(fused[#loc69, #loc70])
#loc213 = loc(fused[#loc71, #loc72])
#loc214 = loc(fused[#loc73, #loc74])
#loc215 = loc(fused[#loc76, #loc77])
#loc216 = loc(fused[#loc78, #loc79])
#loc217 = loc(fused[#loc80, #loc81])
#loc218 = loc(fused[#loc83, #loc82])
#loc219 = loc(fused[#loc84, #loc85])
#loc220 = loc(fused[#loc87, #loc85])
#loc221 = loc(fused[#loc92, #loc93])
#loc222 = loc(fused[#loc95, #loc93])
#loc223 = loc(fused[#loc96, #loc97])
#loc224 = loc(fused[#loc98, #loc99])
#loc225 = loc(fused[#loc101, #loc102])
#loc226 = loc(fused[#loc100, #loc102])
#loc227 = loc(fused[#loc104, #loc105])
#loc228 = loc(fused[#loc106, #loc107, #loc108, #loc99])
#loc229 = loc(fused[#loc111, #loc112])
#loc230 = loc(fused[#loc110, #loc112])
#loc231 = loc(fused[#loc109, #loc113])
#loc232 = loc(fused[#loc114, #loc113])
#loc233 = loc(fused[#loc115, #loc116])
#loc234 = loc(fused[#loc117, #loc118])
#loc235 = loc(fused[#loc119, #loc116])
#loc236 = loc(fused[#loc132, #loc133])
#loc237 = loc(fused[#loc134, #loc135])
#loc238 = loc(fused[#loc136, #loc137])
#loc239 = loc(fused[#loc139, #loc138])
#loc240 = loc(fused[#loc140, #loc141])
#loc241 = loc(fused[#loc143, #loc141])
#loc242 = loc(fused[#loc145, #loc144])
#loc243 = loc(fused[#loc147, #loc148])
#loc244 = loc(fused[#loc150, #loc148])
#loc245 = loc(fused[#loc151, #loc152])
#loc246 = loc(fused[#loc153, #loc154])
#loc247 = loc(fused[#loc156, #loc157])
#loc248 = loc(fused[#loc155, #loc157])
#loc249 = loc(fused[#loc158, #loc159, #loc160, #loc154])
#loc250 = loc(fused[#loc163, #loc164])
#loc251 = loc(fused[#loc162, #loc164])
#loc252 = loc(fused[#loc161, #loc165])
#loc253 = loc(fused[#loc166, #loc165])
#loc254 = loc(fused[#loc167, #loc168])
#loc255 = loc(fused[#loc169, #loc170])
#loc256 = loc(fused[#loc171, #loc168])
