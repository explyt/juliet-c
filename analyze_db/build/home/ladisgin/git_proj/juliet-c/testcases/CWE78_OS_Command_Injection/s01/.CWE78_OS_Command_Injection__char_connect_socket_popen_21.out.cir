!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":62:25)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":62:32)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:48)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":242:10)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":242:14)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":242:20)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":242:32)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":164:30)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":164:37)
#loc282 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":198:30)
#loc283 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":198:37)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc335 = loc(fused[#loc28, #loc29])
#loc406 = loc(fused[#loc210, #loc211])
#loc407 = loc(fused[#loc212, #loc213])
#loc414 = loc(fused[#loc236, #loc237])
#loc431 = loc(fused[#loc282, #loc283])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc322)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc323)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc324)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc325)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc326)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc327)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc15)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc329)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc330)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc331)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc332)
  cir.func private @close(!s32i) -> !s32i loc(#loc333)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc28, #loc29])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc337)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc338)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc339)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc340)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc335)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc27)
    cir.store %arg0, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
    cir.br ^bb1 loc(#loc341)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc325)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %9 ^bb2, ^bb42 loc(#loc342)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc343)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc37)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc47)
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc340)
    cir.br ^bb4 loc(#loc344)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc344)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc51)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc54)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb7 loc(#loc346)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc61)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc348)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc63)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc349)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc350)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc351)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc71)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc352)
    %31 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc15)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc15)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc74)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc353)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc79)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc79)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc354)
    cir.br ^bb11 loc(#loc355)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc356)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc357)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc357)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc91)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc92)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc359)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc94)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc85)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %49 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %50 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc98)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc360)
    %53 = cir.const #cir.int<1> : !u64i loc(#loc361)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc103)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc362)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc105)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc363)
    %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc364)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
    %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc108)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb15 loc(#loc366)
  ^bb15:  // pred: ^bb14
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc114)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %68 ^bb16, ^bb17 loc(#loc115)
  ^bb16:  // pred: ^bb15
    %69 = cir.const #true loc(#loc115)
    cir.br ^bb22(%69 : !cir.bool) loc(#loc115)
  ^bb17:  // pred: ^bb15
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %72 ^bb18, ^bb19 loc(#loc115)
  ^bb18:  // pred: ^bb17
    %73 = cir.const #true loc(#loc115)
    cir.br ^bb20(%73 : !cir.bool) loc(#loc115)
  ^bb19:  // pred: ^bb17
    %74 = cir.const #false loc(#loc115)
    cir.br ^bb20(%74 : !cir.bool) loc(#loc115)
  ^bb20(%75: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc115)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%75 : !cir.bool) loc(#loc115)
  ^bb22(%76: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc115)
  ^bb23:  // pred: ^bb22
    cir.brcond %76 ^bb24, ^bb25 loc(#loc369)
  ^bb24:  // pred: ^bb23
    cir.br ^bb35 loc(#loc119)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc112)
  ^bb26:  // pred: ^bb25
    %77 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc120)
    %79 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %80 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %82 = cir.cast(integral, %81 : !s32i), !u64i loc(#loc123)
    %83 = cir.const #cir.int<1> : !u64i loc(#loc370)
    %84 = cir.binop(div, %82, %83) : !u64i loc(#loc371)
    %85 = cir.binop(add, %80, %84) : !u64i loc(#loc372)
    %86 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %85 : !u64i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %78, %86 : !s8i, !cir.ptr<!s8i> loc(#loc373)
    %87 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %88 = cir.const #cir.int<13> : !s32i loc(#loc128)
    %89 = cir.call @strchr(%87, %88) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
    cir.store %89, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc374)
    cir.br ^bb27 loc(#loc375)
  ^bb27:  // pred: ^bb26
    %90 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %91 = cir.cast(ptr_to_bool, %90 : !cir.ptr<!s8i>), !cir.bool loc(#loc134)
    cir.brcond %91 ^bb28, ^bb29 loc(#loc376)
  ^bb28:  // pred: ^bb27
    %92 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %93 = cir.cast(integral, %92 : !s32i), !s8i loc(#loc136)
    %94 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.store %93, %94 : !s8i, !cir.ptr<!s8i> loc(#loc377)
    cir.br ^bb29 loc(#loc133)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc133)
  ^bb30:  // pred: ^bb29
    %95 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %96 = cir.const #cir.int<10> : !s32i loc(#loc140)
    %97 = cir.call @strchr(%95, %96) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
    cir.store %97, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc378)
    cir.br ^bb31 loc(#loc379)
  ^bb31:  // pred: ^bb30
    %98 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %99 = cir.cast(ptr_to_bool, %98 : !cir.ptr<!s8i>), !cir.bool loc(#loc146)
    cir.brcond %99 ^bb32, ^bb33 loc(#loc380)
  ^bb32:  // pred: ^bb31
    %100 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %101 = cir.cast(integral, %100 : !s32i), !s8i loc(#loc148)
    %102 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    cir.store %101, %102 : !s8i, !cir.ptr<!s8i> loc(#loc381)
    cir.br ^bb33 loc(#loc145)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc145)
  ^bb34:  // pred: ^bb33
    cir.br ^bb5 loc(#loc50)
  ^bb35:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb36 loc(#loc50)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc382)
  ^bb37:  // pred: ^bb36
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %105 = cir.unary(minus, %104) : !s32i, !s32i loc(#loc154)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc383)
    cir.brcond %106 ^bb38, ^bb39 loc(#loc384)
  ^bb38:  // pred: ^bb37
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc157)
    cir.br ^bb39 loc(#loc152)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc152)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc46)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc42)
  ^bb42:  // 2 preds: ^bb1, ^bb41
    cir.br ^bb43 loc(#loc42)
  ^bb43:  // pred: ^bb42
    %109 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    cir.store %109, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
    %110 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc385)
    cir.return %110 : !cir.ptr<!s8i> loc(#loc385)
  } loc(#loc334)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc162)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc387)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc389)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc390)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc324)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc324)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc324)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc391)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc325)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
    %8 = cir.call @badSource(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc176)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc393)
    cir.br ^bb1 loc(#loc394)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc162)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc162)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc182)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc395)
    cir.br ^bb2 loc(#loc396)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc187)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc188)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc188)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc397)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc398)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc190)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc191)
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc180)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc166)
  } loc(#loc388)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc400)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc194)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc401)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    cir.return loc(#loc193)
  } loc(#loc399)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc402)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc403)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc404)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc207)
  cir.func @main(%arg0: !s32i loc(fused[#loc210, #loc211]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc212, #loc213])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc407)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc209)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc214)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc215)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc216)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc216)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc217)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc204)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc218)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc408)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_21_good() : () -> () loc(#loc219)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc205)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc206)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc409)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_21_bad() : () -> () loc(#loc223)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc207)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc226)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    cir.return %17 : !s32i loc(#loc410)
  } loc(#loc405)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc411)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc230)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc412)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc233)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc236, #loc237])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc414)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc235)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb1 loc(#loc415)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc411)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc241)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc416)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc230)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc230)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    cir.br ^bb4 loc(#loc243)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc246)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
    %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc233)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc233)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc246)
    cir.br ^bb4 loc(#loc240)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc240)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc417)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc417)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc417)
  } loc(#loc413)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc419)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc420)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc323)
    %3 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc323)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc323)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc256)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc421)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %6 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc411)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
    %8 = cir.call @goodG2B1Source(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc261)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc423)
    cir.br ^bb1 loc(#loc424)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc267)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc267)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc268)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc425)
    cir.br ^bb2 loc(#loc426)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc273)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc274)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc274)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc427)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc428)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc276)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc277)
    cir.br ^bb4 loc(#loc272)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc272)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc265)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc251)
  } loc(#loc418)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc429)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc282, #loc283])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc431)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc281)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    cir.br ^bb1 loc(#loc432)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc429)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc287)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc433)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc289)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc290)
    %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc291)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc291)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
    cir.br ^bb3 loc(#loc286)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc286)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc292)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc434)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc434)
    cir.return %11 : !cir.ptr<!s8i> loc(#loc434)
  } loc(#loc430)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc436)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc437)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc322)
    %3 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc322)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc322)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc300)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc438)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc302)
    %6 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc429)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
    %8 = cir.call @goodG2B2Source(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc305)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc440)
    cir.br ^bb1 loc(#loc441)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc310)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc311)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc311)
    %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc312)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc442)
    cir.br ^bb2 loc(#loc443)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc317)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc318)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc318)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc444)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc445)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc320)
    %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc321)
    cir.br ^bb4 loc(#loc316)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc316)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc309)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc295)
  } loc(#loc435)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":211:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":211:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":182:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":182:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":140:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":140:26)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":60:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":60:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/sys/socket.h":102:1)
#loc12 = loc("/usr/include/sys/socket.h":102:62)
#loc13 = loc("/usr/include/arpa/inet.h":34:1)
#loc14 = loc("/usr/include/arpa/inet.h":34:47)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:53)
#loc16 = loc("/usr/include/netinet/in.h":404:1)
#loc17 = loc("/usr/include/netinet/in.h":405:40)
#loc18 = loc("/usr/include/sys/socket.h":126:1)
#loc19 = loc("/usr/include/sys/socket.h":126:75)
#loc20 = loc("/usr/include/sys/socket.h":145:1)
#loc21 = loc("/usr/include/sys/socket.h":145:68)
#loc22 = loc("/usr/include/string.h":246:1)
#loc23 = loc("/usr/include/string.h":247:33)
#loc24 = loc("/usr/include/unistd.h":358:1)
#loc25 = loc("/usr/include/unistd.h":358:27)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":62:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":135:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":71:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":71:17)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":72:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":72:32)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":73:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":73:19)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":74:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":74:36)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":63:1)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":64:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":133:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":64:8)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":65:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":66:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":132:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:30)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":75:37)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":76:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":121:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":121:20)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:40)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:49)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:62)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:33)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":86:73)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":87:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":90:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":87:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":87:38)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":88:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":89:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:24)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:25)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:34)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:37)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:51)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":91:52)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":92:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":92:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":93:63)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:42)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:17)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":94:50)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":98:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:29)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:62)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:63)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:72)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:86)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:21)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":95:92)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":96:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":97:21)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:35)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:59)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:66)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:64)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:50)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:73)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:76)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:87)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:92)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:98)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:108)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:109)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:112)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:30)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":102:113)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":106:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:21)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:35)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:51)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":103:65)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":104:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":105:21)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:61)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:22)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:32)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:45)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:56)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":108:57)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:34)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:40)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:27)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:17)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":110:44)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":111:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":114:17)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":111:21)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":112:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":113:32)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":113:22)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":113:21)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:34)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:40)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:27)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":115:44)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":116:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":119:17)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":116:21)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":117:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":118:32)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":118:22)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":118:21)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":122:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":125:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":122:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":122:34)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":123:13)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":124:30)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":124:17)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":134:12)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":134:5)
#loc160 = loc("/usr/include/stdio.h":893:1)
#loc161 = loc("/usr/include/stdio.h":894:3)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:28)
#loc163 = loc("/usr/include/stdio.h":887:1)
#loc164 = loc("/usr/include/stdio.h":887:36)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":137:1)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":153:1)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":145:9)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":145:15)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":139:5)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":139:12)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":141:12)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":141:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":142:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":142:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:22)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:12)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":143:26)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":144:5)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":152:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:22)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:16)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:9)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":147:31)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":148:9)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":151:9)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":148:13)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":148:21)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":149:9)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":150:20)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":150:13)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":226:1)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":230:1)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":228:5)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":228:14)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":229:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":229:14)
#loc198 = loc("/usr/include/stdlib.h":575:1)
#loc199 = loc("/usr/include/stdlib.h":575:41)
#loc200 = loc("/usr/include/time.h":76:1)
#loc201 = loc("/usr/include/time.h":76:38)
#loc202 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc203 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":247:15)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":249:15)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":252:15)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":254:15)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":242:1)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":257:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":243:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":245:27)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":245:22)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":245:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":247:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":248:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":248:67)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":249:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":252:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":253:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":253:66)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":254:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":256:12)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":256:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":160:1)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":160:29)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":169:19)
#loc231 = loc("/usr/include/string.h":149:1)
#loc232 = loc("/usr/include/string.h":150:14)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":174:22)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":164:1)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":177:1)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":165:1)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":166:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":175:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":166:8)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":167:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":170:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":172:5)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":169:9)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":174:9)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":174:16)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":176:12)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":176:5)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":179:1)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":195:1)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":187:9)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":187:15)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":181:5)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":181:12)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":183:12)
#loc257 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":183:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":184:22)
#loc259 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":184:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:27)
#loc261 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:12)
#loc262 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:5)
#loc263 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":185:31)
#loc264 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":186:5)
#loc265 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":194:5)
#loc266 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:22)
#loc267 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:28)
#loc268 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:16)
#loc269 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:9)
#loc270 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":189:31)
#loc271 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":190:9)
#loc272 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":193:9)
#loc273 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":190:13)
#loc274 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":190:21)
#loc275 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":191:9)
#loc276 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":192:20)
#loc277 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":192:13)
#loc278 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":161:1)
#loc279 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":161:29)
#loc280 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":198:1)
#loc281 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":206:1)
#loc284 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":199:1)
#loc285 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":200:5)
#loc286 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":204:5)
#loc287 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":200:8)
#loc288 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":201:5)
#loc289 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":203:9)
#loc290 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":203:16)
#loc291 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":203:22)
#loc292 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":205:12)
#loc293 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":205:5)
#loc294 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":208:1)
#loc295 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":224:1)
#loc296 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":216:9)
#loc297 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":216:15)
#loc298 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":210:5)
#loc299 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":210:12)
#loc300 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":212:12)
#loc301 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":212:5)
#loc302 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":213:22)
#loc303 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":213:5)
#loc304 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:27)
#loc305 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:12)
#loc306 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:5)
#loc307 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":214:31)
#loc308 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":215:5)
#loc309 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":223:5)
#loc310 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:22)
#loc311 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:28)
#loc312 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:16)
#loc313 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:9)
#loc314 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":218:31)
#loc315 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":219:9)
#loc316 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":222:9)
#loc317 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":219:13)
#loc318 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":219:21)
#loc319 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":220:9)
#loc320 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":221:20)
#loc321 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_21.c":221:13)
#loc322 = loc(fused[#loc1, #loc2])
#loc323 = loc(fused[#loc3, #loc4])
#loc324 = loc(fused[#loc5, #loc6])
#loc325 = loc(fused[#loc7, #loc8])
#loc326 = loc(fused[#loc9, #loc10])
#loc327 = loc(fused[#loc11, #loc12])
#loc328 = loc(fused[#loc13, #loc14])
#loc329 = loc(fused[#loc16, #loc17])
#loc330 = loc(fused[#loc18, #loc19])
#loc331 = loc(fused[#loc20, #loc21])
#loc332 = loc(fused[#loc22, #loc23])
#loc333 = loc(fused[#loc24, #loc25])
#loc334 = loc(fused[#loc26, #loc27])
#loc336 = loc(fused[#loc30, #loc31])
#loc337 = loc(fused[#loc32, #loc33])
#loc338 = loc(fused[#loc34, #loc35])
#loc339 = loc(fused[#loc36, #loc37])
#loc340 = loc(fused[#loc38, #loc39])
#loc341 = loc(fused[#loc41, #loc42])
#loc342 = loc(fused[#loc44, #loc42])
#loc343 = loc(fused[#loc45, #loc46])
#loc344 = loc(fused[#loc49, #loc50])
#loc345 = loc(fused[#loc56, #loc57])
#loc346 = loc(fused[#loc58, #loc59])
#loc347 = loc(fused[#loc60, #loc61])
#loc348 = loc(fused[#loc62, #loc59])
#loc349 = loc(fused[#loc64, #loc65])
#loc350 = loc(fused[#loc67, #loc68])
#loc351 = loc(fused[#loc69, #loc70])
#loc352 = loc(fused[#loc73, #loc71])
#loc353 = loc(fused[#loc77, #loc78])
#loc354 = loc(fused[#loc82, #loc83])
#loc355 = loc(fused[#loc84, #loc85])
#loc356 = loc(fused[#loc87, #loc88])
#loc357 = loc(fused[#loc89, #loc90])
#loc358 = loc(fused[#loc91, #loc92])
#loc359 = loc(fused[#loc93, #loc85])
#loc360 = loc(fused[#loc99, #loc100])
#loc361 = loc(fused[#loc101, #loc102])
#loc362 = loc(fused[#loc103, #loc104])
#loc363 = loc(fused[#loc103, #loc105])
#loc364 = loc(fused[#loc101, #loc106])
#loc365 = loc(fused[#loc109, #loc110])
#loc366 = loc(fused[#loc111, #loc112])
#loc367 = loc(fused[#loc113, #loc114])
#loc368 = loc(fused[#loc116, #loc117])
#loc369 = loc(fused[#loc118, #loc112])
#loc370 = loc(fused[#loc124, #loc125])
#loc371 = loc(fused[#loc123, #loc125])
#loc372 = loc(fused[#loc122, #loc125])
#loc373 = loc(fused[#loc121, #loc120])
#loc374 = loc(fused[#loc130, #loc131])
#loc375 = loc(fused[#loc132, #loc133])
#loc376 = loc(fused[#loc135, #loc133])
#loc377 = loc(fused[#loc138, #loc136])
#loc378 = loc(fused[#loc142, #loc143])
#loc379 = loc(fused[#loc144, #loc145])
#loc380 = loc(fused[#loc147, #loc145])
#loc381 = loc(fused[#loc150, #loc148])
#loc382 = loc(fused[#loc151, #loc152])
#loc383 = loc(fused[#loc153, #loc154])
#loc384 = loc(fused[#loc155, #loc152])
#loc385 = loc(fused[#loc159, #loc158])
#loc386 = loc(fused[#loc160, #loc161])
#loc387 = loc(fused[#loc163, #loc164])
#loc388 = loc(fused[#loc165, #loc166])
#loc389 = loc(fused[#loc167, #loc168])
#loc390 = loc(fused[#loc169, #loc170])
#loc391 = loc(fused[#loc172, #loc171])
#loc392 = loc(fused[#loc174, #loc173])
#loc393 = loc(fused[#loc177, #loc178])
#loc394 = loc(fused[#loc179, #loc180])
#loc395 = loc(fused[#loc183, #loc184])
#loc396 = loc(fused[#loc185, #loc186])
#loc397 = loc(fused[#loc187, #loc188])
#loc398 = loc(fused[#loc189, #loc186])
#loc399 = loc(fused[#loc192, #loc193])
#loc400 = loc(fused[#loc194, #loc195])
#loc401 = loc(fused[#loc196, #loc197])
#loc402 = loc(fused[#loc198, #loc199])
#loc403 = loc(fused[#loc200, #loc201])
#loc404 = loc(fused[#loc202, #loc203])
#loc405 = loc(fused[#loc208, #loc209])
#loc408 = loc(fused[#loc219, #loc220])
#loc409 = loc(fused[#loc223, #loc224])
#loc410 = loc(fused[#loc227, #loc226])
#loc411 = loc(fused[#loc228, #loc229])
#loc412 = loc(fused[#loc231, #loc232])
#loc413 = loc(fused[#loc234, #loc235])
#loc415 = loc(fused[#loc239, #loc240])
#loc416 = loc(fused[#loc242, #loc243, #loc244, #loc240])
#loc417 = loc(fused[#loc249, #loc248])
#loc418 = loc(fused[#loc250, #loc251])
#loc419 = loc(fused[#loc252, #loc253])
#loc420 = loc(fused[#loc254, #loc255])
#loc421 = loc(fused[#loc257, #loc256])
#loc422 = loc(fused[#loc259, #loc258])
#loc423 = loc(fused[#loc262, #loc263])
#loc424 = loc(fused[#loc264, #loc265])
#loc425 = loc(fused[#loc269, #loc270])
#loc426 = loc(fused[#loc271, #loc272])
#loc427 = loc(fused[#loc273, #loc274])
#loc428 = loc(fused[#loc275, #loc272])
#loc429 = loc(fused[#loc278, #loc279])
#loc430 = loc(fused[#loc280, #loc281])
#loc432 = loc(fused[#loc285, #loc286])
#loc433 = loc(fused[#loc288, #loc286])
#loc434 = loc(fused[#loc293, #loc292])
#loc435 = loc(fused[#loc294, #loc295])
#loc436 = loc(fused[#loc296, #loc297])
#loc437 = loc(fused[#loc298, #loc299])
#loc438 = loc(fused[#loc301, #loc300])
#loc439 = loc(fused[#loc303, #loc302])
#loc440 = loc(fused[#loc306, #loc307])
#loc441 = loc(fused[#loc308, #loc309])
#loc442 = loc(fused[#loc313, #loc314])
#loc443 = loc(fused[#loc315, #loc316])
#loc444 = loc(fused[#loc317, #loc318])
#loc445 = loc(fused[#loc319, #loc316])
