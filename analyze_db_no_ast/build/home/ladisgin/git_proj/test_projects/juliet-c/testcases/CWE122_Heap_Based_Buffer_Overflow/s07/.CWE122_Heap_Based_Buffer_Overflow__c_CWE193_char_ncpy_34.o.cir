!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc108)
  cir.func private  @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc110)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc117)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc118)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !s32i loc(#loc122)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc31)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc35)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
      } loc(#loc123)
    } loc(#loc121)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc128)
        %16 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc128)
        cir.store %16, %15 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc128)
        %17 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc48)
        %18 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        %19 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc50)
        %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
        %21 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc52)
        %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc53)
        %25 = cir.binop(add, %22, %24) : !u64i loc(#loc129)
        %26 = cir.call @strncpy(%18, %19, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
        %27 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
        %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
        cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc14)
  } loc(#loc113)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc130)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc68)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
    %4 = cir.const #cir.int<10> : !s32i loc(#loc71)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc71)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc71)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc137)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc141)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc82)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc86)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
      } loc(#loc142)
    } loc(#loc140)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %13 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
      %15 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
      %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
      cir.scope {
        %17 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc147)
        %18 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc147)
        cir.store %18, %17 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc147)
        %19 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc97)
        %20 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %21 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc99)
        %22 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc100)
        %23 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc101)
        %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc100)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc102)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc102)
        %27 = cir.binop(add, %24, %26) : !u64i loc(#loc148)
        %28 = cir.call @strncpy(%20, %21, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
        %29 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc104)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
        %31 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc63)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":34:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":54:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":36:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":36:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":37:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":37:72)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":38:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":38:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:30)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:41)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:42)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":40:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:14)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":41:29)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":42:26)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":28:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":42:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":43:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":53:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":44:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":44:31)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":29:12)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":45:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":52:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":46:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":46:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:27)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:35)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:42)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":49:52)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":50:23)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":50:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":51:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":51:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":83:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":86:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":85:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":85:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":61:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":81:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":63:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":63:12)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":64:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":64:72)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":65:12)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":65:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:20)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:28)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:31)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:34)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:45)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:46)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":67:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:33)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:23)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:24)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":68:29)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":69:26)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":69:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":70:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":80:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":71:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":71:31)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":72:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":79:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":73:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":73:33)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:21)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:27)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:35)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:42)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":76:52)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":77:23)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":77:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":78:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_34.c":78:18)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc13, #loc14])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc20, #loc19])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc22, #loc24])
#loc119 = loc(fused[#loc21, #loc25])
#loc120 = loc(fused[#loc26, #loc25])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc32, #loc28])
#loc124 = loc(fused[#loc38, #loc36])
#loc125 = loc(fused[#loc39, #loc40])
#loc126 = loc(fused[#loc41, #loc42])
#loc127 = loc(fused[#loc44, #loc45])
#loc128 = loc(fused[#loc46, #loc47])
#loc129 = loc(fused[#loc51, #loc53])
#loc130 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc60, #loc61])
#loc132 = loc(fused[#loc62, #loc63])
#loc133 = loc(fused[#loc64, #loc65])
#loc134 = loc(fused[#loc66, #loc67])
#loc135 = loc(fused[#loc69, #loc68])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc75, #loc74])
#loc138 = loc(fused[#loc70, #loc76])
#loc139 = loc(fused[#loc77, #loc76])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc80, #loc81])
#loc142 = loc(fused[#loc83, #loc79])
#loc143 = loc(fused[#loc88, #loc87])
#loc144 = loc(fused[#loc89, #loc90])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc100, #loc102])
