!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc508)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc509)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc510)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc511)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc512)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc513)
  cir.func private @close(!s32i) -> !s32i loc(#loc514)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc515)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @printIntLine(!s32i) loc(#loc516)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc518)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc31)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc522)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc523)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc524)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc525)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc40)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc524)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc47)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc49)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc528)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc56)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc56)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc530)
                    cir.if %55 {
                      cir.break loc(#loc58)
                    } loc(#loc531)
                  } loc(#loc529)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc532)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc61)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc533)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc534)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc66)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc66)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc535)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc536)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc74)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc74)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc537)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc539)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc540)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc540)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc87)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc87)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc541)
                    cir.if %59 {
                      cir.break loc(#loc89)
                    } loc(#loc542)
                  } loc(#loc538)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc92)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc92)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc92)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc92)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc92)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc92)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc92)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc93)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc543)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc94)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc95)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc544)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc101)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc101)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc546)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc102)
                      cir.yield %57 : !cir.bool loc(#loc102)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc104)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc547)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc102)
                        cir.yield %61 : !cir.bool loc(#loc102)
                      }, false {
                        %61 = cir.const #false loc(#loc102)
                        cir.yield %61 : !cir.bool loc(#loc102)
                      }) : (!cir.bool) -> !cir.bool loc(#loc102)
                      cir.yield %60 : !cir.bool loc(#loc102)
                    }) : (!cir.bool) -> !cir.bool loc(#loc102)
                    cir.if %56 {
                      cir.break loc(#loc106)
                    } loc(#loc548)
                  } loc(#loc545)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc107)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc107)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc109)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc549)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc111)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc550)
                } loc(#loc527)
                cir.yield loc(#loc44)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc114)
                cir.condition(%11) loc(#loc114)
              } loc(#loc526)
            } loc(#loc526)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc118)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc552)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc121)
              } loc(#loc553)
            } loc(#loc551)
          } loc(#loc521)
          cir.break loc(#loc122)
        } loc(#loc32)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          cir.break loc(#loc125)
        } loc(#loc123)
        cir.yield loc(#loc29)
      } loc(#loc29)
    } loc(#loc520)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc128)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc556)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc556)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc556)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc558)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc142)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc143)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc21)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc21)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc144)
              } loc(#loc559)
            } loc(#loc557)
          } loc(#loc555)
          cir.break loc(#loc145)
        } loc(#loc129)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc148)
          cir.break loc(#loc149)
        } loc(#loc146)
        cir.yield loc(#loc126)
      } loc(#loc126)
    } loc(#loc554)
    cir.return loc(#loc23)
  } loc(#loc517)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc561)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc152)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc562)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc154)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc563)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc156)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc564)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc158)
    cir.return loc(#loc151)
  } loc(#loc560)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc160)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc566)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc166)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc170)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc570)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc571)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc572)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc573)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc179)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc179)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc572)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc186)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc187)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc188)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc189)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc576)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc194)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc195)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc195)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc578)
                    cir.if %55 {
                      cir.break loc(#loc197)
                    } loc(#loc579)
                  } loc(#loc577)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc580)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc200)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc581)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc582)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc205)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc205)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc583)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc207)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc207)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc208)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc584)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc211)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc211)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc212)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc585)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc587)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc588)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc588)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc222)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc223)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc223)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc589)
                    cir.if %59 {
                      cir.break loc(#loc225)
                    } loc(#loc590)
                  } loc(#loc586)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc227)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc227)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc228)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc228)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc228)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc228)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc228)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc228)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc228)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc229)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc229)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc591)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc230)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc231)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc231)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc592)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc237)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc237)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc594)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc238)
                      cir.yield %57 : !cir.bool loc(#loc238)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc240)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc595)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc238)
                        cir.yield %61 : !cir.bool loc(#loc238)
                      }, false {
                        %61 = cir.const #false loc(#loc238)
                        cir.yield %61 : !cir.bool loc(#loc238)
                      }) : (!cir.bool) -> !cir.bool loc(#loc238)
                      cir.yield %60 : !cir.bool loc(#loc238)
                    }) : (!cir.bool) -> !cir.bool loc(#loc238)
                    cir.if %56 {
                      cir.break loc(#loc242)
                    } loc(#loc596)
                  } loc(#loc593)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc243)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc243)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc245)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc245)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc597)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc246)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc247)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc598)
                } loc(#loc575)
                cir.yield loc(#loc183)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc250)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc250)
                cir.condition(%11) loc(#loc250)
              } loc(#loc574)
            } loc(#loc574)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc254)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc254)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc600)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc257)
              } loc(#loc601)
            } loc(#loc599)
          } loc(#loc569)
          cir.break loc(#loc258)
        } loc(#loc171)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc260)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc260)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc261)
          cir.break loc(#loc262)
        } loc(#loc259)
        cir.yield loc(#loc168)
      } loc(#loc168)
    } loc(#loc568)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc265)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc267)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc267)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc268)
          cir.break loc(#loc269)
        } loc(#loc266)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc604)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc604)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc604)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc278)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc606)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc281)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc607)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc279)
                  cir.yield %14 : !cir.bool loc(#loc279)
                }, false {
                  %14 = cir.const #false loc(#loc279)
                  cir.yield %14 : !cir.bool loc(#loc279)
                }) : (!cir.bool) -> !cir.bool loc(#loc279)
                cir.yield %13 : !cir.bool loc(#loc279)
              }, false {
                %10 = cir.const #false loc(#loc279)
                cir.yield %10 : !cir.bool loc(#loc279)
              }) : (!cir.bool) -> !cir.bool loc(#loc279)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc287)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc287)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc287)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc288)
              } else {
                %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc160)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc160)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc289)
              } loc(#loc608)
            } loc(#loc605)
          } loc(#loc603)
          cir.break loc(#loc290)
        } loc(#loc270)
        cir.yield loc(#loc263)
      } loc(#loc263)
    } loc(#loc602)
    cir.return loc(#loc162)
  } loc(#loc565)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc610)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc296)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc611)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc300)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc614)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc615)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc616)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc617)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc309)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc309)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc616)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc316)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc317)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc318)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc319)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc620)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc325)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc325)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc622)
                    cir.if %55 {
                      cir.break loc(#loc327)
                    } loc(#loc623)
                  } loc(#loc621)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc624)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc330)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc625)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc626)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc335)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc335)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc627)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc337)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc337)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc338)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc628)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc341)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc341)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc342)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc629)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc347)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc631)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc632)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc632)
                    %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc352)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc353)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc353)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc633)
                    cir.if %59 {
                      cir.break loc(#loc355)
                    } loc(#loc634)
                  } loc(#loc630)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc356)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc357)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc357)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc358)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc358)
                  %34 = cir.const #cir.int<4> : !u64i loc(#loc358)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc358)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc358)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc358)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc358)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc359)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc359)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc635)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc360)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc361)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc361)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc636)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc366)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc367)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc367)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc638)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc368)
                      cir.yield %57 : !cir.bool loc(#loc368)
                    }, false {
                      %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc369)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc370)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc639)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc368)
                        cir.yield %61 : !cir.bool loc(#loc368)
                      }, false {
                        %61 = cir.const #false loc(#loc368)
                        cir.yield %61 : !cir.bool loc(#loc368)
                      }) : (!cir.bool) -> !cir.bool loc(#loc368)
                      cir.yield %60 : !cir.bool loc(#loc368)
                    }) : (!cir.bool) -> !cir.bool loc(#loc368)
                    cir.if %56 {
                      cir.break loc(#loc372)
                    } loc(#loc640)
                  } loc(#loc637)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc373)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc373)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc374)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc375)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc375)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc641)
                  %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc376)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc377)
                  cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
                } loc(#loc619)
                cir.yield loc(#loc313)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc380)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc380)
                cir.condition(%11) loc(#loc380)
              } loc(#loc618)
            } loc(#loc618)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc383)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc384)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc384)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc644)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc386)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc387)
              } loc(#loc645)
            } loc(#loc643)
          } loc(#loc613)
          cir.break loc(#loc388)
        } loc(#loc301)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc390)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc390)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc391)
          cir.break loc(#loc392)
        } loc(#loc389)
        cir.yield loc(#loc298)
      } loc(#loc298)
    } loc(#loc612)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc395)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc648)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc648)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc648)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc403)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc404)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc650)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc406)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc407)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc651)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc405)
                  cir.yield %14 : !cir.bool loc(#loc405)
                }, false {
                  %14 = cir.const #false loc(#loc405)
                  cir.yield %14 : !cir.bool loc(#loc405)
                }) : (!cir.bool) -> !cir.bool loc(#loc405)
                cir.yield %13 : !cir.bool loc(#loc405)
              }, false {
                %10 = cir.const #false loc(#loc405)
                cir.yield %10 : !cir.bool loc(#loc405)
              }) : (!cir.bool) -> !cir.bool loc(#loc405)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc412)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc413)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc413)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc414)
              } else {
                %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc415)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc415)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc416)
              } loc(#loc652)
            } loc(#loc649)
          } loc(#loc647)
          cir.break loc(#loc417)
        } loc(#loc396)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc419)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc419)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc420)
          cir.break loc(#loc421)
        } loc(#loc418)
        cir.yield loc(#loc393)
      } loc(#loc393)
    } loc(#loc646)
    cir.return loc(#loc292)
  } loc(#loc609)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc654)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc426)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc427)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc655)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc431)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc433)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc433)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc434)
          cir.break loc(#loc435)
        } loc(#loc432)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc437)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
          cir.break loc(#loc439)
        } loc(#loc436)
        cir.yield loc(#loc429)
      } loc(#loc429)
    } loc(#loc656)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc442)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc660)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc660)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc660)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc450)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc451)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc662)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc456)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc456)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc457)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc458)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc458)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc459)
              } loc(#loc663)
            } loc(#loc661)
          } loc(#loc659)
          cir.break loc(#loc460)
        } loc(#loc443)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc462)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc462)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc463)
          cir.break loc(#loc464)
        } loc(#loc461)
        cir.yield loc(#loc440)
      } loc(#loc440)
    } loc(#loc658)
    cir.return loc(#loc423)
  } loc(#loc653)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc665)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc469)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc470)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc666)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc474)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc476)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc668)
          cir.break loc(#loc478)
        } loc(#loc475)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc480)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc480)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc481)
          cir.break loc(#loc482)
        } loc(#loc479)
        cir.yield loc(#loc472)
      } loc(#loc472)
    } loc(#loc667)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc485)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc671)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc671)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc671)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc493)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc494)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc673)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc498)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc499)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc499)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc499)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc500)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc501)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc501)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc502)
              } loc(#loc674)
            } loc(#loc672)
          } loc(#loc670)
          cir.break loc(#loc503)
        } loc(#loc486)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc505)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc505)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc506)
          cir.break loc(#loc507)
        } loc(#loc504)
        cir.yield loc(#loc483)
      } loc(#loc483)
    } loc(#loc669)
    cir.return loc(#loc466)
  } loc(#loc664)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":111:19)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":127:23)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":44:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":136:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":46:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":46:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":48:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":48:12)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":48:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":49:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":113:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":49:12)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":51:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":52:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":107:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":57:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":57:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":58:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":58:28)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":59:9)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":59:32)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":60:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":60:41)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":61:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":96:17)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":62:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":95:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":71:36)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":71:45)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":71:58)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":71:29)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":71:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":71:69)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":72:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":75:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":72:17)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":72:34)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":73:13)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":74:17)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:20)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:21)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:30)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:33)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:47)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":76:48)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":77:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":77:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":78:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":78:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":78:59)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":79:38)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":79:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":79:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":79:46)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:13)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":83:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:25)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:58)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:59)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:68)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:82)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:17)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":80:88)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":81:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":82:17)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:31)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:46)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:59)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:77)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:80)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:26)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":86:81)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":87:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":90:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":87:17)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":87:31)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":87:44)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":87:47)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":87:61)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":88:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":89:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":92:39)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":92:25)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":92:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":94:25)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":94:20)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":94:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":94:36)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":96:16)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":97:9)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":100:9)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":97:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":97:30)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":98:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":99:26)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":99:13)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":108:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":109:5)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":111:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":112:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":114:5)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":135:5)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":114:12)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":116:5)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":117:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":129:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":118:9)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":118:30)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":121:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":128:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":121:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":121:21)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":122:9)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":124:9)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":126:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":123:33)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":123:26)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":123:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":127:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":130:5)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":131:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":133:19)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":133:9)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":134:9)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":414:1)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":420:1)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":416:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":416:14)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":417:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":417:14)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":418:5)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":418:14)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":419:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":419:14)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":229:23)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":143:1)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":234:1)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":145:5)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":145:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":147:13)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":147:12)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":147:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":148:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":212:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":148:12)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":150:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":151:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":206:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":156:9)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":156:13)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":157:9)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":157:28)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":158:9)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":158:32)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":159:9)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":159:41)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":160:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":195:17)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":161:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":194:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":170:36)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":170:45)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":170:58)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":170:29)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":170:13)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":170:69)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":171:13)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":174:13)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":171:17)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":171:34)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":172:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":173:17)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:20)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:21)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:30)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:33)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:47)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:13)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":175:48)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":176:34)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":176:13)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":177:49)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":177:39)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":177:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":177:59)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":178:38)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":178:32)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":178:13)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":178:46)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":182:13)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:25)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:58)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:59)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:68)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:82)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:17)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":179:88)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":180:13)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":181:17)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:31)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:46)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:59)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:77)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:80)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:26)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":185:81)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":186:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":189:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":186:17)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":186:31)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":186:44)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":186:47)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":186:61)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":187:13)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":188:17)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":191:39)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":191:25)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":191:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":193:25)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":193:20)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":193:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":193:36)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":195:16)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":196:9)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":199:9)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":196:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":196:30)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":197:9)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":198:26)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":198:13)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":207:5)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":208:5)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":210:19)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":210:9)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":211:9)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":213:5)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":233:5)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":213:12)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":215:5)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":217:19)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":217:9)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":218:9)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":219:5)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":220:5)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":231:5)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":221:9)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":221:30)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:9)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":230:9)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:13)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:21)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:23)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:26)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:34)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":223:36)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":224:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":226:9)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":228:9)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":225:33)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":225:26)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":225:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":229:13)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":232:5)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":237:1)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":328:1)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":239:5)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":239:9)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":241:13)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":241:12)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":241:5)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":242:5)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":306:5)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":242:12)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":244:5)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":245:5)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":300:5)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":250:9)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":250:13)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":251:9)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":251:28)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":252:9)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":252:32)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":253:9)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":253:41)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":254:9)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":289:17)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":255:9)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":288:9)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":264:36)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":264:45)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":264:58)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":264:29)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":264:13)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":264:69)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":265:13)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":268:13)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":265:17)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":265:34)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":266:13)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":267:17)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:20)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:21)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:30)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:33)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:47)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:13)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":269:48)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":270:34)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":270:13)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":271:49)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":271:39)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":271:13)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":271:59)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":272:38)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":272:32)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":272:13)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":272:46)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:13)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":276:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:25)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:58)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:59)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:68)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:82)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:17)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":273:88)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":274:13)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":275:17)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:31)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:46)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:59)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:77)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:80)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:26)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:13)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":279:81)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":280:13)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":283:13)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":280:17)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":280:31)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":280:44)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":280:47)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":280:61)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":281:13)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":282:17)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":285:39)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":285:25)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":285:13)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":287:25)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":287:20)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":287:13)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":287:36)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":289:16)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":290:9)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":293:9)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":290:13)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":290:30)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":291:9)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":292:26)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":292:13)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":301:5)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":302:5)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":304:19)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":304:9)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":305:9)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":307:5)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":327:5)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":307:12)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":309:5)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":310:5)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":321:5)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":311:9)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":311:30)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:9)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":320:9)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:13)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:21)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:23)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:26)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:34)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":313:36)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":314:9)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":316:9)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":318:9)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":315:33)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":315:26)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":315:13)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":319:23)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":319:13)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":322:5)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":323:5)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":325:19)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":325:9)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":326:9)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":331:1)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":370:1)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":333:5)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":333:9)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":335:13)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":335:12)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":335:5)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":336:5)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":347:5)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":336:12)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":338:5)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":340:19)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":340:9)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":341:9)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":342:5)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":345:16)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":345:9)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":346:9)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":348:5)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":369:5)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":348:12)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":350:5)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":351:5)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":363:5)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":352:9)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":352:30)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":355:9)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":362:9)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":355:13)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":355:21)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":356:9)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":358:9)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":360:9)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":357:33)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":357:26)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":357:13)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":361:23)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":361:13)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":364:5)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":365:5)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":367:19)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":367:9)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":368:9)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":373:1)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":412:1)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":375:5)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":375:9)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":377:13)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":377:12)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":377:5)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":378:5)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":389:5)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":378:12)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":380:5)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":383:16)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":383:9)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":384:9)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":385:5)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":387:19)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":387:9)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":388:9)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":390:5)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":411:5)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":390:12)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":392:5)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":393:5)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":405:5)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":394:9)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":394:30)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":397:9)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":404:9)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":397:13)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":397:21)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":398:9)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":400:9)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":402:9)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":399:33)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":399:26)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":399:13)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":403:23)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":403:13)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":406:5)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":407:5)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":409:19)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":409:9)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_15.c":410:9)
#loc508 = loc(fused[#loc1, #loc2])
#loc509 = loc(fused[#loc3, #loc4])
#loc510 = loc(fused[#loc6, #loc7])
#loc511 = loc(fused[#loc8, #loc9])
#loc512 = loc(fused[#loc10, #loc11])
#loc513 = loc(fused[#loc12, #loc13])
#loc514 = loc(fused[#loc14, #loc15])
#loc515 = loc(fused[#loc16, #loc17])
#loc516 = loc(fused[#loc19, #loc20])
#loc517 = loc(fused[#loc22, #loc23])
#loc518 = loc(fused[#loc24, #loc25])
#loc519 = loc(fused[#loc28, #loc26])
#loc520 = loc(fused[#loc29, #loc30])
#loc521 = loc(fused[#loc33, #loc34])
#loc522 = loc(fused[#loc35, #loc36])
#loc523 = loc(fused[#loc37, #loc38])
#loc524 = loc(fused[#loc39, #loc40])
#loc525 = loc(fused[#loc41, #loc42])
#loc526 = loc(fused[#loc43, #loc44])
#loc527 = loc(fused[#loc45, #loc46])
#loc528 = loc(fused[#loc51, #loc52])
#loc529 = loc(fused[#loc53, #loc54])
#loc530 = loc(fused[#loc55, #loc56])
#loc531 = loc(fused[#loc57, #loc54])
#loc532 = loc(fused[#loc59, #loc60])
#loc533 = loc(fused[#loc62, #loc63])
#loc534 = loc(fused[#loc64, #loc65])
#loc535 = loc(fused[#loc68, #loc66])
#loc536 = loc(fused[#loc72, #loc73])
#loc537 = loc(fused[#loc77, #loc78])
#loc538 = loc(fused[#loc79, #loc80])
#loc539 = loc(fused[#loc82, #loc83])
#loc540 = loc(fused[#loc84, #loc85])
#loc541 = loc(fused[#loc86, #loc87])
#loc542 = loc(fused[#loc88, #loc80])
#loc543 = loc(fused[#loc92, #loc93])
#loc544 = loc(fused[#loc96, #loc97])
#loc545 = loc(fused[#loc98, #loc99])
#loc546 = loc(fused[#loc100, #loc101])
#loc547 = loc(fused[#loc103, #loc104])
#loc548 = loc(fused[#loc105, #loc99])
#loc549 = loc(fused[#loc109, #loc107])
#loc550 = loc(fused[#loc112, #loc113])
#loc551 = loc(fused[#loc115, #loc116])
#loc552 = loc(fused[#loc117, #loc118])
#loc553 = loc(fused[#loc119, #loc116])
#loc554 = loc(fused[#loc126, #loc127])
#loc555 = loc(fused[#loc130, #loc131])
#loc556 = loc(fused[#loc132, #loc133])
#loc557 = loc(fused[#loc134, #loc135])
#loc558 = loc(fused[#loc136, #loc137])
#loc559 = loc(fused[#loc138, #loc139, #loc140, #loc135])
#loc560 = loc(fused[#loc150, #loc151])
#loc561 = loc(fused[#loc152, #loc153])
#loc562 = loc(fused[#loc154, #loc155])
#loc563 = loc(fused[#loc156, #loc157])
#loc564 = loc(fused[#loc158, #loc159])
#loc565 = loc(fused[#loc161, #loc162])
#loc566 = loc(fused[#loc163, #loc164])
#loc567 = loc(fused[#loc167, #loc165])
#loc568 = loc(fused[#loc168, #loc169])
#loc569 = loc(fused[#loc172, #loc173])
#loc570 = loc(fused[#loc174, #loc175])
#loc571 = loc(fused[#loc176, #loc177])
#loc572 = loc(fused[#loc178, #loc179])
#loc573 = loc(fused[#loc180, #loc181])
#loc574 = loc(fused[#loc182, #loc183])
#loc575 = loc(fused[#loc184, #loc185])
#loc576 = loc(fused[#loc190, #loc191])
#loc577 = loc(fused[#loc192, #loc193])
#loc578 = loc(fused[#loc194, #loc195])
#loc579 = loc(fused[#loc196, #loc193])
#loc580 = loc(fused[#loc198, #loc199])
#loc581 = loc(fused[#loc201, #loc202])
#loc582 = loc(fused[#loc203, #loc204])
#loc583 = loc(fused[#loc206, #loc205])
#loc584 = loc(fused[#loc209, #loc210])
#loc585 = loc(fused[#loc213, #loc214])
#loc586 = loc(fused[#loc215, #loc216])
#loc587 = loc(fused[#loc218, #loc219])
#loc588 = loc(fused[#loc220, #loc221])
#loc589 = loc(fused[#loc222, #loc223])
#loc590 = loc(fused[#loc224, #loc216])
#loc591 = loc(fused[#loc228, #loc229])
#loc592 = loc(fused[#loc232, #loc233])
#loc593 = loc(fused[#loc234, #loc235])
#loc594 = loc(fused[#loc236, #loc237])
#loc595 = loc(fused[#loc239, #loc240])
#loc596 = loc(fused[#loc241, #loc235])
#loc597 = loc(fused[#loc245, #loc243])
#loc598 = loc(fused[#loc248, #loc249])
#loc599 = loc(fused[#loc251, #loc252])
#loc600 = loc(fused[#loc253, #loc254])
#loc601 = loc(fused[#loc255, #loc252])
#loc602 = loc(fused[#loc263, #loc264])
#loc603 = loc(fused[#loc271, #loc272])
#loc604 = loc(fused[#loc273, #loc274])
#loc605 = loc(fused[#loc275, #loc276])
#loc606 = loc(fused[#loc277, #loc278])
#loc607 = loc(fused[#loc280, #loc282])
#loc608 = loc(fused[#loc283, #loc284, #loc285, #loc276])
#loc609 = loc(fused[#loc291, #loc292])
#loc610 = loc(fused[#loc293, #loc294])
#loc611 = loc(fused[#loc297, #loc295])
#loc612 = loc(fused[#loc298, #loc299])
#loc613 = loc(fused[#loc302, #loc303])
#loc614 = loc(fused[#loc304, #loc305])
#loc615 = loc(fused[#loc306, #loc307])
#loc616 = loc(fused[#loc308, #loc309])
#loc617 = loc(fused[#loc310, #loc311])
#loc618 = loc(fused[#loc312, #loc313])
#loc619 = loc(fused[#loc314, #loc315])
#loc620 = loc(fused[#loc320, #loc321])
#loc621 = loc(fused[#loc322, #loc323])
#loc622 = loc(fused[#loc324, #loc325])
#loc623 = loc(fused[#loc326, #loc323])
#loc624 = loc(fused[#loc328, #loc329])
#loc625 = loc(fused[#loc331, #loc332])
#loc626 = loc(fused[#loc333, #loc334])
#loc627 = loc(fused[#loc336, #loc335])
#loc628 = loc(fused[#loc339, #loc340])
#loc629 = loc(fused[#loc343, #loc344])
#loc630 = loc(fused[#loc345, #loc346])
#loc631 = loc(fused[#loc348, #loc349])
#loc632 = loc(fused[#loc350, #loc351])
#loc633 = loc(fused[#loc352, #loc353])
#loc634 = loc(fused[#loc354, #loc346])
#loc635 = loc(fused[#loc358, #loc359])
#loc636 = loc(fused[#loc362, #loc363])
#loc637 = loc(fused[#loc364, #loc365])
#loc638 = loc(fused[#loc366, #loc367])
#loc639 = loc(fused[#loc369, #loc370])
#loc640 = loc(fused[#loc371, #loc365])
#loc641 = loc(fused[#loc375, #loc373])
#loc642 = loc(fused[#loc378, #loc379])
#loc643 = loc(fused[#loc381, #loc382])
#loc644 = loc(fused[#loc383, #loc384])
#loc645 = loc(fused[#loc385, #loc382])
#loc646 = loc(fused[#loc393, #loc394])
#loc647 = loc(fused[#loc397, #loc398])
#loc648 = loc(fused[#loc399, #loc400])
#loc649 = loc(fused[#loc401, #loc402])
#loc650 = loc(fused[#loc403, #loc404])
#loc651 = loc(fused[#loc406, #loc408])
#loc652 = loc(fused[#loc409, #loc410, #loc411, #loc402])
#loc653 = loc(fused[#loc422, #loc423])
#loc654 = loc(fused[#loc424, #loc425])
#loc655 = loc(fused[#loc428, #loc426])
#loc656 = loc(fused[#loc429, #loc430])
#loc657 = loc(fused[#loc438, #loc437])
#loc658 = loc(fused[#loc440, #loc441])
#loc659 = loc(fused[#loc444, #loc445])
#loc660 = loc(fused[#loc446, #loc447])
#loc661 = loc(fused[#loc448, #loc449])
#loc662 = loc(fused[#loc450, #loc451])
#loc663 = loc(fused[#loc452, #loc453, #loc454, #loc449])
#loc664 = loc(fused[#loc465, #loc466])
#loc665 = loc(fused[#loc467, #loc468])
#loc666 = loc(fused[#loc471, #loc469])
#loc667 = loc(fused[#loc472, #loc473])
#loc668 = loc(fused[#loc477, #loc476])
#loc669 = loc(fused[#loc483, #loc484])
#loc670 = loc(fused[#loc487, #loc488])
#loc671 = loc(fused[#loc489, #loc490])
#loc672 = loc(fused[#loc491, #loc492])
#loc673 = loc(fused[#loc493, #loc494])
#loc674 = loc(fused[#loc495, #loc496, #loc497, #loc492])
