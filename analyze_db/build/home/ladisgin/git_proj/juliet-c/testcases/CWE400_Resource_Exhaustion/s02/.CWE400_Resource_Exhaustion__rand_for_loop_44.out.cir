!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc4 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":22:21)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":22:25)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":42:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":116:10)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":116:14)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":116:20)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":116:32)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":52:25)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":52:29)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":76:25)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":76:29)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:23)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":98:13)
#true = #cir.bool<true> : !cir.bool
#loc150 = loc(fused[#loc4, #loc5])
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc57, #loc58])
#loc177 = loc(fused[#loc75, #loc76])
#loc191 = loc(fused[#loc109, #loc110])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc1)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc7)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc7)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc151)
    cir.br ^bb2 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc13)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc15)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc16)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc155)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc1)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc1)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    cir.br ^bb6 loc(#loc12)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc12)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc20)
    %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc21)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb3 loc(#loc153)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc12)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc10)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc3)
  } loc(#loc149)
  cir.func private @rand() -> !s32i extra(#fn_attr1) loc(#loc158)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc161)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc31)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc33)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc33)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc33)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc33)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc33)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc33)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc33)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc33)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc33)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc33)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc33)
    cir.br ^bb3(%20 : !u32i) loc(#loc33)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc33)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc33)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc33)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc33)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc33)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc33)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc33)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc33)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc33)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc33)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc33)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc33)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc33)
    cir.br ^bb3(%36 : !u32i) loc(#loc33)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":42:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc33)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc33)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call %39(%40) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc35)
    cir.return loc(#loc25)
  } loc(#loc159)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc167)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_44_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_44_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %17 : !s32i loc(#loc175)
  } loc(#loc170)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc75, #loc76])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc177)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc78)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc84)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc87)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc182)
    cir.brcond %9 ^bb4, ^bb8 loc(#loc88)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc90)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc93)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb3 loc(#loc180)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc83)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc81)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc74)
  } loc(#loc176)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc187)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc101)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc103)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc105)
    cir.return loc(#loc95)
  } loc(#loc185)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc109, #loc110])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc191)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc112)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %6 ^bb3, ^bb8 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %8 = cir.const #cir.int<20> : !s32i loc(#loc122)
    %9 = cir.cmp(le, %7, %8) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc120)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #true loc(#loc120)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc120)
  ^bb5:  // pred: ^bb3
    %11 = cir.const #false loc(#loc120)
    cir.br ^bb6(%11 : !cir.bool) loc(#loc120)
  ^bb6(%12: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc120)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%12 : !cir.bool) loc(#loc120)
  ^bb8:  // pred: ^bb2
    %13 = cir.const #false loc(#loc120)
    cir.br ^bb9(%13 : !cir.bool) loc(#loc120)
  ^bb9(%14: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc120)
  ^bb10:  // pred: ^bb9
    cir.brcond %14 ^bb11, ^bb20 loc(#loc197)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc198)
  ^bb12:  // pred: ^bb11
    %15 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc126)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.br ^bb13 loc(#loc198)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc129)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc200)
    cir.brcond %20 ^bb14, ^bb18 loc(#loc130)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc201)
  ^bb15:  // pred: ^bb14
    %21 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc132)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.br ^bb16 loc(#loc125)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc125)
  ^bb17:  // pred: ^bb16
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc135)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc202)
    cir.br ^bb13 loc(#loc198)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc125)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc117)
  ^bb20:  // 2 preds: ^bb10, ^bb19
    cir.br ^bb21 loc(#loc117)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc115)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc108)
  } loc(#loc190)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc205)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc143)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc145)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc145)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc145)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc145)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc145)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc145)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc145)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc145)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc145)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc145)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc145)
    cir.br ^bb3(%20 : !u32i) loc(#loc145)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc145)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc145)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc145)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc145)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc145)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc145)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc145)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc145)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc145)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc145)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc145)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc145)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc145)
    cir.br ^bb3(%36 : !u32i) loc(#loc145)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":98:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc145)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.call %39(%40) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc147)
    cir.return loc(#loc137)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_44.c":0:0)
#loc1 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":29:23)
#loc2 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":22:1)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":32:1)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":25:9)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":25:20)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":23:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":24:5)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":31:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":30:9)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:18)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:14)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:21)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:33)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:23)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":28:9)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":29:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:41)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":27:40)
#loc22 = loc("/usr/include/stdlib.h":573:1)
#loc23 = loc("/usr/include/stdlib.h":573:24)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":34:1)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":45:1)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":36:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":36:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":38:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":38:29)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":40:14)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":40:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":40:5)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":42:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":44:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":44:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":102:1)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":106:1)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":104:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":104:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":105:5)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":105:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":121:15)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":123:15)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":126:15)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":128:15)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":116:1)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":131:1)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":117:1)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":119:27)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":119:22)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":119:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":121:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":122:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":122:55)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":123:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":126:5)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":127:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":127:54)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":128:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":130:12)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":130:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":52:1)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":62:1)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":55:9)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":55:20)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":53:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":54:5)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":61:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:9)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":60:9)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:18)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:14)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:21)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:33)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:23)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":58:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":59:23)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":59:13)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:41)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":57:40)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":64:1)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":73:1)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":66:5)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":66:9)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":67:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":67:29)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":69:14)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":69:13)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":69:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":71:13)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":71:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":72:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":72:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":76:1)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":89:1)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":79:9)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":79:20)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":77:1)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":78:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":88:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":87:9)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:21)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:26)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":81:35)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":82:9)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:13)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":86:13)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:22)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:18)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:25)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:37)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:27)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":84:13)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":85:27)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":85:17)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:45)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":83:44)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":91:1)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":100:1)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":93:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":93:9)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":94:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":94:29)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":96:14)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":96:13)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":96:5)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":98:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":99:5)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_for_loop_44.c":99:13)
#loc149 = loc(fused[#loc2, #loc3])
#loc151 = loc(fused[#loc6, #loc7])
#loc152 = loc(fused[#loc9, #loc10])
#loc153 = loc(fused[#loc11, #loc12])
#loc154 = loc(fused[#loc14, #loc13])
#loc155 = loc(fused[#loc15, #loc16])
#loc156 = loc(fused[#loc18, #loc12])
#loc157 = loc(fused[#loc21, #loc20])
#loc158 = loc(fused[#loc22, #loc23])
#loc159 = loc(fused[#loc24, #loc25])
#loc160 = loc(fused[#loc26, #loc27])
#loc161 = loc(fused[#loc28, #loc29])
#loc162 = loc(fused[#loc32, #loc30])
#loc163 = loc(fused[#loc34, #loc33])
#loc164 = loc(fused[#loc37, #loc38])
#loc165 = loc(fused[#loc39, #loc40])
#loc166 = loc(fused[#loc41, #loc42])
#loc167 = loc(fused[#loc43, #loc44])
#loc168 = loc(fused[#loc45, #loc46])
#loc169 = loc(fused[#loc47, #loc48])
#loc170 = loc(fused[#loc53, #loc54])
#loc173 = loc(fused[#loc64, #loc65])
#loc174 = loc(fused[#loc68, #loc69])
#loc175 = loc(fused[#loc72, #loc71])
#loc176 = loc(fused[#loc73, #loc74])
#loc178 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc80, #loc81])
#loc180 = loc(fused[#loc82, #loc83])
#loc181 = loc(fused[#loc85, #loc84])
#loc182 = loc(fused[#loc86, #loc87])
#loc183 = loc(fused[#loc89, #loc83])
#loc184 = loc(fused[#loc93, #loc92])
#loc185 = loc(fused[#loc94, #loc95])
#loc186 = loc(fused[#loc96, #loc97])
#loc187 = loc(fused[#loc98, #loc99])
#loc188 = loc(fused[#loc102, #loc100])
#loc189 = loc(fused[#loc104, #loc103])
#loc190 = loc(fused[#loc107, #loc108])
#loc192 = loc(fused[#loc111, #loc112])
#loc193 = loc(fused[#loc114, #loc115])
#loc194 = loc(fused[#loc116, #loc117])
#loc195 = loc(fused[#loc118, #loc119])
#loc196 = loc(fused[#loc121, #loc122])
#loc197 = loc(fused[#loc123, #loc117])
#loc198 = loc(fused[#loc124, #loc125])
#loc199 = loc(fused[#loc127, #loc126])
#loc200 = loc(fused[#loc128, #loc129])
#loc201 = loc(fused[#loc131, #loc125])
#loc202 = loc(fused[#loc135, #loc134])
#loc203 = loc(fused[#loc136, #loc137])
#loc204 = loc(fused[#loc138, #loc139])
#loc205 = loc(fused[#loc140, #loc141])
#loc206 = loc(fused[#loc144, #loc142])
#loc207 = loc(fused[#loc146, #loc145])
