!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":47:21)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":47:25)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:44)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":144:26)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":144:30)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:44)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":244:26)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":244:30)
#loc433 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:44)
#loc467 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":339:25)
#loc468 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":339:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc501 = loc(fused[#loc23, #loc24])
#loc559 = loc(fused[#loc175, #loc176])
#loc615 = loc(fused[#loc322, #loc323])
#loc671 = loc(fused[#loc467, #loc468])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc490)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc491)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc492)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc493)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc494)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc495)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc496)
  cir.func private @close(!s32i) -> !s32i loc(#loc497)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc498)
  cir.func private @printIntLine(!s32i) loc(#loc499)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc501)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.br ^bb1 loc(#loc502)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc498)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc503)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc504)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc32)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc22)
  } loc(#loc500)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc506)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc507)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc508)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc509)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc510)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc511)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc48)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    cir.br ^bb1 loc(#loc513)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc40)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc508)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc42)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb2 loc(#loc514)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc514)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    cir.br ^bb5 loc(#loc516)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc64)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc517)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc518)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc66)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc62)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc519)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc520)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc521)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc74)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc522)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc77)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc523)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc81)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc524)
    cir.br ^bb9 loc(#loc525)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc526)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc527)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc527)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc94)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc528)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc529)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc96)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc87)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc530)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc102)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc531)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc532)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc104)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc98)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc533)
    cir.br ^bb17 loc(#loc534)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc114)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc535)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc536)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc116)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc112)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc119)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc119)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc119)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc119)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc119)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc119)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc119)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc120)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc537)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc122)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.br ^bb21 loc(#loc539)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc128)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc129)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc129)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc129)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc541)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc129)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc129)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc129)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc129)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc129)
  ^bb26(%84: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc129)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc129)
  ^bb28(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc129)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc542)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc133)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc126)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc134)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc543)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc138)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc544)
    cir.br ^bb3 loc(#loc53)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc53)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc545)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc144)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc546)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc547)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb37 loc(#loc142)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc142)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc548)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc151)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc550)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc154)
    cir.br ^bb41 loc(#loc149)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc149)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc51)
  ^bb43:  // pred: ^bb42
    %105 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %106 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc498)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @badSink(%107) : (!s32i) -> () loc(#loc158)
    cir.return loc(#loc34)
  } loc(#loc505)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc553)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc554)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc555)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc165)
    cir.return loc(#loc160)
  } loc(#loc552)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc556)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc557)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc172)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc175, #loc176])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc559)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb1 loc(#loc560)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc556)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc561)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb9 loc(#loc182)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc562)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc563)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc564)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<100> : !s32i loc(#loc192)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %11 = cir.binop(rem, %9, %10) : !s32i loc(#loc565)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc194)
    cir.br ^bb7 loc(#loc190)
  ^bb6:  // pred: ^bb4
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc172)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    cir.br ^bb7 loc(#loc186)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc179)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc179)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc174)
  } loc(#loc558)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc567)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc568)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc569)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc570)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc571)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc572)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc211)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc573)
    cir.br ^bb1 loc(#loc574)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc203)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc205)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc570)
    cir.br ^bb2 loc(#loc575)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc575)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc217)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc217)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc220)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    cir.br ^bb5 loc(#loc577)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc227)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc578)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc579)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc229)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc225)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc580)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc581)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc582)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc237)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc237)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc583)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc239)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc239)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc584)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc241)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc241)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc242)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc585)
    cir.br ^bb9 loc(#loc586)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc587)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc588)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc588)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc252)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc253)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc589)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc590)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc255)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc246)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc591)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc259)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc261)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc592)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc593)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc263)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc257)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc265)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc266)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc267)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.br ^bb17 loc(#loc595)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc273)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc596)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc597)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc275)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc271)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc277)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc278)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc278)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc278)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc278)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc278)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc278)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc278)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc279)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc598)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc280)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc281)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc599)
    cir.br ^bb21 loc(#loc600)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc287)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc601)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc288)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc288)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc288)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc290)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc602)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc288)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc288)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc288)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc288)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc288)
  ^bb26(%84: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc288)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc288)
  ^bb28(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc288)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc603)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc292)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc285)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc293)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc293)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc295)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc604)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc296)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc297)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc605)
    cir.br ^bb3 loc(#loc216)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc216)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc606)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc303)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc607)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc608)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc306)
    cir.br ^bb37 loc(#loc301)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc301)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc609)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc310)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc611)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc313)
    cir.br ^bb41 loc(#loc308)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc308)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc214)
  ^bb43:  // pred: ^bb42
    %105 = cir.const #cir.int<0> : !s32i loc(#loc314)
    %106 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc556)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    cir.call @goodB2G1Sink(%107) : (!s32i) -> () loc(#loc317)
    cir.return loc(#loc197)
  } loc(#loc566)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc613)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc322, #loc323])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc615)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb1 loc(#loc616)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc613)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc327)
    cir.brcond %3 ^bb2, ^bb8 loc(#loc617)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc618)
  ^bb3:  // pred: ^bb2
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc332)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc619)
    cir.brcond %6 ^bb4, ^bb5 loc(#loc620)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<100> : !s32i loc(#loc336)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc621)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc338)
    cir.br ^bb6 loc(#loc334)
  ^bb5:  // pred: ^bb3
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc339)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc339)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc340)
    cir.br ^bb6 loc(#loc330)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc330)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc326)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc326)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc321)
  } loc(#loc614)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc623)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc624)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc625)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc626)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc627)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc628)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc355)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc356)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc629)
    cir.br ^bb1 loc(#loc630)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc348)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc348)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc350)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    cir.br ^bb2 loc(#loc631)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc631)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc362)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc362)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc362)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc363)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc364)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc365)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc366)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc632)
    cir.br ^bb5 loc(#loc633)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc371)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc372)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc372)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc634)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc635)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc374)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc370)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc636)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc377)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc637)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc638)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc382)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc382)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc639)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc384)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc384)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc640)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc386)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc386)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc387)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc641)
    cir.br ^bb9 loc(#loc642)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc392)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc643)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc644)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc644)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc397)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc398)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc398)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc645)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc646)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc400)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc391)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc647)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc403)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc404)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc405)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc406)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc406)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc648)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc649)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc408)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc402)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc409)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc410)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc411)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc412)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    cir.br ^bb17 loc(#loc651)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc418)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc418)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc652)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc653)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc420)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc416)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc422)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc422)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc423)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc423)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc423)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc423)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc423)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc423)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc423)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc424)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc424)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc654)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc425)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc426)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc426)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc655)
    cir.br ^bb21 loc(#loc656)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc432)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc432)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc657)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc433)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc433)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc433)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc435)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc658)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc433)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc433)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc433)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc433)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc433)
  ^bb26(%84: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc433)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc433)
  ^bb28(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc433)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc659)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc437)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc430)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc438)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc438)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc439)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc440)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc440)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc660)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc441)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc442)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc661)
    cir.br ^bb3 loc(#loc361)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc361)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc662)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc447)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc448)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc448)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc663)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc664)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc451)
    cir.br ^bb37 loc(#loc446)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc446)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc665)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc455)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc455)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc666)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc667)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc457)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc458)
    cir.br ^bb41 loc(#loc453)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc453)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc359)
  ^bb43:  // pred: ^bb42
    %105 = cir.const #cir.int<1> : !s32i loc(#loc459)
    %106 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc613)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc668)
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc461)
    cir.call @goodB2G2Sink(%107) : (!s32i) -> () loc(#loc462)
    cir.return loc(#loc342)
  } loc(#loc622)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc669)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc467, #loc468])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc671)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    cir.br ^bb1 loc(#loc672)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc669)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc472)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc472)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc673)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc474)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc475)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc674)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc476)
    cir.br ^bb3 loc(#loc471)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc471)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc466)
  } loc(#loc670)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc676)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc481)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc482)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc677)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc484)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc678)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc486)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc669)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc679)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc488)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc489)
    cir.return loc(#loc478)
  } loc(#loc675)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":45:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":45:24)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":47:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":54:1)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":48:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":49:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":53:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":49:8)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":50:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":52:22)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":52:28)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":52:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":56:1)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":132:1)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":66:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":66:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":67:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":67:28)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":68:9)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":68:31)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":69:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":69:31)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":70:9)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":70:41)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":58:5)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":58:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":60:13)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":60:12)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":60:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":61:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":129:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":71:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":114:17)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":114:16)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":81:35)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":81:44)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":81:57)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":81:28)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":81:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":81:68)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":82:13)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":85:13)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":82:17)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":82:33)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":83:13)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":84:17)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:20)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:21)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:30)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:33)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:47)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":86:48)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":87:34)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":87:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":88:39)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":88:13)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":89:38)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":89:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":89:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":89:46)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:13)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":93:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:22)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:54)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:55)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:64)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:78)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:17)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":90:84)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":91:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":92:17)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":94:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":97:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":94:24)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":94:38)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":94:17)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":94:57)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":95:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":96:17)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":98:35)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":98:49)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":98:55)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":98:28)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":98:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":98:59)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":99:13)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":102:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":99:17)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":99:33)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":100:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":101:17)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:31)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:45)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:58)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:76)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:79)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:26)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:13)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":104:80)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":108:13)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:17)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:31)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:47)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":105:61)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":106:13)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":107:17)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":110:39)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":110:25)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":110:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":112:25)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":112:20)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":112:13)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":112:36)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":115:9)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":118:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":115:13)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":115:29)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":116:9)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":117:26)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":117:13)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":119:9)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":122:9)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":119:13)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":119:29)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":120:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":121:26)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":121:13)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":130:17)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":130:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":131:13)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":131:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":359:1)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":364:1)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":361:5)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":361:14)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":362:5)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":362:14)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":363:5)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":363:13)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":139:1)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":139:29)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":149:19)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":160:23)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":144:1)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":163:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":145:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":146:5)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":162:5)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":146:8)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":147:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":150:5)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":152:5)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":149:9)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":154:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":161:9)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":154:13)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":154:21)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":155:9)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":157:9)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":159:9)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":156:26)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":156:32)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":156:13)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":160:13)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":165:1)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":241:1)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":175:9)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":175:13)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":176:9)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":176:28)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":177:9)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":177:31)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":178:9)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":178:31)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":179:9)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":179:41)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":167:5)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":167:9)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":169:13)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":169:12)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":169:5)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":170:5)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":238:5)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":180:9)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":223:17)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":223:16)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":190:35)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":190:44)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":190:57)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":190:28)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":190:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":190:68)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":191:13)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":194:13)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":191:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":191:33)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":192:13)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":193:17)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:20)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:21)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:30)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:33)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:47)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":195:48)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":196:34)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":196:13)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":197:39)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":197:13)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":198:38)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":198:32)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":198:13)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":198:46)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:13)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":202:13)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:22)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:54)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:55)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:64)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:78)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:17)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":199:84)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":200:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":201:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":203:13)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":206:13)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":203:24)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":203:38)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":203:17)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":203:57)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":204:13)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":205:17)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":207:35)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":207:49)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":207:55)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":207:28)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":207:13)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":207:59)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":208:13)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":211:13)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":208:17)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":208:33)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":209:13)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":210:17)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:31)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:45)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:58)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:76)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:79)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:26)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:13)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":213:80)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:13)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":217:13)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:17)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:31)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:47)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":214:61)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":215:13)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":216:17)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":219:39)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":219:25)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":219:13)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":221:25)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":221:20)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":221:13)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":221:36)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":224:9)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":227:9)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":224:13)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":224:29)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":225:9)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":226:26)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":226:13)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":228:9)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":231:9)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":228:13)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":228:29)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":229:9)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":230:26)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":230:13)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":239:22)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":239:5)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":240:18)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":240:5)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":140:1)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":140:29)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":244:1)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":258:1)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":245:1)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":246:5)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":257:5)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":246:8)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":247:5)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":249:9)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":256:9)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":249:13)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":249:21)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":250:9)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":252:9)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":254:9)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":251:26)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":251:32)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":251:13)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":255:23)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":255:13)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":260:1)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":336:1)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":270:9)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":270:13)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":271:9)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":271:28)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":272:9)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":272:31)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":273:9)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":273:31)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":274:9)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":274:41)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":262:5)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":262:9)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":264:13)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":264:12)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":264:5)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":265:5)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":333:5)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":275:9)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":318:17)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":318:16)
#loc363 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":285:35)
#loc364 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":285:44)
#loc365 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":285:57)
#loc366 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":285:28)
#loc367 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":285:13)
#loc368 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":285:68)
#loc369 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":286:13)
#loc370 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":289:13)
#loc371 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":286:17)
#loc372 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":286:33)
#loc373 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":287:13)
#loc374 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":288:17)
#loc375 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:20)
#loc376 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:21)
#loc377 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:30)
#loc378 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:33)
#loc379 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:47)
#loc380 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:13)
#loc381 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":290:48)
#loc382 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":291:34)
#loc383 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":291:13)
#loc384 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":292:39)
#loc385 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":292:13)
#loc386 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":293:38)
#loc387 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":293:32)
#loc388 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":293:13)
#loc389 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":293:46)
#loc390 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:13)
#loc391 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":297:13)
#loc392 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:22)
#loc393 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:54)
#loc394 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:55)
#loc395 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:64)
#loc396 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:78)
#loc397 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:17)
#loc398 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":294:84)
#loc399 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":295:13)
#loc400 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":296:17)
#loc401 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":298:13)
#loc402 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":301:13)
#loc403 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":298:24)
#loc404 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":298:38)
#loc405 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":298:17)
#loc406 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":298:57)
#loc407 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":299:13)
#loc408 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":300:17)
#loc409 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":302:35)
#loc410 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":302:49)
#loc411 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":302:55)
#loc412 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":302:28)
#loc413 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":302:13)
#loc414 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":302:59)
#loc415 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":303:13)
#loc416 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":306:13)
#loc417 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":303:17)
#loc418 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":303:33)
#loc419 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":304:13)
#loc420 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":305:17)
#loc421 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:31)
#loc422 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:45)
#loc423 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:58)
#loc424 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:76)
#loc425 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:79)
#loc426 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:26)
#loc427 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:13)
#loc428 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":308:80)
#loc429 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:13)
#loc430 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":312:13)
#loc431 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:17)
#loc432 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:31)
#loc434 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:47)
#loc435 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":309:61)
#loc436 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":310:13)
#loc437 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":311:17)
#loc438 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":314:39)
#loc439 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":314:25)
#loc440 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":314:13)
#loc441 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":316:25)
#loc442 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":316:20)
#loc443 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":316:13)
#loc444 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":316:36)
#loc445 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":319:9)
#loc446 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":322:9)
#loc447 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":319:13)
#loc448 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":319:29)
#loc449 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":320:9)
#loc450 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":321:26)
#loc451 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":321:13)
#loc452 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":323:9)
#loc453 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":326:9)
#loc454 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":323:13)
#loc455 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":323:29)
#loc456 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":324:9)
#loc457 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":325:26)
#loc458 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":325:13)
#loc459 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":334:22)
#loc460 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":334:5)
#loc461 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":335:18)
#loc462 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":335:5)
#loc463 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":141:1)
#loc464 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":141:28)
#loc465 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":339:1)
#loc466 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":346:1)
#loc469 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":340:1)
#loc470 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":341:5)
#loc471 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":345:5)
#loc472 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":341:8)
#loc473 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":342:5)
#loc474 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":344:22)
#loc475 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":344:28)
#loc476 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":344:9)
#loc477 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":348:1)
#loc478 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":357:1)
#loc479 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":350:5)
#loc480 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":350:9)
#loc481 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":352:13)
#loc482 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":352:12)
#loc483 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":352:5)
#loc484 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":354:12)
#loc485 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":354:5)
#loc486 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":355:21)
#loc487 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":355:5)
#loc488 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":356:17)
#loc489 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_21.c":356:5)
#loc490 = loc(fused[#loc1, #loc2])
#loc491 = loc(fused[#loc3, #loc4])
#loc492 = loc(fused[#loc5, #loc6])
#loc493 = loc(fused[#loc7, #loc8])
#loc494 = loc(fused[#loc9, #loc10])
#loc495 = loc(fused[#loc11, #loc12])
#loc496 = loc(fused[#loc13, #loc14])
#loc497 = loc(fused[#loc15, #loc16])
#loc498 = loc(fused[#loc17, #loc18])
#loc499 = loc(fused[#loc19, #loc20])
#loc500 = loc(fused[#loc21, #loc22])
#loc502 = loc(fused[#loc26, #loc27])
#loc503 = loc(fused[#loc29, #loc27])
#loc504 = loc(fused[#loc30, #loc31])
#loc505 = loc(fused[#loc33, #loc34])
#loc506 = loc(fused[#loc35, #loc36])
#loc507 = loc(fused[#loc37, #loc38])
#loc508 = loc(fused[#loc39, #loc40])
#loc509 = loc(fused[#loc41, #loc42])
#loc510 = loc(fused[#loc43, #loc44])
#loc511 = loc(fused[#loc45, #loc46])
#loc512 = loc(fused[#loc49, #loc47])
#loc513 = loc(fused[#loc50, #loc51])
#loc514 = loc(fused[#loc52, #loc53])
#loc515 = loc(fused[#loc59, #loc60])
#loc516 = loc(fused[#loc61, #loc62])
#loc517 = loc(fused[#loc63, #loc64])
#loc518 = loc(fused[#loc65, #loc62])
#loc519 = loc(fused[#loc67, #loc68])
#loc520 = loc(fused[#loc70, #loc71])
#loc521 = loc(fused[#loc72, #loc73])
#loc522 = loc(fused[#loc76, #loc74])
#loc523 = loc(fused[#loc80, #loc77])
#loc524 = loc(fused[#loc84, #loc85])
#loc525 = loc(fused[#loc86, #loc87])
#loc526 = loc(fused[#loc89, #loc90])
#loc527 = loc(fused[#loc91, #loc92])
#loc528 = loc(fused[#loc93, #loc94])
#loc529 = loc(fused[#loc95, #loc87])
#loc530 = loc(fused[#loc97, #loc98])
#loc531 = loc(fused[#loc101, #loc102])
#loc532 = loc(fused[#loc103, #loc98])
#loc533 = loc(fused[#loc109, #loc110])
#loc534 = loc(fused[#loc111, #loc112])
#loc535 = loc(fused[#loc113, #loc114])
#loc536 = loc(fused[#loc115, #loc112])
#loc537 = loc(fused[#loc119, #loc120])
#loc538 = loc(fused[#loc123, #loc124])
#loc539 = loc(fused[#loc125, #loc126])
#loc540 = loc(fused[#loc127, #loc128])
#loc541 = loc(fused[#loc130, #loc131])
#loc542 = loc(fused[#loc132, #loc126])
#loc543 = loc(fused[#loc136, #loc134])
#loc544 = loc(fused[#loc139, #loc140])
#loc545 = loc(fused[#loc141, #loc142])
#loc546 = loc(fused[#loc143, #loc144])
#loc547 = loc(fused[#loc145, #loc142])
#loc548 = loc(fused[#loc148, #loc149])
#loc549 = loc(fused[#loc150, #loc151])
#loc550 = loc(fused[#loc152, #loc149])
#loc551 = loc(fused[#loc156, #loc155])
#loc552 = loc(fused[#loc159, #loc160])
#loc553 = loc(fused[#loc161, #loc162])
#loc554 = loc(fused[#loc163, #loc164])
#loc555 = loc(fused[#loc165, #loc166])
#loc556 = loc(fused[#loc167, #loc168])
#loc557 = loc(fused[#loc169, #loc170])
#loc558 = loc(fused[#loc173, #loc174])
#loc560 = loc(fused[#loc178, #loc179])
#loc561 = loc(fused[#loc181, #loc182, #loc183, #loc179])
#loc562 = loc(fused[#loc185, #loc186])
#loc563 = loc(fused[#loc187, #loc188])
#loc564 = loc(fused[#loc189, #loc190, #loc191, #loc186])
#loc565 = loc(fused[#loc192, #loc193])
#loc566 = loc(fused[#loc196, #loc197])
#loc567 = loc(fused[#loc198, #loc199])
#loc568 = loc(fused[#loc200, #loc201])
#loc569 = loc(fused[#loc202, #loc203])
#loc570 = loc(fused[#loc204, #loc205])
#loc571 = loc(fused[#loc206, #loc207])
#loc572 = loc(fused[#loc208, #loc209])
#loc573 = loc(fused[#loc212, #loc210])
#loc574 = loc(fused[#loc213, #loc214])
#loc575 = loc(fused[#loc215, #loc216])
#loc576 = loc(fused[#loc222, #loc223])
#loc577 = loc(fused[#loc224, #loc225])
#loc578 = loc(fused[#loc226, #loc227])
#loc579 = loc(fused[#loc228, #loc225])
#loc580 = loc(fused[#loc230, #loc231])
#loc581 = loc(fused[#loc233, #loc234])
#loc582 = loc(fused[#loc235, #loc236])
#loc583 = loc(fused[#loc238, #loc237])
#loc584 = loc(fused[#loc240, #loc239])
#loc585 = loc(fused[#loc243, #loc244])
#loc586 = loc(fused[#loc245, #loc246])
#loc587 = loc(fused[#loc248, #loc249])
#loc588 = loc(fused[#loc250, #loc251])
#loc589 = loc(fused[#loc252, #loc253])
#loc590 = loc(fused[#loc254, #loc246])
#loc591 = loc(fused[#loc256, #loc257])
#loc592 = loc(fused[#loc260, #loc261])
#loc593 = loc(fused[#loc262, #loc257])
#loc594 = loc(fused[#loc268, #loc269])
#loc595 = loc(fused[#loc270, #loc271])
#loc596 = loc(fused[#loc272, #loc273])
#loc597 = loc(fused[#loc274, #loc271])
#loc598 = loc(fused[#loc278, #loc279])
#loc599 = loc(fused[#loc282, #loc283])
#loc600 = loc(fused[#loc284, #loc285])
#loc601 = loc(fused[#loc286, #loc287])
#loc602 = loc(fused[#loc289, #loc290])
#loc603 = loc(fused[#loc291, #loc285])
#loc604 = loc(fused[#loc295, #loc293])
#loc605 = loc(fused[#loc298, #loc299])
#loc606 = loc(fused[#loc300, #loc301])
#loc607 = loc(fused[#loc302, #loc303])
#loc608 = loc(fused[#loc304, #loc301])
#loc609 = loc(fused[#loc307, #loc308])
#loc610 = loc(fused[#loc309, #loc310])
#loc611 = loc(fused[#loc311, #loc308])
#loc612 = loc(fused[#loc315, #loc314])
#loc613 = loc(fused[#loc318, #loc319])
#loc614 = loc(fused[#loc320, #loc321])
#loc616 = loc(fused[#loc325, #loc326])
#loc617 = loc(fused[#loc328, #loc326])
#loc618 = loc(fused[#loc329, #loc330])
#loc619 = loc(fused[#loc331, #loc332])
#loc620 = loc(fused[#loc333, #loc334, #loc335, #loc330])
#loc621 = loc(fused[#loc336, #loc337])
#loc622 = loc(fused[#loc341, #loc342])
#loc623 = loc(fused[#loc343, #loc344])
#loc624 = loc(fused[#loc345, #loc346])
#loc625 = loc(fused[#loc347, #loc348])
#loc626 = loc(fused[#loc349, #loc350])
#loc627 = loc(fused[#loc351, #loc352])
#loc628 = loc(fused[#loc353, #loc354])
#loc629 = loc(fused[#loc357, #loc355])
#loc630 = loc(fused[#loc358, #loc359])
#loc631 = loc(fused[#loc360, #loc361])
#loc632 = loc(fused[#loc367, #loc368])
#loc633 = loc(fused[#loc369, #loc370])
#loc634 = loc(fused[#loc371, #loc372])
#loc635 = loc(fused[#loc373, #loc370])
#loc636 = loc(fused[#loc375, #loc376])
#loc637 = loc(fused[#loc378, #loc379])
#loc638 = loc(fused[#loc380, #loc381])
#loc639 = loc(fused[#loc383, #loc382])
#loc640 = loc(fused[#loc385, #loc384])
#loc641 = loc(fused[#loc388, #loc389])
#loc642 = loc(fused[#loc390, #loc391])
#loc643 = loc(fused[#loc393, #loc394])
#loc644 = loc(fused[#loc395, #loc396])
#loc645 = loc(fused[#loc397, #loc398])
#loc646 = loc(fused[#loc399, #loc391])
#loc647 = loc(fused[#loc401, #loc402])
#loc648 = loc(fused[#loc405, #loc406])
#loc649 = loc(fused[#loc407, #loc402])
#loc650 = loc(fused[#loc413, #loc414])
#loc651 = loc(fused[#loc415, #loc416])
#loc652 = loc(fused[#loc417, #loc418])
#loc653 = loc(fused[#loc419, #loc416])
#loc654 = loc(fused[#loc423, #loc424])
#loc655 = loc(fused[#loc427, #loc428])
#loc656 = loc(fused[#loc429, #loc430])
#loc657 = loc(fused[#loc431, #loc432])
#loc658 = loc(fused[#loc434, #loc435])
#loc659 = loc(fused[#loc436, #loc430])
#loc660 = loc(fused[#loc440, #loc438])
#loc661 = loc(fused[#loc443, #loc444])
#loc662 = loc(fused[#loc445, #loc446])
#loc663 = loc(fused[#loc447, #loc448])
#loc664 = loc(fused[#loc449, #loc446])
#loc665 = loc(fused[#loc452, #loc453])
#loc666 = loc(fused[#loc454, #loc455])
#loc667 = loc(fused[#loc456, #loc453])
#loc668 = loc(fused[#loc460, #loc459])
#loc669 = loc(fused[#loc463, #loc464])
#loc670 = loc(fused[#loc465, #loc466])
#loc672 = loc(fused[#loc470, #loc471])
#loc673 = loc(fused[#loc473, #loc471])
#loc674 = loc(fused[#loc474, #loc475])
#loc675 = loc(fused[#loc477, #loc478])
#loc676 = loc(fused[#loc479, #loc480])
#loc677 = loc(fused[#loc483, #loc481])
#loc678 = loc(fused[#loc485, #loc484])
#loc679 = loc(fused[#loc487, #loc486])
