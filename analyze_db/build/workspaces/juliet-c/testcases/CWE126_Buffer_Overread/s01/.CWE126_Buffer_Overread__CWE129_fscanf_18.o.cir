!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:23)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc102)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc104)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc108)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc18)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc22)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc103)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc108)
    cir.store %10, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc108)
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc113)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc114)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc34)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc34)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc31)
  ^bb5:  // pred: ^bb3
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc12)
  } loc(#loc106)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc51)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc55)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc103)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc57)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc57)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc55)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc120)
    cir.store %10, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc120)
    cir.br ^bb3 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc125)
    cir.brcond %13 ^bb4, ^bb9 loc(#loc64)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc66)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc64)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #true loc(#loc64)
    cir.br ^bb7(%17 : !cir.bool) loc(#loc64)
  ^bb6:  // pred: ^bb4
    %18 = cir.const #false loc(#loc64)
    cir.br ^bb7(%18 : !cir.bool) loc(#loc64)
  ^bb7(%19: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:23)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc64)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%19 : !cir.bool) loc(#loc64)
  ^bb9:  // pred: ^bb3
    %20 = cir.const #false loc(#loc64)
    cir.br ^bb10(%20 : !cir.bool) loc(#loc64)
  ^bb10(%21: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc64)
  ^bb11:  // pred: ^bb10
    cir.brcond %21 ^bb12, ^bb13 loc(#loc127)
  ^bb12:  // pred: ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc72)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc72)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc73)
    cir.br ^bb14 loc(#loc69)
  ^bb13:  // pred: ^bb11
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc43)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb14 loc(#loc61)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc61)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc45)
  } loc(#loc118)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc130)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc82)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<7> : !s32i loc(#loc86)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc130)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc130)
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc136)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc98)
    %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc98)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc99)
    cir.br ^bb6 loc(#loc95)
  ^bb5:  // pred: ^bb3
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc100)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb6 loc(#loc91)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc76)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":30:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":43:23)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":22:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":46:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":24:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":24:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":34:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":34:30)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":26:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":26:12)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":26:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":27:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":27:10)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":30:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":30:12)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":31:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":31:10)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":37:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":44:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":37:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":37:21)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":38:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":40:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":42:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":39:33)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":39:26)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":39:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":43:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":106:1)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":110:1)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":108:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":108:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":109:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":109:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":73:23)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":53:1)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":76:1)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":55:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":55:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":65:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":65:30)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":57:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":57:12)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":57:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":58:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":58:10)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":61:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":61:12)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":61:19)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":62:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":62:10)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":74:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:21)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:26)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:34)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":67:36)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":68:9)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":70:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":72:9)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":69:33)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":69:26)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":69:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":73:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":79:1)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":104:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":81:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":81:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":92:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":92:30)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":83:13)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":83:12)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":83:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":84:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":84:10)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":88:12)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":88:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":89:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":89:10)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":95:9)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":102:9)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":95:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":95:21)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":96:9)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":98:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":100:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":97:33)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":97:26)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":97:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":101:23)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_18.c":101:13)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc6, #loc7])
#loc105 = loc(fused[#loc8, #loc9])
#loc106 = loc(fused[#loc11, #loc12])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc19, #loc17])
#loc110 = loc(fused[#loc20, #loc21])
#loc111 = loc(fused[#loc24, #loc25])
#loc112 = loc(fused[#loc26, #loc27])
#loc113 = loc(fused[#loc28, #loc29])
#loc114 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc115 = loc(fused[#loc37, #loc38])
#loc116 = loc(fused[#loc39, #loc40])
#loc117 = loc(fused[#loc41, #loc42])
#loc118 = loc(fused[#loc44, #loc45])
#loc119 = loc(fused[#loc46, #loc47])
#loc120 = loc(fused[#loc48, #loc49])
#loc121 = loc(fused[#loc52, #loc50])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc58, #loc59])
#loc124 = loc(fused[#loc60, #loc61])
#loc125 = loc(fused[#loc62, #loc63])
#loc126 = loc(fused[#loc65, #loc67])
#loc127 = loc(fused[#loc68, #loc69, #loc70, #loc61])
#loc128 = loc(fused[#loc75, #loc76])
#loc129 = loc(fused[#loc77, #loc78])
#loc130 = loc(fused[#loc79, #loc80])
#loc131 = loc(fused[#loc83, #loc81])
#loc132 = loc(fused[#loc84, #loc85])
#loc133 = loc(fused[#loc87, #loc86])
#loc134 = loc(fused[#loc88, #loc89])
#loc135 = loc(fused[#loc90, #loc91])
#loc136 = loc(fused[#loc92, #loc93])
#loc137 = loc(fused[#loc94, #loc95, #loc96, #loc91])
