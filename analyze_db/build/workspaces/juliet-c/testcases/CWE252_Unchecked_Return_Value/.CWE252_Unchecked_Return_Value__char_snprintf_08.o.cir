!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc103)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc13)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc104)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc105)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc100)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc100)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc18)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc20)
    %11 = cir.const #cir.int<6> : !u64i loc(#loc106)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc107)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc23)
    %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc108)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc12)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc12)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc99)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc110)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc111)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc109)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc31)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.return %2 : !s32i loc(#loc113)
  } loc(#loc112)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc119)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc46)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb10 loc(#loc49)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc116)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc116)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.br ^bb5 loc(#loc122)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc56)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc58)
    %13 = cir.const #cir.int<6> : !u64i loc(#loc123)
    %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc124)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc61)
    %17 = cir.binop(sub, %14, %16) : !u64i loc(#loc125)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc62)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc62)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc63)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc63)
    %22 = cir.call @snprintf(%10, %17, %19, %21) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc56)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %24 ^bb6, ^bb7 loc(#loc127)
  ^bb6:  // pred: ^bb5
    %25 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb7 loc(#loc55)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc55)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc53)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc45)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc39)
  } loc(#loc115)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.return %2 : !s32i loc(#loc129)
  } loc(#loc128)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc134)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc79)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc135)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb4 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc86)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc88)
    %11 = cir.const #cir.int<6> : !u64i loc(#loc138)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc139)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc91)
    %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc140)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc92)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc92)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc93)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc93)
    %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc86)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc141)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %23 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc78)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc72)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:46)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:54)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":45:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":58:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":52:13)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":52:36)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":53:13)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":53:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":47:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":57:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":47:8)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":47:26)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":48:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":49:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":56:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:22)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:27)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:31)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:41)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:43)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":107:1)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":111:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":109:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":109:11)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":110:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":110:11)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":33:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":36:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":35:12)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":35:5)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":70:19)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":82:27)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":65:1)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":86:1)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":77:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":77:36)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":78:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":78:27)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":67:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":85:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":67:8)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":67:27)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":68:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":71:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":73:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":70:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":74:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":84:9)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":83:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:17)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:26)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:31)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:35)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:45)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:47)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:50)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:58)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:65)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":81:13)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":82:17)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":38:1)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":41:1)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":40:12)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":40:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":89:1)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":105:1)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":96:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":96:36)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":97:13)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":97:27)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":91:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":104:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":91:8)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":91:26)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":92:5)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":93:9)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":103:9)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":102:13)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:17)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:26)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:31)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:35)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:45)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:47)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:50)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:58)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:65)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":100:13)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":101:27)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":101:17)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc11, #loc12])
#loc103 = loc(fused[#loc13, #loc14])
#loc104 = loc(fused[#loc15, #loc12])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc21, #loc22])
#loc107 = loc(fused[#loc20, #loc22])
#loc108 = loc(fused[#loc20, #loc23])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc30, #loc31])
#loc113 = loc(fused[#loc33, #loc32])
#loc114 = loc(fused[#loc34, #loc35])
#loc115 = loc(fused[#loc38, #loc39])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc44, #loc45])
#loc119 = loc(fused[#loc46, #loc47])
#loc120 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc121 = loc(fused[#loc52, #loc53])
#loc122 = loc(fused[#loc54, #loc55])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc58, #loc60])
#loc125 = loc(fused[#loc58, #loc61])
#loc126 = loc(fused[#loc56, #loc64])
#loc127 = loc(fused[#loc65, #loc55])
#loc128 = loc(fused[#loc67, #loc68])
#loc129 = loc(fused[#loc70, #loc69])
#loc130 = loc(fused[#loc71, #loc72])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc81, #loc78])
#loc136 = loc(fused[#loc82, #loc83])
#loc137 = loc(fused[#loc84, #loc85])
#loc138 = loc(fused[#loc89, #loc90])
#loc139 = loc(fused[#loc88, #loc90])
#loc140 = loc(fused[#loc88, #loc91])
#loc141 = loc(fused[#loc86, #loc94])
#loc142 = loc(fused[#loc95, #loc85])
