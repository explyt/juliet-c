!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc52)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc53)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc56)
    cir.goto "sink" loc(#loc57)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc13)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc55)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc55)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    %4 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc14)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc59)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc53)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %14 = cir.call @fread(%6, %7, %11, %13) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc54)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc61)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc23)
  } loc(#loc60)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc64)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc65)
    cir.goto "sink" loc(#loc66)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc37)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc64)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc64)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    cir.scope {
      %4 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc40)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
      %7 = cir.const #cir.int<1> : !u64i loc(#loc69)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc45)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc45)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc45)
      %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc53)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
      %14 = cir.call @fread(%6, %7, %11, %13) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc40)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc48)
      %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc48)
      %19 = cir.cmp(ne, %14, %18) : !u64i, !cir.bool loc(#loc70)
      cir.if %19 {
        %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc28)
        %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
        cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } loc(#loc71)
    } loc(#loc67)
    cir.return loc(#loc30)
  } loc(#loc63)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":738:1)
#loc2 = loc("/usr/include/stdio.h":740:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":24:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":36:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":31:9)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":31:32)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":32:9)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":32:23)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":26:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":26:10)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":27:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:23)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:15)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:29)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:40)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:52)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:56)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":34:60)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":60:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":63:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":62:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":62:11)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":55:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":43:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":58:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":50:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":50:32)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":51:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":51:23)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":45:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":45:10)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":46:1)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":56:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:27)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:19)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:33)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:44)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:56)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:60)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:64)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:74)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":53:78)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":54:9)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_18.c":55:13)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc3, #loc4])
#loc54 = loc(fused[#loc5, #loc6])
#loc55 = loc(fused[#loc7, #loc8])
#loc56 = loc(fused[#loc9, #loc10])
#loc57 = loc(fused[#loc11, #loc12])
#loc58 = loc(fused[#loc16, #loc15])
#loc59 = loc(fused[#loc17, #loc18])
#loc60 = loc(fused[#loc22, #loc23])
#loc61 = loc(fused[#loc24, #loc25])
#loc62 = loc(fused[#loc26, #loc27])
#loc63 = loc(fused[#loc29, #loc30])
#loc64 = loc(fused[#loc31, #loc32])
#loc65 = loc(fused[#loc33, #loc34])
#loc66 = loc(fused[#loc35, #loc36])
#loc67 = loc(fused[#loc38, #loc39])
#loc68 = loc(fused[#loc42, #loc41])
#loc69 = loc(fused[#loc43, #loc44])
#loc70 = loc(fused[#loc40, #loc49])
#loc71 = loc(fused[#loc50, #loc39])
