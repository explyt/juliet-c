!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":87:10)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":87:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":87:20)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":87:32)
#loc164 = loc(fused[#loc70, #loc71])
#loc165 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc143)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc15)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc19)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    cir.scope {
      %17 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc148)
      %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc149)
      %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc150)
      %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc148)
      cir.store %20, %17 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc148)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
      cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc151)
      cir.scope {
        %32 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc37)
        cir.store %33, %18 : !u64i, !cir.ptr<!u64i> loc(#loc153)
        cir.for : cond {
          %34 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc39)
          %35 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %36 = cir.cmp(lt, %34, %35) : !u64i, !cir.bool loc(#loc154)
          cir.condition(%36) loc(#loc41)
        } body {
          cir.scope {
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
            %35 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc45)
            %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc43)
            %38 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %39 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc47)
            %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc47)
            cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc156)
          } loc(#loc155)
          cir.yield loc(#loc36)
        } step {
          %34 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc49)
          cir.store %35, %18 : !u64i, !cir.ptr<!u64i> loc(#loc157)
          cir.yield loc(#loc152)
        } loc(#loc152)
      } loc(#loc152)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc50)
      %26 = cir.const #cir.int<50> : !s32i loc(#loc51)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc51)
      %29 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc53)
      %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc53)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc158)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    } loc(#loc147)
    cir.return loc(#loc6)
  } loc(#loc141)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc159)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %17 : !s32i loc(#loc168)
  } loc(#loc163)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc171)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc97)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc102)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc104)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.scope {
      %17 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc176)
      %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
      %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc178)
      %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc176)
      cir.store %20, %17 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc176)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc114)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc114)
      cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc179)
      cir.scope {
        %32 = cir.const #cir.int<0> : !s32i loc(#loc120)
        %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc120)
        cir.store %33, %18 : !u64i, !cir.ptr<!u64i> loc(#loc181)
        cir.for : cond {
          %34 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc122)
          %35 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc123)
          %36 = cir.cmp(lt, %34, %35) : !u64i, !cir.bool loc(#loc182)
          cir.condition(%36) loc(#loc124)
        } body {
          cir.scope {
            %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
            %35 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc127)
            %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc128)
            %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc126)
            %38 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc129)
            %39 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc130)
            %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc130)
            cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc184)
          } loc(#loc183)
          cir.yield loc(#loc119)
        } step {
          %34 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc131)
          %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc132)
          cir.store %35, %18 : !u64i, !cir.ptr<!u64i> loc(#loc185)
          cir.yield loc(#loc180)
        } loc(#loc180)
      } loc(#loc180)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc133)
      %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc133)
      %26 = cir.const #cir.int<50> : !s32i loc(#loc134)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc134)
      %29 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc136)
      %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc136)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    } loc(#loc175)
    cir.return loc(#loc89)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":43:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":26:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":27:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":29:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":29:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":29:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":29:27)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":29:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":29:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":30:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":30:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":30:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":30:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":30:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":31:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":42:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":32:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":32:25)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":33:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":33:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":33:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":34:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":34:26)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":34:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":34:30)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":39:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:18)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:14)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:21)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:25)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:23)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":37:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":38:23)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":38:28)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":38:29)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":38:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":38:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":36:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":40:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":40:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":40:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":40:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":41:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":41:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":72:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":75:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":74:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":74:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":92:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":94:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":97:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":99:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":87:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":102:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":88:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":90:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":90:22)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":90:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":92:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":93:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":93:74)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":94:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":97:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":98:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":98:73)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":99:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":101:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":101:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":50:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":70:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":52:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":52:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":53:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":53:24)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":54:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":54:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":56:12)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":56:18)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":56:23)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":56:26)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":56:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":56:27)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":57:18)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":57:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":57:10)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":57:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":57:14)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":58:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":69:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":59:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":59:25)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":60:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":60:16)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":60:19)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":61:19)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":61:26)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":61:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":61:30)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":66:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:18)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:14)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:21)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:25)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:23)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":64:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":65:23)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":65:28)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":65:29)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":65:18)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":65:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:35)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":63:34)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":67:22)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":67:14)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":67:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":67:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":68:19)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_01.c":68:9)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc12, #loc11])
#loc145 = loc(fused[#loc17, #loc18])
#loc146 = loc(fused[#loc20, #loc19])
#loc147 = loc(fused[#loc24, #loc25])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc28, #loc30])
#loc151 = loc(fused[#loc33, #loc34])
#loc152 = loc(fused[#loc35, #loc36])
#loc153 = loc(fused[#loc38, #loc37])
#loc154 = loc(fused[#loc39, #loc40])
#loc155 = loc(fused[#loc42, #loc36])
#loc156 = loc(fused[#loc47, #loc45])
#loc157 = loc(fused[#loc49, #loc48])
#loc158 = loc(fused[#loc53, #loc50])
#loc159 = loc(fused[#loc56, #loc57])
#loc160 = loc(fused[#loc58, #loc59])
#loc161 = loc(fused[#loc60, #loc61])
#loc162 = loc(fused[#loc62, #loc63])
#loc163 = loc(fused[#loc68, #loc69])
#loc166 = loc(fused[#loc79, #loc80])
#loc167 = loc(fused[#loc83, #loc84])
#loc168 = loc(fused[#loc87, #loc86])
#loc169 = loc(fused[#loc88, #loc89])
#loc170 = loc(fused[#loc90, #loc91])
#loc171 = loc(fused[#loc92, #loc93])
#loc172 = loc(fused[#loc95, #loc94])
#loc173 = loc(fused[#loc100, #loc101])
#loc174 = loc(fused[#loc103, #loc102])
#loc175 = loc(fused[#loc107, #loc108])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc111, #loc113])
#loc179 = loc(fused[#loc116, #loc117])
#loc180 = loc(fused[#loc118, #loc119])
#loc181 = loc(fused[#loc121, #loc120])
#loc182 = loc(fused[#loc122, #loc123])
#loc183 = loc(fused[#loc125, #loc119])
#loc184 = loc(fused[#loc130, #loc128])
#loc185 = loc(fused[#loc132, #loc131])
#loc186 = loc(fused[#loc136, #loc133])
