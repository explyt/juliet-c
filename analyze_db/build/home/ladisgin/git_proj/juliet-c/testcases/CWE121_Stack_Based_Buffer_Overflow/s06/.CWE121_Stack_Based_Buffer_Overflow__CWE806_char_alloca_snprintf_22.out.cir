!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":26:85)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":26:92)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":46:90)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":46:97)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":63:90)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":63:97)
#loc81 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc32, #loc33])
#loc98 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc79)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_badGlobal : !cir.ptr<!s32i> loc(#loc79)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc83)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc13)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc14)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc14)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc84)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc18)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc20)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc85)
    cir.br ^bb3 loc(#loc9)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc9)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc86)
  } loc(#loc80)
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc32, #loc33])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc31)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc87)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc92)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb4 loc(#loc39)
  ^bb3:  // pred: ^bb1
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc43)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc44)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc44)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc44)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc93)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc48)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc50)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc50)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc94)
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc36)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.return %22 : !cir.ptr<!s8i> loc(#loc95)
  } loc(#loc89)
  cir.global "private" external @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc96)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc59, #loc60])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc58)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc96)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc100)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc67)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc68)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc68)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc68)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc101)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc72)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc74)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc74)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc102)
    cir.br ^bb3 loc(#loc63)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc103)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":24:12)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":35:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":27:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":28:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":33:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":28:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":29:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":31:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":31:22)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":31:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":31:31)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":31:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":31:32)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":32:23)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":32:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":32:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":32:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":32:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":34:12)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":34:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":42:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":42:12)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":51:19)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":46:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":60:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":47:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":48:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":58:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":48:8)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":49:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":52:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":54:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":51:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":56:16)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":56:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":56:27)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":56:30)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":56:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":56:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":57:22)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":57:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":57:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":57:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":57:18)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":59:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":59:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":43:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":43:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":63:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":72:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":64:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":65:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":70:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":65:8)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":66:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":68:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":68:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":68:27)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":68:30)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":68:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":68:31)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":69:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":69:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":69:17)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":69:18)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":71:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_22b.c":71:5)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc8, #loc9])
#loc83 = loc(fused[#loc11, #loc9])
#loc84 = loc(fused[#loc16, #loc17])
#loc85 = loc(fused[#loc19, #loc18])
#loc86 = loc(fused[#loc24, #loc23])
#loc87 = loc(fused[#loc25, #loc26])
#loc88 = loc(fused[#loc27, #loc28])
#loc89 = loc(fused[#loc30, #loc31])
#loc91 = loc(fused[#loc35, #loc36])
#loc92 = loc(fused[#loc38, #loc39, #loc40, #loc36])
#loc93 = loc(fused[#loc46, #loc47])
#loc94 = loc(fused[#loc49, #loc48])
#loc95 = loc(fused[#loc54, #loc53])
#loc96 = loc(fused[#loc55, #loc56])
#loc97 = loc(fused[#loc57, #loc58])
#loc99 = loc(fused[#loc62, #loc63])
#loc100 = loc(fused[#loc65, #loc63])
#loc101 = loc(fused[#loc70, #loc71])
#loc102 = loc(fused[#loc73, #loc72])
#loc103 = loc(fused[#loc78, #loc77])
