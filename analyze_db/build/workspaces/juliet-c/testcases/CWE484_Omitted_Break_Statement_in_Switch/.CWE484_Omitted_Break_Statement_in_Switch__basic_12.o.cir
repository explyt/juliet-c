!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc117)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"1\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc8)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"2\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Invalid Number\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc124)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc124)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb15 loc(#loc125)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc27)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc127)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb4 loc(#loc128)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // pred: ^bb4
    cir.switch.flat %9 : !s32i, ^bb11 [
      0: ^bb7,
      1: ^bb9,
      2: ^bb10
    ] loc(#loc28)
  ^bb6:  // no predecessors
    cir.br ^bb7 loc(#loc31)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.br ^bb8 loc(#loc31)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc8)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb12 loc(#loc35)
  ^bb10:  // pred: ^bb5
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc9)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb12 loc(#loc37)
  ^bb11:  // pred: ^bb5
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc10)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb12 loc(#loc39)
  ^bb12:  // 3 preds: ^bb9, ^bb10, ^bb11
    cir.br ^bb13 loc(#loc29)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // pred: ^bb13
    cir.br ^bb27 loc(#loc22)
  ^bb15:  // pred: ^bb1
    cir.br ^bb16 loc(#loc129)
  ^bb16:  // pred: ^bb15
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc42)
    %19 = cir.const #cir.int<3> : !s32i loc(#loc43)
    %20 = cir.binop(rem, %18, %19) : !s32i loc(#loc130)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.br ^bb17 loc(#loc131)
  ^bb17:  // pred: ^bb16
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.br ^bb18 loc(#loc44)
  ^bb18:  // pred: ^bb17
    cir.switch.flat %21 : !s32i, ^bb23 [
      0: ^bb20,
      1: ^bb21,
      2: ^bb22
    ] loc(#loc44)
  ^bb19:  // no predecessors
    cir.br ^bb20 loc(#loc47)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc48)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb24 loc(#loc50)
  ^bb21:  // pred: ^bb18
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc51)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb24 loc(#loc53)
  ^bb22:  // pred: ^bb18
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc54)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb24 loc(#loc56)
  ^bb23:  // pred: ^bb18
    %28 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc57)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb24 loc(#loc59)
  ^bb24:  // 4 preds: ^bb20, ^bb21, ^bb22, ^bb23
    cir.br ^bb25 loc(#loc45)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc41)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc18)
  ^bb27:  // 2 preds: ^bb14, ^bb26
    cir.br ^bb28 loc(#loc18)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc12)
  } loc(#loc120)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc132)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc138)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc138)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc72)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %5 ^bb2, ^bb14 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc79)
    %7 = cir.const #cir.int<3> : !s32i loc(#loc80)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc141)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // pred: ^bb4
    cir.switch.flat %9 : !s32i, ^bb10 [
      0: ^bb7,
      1: ^bb8,
      2: ^bb9
    ] loc(#loc81)
  ^bb6:  // no predecessors
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc85)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb11 loc(#loc87)
  ^bb8:  // pred: ^bb5
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc88)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb11 loc(#loc90)
  ^bb9:  // pred: ^bb5
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc91)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb11 loc(#loc93)
  ^bb10:  // pred: ^bb5
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc94)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb11 loc(#loc96)
  ^bb11:  // 4 preds: ^bb7, ^bb8, ^bb9, ^bb10
    cir.br ^bb12 loc(#loc82)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    cir.br ^bb26 loc(#loc75)
  ^bb14:  // pred: ^bb1
    cir.br ^bb15 loc(#loc143)
  ^bb15:  // pred: ^bb14
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc99)
    %19 = cir.const #cir.int<3> : !s32i loc(#loc100)
    %20 = cir.binop(rem, %18, %19) : !s32i loc(#loc144)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.br ^bb17 loc(#loc101)
  ^bb17:  // pred: ^bb16
    cir.switch.flat %21 : !s32i, ^bb22 [
      0: ^bb19,
      1: ^bb20,
      2: ^bb21
    ] loc(#loc101)
  ^bb18:  // no predecessors
    cir.br ^bb19 loc(#loc104)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc105)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb23 loc(#loc107)
  ^bb20:  // pred: ^bb17
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc108)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb23 loc(#loc110)
  ^bb21:  // pred: ^bb17
    %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc111)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb23 loc(#loc113)
  ^bb22:  // pred: ^bb17
    %28 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb23 loc(#loc116)
  ^bb23:  // 4 preds: ^bb19, ^bb20, ^bb21, ^bb22
    cir.br ^bb24 loc(#loc102)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc98)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc71)
  ^bb26:  // 2 preds: ^bb13, ^bb25
    cir.br ^bb27 loc(#loc71)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc65)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":30:27)
#loc8 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":32:27)
#loc9 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":35:27)
#loc10 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":38:27)
#loc11 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":20:1)
#loc12 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":66:1)
#loc13 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":25:13)
#loc14 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":25:32)
#loc15 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":46:13)
#loc16 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":46:32)
#loc17 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":22:5)
#loc18 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":65:5)
#loc19 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":22:8)
#loc20 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":22:33)
#loc21 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":23:5)
#loc22 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":42:5)
#loc23 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":44:5)
#loc24 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":24:9)
#loc25 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":41:9)
#loc26 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":25:22)
#loc27 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":25:31)
#loc28 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":27:13)
#loc29 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":40:13)
#loc30 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":27:21)
#loc31 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":29:13)
#loc32 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":30:17)
#loc33 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":31:13)
#loc34 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":32:17)
#loc35 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":33:17)
#loc36 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":35:17)
#loc37 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":36:17)
#loc38 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":38:17)
#loc39 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":39:17)
#loc40 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":45:9)
#loc41 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":64:9)
#loc42 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":46:22)
#loc43 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":46:31)
#loc44 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":49:13)
#loc45 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":63:13)
#loc46 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":49:21)
#loc47 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":51:13)
#loc48 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":52:27)
#loc49 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":52:17)
#loc50 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":53:17)
#loc51 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":55:27)
#loc52 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":55:17)
#loc53 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":56:17)
#loc54 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":58:27)
#loc55 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":58:17)
#loc56 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":59:17)
#loc57 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":61:27)
#loc58 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":61:17)
#loc59 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":62:17)
#loc60 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":123:1)
#loc61 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":126:1)
#loc62 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":125:5)
#loc63 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":125:11)
#loc64 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":73:1)
#loc65 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":121:1)
#loc66 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":78:13)
#loc67 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":78:32)
#loc68 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":101:13)
#loc69 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":101:32)
#loc70 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":75:5)
#loc71 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":120:5)
#loc72 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":75:8)
#loc73 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":75:33)
#loc74 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":76:5)
#loc75 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":97:5)
#loc76 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":99:5)
#loc77 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":77:9)
#loc78 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":96:9)
#loc79 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":78:22)
#loc80 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":78:31)
#loc81 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":81:13)
#loc82 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":95:13)
#loc83 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":81:21)
#loc84 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":83:13)
#loc85 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":84:27)
#loc86 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":84:17)
#loc87 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":85:17)
#loc88 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":87:27)
#loc89 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":87:17)
#loc90 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":88:17)
#loc91 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":90:27)
#loc92 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":90:17)
#loc93 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":91:17)
#loc94 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":93:27)
#loc95 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":93:17)
#loc96 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":94:17)
#loc97 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":100:9)
#loc98 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":119:9)
#loc99 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":101:22)
#loc100 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":101:31)
#loc101 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":104:13)
#loc102 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":118:13)
#loc103 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":104:21)
#loc104 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":106:13)
#loc105 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":107:27)
#loc106 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":107:17)
#loc107 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":108:17)
#loc108 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":110:27)
#loc109 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":110:17)
#loc110 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":111:17)
#loc111 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":113:27)
#loc112 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":113:17)
#loc113 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":114:17)
#loc114 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":116:27)
#loc115 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":116:17)
#loc116 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_12.c":117:17)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc15, #loc16])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc19, #loc20])
#loc125 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc126 = loc(fused[#loc24, #loc25])
#loc127 = loc(fused[#loc26, #loc27])
#loc128 = loc(fused[#loc28, #loc29])
#loc129 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc42, #loc43])
#loc131 = loc(fused[#loc44, #loc45])
#loc132 = loc(fused[#loc60, #loc61])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc66, #loc67])
#loc136 = loc(fused[#loc68, #loc69])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc72, #loc73])
#loc139 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc140 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc79, #loc80])
#loc142 = loc(fused[#loc81, #loc82])
#loc143 = loc(fused[#loc97, #loc98])
#loc144 = loc(fused[#loc99, #loc100])
#loc145 = loc(fused[#loc101, #loc102])
