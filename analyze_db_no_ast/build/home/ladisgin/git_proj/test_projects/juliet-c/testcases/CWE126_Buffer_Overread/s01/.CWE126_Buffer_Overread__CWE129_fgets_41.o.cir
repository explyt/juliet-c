!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":24:21)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":24:25)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":96:25)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":96:29)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":67:25)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":67:29)
#true = #cir.bool<true> : !cir.bool
#loc165 = loc(fused[#loc15, #loc16])
#loc184 = loc(fused[#loc72, #loc73])
#loc201 = loc(fused[#loc128, #loc129])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc159)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc160)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc161)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc163)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc167)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc167)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc167)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc169)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc31)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc31)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc32)
        } else {
          %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        } loc(#loc170)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc14)
  } loc(#loc164)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc39)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc175)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc175)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc175)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc48)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc48)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc48)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc48)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc48)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc48)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc48)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc48)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc160)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc50)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc177)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc52)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc56)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc57)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc60)
        } loc(#loc178)
      } loc(#loc176)
    } loc(#loc174)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc62)
    cir.return loc(#loc35)
  } loc(#loc171)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc180)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc69)
  cir.func internal private  @goodB2GSink(%arg0: !s32i loc(fused[#loc72, #loc73])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc184)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc186)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc186)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc186)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc188)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc83)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc86)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc189)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc88)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc84)
            cir.yield %13 : !cir.bool loc(#loc84)
          }, false {
            %13 = cir.const #false loc(#loc84)
            cir.yield %13 : !cir.bool loc(#loc84)
          }) : (!cir.bool) -> !cir.bool loc(#loc84)
          cir.yield %12 : !cir.bool loc(#loc84)
        }, false {
          %8 = cir.const #false loc(#loc84)
          cir.yield %8 : !cir.bool loc(#loc84)
        }) : (!cir.bool) -> !cir.bool loc(#loc84)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
          %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc93)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc93)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc93)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc94)
        } else {
          %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc69)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc95)
        } loc(#loc190)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc71)
  } loc(#loc183)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc101)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc195)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc195)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc195)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc110)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc110)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc110)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc110)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc110)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc110)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc110)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc110)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc160)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc111)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc112)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc197)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc114)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc122)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc123)
        } loc(#loc198)
      } loc(#loc196)
    } loc(#loc194)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc125)
    cir.return loc(#loc97)
  } loc(#loc191)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc128, #loc129])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc201)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc203)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc203)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc203)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc138)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !s32i loc(#loc205)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc139)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc144)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc144)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc145)
        } else {
          %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc146)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc146)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc147)
        } loc(#loc206)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc127)
  } loc(#loc200)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc153)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc155)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc158)
    cir.return loc(#loc149)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":56:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":36:23)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":39:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":25:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":38:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":27:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":27:30)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":30:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":37:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":30:13)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":30:21)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":30:18)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":31:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":33:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":35:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":32:33)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":32:26)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":32:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":36:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":41:1)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":60:1)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":43:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":43:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":45:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":45:12)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":45:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":46:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":58:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":47:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":47:45)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":57:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:19)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:32)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:49)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:59)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":49:56)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":50:9)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":53:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":55:9)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":52:25)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":52:20)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":52:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":52:36)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":56:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":59:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":59:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":133:1)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":137:1)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":135:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":135:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":136:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":136:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":107:23)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":96:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":110:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":97:1)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":98:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":109:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":99:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":99:30)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":108:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:13)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:21)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:18)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:23)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:26)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:34)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:36)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":101:31)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":102:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":104:9)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":106:9)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":103:33)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":103:26)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":103:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":107:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":112:1)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":131:1)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":114:5)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":114:9)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":116:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":116:12)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":116:5)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":117:5)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":129:5)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":118:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":118:45)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:9)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":128:9)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:19)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:32)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:49)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:59)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":120:56)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":121:9)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":124:9)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":126:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":123:25)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":123:20)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":123:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":123:36)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":127:23)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":127:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":130:17)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":130:5)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":67:1)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":82:1)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":68:1)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":69:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":81:5)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":70:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":70:30)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":73:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":80:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":73:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":73:21)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":73:18)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":74:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":76:9)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":78:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":75:33)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":75:26)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":75:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":79:23)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":79:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":84:1)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":93:1)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":86:5)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":86:9)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":88:13)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":88:12)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":88:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":91:12)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":91:5)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":92:17)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_41.c":92:5)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc10, #loc11])
#loc164 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc20, #loc21])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc27, #loc28, #loc29, #loc23])
#loc171 = loc(fused[#loc34, #loc35])
#loc172 = loc(fused[#loc36, #loc37])
#loc173 = loc(fused[#loc40, #loc38])
#loc174 = loc(fused[#loc41, #loc42])
#loc175 = loc(fused[#loc43, #loc44])
#loc176 = loc(fused[#loc45, #loc46])
#loc177 = loc(fused[#loc50, #loc51])
#loc178 = loc(fused[#loc53, #loc54, #loc55, #loc46])
#loc179 = loc(fused[#loc58, #loc59])
#loc180 = loc(fused[#loc63, #loc64])
#loc181 = loc(fused[#loc65, #loc66])
#loc182 = loc(fused[#loc67, #loc68])
#loc183 = loc(fused[#loc70, #loc71])
#loc185 = loc(fused[#loc75, #loc76])
#loc186 = loc(fused[#loc77, #loc78])
#loc187 = loc(fused[#loc79, #loc80])
#loc188 = loc(fused[#loc81, #loc82])
#loc189 = loc(fused[#loc85, #loc87])
#loc190 = loc(fused[#loc89, #loc90, #loc91, #loc80])
#loc191 = loc(fused[#loc96, #loc97])
#loc192 = loc(fused[#loc98, #loc99])
#loc193 = loc(fused[#loc102, #loc100])
#loc194 = loc(fused[#loc103, #loc104])
#loc195 = loc(fused[#loc105, #loc106])
#loc196 = loc(fused[#loc107, #loc108])
#loc197 = loc(fused[#loc112, #loc113])
#loc198 = loc(fused[#loc115, #loc116, #loc117, #loc108])
#loc199 = loc(fused[#loc120, #loc121])
#loc200 = loc(fused[#loc126, #loc127])
#loc202 = loc(fused[#loc131, #loc132])
#loc203 = loc(fused[#loc133, #loc134])
#loc204 = loc(fused[#loc135, #loc136])
#loc205 = loc(fused[#loc137, #loc138])
#loc206 = loc(fused[#loc140, #loc141, #loc142, #loc136])
#loc207 = loc(fused[#loc148, #loc149])
#loc208 = loc(fused[#loc150, #loc151])
#loc209 = loc(fused[#loc154, #loc152])
#loc210 = loc(fused[#loc156, #loc155])
