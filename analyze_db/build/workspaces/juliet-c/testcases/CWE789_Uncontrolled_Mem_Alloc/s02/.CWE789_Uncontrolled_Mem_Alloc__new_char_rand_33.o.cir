!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc135)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc136)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc141)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc16)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc17)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc19)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc143)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc145)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc25)
      %8 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc25)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc145)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc147)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc149)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc150)
          cir.if %12 {
            %13 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc39)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
            cir.store %15, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc43)
            %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
            %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc46)
            %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
            cir.delete.array %22 : <!s8i> loc(#loc47)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc48)
          } loc(#loc151)
        } loc(#loc148)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc12)
  } loc(#loc139)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc156)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc54)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc55)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc57)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc57)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc160)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc62)
      %8 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc62)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc160)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc162)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc164)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc165)
          cir.if %12 {
            %13 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc75)
            %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc76)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
            cir.store %15, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc80)
            %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
            %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc82)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc82)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc80)
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc84)
            %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
            cir.delete.array %22 : <!s8i> loc(#loc85)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc86)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc86)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          } loc(#loc166)
        } loc(#loc163)
      } loc(#loc161)
    } loc(#loc159)
    cir.return loc(#loc50)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc88)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc171)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc94)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc95)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc97)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc175)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc103)
      %8 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc103)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc175)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc177)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc110)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc179)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc180)
          %13 = cir.ternary(%12, true {
            %14 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc114)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc115)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc115)
            %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc181)
            %18 = cir.ternary(%17, true {
              %19 = cir.const #true loc(#loc113)
              cir.yield %19 : !cir.bool loc(#loc113)
            }, false {
              %19 = cir.const #false loc(#loc113)
              cir.yield %19 : !cir.bool loc(#loc113)
            }) : (!cir.bool) -> !cir.bool loc(#loc113)
            cir.yield %18 : !cir.bool loc(#loc113)
          }, false {
            %14 = cir.const #false loc(#loc113)
            cir.yield %14 : !cir.bool loc(#loc113)
          }) : (!cir.bool) -> !cir.bool loc(#loc113)
          cir.if %13 {
            %14 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
            cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
            %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc124)
            %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc126)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc126)
            %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
            %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc128)
            %23 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
            cir.delete.array %23 : <!s8i> loc(#loc129)
          } else {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc88)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc88)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          } loc(#loc182)
        } loc(#loc178)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc90)
  } loc(#loc169)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33L7goodG2BEv() : () -> () loc(#loc133)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33L7goodB2GEv() : () -> () loc(#loc134)
    cir.return loc(#loc132)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":50:34)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":56:27)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":31:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":60:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":33:5)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":33:12)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":34:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":34:23)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":36:12)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":36:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":38:12)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":38:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":38:17)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":39:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":59:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":40:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":40:23)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":41:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":58:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":42:13)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":42:20)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":46:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":57:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":46:17)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":46:24)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":46:43)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":47:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":53:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":55:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":48:37)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":31:6)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":48:28)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":48:41)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":48:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":50:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":50:24)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":51:27)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":51:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":52:27)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":56:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":67:1)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":96:1)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":69:5)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":69:12)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":70:5)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":70:23)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":72:12)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":72:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":74:12)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":74:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":75:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":95:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":76:9)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":76:23)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":77:9)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":94:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":78:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":78:20)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":82:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":93:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":82:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":82:24)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":82:43)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":83:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":89:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":91:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":84:37)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":67:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":84:28)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":84:41)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":84:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":86:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":86:24)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":86:34)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":87:27)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":87:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":88:27)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":92:27)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":92:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":124:27)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":99:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":128:1)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":101:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":101:12)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":102:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":102:23)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":104:12)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":104:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":106:12)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":106:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":106:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":107:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":127:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":108:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":108:23)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":109:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":126:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":110:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":110:20)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":125:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:24)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:43)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:45)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:48)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":114:55)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":115:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":121:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":123:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":116:37)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":99:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":116:28)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":116:41)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":116:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":118:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":118:24)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":118:34)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":119:27)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":119:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":120:27)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":124:17)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":130:1)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":134:1)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":132:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_33.cpp":133:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc8, #loc9])
#loc139 = loc(fused[#loc11, #loc12])
#loc140 = loc(fused[#loc13, #loc14])
#loc141 = loc(fused[#loc15, #loc16])
#loc142 = loc(fused[#loc18, #loc17])
#loc143 = loc(fused[#loc20, #loc21])
#loc144 = loc(fused[#loc22, #loc23])
#loc145 = loc(fused[#loc24, #loc25])
#loc146 = loc(fused[#loc26, #loc27])
#loc147 = loc(fused[#loc28, #loc29])
#loc148 = loc(fused[#loc30, #loc31])
#loc149 = loc(fused[#loc33, #loc34])
#loc150 = loc(fused[#loc32, #loc34])
#loc151 = loc(fused[#loc35, #loc36, #loc37, #loc31])
#loc152 = loc(fused[#loc40, #loc41])
#loc153 = loc(fused[#loc42, #loc41])
#loc154 = loc(fused[#loc49, #loc50])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc56, #loc55])
#loc158 = loc(fused[#loc58, #loc57])
#loc159 = loc(fused[#loc59, #loc60])
#loc160 = loc(fused[#loc61, #loc62])
#loc161 = loc(fused[#loc63, #loc64])
#loc162 = loc(fused[#loc65, #loc66])
#loc163 = loc(fused[#loc67, #loc68])
#loc164 = loc(fused[#loc70, #loc71])
#loc165 = loc(fused[#loc69, #loc71])
#loc166 = loc(fused[#loc72, #loc73, #loc74, #loc68])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc79, #loc78])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc91, #loc92])
#loc171 = loc(fused[#loc93, #loc94])
#loc172 = loc(fused[#loc96, #loc95])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc102, #loc103])
#loc176 = loc(fused[#loc104, #loc105])
#loc177 = loc(fused[#loc106, #loc107])
#loc178 = loc(fused[#loc108, #loc109])
#loc179 = loc(fused[#loc111, #loc112])
#loc180 = loc(fused[#loc110, #loc112])
#loc181 = loc(fused[#loc114, #loc115])
#loc182 = loc(fused[#loc116, #loc117, #loc118, #loc109])
#loc183 = loc(fused[#loc121, #loc122])
#loc184 = loc(fused[#loc123, #loc122])
#loc185 = loc(fused[#loc131, #loc132])
