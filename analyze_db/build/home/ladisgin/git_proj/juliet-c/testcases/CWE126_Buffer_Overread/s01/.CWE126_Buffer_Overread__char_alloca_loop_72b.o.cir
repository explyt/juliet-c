!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:18)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:28)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":29:14)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":29:29)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":55:18)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":55:33)
#loc118 = loc(fused[#loc4, #loc5])
#loc123 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc70, #loc71])
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data = !cir.struct<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl = !cir.struct<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.struct<struct "std::_Vector_base<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.struct<class "std::vector<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZNSt6vectorIPcSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s8i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.return %11 : !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
  } loc(#loc117)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.func @_ZN43CWE126_Buffer_Overread__char_alloca_loop_727badSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc21, #loc22])) extra(#fn_attr2) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc126)
    %3 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc123)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    cir.store %arg0, %3 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc30)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc31)
    %7 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%3, %6) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc32)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %11 = cir.const #cir.int<67> : !s8i loc(#loc36)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc36)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc37)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc37)
    cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc129)
    %17 = cir.const #cir.int<0> : !s8i loc(#loc41)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc42)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
    %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc45)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc131)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %26 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc51)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc133)
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // 2 preds: ^bb2, ^bb5
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc134)
    cir.brcond %30 ^bb4, ^bb6 loc(#loc134)
  ^bb4:  // pred: ^bb3
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc57)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc55)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    cir.br ^bb5 loc(#loc50)
  ^bb5:  // pred: ^bb4
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc61)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc136)
    cir.br ^bb3 loc(#loc132)
  ^bb6:  // pred: ^bb3
    cir.br ^bb7 loc(#loc50)
  ^bb7:  // pred: ^bb6
    %40 = cir.const #cir.int<0> : !s8i loc(#loc62)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc63)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc65)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    %46 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc20)
  } loc(#loc122)
  cir.func @_ZN43CWE126_Buffer_Overread__char_alloca_loop_7211goodG2BSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc70, #loc71])) extra(#fn_attr2) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc142)
    %3 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc139)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    cir.store %arg0, %3 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc79)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc80)
    %7 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%3, %6) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc81)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %11 = cir.const #cir.int<67> : !s8i loc(#loc85)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc85)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc86)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc86)
    cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
    %17 = cir.const #cir.int<0> : !s8i loc(#loc90)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc91)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc94)
    %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc94)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc147)
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %26 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc100)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb2, ^bb5
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc150)
    cir.brcond %30 ^bb4, ^bb6 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc106)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc104)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc110)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb3 loc(#loc148)
  ^bb6:  // pred: ^bb3
    cir.br ^bb7 loc(#loc99)
  ^bb7:  // pred: ^bb6
    %40 = cir.const #cir.int<0> : !s8i loc(#loc111)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc112)
    %44 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    %46 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc69)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1127:7)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1132:7)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1129:7)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:11)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":373:20)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":93:10)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:25)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:36)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:34)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:2)
#loc14 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:39)
#loc15 = loc("/usr/include/string.h":407:1)
#loc16 = loc("/usr/include/string.h":408:33)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":29:1)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":48:1)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":34:9)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":34:16)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":34:19)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":35:9)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":35:22)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":32:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":32:31)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":30:1)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":32:30)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":32:19)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":33:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":47:5)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":36:16)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":36:22)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":36:27)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":36:31)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":36:9)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":36:32)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":37:23)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":37:14)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":37:18)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":37:9)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":38:19)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":38:26)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":38:9)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":38:30)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":44:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:18)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:14)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:21)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:25)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":43:23)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":43:28)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":43:29)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":43:18)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":43:13)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:35)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":41:34)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":45:23)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":45:14)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":45:18)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":45:9)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":46:19)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":46:9)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":55:1)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":73:1)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":59:9)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":59:16)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":59:19)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":60:9)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":60:22)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":57:5)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":57:31)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":56:1)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":57:30)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":57:19)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":58:5)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":72:5)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":61:16)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":61:22)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":61:27)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":61:31)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":61:9)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":61:32)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":62:23)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":62:14)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":62:18)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":62:9)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":63:19)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":63:26)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":63:9)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":63:30)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:9)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":69:9)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:18)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:14)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:21)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:25)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":68:23)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":68:28)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":68:29)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":68:18)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":68:13)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:35)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":66:34)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":70:23)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":70:14)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":70:18)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":70:9)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":71:19)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_72b.cpp":71:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc23, #loc24])
#loc125 = loc(fused[#loc23, #loc25])
#loc126 = loc(fused[#loc26, #loc27])
#loc127 = loc(fused[#loc28, #loc29])
#loc128 = loc(fused[#loc33, #loc34])
#loc129 = loc(fused[#loc39, #loc40])
#loc130 = loc(fused[#loc44, #loc41])
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc52, #loc51])
#loc134 = loc(fused[#loc53, #loc54])
#loc135 = loc(fused[#loc59, #loc57])
#loc136 = loc(fused[#loc61, #loc60])
#loc137 = loc(fused[#loc65, #loc62])
#loc138 = loc(fused[#loc68, #loc69])
#loc140 = loc(fused[#loc72, #loc73])
#loc141 = loc(fused[#loc72, #loc74])
#loc142 = loc(fused[#loc75, #loc76])
#loc143 = loc(fused[#loc77, #loc78])
#loc144 = loc(fused[#loc82, #loc83])
#loc145 = loc(fused[#loc88, #loc89])
#loc146 = loc(fused[#loc93, #loc90])
#loc147 = loc(fused[#loc96, #loc97])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc101, #loc100])
#loc150 = loc(fused[#loc102, #loc103])
#loc151 = loc(fused[#loc108, #loc106])
#loc152 = loc(fused[#loc110, #loc109])
#loc153 = loc(fused[#loc114, #loc111])
