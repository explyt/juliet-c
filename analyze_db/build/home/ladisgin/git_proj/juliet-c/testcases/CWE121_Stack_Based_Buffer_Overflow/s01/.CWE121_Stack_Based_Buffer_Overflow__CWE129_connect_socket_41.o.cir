!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":44:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":44:25)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:44)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":171:25)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":171:29)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:23)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:44)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":136:25)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":136:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc348 = loc(fused[#loc23, #loc24])
#loc400 = loc(fused[#loc161, #loc162])
#loc450 = loc(fused[#loc293, #loc294])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc338)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc339)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc340)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc341)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc342)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private @close(!s32i) -> !s32i loc(#loc344)
  cir.func private @printIntLine(!s32i) loc(#loc345)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc349)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc350)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc348)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc29)
    cir.br ^bb1 loc(#loc351)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc350)
    cir.store %3, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc350)
    cir.br ^bb2 loc(#loc352)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc353)
    cir.brcond %6 ^bb3, ^bb12 loc(#loc354)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc41)
    %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb4 loc(#loc356)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb5 loc(#loc356)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc47)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %14 ^bb6, ^bb10 loc(#loc48)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc359)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc51)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc51)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc52)
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc54)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb5 loc(#loc356)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc37)
  ^bb12:  // pred: ^bb2
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb13 loc(#loc33)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc31)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc22)
  } loc(#loc347)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc363)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc364)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc365)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc366)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc69)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.br ^bb1 loc(#loc368)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc63)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb2 loc(#loc369)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc369)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc75)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc78)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc79)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb5 loc(#loc371)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc85)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc373)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc87)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc375)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc95)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc95)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc377)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc98)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc99)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc100)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc378)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc103)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc103)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc104)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc105)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc379)
    cir.br ^bb9 loc(#loc380)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc382)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc382)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc115)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc116)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc383)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc384)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc118)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc109)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc121)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc121)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc121)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc121)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc121)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc122)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc385)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc124)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc124)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb13 loc(#loc387)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc130)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc131)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc131)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc131)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc131)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc131)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc131)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc131)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc131)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc131)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc131)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc131)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc390)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc135)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc128)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc136)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc391)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc140)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb3 loc(#loc74)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc74)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc393)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc146)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc394)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc395)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc149)
    cir.br ^bb29 loc(#loc144)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc144)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc72)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.call @badSink(%83) : (!s32i) -> () loc(#loc151)
    cir.return loc(#loc57)
  } loc(#loc361)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc397)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc154)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc398)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc156)
    cir.return loc(#loc153)
  } loc(#loc396)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc158)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc161, #loc162])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc401)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc402)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc400)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb1 loc(#loc403)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc402)
    cir.store %3, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc402)
    cir.br ^bb2 loc(#loc404)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc405)
    cir.brcond %6 ^bb3, ^bb8 loc(#loc174)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc176)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc406)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc174)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #true loc(#loc174)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc174)
  ^bb5:  // pred: ^bb3
    %11 = cir.const #false loc(#loc174)
    cir.br ^bb6(%11 : !cir.bool) loc(#loc174)
  ^bb6(%12: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc174)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%12 : !cir.bool) loc(#loc174)
  ^bb8:  // pred: ^bb2
    %13 = cir.const #false loc(#loc174)
    cir.br ^bb9(%13 : !cir.bool) loc(#loc174)
  ^bb9(%14: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc174)
  ^bb10:  // pred: ^bb9
    cir.brcond %14 ^bb11, ^bb20 loc(#loc407)
  ^bb11:  // pred: ^bb10
    %15 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc183)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc183)
    cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb12 loc(#loc409)
  ^bb12:  // pred: ^bb11
    %19 = cir.const #cir.int<0> : !s32i loc(#loc186)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb13 loc(#loc409)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc189)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc411)
    cir.brcond %22 ^bb14, ^bb18 loc(#loc190)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc412)
  ^bb15:  // pred: ^bb14
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc193)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc193)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc194)
    cir.br ^bb16 loc(#loc185)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc185)
  ^bb17:  // pred: ^bb16
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc196)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.br ^bb13 loc(#loc409)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc185)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc179)
  ^bb20:  // pred: ^bb10
    %29 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc158)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    cir.br ^bb21 loc(#loc171)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc171)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc169)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc160)
  } loc(#loc399)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc415)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc416)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc417)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc418)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc419)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc211)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.br ^bb1 loc(#loc421)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc205)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb2 loc(#loc422)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc422)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc217)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc217)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc220)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    cir.br ^bb5 loc(#loc424)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc227)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc425)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc426)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc229)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc225)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc427)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc428)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc429)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc237)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc237)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc430)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc239)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc239)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc240)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc99)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc100)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc431)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc243)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc243)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc244)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc105)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc432)
    cir.br ^bb9 loc(#loc433)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc434)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc435)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc435)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc254)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc255)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc436)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc437)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc257)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc248)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc259)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc259)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc260)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc260)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc260)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc260)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc260)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc260)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc260)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc261)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc438)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc262)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc263)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc263)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.br ^bb13 loc(#loc440)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc269)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc269)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc441)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc270)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc270)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc270)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc270)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc270)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc270)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc270)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc270)
  ^bb18(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc270)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc270)
  ^bb20(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc270)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc443)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc274)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc267)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc275)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc275)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc277)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc277)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc444)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc278)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc279)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.br ^bb3 loc(#loc216)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc216)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc446)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc285)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc447)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc448)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc288)
    cir.br ^bb29 loc(#loc283)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc283)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc214)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    cir.call @goodB2GSink(%83) : (!s32i) -> () loc(#loc290)
    cir.return loc(#loc199)
  } loc(#loc414)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc293, #loc294])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc451)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc452)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc450)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb1 loc(#loc453)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc452)
    cir.store %3, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc452)
    cir.br ^bb2 loc(#loc454)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc305)
    %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc455)
    cir.brcond %6 ^bb3, ^bb12 loc(#loc456)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<1> : !s32i loc(#loc309)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc311)
    %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc311)
    cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.br ^bb4 loc(#loc458)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<0> : !s32i loc(#loc314)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    cir.br ^bb5 loc(#loc458)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc317)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc460)
    cir.brcond %14 ^bb6, ^bb10 loc(#loc318)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc461)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc321)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc321)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc322)
    cir.br ^bb8 loc(#loc313)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc313)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc324)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc462)
    cir.br ^bb5 loc(#loc458)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc313)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc307)
  ^bb12:  // pred: ^bb2
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc325)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc325)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc326)
    cir.br ^bb13 loc(#loc303)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc303)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc301)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc292)
  } loc(#loc449)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc464)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc331)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc332)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc334)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc337)
    cir.return loc(#loc328)
  } loc(#loc463)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":62:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":44:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":65:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":47:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":47:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":48:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":48:30)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":45:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":46:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":64:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":51:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":63:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":51:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":51:21)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":52:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":59:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":61:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":53:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":53:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":53:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":58:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:26)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":56:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":57:37)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":57:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":57:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":55:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":62:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":67:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":129:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":77:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":77:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":78:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":78:28)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":79:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":79:32)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":80:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":80:41)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":69:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":69:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":71:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":71:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":71:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":72:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":127:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":81:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":116:17)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":116:16)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:36)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:45)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:58)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:29)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":91:69)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":92:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":95:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":92:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":92:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":93:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":94:17)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:20)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:30)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:33)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:47)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":96:48)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":97:34)
#loc96 = loc("/usr/include/netinet/in.h":249:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":97:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:39)
#loc99 = loc("/usr/include/netinet/in.h":251:20)
#loc100 = loc("/usr/include/netinet/in.h":33:15)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":98:59)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:38)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:32)
#loc105 = loc("/usr/include/netinet/in.h":250:15)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":99:46)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":103:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:25)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:58)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:59)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:68)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:82)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":100:88)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":101:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":102:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:46)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:59)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:77)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:80)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:26)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":106:81)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":110:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:17)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:31)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:47)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":107:61)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":108:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":109:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":112:39)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":112:25)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":112:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:25)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:20)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":114:36)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":117:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":120:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":117:13)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":117:30)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":118:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":119:26)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":119:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":128:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":128:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":257:1)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":261:1)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":259:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":259:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":260:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":260:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":188:23)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":171:1)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":191:1)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":174:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":174:13)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":175:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":175:30)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":172:1)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":173:5)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":190:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":189:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:21)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:26)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:34)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":177:36)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":178:9)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":185:9)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":187:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":179:28)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":179:20)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":179:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":184:13)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:21)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:17)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:24)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:28)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:26)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":182:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":183:37)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":183:30)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":183:17)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:33)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":181:32)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":188:13)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":193:1)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":255:1)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":203:9)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":203:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":204:9)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":204:28)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":205:9)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":205:32)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":206:9)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":206:41)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":195:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":195:9)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":197:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":197:12)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":197:5)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":198:5)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":253:5)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":207:9)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":242:17)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":242:16)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:36)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:45)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:58)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:29)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:13)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":217:69)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":218:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":221:13)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":218:17)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":218:34)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":219:13)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":220:17)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:20)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:21)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:30)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:33)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:47)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:13)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":222:48)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":223:34)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":223:13)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:49)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:39)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:13)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":224:59)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:38)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:32)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:13)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":225:46)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:13)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":229:13)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:25)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:58)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:59)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:68)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:82)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:17)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":226:88)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":227:13)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":228:17)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:31)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:46)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:59)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:77)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:80)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:26)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":232:81)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:13)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":236:13)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:17)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:31)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:47)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":233:61)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":234:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":235:17)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":238:39)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":238:25)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":238:13)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:25)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:20)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":240:36)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":243:9)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":246:9)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":243:13)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":243:30)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":244:9)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":245:26)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":245:13)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":254:17)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":254:5)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":136:1)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":157:1)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":139:9)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":139:13)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":140:9)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":140:30)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":137:1)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":138:5)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":156:5)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":143:9)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":155:9)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":143:13)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":143:21)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":144:9)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":151:9)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":153:9)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":145:28)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":145:20)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":145:13)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:13)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":150:13)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:21)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:17)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:24)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:28)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:26)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":148:13)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":149:37)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":149:30)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":149:17)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:33)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":147:32)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":154:23)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":154:13)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":159:1)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":168:1)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":161:5)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":161:9)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":163:13)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":163:12)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":163:5)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":166:12)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":166:5)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":167:17)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_41.c":167:5)
#loc338 = loc(fused[#loc1, #loc2])
#loc339 = loc(fused[#loc3, #loc4])
#loc340 = loc(fused[#loc6, #loc7])
#loc341 = loc(fused[#loc8, #loc9])
#loc342 = loc(fused[#loc10, #loc11])
#loc343 = loc(fused[#loc12, #loc13])
#loc344 = loc(fused[#loc14, #loc15])
#loc345 = loc(fused[#loc16, #loc17])
#loc346 = loc(fused[#loc18, #loc19])
#loc347 = loc(fused[#loc21, #loc22])
#loc349 = loc(fused[#loc25, #loc26])
#loc350 = loc(fused[#loc27, #loc28])
#loc351 = loc(fused[#loc30, #loc31])
#loc352 = loc(fused[#loc32, #loc33])
#loc353 = loc(fused[#loc34, #loc35])
#loc354 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc355 = loc(fused[#loc41, #loc39])
#loc356 = loc(fused[#loc42, #loc43])
#loc357 = loc(fused[#loc45, #loc44])
#loc358 = loc(fused[#loc46, #loc47])
#loc359 = loc(fused[#loc49, #loc43])
#loc360 = loc(fused[#loc54, #loc53])
#loc361 = loc(fused[#loc56, #loc57])
#loc362 = loc(fused[#loc58, #loc59])
#loc363 = loc(fused[#loc60, #loc61])
#loc364 = loc(fused[#loc62, #loc63])
#loc365 = loc(fused[#loc64, #loc65])
#loc366 = loc(fused[#loc66, #loc67])
#loc367 = loc(fused[#loc70, #loc68])
#loc368 = loc(fused[#loc71, #loc72])
#loc369 = loc(fused[#loc73, #loc74])
#loc370 = loc(fused[#loc80, #loc81])
#loc371 = loc(fused[#loc82, #loc83])
#loc372 = loc(fused[#loc84, #loc85])
#loc373 = loc(fused[#loc86, #loc83])
#loc374 = loc(fused[#loc88, #loc89])
#loc375 = loc(fused[#loc91, #loc92])
#loc376 = loc(fused[#loc93, #loc94])
#loc377 = loc(fused[#loc97, #loc95])
#loc378 = loc(fused[#loc101, #loc102])
#loc379 = loc(fused[#loc106, #loc107])
#loc380 = loc(fused[#loc108, #loc109])
#loc381 = loc(fused[#loc111, #loc112])
#loc382 = loc(fused[#loc113, #loc114])
#loc383 = loc(fused[#loc115, #loc116])
#loc384 = loc(fused[#loc117, #loc109])
#loc385 = loc(fused[#loc121, #loc122])
#loc386 = loc(fused[#loc125, #loc126])
#loc387 = loc(fused[#loc127, #loc128])
#loc388 = loc(fused[#loc129, #loc130])
#loc389 = loc(fused[#loc132, #loc133])
#loc390 = loc(fused[#loc134, #loc128])
#loc391 = loc(fused[#loc138, #loc136])
#loc392 = loc(fused[#loc141, #loc142])
#loc393 = loc(fused[#loc143, #loc144])
#loc394 = loc(fused[#loc145, #loc146])
#loc395 = loc(fused[#loc147, #loc144])
#loc396 = loc(fused[#loc152, #loc153])
#loc397 = loc(fused[#loc154, #loc155])
#loc398 = loc(fused[#loc156, #loc157])
#loc399 = loc(fused[#loc159, #loc160])
#loc401 = loc(fused[#loc163, #loc164])
#loc402 = loc(fused[#loc165, #loc166])
#loc403 = loc(fused[#loc168, #loc169])
#loc404 = loc(fused[#loc170, #loc171])
#loc405 = loc(fused[#loc172, #loc173])
#loc406 = loc(fused[#loc175, #loc177])
#loc407 = loc(fused[#loc178, #loc179, #loc180, #loc171])
#loc408 = loc(fused[#loc183, #loc181])
#loc409 = loc(fused[#loc184, #loc185])
#loc410 = loc(fused[#loc187, #loc186])
#loc411 = loc(fused[#loc188, #loc189])
#loc412 = loc(fused[#loc191, #loc185])
#loc413 = loc(fused[#loc196, #loc195])
#loc414 = loc(fused[#loc198, #loc199])
#loc415 = loc(fused[#loc200, #loc201])
#loc416 = loc(fused[#loc202, #loc203])
#loc417 = loc(fused[#loc204, #loc205])
#loc418 = loc(fused[#loc206, #loc207])
#loc419 = loc(fused[#loc208, #loc209])
#loc420 = loc(fused[#loc212, #loc210])
#loc421 = loc(fused[#loc213, #loc214])
#loc422 = loc(fused[#loc215, #loc216])
#loc423 = loc(fused[#loc222, #loc223])
#loc424 = loc(fused[#loc224, #loc225])
#loc425 = loc(fused[#loc226, #loc227])
#loc426 = loc(fused[#loc228, #loc225])
#loc427 = loc(fused[#loc230, #loc231])
#loc428 = loc(fused[#loc233, #loc234])
#loc429 = loc(fused[#loc235, #loc236])
#loc430 = loc(fused[#loc238, #loc237])
#loc431 = loc(fused[#loc241, #loc242])
#loc432 = loc(fused[#loc245, #loc246])
#loc433 = loc(fused[#loc247, #loc248])
#loc434 = loc(fused[#loc250, #loc251])
#loc435 = loc(fused[#loc252, #loc253])
#loc436 = loc(fused[#loc254, #loc255])
#loc437 = loc(fused[#loc256, #loc248])
#loc438 = loc(fused[#loc260, #loc261])
#loc439 = loc(fused[#loc264, #loc265])
#loc440 = loc(fused[#loc266, #loc267])
#loc441 = loc(fused[#loc268, #loc269])
#loc442 = loc(fused[#loc271, #loc272])
#loc443 = loc(fused[#loc273, #loc267])
#loc444 = loc(fused[#loc277, #loc275])
#loc445 = loc(fused[#loc280, #loc281])
#loc446 = loc(fused[#loc282, #loc283])
#loc447 = loc(fused[#loc284, #loc285])
#loc448 = loc(fused[#loc286, #loc283])
#loc449 = loc(fused[#loc291, #loc292])
#loc451 = loc(fused[#loc295, #loc296])
#loc452 = loc(fused[#loc297, #loc298])
#loc453 = loc(fused[#loc300, #loc301])
#loc454 = loc(fused[#loc302, #loc303])
#loc455 = loc(fused[#loc304, #loc305])
#loc456 = loc(fused[#loc306, #loc307, #loc308, #loc303])
#loc457 = loc(fused[#loc311, #loc309])
#loc458 = loc(fused[#loc312, #loc313])
#loc459 = loc(fused[#loc315, #loc314])
#loc460 = loc(fused[#loc316, #loc317])
#loc461 = loc(fused[#loc319, #loc313])
#loc462 = loc(fused[#loc324, #loc323])
#loc463 = loc(fused[#loc327, #loc328])
#loc464 = loc(fused[#loc329, #loc330])
#loc465 = loc(fused[#loc333, #loc331])
#loc466 = loc(fused[#loc335, #loc334])
