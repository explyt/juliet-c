!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":112:10)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":112:14)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":112:20)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":112:32)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:28)
#true = #cir.bool<true> : !cir.bool
!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__int_fscanf_square_34_unionType" {!s32i, !s32i}>
#loc149 = loc(fused[#loc51, #loc52])
#loc150 = loc(fused[#loc53, #loc54])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc130)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc132)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_square_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc136)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc137)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc131)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc20)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %12 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType> -> !cir.ptr<!s32i> loc(#loc27)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc30)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc32)
    cir.br ^bb3 loc(#loc29)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc9)
  } loc(#loc133)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_square_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc142)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc145)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc58)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_fscanf_square_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE190_Integer_Overflow__int_fscanf_square_34_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_fscanf_square_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE190_Integer_Overflow__int_fscanf_square_34_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %17 : !s32i loc(#loc153)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc158)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc81)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %7 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType> -> !cir.ptr<!s32i> loc(#loc27)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb2 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc89)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc91)
    cir.br ^bb3 loc(#loc88)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc70)
  } loc(#loc154)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc168)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc106)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc131)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc106)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %12 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType> -> !cir.ptr<!s32i> loc(#loc23)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_fscanf_square_34_unionType> -> !cir.ptr<!s32i> loc(#loc27)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb2 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %16 = cir.const #cir.int<2147483647> : !s32i loc(#loc116)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc116)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc116)
    %20 = cir.cmp(gt, %15, %19) : !s32i, !cir.bool loc(#loc173)
    cir.brcond %20 ^bb3, ^bb8 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %22 = cir.abs %21 poison : !s32i loc(#loc119)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc119)
    %24 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc120)
    %25 = cir.const #cir.int<2147483647> : !s32i loc(#loc121)
    %26 = cir.cast(int_to_float, %25 : !s32i), !cir.double loc(#loc121)
    %27 = cir.call @sqrt(%26) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc120)
    %28 = cir.cast(float_to_int, %27 : !cir.double), !s64i loc(#loc120)
    %29 = cir.cmp(lt, %23, %28) : !s64i, !cir.bool loc(#loc174)
    cir.brcond %29 ^bb4, ^bb5 loc(#loc117)
  ^bb4:  // pred: ^bb3
    %30 = cir.const #true loc(#loc117)
    cir.br ^bb6(%30 : !cir.bool) loc(#loc117)
  ^bb5:  // pred: ^bb3
    %31 = cir.const #false loc(#loc117)
    cir.br ^bb6(%31 : !cir.bool) loc(#loc117)
  ^bb6(%32: !cir.bool loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:28)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%32 : !cir.bool) loc(#loc117)
  ^bb8:  // pred: ^bb2
    %33 = cir.const #false loc(#loc117)
    cir.br ^bb9(%33 : !cir.bool) loc(#loc117)
  ^bb9(%34: !cir.bool loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:28)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc117)
  ^bb10:  // pred: ^bb9
    cir.brcond %34 ^bb11, ^bb12 loc(#loc175)
  ^bb11:  // pred: ^bb10
    %35 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %37 = cir.binop(mul, %35, %36) nsw : !s32i loc(#loc126)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc128)
    cir.br ^bb13 loc(#loc124)
  ^bb12:  // pred: ^bb10
    %39 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc93)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb13 loc(#loc114)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc114)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc112)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc95)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":37:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":30:1)
#loc9 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":47:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":40:9)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":40:28)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":43:13)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":43:33)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":32:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":32:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":33:61)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":35:12)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":35:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":37:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":37:12)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":38:26)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":24:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":38:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":39:5)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":46:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":25:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":41:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":45:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":43:26)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":44:26)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":44:13)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":98:1)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":102:1)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":100:5)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":100:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":101:5)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":101:13)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":117:15)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":119:15)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":122:15)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":124:15)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":112:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":127:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":113:1)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":115:27)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":115:22)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":115:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":117:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":118:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":118:56)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":119:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":122:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":123:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":123:55)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":124:5)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":126:12)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":126:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":54:1)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":71:1)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":64:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":64:28)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":67:13)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":67:33)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":56:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":56:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":57:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":57:61)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":59:12)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":59:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":61:12)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":61:5)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":62:26)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":62:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":63:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":70:5)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":65:9)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":69:9)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":67:26)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":68:26)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":68:13)
#loc92 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":93:23)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":74:1)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":96:1)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":84:9)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":84:28)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":88:13)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":88:33)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":76:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":76:9)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":77:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":77:61)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":79:12)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":79:5)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":81:5)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":81:12)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":81:19)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":82:26)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":82:5)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":83:5)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":95:5)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":94:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:20)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:35)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:31)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:49)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:62)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":86:69)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":87:9)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":90:9)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":92:9)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":88:26)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":89:26)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":89:13)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_square_34.c":93:13)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc6, #loc7])
#loc133 = loc(fused[#loc8, #loc9])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc14, #loc15])
#loc137 = loc(fused[#loc16, #loc17])
#loc138 = loc(fused[#loc19, #loc18])
#loc139 = loc(fused[#loc24, #loc22])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc28, #loc29])
#loc142 = loc(fused[#loc33, #loc34])
#loc143 = loc(fused[#loc35, #loc36])
#loc144 = loc(fused[#loc37, #loc38])
#loc145 = loc(fused[#loc39, #loc40])
#loc146 = loc(fused[#loc41, #loc42])
#loc147 = loc(fused[#loc43, #loc44])
#loc148 = loc(fused[#loc49, #loc50])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc68, #loc67])
#loc154 = loc(fused[#loc69, #loc70])
#loc155 = loc(fused[#loc71, #loc72])
#loc156 = loc(fused[#loc73, #loc74])
#loc157 = loc(fused[#loc75, #loc76])
#loc158 = loc(fused[#loc77, #loc78])
#loc159 = loc(fused[#loc80, #loc79])
#loc160 = loc(fused[#loc82, #loc81])
#loc161 = loc(fused[#loc84, #loc83])
#loc162 = loc(fused[#loc85, #loc86])
#loc163 = loc(fused[#loc87, #loc88])
#loc164 = loc(fused[#loc94, #loc95])
#loc165 = loc(fused[#loc96, #loc97])
#loc166 = loc(fused[#loc98, #loc99])
#loc167 = loc(fused[#loc100, #loc101])
#loc168 = loc(fused[#loc102, #loc103])
#loc169 = loc(fused[#loc105, #loc104])
#loc170 = loc(fused[#loc110, #loc109])
#loc171 = loc(fused[#loc111, #loc112])
#loc172 = loc(fused[#loc113, #loc114])
#loc173 = loc(fused[#loc115, #loc116])
#loc174 = loc(fused[#loc119, #loc122])
#loc175 = loc(fused[#loc123, #loc124, #loc125, #loc114])
