!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc147)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc148)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc19)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc21)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc24)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc151)
          cir.break loc(#loc25)
        } loc(#loc18)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
          cir.break loc(#loc28)
        } loc(#loc26)
        cir.yield loc(#loc15)
      } loc(#loc15)
    } loc(#loc149)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc153)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc34)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc35)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc35)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc39)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc40)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc155)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc43)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc45)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc45)
      %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc43)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    } loc(#loc152)
    cir.return loc(#loc8)
  } loc(#loc145)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc162)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc65)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc68)
          cir.break loc(#loc69)
        } loc(#loc66)
        cir.case(default, []) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc73)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc76)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc165)
          cir.break loc(#loc77)
        } loc(#loc70)
        cir.yield loc(#loc63)
      } loc(#loc63)
    } loc(#loc163)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc167)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc83)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc84)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc84)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc88)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc88)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc89)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc91)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc169)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc92)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc94)
      %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc95)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc95)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc92)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    } loc(#loc166)
    cir.return loc(#loc56)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc173)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc109)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc113)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc116)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc176)
          cir.break loc(#loc117)
        } loc(#loc110)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc119)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc119)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc120)
          cir.break loc(#loc121)
        } loc(#loc118)
        cir.yield loc(#loc107)
      } loc(#loc107)
    } loc(#loc174)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc178)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc127)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc128)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc128)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc132)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc132)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc133)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc133)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc135)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc180)
      %18 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc136)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc138)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc138)
      %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc139)
      %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc139)
      %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
      %25 = cir.call @snprintf(%19, %21, %23, %24) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc136)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    } loc(#loc177)
    cir.return loc(#loc100)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":44:19)
#loc4 = loc("/usr/include/stdio.h":385:1)
#loc5 = loc("/usr/include/stdio.h":387:62)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":52:29)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":29:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":55:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":31:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":32:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":33:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":46:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":34:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":39:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":39:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":40:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":40:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":40:14)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":40:15)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":41:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":42:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":44:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":45:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":47:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":54:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":48:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":48:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":49:16)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":49:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":49:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":49:33)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":49:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":49:34)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":50:25)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":50:16)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":50:20)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":50:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":52:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":52:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":52:24)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":52:35)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":53:19)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":53:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":117:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":121:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":119:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":119:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":120:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":120:14)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":62:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":87:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":64:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":64:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":65:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":65:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":66:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":66:28)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":67:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":78:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":67:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":69:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":71:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":71:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":72:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":73:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":75:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":75:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":76:19)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":76:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":76:14)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":76:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":77:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":79:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":86:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":80:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":80:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":81:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":81:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":81:29)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":81:33)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":81:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":81:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":82:25)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":82:16)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":82:20)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":82:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":84:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":84:18)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":84:24)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":84:29)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":84:35)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":85:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":85:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":90:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":115:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":92:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":92:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":93:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":93:26)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":94:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":94:28)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":95:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":106:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":95:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":97:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":99:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":99:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":100:19)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":100:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":100:14)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":100:15)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":101:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":102:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":104:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":104:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":105:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":107:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":114:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":108:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":108:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":109:16)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":109:24)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":109:29)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":109:33)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":109:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":109:34)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":110:25)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":110:16)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":110:20)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":110:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":112:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":112:18)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":112:24)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":112:29)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":112:35)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":113:19)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_snprintf_15.c":113:9)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc4, #loc5])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc9, #loc10])
#loc147 = loc(fused[#loc11, #loc12])
#loc148 = loc(fused[#loc13, #loc14])
#loc149 = loc(fused[#loc15, #loc16])
#loc150 = loc(fused[#loc20, #loc19])
#loc151 = loc(fused[#loc22, #loc21])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc37, #loc38])
#loc155 = loc(fused[#loc42, #loc39])
#loc156 = loc(fused[#loc49, #loc50])
#loc157 = loc(fused[#loc51, #loc52])
#loc158 = loc(fused[#loc53, #loc54])
#loc159 = loc(fused[#loc55, #loc56])
#loc160 = loc(fused[#loc57, #loc58])
#loc161 = loc(fused[#loc59, #loc60])
#loc162 = loc(fused[#loc61, #loc62])
#loc163 = loc(fused[#loc63, #loc64])
#loc164 = loc(fused[#loc72, #loc71])
#loc165 = loc(fused[#loc74, #loc73])
#loc166 = loc(fused[#loc78, #loc79])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc86, #loc87])
#loc169 = loc(fused[#loc91, #loc88])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc103, #loc104])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc112, #loc111])
#loc176 = loc(fused[#loc114, #loc113])
#loc177 = loc(fused[#loc122, #loc123])
#loc178 = loc(fused[#loc124, #loc125])
#loc179 = loc(fused[#loc130, #loc131])
#loc180 = loc(fused[#loc135, #loc132])
