!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc98)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc19)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc102)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %12 = cir.const #cir.int<67> : !s32i loc(#loc26)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc27)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc104)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc31)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc32)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc35)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc38)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc38)
    %31 = cir.call @strncpy(%25, %26, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc40)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc42)
    %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc106)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.return loc(#loc6)
  } loc(#loc95)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc107)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc112)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc65)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
    %12 = cir.const #cir.int<67> : !s32i loc(#loc72)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc73)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc73)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc118)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc77)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc78)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    %24 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc81)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc84)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc84)
    %31 = cir.call @strncpy(%25, %26, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc86)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc88)
    %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb3 loc(#loc70)
  ^bb3:  // pred: ^bb2
    cir.return loc(#loc52)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":43:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":35:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":35:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":26:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":27:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":28:10)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":32:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":33:15)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":33:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":33:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":33:11)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":34:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":42:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":36:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":36:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":36:29)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":36:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":36:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":36:34)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":37:25)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":37:16)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":37:20)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":37:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":39:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":39:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":39:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":39:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":39:35)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":40:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":40:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":40:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":40:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":40:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":41:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":41:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":71:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":74:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":73:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":73:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":50:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":69:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":61:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":61:24)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":52:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":52:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":53:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":53:26)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":54:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":54:28)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":55:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":55:10)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":58:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":59:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":59:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":59:10)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":59:11)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":60:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":68:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":62:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":62:24)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":62:29)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":62:33)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":62:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":62:34)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":63:25)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":63:16)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":63:20)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":63:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":65:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":65:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":65:23)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":65:31)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":65:35)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":66:23)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":66:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":66:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":66:18)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":66:19)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":67:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_18.c":67:9)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc13, #loc14])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc18, #loc17])
#loc102 = loc(fused[#loc20, #loc19])
#loc103 = loc(fused[#loc23, #loc24])
#loc104 = loc(fused[#loc29, #loc30])
#loc105 = loc(fused[#loc34, #loc31])
#loc106 = loc(fused[#loc41, #loc40])
#loc107 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc49, #loc50])
#loc109 = loc(fused[#loc51, #loc52])
#loc110 = loc(fused[#loc53, #loc54])
#loc111 = loc(fused[#loc55, #loc56])
#loc112 = loc(fused[#loc57, #loc58])
#loc113 = loc(fused[#loc59, #loc60])
#loc114 = loc(fused[#loc61, #loc62])
#loc115 = loc(fused[#loc64, #loc63])
#loc116 = loc(fused[#loc66, #loc65])
#loc117 = loc(fused[#loc69, #loc70])
#loc118 = loc(fused[#loc75, #loc76])
#loc119 = loc(fused[#loc80, #loc77])
#loc120 = loc(fused[#loc87, #loc86])
