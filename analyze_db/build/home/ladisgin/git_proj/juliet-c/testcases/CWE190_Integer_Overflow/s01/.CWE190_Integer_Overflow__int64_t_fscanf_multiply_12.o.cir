!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc188)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc189)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc191)
  cir.func private @printLongLongLine(!s64i) loc(#loc192)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc196)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc22)
    cir.store %3, %2 : !s64i, !cir.ptr<!s64i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc200)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc200)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc31)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc191)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc191)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc31)
    cir.br ^bb4 loc(#loc29)
  ^bb3:  // pred: ^bb1
    %14 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc33)
    cir.store %15, %2 : !s64i, !cir.ptr<!s64i> loc(#loc202)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc204)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
    %18 = cir.call %17() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc37)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %19 ^bb7, ^bb12 loc(#loc205)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc206)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc44)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc45)
    %23 = cir.cmp(gt, %20, %22) : !s64i, !cir.bool loc(#loc207)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc208)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc47)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %26 = cir.cast(integral, %25 : !s32i), !s64i loc(#loc17)
    %27 = cir.binop(mul, %24, %26) nsw : !s64i loc(#loc47)
    cir.store %27, %0 : !s64i, !cir.ptr<!s64i> loc(#loc195)
    %28 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc48)
    cir.call @printLongLongLine(%28) : (!s64i) -> () loc(#loc49)
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    cir.br ^bb22 loc(#loc40)
  ^bb12:  // pred: ^bb6
    cir.br ^bb13 loc(#loc209)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc52)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %31 = cir.cast(integral, %30 : !s32i), !s64i loc(#loc53)
    %32 = cir.cmp(gt, %29, %31) : !s64i, !cir.bool loc(#loc210)
    cir.brcond %32 ^bb14, ^bb20 loc(#loc211)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc212)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    %34 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc58)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %36 = cir.cast(integral, %35 : !s32i), !s64i loc(#loc59)
    %37 = cir.binop(div, %34, %36) : !s64i loc(#loc213)
    %38 = cir.cmp(lt, %33, %37) : !s64i, !cir.bool loc(#loc214)
    cir.brcond %38 ^bb16, ^bb17 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc64)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %41 = cir.cast(integral, %40 : !s32i), !s64i loc(#loc19)
    %42 = cir.binop(mul, %39, %41) nsw : !s64i loc(#loc64)
    cir.store %42, %1 : !s64i, !cir.ptr<!s64i> loc(#loc196)
    %43 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc65)
    cir.call @printLongLongLine(%43) : (!s64i) -> () loc(#loc66)
    cir.br ^bb18 loc(#loc62)
  ^bb17:  // pred: ^bb15
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc13)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb18 loc(#loc56)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc56)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc51)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc51)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc36)
  ^bb22:  // 2 preds: ^bb11, ^bb21
    cir.br ^bb23 loc(#loc36)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc15)
  } loc(#loc194)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc69)
  } loc(#loc216)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc82)
    cir.store %3, %2 : !s64i, !cir.ptr<!s64i> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc225)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc225)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc86)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc91)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc227)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc227)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc91)
    cir.br ^bb4 loc(#loc89)
  ^bb3:  // pred: ^bb1
    %14 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc95)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc190)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc228)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc228)
    %19 = cir.call @__isoc99_fscanf(%16, %18, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc95)
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc85)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc229)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc230)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc230)
    %22 = cir.call %21() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc101)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %23 ^bb7, ^bb17 loc(#loc231)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc232)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc108)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %26 = cir.cast(integral, %25 : !s32i), !s64i loc(#loc109)
    %27 = cir.cmp(gt, %24, %26) : !s64i, !cir.bool loc(#loc233)
    cir.brcond %27 ^bb9, ^bb15 loc(#loc234)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc113)
    %29 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc114)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %31 = cir.cast(integral, %30 : !s32i), !s64i loc(#loc115)
    %32 = cir.binop(div, %29, %31) : !s64i loc(#loc236)
    %33 = cir.cmp(lt, %28, %32) : !s64i, !cir.bool loc(#loc237)
    cir.brcond %33 ^bb11, ^bb12 loc(#loc238)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc120)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %36 = cir.cast(integral, %35 : !s32i), !s64i loc(#loc77)
    %37 = cir.binop(mul, %34, %36) nsw : !s64i loc(#loc120)
    cir.store %37, %0 : !s64i, !cir.ptr<!s64i> loc(#loc220)
    %38 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc121)
    cir.call @printLongLongLine(%38) : (!s64i) -> () loc(#loc122)
    cir.br ^bb13 loc(#loc118)
  ^bb12:  // pred: ^bb10
    %39 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc123)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb13 loc(#loc112)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc112)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc107)
  ^bb16:  // pred: ^bb15
    cir.br ^bb27 loc(#loc104)
  ^bb17:  // pred: ^bb6
    cir.br ^bb18 loc(#loc239)
  ^bb18:  // pred: ^bb17
    %41 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc127)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %43 = cir.cast(integral, %42 : !s32i), !s64i loc(#loc128)
    %44 = cir.cmp(gt, %41, %43) : !s64i, !cir.bool loc(#loc240)
    cir.brcond %44 ^bb19, ^bb25 loc(#loc241)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc242)
  ^bb20:  // pred: ^bb19
    %45 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc132)
    %46 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc133)
    %47 = cir.const #cir.int<2> : !s32i loc(#loc134)
    %48 = cir.cast(integral, %47 : !s32i), !s64i loc(#loc134)
    %49 = cir.binop(div, %46, %48) : !s64i loc(#loc243)
    %50 = cir.cmp(lt, %45, %49) : !s64i, !cir.bool loc(#loc244)
    cir.brcond %50 ^bb21, ^bb22 loc(#loc245)
  ^bb21:  // pred: ^bb20
    %51 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc139)
    %52 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %53 = cir.cast(integral, %52 : !s32i), !s64i loc(#loc79)
    %54 = cir.binop(mul, %51, %53) nsw : !s64i loc(#loc139)
    cir.store %54, %1 : !s64i, !cir.ptr<!s64i> loc(#loc221)
    %55 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc140)
    cir.call @printLongLongLine(%55) : (!s64i) -> () loc(#loc141)
    cir.br ^bb23 loc(#loc137)
  ^bb22:  // pred: ^bb20
    %56 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc142)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.br ^bb23 loc(#loc131)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc131)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc126)
  ^bb25:  // 2 preds: ^bb18, ^bb24
    cir.br ^bb26 loc(#loc126)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc100)
  ^bb27:  // 2 preds: ^bb16, ^bb26
    cir.br ^bb28 loc(#loc100)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc75)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc152)
    cir.store %3, %2 : !s64i, !cir.ptr<!s64i> loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc252)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc252)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc156)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc156)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc253)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc161)
    cir.store %9, %2 : !s64i, !cir.ptr<!s64i> loc(#loc254)
    cir.br ^bb4 loc(#loc159)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<2> : !s32i loc(#loc163)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc163)
    cir.store %11, %2 : !s64i, !cir.ptr<!s64i> loc(#loc255)
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc257)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc257)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc167)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc167)
    cir.brcond %15 ^bb7, ^bb12 loc(#loc258)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc259)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc174)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc175)
    %19 = cir.cmp(gt, %16, %18) : !s64i, !cir.bool loc(#loc260)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc261)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc177)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc147)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc147)
    %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc177)
    cir.store %23, %0 : !s64i, !cir.ptr<!s64i> loc(#loc247)
    %24 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc178)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc179)
    cir.br ^bb10 loc(#loc173)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc173)
  ^bb11:  // pred: ^bb10
    cir.br ^bb17 loc(#loc170)
  ^bb12:  // pred: ^bb6
    cir.br ^bb13 loc(#loc262)
  ^bb13:  // pred: ^bb12
    %25 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc182)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc183)
    %28 = cir.cmp(gt, %25, %27) : !s64i, !cir.bool loc(#loc263)
    cir.brcond %28 ^bb14, ^bb15 loc(#loc264)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc185)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %31 = cir.cast(integral, %30 : !s32i), !s64i loc(#loc149)
    %32 = cir.binop(mul, %29, %31) nsw : !s64i loc(#loc185)
    cir.store %32, %1 : !s64i, !cir.ptr<!s64i> loc(#loc248)
    %33 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc186)
    cir.call @printLongLongLine(%33) : (!s64i) -> () loc(#loc187)
    cir.br ^bb15 loc(#loc181)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc181)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc166)
  ^bb17:  // 2 preds: ^bb11, ^bb16
    cir.br ^bb18 loc(#loc166)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc145)
  } loc(#loc246)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":30:24)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":58:27)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":23:1)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":62:1)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":42:13)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":42:37)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":53:17)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":53:41)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":25:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":25:13)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":26:12)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":26:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":27:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":36:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":27:8)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":27:33)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":28:5)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":31:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":33:5)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":30:9)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":30:17)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":35:16)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":35:9)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":37:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":61:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":37:8)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":37:33)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":38:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":45:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":47:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":39:9)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":44:9)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":39:12)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":39:19)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":40:9)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":42:30)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":43:31)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":43:13)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":48:9)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":60:9)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":48:12)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":48:19)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":49:9)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":51:13)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":59:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":51:17)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":51:25)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":51:35)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":51:36)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":52:13)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":55:13)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":57:13)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":53:34)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":54:35)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":54:17)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":58:17)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":156:1)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":160:1)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":158:5)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":158:13)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":159:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":159:13)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":71:1)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":117:1)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":92:17)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":92:41)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":108:17)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":108:41)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":73:5)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":73:13)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":74:12)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":74:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":75:5)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":84:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":75:8)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":75:33)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":76:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":79:5)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":81:5)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":78:9)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":78:17)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":78:24)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":78:28)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":83:9)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":83:17)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":83:24)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":83:28)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":85:5)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":116:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":85:8)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":85:33)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":86:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":100:5)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":102:5)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":87:9)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":99:9)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":87:12)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":87:19)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":88:9)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":90:13)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":98:13)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":90:17)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":90:25)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":90:35)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":90:36)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":91:13)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":94:13)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":96:13)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":92:34)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":93:35)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":93:17)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":97:27)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":97:17)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":103:9)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":115:9)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":103:12)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":103:19)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":104:9)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":106:13)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":114:13)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":106:17)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":106:25)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":106:35)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":106:36)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":107:13)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":110:13)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":112:13)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":108:34)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":109:35)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":109:17)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":113:27)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":113:17)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":122:1)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":154:1)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":141:13)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":141:37)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":150:13)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":150:37)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":124:5)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":124:13)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":125:12)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":125:5)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":126:5)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":135:5)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":126:8)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":126:33)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":127:5)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":130:5)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":132:5)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":129:16)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":129:9)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":134:16)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":134:9)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":136:5)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":153:5)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":136:8)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":136:33)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":137:5)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":144:5)
#loc171 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":146:5)
#loc172 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":138:9)
#loc173 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":143:9)
#loc174 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":138:12)
#loc175 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":138:19)
#loc176 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":139:9)
#loc177 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":141:30)
#loc178 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":142:31)
#loc179 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":142:13)
#loc180 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":147:9)
#loc181 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":152:9)
#loc182 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":147:12)
#loc183 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":147:19)
#loc184 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":148:9)
#loc185 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":150:30)
#loc186 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":151:31)
#loc187 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_12.c":151:13)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc5, #loc6])
#loc191 = loc(fused[#loc7, #loc8])
#loc192 = loc(fused[#loc9, #loc10])
#loc193 = loc(fused[#loc11, #loc12])
#loc194 = loc(fused[#loc14, #loc15])
#loc195 = loc(fused[#loc16, #loc17])
#loc196 = loc(fused[#loc18, #loc19])
#loc197 = loc(fused[#loc20, #loc21])
#loc198 = loc(fused[#loc23, #loc22])
#loc199 = loc(fused[#loc24, #loc25])
#loc200 = loc(fused[#loc26, #loc27])
#loc201 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc202 = loc(fused[#loc34, #loc33])
#loc203 = loc(fused[#loc35, #loc36])
#loc204 = loc(fused[#loc37, #loc38])
#loc205 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc206 = loc(fused[#loc42, #loc43])
#loc207 = loc(fused[#loc44, #loc45])
#loc208 = loc(fused[#loc46, #loc43])
#loc209 = loc(fused[#loc50, #loc51])
#loc210 = loc(fused[#loc52, #loc53])
#loc211 = loc(fused[#loc54, #loc51])
#loc212 = loc(fused[#loc55, #loc56])
#loc213 = loc(fused[#loc58, #loc59])
#loc214 = loc(fused[#loc57, #loc60])
#loc215 = loc(fused[#loc61, #loc62, #loc63, #loc56])
#loc216 = loc(fused[#loc68, #loc69])
#loc217 = loc(fused[#loc70, #loc71])
#loc218 = loc(fused[#loc72, #loc73])
#loc219 = loc(fused[#loc74, #loc75])
#loc220 = loc(fused[#loc76, #loc77])
#loc221 = loc(fused[#loc78, #loc79])
#loc222 = loc(fused[#loc80, #loc81])
#loc223 = loc(fused[#loc83, #loc82])
#loc224 = loc(fused[#loc84, #loc85])
#loc225 = loc(fused[#loc86, #loc87])
#loc226 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc227 = loc(fused[#loc93, #loc94])
#loc228 = loc(fused[#loc97, #loc98])
#loc229 = loc(fused[#loc99, #loc100])
#loc230 = loc(fused[#loc101, #loc102])
#loc231 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc232 = loc(fused[#loc106, #loc107])
#loc233 = loc(fused[#loc108, #loc109])
#loc234 = loc(fused[#loc110, #loc107])
#loc235 = loc(fused[#loc111, #loc112])
#loc236 = loc(fused[#loc114, #loc115])
#loc237 = loc(fused[#loc113, #loc116])
#loc238 = loc(fused[#loc117, #loc118, #loc119, #loc112])
#loc239 = loc(fused[#loc125, #loc126])
#loc240 = loc(fused[#loc127, #loc128])
#loc241 = loc(fused[#loc129, #loc126])
#loc242 = loc(fused[#loc130, #loc131])
#loc243 = loc(fused[#loc133, #loc134])
#loc244 = loc(fused[#loc132, #loc135])
#loc245 = loc(fused[#loc136, #loc137, #loc138, #loc131])
#loc246 = loc(fused[#loc144, #loc145])
#loc247 = loc(fused[#loc146, #loc147])
#loc248 = loc(fused[#loc148, #loc149])
#loc249 = loc(fused[#loc150, #loc151])
#loc250 = loc(fused[#loc153, #loc152])
#loc251 = loc(fused[#loc154, #loc155])
#loc252 = loc(fused[#loc156, #loc157])
#loc253 = loc(fused[#loc158, #loc159, #loc160, #loc155])
#loc254 = loc(fused[#loc162, #loc161])
#loc255 = loc(fused[#loc164, #loc163])
#loc256 = loc(fused[#loc165, #loc166])
#loc257 = loc(fused[#loc167, #loc168])
#loc258 = loc(fused[#loc169, #loc170, #loc171, #loc166])
#loc259 = loc(fused[#loc172, #loc173])
#loc260 = loc(fused[#loc174, #loc175])
#loc261 = loc(fused[#loc176, #loc173])
#loc262 = loc(fused[#loc180, #loc181])
#loc263 = loc(fused[#loc182, #loc183])
#loc264 = loc(fused[#loc184, #loc181])
