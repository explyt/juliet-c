!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc245)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private @printIntLine(!s32i) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc21)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc23)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc23)
          cir.break loc(#loc25)
        } loc(#loc22)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
          cir.break loc(#loc28)
        } loc(#loc26)
        cir.yield loc(#loc19)
      } loc(#loc19)
    } loc(#loc252)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc31)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc255)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc255)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc255)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc40)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc257)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc45)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc46)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc11)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc11)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc47)
              } loc(#loc258)
            } loc(#loc256)
          } loc(#loc254)
          cir.break loc(#loc48)
        } loc(#loc32)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          cir.break loc(#loc52)
        } loc(#loc49)
        cir.yield loc(#loc29)
      } loc(#loc29)
    } loc(#loc253)
    cir.return loc(#loc13)
  } loc(#loc249)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc262)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc263)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc54)
  } loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc69)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc73)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc75)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc77)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc77)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc75)
          cir.break loc(#loc78)
        } loc(#loc74)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc81)
          cir.break loc(#loc82)
        } loc(#loc79)
        cir.yield loc(#loc71)
      } loc(#loc71)
    } loc(#loc267)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc85)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          cir.break loc(#loc89)
        } loc(#loc86)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc270)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc270)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc270)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc98)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc272)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc101)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc273)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc99)
                  cir.yield %14 : !cir.bool loc(#loc99)
                }, false {
                  %14 = cir.const #false loc(#loc99)
                  cir.yield %14 : !cir.bool loc(#loc99)
                }) : (!cir.bool) -> !cir.bool loc(#loc99)
                cir.yield %13 : !cir.bool loc(#loc99)
              }, false {
                %10 = cir.const #false loc(#loc99)
                cir.yield %10 : !cir.bool loc(#loc99)
              }) : (!cir.bool) -> !cir.bool loc(#loc99)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc107)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc107)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc108)
              } else {
                %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc63)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc63)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc109)
              } loc(#loc274)
            } loc(#loc271)
          } loc(#loc269)
          cir.break loc(#loc110)
        } loc(#loc90)
        cir.yield loc(#loc83)
      } loc(#loc83)
    } loc(#loc268)
    cir.return loc(#loc65)
  } loc(#loc264)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc116)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc120)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc122)
          %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
          %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc123)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc124)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc124)
          %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc122)
          cir.break loc(#loc125)
        } loc(#loc121)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc128)
          cir.break loc(#loc129)
        } loc(#loc126)
        cir.yield loc(#loc118)
      } loc(#loc118)
    } loc(#loc278)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc132)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc281)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc281)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc281)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc283)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc144)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc284)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc142)
                  cir.yield %14 : !cir.bool loc(#loc142)
                }, false {
                  %14 = cir.const #false loc(#loc142)
                  cir.yield %14 : !cir.bool loc(#loc142)
                }) : (!cir.bool) -> !cir.bool loc(#loc142)
                cir.yield %13 : !cir.bool loc(#loc142)
              }, false {
                %10 = cir.const #false loc(#loc142)
                cir.yield %10 : !cir.bool loc(#loc142)
              }) : (!cir.bool) -> !cir.bool loc(#loc142)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc150)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc151)
              } else {
                %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc152)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc152)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc153)
              } loc(#loc285)
            } loc(#loc282)
          } loc(#loc280)
          cir.break loc(#loc154)
        } loc(#loc133)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc156)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc156)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc157)
          cir.break loc(#loc158)
        } loc(#loc155)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc279)
    cir.return loc(#loc112)
  } loc(#loc275)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc287)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc164)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc168)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc170)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc170)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc171)
          cir.break loc(#loc172)
        } loc(#loc169)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc174)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
          cir.break loc(#loc176)
        } loc(#loc173)
        cir.yield loc(#loc166)
      } loc(#loc166)
    } loc(#loc289)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc179)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc293)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc293)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc293)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc188)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc295)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc193)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc193)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc194)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc195)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc195)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc196)
              } loc(#loc296)
            } loc(#loc294)
          } loc(#loc292)
          cir.break loc(#loc197)
        } loc(#loc180)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          cir.break loc(#loc201)
        } loc(#loc198)
        cir.yield loc(#loc177)
      } loc(#loc177)
    } loc(#loc291)
    cir.return loc(#loc160)
  } loc(#loc286)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc207)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc211)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc213)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc301)
          cir.break loc(#loc215)
        } loc(#loc212)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc217)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc217)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc218)
          cir.break loc(#loc219)
        } loc(#loc216)
        cir.yield loc(#loc209)
      } loc(#loc209)
    } loc(#loc300)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc222)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc304)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc304)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc304)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc231)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc306)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc236)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc236)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc237)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc238)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc238)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc239)
              } loc(#loc307)
            } loc(#loc305)
          } loc(#loc303)
          cir.break loc(#loc240)
        } loc(#loc223)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc242)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc242)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc243)
          cir.break loc(#loc244)
        } loc(#loc241)
        cir.yield loc(#loc220)
      } loc(#loc220)
    } loc(#loc302)
    cir.return loc(#loc203)
  } loc(#loc297)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":35:19)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":51:23)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":22:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":60:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":24:5)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":24:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":26:13)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":26:12)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":27:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":37:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":27:12)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":31:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":31:16)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":32:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":33:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":35:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":36:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":38:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":59:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":38:12)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":40:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":41:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":53:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":42:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":42:30)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":52:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":45:21)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":46:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":48:9)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":50:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":47:33)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":47:26)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":47:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":51:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":54:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":55:5)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":57:19)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":57:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":58:9)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":230:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":236:1)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":232:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":232:14)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":233:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":233:14)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":234:5)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":234:14)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":235:5)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":235:14)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":99:23)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":67:1)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":104:1)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":69:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":69:9)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":71:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":71:12)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":71:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":72:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":82:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":72:12)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":74:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":76:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":76:16)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":76:23)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":77:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":78:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":80:19)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":80:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":81:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":83:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":103:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":83:12)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":85:5)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":87:19)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":87:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":88:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":89:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":90:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":101:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":91:9)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":91:30)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":100:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:21)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:23)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:26)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:34)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":93:36)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":94:9)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":96:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":98:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":95:33)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":95:26)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":95:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":99:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":102:5)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":107:1)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":144:1)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":109:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":109:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":111:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":111:12)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":111:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":112:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":122:5)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":112:12)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":114:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":116:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":116:16)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":116:23)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":117:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":118:5)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":120:19)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":120:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":121:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":123:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":143:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":123:12)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":125:5)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":126:5)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":137:5)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":127:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":127:30)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:9)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":136:9)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:21)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:23)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:26)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:34)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":129:36)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":130:9)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":132:9)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":134:9)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":131:33)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":131:26)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":131:13)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":135:23)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":135:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":138:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":139:5)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":141:19)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":141:9)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":142:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":147:1)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":186:1)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":149:5)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":149:9)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":151:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":151:12)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":151:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":152:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":163:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":152:12)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":154:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":156:19)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":156:9)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":157:9)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":158:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":161:16)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":161:9)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":162:9)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":164:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":185:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":164:12)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":166:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":167:5)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":179:5)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":168:9)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":168:30)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":178:9)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:13)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":171:21)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":172:9)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":174:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":176:9)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":173:33)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":173:26)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":173:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":177:23)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":177:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":180:5)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":181:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":183:19)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":183:9)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":184:9)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":189:1)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":228:1)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":191:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":191:9)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":193:13)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":193:12)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":193:5)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":194:5)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":205:5)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":194:12)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":196:5)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":199:16)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":199:9)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":200:9)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":201:5)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":203:19)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":203:9)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":204:9)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":206:5)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":227:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":206:12)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":208:5)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":209:5)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":221:5)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":210:9)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":210:30)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:9)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":220:9)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:13)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":213:21)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":214:9)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":216:9)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":218:9)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":215:33)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":215:26)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":215:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":219:23)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":219:13)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":222:5)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":223:5)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":225:19)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":225:9)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fscanf_15.c":226:9)
#loc245 = loc(fused[#loc1, #loc2])
#loc246 = loc(fused[#loc3, #loc4])
#loc247 = loc(fused[#loc6, #loc7])
#loc248 = loc(fused[#loc9, #loc10])
#loc249 = loc(fused[#loc12, #loc13])
#loc250 = loc(fused[#loc14, #loc15])
#loc251 = loc(fused[#loc18, #loc16])
#loc252 = loc(fused[#loc19, #loc20])
#loc253 = loc(fused[#loc29, #loc30])
#loc254 = loc(fused[#loc33, #loc34])
#loc255 = loc(fused[#loc35, #loc36])
#loc256 = loc(fused[#loc37, #loc38])
#loc257 = loc(fused[#loc39, #loc40])
#loc258 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc259 = loc(fused[#loc53, #loc54])
#loc260 = loc(fused[#loc55, #loc56])
#loc261 = loc(fused[#loc57, #loc58])
#loc262 = loc(fused[#loc59, #loc60])
#loc263 = loc(fused[#loc61, #loc62])
#loc264 = loc(fused[#loc64, #loc65])
#loc265 = loc(fused[#loc66, #loc67])
#loc266 = loc(fused[#loc70, #loc68])
#loc267 = loc(fused[#loc71, #loc72])
#loc268 = loc(fused[#loc83, #loc84])
#loc269 = loc(fused[#loc91, #loc92])
#loc270 = loc(fused[#loc93, #loc94])
#loc271 = loc(fused[#loc95, #loc96])
#loc272 = loc(fused[#loc97, #loc98])
#loc273 = loc(fused[#loc100, #loc102])
#loc274 = loc(fused[#loc103, #loc104, #loc105, #loc96])
#loc275 = loc(fused[#loc111, #loc112])
#loc276 = loc(fused[#loc113, #loc114])
#loc277 = loc(fused[#loc117, #loc115])
#loc278 = loc(fused[#loc118, #loc119])
#loc279 = loc(fused[#loc130, #loc131])
#loc280 = loc(fused[#loc134, #loc135])
#loc281 = loc(fused[#loc136, #loc137])
#loc282 = loc(fused[#loc138, #loc139])
#loc283 = loc(fused[#loc140, #loc141])
#loc284 = loc(fused[#loc143, #loc145])
#loc285 = loc(fused[#loc146, #loc147, #loc148, #loc139])
#loc286 = loc(fused[#loc159, #loc160])
#loc287 = loc(fused[#loc161, #loc162])
#loc288 = loc(fused[#loc165, #loc163])
#loc289 = loc(fused[#loc166, #loc167])
#loc290 = loc(fused[#loc175, #loc174])
#loc291 = loc(fused[#loc177, #loc178])
#loc292 = loc(fused[#loc181, #loc182])
#loc293 = loc(fused[#loc183, #loc184])
#loc294 = loc(fused[#loc185, #loc186])
#loc295 = loc(fused[#loc187, #loc188])
#loc296 = loc(fused[#loc189, #loc190, #loc191, #loc186])
#loc297 = loc(fused[#loc202, #loc203])
#loc298 = loc(fused[#loc204, #loc205])
#loc299 = loc(fused[#loc208, #loc206])
#loc300 = loc(fused[#loc209, #loc210])
#loc301 = loc(fused[#loc214, #loc213])
#loc302 = loc(fused[#loc220, #loc221])
#loc303 = loc(fused[#loc224, #loc225])
#loc304 = loc(fused[#loc226, #loc227])
#loc305 = loc(fused[#loc228, #loc229])
#loc306 = loc(fused[#loc230, #loc231])
#loc307 = loc(fused[#loc232, #loc233, #loc234, #loc229])
