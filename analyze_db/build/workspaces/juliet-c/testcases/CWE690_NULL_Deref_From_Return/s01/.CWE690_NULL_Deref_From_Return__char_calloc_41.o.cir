!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":23:21)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":23:28)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":44:25)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":44:32)
#loc75 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc41, #loc42])
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc72)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc73)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc75)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %1 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc15)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
    %5 = cir.call @strcpy(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc15)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc19)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc19)
    cir.return loc(#loc11)
  } loc(#loc74)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc27)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc28)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc28)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.call @badSink(%8) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.return loc(#loc22)
  } loc(#loc76)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc82)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc41, #loc42])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc85)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.br ^bb1 loc(#loc86)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    %4 = cir.cmp(ne, %1, %3) : !cir.ptr<!s8i>, !cir.bool loc(#loc87)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc88)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc49)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc51)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc51)
    %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc54)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb3 loc(#loc45)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc45)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc40)
  } loc(#loc84)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc62)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc63)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc63)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc92)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.call @goodB2GSink(%8) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.return loc(#loc57)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":26:18)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":29:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":24:1)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":26:12)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":27:15)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":27:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":28:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":28:10)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":31:1)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":38:1)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":33:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":33:12)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":34:12)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":34:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":36:20)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":36:27)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":36:31)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":36:42)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":36:43)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":36:5)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":37:13)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":37:5)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":65:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":68:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":67:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":67:13)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":44:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":53:1)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":45:1)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":47:5)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":52:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":47:9)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":47:17)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":48:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":49:9)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":49:16)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":49:22)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":50:19)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":50:9)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":51:9)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":51:14)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":56:1)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":63:1)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":58:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":58:12)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":59:12)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":59:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":61:20)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":61:27)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":61:31)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":61:42)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":61:43)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":61:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":62:17)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_calloc_41.c":62:5)
#loc70 = loc(fused[#loc1, #loc2])
#loc71 = loc(fused[#loc3, #loc4])
#loc72 = loc(fused[#loc6, #loc7])
#loc73 = loc(fused[#loc8, #loc9])
#loc74 = loc(fused[#loc10, #loc11])
#loc76 = loc(fused[#loc21, #loc22])
#loc77 = loc(fused[#loc23, #loc24])
#loc78 = loc(fused[#loc26, #loc25])
#loc79 = loc(fused[#loc29, #loc30])
#loc80 = loc(fused[#loc27, #loc31])
#loc81 = loc(fused[#loc32, #loc31])
#loc82 = loc(fused[#loc35, #loc36])
#loc83 = loc(fused[#loc37, #loc38])
#loc84 = loc(fused[#loc39, #loc40])
#loc86 = loc(fused[#loc44, #loc45])
#loc87 = loc(fused[#loc46, #loc47])
#loc88 = loc(fused[#loc48, #loc45])
#loc89 = loc(fused[#loc56, #loc57])
#loc90 = loc(fused[#loc58, #loc59])
#loc91 = loc(fused[#loc61, #loc60])
#loc92 = loc(fused[#loc64, #loc65])
#loc93 = loc(fused[#loc62, #loc66])
#loc94 = loc(fused[#loc67, #loc66])
