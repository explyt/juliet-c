!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc99)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc100)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_fgets_add_68_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc103)
  cir.func no_proto private @CWE190_Integer_Overflow__int_fgets_add_68b_badSink(...) loc(#loc104)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc106)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc107)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc106)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc106)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc27)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc27)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc27)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc27)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc27)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc27)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc27)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc111)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc35)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.br ^bb5 loc(#loc32)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %24 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_68_badData : !cir.ptr<!s32i> loc(#loc103)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %25 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc115)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %26() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc15)
  } loc(#loc105)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc118)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc116)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc119)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func no_proto private @CWE190_Integer_Overflow__int_fgets_add_68b_goodG2BSink(...) loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc61)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_68_goodG2BData : !cir.ptr<!s32i> loc(#loc119)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %5 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc127)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc127)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc56)
  } loc(#loc122)
  cir.func no_proto private @CWE190_Integer_Overflow__int_fgets_add_68b_goodB2GSink(...) loc(#loc128)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc130)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc130)
    cir.store %3, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc130)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc82)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc82)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc82)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc82)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc82)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc82)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc82)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
    %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc84)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc135)
    cir.brcond %18 ^bb3, ^bb4 loc(#loc136)
  ^bb3:  // pred: ^bb2
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
    %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc90)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb5 loc(#loc87)
  ^bb4:  // pred: ^bb2
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc93)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc80)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc78)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %24 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_68_goodB2GData : !cir.ptr<!s32i> loc(#loc120)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %25 = cir.get_global @CWE190_Integer_Overflow__int_fgets_add_68b_goodB2GSink : !cir.ptr<!cir.func<(...)>> loc(#loc139)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc139)
    cir.call %26() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc70)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_68a.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":46:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":22:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":22:5)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":29:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":29:57)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":31:1)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":51:1)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":37:9)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":37:45)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":33:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":33:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":35:12)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":35:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":36:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":48:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":39:9)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":47:9)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":39:19)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":39:32)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":39:49)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":39:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":39:59)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":40:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":43:9)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":45:9)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":42:25)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":42:20)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":42:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":42:36)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":46:13)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":49:57)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":49:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":50:5)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":50:56)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":96:1)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":100:1)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":98:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":98:13)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":99:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":99:13)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":23:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":23:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":24:1)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":24:5)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":58:1)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":58:61)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":62:1)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":71:1)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":64:5)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":64:9)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":66:12)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":66:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":68:12)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":68:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":69:61)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":69:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":70:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":70:60)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":59:1)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":59:61)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":74:1)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":94:1)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":80:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":80:45)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":76:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":76:9)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":78:12)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":78:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":79:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":91:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":82:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":90:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":82:19)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":82:32)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":82:49)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":82:13)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":82:59)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":83:9)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":86:9)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":88:9)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":85:25)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":85:20)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":85:13)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":85:36)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":89:23)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":89:13)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":92:61)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":92:5)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":93:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_add_68a.c":93:60)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc10, #loc11])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc14, #loc15])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc21, #loc20])
#loc109 = loc(fused[#loc22, #loc23])
#loc110 = loc(fused[#loc24, #loc25])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc113 = loc(fused[#loc36, #loc37])
#loc114 = loc(fused[#loc40, #loc39])
#loc115 = loc(fused[#loc41, #loc42])
#loc116 = loc(fused[#loc43, #loc44])
#loc117 = loc(fused[#loc45, #loc46])
#loc118 = loc(fused[#loc47, #loc48])
#loc119 = loc(fused[#loc49, #loc50])
#loc120 = loc(fused[#loc51, #loc52])
#loc121 = loc(fused[#loc53, #loc54])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc60, #loc59])
#loc125 = loc(fused[#loc62, #loc61])
#loc126 = loc(fused[#loc64, #loc63])
#loc127 = loc(fused[#loc65, #loc66])
#loc128 = loc(fused[#loc67, #loc68])
#loc129 = loc(fused[#loc69, #loc70])
#loc130 = loc(fused[#loc71, #loc72])
#loc131 = loc(fused[#loc73, #loc74])
#loc132 = loc(fused[#loc76, #loc75])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc84, #loc85])
#loc136 = loc(fused[#loc86, #loc87, #loc88, #loc80])
#loc137 = loc(fused[#loc91, #loc92])
#loc138 = loc(fused[#loc96, #loc95])
#loc139 = loc(fused[#loc97, #loc98])
