!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:48)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":275:10)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":275:14)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":275:20)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":275:32)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc434 = loc(fused[#loc176, #loc177])
#loc435 = loc(fused[#loc178, #loc179])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc366)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc367)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc368)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc369)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc370)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc371)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @close(!s32i) -> !s32i loc(#loc373)
  cir.func private @printIntLine(!s32i) loc(#loc374)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc376)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc377)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc378)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc379)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc380)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc381)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc382)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb1 loc(#loc384)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc384)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %9 ^bb3, ^bb47 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc385)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb5 loc(#loc386)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc386)
  ^bb6:  // pred: ^bb35
    %14 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %15 ^bb7, ^bb36 loc(#loc44)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc47)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb8 loc(#loc388)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc54)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc389)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc390)
  ^bb9:  // pred: ^bb8
    cir.br ^bb36 loc(#loc56)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc52)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc391)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc392)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc393)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc64)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc394)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc67)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc395)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc71)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc71)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc72)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc396)
    cir.br ^bb12 loc(#loc397)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc398)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc399)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc399)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc83)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc84)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc400)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc401)
  ^bb13:  // pred: ^bb12
    cir.br ^bb36 loc(#loc86)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc77)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc402)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc91)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc92)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc403)
    cir.brcond %51 ^bb17, ^bb18 loc(#loc404)
  ^bb17:  // pred: ^bb16
    cir.br ^bb36 loc(#loc94)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc88)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc96)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc97)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc98)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb20 loc(#loc406)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc104)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %59 ^bb21, ^bb22 loc(#loc408)
  ^bb21:  // pred: ^bb20
    cir.br ^bb36 loc(#loc106)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc102)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc109)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc109)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc109)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc109)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc109)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc109)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc109)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc110)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc409)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc112)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb24 loc(#loc411)
  ^bb24:  // pred: ^bb23
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc118)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc412)
    cir.brcond %79 ^bb25, ^bb26 loc(#loc119)
  ^bb25:  // pred: ^bb24
    %80 = cir.const #true loc(#loc119)
    cir.br ^bb31(%80 : !cir.bool) loc(#loc119)
  ^bb26:  // pred: ^bb24
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %83 ^bb27, ^bb28 loc(#loc119)
  ^bb27:  // pred: ^bb26
    %84 = cir.const #true loc(#loc119)
    cir.br ^bb29(%84 : !cir.bool) loc(#loc119)
  ^bb28:  // pred: ^bb26
    %85 = cir.const #false loc(#loc119)
    cir.br ^bb29(%85 : !cir.bool) loc(#loc119)
  ^bb29(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc119)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%86 : !cir.bool) loc(#loc119)
  ^bb31(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc119)
  ^bb32:  // pred: ^bb31
    cir.brcond %87 ^bb33, ^bb34 loc(#loc414)
  ^bb33:  // pred: ^bb32
    cir.br ^bb36 loc(#loc123)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc116)
  ^bb35:  // pred: ^bb34
    %88 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc124)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc415)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc128)
    cir.store %94, %6 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    cir.br ^bb6 loc(#loc43)
  ^bb36:  // 6 preds: ^bb6, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb37 loc(#loc43)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc417)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %97 = cir.unary(minus, %96) : !s32i, !s32i loc(#loc134)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc418)
    cir.brcond %98 ^bb39, ^bb40 loc(#loc419)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc137)
    cir.br ^bb40 loc(#loc132)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc132)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc420)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %103 = cir.unary(minus, %102) : !s32i, !s32i loc(#loc141)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc421)
    cir.brcond %104 ^bb43, ^bb44 loc(#loc422)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc144)
    cir.br ^bb44 loc(#loc139)
  ^bb44:  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc139)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc41)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc145)
  ^bb47:  // 2 preds: ^bb2, ^bb46
    cir.br ^bb48 loc(#loc38)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc423)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc423)
  ^bb50:  // pred: ^bb49
    %107 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %108 = cir.cast(int_to_bool, %107 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %108 ^bb51, ^bb56 loc(#loc148)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc424)
  ^bb52:  // pred: ^bb51
    %109 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %111 = cir.cmp(gt, %109, %110) : !s32i, !cir.bool loc(#loc425)
    cir.brcond %111 ^bb53, ^bb54 loc(#loc426)
  ^bb53:  // pred: ^bb52
    %112 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %113 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %114 = cir.binop(mul, %112, %113) nsw : !s32i loc(#loc154)
    cir.store %114, %5 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    %115 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.call @printIntLine(%115) : (!s32i) -> () loc(#loc156)
    cir.br ^bb54 loc(#loc150)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc150)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc157)
  ^bb56:  // 2 preds: ^bb50, ^bb55
    cir.br ^bb57 loc(#loc147)
  ^bb57:  // pred: ^bb56
    cir.return loc(#loc20)
  } loc(#loc375)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc428)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    cir.return loc(#loc159)
  } loc(#loc427)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc430)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc431)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc173)
  cir.func @main(%arg0: !s32i loc(fused[#loc176, #loc177]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc178, #loc179])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc435)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc175)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc181)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc182)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc182)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc183)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc436)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_multiply_16_good() : () -> () loc(#loc185)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc171)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc172)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc437)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_multiply_16_bad() : () -> () loc(#loc189)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc173)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    cir.return %17 : !s32i loc(#loc438)
  } loc(#loc433)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc194)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc440)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc441)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc442)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc443)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc444)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc445)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc446)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc211)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.br ^bb1 loc(#loc448)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc448)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %9 ^bb3, ^bb47 loc(#loc215)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc449)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc202)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc204)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    cir.br ^bb5 loc(#loc450)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc450)
  ^bb6:  // pred: ^bb35
    %14 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc220)
    cir.brcond %15 ^bb7, ^bb36 loc(#loc220)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc221)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc223)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc224)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.br ^bb8 loc(#loc452)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc230)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc454)
  ^bb9:  // pred: ^bb8
    cir.br ^bb36 loc(#loc232)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc228)
  ^bb11:  // pred: ^bb10
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc455)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc235)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc456)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc457)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc240)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc240)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc458)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc242)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc242)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc459)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc244)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc244)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc245)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc460)
    cir.br ^bb12 loc(#loc461)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc462)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc463)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc463)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc255)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc256)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc464)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc465)
  ^bb13:  // pred: ^bb12
    cir.br ^bb36 loc(#loc258)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc249)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc466)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc262)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc263)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc264)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %51 ^bb17, ^bb18 loc(#loc468)
  ^bb17:  // pred: ^bb16
    cir.br ^bb36 loc(#loc266)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc260)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc268)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc269)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc270)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    cir.br ^bb20 loc(#loc470)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc276)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc471)
    cir.brcond %59 ^bb21, ^bb22 loc(#loc472)
  ^bb21:  // pred: ^bb20
    cir.br ^bb36 loc(#loc278)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc274)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc280)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc280)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc281)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc281)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc281)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc281)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc281)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc281)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc281)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc282)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc473)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc283)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc284)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc284)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    cir.br ^bb24 loc(#loc475)
  ^bb24:  // pred: ^bb23
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc290)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc290)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc476)
    cir.brcond %79 ^bb25, ^bb26 loc(#loc291)
  ^bb25:  // pred: ^bb24
    %80 = cir.const #true loc(#loc291)
    cir.br ^bb31(%80 : !cir.bool) loc(#loc291)
  ^bb26:  // pred: ^bb24
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc293)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc477)
    cir.brcond %83 ^bb27, ^bb28 loc(#loc291)
  ^bb27:  // pred: ^bb26
    %84 = cir.const #true loc(#loc291)
    cir.br ^bb29(%84 : !cir.bool) loc(#loc291)
  ^bb28:  // pred: ^bb26
    %85 = cir.const #false loc(#loc291)
    cir.br ^bb29(%85 : !cir.bool) loc(#loc291)
  ^bb29(%86: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc291)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%86 : !cir.bool) loc(#loc291)
  ^bb31(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc291)
  ^bb32:  // pred: ^bb31
    cir.brcond %87 ^bb33, ^bb34 loc(#loc478)
  ^bb33:  // pred: ^bb32
    cir.br ^bb36 loc(#loc295)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc288)
  ^bb35:  // pred: ^bb34
    %88 = cir.const #cir.int<0> : !s32i loc(#loc296)
    %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc296)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc298)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc298)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc479)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc299)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc300)
    cir.store %94, %6 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    cir.br ^bb6 loc(#loc219)
  ^bb36:  // 6 preds: ^bb6, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb37 loc(#loc219)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc481)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc306)
    %97 = cir.unary(minus, %96) : !s32i, !s32i loc(#loc306)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc482)
    cir.brcond %98 ^bb39, ^bb40 loc(#loc483)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc309)
    cir.br ^bb40 loc(#loc304)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc304)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc484)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc313)
    %103 = cir.unary(minus, %102) : !s32i, !s32i loc(#loc313)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %104 ^bb43, ^bb44 loc(#loc486)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc316)
    cir.br ^bb44 loc(#loc311)
  ^bb44:  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc311)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc217)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc317)
  ^bb47:  // 2 preds: ^bb2, ^bb46
    cir.br ^bb48 loc(#loc214)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc487)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc487)
  ^bb50:  // pred: ^bb49
    %107 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %108 = cir.cast(int_to_bool, %107 : !s32i), !cir.bool loc(#loc320)
    cir.brcond %108 ^bb51, ^bb61 loc(#loc320)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc488)
  ^bb52:  // pred: ^bb51
    %109 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc324)
    %111 = cir.cmp(gt, %109, %110) : !s32i, !cir.bool loc(#loc489)
    cir.brcond %111 ^bb53, ^bb59 loc(#loc490)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc491)
  ^bb54:  // pred: ^bb53
    %112 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc328)
    %113 = cir.const #cir.int<2147483647> : !s32i loc(#loc329)
    %114 = cir.const #cir.int<2> : !s32i loc(#loc330)
    %115 = cir.binop(div, %113, %114) : !s32i loc(#loc492)
    %116 = cir.cmp(lt, %112, %115) : !s32i, !cir.bool loc(#loc493)
    cir.brcond %116 ^bb55, ^bb56 loc(#loc494)
  ^bb55:  // pred: ^bb54
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %118 = cir.const #cir.int<2> : !s32i loc(#loc208)
    %119 = cir.binop(mul, %117, %118) nsw : !s32i loc(#loc335)
    cir.store %119, %5 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    %120 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc336)
    cir.call @printIntLine(%120) : (!s32i) -> () loc(#loc337)
    cir.br ^bb57 loc(#loc333)
  ^bb56:  // pred: ^bb54
    %121 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc194)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%122) : (!cir.ptr<!s8i>) -> () loc(#loc338)
    cir.br ^bb57 loc(#loc327)
  ^bb57:  // 2 preds: ^bb55, ^bb56
    cir.br ^bb58 loc(#loc327)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc322)
  ^bb59:  // 2 preds: ^bb52, ^bb58
    cir.br ^bb60 loc(#loc322)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc339)
  ^bb61:  // 2 preds: ^bb50, ^bb60
    cir.br ^bb62 loc(#loc319)
  ^bb62:  // pred: ^bb61
    cir.return loc(#loc196)
  } loc(#loc439)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc497)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc346)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc498)
    cir.br ^bb1 loc(#loc499)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc499)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc350)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc350)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<2> : !s32i loc(#loc351)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.br ^bb4 loc(#loc353)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc349)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc501)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc501)
  ^bb7:  // pred: ^bb6
    %6 = cir.const #cir.int<1> : !s32i loc(#loc356)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc356)
    cir.brcond %7 ^bb8, ^bb13 loc(#loc356)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc502)
  ^bb9:  // pred: ^bb8
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc360)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc503)
    cir.brcond %10 ^bb10, ^bb11 loc(#loc504)
  ^bb10:  // pred: ^bb9
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc343)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc362)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc496)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc364)
    cir.br ^bb11 loc(#loc358)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc358)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc365)
  ^bb13:  // 2 preds: ^bb7, ^bb12
    cir.br ^bb14 loc(#loc355)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc341)
  } loc(#loc495)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":44:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":132:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":56:13)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":56:17)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":57:13)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":57:32)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":58:13)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":58:35)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":59:13)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":59:35)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":60:13)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":60:45)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":127:13)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":127:33)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":46:5)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":46:9)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":48:12)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":48:5)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":49:5)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":121:5)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":49:11)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":51:9)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":119:9)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":61:13)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":104:21)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":104:20)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":71:39)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":71:48)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":71:61)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":71:32)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":71:17)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":71:72)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":72:17)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":75:17)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":72:21)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":72:37)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":73:17)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":74:21)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:24)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:25)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:34)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:37)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:51)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:17)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":76:52)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":77:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":77:17)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":78:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":78:17)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":79:42)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":79:36)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":79:17)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":79:50)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:17)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":83:17)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:26)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:58)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:59)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:68)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:82)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:21)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":80:88)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":81:17)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":82:21)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":84:17)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":87:17)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":84:28)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":84:42)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":84:21)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":84:61)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":85:17)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":86:21)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":88:39)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":88:53)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":88:59)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":88:32)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":88:17)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":88:63)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":89:17)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":92:17)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":89:21)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":89:37)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":90:17)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":91:21)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:35)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:49)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:62)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:80)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:83)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:30)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:17)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":94:84)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:17)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":98:17)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:21)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:35)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:51)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":95:65)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":96:17)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":97:21)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":100:43)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":100:29)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":100:17)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":102:29)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":102:24)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":102:17)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":102:40)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":105:13)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":108:13)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":105:17)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":105:33)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":106:13)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":107:30)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":107:17)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":109:13)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":112:13)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":109:17)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":109:33)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":110:13)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":111:30)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":111:17)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":120:9)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":122:5)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":131:5)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":122:11)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":124:9)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":129:9)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":124:12)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":124:19)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":125:9)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":127:26)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":128:26)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":128:13)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":130:9)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":260:1)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":264:1)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":262:5)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":262:13)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":263:5)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":263:13)
#loc164 = loc("/usr/include/stdlib.h":575:1)
#loc165 = loc("/usr/include/stdlib.h":575:41)
#loc166 = loc("/usr/include/time.h":76:1)
#loc167 = loc("/usr/include/time.h":76:38)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc169 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":280:15)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":282:15)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":285:15)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":287:15)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":275:1)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":290:1)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":276:1)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":278:27)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":278:22)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":278:5)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":280:5)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":281:5)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":281:65)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":282:5)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":285:5)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":286:5)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":286:64)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":287:5)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":289:12)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":289:5)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":229:27)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":139:1)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":234:1)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":151:13)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":151:17)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":152:13)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":152:32)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":153:13)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":153:35)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":154:13)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":154:35)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":155:13)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":155:45)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":224:17)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":224:37)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":141:5)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":141:9)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":143:12)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":143:5)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":144:5)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":216:5)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":144:11)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":146:9)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":214:9)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":156:13)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":199:21)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":199:20)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":166:39)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":166:48)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":166:61)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":166:32)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":166:17)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":166:72)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":167:17)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":170:17)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":167:21)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":167:37)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":168:17)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":169:21)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:24)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:25)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:34)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:37)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:51)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:17)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":171:52)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":172:38)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":172:17)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":173:43)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":173:17)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":174:42)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":174:36)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":174:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":174:50)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:17)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":178:17)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:26)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:58)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:59)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:68)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:82)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:21)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":175:88)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":176:17)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":177:21)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":179:17)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":182:17)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":179:28)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":179:42)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":179:21)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":179:61)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":180:17)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":181:21)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":183:39)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":183:53)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":183:59)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":183:32)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":183:17)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":183:63)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":184:17)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":187:17)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":184:21)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":184:37)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":185:17)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":186:21)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:35)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:49)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:62)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:80)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:83)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:30)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:17)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":189:84)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:17)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":193:17)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:21)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:35)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:51)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":190:65)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":191:17)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":192:21)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":195:43)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":195:29)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":195:17)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":197:29)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":197:24)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":197:17)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":197:40)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":200:13)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":203:13)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":200:17)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":200:33)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":201:13)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":202:30)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":202:17)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":204:13)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":207:13)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":204:17)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":204:33)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":205:13)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":206:30)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":206:17)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":215:9)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":217:5)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":233:5)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":217:11)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":219:9)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":231:9)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":219:12)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":219:19)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":220:9)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":222:13)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":230:13)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":222:17)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":222:25)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":222:33)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":222:34)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":223:13)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":226:13)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":228:13)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":224:30)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":225:30)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":225:17)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":229:17)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":232:9)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":237:1)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":258:1)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":253:13)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":253:33)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":239:5)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":239:9)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":241:12)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":241:5)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":242:5)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":247:5)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":242:11)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":245:16)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":245:9)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":246:9)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":248:5)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":257:5)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":248:11)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":250:9)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":255:9)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":250:12)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":250:19)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":251:9)
#loc362 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":253:26)
#loc363 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":254:26)
#loc364 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":254:13)
#loc365 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_16.c":256:9)
#loc366 = loc(fused[#loc1, #loc2])
#loc367 = loc(fused[#loc3, #loc4])
#loc368 = loc(fused[#loc5, #loc6])
#loc369 = loc(fused[#loc7, #loc8])
#loc370 = loc(fused[#loc9, #loc10])
#loc371 = loc(fused[#loc11, #loc12])
#loc372 = loc(fused[#loc13, #loc14])
#loc373 = loc(fused[#loc15, #loc16])
#loc374 = loc(fused[#loc17, #loc18])
#loc375 = loc(fused[#loc19, #loc20])
#loc376 = loc(fused[#loc21, #loc22])
#loc377 = loc(fused[#loc23, #loc24])
#loc378 = loc(fused[#loc25, #loc26])
#loc379 = loc(fused[#loc27, #loc28])
#loc380 = loc(fused[#loc29, #loc30])
#loc381 = loc(fused[#loc31, #loc32])
#loc382 = loc(fused[#loc33, #loc34])
#loc383 = loc(fused[#loc36, #loc35])
#loc384 = loc(fused[#loc37, #loc38])
#loc385 = loc(fused[#loc40, #loc41])
#loc386 = loc(fused[#loc42, #loc43])
#loc387 = loc(fused[#loc49, #loc50])
#loc388 = loc(fused[#loc51, #loc52])
#loc389 = loc(fused[#loc53, #loc54])
#loc390 = loc(fused[#loc55, #loc52])
#loc391 = loc(fused[#loc57, #loc58])
#loc392 = loc(fused[#loc60, #loc61])
#loc393 = loc(fused[#loc62, #loc63])
#loc394 = loc(fused[#loc66, #loc64])
#loc395 = loc(fused[#loc70, #loc67])
#loc396 = loc(fused[#loc74, #loc75])
#loc397 = loc(fused[#loc76, #loc77])
#loc398 = loc(fused[#loc79, #loc80])
#loc399 = loc(fused[#loc81, #loc82])
#loc400 = loc(fused[#loc83, #loc84])
#loc401 = loc(fused[#loc85, #loc77])
#loc402 = loc(fused[#loc87, #loc88])
#loc403 = loc(fused[#loc91, #loc92])
#loc404 = loc(fused[#loc93, #loc88])
#loc405 = loc(fused[#loc99, #loc100])
#loc406 = loc(fused[#loc101, #loc102])
#loc407 = loc(fused[#loc103, #loc104])
#loc408 = loc(fused[#loc105, #loc102])
#loc409 = loc(fused[#loc109, #loc110])
#loc410 = loc(fused[#loc113, #loc114])
#loc411 = loc(fused[#loc115, #loc116])
#loc412 = loc(fused[#loc117, #loc118])
#loc413 = loc(fused[#loc120, #loc121])
#loc414 = loc(fused[#loc122, #loc116])
#loc415 = loc(fused[#loc126, #loc124])
#loc416 = loc(fused[#loc129, #loc130])
#loc417 = loc(fused[#loc131, #loc132])
#loc418 = loc(fused[#loc133, #loc134])
#loc419 = loc(fused[#loc135, #loc132])
#loc420 = loc(fused[#loc138, #loc139])
#loc421 = loc(fused[#loc140, #loc141])
#loc422 = loc(fused[#loc142, #loc139])
#loc423 = loc(fused[#loc146, #loc147])
#loc424 = loc(fused[#loc149, #loc150])
#loc425 = loc(fused[#loc151, #loc152])
#loc426 = loc(fused[#loc153, #loc150])
#loc427 = loc(fused[#loc158, #loc159])
#loc428 = loc(fused[#loc160, #loc161])
#loc429 = loc(fused[#loc162, #loc163])
#loc430 = loc(fused[#loc164, #loc165])
#loc431 = loc(fused[#loc166, #loc167])
#loc432 = loc(fused[#loc168, #loc169])
#loc433 = loc(fused[#loc174, #loc175])
#loc436 = loc(fused[#loc185, #loc186])
#loc437 = loc(fused[#loc189, #loc190])
#loc438 = loc(fused[#loc193, #loc192])
#loc439 = loc(fused[#loc195, #loc196])
#loc440 = loc(fused[#loc197, #loc198])
#loc441 = loc(fused[#loc199, #loc200])
#loc442 = loc(fused[#loc201, #loc202])
#loc443 = loc(fused[#loc203, #loc204])
#loc444 = loc(fused[#loc205, #loc206])
#loc445 = loc(fused[#loc207, #loc208])
#loc446 = loc(fused[#loc209, #loc210])
#loc447 = loc(fused[#loc212, #loc211])
#loc448 = loc(fused[#loc213, #loc214])
#loc449 = loc(fused[#loc216, #loc217])
#loc450 = loc(fused[#loc218, #loc219])
#loc451 = loc(fused[#loc225, #loc226])
#loc452 = loc(fused[#loc227, #loc228])
#loc453 = loc(fused[#loc229, #loc230])
#loc454 = loc(fused[#loc231, #loc228])
#loc455 = loc(fused[#loc233, #loc234])
#loc456 = loc(fused[#loc236, #loc237])
#loc457 = loc(fused[#loc238, #loc239])
#loc458 = loc(fused[#loc241, #loc240])
#loc459 = loc(fused[#loc243, #loc242])
#loc460 = loc(fused[#loc246, #loc247])
#loc461 = loc(fused[#loc248, #loc249])
#loc462 = loc(fused[#loc251, #loc252])
#loc463 = loc(fused[#loc253, #loc254])
#loc464 = loc(fused[#loc255, #loc256])
#loc465 = loc(fused[#loc257, #loc249])
#loc466 = loc(fused[#loc259, #loc260])
#loc467 = loc(fused[#loc263, #loc264])
#loc468 = loc(fused[#loc265, #loc260])
#loc469 = loc(fused[#loc271, #loc272])
#loc470 = loc(fused[#loc273, #loc274])
#loc471 = loc(fused[#loc275, #loc276])
#loc472 = loc(fused[#loc277, #loc274])
#loc473 = loc(fused[#loc281, #loc282])
#loc474 = loc(fused[#loc285, #loc286])
#loc475 = loc(fused[#loc287, #loc288])
#loc476 = loc(fused[#loc289, #loc290])
#loc477 = loc(fused[#loc292, #loc293])
#loc478 = loc(fused[#loc294, #loc288])
#loc479 = loc(fused[#loc298, #loc296])
#loc480 = loc(fused[#loc301, #loc302])
#loc481 = loc(fused[#loc303, #loc304])
#loc482 = loc(fused[#loc305, #loc306])
#loc483 = loc(fused[#loc307, #loc304])
#loc484 = loc(fused[#loc310, #loc311])
#loc485 = loc(fused[#loc312, #loc313])
#loc486 = loc(fused[#loc314, #loc311])
#loc487 = loc(fused[#loc318, #loc319])
#loc488 = loc(fused[#loc321, #loc322])
#loc489 = loc(fused[#loc323, #loc324])
#loc490 = loc(fused[#loc325, #loc322])
#loc491 = loc(fused[#loc326, #loc327])
#loc492 = loc(fused[#loc329, #loc330])
#loc493 = loc(fused[#loc328, #loc331])
#loc494 = loc(fused[#loc332, #loc333, #loc334, #loc327])
#loc495 = loc(fused[#loc340, #loc341])
#loc496 = loc(fused[#loc342, #loc343])
#loc497 = loc(fused[#loc344, #loc345])
#loc498 = loc(fused[#loc347, #loc346])
#loc499 = loc(fused[#loc348, #loc349])
#loc500 = loc(fused[#loc352, #loc351])
#loc501 = loc(fused[#loc354, #loc355])
#loc502 = loc(fused[#loc357, #loc358])
#loc503 = loc(fused[#loc359, #loc360])
#loc504 = loc(fused[#loc361, #loc358])
