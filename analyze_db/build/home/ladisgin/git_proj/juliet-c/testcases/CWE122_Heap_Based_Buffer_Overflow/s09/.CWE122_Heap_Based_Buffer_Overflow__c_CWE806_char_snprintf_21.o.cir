!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":32:25)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":32:32)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":68:30)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":68:37)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":101:30)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":101:37)
#loc213 = loc(fused[#loc9, #loc10])
#loc241 = loc(fused[#loc86, #loc87])
#loc262 = loc(fused[#loc151, #loc152])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc209)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc210)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc211)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc17)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc18)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc18)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc216)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc22)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc24)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb3 loc(#loc13)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc218)
  } loc(#loc212)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc219)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc33)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc221)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc222)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc224)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc44)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc45)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc226)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc227)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc231)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc55)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc57)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb3 loc(#loc51)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc51)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %17 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc211)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %19 = cir.call @badSource(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc61)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    cir.br ^bb5 loc(#loc235)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc224)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc224)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc66)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc67)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc68)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc68)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc33)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc33)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %29 = cir.call @snprintf(%22, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc66)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb6 loc(#loc65)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc39)
  } loc(#loc223)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc236)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc83)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc86, #loc87])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc85)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc239)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc243)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc83)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb4 loc(#loc93)
  ^bb3:  // pred: ^bb1
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc97)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc98)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc244)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc102)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc104)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc245)
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
    cir.return %22 : !cir.ptr<!s8i> loc(#loc246)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc248)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc115)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc116)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc250)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc251)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc255)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc256)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc126)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc128)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
    cir.br ^bb3 loc(#loc122)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %17 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc239)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %19 = cir.call @goodG2B1Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc132)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.br ^bb5 loc(#loc259)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc248)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc248)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc137)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc139)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc139)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc141)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc141)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %29 = cir.call @snprintf(%22, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc137)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc145)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
    cir.br ^bb6 loc(#loc136)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc110)
  } loc(#loc247)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc260)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc151, #loc152])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc150)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc260)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc156)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc264)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc159)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc160)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc160)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc160)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc265)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc164)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc166)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc166)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc168)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc266)
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc267)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc267)
  } loc(#loc261)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc177)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc178)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc271)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc272)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc273)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
    cir.br ^bb1 loc(#loc275)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc186)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc277)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc188)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc190)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc188)
    cir.br ^bb3 loc(#loc184)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %17 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc260)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
    %19 = cir.call @goodG2B2Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc194)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    cir.br ^bb5 loc(#loc280)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc269)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc269)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc199)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc200)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc201)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc201)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc203)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc203)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
    %29 = cir.call @snprintf(%22, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc199)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc207)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc208)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc207)
    cir.br ^bb6 loc(#loc198)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc172)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":30:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":30:24)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":32:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":41:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":33:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":34:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":39:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":34:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":35:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":37:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":37:22)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":37:27)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":37:31)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":37:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":37:32)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":38:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":38:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":38:14)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":38:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":38:19)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":40:12)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":40:5)
#loc29 = loc("/usr/include/stdio.h":385:1)
#loc30 = loc("/usr/include/stdio.h":387:62)
#loc31 = loc("/usr/include/string.h":407:1)
#loc32 = loc("/usr/include/string.h":408:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":53:38)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("/usr/include/stdlib.h":687:1)
#loc37 = loc("/usr/include/stdlib.h":687:32)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":43:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":57:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":51:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":51:25)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":45:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":45:12)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":46:20)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":46:27)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":46:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":46:42)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":46:43)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":46:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:33)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:17)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:23)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:30)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":47:29)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":48:17)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":48:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":49:22)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":49:12)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":49:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":49:26)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":50:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":56:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":53:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":53:18)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":53:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":53:31)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":53:44)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":54:19)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":54:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":55:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":55:14)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":128:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":132:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":130:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":130:14)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":131:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":131:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":64:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":64:29)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":73:19)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":68:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":82:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":69:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":70:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":80:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":70:8)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":71:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":74:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":76:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":73:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":78:16)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":78:22)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":78:27)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":78:30)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":78:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":78:31)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":79:22)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":79:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":79:14)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":79:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":79:18)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":81:12)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":81:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":84:1)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":98:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":92:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":92:25)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":86:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":86:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":87:20)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":87:27)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":87:31)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":87:42)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":87:43)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":87:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:33)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:17)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:24)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:30)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":88:29)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":89:22)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":89:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":90:27)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":90:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":90:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":90:31)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":91:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":97:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":94:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":94:18)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":94:24)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":94:31)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":94:38)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":94:44)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":95:19)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":95:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":96:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":96:14)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":65:1)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":65:29)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":101:1)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":110:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":102:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":103:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":108:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":103:8)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":104:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":106:16)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":106:22)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":106:27)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":106:30)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":106:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":106:31)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":107:22)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":107:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":107:14)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":107:17)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":107:18)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":109:12)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":109:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":112:1)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":126:1)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":120:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":120:25)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":114:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":114:12)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":115:20)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":115:27)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":115:31)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":115:42)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":115:43)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":115:5)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:5)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:33)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:23)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:24)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:30)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":116:29)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":117:22)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":117:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":118:27)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":118:12)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":118:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":118:31)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":119:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":125:5)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":122:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":122:18)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":122:24)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":122:31)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":122:38)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":122:44)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":123:19)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":123:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":124:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_21.c":124:14)
#loc209 = loc(fused[#loc1, #loc2])
#loc210 = loc(fused[#loc3, #loc4])
#loc211 = loc(fused[#loc5, #loc6])
#loc212 = loc(fused[#loc7, #loc8])
#loc214 = loc(fused[#loc12, #loc13])
#loc215 = loc(fused[#loc15, #loc13])
#loc216 = loc(fused[#loc20, #loc21])
#loc217 = loc(fused[#loc23, #loc22])
#loc218 = loc(fused[#loc28, #loc27])
#loc219 = loc(fused[#loc29, #loc30])
#loc220 = loc(fused[#loc31, #loc32])
#loc221 = loc(fused[#loc34, #loc35])
#loc222 = loc(fused[#loc36, #loc37])
#loc223 = loc(fused[#loc38, #loc39])
#loc224 = loc(fused[#loc40, #loc41])
#loc225 = loc(fused[#loc42, #loc43])
#loc226 = loc(fused[#loc46, #loc47])
#loc227 = loc(fused[#loc45, #loc47])
#loc228 = loc(fused[#loc44, #loc48])
#loc229 = loc(fused[#loc49, #loc48])
#loc230 = loc(fused[#loc50, #loc51])
#loc231 = loc(fused[#loc52, #loc53])
#loc232 = loc(fused[#loc54, #loc51])
#loc233 = loc(fused[#loc59, #loc58])
#loc234 = loc(fused[#loc62, #loc63])
#loc235 = loc(fused[#loc64, #loc65])
#loc236 = loc(fused[#loc75, #loc76])
#loc237 = loc(fused[#loc77, #loc78])
#loc238 = loc(fused[#loc79, #loc80])
#loc239 = loc(fused[#loc81, #loc82])
#loc240 = loc(fused[#loc84, #loc85])
#loc242 = loc(fused[#loc89, #loc90])
#loc243 = loc(fused[#loc92, #loc93, #loc94, #loc90])
#loc244 = loc(fused[#loc100, #loc101])
#loc245 = loc(fused[#loc103, #loc102])
#loc246 = loc(fused[#loc108, #loc107])
#loc247 = loc(fused[#loc109, #loc110])
#loc248 = loc(fused[#loc111, #loc112])
#loc249 = loc(fused[#loc113, #loc114])
#loc250 = loc(fused[#loc117, #loc118])
#loc251 = loc(fused[#loc116, #loc118])
#loc252 = loc(fused[#loc115, #loc119])
#loc253 = loc(fused[#loc120, #loc119])
#loc254 = loc(fused[#loc121, #loc122])
#loc255 = loc(fused[#loc123, #loc124])
#loc256 = loc(fused[#loc125, #loc122])
#loc257 = loc(fused[#loc130, #loc129])
#loc258 = loc(fused[#loc133, #loc134])
#loc259 = loc(fused[#loc135, #loc136])
#loc260 = loc(fused[#loc147, #loc148])
#loc261 = loc(fused[#loc149, #loc150])
#loc263 = loc(fused[#loc154, #loc155])
#loc264 = loc(fused[#loc157, #loc155])
#loc265 = loc(fused[#loc162, #loc163])
#loc266 = loc(fused[#loc165, #loc164])
#loc267 = loc(fused[#loc170, #loc169])
#loc268 = loc(fused[#loc171, #loc172])
#loc269 = loc(fused[#loc173, #loc174])
#loc270 = loc(fused[#loc175, #loc176])
#loc271 = loc(fused[#loc179, #loc180])
#loc272 = loc(fused[#loc178, #loc180])
#loc273 = loc(fused[#loc177, #loc181])
#loc274 = loc(fused[#loc182, #loc181])
#loc275 = loc(fused[#loc183, #loc184])
#loc276 = loc(fused[#loc185, #loc186])
#loc277 = loc(fused[#loc187, #loc184])
#loc278 = loc(fused[#loc192, #loc191])
#loc279 = loc(fused[#loc195, #loc196])
#loc280 = loc(fused[#loc197, #loc198])
