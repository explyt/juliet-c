!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":23:68)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":23:75)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":51:72)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":51:79)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":91:10)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":91:14)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":91:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":91:32)
#loc151 = loc(fused[#loc9, #loc10])
#loc170 = loc(fused[#loc65, #loc66])
#loc180 = loc(fused[#loc103, #loc104])
#loc181 = loc(fused[#loc105, #loc106])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc149)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc17)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc18)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc22)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc23)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc26)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc150)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc41)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc43)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc44)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc44)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc161)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc162)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc56)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb3 loc(#loc50)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc57)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_badSink(%21) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.return loc(#loc38)
  } loc(#loc158)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc73)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc74)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc74)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc78)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc79)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc82)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc64)
  } loc(#loc169)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc177)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.return %17 : !s32i loc(#loc184)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc125)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc127)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc128)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc188)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc189)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc193)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc138)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc140)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc141)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc144)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41_goodG2BSink(%21) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.return loc(#loc122)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":23:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":34:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":26:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":26:24)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":24:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":25:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":33:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":27:16)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":27:24)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":27:29)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":27:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":27:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":27:34)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":28:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":28:16)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":28:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":28:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":30:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":30:16)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":30:22)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":31:19)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":31:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":32:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":32:14)
#loc33 = loc("/usr/include/stdlib.h":672:1)
#loc34 = loc("/usr/include/stdlib.h":672:45)
#loc35 = loc("/usr/include/stdlib.h":756:1)
#loc36 = loc("/usr/include/stdlib.h":756:70)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":36:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":45:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":38:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":38:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":39:12)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":39:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":41:20)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":41:27)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":41:30)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":41:41)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":41:42)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":41:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:23)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:24)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":42:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":43:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":43:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":43:10)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":43:11)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":44:67)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":44:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":51:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":62:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":54:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":54:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":52:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":53:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":61:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":55:16)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":55:24)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":55:29)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":55:33)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":55:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":55:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":56:25)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":56:16)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":56:20)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":56:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":58:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":58:16)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":58:22)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":59:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":59:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":60:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":60:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":76:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":79:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":78:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":78:13)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":96:15)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":98:15)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":101:15)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":103:15)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":91:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":106:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":92:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":94:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":94:22)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":94:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":96:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":97:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":97:64)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":98:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":101:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":102:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":102:63)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":103:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":105:12)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":105:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":65:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":74:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":67:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":67:12)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":68:12)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":68:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":70:20)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":70:27)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":70:31)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":70:42)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":70:43)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":70:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:33)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:17)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:23)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:24)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:30)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":71:29)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":72:15)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":72:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":72:10)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":72:11)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":73:71)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_41.c":73:5)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc14, #loc15])
#loc154 = loc(fused[#loc20, #loc21])
#loc155 = loc(fused[#loc25, #loc22])
#loc156 = loc(fused[#loc33, #loc34])
#loc157 = loc(fused[#loc35, #loc36])
#loc158 = loc(fused[#loc37, #loc38])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc42, #loc41])
#loc161 = loc(fused[#loc45, #loc46])
#loc162 = loc(fused[#loc44, #loc46])
#loc163 = loc(fused[#loc43, #loc47])
#loc164 = loc(fused[#loc48, #loc47])
#loc165 = loc(fused[#loc49, #loc50])
#loc166 = loc(fused[#loc51, #loc52])
#loc167 = loc(fused[#loc53, #loc50])
#loc168 = loc(fused[#loc58, #loc57])
#loc169 = loc(fused[#loc63, #loc64])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc70, #loc71])
#loc173 = loc(fused[#loc76, #loc77])
#loc174 = loc(fused[#loc81, #loc78])
#loc175 = loc(fused[#loc89, #loc90])
#loc176 = loc(fused[#loc91, #loc92])
#loc177 = loc(fused[#loc93, #loc94])
#loc178 = loc(fused[#loc95, #loc96])
#loc179 = loc(fused[#loc101, #loc102])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc120, #loc119])
#loc185 = loc(fused[#loc121, #loc122])
#loc186 = loc(fused[#loc123, #loc124])
#loc187 = loc(fused[#loc126, #loc125])
#loc188 = loc(fused[#loc129, #loc130])
#loc189 = loc(fused[#loc128, #loc130])
#loc190 = loc(fused[#loc127, #loc131])
#loc191 = loc(fused[#loc132, #loc131])
#loc192 = loc(fused[#loc133, #loc134])
#loc193 = loc(fused[#loc135, #loc136])
#loc194 = loc(fused[#loc137, #loc134])
#loc195 = loc(fused[#loc142, #loc141])
