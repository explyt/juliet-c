!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc65)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc66)
  cir.func private @printIntLine(!s32i) loc(#loc67)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc70)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc71)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.br ^bb2 loc(#loc72)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc74)
    cir.brcond %7 ^bb3, ^bb9 loc(#loc21)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc66)
    cir.copy %8 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc66)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc10)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc28)
    %15 = cir.cast(integral, %14 : !s8i), !s32i loc(#loc28)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc30)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc32)
    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.br ^bb2 loc(#loc72)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc68)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc79)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc78)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc65)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc81)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc82)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc86)
    cir.brcond %7 ^bb3, ^bb9 loc(#loc51)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc65)
    cir.copy %8 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc65)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc40)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc40)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc56)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc89)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc90)
    %16 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    %17 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc60)
    %18 = cir.cast(integral, %17 : !s8i), !s32i loc(#loc60)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc62)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc46)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc64)
    cir.store %21, %3 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.br ^bb2 loc(#loc84)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc46)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc38)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":47:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":47:47)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":26:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":26:47)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":20:1)
#loc8 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":34:1)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":27:13)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":27:41)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":30:13)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":30:50)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":22:5)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":22:9)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:5)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":33:5)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:13)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:9)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:16)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:20)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:18)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":24:5)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":25:9)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":32:9)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":30:36)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":30:48)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":30:47)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":30:34)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":31:26)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":31:13)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:24)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":23:23)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":57:1)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":60:1)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":59:5)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":59:11)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":41:1)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":55:1)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":48:13)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":48:41)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:13)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:64)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":43:5)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":43:9)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:5)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":54:5)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:13)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:9)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:16)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:20)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:18)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":45:5)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":46:9)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":53:9)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:36)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:49)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:51)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:61)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:47)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":51:34)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":52:26)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":52:13)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:24)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_17.c":44:23)
#loc65 = loc(fused[#loc1, #loc2])
#loc66 = loc(fused[#loc3, #loc4])
#loc67 = loc(fused[#loc5, #loc6])
#loc68 = loc(fused[#loc7, #loc8])
#loc69 = loc(fused[#loc9, #loc10])
#loc70 = loc(fused[#loc11, #loc12])
#loc71 = loc(fused[#loc13, #loc14])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc18, #loc17])
#loc74 = loc(fused[#loc19, #loc20])
#loc75 = loc(fused[#loc22, #loc16])
#loc76 = loc(fused[#loc23, #loc24])
#loc77 = loc(fused[#loc32, #loc31])
#loc78 = loc(fused[#loc33, #loc34])
#loc79 = loc(fused[#loc35, #loc36])
#loc80 = loc(fused[#loc37, #loc38])
#loc81 = loc(fused[#loc39, #loc40])
#loc82 = loc(fused[#loc41, #loc42])
#loc83 = loc(fused[#loc43, #loc44])
#loc84 = loc(fused[#loc45, #loc46])
#loc85 = loc(fused[#loc48, #loc47])
#loc86 = loc(fused[#loc49, #loc50])
#loc87 = loc(fused[#loc52, #loc46])
#loc88 = loc(fused[#loc53, #loc54])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc56, #loc58])
#loc91 = loc(fused[#loc64, #loc63])
