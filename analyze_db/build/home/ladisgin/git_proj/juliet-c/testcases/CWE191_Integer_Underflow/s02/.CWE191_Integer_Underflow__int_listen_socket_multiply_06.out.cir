!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":404:10)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":404:14)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":404:20)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":404:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc636 = loc(fused[#loc182, #loc183])
#loc637 = loc(fused[#loc184, #loc185])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc562)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc563)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc564)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc565)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc566)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc567)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc568)
  cir.func private @close(!s32i) -> !s32i loc(#loc569)
  cir.func private @printIntLine(!s32i) loc(#loc570)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc572)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc573)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc575)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc578)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc579)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc580)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc581)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc582)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc37)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc580)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc39)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc581)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc44)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc46)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc584)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc53)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc53)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc586)
                cir.if %62 {
                  cir.break loc(#loc55)
                } loc(#loc587)
              } loc(#loc585)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc588)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc589)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc590)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc63)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc63)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc591)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc66)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc66)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc592)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc70)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc70)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc71)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc593)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc595)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc596)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc596)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc83)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc83)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc597)
                cir.if %66 {
                  cir.break loc(#loc85)
                } loc(#loc598)
              } loc(#loc594)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc89)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc90)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc91)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc600)
                cir.if %64 {
                  cir.break loc(#loc93)
                } loc(#loc601)
              } loc(#loc599)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc95)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc96)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc97)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc602)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc103)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc604)
                cir.if %62 {
                  cir.break loc(#loc105)
                } loc(#loc605)
              } loc(#loc603)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc108)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc108)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc108)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc108)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc108)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc108)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc108)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc109)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc606)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc110)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc111)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc607)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc117)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc117)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc609)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc118)
                  cir.yield %64 : !cir.bool loc(#loc118)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc120)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc610)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc118)
                    cir.yield %68 : !cir.bool loc(#loc118)
                  }, false {
                    %68 = cir.const #false loc(#loc118)
                    cir.yield %68 : !cir.bool loc(#loc118)
                  }) : (!cir.bool) -> !cir.bool loc(#loc118)
                  cir.yield %67 : !cir.bool loc(#loc118)
                }) : (!cir.bool) -> !cir.bool loc(#loc118)
                cir.if %63 {
                  cir.break loc(#loc122)
                } loc(#loc611)
              } loc(#loc608)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc123)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc125)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc612)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc127)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
              cir.yield loc(#loc43)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc130)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc130)
              cir.condition(%15) loc(#loc130)
            } loc(#loc583)
          } loc(#loc583)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc134)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc615)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc137)
            } loc(#loc616)
          } loc(#loc614)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc141)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc618)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc144)
            } loc(#loc619)
          } loc(#loc617)
        } loc(#loc577)
      } loc(#loc576)
    } loc(#loc574)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc148)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc621)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc624)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc626)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc156)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc157)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc626)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc159)
          } loc(#loc625)
        } loc(#loc623)
      } loc(#loc622)
    } loc(#loc620)
    cir.return loc(#loc20)
  } loc(#loc571)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_multiply_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc628)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc629)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc630)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc631)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc168)
    cir.return loc(#loc161)
  } loc(#loc627)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc632)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc633)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc634)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc179)
  cir.func @main(%arg0: !s32i loc(fused[#loc182, #loc183]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc184, #loc185])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc636)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc637)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc186)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc187)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc188)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc189)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_listen_socket_multiply_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc638)
    cir.call @CWE191_Integer_Underflow__int_listen_socket_multiply_06_good() : () -> () loc(#loc191)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc177)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_listen_socket_multiply_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc639)
    cir.call @CWE191_Integer_Underflow__int_listen_socket_multiply_06_bad() : () -> () loc(#loc195)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc640)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc640)
    cir.return %17 : !s32i loc(#loc640)
  } loc(#loc635)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc201)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc642)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc206)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc643)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc210)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc211)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc645)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc648)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc649)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc650)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc651)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc652)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc220)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc220)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc650)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc222)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc651)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc227)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc228)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc229)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc654)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc236)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc236)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc656)
                cir.if %62 {
                  cir.break loc(#loc238)
                } loc(#loc657)
              } loc(#loc655)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc658)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc241)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc659)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc660)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc246)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc246)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc661)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc248)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc248)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc662)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc250)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc250)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc251)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc663)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc256)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc665)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc666)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc666)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc261)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc262)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc262)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc667)
                cir.if %66 {
                  cir.break loc(#loc264)
                } loc(#loc668)
              } loc(#loc664)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc267)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc268)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc270)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc270)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc670)
                cir.if %64 {
                  cir.break loc(#loc272)
                } loc(#loc671)
              } loc(#loc669)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc273)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc274)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc275)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc276)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc672)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc282)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc282)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc674)
                cir.if %62 {
                  cir.break loc(#loc284)
                } loc(#loc675)
              } loc(#loc673)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc285)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc286)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc286)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc287)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc287)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc287)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc287)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc287)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc287)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc287)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc288)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc288)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc676)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc289)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc290)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc290)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc677)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc296)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc296)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc679)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc297)
                  cir.yield %64 : !cir.bool loc(#loc297)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc298)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc299)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc680)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc297)
                    cir.yield %68 : !cir.bool loc(#loc297)
                  }, false {
                    %68 = cir.const #false loc(#loc297)
                    cir.yield %68 : !cir.bool loc(#loc297)
                  }) : (!cir.bool) -> !cir.bool loc(#loc297)
                  cir.yield %67 : !cir.bool loc(#loc297)
                }) : (!cir.bool) -> !cir.bool loc(#loc297)
                cir.if %63 {
                  cir.break loc(#loc301)
                } loc(#loc681)
              } loc(#loc678)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc302)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc302)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc304)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc304)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc682)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc305)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc306)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc683)
              cir.yield loc(#loc226)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc309)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc309)
              cir.condition(%15) loc(#loc309)
            } loc(#loc653)
          } loc(#loc653)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc313)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc313)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc685)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc315)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc316)
            } loc(#loc686)
          } loc(#loc684)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc319)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc320)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc320)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc688)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc322)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc323)
            } loc(#loc689)
          } loc(#loc687)
        } loc(#loc647)
      } loc(#loc646)
    } loc(#loc644)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc326)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc327)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc691)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc331)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc334)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc335)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc694)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc340)
              %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc340)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc340)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc340)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc341)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc697)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc698)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc700)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc347)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc348)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc700)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc349)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc350)
              } else {
                %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc201)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc201)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc351)
              } loc(#loc699)
            } loc(#loc696)
          } loc(#loc695)
        } loc(#loc693)
      } loc(#loc692)
    } loc(#loc690)
    cir.return loc(#loc203)
  } loc(#loc641)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc702)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc356)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc703)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc360)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc361)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc705)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc708)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc709)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc710)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc711)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc712)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc370)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc370)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc710)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc372)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc372)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc711)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc377)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc378)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc379)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc380)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc714)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc385)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc386)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc386)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc716)
                cir.if %62 {
                  cir.break loc(#loc388)
                } loc(#loc717)
              } loc(#loc715)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc718)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc391)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc719)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc720)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc396)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc396)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc721)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc398)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc398)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc722)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc400)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc400)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc401)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc723)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc406)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc725)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc726)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc726)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc411)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc412)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc412)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc727)
                cir.if %66 {
                  cir.break loc(#loc414)
                } loc(#loc728)
              } loc(#loc724)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc417)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc418)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc419)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc420)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc420)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc730)
                cir.if %64 {
                  cir.break loc(#loc422)
                } loc(#loc731)
              } loc(#loc729)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc423)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc424)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc425)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc426)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc732)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc431)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc432)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc432)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc734)
                cir.if %62 {
                  cir.break loc(#loc434)
                } loc(#loc735)
              } loc(#loc733)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc435)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc436)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc436)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc437)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc437)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc437)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc437)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc437)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc437)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc437)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc438)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc438)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc736)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc439)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc440)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc440)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc737)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc446)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc446)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc739)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc447)
                  cir.yield %64 : !cir.bool loc(#loc447)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc448)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc449)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc740)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc447)
                    cir.yield %68 : !cir.bool loc(#loc447)
                  }, false {
                    %68 = cir.const #false loc(#loc447)
                    cir.yield %68 : !cir.bool loc(#loc447)
                  }) : (!cir.bool) -> !cir.bool loc(#loc447)
                  cir.yield %67 : !cir.bool loc(#loc447)
                }) : (!cir.bool) -> !cir.bool loc(#loc447)
                cir.if %63 {
                  cir.break loc(#loc451)
                } loc(#loc741)
              } loc(#loc738)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc452)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc452)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc453)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc454)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc454)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc742)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc455)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc456)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc743)
              cir.yield loc(#loc376)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc459)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc459)
              cir.condition(%15) loc(#loc459)
            } loc(#loc713)
          } loc(#loc713)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc462)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc463)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc463)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc745)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc465)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc466)
            } loc(#loc746)
          } loc(#loc744)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc469)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc470)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc470)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc748)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc472)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc473)
            } loc(#loc749)
          } loc(#loc747)
        } loc(#loc707)
      } loc(#loc706)
    } loc(#loc704)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc476)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc477)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc751)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc481)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc482)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc754)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc486)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc487)
              %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc487)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc487)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc487)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc488)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc757)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc758)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc760)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc495)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc494)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc495)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc760)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc496)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc497)
              } else {
                %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc498)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc498)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc499)
              } loc(#loc759)
            } loc(#loc756)
          } loc(#loc755)
        } loc(#loc753)
      } loc(#loc752)
    } loc(#loc750)
    cir.return loc(#loc353)
  } loc(#loc701)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc762)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc504)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc763)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc508)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc509)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc765)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc513)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc513)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc514)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc515)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc516)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc767)
      } loc(#loc766)
    } loc(#loc764)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc520)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc521)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc769)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc525)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc526)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc772)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc774)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc530)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc529)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc530)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc774)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc531)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc532)
          } loc(#loc773)
        } loc(#loc771)
      } loc(#loc770)
    } loc(#loc768)
    cir.return loc(#loc501)
  } loc(#loc761)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc776)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc537)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc777)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc541)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc542)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc779)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc544)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc545)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc781)
      } loc(#loc780)
    } loc(#loc778)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc549)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc550)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc783)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc554)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc555)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc786)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc788)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc559)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc558)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc559)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc788)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc560)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc561)
          } loc(#loc787)
        } loc(#loc785)
      } loc(#loc784)
    } loc(#loc782)
    cir.return loc(#loc534)
  } loc(#loc775)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":49:1)
#loc20 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":135:1)
#loc21 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":51:5)
#loc22 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":51:9)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":53:12)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":53:5)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":54:5)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":125:5)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":54:8)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":54:27)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":55:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":56:9)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":124:9)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":61:13)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":61:17)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":62:13)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":62:32)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":63:13)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":63:35)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":64:13)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":64:35)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":65:13)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":65:45)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":66:13)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":109:21)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:39)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:48)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:61)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:32)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:17)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":76:72)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":77:17)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":80:17)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":77:21)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":77:37)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":78:17)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":79:21)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:24)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:25)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:34)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:37)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:51)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:17)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":81:52)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":82:38)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":82:17)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":83:43)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":83:17)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:42)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:36)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:17)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":84:50)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:17)
#loc76 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":88:17)
#loc77 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:26)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:58)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:59)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:68)
#loc81 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:82)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:21)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":85:88)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":86:17)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":87:21)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:17)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":92:17)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:28)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:42)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:21)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":89:61)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":90:17)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":91:21)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:39)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:53)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:59)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:32)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:17)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":93:63)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":94:17)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":97:17)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":94:21)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":94:37)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":95:17)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":96:21)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:35)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:49)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:62)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:80)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:83)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:30)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:17)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":99:84)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:17)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":103:17)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:21)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:35)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:48)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:51)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":100:65)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":101:17)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":102:21)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":105:43)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":105:29)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":105:17)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:29)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:24)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:17)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":107:40)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":109:20)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":110:13)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":113:13)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":110:17)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":110:33)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":111:13)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":112:30)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":112:17)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":114:13)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":117:13)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":114:17)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":114:33)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":115:13)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":116:30)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":116:17)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":126:5)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":134:5)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":126:8)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":126:27)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":127:5)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":128:9)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":133:9)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":128:12)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":128:19)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":129:9)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":131:13)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":131:33)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":131:26)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":132:26)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":132:13)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":387:1)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":393:1)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":389:5)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":389:14)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":390:5)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":390:14)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":391:5)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":391:14)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":392:5)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":392:14)
#loc170 = loc("/usr/include/stdlib.h":575:1)
#loc171 = loc("/usr/include/stdlib.h":575:41)
#loc172 = loc("/usr/include/time.h":76:1)
#loc173 = loc("/usr/include/time.h":76:38)
#loc174 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc175 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":409:15)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":411:15)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":414:15)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":416:15)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":404:1)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":419:1)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":405:1)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":407:27)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":407:22)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":407:5)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":409:5)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":410:5)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":410:66)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":411:5)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":414:5)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":415:5)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":415:65)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":416:5)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":418:12)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":418:5)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":222:19)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":236:27)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":142:1)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":240:1)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":144:5)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":144:9)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":146:12)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":146:5)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":147:5)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":218:5)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":147:8)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":147:27)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":148:5)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":149:9)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":217:9)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":154:13)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":154:17)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":155:13)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":155:32)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":156:13)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":156:35)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":157:13)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":157:35)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":158:13)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":158:45)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":159:13)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":202:21)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:39)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:48)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:61)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:32)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:17)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":169:72)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":170:17)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":173:17)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":170:21)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":170:37)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":171:17)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":172:21)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:24)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:25)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:34)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:37)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:51)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:17)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":174:52)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":175:38)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":175:17)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":176:43)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":176:17)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:42)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:36)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:17)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":177:50)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:17)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":181:17)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:26)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:58)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:59)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:68)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:82)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:21)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":178:88)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":179:17)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":180:21)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:17)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":185:17)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:28)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:42)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:21)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":182:61)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":183:17)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":184:21)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:39)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:53)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:59)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:32)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:17)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":186:63)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":187:17)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":190:17)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":187:21)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":187:37)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":188:17)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":189:21)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:35)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:49)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:62)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:80)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:83)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:30)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:17)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":192:84)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:17)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":196:17)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:21)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:35)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:48)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:51)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":193:65)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":194:17)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":195:21)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":198:43)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":198:29)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":198:17)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:29)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:24)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:17)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":200:40)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":202:20)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":203:13)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":206:13)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":203:17)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":203:33)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":204:13)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":205:30)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":205:17)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":207:13)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":210:13)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":207:17)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":207:33)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":208:13)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":209:30)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":209:17)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":219:5)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":239:5)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":219:8)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":219:27)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":220:5)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":223:5)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":225:5)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":222:9)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":226:9)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":238:9)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":226:12)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":226:19)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":227:9)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:13)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":237:13)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:17)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:25)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:33)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":229:34)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":230:13)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":233:13)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":235:13)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":231:17)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":231:37)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":231:30)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":232:30)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":232:17)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":236:17)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":243:1)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":336:1)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":245:5)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":245:9)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":247:12)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":247:5)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":248:5)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":319:5)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":248:8)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":248:27)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":249:5)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":250:9)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":318:9)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":255:13)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":255:17)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":256:13)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":256:32)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":257:13)
#loc370 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":257:35)
#loc371 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":258:13)
#loc372 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":258:35)
#loc373 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":259:13)
#loc374 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":259:45)
#loc375 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":260:13)
#loc376 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":303:21)
#loc377 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:39)
#loc378 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:48)
#loc379 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:61)
#loc380 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:32)
#loc381 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:17)
#loc382 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":270:72)
#loc383 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":271:17)
#loc384 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":274:17)
#loc385 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":271:21)
#loc386 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":271:37)
#loc387 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":272:17)
#loc388 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":273:21)
#loc389 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:24)
#loc390 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:25)
#loc391 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:34)
#loc392 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:37)
#loc393 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:51)
#loc394 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:17)
#loc395 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":275:52)
#loc396 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":276:38)
#loc397 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":276:17)
#loc398 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":277:43)
#loc399 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":277:17)
#loc400 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:42)
#loc401 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:36)
#loc402 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:17)
#loc403 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":278:50)
#loc404 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:17)
#loc405 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":282:17)
#loc406 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:26)
#loc407 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:58)
#loc408 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:59)
#loc409 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:68)
#loc410 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:82)
#loc411 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:21)
#loc412 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":279:88)
#loc413 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":280:17)
#loc414 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":281:21)
#loc415 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:17)
#loc416 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":286:17)
#loc417 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:28)
#loc418 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:42)
#loc419 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:21)
#loc420 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":283:61)
#loc421 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":284:17)
#loc422 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":285:21)
#loc423 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:39)
#loc424 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:53)
#loc425 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:59)
#loc426 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:32)
#loc427 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:17)
#loc428 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":287:63)
#loc429 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":288:17)
#loc430 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":291:17)
#loc431 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":288:21)
#loc432 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":288:37)
#loc433 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":289:17)
#loc434 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":290:21)
#loc435 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:35)
#loc436 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:49)
#loc437 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:62)
#loc438 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:80)
#loc439 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:83)
#loc440 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:30)
#loc441 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:17)
#loc442 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":293:84)
#loc443 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:17)
#loc444 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":297:17)
#loc445 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:21)
#loc446 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:35)
#loc447 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:48)
#loc448 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:51)
#loc449 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":294:65)
#loc450 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":295:17)
#loc451 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":296:21)
#loc452 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":299:43)
#loc453 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":299:29)
#loc454 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":299:17)
#loc455 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:29)
#loc456 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:24)
#loc457 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:17)
#loc458 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":301:40)
#loc459 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":303:20)
#loc460 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":304:13)
#loc461 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":307:13)
#loc462 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":304:17)
#loc463 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":304:33)
#loc464 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":305:13)
#loc465 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":306:30)
#loc466 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":306:17)
#loc467 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":308:13)
#loc468 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":311:13)
#loc469 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":308:17)
#loc470 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":308:33)
#loc471 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":309:13)
#loc472 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":310:30)
#loc473 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":310:17)
#loc474 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":320:5)
#loc475 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":335:5)
#loc476 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":320:8)
#loc477 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":320:27)
#loc478 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":321:5)
#loc479 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":322:9)
#loc480 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":334:9)
#loc481 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":322:12)
#loc482 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":322:19)
#loc483 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":323:9)
#loc484 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:13)
#loc485 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":333:13)
#loc486 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:17)
#loc487 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:25)
#loc488 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:33)
#loc489 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":325:34)
#loc490 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":326:13)
#loc491 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":329:13)
#loc492 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":331:13)
#loc493 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":327:17)
#loc494 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":327:37)
#loc495 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":327:30)
#loc496 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":328:30)
#loc497 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":328:17)
#loc498 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":332:27)
#loc499 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":332:17)
#loc500 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":339:1)
#loc501 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":363:1)
#loc502 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":341:5)
#loc503 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":341:9)
#loc504 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":343:12)
#loc505 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":343:5)
#loc506 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":344:5)
#loc507 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":353:5)
#loc508 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":344:8)
#loc509 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":344:27)
#loc510 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":345:5)
#loc511 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":348:5)
#loc512 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":350:5)
#loc513 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":347:19)
#loc514 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":347:9)
#loc515 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":352:17)
#loc516 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":352:16)
#loc517 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":352:9)
#loc518 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":354:5)
#loc519 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":362:5)
#loc520 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":354:8)
#loc521 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":354:27)
#loc522 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":355:5)
#loc523 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":356:9)
#loc524 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":361:9)
#loc525 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":356:12)
#loc526 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":356:19)
#loc527 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":357:9)
#loc528 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":359:13)
#loc529 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":359:33)
#loc530 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":359:26)
#loc531 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":360:26)
#loc532 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":360:13)
#loc533 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":366:1)
#loc534 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":385:1)
#loc535 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":368:5)
#loc536 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":368:9)
#loc537 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":370:12)
#loc538 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":370:5)
#loc539 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":371:5)
#loc540 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":375:5)
#loc541 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":371:8)
#loc542 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":371:27)
#loc543 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":372:5)
#loc544 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":374:17)
#loc545 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":374:16)
#loc546 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":374:9)
#loc547 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":376:5)
#loc548 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":384:5)
#loc549 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":376:8)
#loc550 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":376:27)
#loc551 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":377:5)
#loc552 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":378:9)
#loc553 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":383:9)
#loc554 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":378:12)
#loc555 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":378:19)
#loc556 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":379:9)
#loc557 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":381:13)
#loc558 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":381:33)
#loc559 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":381:26)
#loc560 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":382:26)
#loc561 = loc("CWE191_Integer_Underflow__int_listen_socket_multiply_06.c":382:13)
#loc562 = loc(fused[#loc1, #loc2])
#loc563 = loc(fused[#loc3, #loc4])
#loc564 = loc(fused[#loc5, #loc6])
#loc565 = loc(fused[#loc7, #loc8])
#loc566 = loc(fused[#loc9, #loc10])
#loc567 = loc(fused[#loc11, #loc12])
#loc568 = loc(fused[#loc13, #loc14])
#loc569 = loc(fused[#loc15, #loc16])
#loc570 = loc(fused[#loc17, #loc18])
#loc571 = loc(fused[#loc19, #loc20])
#loc572 = loc(fused[#loc21, #loc22])
#loc573 = loc(fused[#loc24, #loc23])
#loc574 = loc(fused[#loc25, #loc26])
#loc575 = loc(fused[#loc27, #loc28])
#loc576 = loc(fused[#loc29, #loc26])
#loc577 = loc(fused[#loc30, #loc31])
#loc578 = loc(fused[#loc32, #loc33])
#loc579 = loc(fused[#loc34, #loc35])
#loc580 = loc(fused[#loc36, #loc37])
#loc581 = loc(fused[#loc38, #loc39])
#loc582 = loc(fused[#loc40, #loc41])
#loc583 = loc(fused[#loc42, #loc43])
#loc584 = loc(fused[#loc48, #loc49])
#loc585 = loc(fused[#loc50, #loc51])
#loc586 = loc(fused[#loc52, #loc53])
#loc587 = loc(fused[#loc54, #loc51])
#loc588 = loc(fused[#loc56, #loc57])
#loc589 = loc(fused[#loc59, #loc60])
#loc590 = loc(fused[#loc61, #loc62])
#loc591 = loc(fused[#loc65, #loc63])
#loc592 = loc(fused[#loc69, #loc66])
#loc593 = loc(fused[#loc73, #loc74])
#loc594 = loc(fused[#loc75, #loc76])
#loc595 = loc(fused[#loc78, #loc79])
#loc596 = loc(fused[#loc80, #loc81])
#loc597 = loc(fused[#loc82, #loc83])
#loc598 = loc(fused[#loc84, #loc76])
#loc599 = loc(fused[#loc86, #loc87])
#loc600 = loc(fused[#loc90, #loc91])
#loc601 = loc(fused[#loc92, #loc87])
#loc602 = loc(fused[#loc98, #loc99])
#loc603 = loc(fused[#loc100, #loc101])
#loc604 = loc(fused[#loc102, #loc103])
#loc605 = loc(fused[#loc104, #loc101])
#loc606 = loc(fused[#loc108, #loc109])
#loc607 = loc(fused[#loc112, #loc113])
#loc608 = loc(fused[#loc114, #loc115])
#loc609 = loc(fused[#loc116, #loc117])
#loc610 = loc(fused[#loc119, #loc120])
#loc611 = loc(fused[#loc121, #loc115])
#loc612 = loc(fused[#loc125, #loc123])
#loc613 = loc(fused[#loc128, #loc129])
#loc614 = loc(fused[#loc131, #loc132])
#loc615 = loc(fused[#loc133, #loc134])
#loc616 = loc(fused[#loc135, #loc132])
#loc617 = loc(fused[#loc138, #loc139])
#loc618 = loc(fused[#loc140, #loc141])
#loc619 = loc(fused[#loc142, #loc139])
#loc620 = loc(fused[#loc145, #loc146])
#loc621 = loc(fused[#loc147, #loc148])
#loc622 = loc(fused[#loc149, #loc146])
#loc623 = loc(fused[#loc150, #loc151])
#loc624 = loc(fused[#loc152, #loc153])
#loc625 = loc(fused[#loc154, #loc151])
#loc626 = loc(fused[#loc155, #loc156])
#loc627 = loc(fused[#loc160, #loc161])
#loc628 = loc(fused[#loc162, #loc163])
#loc629 = loc(fused[#loc164, #loc165])
#loc630 = loc(fused[#loc166, #loc167])
#loc631 = loc(fused[#loc168, #loc169])
#loc632 = loc(fused[#loc170, #loc171])
#loc633 = loc(fused[#loc172, #loc173])
#loc634 = loc(fused[#loc174, #loc175])
#loc635 = loc(fused[#loc180, #loc181])
#loc638 = loc(fused[#loc191, #loc192])
#loc639 = loc(fused[#loc195, #loc196])
#loc640 = loc(fused[#loc199, #loc198])
#loc641 = loc(fused[#loc202, #loc203])
#loc642 = loc(fused[#loc204, #loc205])
#loc643 = loc(fused[#loc207, #loc206])
#loc644 = loc(fused[#loc208, #loc209])
#loc645 = loc(fused[#loc210, #loc211])
#loc646 = loc(fused[#loc212, #loc209])
#loc647 = loc(fused[#loc213, #loc214])
#loc648 = loc(fused[#loc215, #loc216])
#loc649 = loc(fused[#loc217, #loc218])
#loc650 = loc(fused[#loc219, #loc220])
#loc651 = loc(fused[#loc221, #loc222])
#loc652 = loc(fused[#loc223, #loc224])
#loc653 = loc(fused[#loc225, #loc226])
#loc654 = loc(fused[#loc231, #loc232])
#loc655 = loc(fused[#loc233, #loc234])
#loc656 = loc(fused[#loc235, #loc236])
#loc657 = loc(fused[#loc237, #loc234])
#loc658 = loc(fused[#loc239, #loc240])
#loc659 = loc(fused[#loc242, #loc243])
#loc660 = loc(fused[#loc244, #loc245])
#loc661 = loc(fused[#loc247, #loc246])
#loc662 = loc(fused[#loc249, #loc248])
#loc663 = loc(fused[#loc252, #loc253])
#loc664 = loc(fused[#loc254, #loc255])
#loc665 = loc(fused[#loc257, #loc258])
#loc666 = loc(fused[#loc259, #loc260])
#loc667 = loc(fused[#loc261, #loc262])
#loc668 = loc(fused[#loc263, #loc255])
#loc669 = loc(fused[#loc265, #loc266])
#loc670 = loc(fused[#loc269, #loc270])
#loc671 = loc(fused[#loc271, #loc266])
#loc672 = loc(fused[#loc277, #loc278])
#loc673 = loc(fused[#loc279, #loc280])
#loc674 = loc(fused[#loc281, #loc282])
#loc675 = loc(fused[#loc283, #loc280])
#loc676 = loc(fused[#loc287, #loc288])
#loc677 = loc(fused[#loc291, #loc292])
#loc678 = loc(fused[#loc293, #loc294])
#loc679 = loc(fused[#loc295, #loc296])
#loc680 = loc(fused[#loc298, #loc299])
#loc681 = loc(fused[#loc300, #loc294])
#loc682 = loc(fused[#loc304, #loc302])
#loc683 = loc(fused[#loc307, #loc308])
#loc684 = loc(fused[#loc310, #loc311])
#loc685 = loc(fused[#loc312, #loc313])
#loc686 = loc(fused[#loc314, #loc311])
#loc687 = loc(fused[#loc317, #loc318])
#loc688 = loc(fused[#loc319, #loc320])
#loc689 = loc(fused[#loc321, #loc318])
#loc690 = loc(fused[#loc324, #loc325])
#loc691 = loc(fused[#loc326, #loc327])
#loc692 = loc(fused[#loc328, #loc329, #loc330, #loc325])
#loc693 = loc(fused[#loc332, #loc333])
#loc694 = loc(fused[#loc334, #loc335])
#loc695 = loc(fused[#loc336, #loc333])
#loc696 = loc(fused[#loc337, #loc338])
#loc697 = loc(fused[#loc340, #loc341])
#loc698 = loc(fused[#loc339, #loc342])
#loc699 = loc(fused[#loc343, #loc344, #loc345, #loc338])
#loc700 = loc(fused[#loc346, #loc347])
#loc701 = loc(fused[#loc352, #loc353])
#loc702 = loc(fused[#loc354, #loc355])
#loc703 = loc(fused[#loc357, #loc356])
#loc704 = loc(fused[#loc358, #loc359])
#loc705 = loc(fused[#loc360, #loc361])
#loc706 = loc(fused[#loc362, #loc359])
#loc707 = loc(fused[#loc363, #loc364])
#loc708 = loc(fused[#loc365, #loc366])
#loc709 = loc(fused[#loc367, #loc368])
#loc710 = loc(fused[#loc369, #loc370])
#loc711 = loc(fused[#loc371, #loc372])
#loc712 = loc(fused[#loc373, #loc374])
#loc713 = loc(fused[#loc375, #loc376])
#loc714 = loc(fused[#loc381, #loc382])
#loc715 = loc(fused[#loc383, #loc384])
#loc716 = loc(fused[#loc385, #loc386])
#loc717 = loc(fused[#loc387, #loc384])
#loc718 = loc(fused[#loc389, #loc390])
#loc719 = loc(fused[#loc392, #loc393])
#loc720 = loc(fused[#loc394, #loc395])
#loc721 = loc(fused[#loc397, #loc396])
#loc722 = loc(fused[#loc399, #loc398])
#loc723 = loc(fused[#loc402, #loc403])
#loc724 = loc(fused[#loc404, #loc405])
#loc725 = loc(fused[#loc407, #loc408])
#loc726 = loc(fused[#loc409, #loc410])
#loc727 = loc(fused[#loc411, #loc412])
#loc728 = loc(fused[#loc413, #loc405])
#loc729 = loc(fused[#loc415, #loc416])
#loc730 = loc(fused[#loc419, #loc420])
#loc731 = loc(fused[#loc421, #loc416])
#loc732 = loc(fused[#loc427, #loc428])
#loc733 = loc(fused[#loc429, #loc430])
#loc734 = loc(fused[#loc431, #loc432])
#loc735 = loc(fused[#loc433, #loc430])
#loc736 = loc(fused[#loc437, #loc438])
#loc737 = loc(fused[#loc441, #loc442])
#loc738 = loc(fused[#loc443, #loc444])
#loc739 = loc(fused[#loc445, #loc446])
#loc740 = loc(fused[#loc448, #loc449])
#loc741 = loc(fused[#loc450, #loc444])
#loc742 = loc(fused[#loc454, #loc452])
#loc743 = loc(fused[#loc457, #loc458])
#loc744 = loc(fused[#loc460, #loc461])
#loc745 = loc(fused[#loc462, #loc463])
#loc746 = loc(fused[#loc464, #loc461])
#loc747 = loc(fused[#loc467, #loc468])
#loc748 = loc(fused[#loc469, #loc470])
#loc749 = loc(fused[#loc471, #loc468])
#loc750 = loc(fused[#loc474, #loc475])
#loc751 = loc(fused[#loc476, #loc477])
#loc752 = loc(fused[#loc478, #loc475])
#loc753 = loc(fused[#loc479, #loc480])
#loc754 = loc(fused[#loc481, #loc482])
#loc755 = loc(fused[#loc483, #loc480])
#loc756 = loc(fused[#loc484, #loc485])
#loc757 = loc(fused[#loc487, #loc488])
#loc758 = loc(fused[#loc486, #loc489])
#loc759 = loc(fused[#loc490, #loc491, #loc492, #loc485])
#loc760 = loc(fused[#loc493, #loc494])
#loc761 = loc(fused[#loc500, #loc501])
#loc762 = loc(fused[#loc502, #loc503])
#loc763 = loc(fused[#loc505, #loc504])
#loc764 = loc(fused[#loc506, #loc507])
#loc765 = loc(fused[#loc508, #loc509])
#loc766 = loc(fused[#loc510, #loc511, #loc512, #loc507])
#loc767 = loc(fused[#loc517, #loc515])
#loc768 = loc(fused[#loc518, #loc519])
#loc769 = loc(fused[#loc520, #loc521])
#loc770 = loc(fused[#loc522, #loc519])
#loc771 = loc(fused[#loc523, #loc524])
#loc772 = loc(fused[#loc525, #loc526])
#loc773 = loc(fused[#loc527, #loc524])
#loc774 = loc(fused[#loc528, #loc529])
#loc775 = loc(fused[#loc533, #loc534])
#loc776 = loc(fused[#loc535, #loc536])
#loc777 = loc(fused[#loc538, #loc537])
#loc778 = loc(fused[#loc539, #loc540])
#loc779 = loc(fused[#loc541, #loc542])
#loc780 = loc(fused[#loc543, #loc540])
#loc781 = loc(fused[#loc546, #loc544])
#loc782 = loc(fused[#loc547, #loc548])
#loc783 = loc(fused[#loc549, #loc550])
#loc784 = loc(fused[#loc551, #loc548])
#loc785 = loc(fused[#loc552, #loc553])
#loc786 = loc(fused[#loc554, #loc555])
#loc787 = loc(fused[#loc556, #loc553])
#loc788 = loc(fused[#loc557, #loc558])
