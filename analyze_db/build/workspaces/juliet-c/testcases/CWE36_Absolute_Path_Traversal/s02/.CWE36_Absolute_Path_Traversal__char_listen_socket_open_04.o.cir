!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc288)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc290)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc293)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc295)
  cir.func private @close(!s32i) -> !s32i loc(#loc296)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc297)
  cir.func @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_043badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc300)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc300)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc300)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc31)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc307)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc308)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc309)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc310)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc42)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc308)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc44)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc309)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
          cir.store %18, %11 : !u64i, !cir.ptr<!u64i> loc(#loc310)
          cir.scope {
            cir.do {
              cir.scope {
                %19 = cir.const #cir.int<2> : !s32i loc(#loc53)
                %20 = cir.const #cir.int<1> : !u32i loc(#loc54)
                %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc54)
                %22 = cir.const #cir.int<6> : !u32i loc(#loc55)
                %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc55)
                %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc313)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc62)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc315)
                  cir.if %80 {
                    cir.break loc(#loc64)
                  } loc(#loc316)
                } loc(#loc314)
                %25 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc317)
                %26 = cir.const #cir.int<0> : !s32i loc(#loc67)
                %27 = cir.const #cir.int<16> : !u64i loc(#loc318)
                cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
                %28 = cir.const #cir.int<2> : !s32i loc(#loc72)
                %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc72)
                %30 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc320)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc75)
                %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc75)
                %33 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc321)
                %35 = cir.const #cir.int<27015> : !s32i loc(#loc79)
                %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc79)
                %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
                %38 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc322)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                  %78 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc324)
                  %79 = cir.const #cir.int<16> : !u64i loc(#loc325)
                  %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc325)
                  %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                  %82 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc92)
                  %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc326)
                  cir.if %84 {
                    cir.break loc(#loc94)
                  } loc(#loc327)
                } loc(#loc323)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %78 = cir.const #cir.int<5> : !s32i loc(#loc98)
                  %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc100)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc329)
                  cir.if %82 {
                    cir.break loc(#loc102)
                  } loc(#loc330)
                } loc(#loc328)
                %39 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
                %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
                cir.store %42, %10 : !s32i, !cir.ptr<!s32i> loc(#loc331)
                cir.scope {
                  %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc112)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc333)
                  cir.if %80 {
                    cir.break loc(#loc114)
                  } loc(#loc334)
                } loc(#loc332)
                %43 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
                %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc117)
                %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc118)
                %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc335)
                %48 = cir.const #cir.int<1> : !u64i loc(#loc336)
                %49 = cir.const #cir.int<4096> : !s32i loc(#loc123)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc123)
                %51 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc124)
                %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc337)
                %53 = cir.const #cir.int<1> : !s32i loc(#loc125)
                %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc125)
                %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc338)
                %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc339)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc127)
                %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
                %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc128)
                cir.store %59, %6 : !s32i, !cir.ptr<!s32i> loc(#loc340)
                cir.scope {
                  %77 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc134)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc134)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc342)
                  %81 = cir.ternary(%80, true {
                    %82 = cir.const #true loc(#loc135)
                    cir.yield %82 : !cir.bool loc(#loc135)
                  }, false {
                    %82 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                    %83 = cir.const #cir.int<0> : !s32i loc(#loc137)
                    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc343)
                    %85 = cir.ternary(%84, true {
                      %86 = cir.const #true loc(#loc135)
                      cir.yield %86 : !cir.bool loc(#loc135)
                    }, false {
                      %86 = cir.const #false loc(#loc135)
                      cir.yield %86 : !cir.bool loc(#loc135)
                    }) : (!cir.bool) -> !cir.bool loc(#loc135)
                    cir.yield %85 : !cir.bool loc(#loc135)
                  }) : (!cir.bool) -> !cir.bool loc(#loc135)
                  cir.if %81 {
                    cir.break loc(#loc139)
                  } loc(#loc344)
                } loc(#loc341)
                %60 = cir.const #cir.int<0> : !s8i loc(#loc140)
                %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                %62 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc142)
                %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc143)
                %65 = cir.const #cir.int<1> : !u64i loc(#loc345)
                %66 = cir.binop(div, %64, %65) : !u64i loc(#loc346)
                %67 = cir.binop(add, %62, %66) : !u64i loc(#loc347)
                %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc146)
                cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc348)
                %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                %70 = cir.const #cir.int<13> : !s8i loc(#loc148)
                %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc148)
                %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc149)
                cir.store %72, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s8i loc(#loc156)
                    %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc352)
                  } loc(#loc351)
                } loc(#loc350)
                %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
                %74 = cir.const #cir.int<10> : !s8i loc(#loc160)
                %75 = cir.cast(integral, %74 : !s8i), !s32i loc(#loc160)
                %76 = cir.call @strchr(%73, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc161)
                cir.store %76, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s8i loc(#loc168)
                    %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc356)
                  } loc(#loc355)
                } loc(#loc354)
              } loc(#loc312)
              cir.yield loc(#loc50)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc171)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc171)
              cir.condition(%20) loc(#loc171)
            } loc(#loc311)
          } loc(#loc311)
          cir.scope {
            %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc174)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc175)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc358)
            cir.if %22 {
              %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc178)
            } loc(#loc359)
          } loc(#loc357)
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc181)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc182)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc182)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc361)
            cir.if %22 {
              %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc185)
            } loc(#loc362)
          } loc(#loc360)
        } loc(#loc304)
      } loc(#loc303)
    } loc(#loc302)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc364)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc191)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc192)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc365)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc193)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc194)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc366)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc195)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc367)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc200)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc201)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc202)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc369)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc204)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc205)
        } loc(#loc370)
      } loc(#loc368)
    } loc(#loc363)
    cir.return loc(#loc22)
  } loc(#loc298)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc371)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc208)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc372)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc211)
  cir.func internal private @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_04L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc374)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc375)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc375)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc375)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc218)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc376)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc222)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc222)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc208)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc208)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc226)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc227)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc211)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc211)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc227)
      } loc(#loc378)
    } loc(#loc377)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc380)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc234)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc235)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc381)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc236)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc237)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc382)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc238)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc383)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc243)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc244)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc245)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc385)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc247)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc248)
        } loc(#loc386)
      } loc(#loc384)
    } loc(#loc379)
    cir.return loc(#loc213)
  } loc(#loc373)
  cir.func internal private @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_04L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc388)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc389)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc389)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc389)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc255)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc390)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc259)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc259)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc261)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc263)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc263)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc261)
      } loc(#loc392)
    } loc(#loc391)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc394)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc268)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc269)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc270)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc395)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc271)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc272)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc396)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc273)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc397)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc278)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc279)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc280)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc399)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc282)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc283)
        } loc(#loc400)
      } loc(#loc398)
    } loc(#loc393)
    cir.return loc(#loc250)
  } loc(#loc387)
  cir.func @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_04L8goodG2B1Ev() : () -> () loc(#loc286)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_04L8goodG2B2Ev() : () -> () loc(#loc287)
    cir.return loc(#loc285)
  } loc(#loc401)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/fcntl.h":209:1)
#loc20 = loc("/usr/include/fcntl.h":209:56)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":63:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":159:1)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":65:5)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":65:12)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":66:5)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":66:37)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":67:12)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":67:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":68:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":149:5)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":68:8)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":69:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":70:9)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":148:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":75:13)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":75:17)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":76:13)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":76:32)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":77:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":77:19)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":78:13)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":78:35)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":79:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":79:35)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":80:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":80:41)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":80:30)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":80:37)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":81:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":133:21)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":82:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":132:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":91:39)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":91:48)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":91:61)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":91:32)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":91:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":91:72)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":92:17)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":95:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":92:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":92:37)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":93:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":94:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:24)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:25)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:34)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:37)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:51)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:17)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":96:52)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":97:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":97:17)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":98:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":98:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":99:42)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":99:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":99:17)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":99:50)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:17)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":103:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:26)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:58)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:59)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:68)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:82)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:21)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":100:88)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":101:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":102:21)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":104:17)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":107:17)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":104:28)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":104:42)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":104:21)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":104:61)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":105:17)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":106:21)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":108:39)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":108:53)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":108:59)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":108:32)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":108:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":108:63)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":109:17)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":112:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":109:21)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":109:37)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":110:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":111:21)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:35)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:58)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:65)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:63)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:49)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:72)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:75)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:86)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:91)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:106)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:116)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:117)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:120)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:30)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:17)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":114:121)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":115:17)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":118:17)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":115:21)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":115:35)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":115:48)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":115:51)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":115:65)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":116:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":117:21)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:61)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:17)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:22)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:32)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:45)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:56)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":120:57)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":122:34)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":122:40)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":122:27)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":122:17)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":122:44)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":123:17)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":126:17)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":123:21)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":124:17)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":125:32)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":125:22)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":125:21)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":127:34)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":127:40)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":127:27)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":127:17)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":127:44)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":128:17)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":131:17)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":128:21)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":129:17)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":130:32)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":130:22)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":130:21)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":133:20)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":134:13)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":137:13)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":134:17)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":134:33)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":135:13)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":136:30)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":136:17)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":138:13)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":141:13)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":138:17)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":138:33)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":139:13)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":140:30)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":140:17)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":150:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":158:5)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":151:9)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":151:13)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:25)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:31)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:38)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:47)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:55)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:20)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:9)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":153:63)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":154:9)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":157:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":154:13)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":154:26)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":154:25)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":155:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":156:19)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":156:13)
#loc206 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":174:19)
#loc209 = loc("/usr/include/string.h":149:1)
#loc210 = loc("/usr/include/string.h":150:14)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":183:22)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":166:1)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":195:1)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":168:5)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":168:12)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":169:5)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":169:37)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":170:12)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":170:5)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":171:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":185:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":171:8)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":172:5)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":175:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":177:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":174:9)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":183:9)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":183:16)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":186:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":194:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":187:9)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":187:13)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:25)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:31)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:38)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:47)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:55)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:20)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:9)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":189:63)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":190:9)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":193:9)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":190:13)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":190:26)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":190:25)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":191:9)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":192:19)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":192:13)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":198:1)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":222:1)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":200:5)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":200:12)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":201:5)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":201:37)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":202:12)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":202:5)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":203:5)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":212:5)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":203:8)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":204:5)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":210:9)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":210:16)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":210:22)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":213:5)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":221:5)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":214:9)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":214:13)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:25)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:31)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:38)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:47)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:55)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:20)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:9)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":216:63)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":217:9)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":220:9)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":217:13)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":217:26)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":217:25)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":218:9)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":219:19)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":219:13)
#loc284 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":224:1)
#loc285 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":228:1)
#loc286 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":226:5)
#loc287 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_04.cpp":227:5)
#loc288 = loc(fused[#loc1, #loc2])
#loc289 = loc(fused[#loc3, #loc4])
#loc290 = loc(fused[#loc5, #loc6])
#loc291 = loc(fused[#loc7, #loc8])
#loc292 = loc(fused[#loc9, #loc10])
#loc293 = loc(fused[#loc11, #loc12])
#loc294 = loc(fused[#loc13, #loc14])
#loc295 = loc(fused[#loc15, #loc16])
#loc296 = loc(fused[#loc17, #loc18])
#loc297 = loc(fused[#loc19, #loc20])
#loc298 = loc(fused[#loc21, #loc22])
#loc299 = loc(fused[#loc23, #loc24])
#loc300 = loc(fused[#loc25, #loc26])
#loc301 = loc(fused[#loc28, #loc27])
#loc302 = loc(fused[#loc29, #loc30])
#loc303 = loc(fused[#loc32, #loc30])
#loc304 = loc(fused[#loc33, #loc34])
#loc305 = loc(fused[#loc35, #loc36])
#loc306 = loc(fused[#loc37, #loc38])
#loc307 = loc(fused[#loc39, #loc40])
#loc308 = loc(fused[#loc41, #loc42])
#loc309 = loc(fused[#loc43, #loc44])
#loc310 = loc(fused[#loc45, #loc46])
#loc311 = loc(fused[#loc49, #loc50])
#loc312 = loc(fused[#loc51, #loc52])
#loc313 = loc(fused[#loc57, #loc58])
#loc314 = loc(fused[#loc59, #loc60])
#loc315 = loc(fused[#loc61, #loc62])
#loc316 = loc(fused[#loc63, #loc60])
#loc317 = loc(fused[#loc65, #loc66])
#loc318 = loc(fused[#loc68, #loc69])
#loc319 = loc(fused[#loc70, #loc71])
#loc320 = loc(fused[#loc74, #loc72])
#loc321 = loc(fused[#loc78, #loc75])
#loc322 = loc(fused[#loc82, #loc83])
#loc323 = loc(fused[#loc84, #loc85])
#loc324 = loc(fused[#loc87, #loc88])
#loc325 = loc(fused[#loc89, #loc90])
#loc326 = loc(fused[#loc91, #loc92])
#loc327 = loc(fused[#loc93, #loc85])
#loc328 = loc(fused[#loc95, #loc96])
#loc329 = loc(fused[#loc99, #loc100])
#loc330 = loc(fused[#loc101, #loc96])
#loc331 = loc(fused[#loc107, #loc108])
#loc332 = loc(fused[#loc109, #loc110])
#loc333 = loc(fused[#loc111, #loc112])
#loc334 = loc(fused[#loc113, #loc110])
#loc335 = loc(fused[#loc119, #loc120])
#loc336 = loc(fused[#loc121, #loc122])
#loc337 = loc(fused[#loc123, #loc124])
#loc338 = loc(fused[#loc123, #loc125])
#loc339 = loc(fused[#loc121, #loc126])
#loc340 = loc(fused[#loc129, #loc130])
#loc341 = loc(fused[#loc131, #loc132])
#loc342 = loc(fused[#loc133, #loc134])
#loc343 = loc(fused[#loc136, #loc137])
#loc344 = loc(fused[#loc138, #loc132])
#loc345 = loc(fused[#loc144, #loc145])
#loc346 = loc(fused[#loc143, #loc145])
#loc347 = loc(fused[#loc142, #loc145])
#loc348 = loc(fused[#loc141, #loc140])
#loc349 = loc(fused[#loc150, #loc151])
#loc350 = loc(fused[#loc152, #loc153])
#loc351 = loc(fused[#loc155, #loc153])
#loc352 = loc(fused[#loc158, #loc156])
#loc353 = loc(fused[#loc162, #loc163])
#loc354 = loc(fused[#loc164, #loc165])
#loc355 = loc(fused[#loc167, #loc165])
#loc356 = loc(fused[#loc170, #loc168])
#loc357 = loc(fused[#loc172, #loc173])
#loc358 = loc(fused[#loc174, #loc175])
#loc359 = loc(fused[#loc176, #loc173])
#loc360 = loc(fused[#loc179, #loc180])
#loc361 = loc(fused[#loc181, #loc182])
#loc362 = loc(fused[#loc183, #loc180])
#loc363 = loc(fused[#loc186, #loc187])
#loc364 = loc(fused[#loc188, #loc189])
#loc365 = loc(fused[#loc191, #loc192])
#loc366 = loc(fused[#loc193, #loc194])
#loc367 = loc(fused[#loc196, #loc197])
#loc368 = loc(fused[#loc198, #loc199])
#loc369 = loc(fused[#loc200, #loc201])
#loc370 = loc(fused[#loc203, #loc199])
#loc371 = loc(fused[#loc206, #loc207])
#loc372 = loc(fused[#loc209, #loc210])
#loc373 = loc(fused[#loc212, #loc213])
#loc374 = loc(fused[#loc214, #loc215])
#loc375 = loc(fused[#loc216, #loc217])
#loc376 = loc(fused[#loc219, #loc218])
#loc377 = loc(fused[#loc220, #loc221])
#loc378 = loc(fused[#loc223, #loc224, #loc225, #loc221])
#loc379 = loc(fused[#loc229, #loc230])
#loc380 = loc(fused[#loc231, #loc232])
#loc381 = loc(fused[#loc234, #loc235])
#loc382 = loc(fused[#loc236, #loc237])
#loc383 = loc(fused[#loc239, #loc240])
#loc384 = loc(fused[#loc241, #loc242])
#loc385 = loc(fused[#loc243, #loc244])
#loc386 = loc(fused[#loc246, #loc242])
#loc387 = loc(fused[#loc249, #loc250])
#loc388 = loc(fused[#loc251, #loc252])
#loc389 = loc(fused[#loc253, #loc254])
#loc390 = loc(fused[#loc256, #loc255])
#loc391 = loc(fused[#loc257, #loc258])
#loc392 = loc(fused[#loc260, #loc258])
#loc393 = loc(fused[#loc264, #loc265])
#loc394 = loc(fused[#loc266, #loc267])
#loc395 = loc(fused[#loc269, #loc270])
#loc396 = loc(fused[#loc271, #loc272])
#loc397 = loc(fused[#loc274, #loc275])
#loc398 = loc(fused[#loc276, #loc277])
#loc399 = loc(fused[#loc278, #loc279])
#loc400 = loc(fused[#loc281, #loc277])
#loc401 = loc(fused[#loc284, #loc285])
