!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":210:10)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":210:14)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":210:20)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":210:32)
#loc276 = loc(fused[#loc73, #loc74])
#loc277 = loc(fused[#loc75, #loc76])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc247)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc248)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc249)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc251)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc253)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc254)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc20)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc258)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc259)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc260)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc30)
    %7 = cir.const #cir.int<20> : !s32i loc(#loc31)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc261)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc262)
  ^bb5:  // pred: ^bb4
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc38)
    %15 = cir.call @atof(%14) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc39)
    %16 = cir.cast(floating, %15 : !cir.double), !cir.float loc(#loc39)
    cir.store %16, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc263)
    cir.br ^bb7 loc(#loc36)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc264)
  ^bb12:  // pred: ^bb11
    %19 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %20 ^bb13, ^bb16 loc(#loc265)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc266)
  ^bb14:  // pred: ^bb13
    %21 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc49)
    %22 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc50)
    %23 = cir.cast(floating, %22 : !cir.float), !cir.double loc(#loc50)
    %24 = cir.binop(div, %21, %23) : !cir.double loc(#loc267)
    %25 = cir.cast(float_to_int, %24 : !cir.double), !s32i loc(#loc267)
    cir.store %25, %1 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc52)
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc44)
  ^bb16:  // 2 preds: ^bb12, ^bb15
    cir.br ^bb17 loc(#loc44)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc13)
  } loc(#loc252)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc271)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc272)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc54)
  } loc(#loc268)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc273)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc277)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc80)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call @CWE369_Divide_by_Zero__float_fgets_04_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc279)
    cir.call @CWE369_Divide_by_Zero__float_fgets_04_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.return %17 : !s32i loc(#loc280)
  } loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc282)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc283)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc284)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc101)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc285)
    cir.br ^bb1 loc(#loc286)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc287)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc288)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc289)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc111)
    %7 = cir.const #cir.int<20> : !s32i loc(#loc112)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc290)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc291)
  ^bb5:  // pred: ^bb4
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc119)
    %15 = cir.call @atof(%14) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc120)
    %16 = cir.cast(floating, %15 : !cir.double), !cir.float loc(#loc120)
    cir.store %16, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc292)
    cir.br ^bb7 loc(#loc117)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb7 loc(#loc110)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc108)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc104)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc104)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc293)
  ^bb12:  // pred: ^bb11
    %19 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %20 ^bb13, ^bb14 loc(#loc294)
  ^bb13:  // pred: ^bb12
    %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    cir.br ^bb20 loc(#loc129)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc295)
  ^bb15:  // pred: ^bb14
    %23 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc134)
    %24 = cir.cast(floating, %23 : !cir.float), !cir.double loc(#loc134)
    %25 = cir.fabs %24 : !cir.double loc(#loc134)
    %26 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc135)
    %27 = cir.cmp(gt, %25, %26) : !cir.double, !cir.bool loc(#loc296)
    cir.brcond %27 ^bb16, ^bb17 loc(#loc297)
  ^bb16:  // pred: ^bb15
    %28 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc140)
    %29 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc141)
    %30 = cir.cast(floating, %29 : !cir.float), !cir.double loc(#loc141)
    %31 = cir.binop(div, %28, %30) : !cir.double loc(#loc298)
    %32 = cir.cast(float_to_int, %31 : !cir.double), !s32i loc(#loc298)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc143)
    cir.br ^bb18 loc(#loc138)
  ^bb17:  // pred: ^bb15
    %34 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc92)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb18 loc(#loc133)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc133)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc126)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc126)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc94)
  } loc(#loc281)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc300)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc301)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc302)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc153)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc303)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc157)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc305)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc306)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc307)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc163)
    %7 = cir.const #cir.int<20> : !s32i loc(#loc164)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc248)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc165)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc166)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
    %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc308)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc309)
  ^bb5:  // pred: ^bb4
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc171)
    %15 = cir.call @atof(%14) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc172)
    %16 = cir.cast(floating, %15 : !cir.double), !cir.float loc(#loc172)
    cir.store %16, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc310)
    cir.br ^bb7 loc(#loc169)
  ^bb6:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb7 loc(#loc162)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc162)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc160)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc156)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc156)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc311)
  ^bb12:  // pred: ^bb11
    %19 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc179)
    cir.brcond %20 ^bb13, ^bb19 loc(#loc312)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc313)
  ^bb14:  // pred: ^bb13
    %21 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc183)
    %22 = cir.cast(floating, %21 : !cir.float), !cir.double loc(#loc183)
    %23 = cir.fabs %22 : !cir.double loc(#loc183)
    %24 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc184)
    %25 = cir.cmp(gt, %23, %24) : !cir.double, !cir.bool loc(#loc314)
    cir.brcond %25 ^bb15, ^bb16 loc(#loc315)
  ^bb15:  // pred: ^bb14
    %26 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc189)
    %27 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc190)
    %28 = cir.cast(floating, %27 : !cir.float), !cir.double loc(#loc190)
    %29 = cir.binop(div, %26, %28) : !cir.double loc(#loc316)
    %30 = cir.cast(float_to_int, %29 : !cir.double), !s32i loc(#loc316)
    cir.store %30, %1 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc192)
    cir.br ^bb17 loc(#loc187)
  ^bb16:  // pred: ^bb14
    %32 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc193)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    cir.br ^bb17 loc(#loc182)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc182)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc178)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc178)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc146)
  } loc(#loc299)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc319)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc201)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc320)
    cir.br ^bb1 loc(#loc321)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc205)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc322)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc209)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    cir.br ^bb4 loc(#loc207)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc211)
    cir.store %7, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc323)
    cir.br ^bb4 loc(#loc204)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc204)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc324)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %9 ^bb7, ^bb10 loc(#loc325)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc326)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc219)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc220)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc220)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc327)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc327)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc222)
    cir.br ^bb9 loc(#loc218)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc214)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc214)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc196)
  } loc(#loc317)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc330)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc229)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc331)
    cir.br ^bb1 loc(#loc332)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc233)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc333)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc235)
    cir.store %5, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc334)
    cir.br ^bb3 loc(#loc232)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc232)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc335)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc239)
    cir.brcond %7 ^bb6, ^bb9 loc(#loc336)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc337)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc243)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc244)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc244)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc338)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc338)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc246)
    cir.br ^bb8 loc(#loc242)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc238)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc224)
  } loc(#loc328)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":49:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":32:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":61:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":40:13)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":40:45)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":57:13)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":57:44)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":34:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":34:11)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":36:12)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":36:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":37:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":52:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":37:8)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":38:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":39:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":51:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":42:13)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":50:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":42:23)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":42:36)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":42:53)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":42:17)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":42:63)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":43:13)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":46:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":48:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":45:36)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":45:31)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":45:17)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":45:47)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":49:17)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":53:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":60:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":53:8)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":54:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":55:9)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":59:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":57:32)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":57:40)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":58:26)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":58:13)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":193:1)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":199:1)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":195:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":195:14)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":196:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":196:14)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":197:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":197:14)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":198:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":198:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":215:15)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":217:15)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":220:15)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":222:15)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":210:1)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":225:1)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":211:1)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":213:27)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":213:22)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":213:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":215:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":216:5)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":216:48)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":217:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":220:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":221:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":221:47)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":222:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":224:12)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":224:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":92:19)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":104:23)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":68:1)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":107:1)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":76:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":76:45)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":99:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":99:44)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":70:5)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":70:11)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":72:12)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":72:5)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":73:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":88:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":73:8)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":74:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":75:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":87:9)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":78:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":86:13)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":78:23)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":78:36)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":78:53)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":78:17)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":78:63)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":79:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":82:13)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":84:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":81:36)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":81:31)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":81:17)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":81:47)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":85:27)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":85:17)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":89:5)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":106:5)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":89:8)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":90:5)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":93:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":95:5)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":92:9)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":97:9)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":105:9)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":97:17)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":97:25)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":97:12)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":98:9)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":101:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":103:9)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":99:32)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":99:40)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":100:26)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":100:13)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":104:13)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":110:1)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":144:1)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":118:13)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":118:45)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":136:13)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":136:44)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":112:5)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":112:11)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":114:12)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":114:5)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":115:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":130:5)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":115:8)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":116:5)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":117:9)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":129:9)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":120:13)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":128:13)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":120:23)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":120:36)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":120:53)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":120:17)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":120:63)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":121:13)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":124:13)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":126:13)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":123:36)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":123:31)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":123:17)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":123:47)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":127:27)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":127:17)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":131:5)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":143:5)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":131:8)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":132:5)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":134:9)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":142:9)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":134:17)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":134:25)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":134:12)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":135:9)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":138:9)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":140:9)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":136:32)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":136:40)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":137:26)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":137:13)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":141:23)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":141:13)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":147:1)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":170:1)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":166:13)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":166:44)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":149:5)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":149:11)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":151:12)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":151:5)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":152:5)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":161:5)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":152:8)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":153:5)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":156:5)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":158:5)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":155:19)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":155:9)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":160:16)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":160:9)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":162:5)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":169:5)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":162:8)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":163:5)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":164:9)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":168:9)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":166:32)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":166:40)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":167:26)
#loc222 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":167:13)
#loc223 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":173:1)
#loc224 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":191:1)
#loc225 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":187:13)
#loc226 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":187:44)
#loc227 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":175:5)
#loc228 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":175:11)
#loc229 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":177:12)
#loc230 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":177:5)
#loc231 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":178:5)
#loc232 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":182:5)
#loc233 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":178:8)
#loc234 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":179:5)
#loc235 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":181:16)
#loc236 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":181:9)
#loc237 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":183:5)
#loc238 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":190:5)
#loc239 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":183:8)
#loc240 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":184:5)
#loc241 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":185:9)
#loc242 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":189:9)
#loc243 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":187:32)
#loc244 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":187:40)
#loc245 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":188:26)
#loc246 = loc("CWE369_Divide_by_Zero__float_fgets_04.c":188:13)
#loc247 = loc(fused[#loc1, #loc2])
#loc248 = loc(fused[#loc3, #loc4])
#loc249 = loc(fused[#loc5, #loc6])
#loc250 = loc(fused[#loc7, #loc8])
#loc251 = loc(fused[#loc10, #loc11])
#loc252 = loc(fused[#loc12, #loc13])
#loc253 = loc(fused[#loc14, #loc15])
#loc254 = loc(fused[#loc16, #loc17])
#loc255 = loc(fused[#loc18, #loc19])
#loc256 = loc(fused[#loc21, #loc20])
#loc257 = loc(fused[#loc22, #loc23])
#loc258 = loc(fused[#loc25, #loc23])
#loc259 = loc(fused[#loc26, #loc27])
#loc260 = loc(fused[#loc28, #loc29])
#loc261 = loc(fused[#loc33, #loc34])
#loc262 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc263 = loc(fused[#loc40, #loc41])
#loc264 = loc(fused[#loc43, #loc44])
#loc265 = loc(fused[#loc46, #loc44])
#loc266 = loc(fused[#loc47, #loc48])
#loc267 = loc(fused[#loc49, #loc50])
#loc268 = loc(fused[#loc53, #loc54])
#loc269 = loc(fused[#loc55, #loc56])
#loc270 = loc(fused[#loc57, #loc58])
#loc271 = loc(fused[#loc59, #loc60])
#loc272 = loc(fused[#loc61, #loc62])
#loc273 = loc(fused[#loc63, #loc64])
#loc274 = loc(fused[#loc65, #loc66])
#loc275 = loc(fused[#loc71, #loc72])
#loc278 = loc(fused[#loc82, #loc83])
#loc279 = loc(fused[#loc86, #loc87])
#loc280 = loc(fused[#loc90, #loc89])
#loc281 = loc(fused[#loc93, #loc94])
#loc282 = loc(fused[#loc95, #loc96])
#loc283 = loc(fused[#loc97, #loc98])
#loc284 = loc(fused[#loc99, #loc100])
#loc285 = loc(fused[#loc102, #loc101])
#loc286 = loc(fused[#loc103, #loc104])
#loc287 = loc(fused[#loc106, #loc104])
#loc288 = loc(fused[#loc107, #loc108])
#loc289 = loc(fused[#loc109, #loc110])
#loc290 = loc(fused[#loc114, #loc115])
#loc291 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc292 = loc(fused[#loc121, #loc122])
#loc293 = loc(fused[#loc125, #loc126])
#loc294 = loc(fused[#loc128, #loc129, #loc130, #loc126])
#loc295 = loc(fused[#loc132, #loc133])
#loc296 = loc(fused[#loc136, #loc135])
#loc297 = loc(fused[#loc137, #loc138, #loc139, #loc133])
#loc298 = loc(fused[#loc140, #loc141])
#loc299 = loc(fused[#loc145, #loc146])
#loc300 = loc(fused[#loc147, #loc148])
#loc301 = loc(fused[#loc149, #loc150])
#loc302 = loc(fused[#loc151, #loc152])
#loc303 = loc(fused[#loc154, #loc153])
#loc304 = loc(fused[#loc155, #loc156])
#loc305 = loc(fused[#loc158, #loc156])
#loc306 = loc(fused[#loc159, #loc160])
#loc307 = loc(fused[#loc161, #loc162])
#loc308 = loc(fused[#loc166, #loc167])
#loc309 = loc(fused[#loc168, #loc169, #loc170, #loc162])
#loc310 = loc(fused[#loc173, #loc174])
#loc311 = loc(fused[#loc177, #loc178])
#loc312 = loc(fused[#loc180, #loc178])
#loc313 = loc(fused[#loc181, #loc182])
#loc314 = loc(fused[#loc185, #loc184])
#loc315 = loc(fused[#loc186, #loc187, #loc188, #loc182])
#loc316 = loc(fused[#loc189, #loc190])
#loc317 = loc(fused[#loc195, #loc196])
#loc318 = loc(fused[#loc197, #loc198])
#loc319 = loc(fused[#loc199, #loc200])
#loc320 = loc(fused[#loc202, #loc201])
#loc321 = loc(fused[#loc203, #loc204])
#loc322 = loc(fused[#loc206, #loc207, #loc208, #loc204])
#loc323 = loc(fused[#loc212, #loc211])
#loc324 = loc(fused[#loc213, #loc214])
#loc325 = loc(fused[#loc216, #loc214])
#loc326 = loc(fused[#loc217, #loc218])
#loc327 = loc(fused[#loc219, #loc220])
#loc328 = loc(fused[#loc223, #loc224])
#loc329 = loc(fused[#loc225, #loc226])
#loc330 = loc(fused[#loc227, #loc228])
#loc331 = loc(fused[#loc230, #loc229])
#loc332 = loc(fused[#loc231, #loc232])
#loc333 = loc(fused[#loc234, #loc232])
#loc334 = loc(fused[#loc236, #loc235])
#loc335 = loc(fused[#loc237, #loc238])
#loc336 = loc(fused[#loc240, #loc238])
#loc337 = loc(fused[#loc241, #loc242])
#loc338 = loc(fused[#loc243, #loc244])
