!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc208)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc209)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc210)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc211)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc213)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc214)
  cir.func private @printIntLine(!s32i) loc(#loc215)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc216)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc218)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc220)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc221)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc31)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc208)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %8 ^bb2, ^bb10 loc(#loc224)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc225)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc218)
    cir.store %9, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc218)
    cir.br ^bb4 loc(#loc226)
  ^bb4:  // pred: ^bb3
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
    %11 = cir.const #cir.int<3> : !s32i loc(#loc42)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc42)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc42)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc42)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc42)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc42)
    %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc42)
    %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc210)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
    %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc227)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc228)
  ^bb5:  // pred: ^bb4
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc49)
    %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc50)
    cir.store %26, %3 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb7 loc(#loc47)
  ^bb6:  // pred: ^bb4
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc34)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc34)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc230)
  ^bb12:  // pred: ^bb11
    %29 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc56)
    %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc57)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc231)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc232)
    %34 = cir.call @malloc(%33) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc233)
    cir.store %35, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc234)
    cir.br ^bb13 loc(#loc235)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc65)
    %39 = cir.cmp(eq, %36, %38) : !cir.ptr<!s32i>, !cir.bool loc(#loc236)
    cir.brcond %39 ^bb14, ^bb15 loc(#loc237)
  ^bb14:  // pred: ^bb13
    %40 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc69)
    cir.call @exit(%42) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb15 loc(#loc63)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc63)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc238)
  ^bb17:  // pred: ^bb16
    %43 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc72)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb18 loc(#loc238)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc75)
    %48 = cir.cmp(lt, %45, %47) : !u64i, !cir.bool loc(#loc240)
    cir.brcond %48 ^bb19, ^bb23 loc(#loc76)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc241)
  ^bb20:  // pred: ^bb19
    %49 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
    %51 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !u64i), !cir.ptr<!s32i> loc(#loc81)
    cir.store %49, %52 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb21 loc(#loc71)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc71)
  ^bb22:  // pred: ^bb21
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc83)
    cir.store %54, %1 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.br ^bb18 loc(#loc238)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc71)
  ^bb24:  // pred: ^bb23
    %55 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc86)
    %58 = cir.load %57 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%58) : (!s32i) -> () loc(#loc87)
    %59 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    cir.br ^bb25 loc(#loc55)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc21)
  } loc(#loc217)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc245)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc92)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc246)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc94)
    cir.return loc(#loc91)
  } loc(#loc244)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc251)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc108)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc247)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc254)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb4 loc(#loc114)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc117)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc121)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc122)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc257)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc258)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc259)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc260)
    cir.br ^bb7 loc(#loc261)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc130)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc262)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc263)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc132)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc134)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc132)
    cir.br ^bb9 loc(#loc128)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc128)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc264)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc137)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.br ^bb12 loc(#loc264)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc139)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc140)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc266)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc141)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc267)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc146)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.br ^bb15 loc(#loc136)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc148)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    cir.br ^bb12 loc(#loc264)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc136)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc151)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc152)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc153)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc154)
    cir.br ^bb19 loc(#loc120)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc100)
  } loc(#loc248)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc272)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc273)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc164)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb1 loc(#loc275)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc208)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc276)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc170)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb3 loc(#loc167)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc278)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc174)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc175)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc279)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc280)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc281)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
    cir.br ^bb6 loc(#loc283)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc183)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc183)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc284)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc285)
  ^bb7:  // pred: ^bb6
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc185)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc187)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc185)
    cir.br ^bb8 loc(#loc181)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc181)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc286)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc190)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc287)
    cir.br ^bb11 loc(#loc286)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc192)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc193)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc288)
    cir.brcond %28 ^bb12, ^bb16 loc(#loc194)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc289)
  ^bb13:  // pred: ^bb12
    %29 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc197)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc198)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc199)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.br ^bb14 loc(#loc189)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc189)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc201)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.br ^bb11 loc(#loc286)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc189)
  ^bb17:  // pred: ^bb16
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc204)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc205)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc206)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc207)
    cir.br ^bb18 loc(#loc173)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc156)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":25:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":25:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":47:27)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("/usr/include/stdlib.h":687:1)
#loc19 = loc("/usr/include/stdlib.h":687:32)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":30:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":65:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":38:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":38:49)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":52:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":52:16)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":53:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":53:14)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":32:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":32:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":34:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":34:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":34:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":35:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":50:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":35:8)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":36:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":37:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":49:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":40:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":48:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":40:23)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":40:36)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":40:53)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":40:17)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":40:63)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":41:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":44:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":46:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":43:29)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":43:24)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":43:17)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":43:40)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":47:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":51:5)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":64:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":56:28)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":56:35)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":56:42)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":56:52)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":56:53)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":56:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:43)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:27)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:40)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":57:39)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":61:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:18)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:14)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:21)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:33)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:23)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":59:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":60:29)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":60:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":60:24)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":60:25)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:40)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":58:39)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":62:22)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":62:33)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":62:34)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":62:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":63:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":63:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":130:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":134:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":132:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":132:14)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":133:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":133:14)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":26:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":26:26)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":80:19)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":72:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":101:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":88:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":88:16)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":89:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":89:14)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":74:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":74:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":76:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":76:12)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":76:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":77:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":86:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":77:8)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":78:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":81:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":83:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":80:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":85:16)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":85:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":87:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":100:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":92:28)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":92:35)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":92:42)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":92:52)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":92:53)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":92:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:43)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:27)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:33)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:34)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:40)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":93:39)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":97:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:18)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:14)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:21)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:23)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":95:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":96:29)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":96:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":96:24)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":96:25)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:40)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":94:39)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":98:22)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":98:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":98:34)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":98:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":99:14)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":99:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":104:1)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":128:1)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":115:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":115:16)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":116:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":116:14)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":106:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":106:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":108:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":108:12)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":108:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":109:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":113:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":109:8)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":110:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":112:16)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":112:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":114:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":127:5)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":119:28)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":119:35)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":119:42)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":119:52)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":119:53)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":119:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:43)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:13)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:27)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:33)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:34)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:40)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":120:39)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":124:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:18)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:14)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:21)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:33)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:23)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":122:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":123:29)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":123:13)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":123:24)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":123:25)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:40)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":121:39)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":125:22)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":125:33)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":125:34)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":125:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":126:14)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_05.c":126:9)
#loc208 = loc(fused[#loc1, #loc2])
#loc209 = loc(fused[#loc3, #loc4])
#loc210 = loc(fused[#loc5, #loc6])
#loc211 = loc(fused[#loc7, #loc8])
#loc212 = loc(fused[#loc9, #loc10])
#loc213 = loc(fused[#loc12, #loc13])
#loc214 = loc(fused[#loc14, #loc15])
#loc215 = loc(fused[#loc16, #loc17])
#loc216 = loc(fused[#loc18, #loc19])
#loc217 = loc(fused[#loc20, #loc21])
#loc218 = loc(fused[#loc22, #loc23])
#loc219 = loc(fused[#loc24, #loc25])
#loc220 = loc(fused[#loc26, #loc27])
#loc221 = loc(fused[#loc28, #loc29])
#loc222 = loc(fused[#loc32, #loc30])
#loc223 = loc(fused[#loc33, #loc34])
#loc224 = loc(fused[#loc36, #loc34])
#loc225 = loc(fused[#loc37, #loc38])
#loc226 = loc(fused[#loc39, #loc40])
#loc227 = loc(fused[#loc44, #loc45])
#loc228 = loc(fused[#loc46, #loc47, #loc48, #loc40])
#loc229 = loc(fused[#loc51, #loc52])
#loc230 = loc(fused[#loc54, #loc55])
#loc231 = loc(fused[#loc58, #loc59])
#loc232 = loc(fused[#loc57, #loc59])
#loc233 = loc(fused[#loc56, #loc60])
#loc234 = loc(fused[#loc61, #loc60])
#loc235 = loc(fused[#loc62, #loc63])
#loc236 = loc(fused[#loc64, #loc65])
#loc237 = loc(fused[#loc66, #loc63])
#loc238 = loc(fused[#loc70, #loc71])
#loc239 = loc(fused[#loc73, #loc72])
#loc240 = loc(fused[#loc74, #loc75])
#loc241 = loc(fused[#loc77, #loc71])
#loc242 = loc(fused[#loc79, #loc78])
#loc243 = loc(fused[#loc83, #loc82])
#loc244 = loc(fused[#loc90, #loc91])
#loc245 = loc(fused[#loc92, #loc93])
#loc246 = loc(fused[#loc94, #loc95])
#loc247 = loc(fused[#loc96, #loc97])
#loc248 = loc(fused[#loc99, #loc100])
#loc249 = loc(fused[#loc101, #loc102])
#loc250 = loc(fused[#loc103, #loc104])
#loc251 = loc(fused[#loc105, #loc106])
#loc252 = loc(fused[#loc109, #loc107])
#loc253 = loc(fused[#loc110, #loc111])
#loc254 = loc(fused[#loc113, #loc114, #loc115, #loc111])
#loc255 = loc(fused[#loc118, #loc117])
#loc256 = loc(fused[#loc119, #loc120])
#loc257 = loc(fused[#loc123, #loc124])
#loc258 = loc(fused[#loc122, #loc124])
#loc259 = loc(fused[#loc121, #loc125])
#loc260 = loc(fused[#loc126, #loc125])
#loc261 = loc(fused[#loc127, #loc128])
#loc262 = loc(fused[#loc129, #loc130])
#loc263 = loc(fused[#loc131, #loc128])
#loc264 = loc(fused[#loc135, #loc136])
#loc265 = loc(fused[#loc138, #loc137])
#loc266 = loc(fused[#loc139, #loc140])
#loc267 = loc(fused[#loc142, #loc136])
#loc268 = loc(fused[#loc144, #loc143])
#loc269 = loc(fused[#loc148, #loc147])
#loc270 = loc(fused[#loc155, #loc156])
#loc271 = loc(fused[#loc157, #loc158])
#loc272 = loc(fused[#loc159, #loc160])
#loc273 = loc(fused[#loc161, #loc162])
#loc274 = loc(fused[#loc165, #loc163])
#loc275 = loc(fused[#loc166, #loc167])
#loc276 = loc(fused[#loc169, #loc167])
#loc277 = loc(fused[#loc171, #loc170])
#loc278 = loc(fused[#loc172, #loc173])
#loc279 = loc(fused[#loc176, #loc177])
#loc280 = loc(fused[#loc175, #loc177])
#loc281 = loc(fused[#loc174, #loc178])
#loc282 = loc(fused[#loc179, #loc178])
#loc283 = loc(fused[#loc180, #loc181])
#loc284 = loc(fused[#loc182, #loc183])
#loc285 = loc(fused[#loc184, #loc181])
#loc286 = loc(fused[#loc188, #loc189])
#loc287 = loc(fused[#loc191, #loc190])
#loc288 = loc(fused[#loc192, #loc193])
#loc289 = loc(fused[#loc195, #loc189])
#loc290 = loc(fused[#loc197, #loc196])
#loc291 = loc(fused[#loc201, #loc200])
