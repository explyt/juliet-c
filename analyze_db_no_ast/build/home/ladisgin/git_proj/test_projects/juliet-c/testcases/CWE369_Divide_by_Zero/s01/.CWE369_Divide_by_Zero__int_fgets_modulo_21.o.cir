!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":27:21)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":27:25)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":68:26)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":68:30)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":112:26)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":112:30)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":151:25)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":151:29)
#loc215 = loc(fused[#loc16, #loc17])
#loc235 = loc(fused[#loc71, #loc72])
#loc254 = loc(fused[#loc129, #loc130])
#loc273 = loc(fused[#loc185, #loc186])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc208)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc209)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc210)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc211)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc212)
  cir.func private  @printIntLine(!s32i) loc(#loc213)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc215)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc212)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc218)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc25)
      } loc(#loc217)
    } loc(#loc216)
    cir.return loc(#loc15)
  } loc(#loc214)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_modulo_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc31)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc223)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc223)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc223)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc40)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc40)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc40)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc40)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc40)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc40)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc40)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc209)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc225)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc44)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc49)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc52)
        } loc(#loc226)
      } loc(#loc224)
    } loc(#loc222)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc212)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc56)
    cir.return loc(#loc27)
  } loc(#loc219)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_modulo_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc58)
  } loc(#loc229)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc233)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc68)
  cir.func internal private  @goodB2G1Sink(%arg0: !s32i loc(fused[#loc71, #loc72])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc235)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc233)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc76)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc80)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc84)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc239)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc85)
          cir.if %7 {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc89)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc241)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc91)
          } else {
            %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc68)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc68)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc92)
          } loc(#loc240)
        } loc(#loc238)
      } loc(#loc237)
    } loc(#loc236)
    cir.return loc(#loc70)
  } loc(#loc234)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc98)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc246)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc246)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc246)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc107)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc107)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc107)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc107)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc107)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc107)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc107)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc107)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc209)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc109)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc248)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc111)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc116)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc250)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc120)
        } loc(#loc249)
      } loc(#loc247)
    } loc(#loc245)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc233)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc124)
    cir.return loc(#loc94)
  } loc(#loc242)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc252)
  cir.func internal private  @goodB2G2Sink(%arg0: !s32i loc(fused[#loc129, #loc130])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc254)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc252)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc134)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc258)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc140)
          cir.if %7 {
            %8 = cir.const #cir.int<100> : !s32i loc(#loc144)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc260)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc146)
          } else {
            %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc147)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc147)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc148)
          } loc(#loc259)
        } loc(#loc257)
      } loc(#loc256)
    } loc(#loc255)
    cir.return loc(#loc128)
  } loc(#loc253)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc154)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc265)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc265)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc265)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc162)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc163)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc163)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc163)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc163)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc163)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc163)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc163)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc163)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc209)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc164)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc165)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc267)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc167)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc171)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc172)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc176)
        } loc(#loc268)
      } loc(#loc266)
    } loc(#loc264)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc252)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc180)
    cir.return loc(#loc150)
  } loc(#loc261)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc271)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc185, #loc186])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc273)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc271)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc190)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc190)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc192)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc276)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc194)
      } loc(#loc275)
    } loc(#loc274)
    cir.return loc(#loc184)
  } loc(#loc272)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc278)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc200)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc202)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc271)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc207)
    cir.return loc(#loc196)
  } loc(#loc277)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":51:23)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":25:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":27:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":34:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":28:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":29:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":33:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":29:8)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":30:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":32:22)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":32:28)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":32:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":36:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":56:1)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":38:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":38:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":40:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":40:12)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":40:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":41:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":53:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":42:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":42:45)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":52:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:19)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:32)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:49)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:59)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":44:56)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":45:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":48:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":50:9)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:25)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:20)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:13)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":47:36)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":51:13)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":54:17)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":54:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":55:13)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":55:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":171:1)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":176:1)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":173:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":173:14)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":174:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":174:14)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":175:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":175:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":63:1)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":63:29)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":73:19)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":84:23)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":68:1)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":87:1)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":69:1)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":70:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":86:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":70:8)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":71:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":74:5)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":76:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":73:9)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:9)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":85:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:13)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:21)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":78:18)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":79:9)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":81:9)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":83:9)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":80:26)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":80:32)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":80:13)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":84:13)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":89:1)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":109:1)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":91:5)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":91:9)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":93:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":93:12)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":93:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":94:5)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":106:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":95:9)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":95:45)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:9)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":105:9)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:19)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:32)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:49)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:59)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":97:56)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":98:9)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":101:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":103:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:25)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:20)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":100:36)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":104:23)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":104:13)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":107:22)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":107:5)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":108:18)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":108:5)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":64:1)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":64:29)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":112:1)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":126:1)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":113:1)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":114:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":125:5)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":114:8)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":115:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":124:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:13)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:21)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":117:18)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":118:9)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":120:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":122:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":119:26)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":119:32)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":119:13)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":123:23)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":123:13)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":128:1)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":148:1)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":130:5)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":130:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":132:13)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":132:12)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":132:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":133:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":145:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":134:9)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":134:45)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:9)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":144:9)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:19)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:32)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:49)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:13)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:59)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":136:56)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":137:9)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":140:9)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":142:9)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:25)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:20)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:13)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":139:36)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":143:23)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":143:13)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":146:22)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":146:5)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":147:18)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":147:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":65:1)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":65:28)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":151:1)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":158:1)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":152:1)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":153:5)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":157:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":153:8)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":154:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":156:22)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":156:28)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":156:9)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":160:1)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":169:1)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":162:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":162:9)
#loc199 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":164:13)
#loc200 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":164:12)
#loc201 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":164:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":166:12)
#loc203 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":166:5)
#loc204 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":167:21)
#loc205 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":167:5)
#loc206 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":168:17)
#loc207 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_21.c":168:5)
#loc208 = loc(fused[#loc1, #loc2])
#loc209 = loc(fused[#loc3, #loc4])
#loc210 = loc(fused[#loc5, #loc6])
#loc211 = loc(fused[#loc7, #loc8])
#loc212 = loc(fused[#loc10, #loc11])
#loc213 = loc(fused[#loc12, #loc13])
#loc214 = loc(fused[#loc14, #loc15])
#loc216 = loc(fused[#loc19, #loc20])
#loc217 = loc(fused[#loc22, #loc20])
#loc218 = loc(fused[#loc23, #loc24])
#loc219 = loc(fused[#loc26, #loc27])
#loc220 = loc(fused[#loc28, #loc29])
#loc221 = loc(fused[#loc32, #loc30])
#loc222 = loc(fused[#loc33, #loc34])
#loc223 = loc(fused[#loc35, #loc36])
#loc224 = loc(fused[#loc37, #loc38])
#loc225 = loc(fused[#loc42, #loc43])
#loc226 = loc(fused[#loc45, #loc46, #loc47, #loc38])
#loc227 = loc(fused[#loc50, #loc51])
#loc228 = loc(fused[#loc54, #loc53])
#loc229 = loc(fused[#loc57, #loc58])
#loc230 = loc(fused[#loc59, #loc60])
#loc231 = loc(fused[#loc61, #loc62])
#loc232 = loc(fused[#loc63, #loc64])
#loc233 = loc(fused[#loc65, #loc66])
#loc234 = loc(fused[#loc69, #loc70])
#loc236 = loc(fused[#loc74, #loc75])
#loc237 = loc(fused[#loc77, #loc78, #loc79, #loc75])
#loc238 = loc(fused[#loc81, #loc82])
#loc239 = loc(fused[#loc83, #loc84])
#loc240 = loc(fused[#loc86, #loc87, #loc88, #loc82])
#loc241 = loc(fused[#loc89, #loc90])
#loc242 = loc(fused[#loc93, #loc94])
#loc243 = loc(fused[#loc95, #loc96])
#loc244 = loc(fused[#loc99, #loc97])
#loc245 = loc(fused[#loc100, #loc101])
#loc246 = loc(fused[#loc102, #loc103])
#loc247 = loc(fused[#loc104, #loc105])
#loc248 = loc(fused[#loc109, #loc110])
#loc249 = loc(fused[#loc112, #loc113, #loc114, #loc105])
#loc250 = loc(fused[#loc117, #loc118])
#loc251 = loc(fused[#loc122, #loc121])
#loc252 = loc(fused[#loc125, #loc126])
#loc253 = loc(fused[#loc127, #loc128])
#loc255 = loc(fused[#loc132, #loc133])
#loc256 = loc(fused[#loc135, #loc133])
#loc257 = loc(fused[#loc136, #loc137])
#loc258 = loc(fused[#loc138, #loc139])
#loc259 = loc(fused[#loc141, #loc142, #loc143, #loc137])
#loc260 = loc(fused[#loc144, #loc145])
#loc261 = loc(fused[#loc149, #loc150])
#loc262 = loc(fused[#loc151, #loc152])
#loc263 = loc(fused[#loc155, #loc153])
#loc264 = loc(fused[#loc156, #loc157])
#loc265 = loc(fused[#loc158, #loc159])
#loc266 = loc(fused[#loc160, #loc161])
#loc267 = loc(fused[#loc165, #loc166])
#loc268 = loc(fused[#loc168, #loc169, #loc170, #loc161])
#loc269 = loc(fused[#loc173, #loc174])
#loc270 = loc(fused[#loc178, #loc177])
#loc271 = loc(fused[#loc181, #loc182])
#loc272 = loc(fused[#loc183, #loc184])
#loc274 = loc(fused[#loc188, #loc189])
#loc275 = loc(fused[#loc191, #loc189])
#loc276 = loc(fused[#loc192, #loc193])
#loc277 = loc(fused[#loc195, #loc196])
#loc278 = loc(fused[#loc197, #loc198])
#loc279 = loc(fused[#loc201, #loc199])
#loc280 = loc(fused[#loc203, #loc202])
#loc281 = loc(fused[#loc205, #loc204])
