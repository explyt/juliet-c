!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":23:25)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":23:32)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":91:10)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":91:14)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":91:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":91:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":51:29)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":51:36)
#loc162 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc84, #loc85])
#loc189 = loc(fused[#loc86, #loc87])
#loc194 = loc(fused[#loc104, #loc105])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc10)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc11)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc12)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc12)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc16)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc18)
    %15 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    cir.return %17 : !cir.ptr<!s8i> loc(#loc165)
  } loc(#loc161)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc169)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc35)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc36)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc172)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc173)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc46)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc48)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
      } loc(#loc178)
    } loc(#loc176)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %9 = cir.call @badSource(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc50)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc181)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc181)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc181)
      %12 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc57)
      %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc58)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
      %18 = cir.call @strncat(%13, %14, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc62)
      %21 = cir.const #cir.int<50> : !s32i loc(#loc63)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc63)
      %24 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc65)
      %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc65)
      cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc182)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
      cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    } loc(#loc180)
    cir.return loc(#loc32)
  } loc(#loc170)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc185)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42_good() : () -> () loc(#loc93)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42_bad() : () -> () loc(#loc97)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %17 : !s32i loc(#loc192)
  } loc(#loc187)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc104, #loc105])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc108)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc109)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc109)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc109)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc113)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc115)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc115)
    %15 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
    cir.return %17 : !cir.ptr<!s8i> loc(#loc197)
  } loc(#loc193)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc125)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc200)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc201)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc202)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc137)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
      } loc(#loc206)
    } loc(#loc204)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %9 = cir.call @goodG2BSource(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc139)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc209)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc209)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc209)
      %12 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc146)
      %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc147)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc149)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc149)
      %18 = cir.call @strncat(%13, %14, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc151)
      %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc151)
      %21 = cir.const #cir.int<50> : !s32i loc(#loc152)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc152)
      %24 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc154)
      %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc154)
      cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc210)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
      cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc156)
      %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc157)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
      cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    } loc(#loc208)
    cir.return loc(#loc121)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":29:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":26:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":26:18)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":26:23)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":26:27)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":26:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":26:28)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":27:19)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":27:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":27:10)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":27:14)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":27:15)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":28:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":28:5)
#loc23 = loc("/usr/include/string.h":152:1)
#loc24 = loc("/usr/include/string.h":153:29)
#loc25 = loc("/usr/include/string.h":407:1)
#loc26 = loc("/usr/include/string.h":408:33)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("/usr/include/stdlib.h":687:1)
#loc30 = loc("/usr/include/stdlib.h":687:32)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":31:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":45:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":33:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":33:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":34:20)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":34:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":34:31)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":34:42)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":34:43)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":34:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":35:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":36:22)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":36:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":36:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":36:26)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":37:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":44:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":38:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":38:25)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":40:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":40:17)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":40:23)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":40:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":40:36)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":41:22)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":41:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":41:17)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":41:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":42:19)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":42:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":43:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":43:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":76:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":79:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":78:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":78:13)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":96:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":98:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":101:15)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":103:15)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":91:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":106:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":92:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":94:27)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":94:22)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":94:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":96:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":97:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":97:67)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":98:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":101:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":102:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":102:66)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":103:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":105:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":105:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":51:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":57:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":52:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":54:12)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":54:18)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":54:23)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":54:26)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":54:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":54:27)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":55:18)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":55:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":55:10)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":55:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":55:14)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":56:12)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":56:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":60:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":74:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":62:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":62:12)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":63:20)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":63:27)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":63:31)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":63:42)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":63:43)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":63:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:33)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:17)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:23)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:24)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:30)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":64:29)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":65:26)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":65:12)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":65:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":65:30)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":66:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":73:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":67:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":67:25)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":69:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":69:17)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":69:23)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":69:29)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":69:36)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":70:22)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":70:14)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":70:17)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":70:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":71:19)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":71:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":72:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_42.c":72:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc163 = loc(fused[#loc14, #loc15])
#loc164 = loc(fused[#loc17, #loc16])
#loc165 = loc(fused[#loc22, #loc21])
#loc166 = loc(fused[#loc23, #loc24])
#loc167 = loc(fused[#loc25, #loc26])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc29, #loc30])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc33, #loc34])
#loc172 = loc(fused[#loc37, #loc38])
#loc173 = loc(fused[#loc36, #loc38])
#loc174 = loc(fused[#loc35, #loc39])
#loc175 = loc(fused[#loc40, #loc39])
#loc176 = loc(fused[#loc41, #loc42])
#loc177 = loc(fused[#loc43, #loc44])
#loc178 = loc(fused[#loc45, #loc42])
#loc179 = loc(fused[#loc51, #loc52])
#loc180 = loc(fused[#loc53, #loc54])
#loc181 = loc(fused[#loc55, #loc56])
#loc182 = loc(fused[#loc65, #loc62])
#loc183 = loc(fused[#loc70, #loc71])
#loc184 = loc(fused[#loc72, #loc73])
#loc185 = loc(fused[#loc74, #loc75])
#loc186 = loc(fused[#loc76, #loc77])
#loc187 = loc(fused[#loc82, #loc83])
#loc190 = loc(fused[#loc93, #loc94])
#loc191 = loc(fused[#loc97, #loc98])
#loc192 = loc(fused[#loc101, #loc100])
#loc193 = loc(fused[#loc102, #loc103])
#loc195 = loc(fused[#loc111, #loc112])
#loc196 = loc(fused[#loc114, #loc113])
#loc197 = loc(fused[#loc119, #loc118])
#loc198 = loc(fused[#loc120, #loc121])
#loc199 = loc(fused[#loc122, #loc123])
#loc200 = loc(fused[#loc126, #loc127])
#loc201 = loc(fused[#loc125, #loc127])
#loc202 = loc(fused[#loc124, #loc128])
#loc203 = loc(fused[#loc129, #loc128])
#loc204 = loc(fused[#loc130, #loc131])
#loc205 = loc(fused[#loc132, #loc133])
#loc206 = loc(fused[#loc134, #loc131])
#loc207 = loc(fused[#loc140, #loc141])
#loc208 = loc(fused[#loc142, #loc143])
#loc209 = loc(fused[#loc144, #loc145])
#loc210 = loc(fused[#loc154, #loc151])
