!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":29:16)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":29:23)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":51:20)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":51:27)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":58:20)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":58:27)
#loc71 = loc(fused[#loc12, #loc13])
#loc79 = loc(fused[#loc36, #loc37])
#loc82 = loc(fused[#loc43, #loc44])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc66)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc67)
  cir.func private  @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc68)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc69)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func  @_ZN37CWE369_Divide_by_Zero__float_fgets_629badSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc71)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc73)
      cir.scope {
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc21)
        %3 = cir.const #cir.int<20> : !s32i loc(#loc22)
        %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc67)
        %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %6 = cir.call @fgets(%2, %3, %5) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
        %8 = cir.cmp(ne, %6, %7) : !cir.ptr<!s8i>, !cir.bool loc(#loc75)
        cir.if %8 {
          %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc29)
          %10 = cir.call @atof(%9) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc30)
          %11 = cir.cast(floating, %10 : !cir.double), !cir.float loc(#loc30)
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc31)
          cir.store %11, %12 : !cir.float, !cir.ptr<!cir.float> loc(#loc77)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        } loc(#loc76)
      } loc(#loc74)
    } loc(#loc72)
    cir.return loc(#loc11)
  } loc(#loc70)
  cir.func  @_ZN37CWE369_Divide_by_Zero__float_fgets_6213goodG2BSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc36, #loc37])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc79)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc38)
    %1 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc39)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc40)
    cir.store %1, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc80)
    cir.return loc(#loc35)
  } loc(#loc78)
  cir.func  @_ZN37CWE369_Divide_by_Zero__float_fgets_6213goodB2GSourceERf(%arg0: !cir.ptr<!cir.float> loc(fused[#loc43, #loc44])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["data", init, const] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %0 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc45)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc84)
      cir.scope {
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc52)
        %3 = cir.const #cir.int<20> : !s32i loc(#loc53)
        %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc67)
        %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
        %6 = cir.call @fgets(%2, %3, %5) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc55)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc56)
        %8 = cir.cmp(ne, %6, %7) : !cir.ptr<!s8i>, !cir.bool loc(#loc86)
        cir.if %8 {
          %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc60)
          %10 = cir.call @atof(%9) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc61)
          %11 = cir.cast(floating, %10 : !cir.double), !cir.float loc(#loc61)
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc62)
          cir.store %11, %12 : !cir.float, !cir.ptr<!cir.float> loc(#loc88)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
        } loc(#loc87)
      } loc(#loc85)
    } loc(#loc83)
    cir.return loc(#loc42)
  } loc(#loc81)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_62b.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":41:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":29:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":44:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":30:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":31:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":43:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":32:9)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":32:41)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":34:9)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":42:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":34:19)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":34:32)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":34:49)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":34:13)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":34:59)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":35:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":38:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":40:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":37:32)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":37:27)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":37:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":37:43)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":41:13)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":51:1)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":55:1)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":52:1)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":54:12)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":54:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":58:1)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":73:1)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":59:1)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":60:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":72:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":61:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":61:41)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":63:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":71:9)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":63:19)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":63:32)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":63:49)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":63:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":63:59)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":64:9)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":67:9)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":69:9)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":66:32)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":66:27)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":66:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":66:43)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":70:23)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_62b.cpp":70:13)
#loc66 = loc(fused[#loc1, #loc2])
#loc67 = loc(fused[#loc3, #loc4])
#loc68 = loc(fused[#loc5, #loc6])
#loc69 = loc(fused[#loc7, #loc8])
#loc70 = loc(fused[#loc10, #loc11])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc17, #loc18])
#loc74 = loc(fused[#loc19, #loc20])
#loc75 = loc(fused[#loc24, #loc25])
#loc76 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc77 = loc(fused[#loc31, #loc32])
#loc78 = loc(fused[#loc34, #loc35])
#loc80 = loc(fused[#loc40, #loc39])
#loc81 = loc(fused[#loc41, #loc42])
#loc83 = loc(fused[#loc46, #loc47])
#loc84 = loc(fused[#loc48, #loc49])
#loc85 = loc(fused[#loc50, #loc51])
#loc86 = loc(fused[#loc55, #loc56])
#loc87 = loc(fused[#loc57, #loc58, #loc59, #loc51])
#loc88 = loc(fused[#loc62, #loc63])
