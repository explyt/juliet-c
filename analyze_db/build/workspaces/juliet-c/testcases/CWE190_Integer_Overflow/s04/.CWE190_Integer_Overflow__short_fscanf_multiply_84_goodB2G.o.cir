!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":24:60)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":24:118)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":24:124)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":31:60)
!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G = !cir.record<class "CWE190_Integer_Overflow__short_fscanf_multiply_84::CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G" {!s16i} #cir.record.decl.ast>
#loc49 = loc(fused[#loc9, #loc10])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc46)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func @_ZN49CWE190_Integer_Overflow__short_fscanf_multiply_8457CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2GC2Es(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":24:60), %arg1: !s16i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["dataCopy", init] {alignment = 2 : i64} loc(#loc49)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>> loc(#loc11)
    cir.store %arg1, %1 : !s16i, !cir.ptr<!s16i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> loc(#loc8)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc12)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> -> !cir.ptr<!s16i> loc(#loc13)
    cir.store %3, %4 : !s16i, !cir.ptr<!s16i> loc(#loc50)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc15)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc47)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> -> !cir.ptr<!s16i> loc(#loc13)
    %11 = cir.call @__isoc23_fscanf(%7, %9, %10) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc15)
    cir.return loc(#loc7)
  } loc(#loc48)
  cir.func private @_ZN49CWE190_Integer_Overflow__short_fscanf_multiply_8457CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2GC1Es(!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>, !s16i) alias(@_ZN49CWE190_Integer_Overflow__short_fscanf_multiply_8457CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2GC2Es) loc(#loc48)
  cir.func private @printIntLine(!s32i) loc(#loc51)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc21)
  cir.func @_ZN49CWE190_Integer_Overflow__short_fscanf_multiply_8457CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":31:60)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc24)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>> loc(#loc25)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> loc(#loc24)
    cir.scope {
      %2 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> -> !cir.ptr<!s16i> loc(#loc13)
      %3 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc28)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc28)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc29)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc55)
      cir.if %6 {
        cir.scope {
          %7 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> -> !cir.ptr<!s16i> loc(#loc13)
          %8 = cir.load %7 : !cir.ptr<!s16i>, !s16i loc(#loc33)
          %9 = cir.cast(integral, %8 : !s16i), !s32i loc(#loc33)
          %10 = cir.const #cir.int<32767> : !s32i loc(#loc34)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc35)
          %12 = cir.binop(div, %10, %11) : !s32i loc(#loc58)
          %13 = cir.cmp(lt, %9, %12) : !s32i, !cir.bool loc(#loc59)
          cir.if %13 {
            %14 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc61)
            %15 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G> -> !cir.ptr<!s16i> loc(#loc13)
            %16 = cir.load %15 : !cir.ptr<!s16i>, !s16i loc(#loc42)
            %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc42)
            %18 = cir.const #cir.int<2> : !s32i loc(#loc41)
            %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc42)
            %20 = cir.cast(integral, %19 : !s32i), !s16i loc(#loc42)
            cir.store %20, %14 : !s16i, !cir.ptr<!s16i> loc(#loc61)
            %21 = cir.load %14 : !cir.ptr<!s16i>, !s16i loc(#loc43)
            %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc43)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc44)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc21)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc21)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          } loc(#loc60)
        } loc(#loc57)
      } loc(#loc56)
    } loc(#loc54)
    cir.return loc(#loc23)
  } loc(#loc53)
  cir.func private @_ZN49CWE190_Integer_Overflow__short_fscanf_multiply_8457CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2GD1Ev(!cir.ptr<!ty_CWE190_Integer_Overflow__short_fscanf_multiply_843A3ACWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G>) alias(@_ZN49CWE190_Integer_Overflow__short_fscanf_multiply_8457CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2GD2Ev) loc(#loc53)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":28:20)
#loc6 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":24:1)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":29:1)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":25:1)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":26:12)
#loc13 = loc("./CWE190_Integer_Overflow__short_fscanf_multiply_84.h":56:11)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":26:5)
#loc15 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":28:5)
#loc16 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":28:13)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":43:23)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":31:1)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":46:1)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":32:1)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":33:5)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":45:5)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":33:8)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":33:15)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":34:5)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":36:9)
#loc32 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":44:9)
#loc33 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":36:13)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":36:21)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":36:30)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":36:31)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":37:9)
#loc38 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":40:9)
#loc39 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":42:9)
#loc40 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":38:13)
#loc41 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":38:35)
#loc42 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":38:28)
#loc43 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":39:26)
#loc44 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":39:13)
#loc45 = loc("CWE190_Integer_Overflow__short_fscanf_multiply_84_goodB2G.cpp":43:13)
#loc46 = loc(fused[#loc1, #loc2])
#loc47 = loc(fused[#loc3, #loc4])
#loc48 = loc(fused[#loc6, #loc7])
#loc50 = loc(fused[#loc14, #loc12])
#loc51 = loc(fused[#loc17, #loc18])
#loc52 = loc(fused[#loc19, #loc20])
#loc53 = loc(fused[#loc22, #loc23])
#loc54 = loc(fused[#loc26, #loc27])
#loc55 = loc(fused[#loc28, #loc29])
#loc56 = loc(fused[#loc30, #loc27])
#loc57 = loc(fused[#loc31, #loc32])
#loc58 = loc(fused[#loc34, #loc35])
#loc59 = loc(fused[#loc33, #loc36])
#loc60 = loc(fused[#loc37, #loc38, #loc39, #loc32])
#loc61 = loc(fused[#loc40, #loc41])
