!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc49)
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc50)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc49)
      cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc49)
      %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
      cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc18)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
        %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        %10 = cir.call @__isoc99_sscanf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc20)
        %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc52)
        cir.if %12 {
          %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc22)
        } loc(#loc53)
      } loc(#loc51)
    } loc(#loc48)
    cir.return loc(#loc9)
  } loc(#loc47)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc55)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc54)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc58)
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc58)
      cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc58)
      %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
      cir.scope {
        %4 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc37)
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc38)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc38)
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc39)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc39)
        %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %10 = cir.call @__isoc99_sscanf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc41)
        %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc61)
        cir.if %13 {
          %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc44)
        } loc(#loc62)
      } loc(#loc60)
    } loc(#loc57)
    cir.return loc(#loc28)
  } loc(#loc56)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":35:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":35:32)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":37:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":26:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":40:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":28:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":39:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":31:9)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":31:32)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":32:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":32:23)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":35:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":38:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":35:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":35:42)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":35:51)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":36:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":37:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":61:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":64:1)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":63:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":63:11)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":46:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":59:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":48:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":58:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":51:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":51:32)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":52:9)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":52:23)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":54:9)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":57:9)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":54:13)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":54:20)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":54:32)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":54:42)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":54:51)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":55:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":56:23)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_01.c":56:13)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc5, #loc6])
#loc47 = loc(fused[#loc8, #loc9])
#loc48 = loc(fused[#loc10, #loc11])
#loc49 = loc(fused[#loc12, #loc13])
#loc50 = loc(fused[#loc14, #loc15])
#loc51 = loc(fused[#loc16, #loc17])
#loc52 = loc(fused[#loc18, #loc20])
#loc53 = loc(fused[#loc21, #loc17])
#loc54 = loc(fused[#loc23, #loc24])
#loc55 = loc(fused[#loc25, #loc26])
#loc56 = loc(fused[#loc27, #loc28])
#loc57 = loc(fused[#loc29, #loc30])
#loc58 = loc(fused[#loc31, #loc32])
#loc59 = loc(fused[#loc33, #loc34])
#loc60 = loc(fused[#loc35, #loc36])
#loc61 = loc(fused[#loc37, #loc41])
#loc62 = loc(fused[#loc42, #loc36])
