!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":24:60)
#loc10 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":24:70)
#loc39 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":40:64)
#loc40 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":40:74)
#loc56 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":51:64)
#loc57 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":51:74)
#loc88 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc39, #loc40])
#loc103 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc85)
  cir.func private  @printLongLongLine(!s64i) loc(#loc86)
  cir.func  @CWE401_Memory_Leak__int64_t_calloc_61b_badSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc12)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc13)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc89)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc12)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc90)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc91)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc20)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc21)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s64i>, !s32i loc(#loc93)
      %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc22)
      cir.if %22 {
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc26)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc94)
    } loc(#loc92)
    %8 = cir.const #cir.int<5> : !s64i loc(#loc27)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s64i>, %10 : !s32i), !cir.ptr<!s64i> loc(#loc30)
    cir.store %8, %11 : !s64i, !cir.ptr<!s64i> loc(#loc95)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc33)
    %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc34)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    cir.store %16, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc96)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
    cir.return %17 : !cir.ptr<!s64i> loc(#loc96)
  } loc(#loc87)
  cir.func  @CWE401_Memory_Leak__int64_t_calloc_61b_goodG2BSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc39, #loc40])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc41)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc42)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc42)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc42)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc42)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc42)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc42)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc99)
    %9 = cir.const #cir.int<5> : !s64i loc(#loc44)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s64i>, %11 : !s32i), !cir.ptr<!s64i> loc(#loc47)
    cir.store %9, %12 : !s64i, !cir.ptr<!s64i> loc(#loc100)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc48)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc50)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc48)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc51)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    cir.store %17, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc101)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
    cir.return %18 : !cir.ptr<!s64i> loc(#loc101)
  } loc(#loc97)
  cir.func  @CWE401_Memory_Leak__int64_t_calloc_61b_goodB2GSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc56, #loc57])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc55)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc58)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc59)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc60)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc104)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc105)
    cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc106)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc67)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc68)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s64i>, !s32i loc(#loc108)
      %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc69)
      cir.if %22 {
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc71)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc73)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
      } loc(#loc109)
    } loc(#loc107)
    %8 = cir.const #cir.int<5> : !s64i loc(#loc74)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s64i>, %10 : !s32i), !cir.ptr<!s64i> loc(#loc77)
    cir.store %8, %11 : !s64i, !cir.ptr<!s64i> loc(#loc110)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc78)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc80)
    %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc78)
    cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc81)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc82)
    cir.store %16, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc111)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
    cir.return %17 : !cir.ptr<!s64i> loc(#loc111)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_61b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":33:1)
#loc11 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":27:23)
#loc13 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":27:30)
#loc14 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":27:35)
#loc15 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":27:49)
#loc16 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":27:50)
#loc17 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":27:5)
#loc18 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:5)
#loc19 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:33)
#loc20 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:9)
#loc21 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:17)
#loc22 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:14)
#loc23 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:23)
#loc24 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:24)
#loc25 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:30)
#loc26 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":28:29)
#loc27 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":30:15)
#loc28 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":30:5)
#loc29 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":30:10)
#loc30 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":30:11)
#loc31 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":31:23)
#loc32 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":31:28)
#loc33 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":31:29)
#loc34 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":31:5)
#loc35 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":32:12)
#loc36 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":32:5)
#loc37 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":40:1)
#loc38 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":48:1)
#loc41 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":41:1)
#loc42 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":43:23)
#loc43 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":43:5)
#loc44 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":45:15)
#loc45 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":45:5)
#loc46 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":45:10)
#loc47 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":45:11)
#loc48 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":46:23)
#loc49 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":46:28)
#loc50 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":46:29)
#loc51 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":46:5)
#loc52 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":47:12)
#loc53 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":47:5)
#loc54 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":51:1)
#loc55 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":60:1)
#loc58 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":52:1)
#loc59 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":54:23)
#loc60 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":54:30)
#loc61 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":54:35)
#loc62 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":54:49)
#loc63 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":54:50)
#loc64 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":54:5)
#loc65 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:5)
#loc66 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:33)
#loc67 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:9)
#loc68 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:17)
#loc69 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:14)
#loc70 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:23)
#loc71 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:24)
#loc72 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:30)
#loc73 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":55:29)
#loc74 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":57:15)
#loc75 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":57:5)
#loc76 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":57:10)
#loc77 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":57:11)
#loc78 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":58:23)
#loc79 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":58:28)
#loc80 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":58:29)
#loc81 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":58:5)
#loc82 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":59:12)
#loc83 = loc("CWE401_Memory_Leak__int64_t_calloc_61b.c":59:5)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc14, #loc15])
#loc90 = loc(fused[#loc12, #loc16])
#loc91 = loc(fused[#loc17, #loc16])
#loc92 = loc(fused[#loc18, #loc19])
#loc93 = loc(fused[#loc20, #loc21])
#loc94 = loc(fused[#loc23, #loc19])
#loc95 = loc(fused[#loc28, #loc27])
#loc96 = loc(fused[#loc36, #loc35])
#loc97 = loc(fused[#loc37, #loc38])
#loc99 = loc(fused[#loc43, #loc42])
#loc100 = loc(fused[#loc45, #loc44])
#loc101 = loc(fused[#loc53, #loc52])
#loc102 = loc(fused[#loc54, #loc55])
#loc104 = loc(fused[#loc61, #loc62])
#loc105 = loc(fused[#loc59, #loc63])
#loc106 = loc(fused[#loc64, #loc63])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc67, #loc68])
#loc109 = loc(fused[#loc70, #loc66])
#loc110 = loc(fused[#loc75, #loc74])
#loc111 = loc(fused[#loc83, #loc82])
