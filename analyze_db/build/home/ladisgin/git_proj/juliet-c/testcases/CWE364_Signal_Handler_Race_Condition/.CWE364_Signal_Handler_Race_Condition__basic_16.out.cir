!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":28:27)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":149:10)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":149:14)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":149:20)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":149:32)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":36:24)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc187 = loc(fused[#loc15, #loc16])
#loc218 = loc(fused[#loc93, #loc94])
#loc219 = loc(fused[#loc95, #loc96])
#loc224 = loc(fused[#loc113, #loc114])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc180)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc181)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc182)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc183)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc185)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc187)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc189)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc191)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc14)
  } loc(#loc186)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%1) loc(#loc30)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc195)
          %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc34)
          cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc195)
          %2 = cir.const #cir.int<2> : !s32i loc(#loc35)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
          %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc37)
          cir.scope {
            %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc40)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc41)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc197)
            cir.if %22 {
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc43)
              %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
              %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc44)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc44)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc45)
              %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
              cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc199)
            } loc(#loc198)
          } loc(#loc196)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc47)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc200)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc201)
          cir.store %8, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc202)
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc54)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc55)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc204)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc59)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
            } loc(#loc205)
          } loc(#loc203)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc60)
          %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
          cir.store %9, %10 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc206)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc62)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
          %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc63)
          %14 = cir.get_member %13[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc207)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc64)
          %16 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
          %17 = cir.call @signal(%15, %16) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc66)
          cir.scope {
            %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc69)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc70)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc209)
            cir.if %22 {
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc72)
              %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
              %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc73)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc73)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc74)
              %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc180)
              cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc211)
            } loc(#loc210)
          } loc(#loc208)
        } loc(#loc194)
        cir.break loc(#loc76)
      } loc(#loc193)
    } loc(#loc193)
    cir.return loc(#loc27)
  } loc(#loc192)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc212)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc214)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc90)
  cir.func @main(%arg0: !s32i loc(fused[#loc93, #loc94]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc95, #loc96])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc97)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc98)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc99)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc99)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc100)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc87)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_16_good() : () -> () loc(#loc102)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc88)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc89)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_16_bad() : () -> () loc(#loc106)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc90)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.return %17 : !s32i loc(#loc222)
  } loc(#loc217)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc113, #loc114])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc224)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc118)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc119)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc226)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc121)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc122)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc228)
      } loc(#loc227)
    } loc(#loc225)
    cir.return loc(#loc112)
  } loc(#loc223)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc127)
        cir.condition(%1) loc(#loc127)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc232)
          %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc131)
          cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc232)
          %2 = cir.const #cir.int<2> : !s32i loc(#loc132)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
          %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc134)
          cir.scope {
            %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc137)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc138)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc234)
            cir.if %28 {
              %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc140)
              %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc141)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc141)
              cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc142)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
              cir.store %33, %34 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc236)
            } loc(#loc235)
          } loc(#loc233)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc144)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc237)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc238)
          cir.store %8, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc239)
          cir.scope {
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc151)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc152)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc241)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc155)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc156)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
            } loc(#loc242)
          } loc(#loc240)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc157)
          %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
          cir.store %9, %10 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
          %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc160)
          %14 = cir.get_member %13[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc244)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc161)
          %16 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
          %17 = cir.call @signal(%15, %16) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc163)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc164)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc166)
          cir.scope {
            %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc169)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc170)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc246)
            cir.if %28 {
              %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc172)
              %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc173)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc173)
              cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc172)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc174)
              %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_16StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc181)
              cir.store %33, %34 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc248)
            } loc(#loc247)
          } loc(#loc245)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc176)
          %22 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc177)
          %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc178)
        } loc(#loc231)
        cir.break loc(#loc179)
      } loc(#loc230)
    } loc(#loc230)
    cir.return loc(#loc124)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_16.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":87:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":48:5)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":86:5)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":48:11)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":50:9)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":84:9)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":51:13)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":51:49)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":52:20)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":52:28)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":52:13)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":53:13)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":57:13)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":53:17)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":53:85)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":54:13)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":55:17)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":55:22)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":56:84)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":56:17)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:50)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:57)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:79)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:80)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":58:13)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:13)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:53)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:17)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:37)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:43)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:44)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:50)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":59:49)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":60:80)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":60:13)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":61:85)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":61:13)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":69:20)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":69:28)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":69:13)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":79:13)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":83:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":79:17)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":79:85)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":80:13)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":81:17)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":81:22)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":82:84)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":82:17)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":85:9)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":135:1)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":138:1)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":137:5)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":137:11)
#loc81 = loc("/usr/include/stdlib.h":575:1)
#loc82 = loc("/usr/include/stdlib.h":575:41)
#loc83 = loc("/usr/include/time.h":76:1)
#loc84 = loc("/usr/include/time.h":76:38)
#loc85 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc86 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":154:15)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":156:15)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":159:15)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":161:15)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":149:1)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":164:1)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":150:1)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":152:27)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":152:22)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":152:5)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":154:5)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":155:5)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":155:57)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":156:5)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":159:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":160:5)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":160:56)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":161:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":163:12)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":163:5)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":36:1)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":42:1)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":37:1)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":38:5)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":41:5)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":38:9)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":38:78)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":39:5)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":40:82)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":40:9)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":94:1)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":133:1)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":96:5)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":132:5)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":96:11)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":98:9)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":130:9)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":99:13)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":99:49)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":100:20)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":100:28)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":100:13)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":101:13)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":105:13)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":101:17)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":101:86)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":102:13)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":103:17)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":103:22)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":104:85)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":104:17)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:50)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:57)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:79)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:80)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":106:13)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:13)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:53)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:17)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:37)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:43)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:44)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:50)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":107:49)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":108:81)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":108:13)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":109:86)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":109:13)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":117:20)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":117:28)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":117:13)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":123:20)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":123:28)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":123:13)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":124:13)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":128:13)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":124:17)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":124:86)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":125:13)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":126:17)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":126:22)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":127:85)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":127:17)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":129:20)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":129:28)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":129:13)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_16.c":131:9)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc5, #loc6])
#loc183 = loc(fused[#loc7, #loc8])
#loc184 = loc(fused[#loc9, #loc10])
#loc185 = loc(fused[#loc11, #loc12])
#loc186 = loc(fused[#loc13, #loc14])
#loc188 = loc(fused[#loc18, #loc19])
#loc189 = loc(fused[#loc20, #loc21])
#loc190 = loc(fused[#loc22, #loc19])
#loc191 = loc(fused[#loc24, #loc23])
#loc192 = loc(fused[#loc26, #loc27])
#loc193 = loc(fused[#loc28, #loc29])
#loc194 = loc(fused[#loc31, #loc32])
#loc195 = loc(fused[#loc33, #loc34])
#loc196 = loc(fused[#loc38, #loc39])
#loc197 = loc(fused[#loc40, #loc41])
#loc198 = loc(fused[#loc42, #loc39])
#loc199 = loc(fused[#loc46, #loc45])
#loc200 = loc(fused[#loc48, #loc49])
#loc201 = loc(fused[#loc47, #loc50])
#loc202 = loc(fused[#loc51, #loc50])
#loc203 = loc(fused[#loc52, #loc53])
#loc204 = loc(fused[#loc54, #loc55])
#loc205 = loc(fused[#loc56, #loc53])
#loc206 = loc(fused[#loc61, #loc60])
#loc207 = loc(fused[#loc63, #loc62])
#loc208 = loc(fused[#loc67, #loc68])
#loc209 = loc(fused[#loc69, #loc70])
#loc210 = loc(fused[#loc71, #loc68])
#loc211 = loc(fused[#loc75, #loc74])
#loc212 = loc(fused[#loc77, #loc78])
#loc213 = loc(fused[#loc79, #loc80])
#loc214 = loc(fused[#loc81, #loc82])
#loc215 = loc(fused[#loc83, #loc84])
#loc216 = loc(fused[#loc85, #loc86])
#loc217 = loc(fused[#loc91, #loc92])
#loc220 = loc(fused[#loc102, #loc103])
#loc221 = loc(fused[#loc106, #loc107])
#loc222 = loc(fused[#loc110, #loc109])
#loc223 = loc(fused[#loc111, #loc112])
#loc225 = loc(fused[#loc116, #loc117])
#loc226 = loc(fused[#loc118, #loc119])
#loc227 = loc(fused[#loc120, #loc117])
#loc228 = loc(fused[#loc122, #loc121])
#loc229 = loc(fused[#loc123, #loc124])
#loc230 = loc(fused[#loc125, #loc126])
#loc231 = loc(fused[#loc128, #loc129])
#loc232 = loc(fused[#loc130, #loc131])
#loc233 = loc(fused[#loc135, #loc136])
#loc234 = loc(fused[#loc137, #loc138])
#loc235 = loc(fused[#loc139, #loc136])
#loc236 = loc(fused[#loc143, #loc142])
#loc237 = loc(fused[#loc145, #loc146])
#loc238 = loc(fused[#loc144, #loc147])
#loc239 = loc(fused[#loc148, #loc147])
#loc240 = loc(fused[#loc149, #loc150])
#loc241 = loc(fused[#loc151, #loc152])
#loc242 = loc(fused[#loc153, #loc150])
#loc243 = loc(fused[#loc158, #loc157])
#loc244 = loc(fused[#loc160, #loc159])
#loc245 = loc(fused[#loc167, #loc168])
#loc246 = loc(fused[#loc169, #loc170])
#loc247 = loc(fused[#loc171, #loc168])
#loc248 = loc(fused[#loc175, #loc174])
