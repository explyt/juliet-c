!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @globalReturnsTrueOrFalse() -> !s32i loc(#loc96)
  cir.func linkonce_odr  @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc97)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc98)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc99)
  cir.func  @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    cir.scope {
      %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc18)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc104)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc107)
          %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc109)
          %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc30)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
          cir.call @_ZN14_twoIntsStructC2Ev(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc28)
          cir.store %13, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc108)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %15 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc111)
          %20 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
          cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
        } loc(#loc106)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc115)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc114)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
          cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc42)
          cir.store %11, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc114)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc116)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc117)
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
        } loc(#loc113)
      } loc(#loc105)
    } loc(#loc103)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc52)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc53)
    cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc53)
    cir.return loc(#loc11)
  } loc(#loc100)
  cir.func internal private  @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc121)
    cir.scope {
      %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc62)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc123)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc126)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc127)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
          cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc70)
          cir.store %11, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc126)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc72)
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc128)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc74)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc129)
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
        } loc(#loc125)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc133)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
          cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc81)
          cir.store %11, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc85)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc135)
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
        } loc(#loc131)
      } loc(#loc124)
    } loc(#loc122)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc90)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc91)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc92)
    cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc92)
    cir.return loc(#loc55)
  } loc(#loc119)
  cir.func  @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12L7goodG2BEv() : () -> () loc(#loc95)
    cir.return loc(#loc94)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":26:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":54:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":28:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":28:21)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":29:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":29:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":30:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":50:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":30:8)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":30:33)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":31:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":40:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":42:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":32:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":39:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":34:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":34:46)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":35:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":35:54)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":35:42)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":35:46)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":36:34)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":36:13)
#loc33 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":37:34)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":37:13)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":38:20)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":38:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":43:9)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":49:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":45:13)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":45:46)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":45:42)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":46:34)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":46:13)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":47:34)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":47:13)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":48:20)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":48:13)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":51:21)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":51:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":53:12)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":26:6)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":62:1)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":89:1)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":64:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":64:21)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":65:12)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":65:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":66:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":85:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":66:8)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":66:33)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":67:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":75:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":77:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":68:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":74:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":70:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":70:46)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":70:42)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":71:34)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":71:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":72:34)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":72:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":73:20)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":73:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":78:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":84:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":80:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":80:46)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":80:42)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":81:34)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":81:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":82:34)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":82:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":83:20)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":83:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":86:21)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":86:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":88:12)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":62:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":91:1)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":94:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_12.cpp":93:5)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc4, #loc5])
#loc98 = loc(fused[#loc6, #loc7])
#loc99 = loc(fused[#loc8, #loc9])
#loc100 = loc(fused[#loc10, #loc11])
#loc101 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc15, #loc14])
#loc103 = loc(fused[#loc16, #loc17])
#loc104 = loc(fused[#loc18, #loc19])
#loc105 = loc(fused[#loc20, #loc21, #loc22, #loc17])
#loc106 = loc(fused[#loc23, #loc24])
#loc107 = loc(fused[#loc25, #loc26])
#loc108 = loc(fused[#loc27, #loc28])
#loc109 = loc(fused[#loc29, #loc28])
#loc110 = loc(fused[#loc32, #loc31])
#loc111 = loc(fused[#loc35, #loc34])
#loc112 = loc(fused[#loc38, #loc37])
#loc113 = loc(fused[#loc39, #loc40])
#loc114 = loc(fused[#loc41, #loc42])
#loc115 = loc(fused[#loc43, #loc42])
#loc116 = loc(fused[#loc45, #loc44])
#loc117 = loc(fused[#loc47, #loc46])
#loc118 = loc(fused[#loc49, #loc48])
#loc119 = loc(fused[#loc54, #loc55])
#loc120 = loc(fused[#loc56, #loc57])
#loc121 = loc(fused[#loc59, #loc58])
#loc122 = loc(fused[#loc60, #loc61])
#loc123 = loc(fused[#loc62, #loc63])
#loc124 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc69, #loc70])
#loc127 = loc(fused[#loc71, #loc70])
#loc128 = loc(fused[#loc73, #loc72])
#loc129 = loc(fused[#loc75, #loc74])
#loc130 = loc(fused[#loc77, #loc76])
#loc131 = loc(fused[#loc78, #loc79])
#loc132 = loc(fused[#loc80, #loc81])
#loc133 = loc(fused[#loc82, #loc81])
#loc134 = loc(fused[#loc84, #loc83])
#loc135 = loc(fused[#loc86, #loc85])
#loc136 = loc(fused[#loc88, #loc87])
#loc137 = loc(fused[#loc93, #loc94])
