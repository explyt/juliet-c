!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc377)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc378)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc379)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc380)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc381)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc382)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc383)
  cir.func private @close(!s32i) -> !s32i loc(#loc384)
  cir.func private @printIntLine(!s32i) loc(#loc385)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc388)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc391)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc392)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc393)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc394)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc395)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc36)
      cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc38)
      cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc394)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc47)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc398)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc53)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc54)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc400)
              cir.if %60 {
                cir.break loc(#loc56)
              } loc(#loc401)
            } loc(#loc399)
            %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc402)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc59)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc403)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc404)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc64)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc64)
            %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc405)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc67)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc67)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc406)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc71)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc71)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc407)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc78)
              %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc409)
              %59 = cir.const #cir.int<16> : !u64i loc(#loc410)
              %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc410)
              %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc83)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc84)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc84)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc411)
              cir.if %64 {
                cir.break loc(#loc86)
              } loc(#loc412)
            } loc(#loc408)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %58 = cir.const #cir.int<5> : !s32i loc(#loc90)
              %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc91)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc92)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc414)
              cir.if %62 {
                cir.break loc(#loc94)
              } loc(#loc415)
            } loc(#loc413)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc96)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc97)
            %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc98)
            cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc416)
            cir.scope {
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc104)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc104)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc418)
              cir.if %60 {
                cir.break loc(#loc106)
              } loc(#loc419)
            } loc(#loc417)
            %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
            %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc109)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc109)
            %39 = cir.const #cir.int<4> : !u64i loc(#loc109)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc109)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc109)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc109)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc109)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc110)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc420)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc112)
            cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc421)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc118)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc423)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc119)
                cir.yield %62 : !cir.bool loc(#loc119)
              }, false {
                %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc121)
                %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc424)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc119)
                  cir.yield %66 : !cir.bool loc(#loc119)
                }, false {
                  %66 = cir.const #false loc(#loc119)
                  cir.yield %66 : !cir.bool loc(#loc119)
                }) : (!cir.bool) -> !cir.bool loc(#loc119)
                cir.yield %65 : !cir.bool loc(#loc119)
              }) : (!cir.bool) -> !cir.bool loc(#loc119)
              cir.if %61 {
                cir.break loc(#loc123)
              } loc(#loc425)
            } loc(#loc422)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc124)
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
            %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc126)
            cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc426)
            %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
            %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc128)
            cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc427)
          } loc(#loc397)
          cir.yield loc(#loc42)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc131)
          cir.condition(%13) loc(#loc131)
        } loc(#loc396)
      } loc(#loc396)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc135)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc429)
        cir.if %15 {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc430)
      } loc(#loc428)
      cir.scope {
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc142)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc432)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc145)
        } loc(#loc433)
      } loc(#loc431)
    } loc(#loc390)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc435)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc436)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc436)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc436)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc155)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc438)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc161)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc161)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc440)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc164)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc442)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc167)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc443)
              cir.condition(%16) loc(#loc168)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc171)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc172)
              } loc(#loc444)
              cir.yield loc(#loc163)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc174)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc445)
              cir.yield loc(#loc441)
            } loc(#loc441)
          } loc(#loc441)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc21)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc175)
        } loc(#loc439)
      } loc(#loc437)
    } loc(#loc434)
    cir.return loc(#loc23)
  } loc(#loc387)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc447)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc178)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc448)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc180)
    cir.return loc(#loc177)
  } loc(#loc446)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc450)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc187)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc189)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc454)
      %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc455)
      %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc455)
      cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc455)
      cir.scope {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
        %8 = cir.const #cir.int<10> : !s32i loc(#loc200)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc457)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc204)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
          %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc206)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc206)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc459)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc209)
            cir.store %14, %4 : !s32i, !cir.ptr<!s32i> loc(#loc461)
            cir.for : cond {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc211)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc212)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc462)
              cir.condition(%17) loc(#loc213)
            } body {
              cir.scope {
                %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                %16 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc216)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc216)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc217)
              } loc(#loc463)
              cir.yield loc(#loc208)
            } step {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
              %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc219)
              cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc464)
              cir.yield loc(#loc460)
            } loc(#loc460)
          } loc(#loc460)
        } else {
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc220)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc220)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc221)
        } loc(#loc458)
      } loc(#loc456)
    } loc(#loc453)
    cir.return loc(#loc183)
  } loc(#loc449)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc222)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc466)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc228)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc469)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc470)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc471)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc472)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc473)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc237)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc237)
      cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc471)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc239)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc239)
      cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc472)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc246)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc247)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc248)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc249)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc476)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc254)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc255)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc255)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc478)
              cir.if %60 {
                cir.break loc(#loc257)
              } loc(#loc479)
            } loc(#loc477)
            %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc480)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc260)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc481)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc482)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc265)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc265)
            %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc483)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc267)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc267)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc484)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc269)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc269)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc270)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc485)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc487)
              %59 = cir.const #cir.int<16> : !u64i loc(#loc488)
              %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc488)
              %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc280)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc281)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc281)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc489)
              cir.if %64 {
                cir.break loc(#loc283)
              } loc(#loc490)
            } loc(#loc486)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %58 = cir.const #cir.int<5> : !s32i loc(#loc287)
              %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc289)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc289)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc492)
              cir.if %62 {
                cir.break loc(#loc291)
              } loc(#loc493)
            } loc(#loc491)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc293)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc294)
            %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc295)
            cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc494)
            cir.scope {
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc301)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc301)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc496)
              cir.if %60 {
                cir.break loc(#loc303)
              } loc(#loc497)
            } loc(#loc495)
            %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc305)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc305)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc306)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc306)
            %39 = cir.const #cir.int<4> : !u64i loc(#loc306)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc306)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc306)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc306)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc306)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc307)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc307)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc498)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc308)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc309)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc309)
            cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc499)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc314)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc315)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc315)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc501)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc316)
                cir.yield %62 : !cir.bool loc(#loc316)
              }, false {
                %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc318)
                %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc502)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc316)
                  cir.yield %66 : !cir.bool loc(#loc316)
                }, false {
                  %66 = cir.const #false loc(#loc316)
                  cir.yield %66 : !cir.bool loc(#loc316)
                }) : (!cir.bool) -> !cir.bool loc(#loc316)
                cir.yield %65 : !cir.bool loc(#loc316)
              }) : (!cir.bool) -> !cir.bool loc(#loc316)
              cir.if %61 {
                cir.break loc(#loc320)
              } loc(#loc503)
            } loc(#loc500)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc321)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc321)
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc322)
            %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc323)
            %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc323)
            cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc504)
            %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc324)
            %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc325)
            cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc505)
          } loc(#loc475)
          cir.yield loc(#loc243)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc328)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc328)
          cir.condition(%13) loc(#loc328)
        } loc(#loc474)
      } loc(#loc474)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc331)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc332)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc332)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc507)
        cir.if %15 {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc334)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc335)
        } loc(#loc508)
      } loc(#loc506)
      cir.scope {
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc338)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc339)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc339)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc510)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc341)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc342)
        } loc(#loc511)
      } loc(#loc509)
    } loc(#loc468)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc513)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc514)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc514)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc514)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc352)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc516)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc354)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc355)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc517)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc353)
            cir.yield %14 : !cir.bool loc(#loc353)
          }, false {
            %14 = cir.const #false loc(#loc353)
            cir.yield %14 : !cir.bool loc(#loc353)
          }) : (!cir.bool) -> !cir.bool loc(#loc353)
          cir.yield %13 : !cir.bool loc(#loc353)
        }, false {
          %10 = cir.const #false loc(#loc353)
          cir.yield %10 : !cir.bool loc(#loc353)
        }) : (!cir.bool) -> !cir.bool loc(#loc353)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc360)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc361)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc362)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc362)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc519)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc365)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc521)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc368)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc522)
              cir.condition(%17) loc(#loc369)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc371)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc372)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc372)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc373)
              } loc(#loc523)
              cir.yield loc(#loc364)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc374)
              %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc375)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc524)
              cir.yield loc(#loc520)
            } loc(#loc520)
          } loc(#loc520)
        } else {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc222)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc222)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc376)
        } loc(#loc518)
      } loc(#loc515)
    } loc(#loc512)
    cir.return loc(#loc224)
  } loc(#loc465)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":134:23)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":44:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":137:1)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":46:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":46:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":48:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":48:12)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":48:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":49:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":117:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":54:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":54:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":55:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":55:28)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":56:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":56:31)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":57:9)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":57:31)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":58:9)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":58:41)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":59:9)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":102:17)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":60:9)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":101:9)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":69:35)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":69:44)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":69:57)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":69:28)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":69:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":69:68)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":70:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":73:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":70:17)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":70:33)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":71:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":72:17)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:20)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:21)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:30)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:33)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:47)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":74:48)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":75:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":75:13)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":76:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":76:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":77:38)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":77:32)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":77:13)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":77:46)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:13)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":81:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:22)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:54)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:55)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:64)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:78)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:17)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":78:84)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":79:13)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":80:17)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":82:13)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":85:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":82:24)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":82:38)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":82:17)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":82:57)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":83:13)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":84:17)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":86:35)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":86:49)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":86:55)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":86:28)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":86:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":86:59)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":87:13)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":90:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":87:17)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":87:33)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":88:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":89:17)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:31)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:45)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:58)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:76)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:79)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:26)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":92:80)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":93:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":96:13)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":93:17)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":93:31)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":93:44)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":93:47)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":93:61)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":94:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":95:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":98:39)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":98:25)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":98:13)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":100:25)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":100:20)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":100:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":100:36)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":102:16)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":103:9)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":106:9)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":103:13)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":103:29)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":104:9)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":105:26)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":105:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":107:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":110:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":107:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":107:29)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":108:9)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":109:26)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":109:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":118:5)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":136:5)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":119:9)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":119:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":120:9)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":120:30)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":123:9)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":135:9)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":123:13)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":123:20)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":124:9)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":131:9)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":133:9)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":125:28)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":125:20)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":125:13)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:13)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":130:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:21)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:17)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:24)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:28)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:26)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":128:13)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":129:37)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":129:30)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":129:17)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:33)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":127:32)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":134:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":268:1)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":272:1)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":270:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":270:13)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":271:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":271:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":144:1)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":171:1)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":146:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":146:9)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":148:13)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":148:12)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":148:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":151:12)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":151:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":152:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":170:5)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":153:9)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":153:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":154:9)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":154:30)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":157:9)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":169:9)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":157:13)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":157:20)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":158:9)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":165:9)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":167:9)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":159:28)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":159:20)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":159:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":164:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:21)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:17)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:24)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:28)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:26)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":162:13)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":163:37)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":163:30)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":163:17)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:33)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":161:32)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":168:23)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":168:13)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":263:23)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":174:1)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":266:1)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":176:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":176:9)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":178:13)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":178:12)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":178:5)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":179:5)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":247:5)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":184:9)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":184:13)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":185:9)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":185:28)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":186:9)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":186:31)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":187:9)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":187:31)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":188:9)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":188:41)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":189:9)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":232:17)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":190:9)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":231:9)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":199:35)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":199:44)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":199:57)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":199:28)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":199:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":199:68)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":200:13)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":203:13)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":200:17)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":200:33)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":201:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":202:17)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:20)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:21)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:30)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:33)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:47)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:13)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":204:48)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":205:34)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":205:13)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":206:39)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":206:13)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":207:38)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":207:32)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":207:13)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":207:46)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:13)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":211:13)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:22)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:54)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:55)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:64)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:78)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:17)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":208:84)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":209:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":210:17)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":212:13)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":215:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":212:24)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":212:38)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":212:17)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":212:57)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":213:13)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":214:17)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":216:35)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":216:49)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":216:55)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":216:28)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":216:13)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":216:59)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":217:13)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":220:13)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":217:17)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":217:33)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":218:13)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":219:17)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:31)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:45)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:58)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:76)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:79)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:26)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:13)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":222:80)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":223:13)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":226:13)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":223:17)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":223:31)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":223:44)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":223:47)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":223:61)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":224:13)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":225:17)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":228:39)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":228:25)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":228:13)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":230:25)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":230:20)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":230:13)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":230:36)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":232:16)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":233:9)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":236:9)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":233:13)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":233:29)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":234:9)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":235:26)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":235:13)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":237:9)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":240:9)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":237:13)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":237:29)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":238:9)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":239:26)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":239:13)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":248:5)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":265:5)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":249:9)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":249:13)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":250:9)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":250:30)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:9)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":264:9)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:13)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:21)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:23)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:26)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:34)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":252:36)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":253:9)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":260:9)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":262:9)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":254:28)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":254:20)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":254:13)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:13)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":259:13)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:21)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:17)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:24)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:28)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:26)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":257:13)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":258:37)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":258:30)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":258:17)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:33)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":256:32)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_01.c":263:13)
#loc377 = loc(fused[#loc1, #loc2])
#loc378 = loc(fused[#loc3, #loc4])
#loc379 = loc(fused[#loc5, #loc6])
#loc380 = loc(fused[#loc7, #loc8])
#loc381 = loc(fused[#loc9, #loc10])
#loc382 = loc(fused[#loc11, #loc12])
#loc383 = loc(fused[#loc13, #loc14])
#loc384 = loc(fused[#loc15, #loc16])
#loc385 = loc(fused[#loc17, #loc18])
#loc386 = loc(fused[#loc19, #loc20])
#loc387 = loc(fused[#loc22, #loc23])
#loc388 = loc(fused[#loc24, #loc25])
#loc389 = loc(fused[#loc28, #loc26])
#loc390 = loc(fused[#loc29, #loc30])
#loc391 = loc(fused[#loc31, #loc32])
#loc392 = loc(fused[#loc33, #loc34])
#loc393 = loc(fused[#loc35, #loc36])
#loc394 = loc(fused[#loc37, #loc38])
#loc395 = loc(fused[#loc39, #loc40])
#loc396 = loc(fused[#loc41, #loc42])
#loc397 = loc(fused[#loc43, #loc44])
#loc398 = loc(fused[#loc49, #loc50])
#loc399 = loc(fused[#loc51, #loc52])
#loc400 = loc(fused[#loc53, #loc54])
#loc401 = loc(fused[#loc55, #loc52])
#loc402 = loc(fused[#loc57, #loc58])
#loc403 = loc(fused[#loc60, #loc61])
#loc404 = loc(fused[#loc62, #loc63])
#loc405 = loc(fused[#loc66, #loc64])
#loc406 = loc(fused[#loc70, #loc67])
#loc407 = loc(fused[#loc74, #loc75])
#loc408 = loc(fused[#loc76, #loc77])
#loc409 = loc(fused[#loc79, #loc80])
#loc410 = loc(fused[#loc81, #loc82])
#loc411 = loc(fused[#loc83, #loc84])
#loc412 = loc(fused[#loc85, #loc77])
#loc413 = loc(fused[#loc87, #loc88])
#loc414 = loc(fused[#loc91, #loc92])
#loc415 = loc(fused[#loc93, #loc88])
#loc416 = loc(fused[#loc99, #loc100])
#loc417 = loc(fused[#loc101, #loc102])
#loc418 = loc(fused[#loc103, #loc104])
#loc419 = loc(fused[#loc105, #loc102])
#loc420 = loc(fused[#loc109, #loc110])
#loc421 = loc(fused[#loc113, #loc114])
#loc422 = loc(fused[#loc115, #loc116])
#loc423 = loc(fused[#loc117, #loc118])
#loc424 = loc(fused[#loc120, #loc121])
#loc425 = loc(fused[#loc122, #loc116])
#loc426 = loc(fused[#loc126, #loc124])
#loc427 = loc(fused[#loc129, #loc130])
#loc428 = loc(fused[#loc132, #loc133])
#loc429 = loc(fused[#loc134, #loc135])
#loc430 = loc(fused[#loc136, #loc133])
#loc431 = loc(fused[#loc139, #loc140])
#loc432 = loc(fused[#loc141, #loc142])
#loc433 = loc(fused[#loc143, #loc140])
#loc434 = loc(fused[#loc146, #loc147])
#loc435 = loc(fused[#loc148, #loc149])
#loc436 = loc(fused[#loc150, #loc151])
#loc437 = loc(fused[#loc152, #loc153])
#loc438 = loc(fused[#loc154, #loc155])
#loc439 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc440 = loc(fused[#loc161, #loc159])
#loc441 = loc(fused[#loc162, #loc163])
#loc442 = loc(fused[#loc165, #loc164])
#loc443 = loc(fused[#loc166, #loc167])
#loc444 = loc(fused[#loc169, #loc163])
#loc445 = loc(fused[#loc174, #loc173])
#loc446 = loc(fused[#loc176, #loc177])
#loc447 = loc(fused[#loc178, #loc179])
#loc448 = loc(fused[#loc180, #loc181])
#loc449 = loc(fused[#loc182, #loc183])
#loc450 = loc(fused[#loc184, #loc185])
#loc451 = loc(fused[#loc188, #loc186])
#loc452 = loc(fused[#loc190, #loc189])
#loc453 = loc(fused[#loc191, #loc192])
#loc454 = loc(fused[#loc193, #loc194])
#loc455 = loc(fused[#loc195, #loc196])
#loc456 = loc(fused[#loc197, #loc198])
#loc457 = loc(fused[#loc199, #loc200])
#loc458 = loc(fused[#loc201, #loc202, #loc203, #loc198])
#loc459 = loc(fused[#loc206, #loc204])
#loc460 = loc(fused[#loc207, #loc208])
#loc461 = loc(fused[#loc210, #loc209])
#loc462 = loc(fused[#loc211, #loc212])
#loc463 = loc(fused[#loc214, #loc208])
#loc464 = loc(fused[#loc219, #loc218])
#loc465 = loc(fused[#loc223, #loc224])
#loc466 = loc(fused[#loc225, #loc226])
#loc467 = loc(fused[#loc229, #loc227])
#loc468 = loc(fused[#loc230, #loc231])
#loc469 = loc(fused[#loc232, #loc233])
#loc470 = loc(fused[#loc234, #loc235])
#loc471 = loc(fused[#loc236, #loc237])
#loc472 = loc(fused[#loc238, #loc239])
#loc473 = loc(fused[#loc240, #loc241])
#loc474 = loc(fused[#loc242, #loc243])
#loc475 = loc(fused[#loc244, #loc245])
#loc476 = loc(fused[#loc250, #loc251])
#loc477 = loc(fused[#loc252, #loc253])
#loc478 = loc(fused[#loc254, #loc255])
#loc479 = loc(fused[#loc256, #loc253])
#loc480 = loc(fused[#loc258, #loc259])
#loc481 = loc(fused[#loc261, #loc262])
#loc482 = loc(fused[#loc263, #loc264])
#loc483 = loc(fused[#loc266, #loc265])
#loc484 = loc(fused[#loc268, #loc267])
#loc485 = loc(fused[#loc271, #loc272])
#loc486 = loc(fused[#loc273, #loc274])
#loc487 = loc(fused[#loc276, #loc277])
#loc488 = loc(fused[#loc278, #loc279])
#loc489 = loc(fused[#loc280, #loc281])
#loc490 = loc(fused[#loc282, #loc274])
#loc491 = loc(fused[#loc284, #loc285])
#loc492 = loc(fused[#loc288, #loc289])
#loc493 = loc(fused[#loc290, #loc285])
#loc494 = loc(fused[#loc296, #loc297])
#loc495 = loc(fused[#loc298, #loc299])
#loc496 = loc(fused[#loc300, #loc301])
#loc497 = loc(fused[#loc302, #loc299])
#loc498 = loc(fused[#loc306, #loc307])
#loc499 = loc(fused[#loc310, #loc311])
#loc500 = loc(fused[#loc312, #loc313])
#loc501 = loc(fused[#loc314, #loc315])
#loc502 = loc(fused[#loc317, #loc318])
#loc503 = loc(fused[#loc319, #loc313])
#loc504 = loc(fused[#loc323, #loc321])
#loc505 = loc(fused[#loc326, #loc327])
#loc506 = loc(fused[#loc329, #loc330])
#loc507 = loc(fused[#loc331, #loc332])
#loc508 = loc(fused[#loc333, #loc330])
#loc509 = loc(fused[#loc336, #loc337])
#loc510 = loc(fused[#loc338, #loc339])
#loc511 = loc(fused[#loc340, #loc337])
#loc512 = loc(fused[#loc343, #loc344])
#loc513 = loc(fused[#loc345, #loc346])
#loc514 = loc(fused[#loc347, #loc348])
#loc515 = loc(fused[#loc349, #loc350])
#loc516 = loc(fused[#loc351, #loc352])
#loc517 = loc(fused[#loc354, #loc356])
#loc518 = loc(fused[#loc357, #loc358, #loc359, #loc350])
#loc519 = loc(fused[#loc362, #loc360])
#loc520 = loc(fused[#loc363, #loc364])
#loc521 = loc(fused[#loc366, #loc365])
#loc522 = loc(fused[#loc367, #loc368])
#loc523 = loc(fused[#loc370, #loc364])
#loc524 = loc(fused[#loc375, #loc374])
