!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":165:10)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":165:14)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":165:20)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":165:32)
#true = #cir.bool<true> : !cir.bool
#loc249 = loc(fused[#loc117, #loc118])
#loc250 = loc(fused[#loc119, #loc120])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc205)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc206)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc207)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc208)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc209)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc210)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc16)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc19)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc213)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc207)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc207)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc207)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc30)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc219)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc219)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc40)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc41)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc221)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc42)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc222)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc47)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc48)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc49)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc49)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc225)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc225)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc210)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc226)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc228)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc64)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc64)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc230)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc68)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc68)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc231)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc66)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc66)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc70)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc232)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc65)
                          cir.yield %49 : !cir.bool loc(#loc65)
                        }, false {
                          %49 = cir.const #false loc(#loc65)
                          cir.yield %49 : !cir.bool loc(#loc65)
                        }) : (!cir.bool) -> !cir.bool loc(#loc65)
                        cir.yield %48 : !cir.bool loc(#loc65)
                      }, false {
                        %38 = cir.const #false loc(#loc65)
                        cir.yield %38 : !cir.bool loc(#loc65)
                      }) : (!cir.bool) -> !cir.bool loc(#loc65)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc72)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc72)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc75)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc75)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc234)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc235)
                      } loc(#loc233)
                    } loc(#loc229)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc77)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc78)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc78)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc80)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc81)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc236)
                  } loc(#loc227)
                } loc(#loc224)
              } loc(#loc223)
            } loc(#loc220)
          } loc(#loc218)
          cir.break loc(#loc82)
        } loc(#loc31)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc16)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc16)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          cir.break loc(#loc85)
        } loc(#loc83)
        cir.yield loc(#loc28)
      } loc(#loc28)
    } loc(#loc217)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc238)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc19)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc19)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc91)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc239)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc97)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc241)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc100)
        } loc(#loc242)
      } loc(#loc240)
    } loc(#loc237)
    cir.return loc(#loc23)
  } loc(#loc214)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    cir.return loc(#loc102)
  } loc(#loc243)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc246)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc114)
  cir.func @main(%arg0: !s32i loc(fused[#loc117, #loc118]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc122)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc123)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc124)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_15_good() : () -> () loc(#loc126)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc113)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_15_bad() : () -> () loc(#loc130)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    cir.return %17 : !s32i loc(#loc253)
  } loc(#loc248)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc137)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc206)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc206)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc206)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc146)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          cir.break loc(#loc150)
        } loc(#loc147)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc152)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc137)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc137)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
          cir.break loc(#loc154)
        } loc(#loc151)
        cir.yield loc(#loc144)
      } loc(#loc144)
    } loc(#loc258)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc260)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc160)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc160)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc161)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc166)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc167)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc263)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc169)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc170)
        } loc(#loc264)
      } loc(#loc262)
    } loc(#loc259)
    cir.return loc(#loc139)
  } loc(#loc255)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc205)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc179)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc181)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc183)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc183)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc181)
          cir.break loc(#loc184)
        } loc(#loc180)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc187)
          cir.break loc(#loc188)
        } loc(#loc185)
        cir.yield loc(#loc177)
      } loc(#loc177)
    } loc(#loc268)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc270)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
      %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc194)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc194)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc195)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc271)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc200)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc201)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc201)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc273)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc203)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc204)
        } loc(#loc274)
      } loc(#loc272)
    } loc(#loc269)
    cir.return loc(#loc172)
  } loc(#loc265)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":125:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":125:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":97:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":97:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":42:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":42:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":66:27)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":75:19)
#loc17 = loc("/usr/include/stdio.h":893:1)
#loc18 = loc("/usr/include/stdio.h":894:3)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:28)
#loc20 = loc("/usr/include/stdio.h":887:1)
#loc21 = loc("/usr/include/stdio.h":887:36)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":39:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":87:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":41:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":41:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":43:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":43:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":44:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":77:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":44:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":46:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":47:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":71:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:37)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:26)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:33)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":70:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":52:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":69:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:23)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:28)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:27)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:43)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:47)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:57)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:67)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":55:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":63:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":65:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:34)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:38)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":62:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:31)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:33)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:36)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:41)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:49)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:50)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:55)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":60:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:39)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:26)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:34)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:35)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":66:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:33)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:22)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:29)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":72:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":73:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":75:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":76:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":78:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":86:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":79:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":79:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:22)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:16)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:31)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":85:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:21)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":83:9)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":84:20)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":84:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":149:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":153:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":151:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":151:14)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":152:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":152:14)
#loc107 = loc("/usr/include/stdlib.h":575:1)
#loc108 = loc("/usr/include/stdlib.h":575:41)
#loc109 = loc("/usr/include/time.h":76:1)
#loc110 = loc("/usr/include/time.h":76:38)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":170:15)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":172:15)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":175:15)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":177:15)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":165:1)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":180:1)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":166:1)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":168:27)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":168:22)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":168:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":170:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":171:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":171:60)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":172:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":175:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":176:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":176:59)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":177:5)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":179:12)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":179:5)
#loc135 = loc("/usr/include/string.h":149:1)
#loc136 = loc("/usr/include/string.h":150:14)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":107:22)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":94:1)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":119:1)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":96:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":96:12)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":98:12)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":98:5)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":99:5)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":109:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":99:12)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":101:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":103:19)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":103:9)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":104:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":105:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":107:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":107:16)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":108:9)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":110:5)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":118:5)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":111:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":111:15)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:22)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:28)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:16)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:31)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":117:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:21)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":115:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":116:20)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":116:13)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":122:1)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":147:1)
#loc173 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":124:5)
#loc174 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":124:12)
#loc175 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":126:12)
#loc176 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":126:5)
#loc177 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":127:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":137:5)
#loc179 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":127:12)
#loc180 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":129:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":131:9)
#loc182 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":131:16)
#loc183 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":131:22)
#loc184 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":132:9)
#loc185 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":133:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":135:19)
#loc187 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":135:9)
#loc188 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":136:9)
#loc189 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":138:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":146:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":139:9)
#loc192 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":139:15)
#loc193 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:22)
#loc194 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:28)
#loc195 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:16)
#loc196 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:31)
#loc198 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":145:9)
#loc200 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:13)
#loc201 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:21)
#loc202 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":143:9)
#loc203 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":144:20)
#loc204 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":144:13)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc9, #loc10])
#loc210 = loc(fused[#loc11, #loc12])
#loc211 = loc(fused[#loc13, #loc14])
#loc212 = loc(fused[#loc17, #loc18])
#loc213 = loc(fused[#loc20, #loc21])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc27, #loc26])
#loc217 = loc(fused[#loc28, #loc29])
#loc218 = loc(fused[#loc32, #loc33])
#loc219 = loc(fused[#loc34, #loc35])
#loc220 = loc(fused[#loc38, #loc39])
#loc221 = loc(fused[#loc40, #loc41])
#loc222 = loc(fused[#loc40, #loc42])
#loc223 = loc(fused[#loc43, #loc39])
#loc224 = loc(fused[#loc44, #loc45])
#loc225 = loc(fused[#loc49, #loc50])
#loc226 = loc(fused[#loc52, #loc53])
#loc227 = loc(fused[#loc54, #loc55, #loc56, #loc45])
#loc228 = loc(fused[#loc59, #loc60])
#loc229 = loc(fused[#loc61, #loc62])
#loc230 = loc(fused[#loc63, #loc64])
#loc231 = loc(fused[#loc67, #loc68])
#loc232 = loc(fused[#loc66, #loc70])
#loc233 = loc(fused[#loc71, #loc62])
#loc234 = loc(fused[#loc74, #loc75])
#loc235 = loc(fused[#loc73, #loc72])
#loc236 = loc(fused[#loc79, #loc78])
#loc237 = loc(fused[#loc86, #loc87])
#loc238 = loc(fused[#loc88, #loc89])
#loc239 = loc(fused[#loc92, #loc93])
#loc240 = loc(fused[#loc94, #loc95])
#loc241 = loc(fused[#loc96, #loc97])
#loc242 = loc(fused[#loc98, #loc95])
#loc243 = loc(fused[#loc101, #loc102])
#loc244 = loc(fused[#loc103, #loc104])
#loc245 = loc(fused[#loc105, #loc106])
#loc246 = loc(fused[#loc107, #loc108])
#loc247 = loc(fused[#loc109, #loc110])
#loc248 = loc(fused[#loc115, #loc116])
#loc251 = loc(fused[#loc126, #loc127])
#loc252 = loc(fused[#loc130, #loc131])
#loc253 = loc(fused[#loc134, #loc133])
#loc254 = loc(fused[#loc135, #loc136])
#loc255 = loc(fused[#loc138, #loc139])
#loc256 = loc(fused[#loc140, #loc141])
#loc257 = loc(fused[#loc143, #loc142])
#loc258 = loc(fused[#loc144, #loc145])
#loc259 = loc(fused[#loc155, #loc156])
#loc260 = loc(fused[#loc157, #loc158])
#loc261 = loc(fused[#loc162, #loc163])
#loc262 = loc(fused[#loc164, #loc165])
#loc263 = loc(fused[#loc166, #loc167])
#loc264 = loc(fused[#loc168, #loc165])
#loc265 = loc(fused[#loc171, #loc172])
#loc266 = loc(fused[#loc173, #loc174])
#loc267 = loc(fused[#loc176, #loc175])
#loc268 = loc(fused[#loc177, #loc178])
#loc269 = loc(fused[#loc189, #loc190])
#loc270 = loc(fused[#loc191, #loc192])
#loc271 = loc(fused[#loc196, #loc197])
#loc272 = loc(fused[#loc198, #loc199])
#loc273 = loc(fused[#loc200, #loc201])
#loc274 = loc(fused[#loc202, #loc199])
