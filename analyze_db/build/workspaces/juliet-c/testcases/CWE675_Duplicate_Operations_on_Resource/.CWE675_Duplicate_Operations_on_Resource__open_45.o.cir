!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc95)
  cir.global "private" internal dsolocal @CWE675_Duplicate_Operations_on_Resource__open_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc96)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc98)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc15)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc16)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc100)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc17)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc18)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc101)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc19)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc23)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %15 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_45_badData : !cir.ptr<!s32i> loc(#loc96)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %16 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc104)
    cir.call %16() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc9)
  } loc(#loc97)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc106)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc105)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc109)
    %1 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_45_badData : !cir.ptr<!s32i> loc(#loc96)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %4 = cir.call @close(%3) : (!s32i) -> !s32i loc(#loc39)
    cir.return loc(#loc35)
  } loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" internal dsolocal @CWE675_Duplicate_Operations_on_Resource__open_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc110)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc48)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc40)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc40)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc51)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc114)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc52)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc53)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc115)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc54)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_45_goodG2BData : !cir.ptr<!s32i> loc(#loc110)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %14 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc118)
    cir.call %14() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc44)
  } loc(#loc111)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_45_goodG2BData : !cir.ptr<!s32i> loc(#loc110)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %4 = cir.call @close(%3) : (!s32i) -> !s32i loc(#loc66)
    cir.return loc(#loc62)
  } loc(#loc119)
  cir.global "private" internal dsolocal @CWE675_Duplicate_Operations_on_Resource__open_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc121)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc74)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc76)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc76)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc78)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc125)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc79)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc80)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc126)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc81)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc85)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %15 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_45_goodB2GData : !cir.ptr<!s32i> loc(#loc121)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %16 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc129)
    cir.call %16() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc70)
  } loc(#loc122)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_45_goodB2GData : !cir.ptr<!s32i> loc(#loc121)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.return loc(#loc91)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_45.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:17)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":29:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":29:12)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":42:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":51:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":44:5)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":44:9)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":45:13)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":45:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":45:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:39)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:46)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:55)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:63)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:12)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:5)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":46:71)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":48:11)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":48:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":49:64)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":49:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":50:5)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":50:13)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":95:1)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":99:1)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":97:5)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":97:13)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":98:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":98:13)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":35:1)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":40:1)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":37:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":37:16)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":39:11)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":39:5)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:17)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":30:1)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":30:12)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":65:1)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":73:1)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":67:5)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":67:9)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":68:13)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":68:12)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":68:5)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:40)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:47)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:56)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:64)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:12)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:5)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":70:72)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":71:68)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":71:5)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":72:5)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":72:17)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":58:1)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":63:1)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":60:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":60:16)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":62:11)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":62:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":31:1)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":31:12)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":84:1)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":93:1)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":86:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":86:9)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":87:13)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":87:12)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":87:5)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:17)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:39)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:46)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:55)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:63)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:12)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":88:71)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":90:11)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":90:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":91:68)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":91:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":92:5)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":92:17)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":76:1)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":82:1)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":78:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_45.c":78:16)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc4, #loc5])
#loc96 = loc(fused[#loc6, #loc7])
#loc97 = loc(fused[#loc8, #loc9])
#loc98 = loc(fused[#loc10, #loc11])
#loc99 = loc(fused[#loc14, #loc12])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc17, #loc18])
#loc102 = loc(fused[#loc20, #loc21])
#loc103 = loc(fused[#loc25, #loc24])
#loc104 = loc(fused[#loc26, #loc27])
#loc105 = loc(fused[#loc28, #loc29])
#loc106 = loc(fused[#loc30, #loc31])
#loc107 = loc(fused[#loc32, #loc33])
#loc108 = loc(fused[#loc34, #loc35])
#loc109 = loc(fused[#loc36, #loc37])
#loc110 = loc(fused[#loc41, #loc42])
#loc111 = loc(fused[#loc43, #loc44])
#loc112 = loc(fused[#loc45, #loc46])
#loc113 = loc(fused[#loc49, #loc47])
#loc114 = loc(fused[#loc50, #loc51])
#loc115 = loc(fused[#loc52, #loc53])
#loc116 = loc(fused[#loc55, #loc56])
#loc117 = loc(fused[#loc58, #loc57])
#loc118 = loc(fused[#loc59, #loc60])
#loc119 = loc(fused[#loc61, #loc62])
#loc120 = loc(fused[#loc63, #loc64])
#loc121 = loc(fused[#loc67, #loc68])
#loc122 = loc(fused[#loc69, #loc70])
#loc123 = loc(fused[#loc71, #loc72])
#loc124 = loc(fused[#loc75, #loc73])
#loc125 = loc(fused[#loc77, #loc78])
#loc126 = loc(fused[#loc79, #loc80])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc87, #loc86])
#loc129 = loc(fused[#loc88, #loc89])
#loc130 = loc(fused[#loc90, #loc91])
#loc131 = loc(fused[#loc92, #loc93])
