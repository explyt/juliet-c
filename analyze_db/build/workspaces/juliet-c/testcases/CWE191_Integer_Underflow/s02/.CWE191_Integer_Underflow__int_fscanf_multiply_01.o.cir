!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc83)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc85)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc87)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc14)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc14)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc19)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc90)
      cir.if %10 {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc92)
        %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc22)
        %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc23)
        cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc92)
        %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc25)
      } loc(#loc91)
    } loc(#loc89)
    cir.return loc(#loc9)
  } loc(#loc86)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc95)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc93)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc36)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc39)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc101)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc103)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc47)
        %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc48)
        cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc103)
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc50)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc33)
  } loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc60)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc60)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc66)
      %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc109)
      cir.if %10 {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
          %12 = cir.const #cir.int<2147483647> : !s32i loc(#loc71)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc71)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc71)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc71)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc72)
          %17 = cir.binop(div, %15, %16) : !s32i loc(#loc112)
          %18 = cir.cmp(gt, %11, %17) : !s32i, !cir.bool loc(#loc113)
          cir.if %18 {
            %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc115)
            %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc78)
            %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc79)
            cir.store %22, %19 : !s32i, !cir.ptr<!s32i> loc(#loc115)
            %23 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc81)
          } else {
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc53)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc53)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          } loc(#loc114)
        } loc(#loc111)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc55)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":28:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":35:1)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":24:9)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":26:12)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":26:5)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":28:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":28:12)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":29:5)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":34:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":29:8)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":29:15)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":30:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":32:9)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":32:29)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":32:22)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":33:22)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":33:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":80:1)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":84:1)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":82:5)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":82:13)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":83:5)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":83:13)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":42:1)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":55:1)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":44:5)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":44:9)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":46:12)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":46:5)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":48:13)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":48:12)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":48:5)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":49:5)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":54:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":49:8)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":49:15)
#loc45 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":50:5)
#loc46 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":52:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":52:29)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":52:22)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":53:22)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":53:9)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":75:23)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":58:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":78:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":60:5)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":60:9)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":62:12)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":62:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":64:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":64:12)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":64:19)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":65:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":77:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":65:8)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":65:15)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":66:5)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":68:9)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":76:9)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":68:13)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":68:21)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":68:29)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":68:30)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":69:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":72:9)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":74:9)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":70:13)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":70:33)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":70:26)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":71:26)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":71:13)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_01.c":75:13)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc8, #loc9])
#loc87 = loc(fused[#loc10, #loc11])
#loc88 = loc(fused[#loc13, #loc12])
#loc89 = loc(fused[#loc16, #loc17])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc20, #loc17])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc26, #loc27])
#loc94 = loc(fused[#loc28, #loc29])
#loc95 = loc(fused[#loc30, #loc31])
#loc96 = loc(fused[#loc32, #loc33])
#loc97 = loc(fused[#loc34, #loc35])
#loc98 = loc(fused[#loc37, #loc36])
#loc99 = loc(fused[#loc40, #loc38])
#loc100 = loc(fused[#loc41, #loc42])
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc45, #loc42])
#loc103 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc51, #loc52])
#loc105 = loc(fused[#loc54, #loc55])
#loc106 = loc(fused[#loc56, #loc57])
#loc107 = loc(fused[#loc59, #loc58])
#loc108 = loc(fused[#loc63, #loc64])
#loc109 = loc(fused[#loc65, #loc66])
#loc110 = loc(fused[#loc67, #loc64])
#loc111 = loc(fused[#loc68, #loc69])
#loc112 = loc(fused[#loc71, #loc72])
#loc113 = loc(fused[#loc70, #loc73])
#loc114 = loc(fused[#loc74, #loc75, #loc76, #loc69])
#loc115 = loc(fused[#loc77, #loc78])
