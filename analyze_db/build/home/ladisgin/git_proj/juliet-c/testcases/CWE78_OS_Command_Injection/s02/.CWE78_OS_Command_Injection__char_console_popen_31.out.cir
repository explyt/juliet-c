!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":125:10)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":125:14)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":125:20)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":125:32)
#true = #cir.bool<true> : !cir.bool
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc112, #loc113])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc161)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_31_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc162)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc163)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc164)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc16)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc168)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc162)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_31_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc162)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc173)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc29)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc29)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc173)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc33)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc33)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc34)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc175)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc176)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc41)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc42)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc179)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc179)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc182)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc57)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc57)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc184)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc61)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc61)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc185)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc62)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc59)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc59)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc63)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc186)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc58)
                    cir.yield %48 : !cir.bool loc(#loc58)
                  }, false {
                    %48 = cir.const #false loc(#loc58)
                    cir.yield %48 : !cir.bool loc(#loc58)
                  }) : (!cir.bool) -> !cir.bool loc(#loc58)
                  cir.yield %47 : !cir.bool loc(#loc58)
                }, false {
                  %37 = cir.const #false loc(#loc58)
                  cir.yield %37 : !cir.bool loc(#loc58)
                }) : (!cir.bool) -> !cir.bool loc(#loc58)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc65)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc65)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc68)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc188)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc189)
                } loc(#loc187)
              } loc(#loc183)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc70)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc71)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc74)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc190)
            } loc(#loc181)
          } loc(#loc178)
        } loc(#loc177)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc192)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc193)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc195)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc16)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc16)
        %12 = cir.call @popen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc86)
        cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
        cir.scope {
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc92)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc198)
          cir.if %16 {
            %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
            %18 = cir.call @pclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc95)
          } loc(#loc199)
        } loc(#loc197)
      } loc(#loc194)
    } loc(#loc191)
    cir.return loc(#loc20)
  } loc(#loc169)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc200)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc202)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_31_good() : () -> () loc(#loc119)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_31_bad() : () -> () loc(#loc123)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc126)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.return %17 : !s32i loc(#loc209)
  } loc(#loc204)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc130)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc137)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc130)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc130)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc215)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc216)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
      cir.scope {
        %13 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc218)
        %14 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
        %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc150)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc150)
        %17 = cir.call @popen(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc151)
        cir.store %17, %13 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
        cir.scope {
          %18 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc157)
          %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc221)
          cir.if %21 {
            %22 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
            %23 = cir.call @pclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc160)
          } loc(#loc222)
        } loc(#loc220)
      } loc(#loc217)
    } loc(#loc214)
    cir.return loc(#loc132)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_31.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":92:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":92:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":42:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":42:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":63:27)
#loc14 = loc("/usr/include/stdio.h":893:1)
#loc15 = loc("/usr/include/stdio.h":894:3)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":75:32)
#loc17 = loc("/usr/include/stdio.h":887:1)
#loc18 = loc("/usr/include/stdio.h":887:36)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":39:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":82:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":41:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":41:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":43:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":43:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":44:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":68:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":46:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":46:37)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":46:26)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":46:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":48:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":67:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":48:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":48:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":48:27)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":49:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":66:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:23)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:28)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:27)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:43)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:47)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:57)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":51:67)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":52:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":60:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":62:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":55:27)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":55:34)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":55:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":55:38)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":59:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:31)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:33)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:36)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:41)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:49)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:50)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":56:55)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":57:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":58:39)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":58:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":58:26)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":58:34)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":58:35)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":63:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":65:33)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":65:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":65:22)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":65:29)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":69:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":81:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":70:9)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":70:27)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":71:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":71:23)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":72:9)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":80:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":73:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":73:19)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":75:26)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":75:20)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":75:13)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":75:35)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":76:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":79:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":76:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":76:25)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":77:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":78:24)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":78:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":111:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":114:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":113:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":113:13)
#loc100 = loc("/usr/include/stdlib.h":575:1)
#loc101 = loc("/usr/include/stdlib.h":575:41)
#loc102 = loc("/usr/include/time.h":76:1)
#loc103 = loc("/usr/include/time.h":76:38)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":130:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":132:15)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":135:15)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":137:15)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":125:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":140:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":126:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":128:27)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":128:22)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":128:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":130:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":131:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":131:60)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":132:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":135:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":136:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":136:59)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":137:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":139:12)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":139:5)
#loc128 = loc("/usr/include/string.h":149:1)
#loc129 = loc("/usr/include/string.h":150:14)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":95:18)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":89:1)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":109:1)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":91:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":91:12)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":93:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":93:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":95:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":95:12)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":96:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":108:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":97:9)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":97:27)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":98:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":98:23)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":99:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":107:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":100:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":100:19)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":102:26)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":102:32)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":102:20)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":102:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":102:35)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":103:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":106:13)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":103:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":103:25)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":104:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":105:24)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_31.c":105:17)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc11, #loc12])
#loc167 = loc(fused[#loc14, #loc15])
#loc168 = loc(fused[#loc17, #loc18])
#loc169 = loc(fused[#loc19, #loc20])
#loc170 = loc(fused[#loc21, #loc22])
#loc171 = loc(fused[#loc24, #loc23])
#loc172 = loc(fused[#loc25, #loc26])
#loc173 = loc(fused[#loc27, #loc28])
#loc174 = loc(fused[#loc31, #loc32])
#loc175 = loc(fused[#loc33, #loc34])
#loc176 = loc(fused[#loc33, #loc35])
#loc177 = loc(fused[#loc36, #loc32])
#loc178 = loc(fused[#loc37, #loc38])
#loc179 = loc(fused[#loc42, #loc43])
#loc180 = loc(fused[#loc45, #loc46])
#loc181 = loc(fused[#loc47, #loc48, #loc49, #loc38])
#loc182 = loc(fused[#loc52, #loc53])
#loc183 = loc(fused[#loc54, #loc55])
#loc184 = loc(fused[#loc56, #loc57])
#loc185 = loc(fused[#loc60, #loc61])
#loc186 = loc(fused[#loc59, #loc63])
#loc187 = loc(fused[#loc64, #loc55])
#loc188 = loc(fused[#loc67, #loc68])
#loc189 = loc(fused[#loc66, #loc65])
#loc190 = loc(fused[#loc72, #loc71])
#loc191 = loc(fused[#loc75, #loc76])
#loc192 = loc(fused[#loc77, #loc78])
#loc193 = loc(fused[#loc79, #loc80])
#loc194 = loc(fused[#loc81, #loc82])
#loc195 = loc(fused[#loc83, #loc84])
#loc196 = loc(fused[#loc87, #loc88])
#loc197 = loc(fused[#loc89, #loc90])
#loc198 = loc(fused[#loc91, #loc92])
#loc199 = loc(fused[#loc93, #loc90])
#loc200 = loc(fused[#loc96, #loc97])
#loc201 = loc(fused[#loc98, #loc99])
#loc202 = loc(fused[#loc100, #loc101])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc108, #loc109])
#loc207 = loc(fused[#loc119, #loc120])
#loc208 = loc(fused[#loc123, #loc124])
#loc209 = loc(fused[#loc127, #loc126])
#loc210 = loc(fused[#loc128, #loc129])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc133, #loc134])
#loc213 = loc(fused[#loc136, #loc135])
#loc214 = loc(fused[#loc139, #loc140])
#loc215 = loc(fused[#loc141, #loc142])
#loc216 = loc(fused[#loc143, #loc144])
#loc217 = loc(fused[#loc145, #loc146])
#loc218 = loc(fused[#loc147, #loc148])
#loc219 = loc(fused[#loc152, #loc153])
#loc220 = loc(fused[#loc154, #loc155])
#loc221 = loc(fused[#loc156, #loc157])
#loc222 = loc(fused[#loc158, #loc155])
