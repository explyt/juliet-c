!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc114)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>>, ["structCharVoid", init] {alignment = 8 : i64} loc(#loc116)
    cir.goto "sink" loc(#loc117)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc16)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %2 = cir.const #cir.int<32> : !u64i loc(#loc118)
    %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc119)
    cir.store %4, %0 : !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>> loc(#loc116)
    cir.scope {
      %44 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc22)
      %45 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
      %46 = cir.cast(bitcast, %45 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc23)
      %47 = cir.cmp(eq, %44, %46) : !cir.ptr<!ty__charVoid>, !s32i loc(#loc121)
      %48 = cir.cast(int_to_bool, %47 : !s32i), !cir.bool loc(#loc24)
      cir.if %48 {
        %49 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %50 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%51) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc122)
    } loc(#loc120)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc5)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc29)
    %9 = cir.get_member %8[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    cir.store %7, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc123)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc31)
    %11 = cir.get_member %10[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc32)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc34)
    %15 = cir.get_member %14[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc37)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc37)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %21 = cir.const #cir.int<32> : !u64i loc(#loc126)
    cir.libc.memcpy %21 bytes from %20 to %17 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc127)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc42)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc43)
    %25 = cir.get_member %24[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc128)
    %27 = cir.const #cir.int<1> : !u64i loc(#loc129)
    %28 = cir.binop(div, %26, %27) : !u64i loc(#loc130)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc48)
    %31 = cir.binop(sub, %28, %30) : !u64i loc(#loc131)
    %32 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %23, %33 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc51)
    %35 = cir.get_member %34[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc54)
    %38 = cir.get_member %37[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc55)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %41 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc58)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__charVoid>), !cir.ptr<!void> loc(#loc58)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
    cir.return loc(#loc11)
  } loc(#loc115)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc135)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>>, ["structCharVoid", init] {alignment = 8 : i64} loc(#loc138)
    cir.goto "sink" loc(#loc139)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc69)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
    %2 = cir.const #cir.int<32> : !u64i loc(#loc140)
    %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc141)
    cir.store %4, %0 : !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>> loc(#loc138)
    cir.scope {
      %44 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc75)
      %45 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
      %46 = cir.cast(bitcast, %45 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc76)
      %47 = cir.cmp(eq, %44, %46) : !cir.ptr<!ty__charVoid>, !s32i loc(#loc143)
      %48 = cir.cast(int_to_bool, %47 : !s32i), !cir.bool loc(#loc77)
      cir.if %48 {
        %49 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
        %50 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc81)
        cir.call @exit(%51) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc144)
    } loc(#loc142)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc82)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc82)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc83)
    %9 = cir.get_member %8[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    cir.store %7, %9 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc145)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc84)
    %11 = cir.get_member %10[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc85)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc87)
    %15 = cir.get_member %14[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc147)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc89)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc89)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc148)
    cir.libc.memcpy %21 bytes from %20 to %17 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc149)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc94)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc95)
    %25 = cir.get_member %24[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc150)
    %27 = cir.const #cir.int<1> : !u64i loc(#loc151)
    %28 = cir.binop(div, %26, %27) : !u64i loc(#loc152)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc100)
    %31 = cir.binop(sub, %28, %30) : !u64i loc(#loc153)
    %32 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %23, %33 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc103)
    %35 = cir.get_member %34[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc106)
    %38 = cir.get_member %37[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc107)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %41 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc110)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__charVoid>), !cir.ptr<!void> loc(#loc110)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    cir.return loc(#loc64)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":40:46)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":33:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":50:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":38:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":38:72)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":35:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":35:10)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":36:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":38:49)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":38:56)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":38:71)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:47)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:28)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:37)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:38)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:44)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":39:43)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":40:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":27:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":42:27)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":42:43)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":42:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:16)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":26:10)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:32)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:43)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:52)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:74)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":44:75)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:89)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:36)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:68)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:70)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:81)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:84)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:35)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":45:25)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":46:27)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":46:43)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":46:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":47:27)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":47:43)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":47:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":48:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":48:14)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":76:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":79:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":78:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":78:11)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":57:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":74:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:72)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":59:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":59:10)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":60:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:49)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:56)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":62:71)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:47)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:31)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:28)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:37)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:38)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:44)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":63:43)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":64:46)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":64:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:27)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:43)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":66:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:16)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:32)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:43)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:52)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:84)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":68:85)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:89)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:36)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:68)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:70)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:81)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:84)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:35)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":69:25)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":70:27)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":70:43)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":70:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":71:27)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":71:43)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":71:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":72:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_18.c":72:14)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc6, #loc7])
#loc114 = loc(fused[#loc8, #loc9])
#loc115 = loc(fused[#loc10, #loc11])
#loc116 = loc(fused[#loc12, #loc13])
#loc117 = loc(fused[#loc14, #loc15])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc17, #loc13])
#loc120 = loc(fused[#loc20, #loc21])
#loc121 = loc(fused[#loc22, #loc23])
#loc122 = loc(fused[#loc25, #loc21])
#loc123 = loc(fused[#loc29, #loc5])
#loc124 = loc(fused[#loc31, #loc32])
#loc125 = loc(fused[#loc34, #loc36])
#loc126 = loc(fused[#loc38, #loc39])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc46, #loc47])
#loc130 = loc(fused[#loc44, #loc47])
#loc131 = loc(fused[#loc49, #loc48])
#loc132 = loc(fused[#loc43, #loc42])
#loc133 = loc(fused[#loc51, #loc52])
#loc134 = loc(fused[#loc54, #loc55])
#loc135 = loc(fused[#loc59, #loc60])
#loc136 = loc(fused[#loc61, #loc62])
#loc137 = loc(fused[#loc63, #loc64])
#loc138 = loc(fused[#loc65, #loc66])
#loc139 = loc(fused[#loc67, #loc68])
#loc140 = loc(fused[#loc71, #loc72])
#loc141 = loc(fused[#loc70, #loc66])
#loc142 = loc(fused[#loc73, #loc74])
#loc143 = loc(fused[#loc75, #loc76])
#loc144 = loc(fused[#loc78, #loc74])
#loc145 = loc(fused[#loc83, #loc82])
#loc146 = loc(fused[#loc84, #loc85])
#loc147 = loc(fused[#loc87, #loc88])
#loc148 = loc(fused[#loc90, #loc91])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc96, #loc97])
#loc151 = loc(fused[#loc98, #loc99])
#loc152 = loc(fused[#loc96, #loc99])
#loc153 = loc(fused[#loc101, #loc100])
#loc154 = loc(fused[#loc95, #loc94])
#loc155 = loc(fused[#loc103, #loc104])
#loc156 = loc(fused[#loc106, #loc107])
