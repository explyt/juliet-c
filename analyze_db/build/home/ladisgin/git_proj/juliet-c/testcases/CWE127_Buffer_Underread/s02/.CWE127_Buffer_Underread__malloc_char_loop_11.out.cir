!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc104 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":149:10)
#loc105 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":149:14)
#loc106 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":149:20)
#loc107 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":149:32)
#loc321 = loc(fused[#loc104, #loc105])
#loc322 = loc(fused[#loc106, #loc107])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__malloc_char_loop_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc282)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc283)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc284)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc285)
  cir.func no_proto @CWE127_Buffer_Underread__malloc_char_loop_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc290)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc290)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc293)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc294)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc295)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc296)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
          cir.scope {
            %32 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc298)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc34)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc35)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
            } loc(#loc299)
          } loc(#loc297)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc37)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc38)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc38)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc42)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc44)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc44)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc46)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc301)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %29 = cir.const #cir.int<8> : !s32i loc(#loc48)
          %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc48)
          %31 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc49)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc302)
        } loc(#loc292)
      } loc(#loc291)
    } loc(#loc289)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc304)
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc305)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc58)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc59)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc59)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc306)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc63)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc64)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc307)
      cir.scope {
        %26 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc69)
        cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc309)
        cir.for : cond {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %29 = cir.const #cir.int<100> : !s32i loc(#loc72)
          %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc72)
          %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc310)
          cir.condition(%31) loc(#loc73)
        } body {
          cir.scope {
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc75)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc78)
            %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
            %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc79)
            cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc312)
          } loc(#loc311)
          cir.yield loc(#loc68)
        } step {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc80)
          %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc81)
          cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc313)
          cir.yield loc(#loc308)
        } loc(#loc308)
      } loc(#loc308)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc82)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc83)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc83)
      %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc85)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc314)
      %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    } loc(#loc303)
    cir.return loc(#loc10)
  } loc(#loc286)
  cir.func no_proto @CWE127_Buffer_Underread__malloc_char_loop_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc316)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc317)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    cir.return loc(#loc89)
  } loc(#loc315)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc318)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc319)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc101)
  cir.func @main(%arg0: !s32i loc(fused[#loc104, #loc105]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc106, #loc107])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc321)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc322)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc108)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc110)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc110)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc111)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc98)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %8 = cir.get_global @CWE127_Buffer_Underread__malloc_char_loop_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc323)
    cir.call @CWE127_Buffer_Underread__malloc_char_loop_11_good() : () -> () loc(#loc113)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc100)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %13 = cir.get_global @CWE127_Buffer_Underread__malloc_char_loop_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc324)
    cir.call @CWE127_Buffer_Underread__malloc_char_loop_11_bad() : () -> () loc(#loc117)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    cir.return %17 : !s32i loc(#loc325)
  } loc(#loc320)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc326)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc124)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc129)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc329)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc331)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc331)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc133)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc133)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc124)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc124)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc138)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc334)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc144)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc144)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc335)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc336)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc337)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
          cir.scope {
            %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc339)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc152)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc153)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc154)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc152)
            } loc(#loc340)
          } loc(#loc338)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc156)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc157)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc158)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc157)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc157)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc341)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc161)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc161)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc163)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc164)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc163)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc165)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc342)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
          cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc343)
        } loc(#loc333)
      } loc(#loc332)
    } loc(#loc330)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc345)
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc346)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc174)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc175)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc176)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc177)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc176)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc176)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc347)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc180)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc180)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc181)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc182)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc181)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc183)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc348)
      cir.scope {
        %26 = cir.const #cir.int<0> : !s32i loc(#loc186)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc186)
        cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc350)
        cir.for : cond {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc188)
          %29 = cir.const #cir.int<100> : !s32i loc(#loc189)
          %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc189)
          %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc351)
          cir.condition(%31) loc(#loc190)
        } body {
          cir.scope {
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
            %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc193)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc194)
            %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc192)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc195)
            %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
            %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc196)
            cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc353)
          } loc(#loc352)
          cir.yield loc(#loc185)
        } step {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc197)
          %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc198)
          cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc354)
          cir.yield loc(#loc349)
        } loc(#loc349)
      } loc(#loc349)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc199)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc199)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc200)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc201)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc200)
      %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
      %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc202)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc355)
      %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    } loc(#loc344)
    cir.return loc(#loc126)
  } loc(#loc327)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc357)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc209)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc358)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc360)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc360)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc213)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc213)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc363)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc220)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc221)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc221)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc364)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc365)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc366)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc363)
          cir.scope {
            %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc227)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc227)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc368)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc229)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc230)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc231)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc229)
            } loc(#loc369)
          } loc(#loc367)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc233)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc234)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc235)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc234)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc234)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc370)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc238)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc238)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc240)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc241)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc240)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc242)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc371)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
          cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc372)
        } loc(#loc362)
      } loc(#loc361)
    } loc(#loc359)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc374)
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc375)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc251)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc252)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc253)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc254)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc253)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc253)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc257)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc257)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc258)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc259)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc258)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc260)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc260)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc377)
      cir.scope {
        %26 = cir.const #cir.int<0> : !s32i loc(#loc263)
        %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc263)
        cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc379)
        cir.for : cond {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc265)
          %29 = cir.const #cir.int<100> : !s32i loc(#loc266)
          %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc266)
          %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc380)
          cir.condition(%31) loc(#loc267)
        } body {
          cir.scope {
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
            %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc270)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc271)
            %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc269)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc272)
            %33 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc273)
            %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc273)
            cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc382)
          } loc(#loc381)
          cir.yield loc(#loc262)
        } step {
          %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc274)
          %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc275)
          cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc383)
          cir.yield loc(#loc378)
        } loc(#loc378)
      } loc(#loc378)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc276)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc276)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc277)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc278)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc277)
      %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc279)
      %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc279)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc384)
      %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc280)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    } loc(#loc373)
    cir.return loc(#loc206)
  } loc(#loc356)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__malloc_char_loop_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":23:1)
#loc10 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":54:1)
#loc11 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":25:5)
#loc12 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":25:12)
#loc13 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":26:12)
#loc14 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":26:5)
#loc15 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":27:5)
#loc16 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":37:5)
#loc17 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":27:8)
#loc18 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":27:26)
#loc19 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":28:5)
#loc20 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":29:9)
#loc21 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":36:9)
#loc22 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":30:13)
#loc23 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":30:64)
#loc24 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":30:41)
#loc25 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":30:48)
#loc26 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":30:52)
#loc27 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":30:63)
#loc28 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:13)
#loc29 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:47)
#loc30 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:17)
#loc31 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:31)
#loc32 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:37)
#loc33 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:38)
#loc34 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:44)
#loc35 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":31:43)
#loc36 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":32:20)
#loc37 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":32:32)
#loc38 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":32:37)
#loc39 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":32:41)
#loc40 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":32:13)
#loc41 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":32:42)
#loc42 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":33:33)
#loc43 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":33:13)
#loc44 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":33:24)
#loc45 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":33:28)
#loc46 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":33:29)
#loc47 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":35:20)
#loc48 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":35:33)
#loc49 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":35:31)
#loc50 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":35:13)
#loc51 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":38:5)
#loc52 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":53:5)
#loc53 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":39:9)
#loc54 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":39:16)
#loc55 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":40:9)
#loc56 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":40:22)
#loc57 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":41:16)
#loc58 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":41:22)
#loc59 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":41:27)
#loc60 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":41:31)
#loc61 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":41:9)
#loc62 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":41:32)
#loc63 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":42:23)
#loc64 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":42:14)
#loc65 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":42:18)
#loc66 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":42:9)
#loc67 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:9)
#loc68 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":47:9)
#loc69 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:18)
#loc70 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:14)
#loc71 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:21)
#loc72 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:25)
#loc73 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:23)
#loc74 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":45:9)
#loc75 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":46:23)
#loc76 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":46:28)
#loc77 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":46:29)
#loc78 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":46:18)
#loc79 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":46:13)
#loc80 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:31)
#loc81 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":44:30)
#loc82 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":49:23)
#loc83 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":49:14)
#loc84 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":49:18)
#loc85 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":49:9)
#loc86 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":50:19)
#loc87 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":50:9)
#loc88 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":133:1)
#loc89 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":137:1)
#loc90 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":135:5)
#loc91 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":135:14)
#loc92 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":136:5)
#loc93 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":136:14)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":154:15)
#loc99 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":156:15)
#loc100 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":159:15)
#loc101 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":161:15)
#loc102 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":149:1)
#loc103 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":164:1)
#loc108 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":150:1)
#loc109 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":152:27)
#loc110 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":152:22)
#loc111 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":152:5)
#loc112 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":154:5)
#loc113 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":155:5)
#loc114 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":155:55)
#loc115 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":156:5)
#loc116 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":159:5)
#loc117 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":160:5)
#loc118 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":160:54)
#loc119 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":161:5)
#loc120 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":163:12)
#loc121 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":163:5)
#loc122 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc123 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc124 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":68:19)
#loc125 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":61:1)
#loc126 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":97:1)
#loc127 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":63:5)
#loc128 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":63:12)
#loc129 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":64:12)
#loc130 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":64:5)
#loc131 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":65:5)
#loc132 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":80:5)
#loc133 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":65:8)
#loc134 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":65:27)
#loc135 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":66:5)
#loc136 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":69:5)
#loc137 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":71:5)
#loc138 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":68:9)
#loc139 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":72:9)
#loc140 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":79:9)
#loc141 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":73:13)
#loc142 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":73:64)
#loc143 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":73:41)
#loc144 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":73:48)
#loc145 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":73:52)
#loc146 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":73:63)
#loc147 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:13)
#loc148 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:47)
#loc149 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:17)
#loc150 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:31)
#loc151 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:37)
#loc152 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:38)
#loc153 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:44)
#loc154 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":74:43)
#loc155 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":75:20)
#loc156 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":75:32)
#loc157 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":75:37)
#loc158 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":75:41)
#loc159 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":75:13)
#loc160 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":75:42)
#loc161 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":76:33)
#loc162 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":76:13)
#loc163 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":76:24)
#loc164 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":76:28)
#loc165 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":76:29)
#loc166 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":78:20)
#loc167 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":78:13)
#loc168 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":81:5)
#loc169 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":96:5)
#loc170 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":82:9)
#loc171 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":82:16)
#loc172 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":83:9)
#loc173 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":83:22)
#loc174 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":84:16)
#loc175 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":84:22)
#loc176 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":84:27)
#loc177 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":84:31)
#loc178 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":84:9)
#loc179 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":84:32)
#loc180 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":85:23)
#loc181 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":85:14)
#loc182 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":85:18)
#loc183 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":85:9)
#loc184 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:9)
#loc185 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":90:9)
#loc186 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:18)
#loc187 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:14)
#loc188 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:21)
#loc189 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:25)
#loc190 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:23)
#loc191 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":88:9)
#loc192 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":89:23)
#loc193 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":89:28)
#loc194 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":89:29)
#loc195 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":89:18)
#loc196 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":89:13)
#loc197 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:31)
#loc198 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":87:30)
#loc199 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":92:23)
#loc200 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":92:14)
#loc201 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":92:18)
#loc202 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":92:9)
#loc203 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":93:19)
#loc204 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":93:9)
#loc205 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":100:1)
#loc206 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":131:1)
#loc207 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":102:5)
#loc208 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":102:12)
#loc209 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":103:12)
#loc210 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":103:5)
#loc211 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":104:5)
#loc212 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":114:5)
#loc213 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":104:8)
#loc214 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":104:26)
#loc215 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":105:5)
#loc216 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":106:9)
#loc217 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":113:9)
#loc218 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":107:13)
#loc219 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":107:64)
#loc220 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":107:41)
#loc221 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":107:48)
#loc222 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":107:52)
#loc223 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":107:63)
#loc224 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:13)
#loc225 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:47)
#loc226 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:17)
#loc227 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:31)
#loc228 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:37)
#loc229 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:38)
#loc230 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:44)
#loc231 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":108:43)
#loc232 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":109:20)
#loc233 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":109:32)
#loc234 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":109:37)
#loc235 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":109:41)
#loc236 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":109:13)
#loc237 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":109:42)
#loc238 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":110:33)
#loc239 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":110:13)
#loc240 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":110:24)
#loc241 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":110:28)
#loc242 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":110:29)
#loc243 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":112:20)
#loc244 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":112:13)
#loc245 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":115:5)
#loc246 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":130:5)
#loc247 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":116:9)
#loc248 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":116:16)
#loc249 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":117:9)
#loc250 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":117:22)
#loc251 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":118:16)
#loc252 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":118:22)
#loc253 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":118:27)
#loc254 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":118:31)
#loc255 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":118:9)
#loc256 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":118:32)
#loc257 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":119:23)
#loc258 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":119:14)
#loc259 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":119:18)
#loc260 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":119:9)
#loc261 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:9)
#loc262 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":124:9)
#loc263 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:18)
#loc264 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:14)
#loc265 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:21)
#loc266 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:25)
#loc267 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:23)
#loc268 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":122:9)
#loc269 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":123:23)
#loc270 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":123:28)
#loc271 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":123:29)
#loc272 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":123:18)
#loc273 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":123:13)
#loc274 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:31)
#loc275 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":121:30)
#loc276 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":126:23)
#loc277 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":126:14)
#loc278 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":126:18)
#loc279 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":126:9)
#loc280 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":127:19)
#loc281 = loc("CWE127_Buffer_Underread__malloc_char_loop_11.c":127:9)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc5, #loc6])
#loc285 = loc(fused[#loc7, #loc8])
#loc286 = loc(fused[#loc9, #loc10])
#loc287 = loc(fused[#loc11, #loc12])
#loc288 = loc(fused[#loc14, #loc13])
#loc289 = loc(fused[#loc15, #loc16])
#loc290 = loc(fused[#loc17, #loc18])
#loc291 = loc(fused[#loc19, #loc16])
#loc292 = loc(fused[#loc20, #loc21])
#loc293 = loc(fused[#loc22, #loc23])
#loc294 = loc(fused[#loc26, #loc27])
#loc295 = loc(fused[#loc25, #loc27])
#loc296 = loc(fused[#loc24, #loc23])
#loc297 = loc(fused[#loc28, #loc29])
#loc298 = loc(fused[#loc30, #loc31])
#loc299 = loc(fused[#loc32, #loc29])
#loc300 = loc(fused[#loc40, #loc41])
#loc301 = loc(fused[#loc43, #loc42])
#loc302 = loc(fused[#loc50, #loc48])
#loc303 = loc(fused[#loc51, #loc52])
#loc304 = loc(fused[#loc53, #loc54])
#loc305 = loc(fused[#loc55, #loc56])
#loc306 = loc(fused[#loc61, #loc62])
#loc307 = loc(fused[#loc66, #loc63])
#loc308 = loc(fused[#loc67, #loc68])
#loc309 = loc(fused[#loc70, #loc69])
#loc310 = loc(fused[#loc71, #loc72])
#loc311 = loc(fused[#loc74, #loc68])
#loc312 = loc(fused[#loc79, #loc77])
#loc313 = loc(fused[#loc81, #loc80])
#loc314 = loc(fused[#loc85, #loc82])
#loc315 = loc(fused[#loc88, #loc89])
#loc316 = loc(fused[#loc90, #loc91])
#loc317 = loc(fused[#loc92, #loc93])
#loc318 = loc(fused[#loc94, #loc95])
#loc319 = loc(fused[#loc96, #loc97])
#loc320 = loc(fused[#loc102, #loc103])
#loc323 = loc(fused[#loc113, #loc114])
#loc324 = loc(fused[#loc117, #loc118])
#loc325 = loc(fused[#loc121, #loc120])
#loc326 = loc(fused[#loc122, #loc123])
#loc327 = loc(fused[#loc125, #loc126])
#loc328 = loc(fused[#loc127, #loc128])
#loc329 = loc(fused[#loc130, #loc129])
#loc330 = loc(fused[#loc131, #loc132])
#loc331 = loc(fused[#loc133, #loc134])
#loc332 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc333 = loc(fused[#loc139, #loc140])
#loc334 = loc(fused[#loc141, #loc142])
#loc335 = loc(fused[#loc145, #loc146])
#loc336 = loc(fused[#loc144, #loc146])
#loc337 = loc(fused[#loc143, #loc142])
#loc338 = loc(fused[#loc147, #loc148])
#loc339 = loc(fused[#loc149, #loc150])
#loc340 = loc(fused[#loc151, #loc148])
#loc341 = loc(fused[#loc159, #loc160])
#loc342 = loc(fused[#loc162, #loc161])
#loc343 = loc(fused[#loc167, #loc166])
#loc344 = loc(fused[#loc168, #loc169])
#loc345 = loc(fused[#loc170, #loc171])
#loc346 = loc(fused[#loc172, #loc173])
#loc347 = loc(fused[#loc178, #loc179])
#loc348 = loc(fused[#loc183, #loc180])
#loc349 = loc(fused[#loc184, #loc185])
#loc350 = loc(fused[#loc187, #loc186])
#loc351 = loc(fused[#loc188, #loc189])
#loc352 = loc(fused[#loc191, #loc185])
#loc353 = loc(fused[#loc196, #loc194])
#loc354 = loc(fused[#loc198, #loc197])
#loc355 = loc(fused[#loc202, #loc199])
#loc356 = loc(fused[#loc205, #loc206])
#loc357 = loc(fused[#loc207, #loc208])
#loc358 = loc(fused[#loc210, #loc209])
#loc359 = loc(fused[#loc211, #loc212])
#loc360 = loc(fused[#loc213, #loc214])
#loc361 = loc(fused[#loc215, #loc212])
#loc362 = loc(fused[#loc216, #loc217])
#loc363 = loc(fused[#loc218, #loc219])
#loc364 = loc(fused[#loc222, #loc223])
#loc365 = loc(fused[#loc221, #loc223])
#loc366 = loc(fused[#loc220, #loc219])
#loc367 = loc(fused[#loc224, #loc225])
#loc368 = loc(fused[#loc226, #loc227])
#loc369 = loc(fused[#loc228, #loc225])
#loc370 = loc(fused[#loc236, #loc237])
#loc371 = loc(fused[#loc239, #loc238])
#loc372 = loc(fused[#loc244, #loc243])
#loc373 = loc(fused[#loc245, #loc246])
#loc374 = loc(fused[#loc247, #loc248])
#loc375 = loc(fused[#loc249, #loc250])
#loc376 = loc(fused[#loc255, #loc256])
#loc377 = loc(fused[#loc260, #loc257])
#loc378 = loc(fused[#loc261, #loc262])
#loc379 = loc(fused[#loc264, #loc263])
#loc380 = loc(fused[#loc265, #loc266])
#loc381 = loc(fused[#loc268, #loc262])
#loc382 = loc(fused[#loc273, #loc271])
#loc383 = loc(fused[#loc275, #loc274])
#loc384 = loc(fused[#loc279, #loc276])
