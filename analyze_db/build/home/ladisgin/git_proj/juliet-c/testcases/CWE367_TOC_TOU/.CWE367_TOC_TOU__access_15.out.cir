!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc119 = loc("CWE367_TOC_TOU__access_15.c":192:10)
#loc120 = loc("CWE367_TOC_TOU__access_15.c":192:14)
#loc121 = loc("CWE367_TOC_TOU__access_15.c":192:20)
#loc122 = loc("CWE367_TOC_TOU__access_15.c":192:32)
#loc328 = loc(fused[#loc119, #loc120])
#loc329 = loc(fused[#loc121, #loc122])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc285)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc286)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc288)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc290)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc291)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE367_TOC_TOU__access_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc295)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc296)
    cir.br ^bb1 loc(#loc297)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc30)
    cir.br ^bb2 loc(#loc28)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb31 [
      6: ^bb4
    ] loc(#loc28)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc298)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc295)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc295)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc34)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb6 loc(#loc299)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc300)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc301)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc44)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc302)
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc303)
  ^bb10:  // pred: ^bb9
    %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc51)
    %26 = cir.cmp(gt, %23, %25) : !u64i, !cir.bool loc(#loc304)
    cir.brcond %26 ^bb11, ^bb12 loc(#loc305)
  ^bb11:  // pred: ^bb10
    %27 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc53)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc56)
    %34 = cir.binop(sub, %31, %33) : !u64i loc(#loc306)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %28, %36 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc48)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc308)
  ^bb14:  // pred: ^bb13
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %39 = cir.call @access(%37, %38) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc64)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %42 ^bb15, ^bb16 loc(#loc310)
  ^bb15:  // pred: ^bb14
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc67)
    cir.call @exit(%44) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb16 loc(#loc59)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc59)
  ^bb17:  // pred: ^bb16
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %46 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %47 = cir.call @open(%45, %46) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc70)
    cir.store %47, %1 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb18 loc(#loc312)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc77)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %51 ^bb19, ^bb20 loc(#loc314)
  ^bb19:  // pred: ^bb18
    %52 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc80)
    cir.call @exit(%53) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb20 loc(#loc74)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc74)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc315)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %55 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %58 = cir.const #cir.int<11> : !u64i loc(#loc316)
    %59 = cir.call @write(%54, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc86)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc88)
    %62 = cir.cast(integral, %61 : !s32i), !s64i loc(#loc88)
    %63 = cir.cmp(eq, %59, %62) : !s64i, !cir.bool loc(#loc317)
    cir.brcond %63 ^bb23, ^bb24 loc(#loc318)
  ^bb23:  // pred: ^bb22
    %64 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc91)
    cir.call @exit(%65) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb24 loc(#loc82)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc82)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc319)
  ^bb26:  // pred: ^bb25
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc96)
    %69 = cir.cmp(ne, %66, %68) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %69 ^bb27, ^bb28 loc(#loc321)
  ^bb27:  // pred: ^bb26
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %71 = cir.call @close(%70) : (!s32i) -> !s32i loc(#loc99)
    cir.br ^bb28 loc(#loc93)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc93)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc33)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc100)
  ^bb31:  // pred: ^bb2
    %72 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
    %73 = cir.cast(array_to_ptrdecay, %72 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%73) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb32 loc(#loc102)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc29)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc23)
  } loc(#loc294)
  cir.func no_proto @CWE367_TOC_TOU__access_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc323)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc105)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc324)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    cir.return loc(#loc104)
  } loc(#loc322)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc325)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc326)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc328)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc329)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %8 = cir.get_global @CWE367_TOC_TOU__access_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc330)
    cir.call @CWE367_TOC_TOU__access_15_good() : () -> () loc(#loc128)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %13 = cir.get_global @CWE367_TOC_TOU__access_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc331)
    cir.call @CWE367_TOC_TOU__access_15_bad() : () -> () loc(#loc132)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    cir.return %17 : !s32i loc(#loc332)
  } loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc137)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc334)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc335)
    cir.br ^bb1 loc(#loc336)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc146)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc144)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb28 loc(#loc150)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc337)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc334)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc334)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc153)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb7 loc(#loc338)
  ^bb7:  // pred: ^bb6
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc158)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc159)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc339)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc340)
  ^bb8:  // pred: ^bb7
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc162)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc164)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc341)
    cir.br ^bb9 loc(#loc155)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc155)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc342)
  ^bb11:  // pred: ^bb10
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc169)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc169)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc171)
    %28 = cir.cmp(gt, %25, %27) : !u64i, !cir.bool loc(#loc343)
    cir.brcond %28 ^bb12, ^bb13 loc(#loc344)
  ^bb12:  // pred: ^bb11
    %29 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc173)
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc174)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc174)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc176)
    %36 = cir.binop(sub, %33, %35) : !u64i loc(#loc345)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc177)
    cir.store %30, %38 : !s8i, !cir.ptr<!s8i> loc(#loc346)
    cir.br ^bb13 loc(#loc168)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc168)
  ^bb14:  // pred: ^bb13
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc179)
    %41 = cir.call @open(%39, %40) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc180)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb15 loc(#loc348)
  ^bb15:  // pred: ^bb14
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc187)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %45 ^bb16, ^bb17 loc(#loc350)
  ^bb16:  // pred: ^bb15
    %46 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc189)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc190)
    cir.call @exit(%47) : (!s32i) -> () extra(#fn_attr) loc(#loc189)
    cir.br ^bb17 loc(#loc184)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc184)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc351)
  ^bb19:  // pred: ^bb18
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %49 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc137)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc137)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
    %52 = cir.const #cir.int<12> : !u64i loc(#loc352)
    %53 = cir.call @write(%48, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc196)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc198)
    %56 = cir.cast(integral, %55 : !s32i), !s64i loc(#loc198)
    %57 = cir.cmp(eq, %53, %56) : !s64i, !cir.bool loc(#loc353)
    cir.brcond %57 ^bb20, ^bb21 loc(#loc354)
  ^bb20:  // pred: ^bb19
    %58 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc200)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc201)
    cir.call @exit(%59) : (!s32i) -> () extra(#fn_attr) loc(#loc200)
    cir.br ^bb21 loc(#loc192)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc192)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc355)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc206)
    %63 = cir.cmp(ne, %60, %62) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %63 ^bb24, ^bb25 loc(#loc357)
  ^bb24:  // pred: ^bb23
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %65 = cir.call @close(%64) : (!s32i) -> !s32i loc(#loc209)
    cir.br ^bb25 loc(#loc203)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc203)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc152)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc210)
  ^bb28:  // 2 preds: ^bb4, ^bb27
    cir.br ^bb29 loc(#loc145)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc139)
  } loc(#loc333)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc359)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc360)
    cir.br ^bb1 loc(#loc361)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc219)
    cir.br ^bb2 loc(#loc217)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb27 [
      6: ^bb4
    ] loc(#loc217)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc220)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc362)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc359)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc359)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc223)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb6 loc(#loc363)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc226)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc227)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc228)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc229)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc230)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc230)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc364)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc365)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc232)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc232)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc233)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc234)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc235)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc236)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc236)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc366)
    cir.br ^bb8 loc(#loc225)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc225)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc367)
  ^bb10:  // pred: ^bb9
    %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc239)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc240)
    %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc239)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc241)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc241)
    %26 = cir.cmp(gt, %23, %25) : !u64i, !cir.bool loc(#loc368)
    cir.brcond %26 ^bb11, ^bb12 loc(#loc369)
  ^bb11:  // pred: ^bb10
    %27 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc243)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc244)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc245)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc244)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc246)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc246)
    %34 = cir.binop(sub, %31, %33) : !u64i loc(#loc370)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc247)
    cir.store %28, %36 : !s8i, !cir.ptr<!s8i> loc(#loc371)
    cir.br ^bb12 loc(#loc238)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc238)
  ^bb13:  // pred: ^bb12
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc249)
    %39 = cir.call @open(%37, %38) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc250)
    cir.store %39, %1 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    cir.br ^bb14 loc(#loc373)
  ^bb14:  // pred: ^bb13
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc257)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc374)
    cir.brcond %43 ^bb15, ^bb16 loc(#loc375)
  ^bb15:  // pred: ^bb14
    %44 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc259)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc260)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
    cir.br ^bb16 loc(#loc254)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc254)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc376)
  ^bb18:  // pred: ^bb17
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %47 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc264)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc264)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc264)
    %50 = cir.const #cir.int<12> : !u64i loc(#loc377)
    %51 = cir.call @write(%46, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc267)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc269)
    %54 = cir.cast(integral, %53 : !s32i), !s64i loc(#loc269)
    %55 = cir.cmp(eq, %51, %54) : !s64i, !cir.bool loc(#loc378)
    cir.brcond %55 ^bb19, ^bb20 loc(#loc379)
  ^bb19:  // pred: ^bb18
    %56 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc271)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc272)
    cir.call @exit(%57) : (!s32i) -> () extra(#fn_attr) loc(#loc271)
    cir.br ^bb20 loc(#loc262)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc262)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc380)
  ^bb22:  // pred: ^bb21
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc277)
    %61 = cir.cmp(ne, %58, %60) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %61 ^bb23, ^bb24 loc(#loc382)
  ^bb23:  // pred: ^bb22
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %63 = cir.call @close(%62) : (!s32i) -> !s32i loc(#loc280)
    cir.br ^bb24 loc(#loc274)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc274)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc222)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28 loc(#loc281)
  ^bb27:  // pred: ^bb2
    %64 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc282)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc282)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc283)
    cir.br ^bb28 loc(#loc284)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc218)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc212)
  } loc(#loc358)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_15.c":54:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_15.c":72:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_15.c":84:19)
#loc22 = loc("CWE367_TOC_TOU__access_15.c":44:1)
#loc23 = loc("CWE367_TOC_TOU__access_15.c":87:1)
#loc24 = loc("CWE367_TOC_TOU__access_15.c":50:9)
#loc25 = loc("CWE367_TOC_TOU__access_15.c":50:30)
#loc26 = loc("CWE367_TOC_TOU__access_15.c":51:9)
#loc27 = loc("CWE367_TOC_TOU__access_15.c":51:25)
#loc28 = loc("CWE367_TOC_TOU__access_15.c":46:5)
#loc29 = loc("CWE367_TOC_TOU__access_15.c":86:5)
#loc30 = loc("CWE367_TOC_TOU__access_15.c":46:12)
#loc31 = loc("CWE367_TOC_TOU__access_15.c":48:5)
#loc32 = loc("CWE367_TOC_TOU__access_15.c":49:5)
#loc33 = loc("CWE367_TOC_TOU__access_15.c":80:5)
#loc34 = loc("CWE367_TOC_TOU__access_15.c":51:24)
#loc35 = loc("CWE367_TOC_TOU__access_15.c":52:9)
#loc36 = loc("CWE367_TOC_TOU__access_15.c":57:9)
#loc37 = loc("CWE367_TOC_TOU__access_15.c":52:19)
#loc38 = loc("CWE367_TOC_TOU__access_15.c":52:29)
#loc39 = loc("CWE367_TOC_TOU__access_15.c":52:34)
#loc40 = loc("CWE367_TOC_TOU__access_15.c":52:13)
#loc41 = loc("CWE367_TOC_TOU__access_15.c":52:44)
#loc42 = loc("CWE367_TOC_TOU__access_15.c":53:9)
#loc43 = loc("CWE367_TOC_TOU__access_15.c":54:13)
#loc44 = loc("CWE367_TOC_TOU__access_15.c":56:27)
#loc45 = loc("CWE367_TOC_TOU__access_15.c":56:22)
#loc46 = loc("CWE367_TOC_TOU__access_15.c":56:13)
#loc47 = loc("CWE367_TOC_TOU__access_15.c":58:9)
#loc48 = loc("CWE367_TOC_TOU__access_15.c":61:9)
#loc49 = loc("CWE367_TOC_TOU__access_15.c":58:13)
#loc50 = loc("CWE367_TOC_TOU__access_15.c":58:20)
#loc51 = loc("CWE367_TOC_TOU__access_15.c":58:32)
#loc52 = loc("CWE367_TOC_TOU__access_15.c":59:9)
#loc53 = loc("CWE367_TOC_TOU__access_15.c":60:44)
#loc54 = loc("CWE367_TOC_TOU__access_15.c":60:22)
#loc55 = loc("CWE367_TOC_TOU__access_15.c":60:29)
#loc56 = loc("CWE367_TOC_TOU__access_15.c":60:39)
#loc57 = loc("CWE367_TOC_TOU__access_15.c":60:13)
#loc58 = loc("CWE367_TOC_TOU__access_15.c":63:9)
#loc59 = loc("CWE367_TOC_TOU__access_15.c":66:9)
#loc60 = loc("CWE367_TOC_TOU__access_15.c":63:20)
#loc61 = loc("CWE367_TOC_TOU__access_15.c":63:30)
#loc62 = loc("CWE367_TOC_TOU__access_15.c":63:13)
#loc63 = loc("CWE367_TOC_TOU__access_15.c":63:40)
#loc64 = loc("CWE367_TOC_TOU__access_15.c":63:39)
#loc65 = loc("CWE367_TOC_TOU__access_15.c":64:9)
#loc66 = loc("CWE367_TOC_TOU__access_15.c":65:13)
#loc67 = loc("CWE367_TOC_TOU__access_15.c":65:18)
#loc68 = loc("CWE367_TOC_TOU__access_15.c":67:26)
#loc69 = loc("CWE367_TOC_TOU__access_15.c":67:36)
#loc70 = loc("CWE367_TOC_TOU__access_15.c":67:21)
#loc71 = loc("CWE367_TOC_TOU__access_15.c":67:9)
#loc72 = loc("CWE367_TOC_TOU__access_15.c":67:42)
#loc73 = loc("CWE367_TOC_TOU__access_15.c":68:9)
#loc74 = loc("CWE367_TOC_TOU__access_15.c":71:9)
#loc75 = loc("CWE367_TOC_TOU__access_15.c":68:13)
#loc76 = loc("CWE367_TOC_TOU__access_15.c":68:26)
#loc77 = loc("CWE367_TOC_TOU__access_15.c":68:25)
#loc78 = loc("CWE367_TOC_TOU__access_15.c":69:9)
#loc79 = loc("CWE367_TOC_TOU__access_15.c":70:13)
#loc80 = loc("CWE367_TOC_TOU__access_15.c":70:18)
#loc81 = loc("CWE367_TOC_TOU__access_15.c":72:9)
#loc82 = loc("CWE367_TOC_TOU__access_15.c":75:9)
#loc83 = loc("CWE367_TOC_TOU__access_15.c":72:19)
#loc84 = loc("CWE367_TOC_TOU__access_15.c":72:46)
#loc85 = loc("CWE367_TOC_TOU__access_15.c":72:68)
#loc86 = loc("CWE367_TOC_TOU__access_15.c":72:13)
#loc87 = loc("CWE367_TOC_TOU__access_15.c":72:75)
#loc88 = loc("CWE367_TOC_TOU__access_15.c":72:74)
#loc89 = loc("CWE367_TOC_TOU__access_15.c":73:9)
#loc90 = loc("CWE367_TOC_TOU__access_15.c":74:13)
#loc91 = loc("CWE367_TOC_TOU__access_15.c":74:18)
#loc92 = loc("CWE367_TOC_TOU__access_15.c":76:9)
#loc93 = loc("CWE367_TOC_TOU__access_15.c":79:9)
#loc94 = loc("CWE367_TOC_TOU__access_15.c":76:13)
#loc95 = loc("CWE367_TOC_TOU__access_15.c":76:26)
#loc96 = loc("CWE367_TOC_TOU__access_15.c":76:25)
#loc97 = loc("CWE367_TOC_TOU__access_15.c":77:9)
#loc98 = loc("CWE367_TOC_TOU__access_15.c":78:19)
#loc99 = loc("CWE367_TOC_TOU__access_15.c":78:13)
#loc100 = loc("CWE367_TOC_TOU__access_15.c":81:5)
#loc101 = loc("CWE367_TOC_TOU__access_15.c":84:9)
#loc102 = loc("CWE367_TOC_TOU__access_15.c":85:9)
#loc103 = loc("CWE367_TOC_TOU__access_15.c":177:1)
#loc104 = loc("CWE367_TOC_TOU__access_15.c":181:1)
#loc105 = loc("CWE367_TOC_TOU__access_15.c":179:5)
#loc106 = loc("CWE367_TOC_TOU__access_15.c":179:11)
#loc107 = loc("CWE367_TOC_TOU__access_15.c":180:5)
#loc108 = loc("CWE367_TOC_TOU__access_15.c":180:11)
#loc109 = loc("/usr/include/stdlib.h":575:1)
#loc110 = loc("/usr/include/stdlib.h":575:41)
#loc111 = loc("/usr/include/time.h":76:1)
#loc112 = loc("/usr/include/time.h":76:38)
#loc113 = loc("CWE367_TOC_TOU__access_15.c":197:15)
#loc114 = loc("CWE367_TOC_TOU__access_15.c":199:15)
#loc115 = loc("CWE367_TOC_TOU__access_15.c":202:15)
#loc116 = loc("CWE367_TOC_TOU__access_15.c":204:15)
#loc117 = loc("CWE367_TOC_TOU__access_15.c":192:1)
#loc118 = loc("CWE367_TOC_TOU__access_15.c":207:1)
#loc123 = loc("CWE367_TOC_TOU__access_15.c":193:1)
#loc124 = loc("CWE367_TOC_TOU__access_15.c":195:27)
#loc125 = loc("CWE367_TOC_TOU__access_15.c":195:22)
#loc126 = loc("CWE367_TOC_TOU__access_15.c":195:5)
#loc127 = loc("CWE367_TOC_TOU__access_15.c":197:5)
#loc128 = loc("CWE367_TOC_TOU__access_15.c":198:5)
#loc129 = loc("CWE367_TOC_TOU__access_15.c":198:36)
#loc130 = loc("CWE367_TOC_TOU__access_15.c":199:5)
#loc131 = loc("CWE367_TOC_TOU__access_15.c":202:5)
#loc132 = loc("CWE367_TOC_TOU__access_15.c":203:5)
#loc133 = loc("CWE367_TOC_TOU__access_15.c":203:35)
#loc134 = loc("CWE367_TOC_TOU__access_15.c":204:5)
#loc135 = loc("CWE367_TOC_TOU__access_15.c":206:12)
#loc136 = loc("CWE367_TOC_TOU__access_15.c":206:5)
#loc137 = loc("CWE367_TOC_TOU__access_15.c":122:29)
#loc138 = loc("CWE367_TOC_TOU__access_15.c":94:1)
#loc139 = loc("CWE367_TOC_TOU__access_15.c":133:1)
#loc140 = loc("CWE367_TOC_TOU__access_15.c":104:9)
#loc141 = loc("CWE367_TOC_TOU__access_15.c":104:30)
#loc142 = loc("CWE367_TOC_TOU__access_15.c":105:9)
#loc143 = loc("CWE367_TOC_TOU__access_15.c":105:25)
#loc144 = loc("CWE367_TOC_TOU__access_15.c":96:5)
#loc145 = loc("CWE367_TOC_TOU__access_15.c":132:5)
#loc146 = loc("CWE367_TOC_TOU__access_15.c":96:12)
#loc147 = loc("CWE367_TOC_TOU__access_15.c":98:5)
#loc148 = loc("CWE367_TOC_TOU__access_15.c":100:19)
#loc149 = loc("CWE367_TOC_TOU__access_15.c":100:9)
#loc150 = loc("CWE367_TOC_TOU__access_15.c":101:9)
#loc151 = loc("CWE367_TOC_TOU__access_15.c":103:5)
#loc152 = loc("CWE367_TOC_TOU__access_15.c":130:5)
#loc153 = loc("CWE367_TOC_TOU__access_15.c":105:24)
#loc154 = loc("CWE367_TOC_TOU__access_15.c":106:9)
#loc155 = loc("CWE367_TOC_TOU__access_15.c":111:9)
#loc156 = loc("CWE367_TOC_TOU__access_15.c":106:19)
#loc157 = loc("CWE367_TOC_TOU__access_15.c":106:29)
#loc158 = loc("CWE367_TOC_TOU__access_15.c":106:34)
#loc159 = loc("CWE367_TOC_TOU__access_15.c":106:13)
#loc160 = loc("CWE367_TOC_TOU__access_15.c":106:44)
#loc161 = loc("CWE367_TOC_TOU__access_15.c":107:9)
#loc162 = loc("CWE367_TOC_TOU__access_15.c":108:23)
#loc163 = loc("CWE367_TOC_TOU__access_15.c":108:13)
#loc164 = loc("CWE367_TOC_TOU__access_15.c":110:27)
#loc165 = loc("CWE367_TOC_TOU__access_15.c":110:22)
#loc166 = loc("CWE367_TOC_TOU__access_15.c":110:13)
#loc167 = loc("CWE367_TOC_TOU__access_15.c":112:9)
#loc168 = loc("CWE367_TOC_TOU__access_15.c":115:9)
#loc169 = loc("CWE367_TOC_TOU__access_15.c":112:13)
#loc170 = loc("CWE367_TOC_TOU__access_15.c":112:20)
#loc171 = loc("CWE367_TOC_TOU__access_15.c":112:32)
#loc172 = loc("CWE367_TOC_TOU__access_15.c":113:9)
#loc173 = loc("CWE367_TOC_TOU__access_15.c":114:44)
#loc174 = loc("CWE367_TOC_TOU__access_15.c":114:22)
#loc175 = loc("CWE367_TOC_TOU__access_15.c":114:29)
#loc176 = loc("CWE367_TOC_TOU__access_15.c":114:39)
#loc177 = loc("CWE367_TOC_TOU__access_15.c":114:13)
#loc178 = loc("CWE367_TOC_TOU__access_15.c":117:26)
#loc179 = loc("CWE367_TOC_TOU__access_15.c":117:36)
#loc180 = loc("CWE367_TOC_TOU__access_15.c":117:21)
#loc181 = loc("CWE367_TOC_TOU__access_15.c":117:9)
#loc182 = loc("CWE367_TOC_TOU__access_15.c":117:42)
#loc183 = loc("CWE367_TOC_TOU__access_15.c":118:9)
#loc184 = loc("CWE367_TOC_TOU__access_15.c":121:9)
#loc185 = loc("CWE367_TOC_TOU__access_15.c":118:13)
#loc186 = loc("CWE367_TOC_TOU__access_15.c":118:26)
#loc187 = loc("CWE367_TOC_TOU__access_15.c":118:25)
#loc188 = loc("CWE367_TOC_TOU__access_15.c":119:9)
#loc189 = loc("CWE367_TOC_TOU__access_15.c":120:13)
#loc190 = loc("CWE367_TOC_TOU__access_15.c":120:18)
#loc191 = loc("CWE367_TOC_TOU__access_15.c":122:9)
#loc192 = loc("CWE367_TOC_TOU__access_15.c":125:9)
#loc193 = loc("CWE367_TOC_TOU__access_15.c":122:19)
#loc194 = loc("CWE367_TOC_TOU__access_15.c":122:47)
#loc195 = loc("CWE367_TOC_TOU__access_15.c":122:70)
#loc196 = loc("CWE367_TOC_TOU__access_15.c":122:13)
#loc197 = loc("CWE367_TOC_TOU__access_15.c":122:77)
#loc198 = loc("CWE367_TOC_TOU__access_15.c":122:76)
#loc199 = loc("CWE367_TOC_TOU__access_15.c":123:9)
#loc200 = loc("CWE367_TOC_TOU__access_15.c":124:13)
#loc201 = loc("CWE367_TOC_TOU__access_15.c":124:18)
#loc202 = loc("CWE367_TOC_TOU__access_15.c":126:9)
#loc203 = loc("CWE367_TOC_TOU__access_15.c":129:9)
#loc204 = loc("CWE367_TOC_TOU__access_15.c":126:13)
#loc205 = loc("CWE367_TOC_TOU__access_15.c":126:26)
#loc206 = loc("CWE367_TOC_TOU__access_15.c":126:25)
#loc207 = loc("CWE367_TOC_TOU__access_15.c":127:9)
#loc208 = loc("CWE367_TOC_TOU__access_15.c":128:19)
#loc209 = loc("CWE367_TOC_TOU__access_15.c":128:13)
#loc210 = loc("CWE367_TOC_TOU__access_15.c":131:5)
#loc211 = loc("CWE367_TOC_TOU__access_15.c":136:1)
#loc212 = loc("CWE367_TOC_TOU__access_15.c":175:1)
#loc213 = loc("CWE367_TOC_TOU__access_15.c":142:9)
#loc214 = loc("CWE367_TOC_TOU__access_15.c":142:30)
#loc215 = loc("CWE367_TOC_TOU__access_15.c":143:9)
#loc216 = loc("CWE367_TOC_TOU__access_15.c":143:25)
#loc217 = loc("CWE367_TOC_TOU__access_15.c":138:5)
#loc218 = loc("CWE367_TOC_TOU__access_15.c":174:5)
#loc219 = loc("CWE367_TOC_TOU__access_15.c":138:12)
#loc220 = loc("CWE367_TOC_TOU__access_15.c":140:5)
#loc221 = loc("CWE367_TOC_TOU__access_15.c":141:5)
#loc222 = loc("CWE367_TOC_TOU__access_15.c":168:5)
#loc223 = loc("CWE367_TOC_TOU__access_15.c":143:24)
#loc224 = loc("CWE367_TOC_TOU__access_15.c":144:9)
#loc225 = loc("CWE367_TOC_TOU__access_15.c":149:9)
#loc226 = loc("CWE367_TOC_TOU__access_15.c":144:19)
#loc227 = loc("CWE367_TOC_TOU__access_15.c":144:29)
#loc228 = loc("CWE367_TOC_TOU__access_15.c":144:34)
#loc229 = loc("CWE367_TOC_TOU__access_15.c":144:13)
#loc230 = loc("CWE367_TOC_TOU__access_15.c":144:44)
#loc231 = loc("CWE367_TOC_TOU__access_15.c":145:9)
#loc232 = loc("CWE367_TOC_TOU__access_15.c":146:23)
#loc233 = loc("CWE367_TOC_TOU__access_15.c":146:13)
#loc234 = loc("CWE367_TOC_TOU__access_15.c":148:27)
#loc235 = loc("CWE367_TOC_TOU__access_15.c":148:22)
#loc236 = loc("CWE367_TOC_TOU__access_15.c":148:13)
#loc237 = loc("CWE367_TOC_TOU__access_15.c":150:9)
#loc238 = loc("CWE367_TOC_TOU__access_15.c":153:9)
#loc239 = loc("CWE367_TOC_TOU__access_15.c":150:13)
#loc240 = loc("CWE367_TOC_TOU__access_15.c":150:20)
#loc241 = loc("CWE367_TOC_TOU__access_15.c":150:32)
#loc242 = loc("CWE367_TOC_TOU__access_15.c":151:9)
#loc243 = loc("CWE367_TOC_TOU__access_15.c":152:44)
#loc244 = loc("CWE367_TOC_TOU__access_15.c":152:22)
#loc245 = loc("CWE367_TOC_TOU__access_15.c":152:29)
#loc246 = loc("CWE367_TOC_TOU__access_15.c":152:39)
#loc247 = loc("CWE367_TOC_TOU__access_15.c":152:13)
#loc248 = loc("CWE367_TOC_TOU__access_15.c":155:26)
#loc249 = loc("CWE367_TOC_TOU__access_15.c":155:36)
#loc250 = loc("CWE367_TOC_TOU__access_15.c":155:21)
#loc251 = loc("CWE367_TOC_TOU__access_15.c":155:9)
#loc252 = loc("CWE367_TOC_TOU__access_15.c":155:42)
#loc253 = loc("CWE367_TOC_TOU__access_15.c":156:9)
#loc254 = loc("CWE367_TOC_TOU__access_15.c":159:9)
#loc255 = loc("CWE367_TOC_TOU__access_15.c":156:13)
#loc256 = loc("CWE367_TOC_TOU__access_15.c":156:26)
#loc257 = loc("CWE367_TOC_TOU__access_15.c":156:25)
#loc258 = loc("CWE367_TOC_TOU__access_15.c":157:9)
#loc259 = loc("CWE367_TOC_TOU__access_15.c":158:13)
#loc260 = loc("CWE367_TOC_TOU__access_15.c":158:18)
#loc261 = loc("CWE367_TOC_TOU__access_15.c":160:9)
#loc262 = loc("CWE367_TOC_TOU__access_15.c":163:9)
#loc263 = loc("CWE367_TOC_TOU__access_15.c":160:19)
#loc264 = loc("CWE367_TOC_TOU__access_15.c":160:29)
#loc265 = loc("CWE367_TOC_TOU__access_15.c":160:47)
#loc266 = loc("CWE367_TOC_TOU__access_15.c":160:70)
#loc267 = loc("CWE367_TOC_TOU__access_15.c":160:13)
#loc268 = loc("CWE367_TOC_TOU__access_15.c":160:77)
#loc269 = loc("CWE367_TOC_TOU__access_15.c":160:76)
#loc270 = loc("CWE367_TOC_TOU__access_15.c":161:9)
#loc271 = loc("CWE367_TOC_TOU__access_15.c":162:13)
#loc272 = loc("CWE367_TOC_TOU__access_15.c":162:18)
#loc273 = loc("CWE367_TOC_TOU__access_15.c":164:9)
#loc274 = loc("CWE367_TOC_TOU__access_15.c":167:9)
#loc275 = loc("CWE367_TOC_TOU__access_15.c":164:13)
#loc276 = loc("CWE367_TOC_TOU__access_15.c":164:26)
#loc277 = loc("CWE367_TOC_TOU__access_15.c":164:25)
#loc278 = loc("CWE367_TOC_TOU__access_15.c":165:9)
#loc279 = loc("CWE367_TOC_TOU__access_15.c":166:19)
#loc280 = loc("CWE367_TOC_TOU__access_15.c":166:13)
#loc281 = loc("CWE367_TOC_TOU__access_15.c":169:5)
#loc282 = loc("CWE367_TOC_TOU__access_15.c":172:19)
#loc283 = loc("CWE367_TOC_TOU__access_15.c":172:9)
#loc284 = loc("CWE367_TOC_TOU__access_15.c":173:9)
#loc285 = loc(fused[#loc1, #loc2])
#loc286 = loc(fused[#loc3, #loc4])
#loc287 = loc(fused[#loc5, #loc6])
#loc288 = loc(fused[#loc8, #loc9])
#loc289 = loc(fused[#loc10, #loc11])
#loc290 = loc(fused[#loc12, #loc13])
#loc291 = loc(fused[#loc14, #loc15])
#loc292 = loc(fused[#loc16, #loc17])
#loc293 = loc(fused[#loc19, #loc20])
#loc294 = loc(fused[#loc22, #loc23])
#loc295 = loc(fused[#loc24, #loc25])
#loc296 = loc(fused[#loc26, #loc27])
#loc297 = loc(fused[#loc28, #loc29])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc35, #loc36])
#loc300 = loc(fused[#loc40, #loc41])
#loc301 = loc(fused[#loc42, #loc36])
#loc302 = loc(fused[#loc46, #loc44])
#loc303 = loc(fused[#loc47, #loc48])
#loc304 = loc(fused[#loc49, #loc51])
#loc305 = loc(fused[#loc52, #loc48])
#loc306 = loc(fused[#loc54, #loc56])
#loc307 = loc(fused[#loc57, #loc53])
#loc308 = loc(fused[#loc58, #loc59])
#loc309 = loc(fused[#loc62, #loc63])
#loc310 = loc(fused[#loc65, #loc59])
#loc311 = loc(fused[#loc71, #loc72])
#loc312 = loc(fused[#loc73, #loc74])
#loc313 = loc(fused[#loc75, #loc76])
#loc314 = loc(fused[#loc78, #loc74])
#loc315 = loc(fused[#loc81, #loc82])
#loc316 = loc(fused[#loc84, #loc85])
#loc317 = loc(fused[#loc86, #loc87])
#loc318 = loc(fused[#loc89, #loc82])
#loc319 = loc(fused[#loc92, #loc93])
#loc320 = loc(fused[#loc94, #loc95])
#loc321 = loc(fused[#loc97, #loc93])
#loc322 = loc(fused[#loc103, #loc104])
#loc323 = loc(fused[#loc105, #loc106])
#loc324 = loc(fused[#loc107, #loc108])
#loc325 = loc(fused[#loc109, #loc110])
#loc326 = loc(fused[#loc111, #loc112])
#loc327 = loc(fused[#loc117, #loc118])
#loc330 = loc(fused[#loc128, #loc129])
#loc331 = loc(fused[#loc132, #loc133])
#loc332 = loc(fused[#loc136, #loc135])
#loc333 = loc(fused[#loc138, #loc139])
#loc334 = loc(fused[#loc140, #loc141])
#loc335 = loc(fused[#loc142, #loc143])
#loc336 = loc(fused[#loc144, #loc145])
#loc337 = loc(fused[#loc151, #loc152])
#loc338 = loc(fused[#loc154, #loc155])
#loc339 = loc(fused[#loc159, #loc160])
#loc340 = loc(fused[#loc161, #loc155])
#loc341 = loc(fused[#loc166, #loc164])
#loc342 = loc(fused[#loc167, #loc168])
#loc343 = loc(fused[#loc169, #loc171])
#loc344 = loc(fused[#loc172, #loc168])
#loc345 = loc(fused[#loc174, #loc176])
#loc346 = loc(fused[#loc177, #loc173])
#loc347 = loc(fused[#loc181, #loc182])
#loc348 = loc(fused[#loc183, #loc184])
#loc349 = loc(fused[#loc185, #loc186])
#loc350 = loc(fused[#loc188, #loc184])
#loc351 = loc(fused[#loc191, #loc192])
#loc352 = loc(fused[#loc194, #loc195])
#loc353 = loc(fused[#loc196, #loc197])
#loc354 = loc(fused[#loc199, #loc192])
#loc355 = loc(fused[#loc202, #loc203])
#loc356 = loc(fused[#loc204, #loc205])
#loc357 = loc(fused[#loc207, #loc203])
#loc358 = loc(fused[#loc211, #loc212])
#loc359 = loc(fused[#loc213, #loc214])
#loc360 = loc(fused[#loc215, #loc216])
#loc361 = loc(fused[#loc217, #loc218])
#loc362 = loc(fused[#loc221, #loc222])
#loc363 = loc(fused[#loc224, #loc225])
#loc364 = loc(fused[#loc229, #loc230])
#loc365 = loc(fused[#loc231, #loc225])
#loc366 = loc(fused[#loc236, #loc234])
#loc367 = loc(fused[#loc237, #loc238])
#loc368 = loc(fused[#loc239, #loc241])
#loc369 = loc(fused[#loc242, #loc238])
#loc370 = loc(fused[#loc244, #loc246])
#loc371 = loc(fused[#loc247, #loc243])
#loc372 = loc(fused[#loc251, #loc252])
#loc373 = loc(fused[#loc253, #loc254])
#loc374 = loc(fused[#loc255, #loc256])
#loc375 = loc(fused[#loc258, #loc254])
#loc376 = loc(fused[#loc261, #loc262])
#loc377 = loc(fused[#loc265, #loc266])
#loc378 = loc(fused[#loc267, #loc268])
#loc379 = loc(fused[#loc270, #loc262])
#loc380 = loc(fused[#loc273, #loc274])
#loc381 = loc(fused[#loc275, #loc276])
#loc382 = loc(fused[#loc278, #loc274])
