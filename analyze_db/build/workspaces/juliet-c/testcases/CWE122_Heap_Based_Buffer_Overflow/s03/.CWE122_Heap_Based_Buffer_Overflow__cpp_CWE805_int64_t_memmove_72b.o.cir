!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":27:14)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":27:32)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":45:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":45:36)
#loc68 = loc(fused[#loc4, #loc5])
#loc72 = loc(fused[#loc19, #loc20])
#loc80 = loc(fused[#loc44, #loc45])
!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<long *, std::allocator<long *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!s64i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<long *, std::allocator<long *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E = !cir.record<struct "std::_Vector_base<long *, std::allocator<long *>>" {!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E = !cir.record<class "std::vector<long *, std::allocator<long *>>" {!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZNSt6vectorIPlSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!s64i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc68)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s64i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s64i>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc69)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc69)
    cir.return %11 : !cir.ptr<!cir.ptr<!s64i>> loc(#loc69)
  } loc(#loc67)
  cir.func private @printLongLongLine(!s64i) loc(#loc70)
  cir.func @_ZN64CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_727badSinkESt6vectorIPlSaIS1_EE(%arg0: !ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc73)
    %1 = cir.alloca !ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E, !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc72)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc74)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E, !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> loc(#loc25)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc26)
    %5 = cir.call @_ZNSt6vectorIPlSaIS0_EEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s64i>> extra(#fn_attr2) loc(#loc27)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
    cir.store %6, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc74)
    cir.br ^bb1 loc(#loc75)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc73)
    cir.store %7, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc73)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc30)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc31)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc31)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc32)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc76)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc77)
    cir.libc.memmove %15 bytes from %11 to %9 : !cir.ptr<!void>, !u64i loc(#loc78)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc39)
    %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc37)
    cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc40)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    cir.delete.array %20 : <!s64i> loc(#loc41)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc18)
  } loc(#loc71)
  cir.func @_ZN64CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_7211goodG2BSinkESt6vectorIPlSaIS1_EE(%arg0: !ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E loc(fused[#loc44, #loc45])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc81)
    %1 = cir.alloca !ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E, !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %1 : !ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E, !cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E> loc(#loc50)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.call @_ZNSt6vectorIPlSaIS0_EEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Clong_2A2C_std3A3Aallocator3Clong_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s64i>> extra(#fn_attr2) loc(#loc52)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    cir.store %6, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc81)
    cir.store %7, %0 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc81)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc55)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc56)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc56)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc57)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc84)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc85)
    cir.libc.memmove %15 bytes from %11 to %9 : !cir.ptr<!void>, !u64i loc(#loc86)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc64)
    %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc62)
    cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc65)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
    cir.delete.array %20 : <!s64i> loc(#loc66)
    cir.br ^bb2 loc(#loc54)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc43)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":27:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":38:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":32:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":32:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":30:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":30:34)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":28:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":30:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":30:22)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":31:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":37:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:35)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:49)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":34:50)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":35:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":35:32)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":35:33)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":35:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":36:19)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":45:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":55:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":49:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":49:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":47:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":47:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":46:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":47:33)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":47:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":48:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":54:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:17)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:23)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:31)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:49)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":51:50)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":52:27)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":52:32)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":52:33)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":52:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int64_t_memmove_72b.cpp":53:19)
#loc67 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc13, #loc14])
#loc70 = loc(fused[#loc15, #loc16])
#loc71 = loc(fused[#loc17, #loc18])
#loc73 = loc(fused[#loc21, #loc22])
#loc74 = loc(fused[#loc23, #loc24])
#loc75 = loc(fused[#loc28, #loc29])
#loc76 = loc(fused[#loc33, #loc34])
#loc77 = loc(fused[#loc32, #loc34])
#loc78 = loc(fused[#loc35, #loc36])
#loc79 = loc(fused[#loc42, #loc43])
#loc81 = loc(fused[#loc46, #loc47])
#loc82 = loc(fused[#loc48, #loc49])
#loc83 = loc(fused[#loc53, #loc54])
#loc84 = loc(fused[#loc58, #loc59])
#loc85 = loc(fused[#loc57, #loc59])
#loc86 = loc(fused[#loc60, #loc61])
