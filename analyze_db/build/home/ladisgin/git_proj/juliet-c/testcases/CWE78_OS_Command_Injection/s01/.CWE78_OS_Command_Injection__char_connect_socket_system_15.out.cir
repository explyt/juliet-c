!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":215:10)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":215:14)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":215:20)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":215:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc344 = loc(fused[#loc194, #loc195])
#loc345 = loc(fused[#loc196, #loc197])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc270)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc271)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc272)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc273)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc274)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc276)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc277)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc278)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc279)
  cir.func private @close(!s32i) -> !s32i loc(#loc280)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc29)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc283)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc285)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc272)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc272)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc272)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc40)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc289)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc290)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc291)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc292)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc293)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc51)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc292)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc293)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc58)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc59)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc60)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc295)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc66)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc67)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc67)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc297)
                  cir.if %72 {
                    cir.break loc(#loc69)
                  } loc(#loc298)
                } loc(#loc296)
                %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc299)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc72)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc300)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc301)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc77)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc77)
                %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc302)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc80)
                %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc303)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc85)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc85)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
                %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc304)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                  %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc306)
                  %71 = cir.const #cir.int<16> : !u64i loc(#loc307)
                  %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc307)
                  %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc97)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc98)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc308)
                  cir.if %76 {
                    cir.break loc(#loc100)
                  } loc(#loc309)
                } loc(#loc305)
                %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
                %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc103)
                %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc104)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc310)
                %39 = cir.const #cir.int<1> : !u64i loc(#loc311)
                %40 = cir.const #cir.int<100> : !s32i loc(#loc109)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc109)
                %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc110)
                %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc312)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc111)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc111)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc313)
                %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc314)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc113)
                %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc114)
                cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc315)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc120)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc120)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc317)
                  %73 = cir.ternary(%72, true {
                    %74 = cir.const #true loc(#loc121)
                    cir.yield %74 : !cir.bool loc(#loc121)
                  }, false {
                    %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                    %75 = cir.const #cir.int<0> : !s32i loc(#loc123)
                    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc318)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc121)
                      cir.yield %78 : !cir.bool loc(#loc121)
                    }, false {
                      %78 = cir.const #false loc(#loc121)
                      cir.yield %78 : !cir.bool loc(#loc121)
                    }) : (!cir.bool) -> !cir.bool loc(#loc121)
                    cir.yield %77 : !cir.bool loc(#loc121)
                  }) : (!cir.bool) -> !cir.bool loc(#loc121)
                  cir.if %73 {
                    cir.break loc(#loc125)
                  } loc(#loc319)
                } loc(#loc316)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc126)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc126)
                %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
                %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc128)
                %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc129)
                %57 = cir.const #cir.int<1> : !u64i loc(#loc320)
                %58 = cir.binop(div, %56, %57) : !u64i loc(#loc321)
                %59 = cir.binop(add, %54, %58) : !u64i loc(#loc322)
                %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc132)
                cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc323)
                %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc133)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
                %63 = cir.const #cir.int<13> : !s32i loc(#loc135)
                %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
                cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc140)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc142)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc142)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc327)
                  } loc(#loc326)
                } loc(#loc325)
                %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc145)
                %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
                %67 = cir.const #cir.int<10> : !s32i loc(#loc147)
                %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
                cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc152)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc154)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc154)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc331)
                  } loc(#loc330)
                } loc(#loc329)
                cir.yield loc(#loc57)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc157)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc157)
                cir.condition(%16) loc(#loc157)
              } loc(#loc294)
            } loc(#loc294)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc161)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc161)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc333)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc164)
              } loc(#loc334)
            } loc(#loc332)
          } loc(#loc288)
          cir.break loc(#loc165)
        } loc(#loc41)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc167)
          cir.break loc(#loc168)
        } loc(#loc166)
        cir.yield loc(#loc38)
      } loc(#loc38)
    } loc(#loc287)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc172)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc173)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc336)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc29)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc175)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc177)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
      } loc(#loc337)
    } loc(#loc335)
    cir.return loc(#loc33)
  } loc(#loc284)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc339)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc180)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc340)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc182)
    cir.return loc(#loc179)
  } loc(#loc338)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc341)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc342)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc191)
  cir.func @main(%arg0: !s32i loc(fused[#loc194, #loc195]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc196, #loc197])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc344)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc345)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc193)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc198)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc199)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc200)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc200)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc201)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc188)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_system_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc346)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_15_good() : () -> () loc(#loc203)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc189)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc190)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_system_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc347)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_15_bad() : () -> () loc(#loc207)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc191)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc210)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    cir.return %17 : !s32i loc(#loc348)
  } loc(#loc343)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc349)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc214)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc351)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc271)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc271)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc271)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc223)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc225)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc225)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc226)
          cir.break loc(#loc227)
        } loc(#loc224)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc229)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc214)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc214)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc229)
          cir.break loc(#loc231)
        } loc(#loc228)
        cir.yield loc(#loc221)
      } loc(#loc221)
    } loc(#loc353)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc235)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc236)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc355)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc238)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc238)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc239)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc240)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc241)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc240)
      } loc(#loc356)
    } loc(#loc354)
    cir.return loc(#loc216)
  } loc(#loc350)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc358)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc270)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc270)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc270)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc246)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc359)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc250)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc252)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc254)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc254)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc252)
          cir.break loc(#loc255)
        } loc(#loc251)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc257)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc257)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc258)
          cir.break loc(#loc259)
        } loc(#loc256)
        cir.yield loc(#loc248)
      } loc(#loc248)
    } loc(#loc360)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc263)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc264)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc362)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc266)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc266)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc267)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc268)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc269)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc268)
      } loc(#loc363)
    } loc(#loc361)
    cir.return loc(#loc243)
  } loc(#loc357)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":178:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":178:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":153:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":153:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":59:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":59:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:49)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":134:19)
#loc27 = loc("/usr/include/stdlib.h":923:1)
#loc28 = loc("/usr/include/stdlib.h":923:41)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":140:19)
#loc30 = loc("/usr/include/stdlib.h":756:1)
#loc31 = loc("/usr/include/stdlib.h":756:70)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":56:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":143:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":58:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":58:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":60:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":60:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":61:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":136:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":61:12)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":63:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":64:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":130:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":69:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":69:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":70:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":70:28)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":71:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":71:15)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":72:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":72:32)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:37)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:26)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:33)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":74:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":119:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:36)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:45)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:58)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:29)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:69)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":85:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":88:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":85:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":85:34)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":86:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":87:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:20)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:30)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:33)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:47)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:48)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":90:34)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":90:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:39)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:59)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:38)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:32)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:46)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":96:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:25)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:58)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:59)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:68)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:82)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:88)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":94:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":95:17)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:31)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:55)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:62)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:60)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:46)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:69)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:72)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:83)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:88)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:94)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:104)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:105)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:108)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:26)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:13)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:109)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:13)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":104:13)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:31)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:44)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:47)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:61)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":102:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":103:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:57)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:13)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:18)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:28)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:41)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:52)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:53)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:23)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:30)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:36)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:40)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":109:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":112:13)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":109:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":110:13)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":111:28)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":111:18)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":111:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:23)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:30)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:36)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":114:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":117:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":114:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":115:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":116:28)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":116:18)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":116:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":119:16)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":120:9)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":123:9)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":120:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":120:30)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":121:9)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":122:26)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":122:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":131:5)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":132:5)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":134:9)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":135:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:5)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":142:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:16)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:25)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":139:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":140:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":141:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":141:14)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":199:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":203:1)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":201:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":201:14)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":202:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":202:14)
#loc184 = loc("/usr/include/stdlib.h":575:1)
#loc185 = loc("/usr/include/stdlib.h":575:41)
#loc186 = loc("/usr/include/time.h":76:1)
#loc187 = loc("/usr/include/time.h":76:38)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":220:15)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":222:15)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":225:15)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":227:15)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":215:1)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":230:1)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":216:1)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":218:27)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":218:22)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":218:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":220:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":221:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":221:68)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":222:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":225:5)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":226:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":226:67)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":227:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":229:12)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":229:5)
#loc212 = loc("/usr/include/string.h":149:1)
#loc213 = loc("/usr/include/string.h":150:14)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":163:22)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":150:1)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":172:1)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":152:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":152:12)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":154:12)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":154:5)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":155:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":165:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":155:12)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":157:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":159:19)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":159:9)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":160:9)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":161:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":163:9)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":163:16)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":164:9)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":171:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:16)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:9)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:25)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":168:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":169:19)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":169:9)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":170:9)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":170:14)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":175:1)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":197:1)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":177:5)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":177:12)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":179:12)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":179:5)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":180:5)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":190:5)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":180:12)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":182:5)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":184:9)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":184:16)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":184:22)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":185:9)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":186:5)
#loc257 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":188:19)
#loc258 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":188:9)
#loc259 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":189:9)
#loc260 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":196:5)
#loc262 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:16)
#loc263 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:9)
#loc264 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:25)
#loc265 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":193:5)
#loc266 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":194:19)
#loc267 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":194:9)
#loc268 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":195:9)
#loc269 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":195:14)
#loc270 = loc(fused[#loc1, #loc2])
#loc271 = loc(fused[#loc3, #loc4])
#loc272 = loc(fused[#loc5, #loc6])
#loc273 = loc(fused[#loc7, #loc8])
#loc274 = loc(fused[#loc9, #loc10])
#loc275 = loc(fused[#loc11, #loc12])
#loc276 = loc(fused[#loc14, #loc15])
#loc277 = loc(fused[#loc16, #loc17])
#loc278 = loc(fused[#loc18, #loc19])
#loc279 = loc(fused[#loc20, #loc21])
#loc280 = loc(fused[#loc22, #loc23])
#loc281 = loc(fused[#loc24, #loc25])
#loc282 = loc(fused[#loc27, #loc28])
#loc283 = loc(fused[#loc30, #loc31])
#loc284 = loc(fused[#loc32, #loc33])
#loc285 = loc(fused[#loc34, #loc35])
#loc286 = loc(fused[#loc37, #loc36])
#loc287 = loc(fused[#loc38, #loc39])
#loc288 = loc(fused[#loc42, #loc43])
#loc289 = loc(fused[#loc44, #loc45])
#loc290 = loc(fused[#loc46, #loc47])
#loc291 = loc(fused[#loc48, #loc49])
#loc292 = loc(fused[#loc50, #loc51])
#loc293 = loc(fused[#loc52, #loc53])
#loc294 = loc(fused[#loc56, #loc57])
#loc295 = loc(fused[#loc62, #loc63])
#loc296 = loc(fused[#loc64, #loc65])
#loc297 = loc(fused[#loc66, #loc67])
#loc298 = loc(fused[#loc68, #loc65])
#loc299 = loc(fused[#loc70, #loc71])
#loc300 = loc(fused[#loc73, #loc74])
#loc301 = loc(fused[#loc75, #loc76])
#loc302 = loc(fused[#loc79, #loc77])
#loc303 = loc(fused[#loc83, #loc84])
#loc304 = loc(fused[#loc88, #loc89])
#loc305 = loc(fused[#loc90, #loc91])
#loc306 = loc(fused[#loc93, #loc94])
#loc307 = loc(fused[#loc95, #loc96])
#loc308 = loc(fused[#loc97, #loc98])
#loc309 = loc(fused[#loc99, #loc91])
#loc310 = loc(fused[#loc105, #loc106])
#loc311 = loc(fused[#loc107, #loc108])
#loc312 = loc(fused[#loc109, #loc110])
#loc313 = loc(fused[#loc109, #loc111])
#loc314 = loc(fused[#loc107, #loc112])
#loc315 = loc(fused[#loc115, #loc116])
#loc316 = loc(fused[#loc117, #loc118])
#loc317 = loc(fused[#loc119, #loc120])
#loc318 = loc(fused[#loc122, #loc123])
#loc319 = loc(fused[#loc124, #loc118])
#loc320 = loc(fused[#loc130, #loc131])
#loc321 = loc(fused[#loc129, #loc131])
#loc322 = loc(fused[#loc128, #loc131])
#loc323 = loc(fused[#loc127, #loc126])
#loc324 = loc(fused[#loc136, #loc137])
#loc325 = loc(fused[#loc138, #loc139])
#loc326 = loc(fused[#loc141, #loc139])
#loc327 = loc(fused[#loc144, #loc142])
#loc328 = loc(fused[#loc148, #loc149])
#loc329 = loc(fused[#loc150, #loc151])
#loc330 = loc(fused[#loc153, #loc151])
#loc331 = loc(fused[#loc156, #loc154])
#loc332 = loc(fused[#loc158, #loc159])
#loc333 = loc(fused[#loc160, #loc161])
#loc334 = loc(fused[#loc162, #loc159])
#loc335 = loc(fused[#loc169, #loc170])
#loc336 = loc(fused[#loc172, #loc173])
#loc337 = loc(fused[#loc174, #loc170])
#loc338 = loc(fused[#loc178, #loc179])
#loc339 = loc(fused[#loc180, #loc181])
#loc340 = loc(fused[#loc182, #loc183])
#loc341 = loc(fused[#loc184, #loc185])
#loc342 = loc(fused[#loc186, #loc187])
#loc343 = loc(fused[#loc192, #loc193])
#loc346 = loc(fused[#loc203, #loc204])
#loc347 = loc(fused[#loc207, #loc208])
#loc348 = loc(fused[#loc211, #loc210])
#loc349 = loc(fused[#loc212, #loc213])
#loc350 = loc(fused[#loc215, #loc216])
#loc351 = loc(fused[#loc217, #loc218])
#loc352 = loc(fused[#loc220, #loc219])
#loc353 = loc(fused[#loc221, #loc222])
#loc354 = loc(fused[#loc232, #loc233])
#loc355 = loc(fused[#loc235, #loc236])
#loc356 = loc(fused[#loc237, #loc233])
#loc357 = loc(fused[#loc242, #loc243])
#loc358 = loc(fused[#loc244, #loc245])
#loc359 = loc(fused[#loc247, #loc246])
#loc360 = loc(fused[#loc248, #loc249])
#loc361 = loc(fused[#loc260, #loc261])
#loc362 = loc(fused[#loc263, #loc264])
#loc363 = loc(fused[#loc265, #loc261])
