!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_char_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc113)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_char_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc117)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<67> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc11)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc118)
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc120)
  ^bb6:  // pred: ^bb5
    %7 = cir.const #cir.int<90> : !s32i loc(#loc17)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc17)
    cir.store %8, %0 : !s8i, !cir.ptr<!s8i> loc(#loc121)
    %9 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc19)
    cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc20)
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc114)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_char_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc125)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc126)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc22)
  } loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc131)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<67> : !s32i loc(#loc42)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc42)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc132)
    cir.br ^bb3 loc(#loc39)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc134)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb8 loc(#loc48)
  ^bb7:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc51)
    cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc52)
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc35)
  } loc(#loc128)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<67> : !s32i loc(#loc61)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc61)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    cir.br ^bb3 loc(#loc58)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc141)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc67)
    cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc68)
    cir.br ^bb7 loc(#loc64)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc64)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc54)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb4 loc(#loc77)
  ^bb3:  // pred: ^bb1
    %5 = cir.const #cir.int<67> : !s32i loc(#loc81)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc81)
    cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc83)
    cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc84)
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc147)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc87)
    cir.brcond %9 ^bb7, ^bb8 loc(#loc148)
  ^bb7:  // pred: ^bb6
    %10 = cir.const #cir.int<90> : !s32i loc(#loc89)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc89)
    cir.store %11, %0 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    %12 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc91)
    cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc92)
    cir.br ^bb8 loc(#loc86)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc86)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc70)
  } loc(#loc142)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<67> : !s32i loc(#loc101)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc101)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    %5 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc103)
    cir.call @printHexCharLine(%5) : (!s8i) -> () loc(#loc104)
    cir.br ^bb3 loc(#loc98)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %7 ^bb6, ^bb7 loc(#loc156)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<90> : !s32i loc(#loc109)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc109)
    cir.store %9, %0 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %10 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc111)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc112)
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc94)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_char_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE563_Unused_Variable__unused_value_char_04.c":30:1)
#loc4 = loc("CWE563_Unused_Variable__unused_value_char_04.c":44:1)
#loc5 = loc("CWE563_Unused_Variable__unused_value_char_04.c":32:5)
#loc6 = loc("CWE563_Unused_Variable__unused_value_char_04.c":32:10)
#loc7 = loc("CWE563_Unused_Variable__unused_value_char_04.c":33:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_char_04.c":37:5)
#loc9 = loc("CWE563_Unused_Variable__unused_value_char_04.c":33:8)
#loc10 = loc("CWE563_Unused_Variable__unused_value_char_04.c":34:5)
#loc11 = loc("CWE563_Unused_Variable__unused_value_char_04.c":36:16)
#loc12 = loc("CWE563_Unused_Variable__unused_value_char_04.c":36:9)
#loc13 = loc("CWE563_Unused_Variable__unused_value_char_04.c":38:5)
#loc14 = loc("CWE563_Unused_Variable__unused_value_char_04.c":43:5)
#loc15 = loc("CWE563_Unused_Variable__unused_value_char_04.c":38:8)
#loc16 = loc("CWE563_Unused_Variable__unused_value_char_04.c":39:5)
#loc17 = loc("CWE563_Unused_Variable__unused_value_char_04.c":41:16)
#loc18 = loc("CWE563_Unused_Variable__unused_value_char_04.c":41:9)
#loc19 = loc("CWE563_Unused_Variable__unused_value_char_04.c":42:26)
#loc20 = loc("CWE563_Unused_Variable__unused_value_char_04.c":42:9)
#loc21 = loc("CWE563_Unused_Variable__unused_value_char_04.c":128:1)
#loc22 = loc("CWE563_Unused_Variable__unused_value_char_04.c":134:1)
#loc23 = loc("CWE563_Unused_Variable__unused_value_char_04.c":130:5)
#loc24 = loc("CWE563_Unused_Variable__unused_value_char_04.c":130:14)
#loc25 = loc("CWE563_Unused_Variable__unused_value_char_04.c":131:5)
#loc26 = loc("CWE563_Unused_Variable__unused_value_char_04.c":131:14)
#loc27 = loc("CWE563_Unused_Variable__unused_value_char_04.c":132:5)
#loc28 = loc("CWE563_Unused_Variable__unused_value_char_04.c":132:14)
#loc29 = loc("CWE563_Unused_Variable__unused_value_char_04.c":133:5)
#loc30 = loc("CWE563_Unused_Variable__unused_value_char_04.c":133:14)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE563_Unused_Variable__unused_value_char_04.c":62:19)
#loc34 = loc("CWE563_Unused_Variable__unused_value_char_04.c":51:1)
#loc35 = loc("CWE563_Unused_Variable__unused_value_char_04.c":69:1)
#loc36 = loc("CWE563_Unused_Variable__unused_value_char_04.c":53:5)
#loc37 = loc("CWE563_Unused_Variable__unused_value_char_04.c":53:10)
#loc38 = loc("CWE563_Unused_Variable__unused_value_char_04.c":54:5)
#loc39 = loc("CWE563_Unused_Variable__unused_value_char_04.c":58:5)
#loc40 = loc("CWE563_Unused_Variable__unused_value_char_04.c":54:8)
#loc41 = loc("CWE563_Unused_Variable__unused_value_char_04.c":55:5)
#loc42 = loc("CWE563_Unused_Variable__unused_value_char_04.c":57:16)
#loc43 = loc("CWE563_Unused_Variable__unused_value_char_04.c":57:9)
#loc44 = loc("CWE563_Unused_Variable__unused_value_char_04.c":59:5)
#loc45 = loc("CWE563_Unused_Variable__unused_value_char_04.c":68:5)
#loc46 = loc("CWE563_Unused_Variable__unused_value_char_04.c":59:8)
#loc47 = loc("CWE563_Unused_Variable__unused_value_char_04.c":60:5)
#loc48 = loc("CWE563_Unused_Variable__unused_value_char_04.c":63:5)
#loc49 = loc("CWE563_Unused_Variable__unused_value_char_04.c":65:5)
#loc50 = loc("CWE563_Unused_Variable__unused_value_char_04.c":62:9)
#loc51 = loc("CWE563_Unused_Variable__unused_value_char_04.c":67:26)
#loc52 = loc("CWE563_Unused_Variable__unused_value_char_04.c":67:9)
#loc53 = loc("CWE563_Unused_Variable__unused_value_char_04.c":72:1)
#loc54 = loc("CWE563_Unused_Variable__unused_value_char_04.c":85:1)
#loc55 = loc("CWE563_Unused_Variable__unused_value_char_04.c":74:5)
#loc56 = loc("CWE563_Unused_Variable__unused_value_char_04.c":74:10)
#loc57 = loc("CWE563_Unused_Variable__unused_value_char_04.c":75:5)
#loc58 = loc("CWE563_Unused_Variable__unused_value_char_04.c":79:5)
#loc59 = loc("CWE563_Unused_Variable__unused_value_char_04.c":75:8)
#loc60 = loc("CWE563_Unused_Variable__unused_value_char_04.c":76:5)
#loc61 = loc("CWE563_Unused_Variable__unused_value_char_04.c":78:16)
#loc62 = loc("CWE563_Unused_Variable__unused_value_char_04.c":78:9)
#loc63 = loc("CWE563_Unused_Variable__unused_value_char_04.c":80:5)
#loc64 = loc("CWE563_Unused_Variable__unused_value_char_04.c":84:5)
#loc65 = loc("CWE563_Unused_Variable__unused_value_char_04.c":80:8)
#loc66 = loc("CWE563_Unused_Variable__unused_value_char_04.c":81:5)
#loc67 = loc("CWE563_Unused_Variable__unused_value_char_04.c":83:26)
#loc68 = loc("CWE563_Unused_Variable__unused_value_char_04.c":83:9)
#loc69 = loc("CWE563_Unused_Variable__unused_value_char_04.c":88:1)
#loc70 = loc("CWE563_Unused_Variable__unused_value_char_04.c":108:1)
#loc71 = loc("CWE563_Unused_Variable__unused_value_char_04.c":90:5)
#loc72 = loc("CWE563_Unused_Variable__unused_value_char_04.c":90:10)
#loc73 = loc("CWE563_Unused_Variable__unused_value_char_04.c":91:5)
#loc74 = loc("CWE563_Unused_Variable__unused_value_char_04.c":101:5)
#loc75 = loc("CWE563_Unused_Variable__unused_value_char_04.c":91:8)
#loc76 = loc("CWE563_Unused_Variable__unused_value_char_04.c":92:5)
#loc77 = loc("CWE563_Unused_Variable__unused_value_char_04.c":95:5)
#loc78 = loc("CWE563_Unused_Variable__unused_value_char_04.c":97:5)
#loc79 = loc("CWE563_Unused_Variable__unused_value_char_04.c":94:19)
#loc80 = loc("CWE563_Unused_Variable__unused_value_char_04.c":94:9)
#loc81 = loc("CWE563_Unused_Variable__unused_value_char_04.c":99:16)
#loc82 = loc("CWE563_Unused_Variable__unused_value_char_04.c":99:9)
#loc83 = loc("CWE563_Unused_Variable__unused_value_char_04.c":100:26)
#loc84 = loc("CWE563_Unused_Variable__unused_value_char_04.c":100:9)
#loc85 = loc("CWE563_Unused_Variable__unused_value_char_04.c":102:5)
#loc86 = loc("CWE563_Unused_Variable__unused_value_char_04.c":107:5)
#loc87 = loc("CWE563_Unused_Variable__unused_value_char_04.c":102:8)
#loc88 = loc("CWE563_Unused_Variable__unused_value_char_04.c":103:5)
#loc89 = loc("CWE563_Unused_Variable__unused_value_char_04.c":105:16)
#loc90 = loc("CWE563_Unused_Variable__unused_value_char_04.c":105:9)
#loc91 = loc("CWE563_Unused_Variable__unused_value_char_04.c":106:26)
#loc92 = loc("CWE563_Unused_Variable__unused_value_char_04.c":106:9)
#loc93 = loc("CWE563_Unused_Variable__unused_value_char_04.c":111:1)
#loc94 = loc("CWE563_Unused_Variable__unused_value_char_04.c":126:1)
#loc95 = loc("CWE563_Unused_Variable__unused_value_char_04.c":113:5)
#loc96 = loc("CWE563_Unused_Variable__unused_value_char_04.c":113:10)
#loc97 = loc("CWE563_Unused_Variable__unused_value_char_04.c":114:5)
#loc98 = loc("CWE563_Unused_Variable__unused_value_char_04.c":119:5)
#loc99 = loc("CWE563_Unused_Variable__unused_value_char_04.c":114:8)
#loc100 = loc("CWE563_Unused_Variable__unused_value_char_04.c":115:5)
#loc101 = loc("CWE563_Unused_Variable__unused_value_char_04.c":117:16)
#loc102 = loc("CWE563_Unused_Variable__unused_value_char_04.c":117:9)
#loc103 = loc("CWE563_Unused_Variable__unused_value_char_04.c":118:26)
#loc104 = loc("CWE563_Unused_Variable__unused_value_char_04.c":118:9)
#loc105 = loc("CWE563_Unused_Variable__unused_value_char_04.c":120:5)
#loc106 = loc("CWE563_Unused_Variable__unused_value_char_04.c":125:5)
#loc107 = loc("CWE563_Unused_Variable__unused_value_char_04.c":120:8)
#loc108 = loc("CWE563_Unused_Variable__unused_value_char_04.c":121:5)
#loc109 = loc("CWE563_Unused_Variable__unused_value_char_04.c":123:16)
#loc110 = loc("CWE563_Unused_Variable__unused_value_char_04.c":123:9)
#loc111 = loc("CWE563_Unused_Variable__unused_value_char_04.c":124:26)
#loc112 = loc("CWE563_Unused_Variable__unused_value_char_04.c":124:9)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc10, #loc8])
#loc118 = loc(fused[#loc12, #loc11])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc16, #loc14])
#loc121 = loc(fused[#loc18, #loc17])
#loc122 = loc(fused[#loc21, #loc22])
#loc123 = loc(fused[#loc23, #loc24])
#loc124 = loc(fused[#loc25, #loc26])
#loc125 = loc(fused[#loc27, #loc28])
#loc126 = loc(fused[#loc29, #loc30])
#loc127 = loc(fused[#loc31, #loc32])
#loc128 = loc(fused[#loc34, #loc35])
#loc129 = loc(fused[#loc36, #loc37])
#loc130 = loc(fused[#loc38, #loc39])
#loc131 = loc(fused[#loc41, #loc39])
#loc132 = loc(fused[#loc43, #loc42])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc47, #loc48, #loc49, #loc45])
#loc135 = loc(fused[#loc53, #loc54])
#loc136 = loc(fused[#loc55, #loc56])
#loc137 = loc(fused[#loc57, #loc58])
#loc138 = loc(fused[#loc60, #loc58])
#loc139 = loc(fused[#loc62, #loc61])
#loc140 = loc(fused[#loc63, #loc64])
#loc141 = loc(fused[#loc66, #loc64])
#loc142 = loc(fused[#loc69, #loc70])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc73, #loc74])
#loc145 = loc(fused[#loc76, #loc77, #loc78, #loc74])
#loc146 = loc(fused[#loc82, #loc81])
#loc147 = loc(fused[#loc85, #loc86])
#loc148 = loc(fused[#loc88, #loc86])
#loc149 = loc(fused[#loc90, #loc89])
#loc150 = loc(fused[#loc93, #loc94])
#loc151 = loc(fused[#loc95, #loc96])
#loc152 = loc(fused[#loc97, #loc98])
#loc153 = loc(fused[#loc100, #loc98])
#loc154 = loc(fused[#loc102, #loc101])
#loc155 = loc(fused[#loc105, #loc106])
#loc156 = loc(fused[#loc108, #loc106])
#loc157 = loc(fused[#loc110, #loc109])
