!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc126 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc181)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc182)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc183)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc184)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc185)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc186)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc187)
  cir.func private @close(!s32i) -> !s32i loc(#loc188)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__listen_socket_17.c\00" : !cir.array<!s8i x 47>> : !cir.array<!s8i x 47> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__listen_socket_17_bad()\00" : !cir.array<!s8i x 56>> : !cir.array<!s8i x 56> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc192)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc193)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc194)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc195)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc196)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc37)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<0> : !s32i loc(#loc41)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb2 loc(#loc199)
  ^bb2:  // 2 preds: ^bb1, ^bb49
    %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %12 ^bb3, ^bb50 loc(#loc45)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc202)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc203)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc27)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc29)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb6 loc(#loc204)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc204)
  ^bb7:  // pred: ^bb36
    %17 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %18 ^bb8, ^bb37 loc(#loc51)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %19 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc54)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb9 loc(#loc206)
  ^bb9:  // pred: ^bb8
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc61)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %26 ^bb10, ^bb11 loc(#loc208)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc63)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc59)
  ^bb12:  // pred: ^bb11
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc209)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc210)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc211)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc71)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc212)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc74)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc213)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc78)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc214)
    cir.br ^bb13 loc(#loc215)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc216)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc217)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc217)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc90)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc91)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %48 ^bb14, ^bb15 loc(#loc219)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc93)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc220)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc97)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc99)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc221)
    cir.brcond %54 ^bb18, ^bb19 loc(#loc222)
  ^bb18:  // pred: ^bb17
    cir.br ^bb37 loc(#loc101)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc95)
  ^bb20:  // pred: ^bb19
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc103)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc104)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc105)
    cir.store %58, %3 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb21 loc(#loc224)
  ^bb21:  // pred: ^bb20
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc111)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %62 ^bb22, ^bb23 loc(#loc226)
  ^bb22:  // pred: ^bb21
    cir.br ^bb37 loc(#loc113)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc109)
  ^bb24:  // pred: ^bb23
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %64 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %66 = cir.const #cir.int<3> : !s32i loc(#loc116)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc116)
    %68 = cir.const #cir.int<4> : !u64i loc(#loc116)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc116)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc116)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc116)
    %72 = cir.binop(add, %69, %71) : !u64i loc(#loc116)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc117)
    %75 = cir.binop(sub, %72, %74) : !u64i loc(#loc227)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %77 = cir.call @recv(%63, %65, %75, %76) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
    %78 = cir.cast(integral, %77 : !s64i), !s32i loc(#loc119)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb25 loc(#loc229)
  ^bb25:  // pred: ^bb24
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc125)
    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %82 ^bb26, ^bb27 loc(#loc126)
  ^bb26:  // pred: ^bb25
    %83 = cir.const #true loc(#loc126)
    cir.br ^bb32(%83 : !cir.bool) loc(#loc126)
  ^bb27:  // pred: ^bb25
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %86 ^bb28, ^bb29 loc(#loc126)
  ^bb28:  // pred: ^bb27
    %87 = cir.const #true loc(#loc126)
    cir.br ^bb30(%87 : !cir.bool) loc(#loc126)
  ^bb29:  // pred: ^bb27
    %88 = cir.const #false loc(#loc126)
    cir.br ^bb30(%88 : !cir.bool) loc(#loc126)
  ^bb30(%89: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:48)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc126)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32(%89 : !cir.bool) loc(#loc126)
  ^bb32(%90: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:48)):  // 2 preds: ^bb26, ^bb31
    cir.br ^bb33 loc(#loc126)
  ^bb33:  // pred: ^bb32
    cir.brcond %90 ^bb34, ^bb35 loc(#loc232)
  ^bb34:  // pred: ^bb33
    cir.br ^bb37 loc(#loc130)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc123)
  ^bb36:  // pred: ^bb35
    %91 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %92 = cir.cast(integral, %91 : !s32i), !s8i loc(#loc131)
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
    %95 = cir.ptr_stride(%94 : !cir.ptr<!s8i>, %93 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %92, %95 : !s8i, !cir.ptr<!s8i> loc(#loc233)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
    %97 = cir.call @atoi(%96) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc135)
    cir.store %97, %6 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.br ^bb7 loc(#loc50)
  ^bb37:  // 6 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb34
    cir.br ^bb38 loc(#loc50)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc235)
  ^bb39:  // pred: ^bb38
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %100 = cir.unary(minus, %99) : !s32i, !s32i loc(#loc141)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %101 ^bb40, ^bb41 loc(#loc237)
  ^bb40:  // pred: ^bb39
    %102 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc144)
    cir.br ^bb41 loc(#loc139)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc139)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc238)
  ^bb43:  // pred: ^bb42
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc148)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc239)
    cir.brcond %107 ^bb44, ^bb45 loc(#loc240)
  ^bb44:  // pred: ^bb43
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc151)
    cir.br ^bb45 loc(#loc146)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc146)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc48)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc40)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc40)
  ^bb49:  // pred: ^bb48
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %111 = cir.unary(inc, %110) : !s32i, !s32i loc(#loc153)
    cir.store %111, %5 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb2 loc(#loc199)
  ^bb50:  // pred: ^bb2
    cir.br ^bb51 loc(#loc40)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc19)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc19)
  ^bb53:  // pred: ^bb52
    %112 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %113 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %114 = cir.cmp(gt, %112, %113) : !s32i, !cir.bool loc(#loc19)
    cir.brcond %114 ^bb54, ^bb55 loc(#loc19)
  ^bb54:  // pred: ^bb53
    cir.br ^bb56 loc(#loc19)
  ^bb55:  // pred: ^bb53
    %115 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc19)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
    %117 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc19)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc19)
    %119 = cir.const #cir.int<126> : !s32i loc(#loc19)
    %120 = cir.cast(integral, %119 : !s32i), !u32i loc(#loc19)
    %121 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc19)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @__assert_fail(%116, %118, %120, %122) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc19)
    cir.br ^bb56 loc(#loc19)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc19)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc19)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc21)
  } loc(#loc190)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc156)
    cir.return loc(#loc155)
  } loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"void goodG2B()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc158)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc245)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc246)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc166)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc170)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb2 loc(#loc248)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc174)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc251)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<5> : !s32i loc(#loc176)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc176)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc180)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.br ^bb2 loc(#loc248)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc158)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc158)
  ^bb10:  // pred: ^bb9
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc158)
    %15 = cir.cmp(gt, %13, %14) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %15 ^bb11, ^bb12 loc(#loc158)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc158)
  ^bb12:  // pred: ^bb10
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc158)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc158)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc158)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc158)
    %20 = cir.const #cir.int<146> : !s32i loc(#loc158)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc158)
    %22 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc158)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @__assert_fail(%17, %19, %21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc158)
    cir.br ^bb13 loc(#loc158)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc158)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc158)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc160)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/assert.h":67:1)
#loc18 = loc("/usr/include/assert.h":69:43)
#loc19 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":126:5)
#loc20 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":47:1)
#loc21 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":127:1)
#loc22 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":60:13)
#loc23 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":60:17)
#loc24 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":61:13)
#loc25 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":61:32)
#loc26 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":62:13)
#loc27 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":62:35)
#loc28 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":63:13)
#loc29 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":63:35)
#loc30 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":64:13)
#loc31 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":64:45)
#loc32 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":49:5)
#loc33 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":49:9)
#loc34 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":50:5)
#loc35 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":50:9)
#loc36 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":52:13)
#loc37 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":52:12)
#loc38 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":52:5)
#loc39 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:5)
#loc40 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":124:5)
#loc41 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:13)
#loc42 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:9)
#loc43 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:16)
#loc44 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:20)
#loc45 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:18)
#loc46 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":54:5)
#loc47 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":55:9)
#loc48 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":123:9)
#loc49 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":65:13)
#loc50 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":108:21)
#loc51 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":108:20)
#loc52 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":75:39)
#loc53 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":75:48)
#loc54 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":75:61)
#loc55 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":75:32)
#loc56 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":75:17)
#loc57 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":75:72)
#loc58 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":76:17)
#loc59 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":79:17)
#loc60 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":76:21)
#loc61 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":76:37)
#loc62 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":77:17)
#loc63 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":78:21)
#loc64 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:24)
#loc65 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:25)
#loc66 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:34)
#loc67 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:37)
#loc68 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:51)
#loc69 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:17)
#loc70 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":80:52)
#loc71 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":81:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":81:17)
#loc74 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":82:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":82:17)
#loc78 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":83:42)
#loc79 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":83:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":83:17)
#loc82 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":83:50)
#loc83 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:17)
#loc84 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":87:17)
#loc85 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:26)
#loc86 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:58)
#loc87 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:59)
#loc88 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:68)
#loc89 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:82)
#loc90 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:21)
#loc91 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":84:88)
#loc92 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":85:17)
#loc93 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":86:21)
#loc94 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":88:17)
#loc95 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":91:17)
#loc96 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":88:28)
#loc97 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":88:42)
#loc98 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":88:21)
#loc99 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":88:61)
#loc100 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":89:17)
#loc101 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":90:21)
#loc102 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":92:39)
#loc103 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":92:53)
#loc104 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":92:59)
#loc105 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":92:32)
#loc106 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":92:17)
#loc107 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":92:63)
#loc108 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":93:17)
#loc109 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":96:17)
#loc110 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":93:21)
#loc111 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":93:37)
#loc112 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":94:17)
#loc113 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":95:21)
#loc114 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:35)
#loc115 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:49)
#loc116 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:62)
#loc117 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:80)
#loc118 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:83)
#loc119 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:30)
#loc120 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:17)
#loc121 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":98:84)
#loc122 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:17)
#loc123 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":102:17)
#loc124 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:21)
#loc125 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:35)
#loc127 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:51)
#loc128 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":99:65)
#loc129 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":100:17)
#loc130 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":101:21)
#loc131 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":104:43)
#loc132 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":104:29)
#loc133 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":104:17)
#loc134 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":106:29)
#loc135 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":106:24)
#loc136 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":106:17)
#loc137 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":106:40)
#loc138 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":109:13)
#loc139 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":112:13)
#loc140 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":109:17)
#loc141 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":109:33)
#loc142 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":110:13)
#loc143 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":111:30)
#loc144 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":111:17)
#loc145 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":113:13)
#loc146 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":116:13)
#loc147 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":113:17)
#loc148 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":113:33)
#loc149 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":114:13)
#loc150 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":115:30)
#loc151 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":115:17)
#loc152 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:24)
#loc153 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":53:23)
#loc154 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":149:1)
#loc155 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":152:1)
#loc156 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":151:5)
#loc157 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":151:13)
#loc158 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":146:5)
#loc159 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":134:1)
#loc160 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":147:1)
#loc161 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":136:5)
#loc162 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":136:9)
#loc163 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":137:5)
#loc164 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":137:9)
#loc165 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":139:13)
#loc166 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":139:12)
#loc167 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":139:5)
#loc168 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:5)
#loc169 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":144:5)
#loc170 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:13)
#loc171 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:9)
#loc172 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:16)
#loc173 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:20)
#loc174 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:18)
#loc175 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":141:5)
#loc176 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":143:16)
#loc177 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":143:29)
#loc178 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":143:9)
#loc179 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:24)
#loc180 = loc("CWE617_Reachable_Assertion__listen_socket_17.c":140:23)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc9, #loc10])
#loc186 = loc(fused[#loc11, #loc12])
#loc187 = loc(fused[#loc13, #loc14])
#loc188 = loc(fused[#loc15, #loc16])
#loc189 = loc(fused[#loc17, #loc18])
#loc190 = loc(fused[#loc20, #loc21])
#loc191 = loc(fused[#loc22, #loc23])
#loc192 = loc(fused[#loc24, #loc25])
#loc193 = loc(fused[#loc26, #loc27])
#loc194 = loc(fused[#loc28, #loc29])
#loc195 = loc(fused[#loc30, #loc31])
#loc196 = loc(fused[#loc32, #loc33])
#loc197 = loc(fused[#loc34, #loc35])
#loc198 = loc(fused[#loc38, #loc36])
#loc199 = loc(fused[#loc39, #loc40])
#loc200 = loc(fused[#loc42, #loc41])
#loc201 = loc(fused[#loc43, #loc44])
#loc202 = loc(fused[#loc46, #loc40])
#loc203 = loc(fused[#loc47, #loc48])
#loc204 = loc(fused[#loc49, #loc50])
#loc205 = loc(fused[#loc56, #loc57])
#loc206 = loc(fused[#loc58, #loc59])
#loc207 = loc(fused[#loc60, #loc61])
#loc208 = loc(fused[#loc62, #loc59])
#loc209 = loc(fused[#loc64, #loc65])
#loc210 = loc(fused[#loc67, #loc68])
#loc211 = loc(fused[#loc69, #loc70])
#loc212 = loc(fused[#loc73, #loc71])
#loc213 = loc(fused[#loc77, #loc74])
#loc214 = loc(fused[#loc81, #loc82])
#loc215 = loc(fused[#loc83, #loc84])
#loc216 = loc(fused[#loc86, #loc87])
#loc217 = loc(fused[#loc88, #loc89])
#loc218 = loc(fused[#loc90, #loc91])
#loc219 = loc(fused[#loc92, #loc84])
#loc220 = loc(fused[#loc94, #loc95])
#loc221 = loc(fused[#loc98, #loc99])
#loc222 = loc(fused[#loc100, #loc95])
#loc223 = loc(fused[#loc106, #loc107])
#loc224 = loc(fused[#loc108, #loc109])
#loc225 = loc(fused[#loc110, #loc111])
#loc226 = loc(fused[#loc112, #loc109])
#loc227 = loc(fused[#loc116, #loc117])
#loc228 = loc(fused[#loc120, #loc121])
#loc229 = loc(fused[#loc122, #loc123])
#loc230 = loc(fused[#loc124, #loc125])
#loc231 = loc(fused[#loc127, #loc128])
#loc232 = loc(fused[#loc129, #loc123])
#loc233 = loc(fused[#loc133, #loc131])
#loc234 = loc(fused[#loc136, #loc137])
#loc235 = loc(fused[#loc138, #loc139])
#loc236 = loc(fused[#loc140, #loc141])
#loc237 = loc(fused[#loc142, #loc139])
#loc238 = loc(fused[#loc145, #loc146])
#loc239 = loc(fused[#loc147, #loc148])
#loc240 = loc(fused[#loc149, #loc146])
#loc241 = loc(fused[#loc153, #loc152])
#loc242 = loc(fused[#loc154, #loc155])
#loc243 = loc(fused[#loc156, #loc157])
#loc244 = loc(fused[#loc159, #loc160])
#loc245 = loc(fused[#loc161, #loc162])
#loc246 = loc(fused[#loc163, #loc164])
#loc247 = loc(fused[#loc167, #loc165])
#loc248 = loc(fused[#loc168, #loc169])
#loc249 = loc(fused[#loc171, #loc170])
#loc250 = loc(fused[#loc172, #loc173])
#loc251 = loc(fused[#loc175, #loc169])
#loc252 = loc(fused[#loc178, #loc177])
#loc253 = loc(fused[#loc180, #loc179])
