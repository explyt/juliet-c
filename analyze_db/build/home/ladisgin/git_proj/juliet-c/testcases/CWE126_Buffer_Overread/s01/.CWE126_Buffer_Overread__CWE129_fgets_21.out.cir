!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":27:21)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":27:25)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":216:10)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":216:14)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":216:20)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":216:32)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":79:26)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":79:30)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:27)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":126:26)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":126:30)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:27)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":168:25)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":168:29)
#true = #cir.bool<true> : !cir.bool
#loc280 = loc(fused[#loc17, #loc18])
#loc305 = loc(fused[#loc87, #loc88])
#loc306 = loc(fused[#loc89, #loc90])
#loc312 = loc(fused[#loc111, #loc112])
#loc333 = loc(fused[#loc175, #loc176])
#loc354 = loc(fused[#loc237, #loc238])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc273)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc274)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc275)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc277)
  cir.func private @printIntLine(!s32i) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc281)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc280)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc21)
    cir.br ^bb1 loc(#loc282)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc277)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %4 ^bb2, ^bb10 loc(#loc283)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc284)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc281)
    cir.store %5, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc281)
    cir.br ^bb4 loc(#loc285)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc287)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc36)
    %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc37)
    cir.br ^bb7 loc(#loc33)
  ^bb6:  // pred: ^bb4
    %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc16)
  } loc(#loc279)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc289)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc46)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc289)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc289)
    cir.br ^bb2 loc(#loc293)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc52)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc53)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc53)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc53)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc53)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc53)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc53)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc53)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc55)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc294)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc295)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc60)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb5 loc(#loc58)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb5 loc(#loc51)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc51)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %25 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc277)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @badSink(%26) : (!s32i) -> () loc(#loc68)
    cir.return loc(#loc40)
  } loc(#loc288)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc299)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc70)
  } loc(#loc298)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc302)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc306)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_21_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_21_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    cir.return %17 : !s32i loc(#loc309)
  } loc(#loc304)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc108)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc111, #loc112])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc313)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc312)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.br ^bb1 loc(#loc314)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc310)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc315)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb19 loc(#loc120)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc316)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc313)
    cir.store %7, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc313)
    cir.br ^bb5 loc(#loc317)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %10 ^bb6, ^bb11 loc(#loc129)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc131)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc129)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #true loc(#loc129)
    cir.br ^bb9(%14 : !cir.bool) loc(#loc129)
  ^bb8:  // pred: ^bb6
    %15 = cir.const #false loc(#loc129)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc129)
  ^bb9(%16: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:27)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc129)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%16 : !cir.bool) loc(#loc129)
  ^bb11:  // pred: ^bb5
    %17 = cir.const #false loc(#loc129)
    cir.br ^bb12(%17 : !cir.bool) loc(#loc129)
  ^bb12(%18: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc129)
  ^bb13:  // pred: ^bb12
    cir.brcond %18 ^bb14, ^bb15 loc(#loc320)
  ^bb14:  // pred: ^bb13
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc137)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc137)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc138)
    cir.br ^bb16 loc(#loc134)
  ^bb15:  // pred: ^bb13
    %23 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc108)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb16 loc(#loc126)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc126)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc124)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc117)
  ^bb19:  // 2 preds: ^bb2, ^bb18
    cir.br ^bb20 loc(#loc117)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc110)
  } loc(#loc311)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc322)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc323)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc147)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb1 loc(#loc325)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc322)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc322)
    cir.br ^bb2 loc(#loc326)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc153)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc154)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc154)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc154)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc154)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc154)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc154)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc154)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc154)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc155)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc156)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc327)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc328)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc161)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc162)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb5 loc(#loc159)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc165)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc150)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %25 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc310)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.call @goodB2G1Sink(%26) : (!s32i) -> () loc(#loc170)
    cir.return loc(#loc141)
  } loc(#loc321)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc331)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc175, #loc176])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc334)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc333)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb1 loc(#loc335)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc331)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %4 ^bb2, ^bb18 loc(#loc336)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc337)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc334)
    cir.store %5, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc334)
    cir.br ^bb4 loc(#loc338)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc339)
    cir.brcond %8 ^bb5, ^bb10 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc192)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc190)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #true loc(#loc190)
    cir.br ^bb8(%12 : !cir.bool) loc(#loc190)
  ^bb7:  // pred: ^bb5
    %13 = cir.const #false loc(#loc190)
    cir.br ^bb8(%13 : !cir.bool) loc(#loc190)
  ^bb8(%14: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:27)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc190)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%14 : !cir.bool) loc(#loc190)
  ^bb10:  // pred: ^bb4
    %15 = cir.const #false loc(#loc190)
    cir.br ^bb11(%15 : !cir.bool) loc(#loc190)
  ^bb11(%16: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:27)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc190)
  ^bb12:  // pred: ^bb11
    cir.brcond %16 ^bb13, ^bb14 loc(#loc341)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc198)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc198)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc199)
    cir.br ^bb15 loc(#loc195)
  ^bb14:  // pred: ^bb12
    %21 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc200)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    cir.br ^bb15 loc(#loc187)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc187)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc185)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc181)
  ^bb18:  // 2 preds: ^bb1, ^bb17
    cir.br ^bb19 loc(#loc181)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc174)
  } loc(#loc332)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc343)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc344)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc209)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb1 loc(#loc346)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc343)
    cir.store %4, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc343)
    cir.br ^bb2 loc(#loc347)
  ^bb2:  // pred: ^bb1
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc215)
    %6 = cir.const #cir.int<3> : !s32i loc(#loc216)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc216)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc216)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc216)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc216)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc216)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc216)
    %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc216)
    %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc217)
    %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc218)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
    %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc348)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc349)
  ^bb3:  // pred: ^bb2
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc223)
    %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc224)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb5 loc(#loc221)
  ^bb4:  // pred: ^bb2
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc227)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    cir.br ^bb5 loc(#loc214)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc214)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc212)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %25 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc331)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    cir.call @goodB2G2Sink(%26) : (!s32i) -> () loc(#loc232)
    cir.return loc(#loc203)
  } loc(#loc342)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc352)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc237, #loc238])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc355)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc354)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb1 loc(#loc356)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc352)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc244)
    cir.brcond %4 ^bb2, ^bb10 loc(#loc357)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc358)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc355)
    cir.store %5, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc355)
    cir.br ^bb4 loc(#loc359)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc360)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc361)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc256)
    %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc256)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc257)
    cir.br ^bb7 loc(#loc253)
  ^bb6:  // pred: ^bb4
    %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc258)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc258)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc259)
    cir.br ^bb7 loc(#loc249)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc249)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc247)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc243)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc243)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc236)
  } loc(#loc353)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc363)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc265)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc267)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc269)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc352)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc272)
    cir.return loc(#loc261)
  } loc(#loc362)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":62:23)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":25:1)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":41:27)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":27:1)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":45:1)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":32:13)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":32:34)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":28:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":44:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":29:8)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":30:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":31:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":43:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":42:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:17)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:25)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":36:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":38:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":40:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":37:37)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":37:30)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":37:17)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":41:17)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":47:1)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":67:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":53:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":53:45)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":49:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":49:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":51:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":51:12)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":51:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":52:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":64:5)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":63:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:19)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:32)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:49)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:59)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":56:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":59:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":61:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:25)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:20)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:36)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":62:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":65:17)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":65:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":66:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":66:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":200:1)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":205:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":202:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":202:14)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":203:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":203:14)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":204:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":204:13)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":221:15)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":223:15)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":226:15)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":228:15)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":216:1)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":231:1)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":217:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":219:27)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":219:22)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":219:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":221:5)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":222:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":222:50)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":223:5)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":226:5)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":227:5)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":227:49)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":228:5)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":230:12)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":230:5)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":74:1)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":74:29)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":84:19)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":97:27)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":79:1)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":101:1)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":89:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":89:34)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":80:1)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":81:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":100:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":81:8)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":82:5)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":85:5)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":87:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":84:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":88:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":99:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":98:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:17)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:25)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:30)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:38)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:40)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":92:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":94:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":96:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":93:37)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":93:30)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":93:17)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":97:17)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":103:1)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":123:1)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":109:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":109:45)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":105:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":105:9)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":107:13)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":107:12)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":107:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":108:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":120:5)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:9)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":119:9)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:19)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:32)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:49)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:59)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":112:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":115:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":117:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:25)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:20)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:36)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":118:23)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":118:13)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":121:22)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":121:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":122:18)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":122:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":75:1)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":75:29)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":126:1)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":143:1)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":131:13)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":131:34)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":127:1)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":128:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":142:5)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":128:8)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":129:5)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":130:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":141:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:13)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":140:13)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:17)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:25)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:30)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:38)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:40)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":134:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":136:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":138:13)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":135:37)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":135:30)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":135:17)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":139:27)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":139:17)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":145:1)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":165:1)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":151:9)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":151:45)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":147:5)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":147:9)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":149:13)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":149:12)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":149:5)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":150:5)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":162:5)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:9)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":161:9)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:19)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:32)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:49)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:13)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:59)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":154:9)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":157:9)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":159:9)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:25)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:20)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:36)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":160:23)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":160:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":163:22)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":163:5)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":164:18)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":164:5)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":76:1)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":76:28)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":168:1)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":186:1)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":173:13)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":173:34)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":169:1)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":170:5)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":185:5)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":170:8)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":171:5)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":172:9)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":184:9)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":183:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:17)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:25)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":177:13)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":179:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":181:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":178:37)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":178:30)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":178:17)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":182:27)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":182:17)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":188:1)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":198:1)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":190:5)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":190:9)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":192:13)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":192:12)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":192:5)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":195:12)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":195:5)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":196:21)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":196:5)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":197:17)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":197:5)
#loc273 = loc(fused[#loc1, #loc2])
#loc274 = loc(fused[#loc3, #loc4])
#loc275 = loc(fused[#loc5, #loc6])
#loc276 = loc(fused[#loc7, #loc8])
#loc277 = loc(fused[#loc10, #loc11])
#loc278 = loc(fused[#loc12, #loc13])
#loc279 = loc(fused[#loc15, #loc16])
#loc281 = loc(fused[#loc19, #loc20])
#loc282 = loc(fused[#loc22, #loc23])
#loc283 = loc(fused[#loc25, #loc23])
#loc284 = loc(fused[#loc26, #loc27])
#loc285 = loc(fused[#loc28, #loc29])
#loc286 = loc(fused[#loc30, #loc31])
#loc287 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc288 = loc(fused[#loc39, #loc40])
#loc289 = loc(fused[#loc41, #loc42])
#loc290 = loc(fused[#loc43, #loc44])
#loc291 = loc(fused[#loc47, #loc45])
#loc292 = loc(fused[#loc48, #loc49])
#loc293 = loc(fused[#loc50, #loc51])
#loc294 = loc(fused[#loc55, #loc56])
#loc295 = loc(fused[#loc57, #loc58, #loc59, #loc51])
#loc296 = loc(fused[#loc62, #loc63])
#loc297 = loc(fused[#loc66, #loc65])
#loc298 = loc(fused[#loc69, #loc70])
#loc299 = loc(fused[#loc71, #loc72])
#loc300 = loc(fused[#loc73, #loc74])
#loc301 = loc(fused[#loc75, #loc76])
#loc302 = loc(fused[#loc77, #loc78])
#loc303 = loc(fused[#loc79, #loc80])
#loc304 = loc(fused[#loc85, #loc86])
#loc307 = loc(fused[#loc96, #loc97])
#loc308 = loc(fused[#loc100, #loc101])
#loc309 = loc(fused[#loc104, #loc103])
#loc310 = loc(fused[#loc105, #loc106])
#loc311 = loc(fused[#loc109, #loc110])
#loc313 = loc(fused[#loc113, #loc114])
#loc314 = loc(fused[#loc116, #loc117])
#loc315 = loc(fused[#loc119, #loc120, #loc121, #loc117])
#loc316 = loc(fused[#loc123, #loc124])
#loc317 = loc(fused[#loc125, #loc126])
#loc318 = loc(fused[#loc127, #loc128])
#loc319 = loc(fused[#loc130, #loc132])
#loc320 = loc(fused[#loc133, #loc134, #loc135, #loc126])
#loc321 = loc(fused[#loc140, #loc141])
#loc322 = loc(fused[#loc142, #loc143])
#loc323 = loc(fused[#loc144, #loc145])
#loc324 = loc(fused[#loc148, #loc146])
#loc325 = loc(fused[#loc149, #loc150])
#loc326 = loc(fused[#loc151, #loc152])
#loc327 = loc(fused[#loc156, #loc157])
#loc328 = loc(fused[#loc158, #loc159, #loc160, #loc152])
#loc329 = loc(fused[#loc163, #loc164])
#loc330 = loc(fused[#loc168, #loc167])
#loc331 = loc(fused[#loc171, #loc172])
#loc332 = loc(fused[#loc173, #loc174])
#loc334 = loc(fused[#loc177, #loc178])
#loc335 = loc(fused[#loc180, #loc181])
#loc336 = loc(fused[#loc183, #loc181])
#loc337 = loc(fused[#loc184, #loc185])
#loc338 = loc(fused[#loc186, #loc187])
#loc339 = loc(fused[#loc188, #loc189])
#loc340 = loc(fused[#loc191, #loc193])
#loc341 = loc(fused[#loc194, #loc195, #loc196, #loc187])
#loc342 = loc(fused[#loc202, #loc203])
#loc343 = loc(fused[#loc204, #loc205])
#loc344 = loc(fused[#loc206, #loc207])
#loc345 = loc(fused[#loc210, #loc208])
#loc346 = loc(fused[#loc211, #loc212])
#loc347 = loc(fused[#loc213, #loc214])
#loc348 = loc(fused[#loc218, #loc219])
#loc349 = loc(fused[#loc220, #loc221, #loc222, #loc214])
#loc350 = loc(fused[#loc225, #loc226])
#loc351 = loc(fused[#loc230, #loc229])
#loc352 = loc(fused[#loc233, #loc234])
#loc353 = loc(fused[#loc235, #loc236])
#loc355 = loc(fused[#loc239, #loc240])
#loc356 = loc(fused[#loc242, #loc243])
#loc357 = loc(fused[#loc245, #loc243])
#loc358 = loc(fused[#loc246, #loc247])
#loc359 = loc(fused[#loc248, #loc249])
#loc360 = loc(fused[#loc250, #loc251])
#loc361 = loc(fused[#loc252, #loc253, #loc254, #loc249])
#loc362 = loc(fused[#loc260, #loc261])
#loc363 = loc(fused[#loc262, #loc263])
#loc364 = loc(fused[#loc266, #loc264])
#loc365 = loc(fused[#loc268, #loc267])
#loc366 = loc(fused[#loc270, #loc269])
