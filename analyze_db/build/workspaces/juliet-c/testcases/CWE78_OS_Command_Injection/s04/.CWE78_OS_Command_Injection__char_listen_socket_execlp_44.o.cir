!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":65:21)
#loc12 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":65:28)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":168:25)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":168:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc233 = loc(fused[#loc11, #loc12])
#loc309 = loc(fused[#loc205, #loc206])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc229)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_execlp_44_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc230)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc233)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc16)
    %9 = cir.call @execlp(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc17)
    cir.return loc(#loc10)
  } loc(#loc232)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc236)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc239)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc240)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc241)
  cir.func private @close(!s32i) -> !s32i loc(#loc242)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execlp_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc245)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc230)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc41)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc245)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_execlp_44_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc230)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc230)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc248)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc249)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc250)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc251)
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc252)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc253)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc53)
      cir.store %15, %11 : !s32i, !cir.ptr<!s32i> loc(#loc251)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc55)
      cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc252)
      %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
      cir.store %20, %13 : !u64i, !cir.ptr<!u64i> loc(#loc253)
      cir.scope {
        cir.do {
          cir.scope {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc64)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %23 = cir.const #cir.int<6> : !s32i loc(#loc66)
            %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
            cir.store %24, %11 : !s32i, !cir.ptr<!s32i> loc(#loc256)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc73)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc73)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc258)
              cir.if %81 {
                cir.break loc(#loc75)
              } loc(#loc259)
            } loc(#loc257)
            %25 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc260)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc78)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc261)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc83)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc83)
            %30 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc263)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc86)
            %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc87)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc88)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc264)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc90)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc90)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc91)
            %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc265)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %79 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc267)
              %80 = cir.const #cir.int<16> : !u64i loc(#loc268)
              %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc268)
              %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc102)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc103)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc269)
              cir.if %85 {
                cir.break loc(#loc105)
              } loc(#loc270)
            } loc(#loc266)
            cir.scope {
              %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %79 = cir.const #cir.int<5> : !s32i loc(#loc109)
              %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc110)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc111)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc272)
              cir.if %83 {
                cir.break loc(#loc113)
              } loc(#loc273)
            } loc(#loc271)
            %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc115)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc116)
            %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc117)
            cir.store %42, %12 : !s32i, !cir.ptr<!s32i> loc(#loc274)
            cir.scope {
              %78 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc123)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc276)
              cir.if %81 {
                cir.break loc(#loc125)
              } loc(#loc277)
            } loc(#loc275)
            %43 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
            %45 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc128)
            %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc129)
            %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc278)
            %48 = cir.const #cir.int<1> : !u64i loc(#loc279)
            %49 = cir.const #cir.int<100> : !s32i loc(#loc134)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc134)
            %51 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc135)
            %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc280)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc136)
            %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc136)
            %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc281)
            %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc282)
            %57 = cir.const #cir.int<0> : !s32i loc(#loc138)
            %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
            %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc139)
            cir.store %59, %8 : !s32i, !cir.ptr<!s32i> loc(#loc283)
            cir.scope {
              %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %79 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc145)
              %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc285)
              %82 = cir.ternary(%81, true {
                %83 = cir.const #true loc(#loc146)
                cir.yield %83 : !cir.bool loc(#loc146)
              }, false {
                %83 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %84 = cir.const #cir.int<0> : !s32i loc(#loc148)
                %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc286)
                %86 = cir.ternary(%85, true {
                  %87 = cir.const #true loc(#loc146)
                  cir.yield %87 : !cir.bool loc(#loc146)
                }, false {
                  %87 = cir.const #false loc(#loc146)
                  cir.yield %87 : !cir.bool loc(#loc146)
                }) : (!cir.bool) -> !cir.bool loc(#loc146)
                cir.yield %86 : !cir.bool loc(#loc146)
              }) : (!cir.bool) -> !cir.bool loc(#loc146)
              cir.if %82 {
                cir.break loc(#loc150)
              } loc(#loc287)
            } loc(#loc284)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc151)
            %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc151)
            %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
            %63 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc153)
            %64 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc154)
            %66 = cir.const #cir.int<1> : !u64i loc(#loc288)
            %67 = cir.binop(div, %65, %66) : !u64i loc(#loc289)
            %68 = cir.binop(add, %63, %67) : !u64i loc(#loc290)
            %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc157)
            cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc291)
            %70 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc158)
            %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
            %72 = cir.const #cir.int<13> : !s32i loc(#loc160)
            %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc158)
            cir.store %73, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc292)
            cir.scope {
              %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
              cir.if %79 {
                %80 = cir.const #cir.int<0> : !s32i loc(#loc167)
                %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc167)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc295)
              } loc(#loc294)
            } loc(#loc293)
            %74 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc170)
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
            %76 = cir.const #cir.int<10> : !s32i loc(#loc172)
            %77 = cir.call @strchr(%75, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc170)
            cir.store %77, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
            cir.scope {
              %78 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
              %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc177)
              cir.if %79 {
                %80 = cir.const #cir.int<0> : !s32i loc(#loc179)
                %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc179)
                %82 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
                cir.store %81, %82 : !s8i, !cir.ptr<!s8i> loc(#loc299)
              } loc(#loc298)
            } loc(#loc297)
          } loc(#loc255)
          cir.yield loc(#loc61)
        } while {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc182)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc182)
          cir.condition(%22) loc(#loc182)
        } loc(#loc254)
      } loc(#loc254)
      cir.scope {
        %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc185)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc186)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc186)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc301)
        cir.if %24 {
          %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc188)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc189)
        } loc(#loc302)
      } loc(#loc300)
      cir.scope {
        %21 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc192)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc193)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc193)
        %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc304)
        cir.if %24 {
          %25 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc195)
          %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc196)
        } loc(#loc305)
      } loc(#loc303)
    } loc(#loc247)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc197)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc197)
    cir.return loc(#loc37)
  } loc(#loc243)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execlp_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc201)
    cir.return loc(#loc200)
  } loc(#loc306)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc205, #loc206])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc309)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc208)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc208)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc209)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc209)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc210)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc210)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc212)
    %9 = cir.call @execlp(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc213)
    cir.return loc(#loc204)
  } loc(#loc308)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc216)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc312)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc313)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc229)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc222)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc313)
    %4 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc229)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc229)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc223)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc225)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc216)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc216)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc225)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc227)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc227)
    cir.return loc(#loc218)
  } loc(#loc311)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":180:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":180:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":78:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":78:28)
#loc5 = loc("/usr/include/unistd.h":605:1)
#loc6 = loc("/usr/include/unistd.h":606:14)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":70:12)
#loc8 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":70:38)
#loc9 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":65:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":71:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":66:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":70:25)
#loc15 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":70:52)
#loc16 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":70:66)
#loc17 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":70:5)
#loc18 = loc("/usr/include/string.h":407:1)
#loc19 = loc("/usr/include/string.h":408:33)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc22 = loc("/usr/include/netinet/in.h":402:1)
#loc23 = loc("/usr/include/netinet/in.h":403:40)
#loc24 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc25 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc26 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc27 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc28 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc29 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc30 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc31 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc32 = loc("/usr/include/string.h":246:1)
#loc33 = loc("/usr/include/string.h":247:33)
#loc34 = loc("/usr/include/unistd.h":358:1)
#loc35 = loc("/usr/include/unistd.h":358:27)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":73:1)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":161:1)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":75:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":75:12)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":77:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":77:32)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":79:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":79:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":80:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":158:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":85:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":85:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":86:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":86:28)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":87:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":87:15)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":88:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":88:31)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":89:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":89:31)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":90:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":90:37)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":90:26)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":90:33)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":91:9)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":143:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":92:9)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":142:9)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":101:35)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":101:44)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":101:57)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":101:28)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":101:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":101:68)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":102:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":105:13)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":102:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":102:33)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":103:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":104:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:20)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:30)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:33)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:47)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:13)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":106:48)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":107:34)
#loc84 = loc("/usr/include/netinet/in.h":249:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":107:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":108:39)
#loc87 = loc("/usr/include/netinet/in.h":251:20)
#loc88 = loc("/usr/include/netinet/in.h":33:15)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":108:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":109:38)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":109:32)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":109:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":109:46)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":113:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:22)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:54)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:55)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:64)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:78)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":110:84)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":111:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":112:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":114:13)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":117:13)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":114:24)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":114:38)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":114:17)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":114:57)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":115:13)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":116:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":118:35)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":118:49)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":118:55)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":118:28)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":118:13)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":118:59)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":119:13)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":122:13)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":119:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":119:33)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":120:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":121:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:31)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:54)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:61)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:59)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:45)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:68)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:71)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:82)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:87)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:93)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:103)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:104)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:107)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:26)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:13)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":124:108)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":125:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":128:13)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":125:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":125:31)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":125:44)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":125:47)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":125:61)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":126:13)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":127:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:57)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:18)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:28)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:41)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:52)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":130:53)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":132:23)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":132:30)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":132:36)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":132:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":132:40)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":133:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":136:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":133:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":134:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":135:28)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":135:18)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":135:17)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":137:23)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":137:30)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":137:36)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":137:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":137:40)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":138:13)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":141:13)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":138:17)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":139:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":140:28)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":140:18)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":140:17)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":143:16)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":144:9)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":147:9)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":144:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":144:29)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":145:9)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":146:26)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":146:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":148:9)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":151:9)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":148:13)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":148:29)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":149:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":150:26)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":150:13)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":160:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":160:13)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":187:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":190:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":189:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":189:13)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":168:1)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":174:1)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":169:1)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":173:12)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":173:25)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":173:38)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":173:52)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":173:66)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":173:5)
#loc214 = loc("/usr/include/string.h":149:1)
#loc215 = loc("/usr/include/string.h":150:14)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":183:18)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":176:1)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":185:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":178:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":178:12)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":179:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":179:32)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":181:12)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":181:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":183:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":183:12)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":184:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_44.c":184:13)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc9, #loc10])
#loc234 = loc(fused[#loc18, #loc19])
#loc235 = loc(fused[#loc20, #loc21])
#loc236 = loc(fused[#loc22, #loc23])
#loc237 = loc(fused[#loc24, #loc25])
#loc238 = loc(fused[#loc26, #loc27])
#loc239 = loc(fused[#loc28, #loc29])
#loc240 = loc(fused[#loc30, #loc31])
#loc241 = loc(fused[#loc32, #loc33])
#loc242 = loc(fused[#loc34, #loc35])
#loc243 = loc(fused[#loc36, #loc37])
#loc244 = loc(fused[#loc38, #loc39])
#loc245 = loc(fused[#loc40, #loc41])
#loc246 = loc(fused[#loc43, #loc42])
#loc247 = loc(fused[#loc44, #loc45])
#loc248 = loc(fused[#loc46, #loc47])
#loc249 = loc(fused[#loc48, #loc49])
#loc250 = loc(fused[#loc50, #loc51])
#loc251 = loc(fused[#loc52, #loc53])
#loc252 = loc(fused[#loc54, #loc55])
#loc253 = loc(fused[#loc56, #loc57])
#loc254 = loc(fused[#loc60, #loc61])
#loc255 = loc(fused[#loc62, #loc63])
#loc256 = loc(fused[#loc68, #loc69])
#loc257 = loc(fused[#loc70, #loc71])
#loc258 = loc(fused[#loc72, #loc73])
#loc259 = loc(fused[#loc74, #loc71])
#loc260 = loc(fused[#loc76, #loc77])
#loc261 = loc(fused[#loc79, #loc80])
#loc262 = loc(fused[#loc81, #loc82])
#loc263 = loc(fused[#loc85, #loc83])
#loc264 = loc(fused[#loc89, #loc86])
#loc265 = loc(fused[#loc93, #loc94])
#loc266 = loc(fused[#loc95, #loc96])
#loc267 = loc(fused[#loc98, #loc99])
#loc268 = loc(fused[#loc100, #loc101])
#loc269 = loc(fused[#loc102, #loc103])
#loc270 = loc(fused[#loc104, #loc96])
#loc271 = loc(fused[#loc106, #loc107])
#loc272 = loc(fused[#loc110, #loc111])
#loc273 = loc(fused[#loc112, #loc107])
#loc274 = loc(fused[#loc118, #loc119])
#loc275 = loc(fused[#loc120, #loc121])
#loc276 = loc(fused[#loc122, #loc123])
#loc277 = loc(fused[#loc124, #loc121])
#loc278 = loc(fused[#loc130, #loc131])
#loc279 = loc(fused[#loc132, #loc133])
#loc280 = loc(fused[#loc134, #loc135])
#loc281 = loc(fused[#loc134, #loc136])
#loc282 = loc(fused[#loc132, #loc137])
#loc283 = loc(fused[#loc140, #loc141])
#loc284 = loc(fused[#loc142, #loc143])
#loc285 = loc(fused[#loc144, #loc145])
#loc286 = loc(fused[#loc147, #loc148])
#loc287 = loc(fused[#loc149, #loc143])
#loc288 = loc(fused[#loc155, #loc156])
#loc289 = loc(fused[#loc154, #loc156])
#loc290 = loc(fused[#loc153, #loc156])
#loc291 = loc(fused[#loc152, #loc151])
#loc292 = loc(fused[#loc161, #loc162])
#loc293 = loc(fused[#loc163, #loc164])
#loc294 = loc(fused[#loc166, #loc164])
#loc295 = loc(fused[#loc169, #loc167])
#loc296 = loc(fused[#loc173, #loc174])
#loc297 = loc(fused[#loc175, #loc176])
#loc298 = loc(fused[#loc178, #loc176])
#loc299 = loc(fused[#loc181, #loc179])
#loc300 = loc(fused[#loc183, #loc184])
#loc301 = loc(fused[#loc185, #loc186])
#loc302 = loc(fused[#loc187, #loc184])
#loc303 = loc(fused[#loc190, #loc191])
#loc304 = loc(fused[#loc192, #loc193])
#loc305 = loc(fused[#loc194, #loc191])
#loc306 = loc(fused[#loc199, #loc200])
#loc307 = loc(fused[#loc201, #loc202])
#loc308 = loc(fused[#loc203, #loc204])
#loc310 = loc(fused[#loc214, #loc215])
#loc311 = loc(fused[#loc217, #loc218])
#loc312 = loc(fused[#loc219, #loc220])
#loc313 = loc(fused[#loc221, #loc222])
#loc314 = loc(fused[#loc224, #loc223])
