!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":26:72)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":26:79)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":47:77)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":47:84)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":65:77)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":65:84)
#loc111 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc79, #loc80])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc107)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc109)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_badGlobal : !cir.ptr<!s32i> loc(#loc107)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc14)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc14)
      cir.if %6 {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
        %8 = cir.const #cir.int<50> : !s32i loc(#loc17)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc17)
        %10 = cir.const #cir.int<1> : !u64i loc(#loc114)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc115)
        %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
        cir.scope {
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
          %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc119)
          %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc26)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc30)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
          } loc(#loc120)
        } loc(#loc118)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc31)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc34)
        cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc121)
      } loc(#loc113)
    } loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc122)
  } loc(#loc110)
  cir.global "private"  external @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc123)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc41)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc44, #loc45])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc123)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc49)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc55)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc55)
        %10 = cir.const #cir.int<1> : !u64i loc(#loc129)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc130)
        %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
        cir.scope {
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
          %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc134)
          %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc64)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc67)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc68)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
          } loc(#loc135)
        } loc(#loc133)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc69)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc72)
        cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc136)
      } loc(#loc128)
    } loc(#loc127)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc137)
  } loc(#loc125)
  cir.global "private"  external @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc138)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc79, #loc80])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc78)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc138)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc84)
      cir.if %6 {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc87)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc87)
        %10 = cir.const #cir.int<1> : !u64i loc(#loc143)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc144)
        %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
        cir.scope {
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
          %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc148)
          %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc96)
          cir.if %23 {
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc100)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
          } loc(#loc149)
        } loc(#loc147)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc101)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc101)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc103)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc104)
        cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc150)
      } loc(#loc142)
    } loc(#loc141)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc151)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":24:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":27:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":28:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":28:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":31:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":31:31)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":31:34)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":31:45)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":31:46)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":31:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:37)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:21)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:18)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:27)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:28)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:34)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":32:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":33:19)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":33:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":33:14)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":33:15)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":35:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":35:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":43:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":43:12)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":52:19)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":47:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":62:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":48:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":49:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":60:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":49:8)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":50:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":53:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":55:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":52:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":57:24)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":57:31)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":57:35)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":57:46)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":57:47)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":57:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:37)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:21)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:28)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:34)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":58:33)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":59:19)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":59:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":59:14)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":59:15)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":61:12)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":61:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":44:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":44:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":65:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":75:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":66:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":67:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":73:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":67:8)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":68:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":70:24)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":70:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":70:35)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":70:46)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":70:47)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":70:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:9)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:37)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:21)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:18)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:27)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:28)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:34)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":71:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":72:19)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":72:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":72:14)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":72:15)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":74:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_22b.c":74:5)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc12, #loc13])
#loc113 = loc(fused[#loc15, #loc13])
#loc114 = loc(fused[#loc18, #loc19])
#loc115 = loc(fused[#loc17, #loc19])
#loc116 = loc(fused[#loc16, #loc20])
#loc117 = loc(fused[#loc21, #loc20])
#loc118 = loc(fused[#loc22, #loc23])
#loc119 = loc(fused[#loc24, #loc25])
#loc120 = loc(fused[#loc27, #loc23])
#loc121 = loc(fused[#loc32, #loc31])
#loc122 = loc(fused[#loc36, #loc35])
#loc123 = loc(fused[#loc37, #loc38])
#loc124 = loc(fused[#loc39, #loc40])
#loc125 = loc(fused[#loc42, #loc43])
#loc127 = loc(fused[#loc47, #loc48])
#loc128 = loc(fused[#loc50, #loc51, #loc52, #loc48])
#loc129 = loc(fused[#loc56, #loc57])
#loc130 = loc(fused[#loc55, #loc57])
#loc131 = loc(fused[#loc54, #loc58])
#loc132 = loc(fused[#loc59, #loc58])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc65, #loc61])
#loc136 = loc(fused[#loc70, #loc69])
#loc137 = loc(fused[#loc74, #loc73])
#loc138 = loc(fused[#loc75, #loc76])
#loc139 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc82, #loc83])
#loc142 = loc(fused[#loc85, #loc83])
#loc143 = loc(fused[#loc88, #loc89])
#loc144 = loc(fused[#loc87, #loc89])
#loc145 = loc(fused[#loc86, #loc90])
#loc146 = loc(fused[#loc91, #loc90])
#loc147 = loc(fused[#loc92, #loc93])
#loc148 = loc(fused[#loc94, #loc95])
#loc149 = loc(fused[#loc97, #loc93])
#loc150 = loc(fused[#loc102, #loc101])
#loc151 = loc(fused[#loc106, #loc105])
