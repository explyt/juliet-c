!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc187)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc188)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc189)
  cir.func private  @printLongLongLine(!s64i) loc(#loc190)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc193)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc195)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc189)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc189)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc20)
      } loc(#loc196)
    } loc(#loc194)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc198)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc24)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc201)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc31)
          %7 = cir.unary(inc, %6) : !s64i, !s64i loc(#loc31)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc202)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc30)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc201)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc33)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc34)
        } loc(#loc200)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc10)
  } loc(#loc191)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_preinc_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc203)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc47)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.return %2 : !s32i loc(#loc209)
  } loc(#loc208)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc210)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc57)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc213)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc215)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc61)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc61)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc64)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc217)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc217)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc64)
      } loc(#loc216)
    } loc(#loc214)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc219)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc70)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
      cir.if %4 {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc78)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc79)
          %7 = cir.cmp(lt, %5, %6) : !s64i, !s32i loc(#loc222)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc80)
          cir.if %8 {
            %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc224)
            %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
            %11 = cir.unary(inc, %10) : !s64i, !s64i loc(#loc86)
            cir.store %11, %0 : !s64i, !cir.ptr<!s64i> loc(#loc225)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc85)
            cir.store %12, %9 : !s64i, !cir.ptr<!s64i> loc(#loc224)
            %13 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc88)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc89)
          } else {
            %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc52)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc52)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          } loc(#loc223)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc54)
  } loc(#loc211)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %2 : !s32i loc(#loc227)
  } loc(#loc226)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc99)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc230)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc103)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc103)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc106)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc234)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc234)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc106)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc236)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc112)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc112)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc117)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc118)
          %7 = cir.cmp(lt, %5, %6) : !s64i, !s32i loc(#loc239)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc119)
          cir.if %8 {
            %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc241)
            %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc125)
            %11 = cir.unary(inc, %10) : !s64i, !s64i loc(#loc125)
            cir.store %11, %0 : !s64i, !cir.ptr<!s64i> loc(#loc242)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc124)
            cir.store %12, %9 : !s64i, !cir.ptr<!s64i> loc(#loc241)
            %13 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc127)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc128)
          } else {
            %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc129)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc129)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          } loc(#loc240)
        } loc(#loc238)
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc96)
  } loc(#loc228)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc135)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc245)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc247)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc139)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc139)
      cir.if %4 {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc145)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc146)
        %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc146)
        cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc249)
      } loc(#loc248)
    } loc(#loc246)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc150)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc150)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc254)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc157)
          %7 = cir.unary(inc, %6) : !s64i, !s64i loc(#loc157)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc255)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc156)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc254)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc159)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc160)
        } loc(#loc253)
      } loc(#loc252)
    } loc(#loc250)
    cir.return loc(#loc132)
  } loc(#loc243)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc165)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc258)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc260)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc169)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc169)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc172)
        %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc172)
        cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc262)
      } loc(#loc261)
    } loc(#loc259)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc264)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc176)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc176)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc267)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc183)
          %7 = cir.unary(inc, %6) : !s64i, !s64i loc(#loc183)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc268)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc182)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc267)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc185)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc186)
        } loc(#loc266)
      } loc(#loc265)
    } loc(#loc263)
    cir.return loc(#loc162)
  } loc(#loc256)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":43:24)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":43:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":36:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":54:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":38:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":38:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":39:12)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":39:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":40:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":44:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":40:8)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":40:26)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":41:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":43:9)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":43:17)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":45:5)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":53:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":45:8)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":45:26)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":46:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":47:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":52:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":50:13)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":50:30)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":49:13)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":49:15)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":51:31)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":51:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":164:1)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":170:1)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":166:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":166:14)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":167:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":167:14)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":168:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":168:14)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":169:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":169:14)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":24:1)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":27:1)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":26:12)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":26:5)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":73:19)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":86:23)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":61:1)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":89:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":63:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":63:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":64:12)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":64:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":65:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":69:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":65:8)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":65:26)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":66:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":68:9)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":68:17)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":68:24)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":68:28)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":70:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":88:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":70:8)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":70:27)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":71:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":74:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":76:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":73:9)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":78:9)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":87:9)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":78:13)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":78:20)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":78:18)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":79:9)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":83:9)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":85:9)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":81:13)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":81:30)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":80:13)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":80:15)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":82:31)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":82:13)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":86:13)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":29:1)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":32:1)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":31:12)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":31:5)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":92:1)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":115:1)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":94:5)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":94:13)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":95:12)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":95:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":96:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":100:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":96:8)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":96:26)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":97:5)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":99:9)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":99:17)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":99:24)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":99:28)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":101:5)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":114:5)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":101:8)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":101:26)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":102:5)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":104:9)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":113:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":104:13)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":104:20)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":104:18)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":105:9)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":109:9)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":111:9)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":107:13)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":107:30)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":106:13)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":106:15)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":108:31)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":108:13)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":112:23)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":112:13)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":118:1)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":141:1)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":120:5)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":120:13)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":121:12)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":121:5)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":122:5)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":131:5)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":122:8)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":122:27)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":123:5)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":126:5)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":128:5)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":125:19)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":125:9)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":130:16)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":130:9)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":132:5)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":140:5)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":132:8)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":132:26)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":133:5)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":134:9)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":139:9)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":137:13)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":137:30)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":136:13)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":136:15)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":138:31)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":138:13)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":144:1)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":162:1)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":146:5)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":146:13)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":147:12)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":147:5)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":148:5)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":152:5)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":148:8)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":148:26)
#loc171 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":149:5)
#loc172 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":151:16)
#loc173 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":151:9)
#loc174 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":153:5)
#loc175 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":161:5)
#loc176 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":153:8)
#loc177 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":153:26)
#loc178 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":154:5)
#loc179 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":155:9)
#loc180 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":160:9)
#loc181 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":158:13)
#loc182 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":158:30)
#loc183 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":157:13)
#loc184 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":157:15)
#loc185 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":159:31)
#loc186 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_08.c":159:13)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc14, #loc13])
#loc194 = loc(fused[#loc15, #loc16])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc19, #loc16])
#loc197 = loc(fused[#loc22, #loc23])
#loc198 = loc(fused[#loc24, #loc25])
#loc199 = loc(fused[#loc26, #loc23])
#loc200 = loc(fused[#loc27, #loc28])
#loc201 = loc(fused[#loc29, #loc30])
#loc202 = loc(fused[#loc31, #loc32])
#loc203 = loc(fused[#loc35, #loc36])
#loc204 = loc(fused[#loc37, #loc38])
#loc205 = loc(fused[#loc39, #loc40])
#loc206 = loc(fused[#loc41, #loc42])
#loc207 = loc(fused[#loc43, #loc44])
#loc208 = loc(fused[#loc45, #loc46])
#loc209 = loc(fused[#loc48, #loc47])
#loc210 = loc(fused[#loc49, #loc50])
#loc211 = loc(fused[#loc53, #loc54])
#loc212 = loc(fused[#loc55, #loc56])
#loc213 = loc(fused[#loc58, #loc57])
#loc214 = loc(fused[#loc59, #loc60])
#loc215 = loc(fused[#loc61, #loc62])
#loc216 = loc(fused[#loc63, #loc60])
#loc217 = loc(fused[#loc66, #loc67])
#loc218 = loc(fused[#loc68, #loc69])
#loc219 = loc(fused[#loc70, #loc71])
#loc220 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc221 = loc(fused[#loc76, #loc77])
#loc222 = loc(fused[#loc78, #loc79])
#loc223 = loc(fused[#loc81, #loc82, #loc83, #loc77])
#loc224 = loc(fused[#loc84, #loc85])
#loc225 = loc(fused[#loc86, #loc87])
#loc226 = loc(fused[#loc91, #loc92])
#loc227 = loc(fused[#loc94, #loc93])
#loc228 = loc(fused[#loc95, #loc96])
#loc229 = loc(fused[#loc97, #loc98])
#loc230 = loc(fused[#loc100, #loc99])
#loc231 = loc(fused[#loc101, #loc102])
#loc232 = loc(fused[#loc103, #loc104])
#loc233 = loc(fused[#loc105, #loc102])
#loc234 = loc(fused[#loc108, #loc109])
#loc235 = loc(fused[#loc110, #loc111])
#loc236 = loc(fused[#loc112, #loc113])
#loc237 = loc(fused[#loc114, #loc111])
#loc238 = loc(fused[#loc115, #loc116])
#loc239 = loc(fused[#loc117, #loc118])
#loc240 = loc(fused[#loc120, #loc121, #loc122, #loc116])
#loc241 = loc(fused[#loc123, #loc124])
#loc242 = loc(fused[#loc125, #loc126])
#loc243 = loc(fused[#loc131, #loc132])
#loc244 = loc(fused[#loc133, #loc134])
#loc245 = loc(fused[#loc136, #loc135])
#loc246 = loc(fused[#loc137, #loc138])
#loc247 = loc(fused[#loc139, #loc140])
#loc248 = loc(fused[#loc141, #loc142, #loc143, #loc138])
#loc249 = loc(fused[#loc147, #loc146])
#loc250 = loc(fused[#loc148, #loc149])
#loc251 = loc(fused[#loc150, #loc151])
#loc252 = loc(fused[#loc152, #loc149])
#loc253 = loc(fused[#loc153, #loc154])
#loc254 = loc(fused[#loc155, #loc156])
#loc255 = loc(fused[#loc157, #loc158])
#loc256 = loc(fused[#loc161, #loc162])
#loc257 = loc(fused[#loc163, #loc164])
#loc258 = loc(fused[#loc166, #loc165])
#loc259 = loc(fused[#loc167, #loc168])
#loc260 = loc(fused[#loc169, #loc170])
#loc261 = loc(fused[#loc171, #loc168])
#loc262 = loc(fused[#loc173, #loc172])
#loc263 = loc(fused[#loc174, #loc175])
#loc264 = loc(fused[#loc176, #loc177])
#loc265 = loc(fused[#loc178, #loc175])
#loc266 = loc(fused[#loc179, #loc180])
#loc267 = loc(fused[#loc181, #loc182])
#loc268 = loc(fused[#loc183, #loc184])
