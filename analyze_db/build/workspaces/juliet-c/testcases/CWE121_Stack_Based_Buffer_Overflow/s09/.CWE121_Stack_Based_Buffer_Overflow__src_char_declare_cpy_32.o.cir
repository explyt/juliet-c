!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s09/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc103)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc104)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc105)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc103)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc23)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc24)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc24)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc109)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc28)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc28)
      %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc30)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc32)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc110)
      %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    } loc(#loc107)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc115)
        %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc115)
        cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc115)
        %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc45)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %13 = cir.call @strcpy(%11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
        %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc49)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc6)
  } loc(#loc101)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc116)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc121)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc122)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc120)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc72)
      %11 = cir.const #cir.int<50> : !s32i loc(#loc73)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc74)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc73)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc73)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc77)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc77)
      %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc79)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc79)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc81)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc127)
      %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    } loc(#loc124)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc132)
        %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc132)
        cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc132)
        %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc94)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc95)
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %13 = cir.call @strcpy(%11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
        %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      } loc(#loc131)
    } loc(#loc129)
    cir.return loc(#loc55)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s09/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":46:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":26:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":27:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":28:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":29:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":29:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":31:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":31:24)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":31:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":33:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":33:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":33:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":33:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":33:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":33:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":34:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":34:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":34:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":34:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":34:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":35:21)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":35:10)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":35:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":37:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":45:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":38:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":38:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":38:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":39:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":44:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":40:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":40:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":42:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":42:20)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":42:26)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":43:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":43:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":78:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":81:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":80:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":80:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":53:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":76:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":55:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":55:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":56:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":56:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":57:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":57:25)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":58:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":58:24)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":59:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":59:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":60:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":66:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":61:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":61:24)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":61:23)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":63:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":63:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":63:27)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":63:30)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":63:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":63:31)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":64:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":64:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":64:14)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":64:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":64:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":65:21)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":65:10)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":65:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":67:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":75:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":68:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":68:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":68:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":69:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":74:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":70:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":70:29)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":72:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":72:20)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":72:26)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":73:23)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cpy_32.c":73:13)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc16, #loc15])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc19, #loc20])
#loc109 = loc(fused[#loc26, #loc27])
#loc110 = loc(fused[#loc29, #loc28])
#loc111 = loc(fused[#loc35, #loc33])
#loc112 = loc(fused[#loc36, #loc37])
#loc113 = loc(fused[#loc38, #loc39])
#loc114 = loc(fused[#loc41, #loc42])
#loc115 = loc(fused[#loc43, #loc44])
#loc116 = loc(fused[#loc50, #loc51])
#loc117 = loc(fused[#loc52, #loc53])
#loc118 = loc(fused[#loc54, #loc55])
#loc119 = loc(fused[#loc56, #loc57])
#loc120 = loc(fused[#loc58, #loc59])
#loc121 = loc(fused[#loc60, #loc61])
#loc122 = loc(fused[#loc62, #loc63])
#loc123 = loc(fused[#loc65, #loc64])
#loc124 = loc(fused[#loc66, #loc67])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc75, #loc76])
#loc127 = loc(fused[#loc78, #loc77])
#loc128 = loc(fused[#loc84, #loc82])
#loc129 = loc(fused[#loc85, #loc86])
#loc130 = loc(fused[#loc87, #loc88])
#loc131 = loc(fused[#loc90, #loc91])
#loc132 = loc(fused[#loc92, #loc93])
