!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":24:21)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":24:25)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":104:25)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":104:29)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":66:25)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":66:29)
#true = #cir.bool<true> : !cir.bool
#loc239 = loc(fused[#loc16, #loc17])
#loc269 = loc(fused[#loc89, #loc90])
#loc300 = loc(fused[#loc166, #loc167])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc233)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc234)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc235)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc236)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc237)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc239)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc241)
      %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc242)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc243)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc22)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc241)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc24)
      cir.store %6, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc242)
      %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
      cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
      %9 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc26)
      %10 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
      %13 = cir.call @fopen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc26)
      cir.store %13, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc244)
      cir.scope {
        %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc33)
        %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc246)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc34)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc37)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
        } loc(#loc247)
      } loc(#loc245)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc40)
        cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc249)
        cir.for : cond {
          %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc43)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !s32i loc(#loc250)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc44)
          cir.condition(%20) loc(#loc44)
        } body {
          cir.scope {
            cir.scope {
              %16 = cir.const #cir.int<50> : !u64i loc(#loc253)
              %17 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc50)
              %18 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
              %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
              %21 = cir.const #cir.int<1> : !u64i loc(#loc254)
              %22 = cir.const #cir.int<50> : !u64i loc(#loc255)
              %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
              %24 = cir.call @fwrite(%20, %21, %22, %23) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc50)
              %25 = cir.cmp(ne, %16, %24) : !u64i, !s32i loc(#loc256)
              %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc57)
              cir.if %26 {
                %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
                %28 = cir.const #cir.int<1> : !s32i loc(#loc60)
                cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
              } loc(#loc257)
            } loc(#loc252)
          } loc(#loc251)
          cir.yield loc(#loc39)
        } step {
          %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc62)
          cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc258)
          cir.yield loc(#loc248)
        } loc(#loc248)
      } loc(#loc248)
      cir.scope {
        %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
        %15 = cir.cast(ptr_to_bool, %14 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc65)
        cir.if %15 {
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
          %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc68)
        } loc(#loc260)
      } loc(#loc259)
    } loc(#loc240)
    cir.return loc(#loc15)
  } loc(#loc238)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc74)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc76)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc76)
    %7 = cir.ternary(%6, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc76)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc76)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc76)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc76)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc76)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc76)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc76)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc76)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc76)
      cir.yield %21 : !u32i loc(#loc76)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc76)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc76)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc76)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc76)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc76)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc76)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc76)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc76)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc76)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc76)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc76)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc76)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc76)
      cir.yield %25 : !u32i loc(#loc76)
    }) : (!cir.bool) -> !u32i loc(#loc76)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc76)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.call @badSink(%9) : (!s32i) -> () loc(#loc79)
    cir.return loc(#loc70)
  } loc(#loc261)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc265)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc86)
  cir.func internal private  @goodB2GSink(%arg0: !s32i loc(fused[#loc89, #loc90])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc269)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc271)
      %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc272)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc273)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc95)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc95)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc271)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc97)
      cir.store %6, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc272)
      %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
      cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
      cir.scope {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %11 = cir.cmp(gt, %9, %10) : !s32i, !s32i loc(#loc275)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc103)
        %13 = cir.ternary(%12, true {
          %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %15 = cir.const #cir.int<20> : !s32i loc(#loc106)
          %16 = cir.cmp(le, %14, %15) : !s32i, !s32i loc(#loc276)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc107)
          %18 = cir.ternary(%17, true {
            %19 = cir.const #true loc(#loc104)
            cir.yield %19 : !cir.bool loc(#loc104)
          }, false {
            %19 = cir.const #false loc(#loc104)
            cir.yield %19 : !cir.bool loc(#loc104)
          }) : (!cir.bool) -> !cir.bool loc(#loc104)
          cir.yield %18 : !cir.bool loc(#loc104)
        }, false {
          %14 = cir.const #false loc(#loc104)
          cir.yield %14 : !cir.bool loc(#loc104)
        }) : (!cir.bool) -> !cir.bool loc(#loc104)
        cir.if %13 {
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc109)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc109)
          cir.store %18, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc278)
          cir.scope {
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc117)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc280)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc118)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc121)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
            } loc(#loc281)
          } loc(#loc279)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc124)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc124)
            cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc283)
            cir.for : cond {
              %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc127)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !s32i loc(#loc284)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc128)
              cir.condition(%25) loc(#loc128)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc287)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc134)
                  %23 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc135)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc135)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc288)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc289)
                  %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc134)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !s32i loc(#loc290)
                  %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc142)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc144)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
                  } loc(#loc291)
                } loc(#loc286)
              } loc(#loc285)
              cir.yield loc(#loc123)
            } step {
              %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc145)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc146)
              cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc292)
              cir.yield loc(#loc282)
            } loc(#loc282)
          } loc(#loc282)
          cir.scope {
            %19 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc149)
            cir.if %20 {
              %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc151)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc152)
            } loc(#loc294)
          } loc(#loc293)
        } loc(#loc277)
      } loc(#loc274)
    } loc(#loc270)
    cir.return loc(#loc88)
  } loc(#loc268)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc296)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc160)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc160)
    %7 = cir.ternary(%6, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc160)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc160)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc160)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc160)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc160)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc160)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc160)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc160)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc160)
      cir.yield %21 : !u32i loc(#loc160)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc160)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc160)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc160)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc160)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc160)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc160)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc160)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc160)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc160)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc160)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc160)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc160)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc160)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc160)
      cir.yield %25 : !u32i loc(#loc160)
    }) : (!cir.bool) -> !u32i loc(#loc160)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc160)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.call @goodB2GSink(%9) : (!s32i) -> () loc(#loc163)
    cir.return loc(#loc154)
  } loc(#loc295)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc166, #loc167])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc300)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc302)
      %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc303)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc304)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc172)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc172)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc302)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc174)
      cir.store %6, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc303)
      %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc176)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc176)
      cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
      %9 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc177)
      %10 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc179)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc179)
      %13 = cir.call @fopen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc177)
      cir.store %13, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc305)
      cir.scope {
        %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc184)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc185)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc185)
        %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc307)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc186)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc188)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc189)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc188)
        } loc(#loc308)
      } loc(#loc306)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc192)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc192)
        cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc310)
        cir.for : cond {
          %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc194)
          %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc195)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !s32i loc(#loc311)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc196)
          cir.condition(%20) loc(#loc196)
        } body {
          cir.scope {
            cir.scope {
              %16 = cir.const #cir.int<50> : !u64i loc(#loc314)
              %17 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc202)
              %18 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc203)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc203)
              %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc203)
              %21 = cir.const #cir.int<1> : !u64i loc(#loc315)
              %22 = cir.const #cir.int<50> : !u64i loc(#loc316)
              %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc208)
              %24 = cir.call @fwrite(%20, %21, %22, %23) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc202)
              %25 = cir.cmp(ne, %16, %24) : !u64i, !s32i loc(#loc317)
              %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc210)
              cir.if %26 {
                %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc212)
                %28 = cir.const #cir.int<1> : !s32i loc(#loc213)
                cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc212)
              } loc(#loc318)
            } loc(#loc313)
          } loc(#loc312)
          cir.yield loc(#loc191)
        } step {
          %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc214)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc215)
          cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc319)
          cir.yield loc(#loc309)
        } loc(#loc309)
      } loc(#loc309)
      cir.scope {
        %14 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc218)
        %15 = cir.cast(ptr_to_bool, %14 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc218)
        cir.if %15 {
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc220)
          %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc221)
        } loc(#loc321)
      } loc(#loc320)
    } loc(#loc301)
    cir.return loc(#loc165)
  } loc(#loc299)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc227)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc229)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc232)
    cir.return loc(#loc223)
  } loc(#loc322)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":29:32)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":30:33)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:44)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":49:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":25:1)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":26:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":48:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":27:9)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":27:20)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":28:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":28:23)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":29:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":30:17)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":30:23)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":30:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":30:37)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":31:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":34:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":31:13)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":31:22)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":31:19)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":32:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":33:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":33:18)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":43:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:18)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:14)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:21)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:33)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:23)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":38:9)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":42:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:17)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:32)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:37)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:54)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:65)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:68)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:83)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:86)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:91)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":39:34)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":40:13)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":41:17)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":41:22)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:41)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":37:40)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":44:9)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":47:9)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":44:13)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":45:9)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":46:20)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":46:13)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":51:1)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":59:1)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":53:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":53:9)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":55:14)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":55:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":55:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":57:13)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":57:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":58:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":58:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":140:1)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":144:1)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":142:5)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":142:13)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":143:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":143:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":109:32)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":104:1)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":128:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":105:1)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":106:5)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":127:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":107:9)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":107:20)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":108:9)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":108:23)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":109:9)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":126:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:13)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:21)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:19)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:23)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:26)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:35)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":111:32)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":112:9)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":113:21)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":113:27)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":113:37)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":113:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":113:41)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":114:13)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":117:13)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":114:17)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":114:26)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":114:23)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":115:13)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":116:17)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":116:22)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:13)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":121:13)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:22)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:18)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:25)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:37)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:27)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":119:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:17)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:104)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:21)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:36)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:41)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:48)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:58)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:69)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:72)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:87)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:90)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:95)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:38)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:98)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":120:103)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:45)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":118:44)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":122:13)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":125:13)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":122:17)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":123:13)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":124:24)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":124:17)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":130:1)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":138:1)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":132:5)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":132:9)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":134:14)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":134:13)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":134:5)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":136:13)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":136:5)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":137:17)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":137:5)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":66:1)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":91:1)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":67:1)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":68:5)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":90:5)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":69:9)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":69:20)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":70:9)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":70:23)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":71:9)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":71:32)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":72:17)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":72:23)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":72:33)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":72:9)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":72:37)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":73:9)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":76:9)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":73:13)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":73:22)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":73:19)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":74:9)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":75:13)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":75:18)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:9)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":85:9)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:18)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:14)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:21)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:33)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:23)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":80:9)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:13)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":84:13)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:32)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:37)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:44)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:54)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:65)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:68)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:83)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:86)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:91)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":81:34)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":82:13)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":83:17)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":83:22)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:41)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":79:40)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":86:9)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":89:9)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":86:13)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":87:9)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":88:20)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":88:13)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":93:1)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":101:1)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":95:5)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":95:9)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":97:14)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":97:13)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":97:5)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":99:13)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":99:5)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":100:17)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_41.c":100:5)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc4, #loc5])
#loc235 = loc(fused[#loc7, #loc8])
#loc236 = loc(fused[#loc9, #loc10])
#loc237 = loc(fused[#loc12, #loc13])
#loc238 = loc(fused[#loc14, #loc15])
#loc240 = loc(fused[#loc19, #loc20])
#loc241 = loc(fused[#loc21, #loc22])
#loc242 = loc(fused[#loc23, #loc24])
#loc243 = loc(fused[#loc25, #loc3])
#loc244 = loc(fused[#loc28, #loc29])
#loc245 = loc(fused[#loc30, #loc31])
#loc246 = loc(fused[#loc32, #loc33])
#loc247 = loc(fused[#loc35, #loc31])
#loc248 = loc(fused[#loc38, #loc39])
#loc249 = loc(fused[#loc41, #loc40])
#loc250 = loc(fused[#loc42, #loc43])
#loc251 = loc(fused[#loc45, #loc39])
#loc252 = loc(fused[#loc46, #loc47])
#loc253 = loc(fused[#loc48, #loc49])
#loc254 = loc(fused[#loc51, #loc52])
#loc255 = loc(fused[#loc53, #loc54])
#loc256 = loc(fused[#loc48, #loc56])
#loc257 = loc(fused[#loc58, #loc47])
#loc258 = loc(fused[#loc62, #loc61])
#loc259 = loc(fused[#loc63, #loc64])
#loc260 = loc(fused[#loc66, #loc64])
#loc261 = loc(fused[#loc69, #loc70])
#loc262 = loc(fused[#loc71, #loc72])
#loc263 = loc(fused[#loc75, #loc73])
#loc264 = loc(fused[#loc77, #loc76])
#loc265 = loc(fused[#loc80, #loc81])
#loc266 = loc(fused[#loc82, #loc83])
#loc267 = loc(fused[#loc84, #loc85])
#loc268 = loc(fused[#loc87, #loc88])
#loc270 = loc(fused[#loc92, #loc93])
#loc271 = loc(fused[#loc94, #loc95])
#loc272 = loc(fused[#loc96, #loc97])
#loc273 = loc(fused[#loc98, #loc86])
#loc274 = loc(fused[#loc99, #loc100])
#loc275 = loc(fused[#loc101, #loc102])
#loc276 = loc(fused[#loc105, #loc106])
#loc277 = loc(fused[#loc108, #loc100])
#loc278 = loc(fused[#loc112, #loc113])
#loc279 = loc(fused[#loc114, #loc115])
#loc280 = loc(fused[#loc116, #loc117])
#loc281 = loc(fused[#loc119, #loc115])
#loc282 = loc(fused[#loc122, #loc123])
#loc283 = loc(fused[#loc125, #loc124])
#loc284 = loc(fused[#loc126, #loc127])
#loc285 = loc(fused[#loc129, #loc123])
#loc286 = loc(fused[#loc130, #loc131])
#loc287 = loc(fused[#loc132, #loc133])
#loc288 = loc(fused[#loc136, #loc137])
#loc289 = loc(fused[#loc138, #loc139])
#loc290 = loc(fused[#loc132, #loc141])
#loc291 = loc(fused[#loc143, #loc131])
#loc292 = loc(fused[#loc146, #loc145])
#loc293 = loc(fused[#loc147, #loc148])
#loc294 = loc(fused[#loc150, #loc148])
#loc295 = loc(fused[#loc153, #loc154])
#loc296 = loc(fused[#loc155, #loc156])
#loc297 = loc(fused[#loc159, #loc157])
#loc298 = loc(fused[#loc161, #loc160])
#loc299 = loc(fused[#loc164, #loc165])
#loc301 = loc(fused[#loc169, #loc170])
#loc302 = loc(fused[#loc171, #loc172])
#loc303 = loc(fused[#loc173, #loc174])
#loc304 = loc(fused[#loc175, #loc176])
#loc305 = loc(fused[#loc180, #loc181])
#loc306 = loc(fused[#loc182, #loc183])
#loc307 = loc(fused[#loc184, #loc185])
#loc308 = loc(fused[#loc187, #loc183])
#loc309 = loc(fused[#loc190, #loc191])
#loc310 = loc(fused[#loc193, #loc192])
#loc311 = loc(fused[#loc194, #loc195])
#loc312 = loc(fused[#loc197, #loc191])
#loc313 = loc(fused[#loc198, #loc199])
#loc314 = loc(fused[#loc200, #loc201])
#loc315 = loc(fused[#loc204, #loc205])
#loc316 = loc(fused[#loc206, #loc207])
#loc317 = loc(fused[#loc200, #loc209])
#loc318 = loc(fused[#loc211, #loc199])
#loc319 = loc(fused[#loc215, #loc214])
#loc320 = loc(fused[#loc216, #loc217])
#loc321 = loc(fused[#loc219, #loc217])
#loc322 = loc(fused[#loc222, #loc223])
#loc323 = loc(fused[#loc224, #loc225])
#loc324 = loc(fused[#loc228, #loc226])
#loc325 = loc(fused[#loc230, #loc229])
