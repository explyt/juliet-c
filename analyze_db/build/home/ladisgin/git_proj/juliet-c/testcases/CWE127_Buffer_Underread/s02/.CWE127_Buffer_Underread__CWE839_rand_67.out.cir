!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":27:55)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":27:106)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":50:59)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":50:110)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":69:59)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":69:110)
#true = #cir.bool<true> : !cir.bool
!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType = !cir.struct<struct "_CWE127_Buffer_Underread__CWE839_rand_67_structType" {!s32i}>
#loc82 = loc(fused[#loc8, #loc9])
#loc90 = loc(fused[#loc31, #loc32])
#loc98 = loc(fused[#loc55, #loc56])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc79)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_67b_badSink(%arg0: !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType, !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc82)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType, !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType> loc(#loc12)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType> -> !cir.ptr<!s32i> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc85)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc85)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc85)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc21)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc87)
        cir.if %8 {
          %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
          %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc26)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc26)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc27)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc28)
        } loc(#loc88)
      } loc(#loc86)
    } loc(#loc84)
    cir.return loc(#loc7)
  } loc(#loc81)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_67b_goodG2BSink(%arg0: !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType loc(fused[#loc31, #loc32])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType, !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType, !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType> loc(#loc35)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType> -> !cir.ptr<!s32i> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc93)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc93)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc93)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc43)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc95)
        cir.if %8 {
          %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
          %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc48)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc48)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc48)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc49)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc50)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
        } loc(#loc96)
      } loc(#loc94)
    } loc(#loc92)
    cir.return loc(#loc30)
  } loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc52)
  cir.func @CWE127_Buffer_Underread__CWE839_rand_67b_goodB2GSink(%arg0: !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType loc(fused[#loc55, #loc56])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType, !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc98)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !ty__CWE127_Buffer_Underread__CWE839_rand_67_structType, !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType> loc(#loc59)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE127_Buffer_Underread__CWE839_rand_67_structType> -> !cir.ptr<!s32i> loc(#loc13)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc101)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc101)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc101)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc67)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc103)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc70)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc104)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc68)
            cir.yield %14 : !cir.bool loc(#loc68)
          }, false {
            %14 = cir.const #false loc(#loc68)
            cir.yield %14 : !cir.bool loc(#loc68)
          }) : (!cir.bool) -> !cir.bool loc(#loc68)
          cir.yield %13 : !cir.bool loc(#loc68)
        }, false {
          %10 = cir.const #false loc(#loc68)
          cir.yield %10 : !cir.bool loc(#loc68)
        }) : (!cir.bool) -> !cir.bool loc(#loc68)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc76)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc76)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc77)
        } else {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc52)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc78)
        } loc(#loc105)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc54)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":40:23)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":27:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":43:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":29:5)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":29:25)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":28:1)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":22:9)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":30:5)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":42:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":31:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":31:30)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":34:9)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":41:9)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":34:13)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":34:20)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":35:9)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":37:9)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":39:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":36:33)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":36:26)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":36:13)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":40:13)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":50:1)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":66:1)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":52:5)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":52:25)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":51:1)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":53:5)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":65:5)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":54:9)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":54:30)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":57:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":64:9)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":57:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":57:20)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":58:9)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":60:9)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":62:9)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":59:33)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":59:26)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":59:13)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":63:23)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":63:13)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":81:23)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":69:1)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":84:1)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":71:5)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":71:25)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":70:1)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":72:5)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":83:5)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":73:9)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":73:30)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:9)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":82:9)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:13)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:21)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:23)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:26)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:34)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":75:36)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":76:9)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":78:9)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":80:9)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":77:33)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":77:26)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":77:13)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_rand_67b.c":81:13)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc6, #loc7])
#loc83 = loc(fused[#loc10, #loc11])
#loc84 = loc(fused[#loc14, #loc15])
#loc85 = loc(fused[#loc16, #loc17])
#loc86 = loc(fused[#loc18, #loc19])
#loc87 = loc(fused[#loc20, #loc21])
#loc88 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc89 = loc(fused[#loc29, #loc30])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc36, #loc37])
#loc93 = loc(fused[#loc38, #loc39])
#loc94 = loc(fused[#loc40, #loc41])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc44, #loc45, #loc46, #loc41])
#loc97 = loc(fused[#loc53, #loc54])
#loc99 = loc(fused[#loc57, #loc58])
#loc100 = loc(fused[#loc60, #loc61])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc64, #loc65])
#loc103 = loc(fused[#loc66, #loc67])
#loc104 = loc(fused[#loc69, #loc71])
#loc105 = loc(fused[#loc72, #loc73, #loc74, #loc65])
