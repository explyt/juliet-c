!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":125:10)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":125:14)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":125:20)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":125:32)
#loc255 = loc(fused[#loc84, #loc85])
#loc256 = loc(fused[#loc86, #loc87])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc222)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc223)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc224)
  cir.func private @printIntLine(!s32i) loc(#loc225)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc226)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc227)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc222)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %3 ^bb2, ^bb13 loc(#loc231)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc232)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc24)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc233)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc234)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc235)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc229)
    cir.br ^bb4 loc(#loc236)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc237)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc238)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<5> : !s32i loc(#loc35)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc42)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc43)
    %28 = cir.const #cir.int<130000> : !s32i loc(#loc44)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc44)
    %30 = cir.const #cir.int<4> : !u64i loc(#loc240)
    %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc241)
    %32 = cir.call @realloc(%27, %31) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc242)
    cir.store %33, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc243)
    cir.br ^bb8 loc(#loc244)
  ^bb8:  // pred: ^bb7
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc54)
    %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!s32i>, !cir.bool loc(#loc245)
    cir.brcond %37 ^bb9, ^bb10 loc(#loc246)
  ^bb9:  // pred: ^bb8
    %38 = cir.const #cir.int<10> : !s32i loc(#loc56)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc59)
    cir.store %38, %41 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc62)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc63)
    %46 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc64)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc65)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc52)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc18)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc18)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc14)
  } loc(#loc228)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc248)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc251)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc252)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_10_good() : () -> () loc(#loc93)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_10_bad() : () -> () loc(#loc97)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.return %17 : !s32i loc(#loc259)
  } loc(#loc254)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc263)
    cir.br ^bb1 loc(#loc264)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc260)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb14 loc(#loc115)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc266)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc120)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc121)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc267)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc268)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc269)
    cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc262)
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc271)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc272)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc131)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc125)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<5> : !s32i loc(#loc132)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc135)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc138)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc139)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc140)
    %31 = cir.const #cir.int<130000> : !s32i loc(#loc141)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc141)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc274)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc275)
    %35 = cir.call @realloc(%30, %34) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc276)
    cir.store %36, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc277)
    cir.br ^bb9 loc(#loc278)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc151)
    %40 = cir.cmp(ne, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc279)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc280)
  ^bb10:  // pred: ^bb9
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    cir.store %41, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc158)
    cir.store %42, %45 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc162)
    cir.br ^bb11 loc(#loc149)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb13 loc(#loc119)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc112)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc112)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc106)
  } loc(#loc261)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc285)
    cir.br ^bb1 loc(#loc286)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc222)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc173)
    cir.brcond %4 ^bb2, ^bb13 loc(#loc287)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc288)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc177)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc178)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc289)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc290)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc291)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc284)
    cir.br ^bb4 loc(#loc292)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc184)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc184)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc293)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc294)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc186)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc188)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc186)
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc182)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<5> : !s32i loc(#loc189)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc192)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc195)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc196)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc197)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc197)
    %29 = cir.const #cir.int<130000> : !s32i loc(#loc198)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc198)
    %31 = cir.const #cir.int<4> : !u64i loc(#loc296)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc297)
    %33 = cir.call @realloc(%28, %32) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc202)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc298)
    cir.store %34, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc299)
    cir.br ^bb8 loc(#loc300)
  ^bb8:  // pred: ^bb7
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc208)
    %38 = cir.cmp(ne, %35, %37) : !cir.ptr<!s32i>, !cir.bool loc(#loc301)
    cir.brcond %38 ^bb9, ^bb10 loc(#loc302)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
    cir.store %39, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc303)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc212)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc215)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc218)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc219)
    cir.br ^bb10 loc(#loc206)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc206)
  ^bb11:  // pred: ^bb10
    %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc220)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc220)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc221)
    cir.br ^bb12 loc(#loc176)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc172)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc172)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc166)
  } loc(#loc283)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":683:1)
#loc10 = loc("/usr/include/stdlib.h":684:14)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":24:1)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":45:1)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":29:13)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":29:55)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":26:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":44:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":26:8)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":27:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":28:9)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":43:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":29:33)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":29:40)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":29:44)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":29:54)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:13)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:41)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:17)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:25)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:31)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:32)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:38)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":30:37)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":32:23)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":32:13)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":32:18)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":32:19)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":33:26)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":33:31)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":33:32)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":33:13)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:35)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:42)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:50)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:60)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:41)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:27)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:61)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":35:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":36:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":42:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":36:17)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":36:25)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":37:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":39:27)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":39:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":39:22)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":39:23)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":40:30)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":40:35)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":40:36)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":40:17)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":41:17)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":41:22)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":110:1)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":114:1)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":112:5)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":112:11)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":113:5)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":113:11)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":130:15)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":132:15)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":135:15)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":137:15)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":125:1)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":140:1)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":126:1)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":128:27)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":128:22)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":128:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":130:5)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":131:5)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":131:52)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":132:5)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":135:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":136:5)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":136:51)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":137:5)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":139:12)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":139:5)
#loc102 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc103 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":57:19)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":52:1)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":81:1)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":62:13)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":62:55)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":64:13)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":64:19)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":54:5)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":80:5)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":54:8)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":55:5)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":58:5)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":60:5)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":57:9)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":61:9)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":79:9)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":62:33)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":62:40)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":62:44)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":62:54)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:13)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:41)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:17)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:25)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:31)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:32)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:38)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":63:37)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":66:23)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":66:13)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":66:18)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":66:19)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":67:26)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":67:31)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":67:32)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":67:13)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:38)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:45)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:53)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:63)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:44)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:30)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:64)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":68:13)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":71:13)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":77:13)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":71:17)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":71:28)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":72:13)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":73:24)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":73:17)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":75:27)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":75:17)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":75:22)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":75:23)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":76:30)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":76:35)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":76:36)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":76:17)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":78:18)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":78:13)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":84:1)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":108:1)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":89:13)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":89:55)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":91:13)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":91:19)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":86:5)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":107:5)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":86:8)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":87:5)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":88:9)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":106:9)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":89:33)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":89:40)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":89:44)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":89:54)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:13)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:41)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:17)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:25)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:31)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:32)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:38)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":90:37)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":93:23)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":93:13)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":93:18)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":93:19)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":94:26)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":94:31)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":94:32)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":94:13)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:38)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:45)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:53)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:63)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:44)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:30)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:64)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":95:13)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":98:13)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":104:13)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":98:17)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":98:28)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":99:13)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":100:24)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":100:17)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":102:27)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":102:17)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":102:22)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":102:23)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":103:30)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":103:35)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":103:36)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":103:17)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":105:18)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_int_10.c":105:13)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc9, #loc10])
#loc227 = loc(fused[#loc11, #loc12])
#loc228 = loc(fused[#loc13, #loc14])
#loc229 = loc(fused[#loc15, #loc16])
#loc230 = loc(fused[#loc17, #loc18])
#loc231 = loc(fused[#loc20, #loc18])
#loc232 = loc(fused[#loc21, #loc22])
#loc233 = loc(fused[#loc25, #loc26])
#loc234 = loc(fused[#loc24, #loc26])
#loc235 = loc(fused[#loc23, #loc16])
#loc236 = loc(fused[#loc27, #loc28])
#loc237 = loc(fused[#loc29, #loc30])
#loc238 = loc(fused[#loc31, #loc28])
#loc239 = loc(fused[#loc36, #loc35])
#loc240 = loc(fused[#loc45, #loc46])
#loc241 = loc(fused[#loc47, #loc46])
#loc242 = loc(fused[#loc48, #loc49])
#loc243 = loc(fused[#loc50, #loc49])
#loc244 = loc(fused[#loc51, #loc52])
#loc245 = loc(fused[#loc53, #loc54])
#loc246 = loc(fused[#loc55, #loc52])
#loc247 = loc(fused[#loc57, #loc56])
#loc248 = loc(fused[#loc66, #loc67])
#loc249 = loc(fused[#loc68, #loc69])
#loc250 = loc(fused[#loc70, #loc71])
#loc251 = loc(fused[#loc72, #loc73])
#loc252 = loc(fused[#loc74, #loc75])
#loc253 = loc(fused[#loc76, #loc77])
#loc254 = loc(fused[#loc82, #loc83])
#loc257 = loc(fused[#loc93, #loc94])
#loc258 = loc(fused[#loc97, #loc98])
#loc259 = loc(fused[#loc101, #loc100])
#loc260 = loc(fused[#loc102, #loc103])
#loc261 = loc(fused[#loc105, #loc106])
#loc262 = loc(fused[#loc107, #loc108])
#loc263 = loc(fused[#loc109, #loc110])
#loc264 = loc(fused[#loc111, #loc112])
#loc265 = loc(fused[#loc114, #loc115, #loc116, #loc112])
#loc266 = loc(fused[#loc118, #loc119])
#loc267 = loc(fused[#loc122, #loc123])
#loc268 = loc(fused[#loc121, #loc123])
#loc269 = loc(fused[#loc120, #loc108])
#loc270 = loc(fused[#loc124, #loc125])
#loc271 = loc(fused[#loc126, #loc127])
#loc272 = loc(fused[#loc128, #loc125])
#loc273 = loc(fused[#loc133, #loc132])
#loc274 = loc(fused[#loc142, #loc143])
#loc275 = loc(fused[#loc144, #loc143])
#loc276 = loc(fused[#loc145, #loc146])
#loc277 = loc(fused[#loc147, #loc146])
#loc278 = loc(fused[#loc148, #loc149])
#loc279 = loc(fused[#loc150, #loc151])
#loc280 = loc(fused[#loc152, #loc149])
#loc281 = loc(fused[#loc154, #loc153])
#loc282 = loc(fused[#loc156, #loc155])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc167, #loc168])
#loc285 = loc(fused[#loc169, #loc170])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc174, #loc172])
#loc288 = loc(fused[#loc175, #loc176])
#loc289 = loc(fused[#loc179, #loc180])
#loc290 = loc(fused[#loc178, #loc180])
#loc291 = loc(fused[#loc177, #loc168])
#loc292 = loc(fused[#loc181, #loc182])
#loc293 = loc(fused[#loc183, #loc184])
#loc294 = loc(fused[#loc185, #loc182])
#loc295 = loc(fused[#loc190, #loc189])
#loc296 = loc(fused[#loc199, #loc200])
#loc297 = loc(fused[#loc201, #loc200])
#loc298 = loc(fused[#loc202, #loc203])
#loc299 = loc(fused[#loc204, #loc203])
#loc300 = loc(fused[#loc205, #loc206])
#loc301 = loc(fused[#loc207, #loc208])
#loc302 = loc(fused[#loc209, #loc206])
#loc303 = loc(fused[#loc211, #loc210])
#loc304 = loc(fused[#loc213, #loc212])
