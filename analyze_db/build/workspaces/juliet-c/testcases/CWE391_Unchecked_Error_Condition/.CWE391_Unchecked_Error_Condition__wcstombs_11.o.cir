!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE391_Unchecked_Error_Condition/CWE391_Unchecked_Error_Condition__wcstombs_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc128)
  cir.func private @wcstombs(!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65535> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 2> {alignment = 4 : i64} loc(#loc5)
  cir.func private @printUnsignedLine(!u32i) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.func no_proto @CWE391_Unchecked_Error_Condition__wcstombs_11_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc134)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc134)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["bytesTranslated", init] {alignment = 8 : i64} loc(#loc137)
          %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["charString"] {alignment = 16 : i64} loc(#loc138)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc20)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
          cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc137)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc23)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc24)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc25)
          cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc139)
          %13 = cir.cast(bitcast, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 2>> loc(#loc5)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s32i x 2>>), !cir.ptr<!s32i> loc(#loc5)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc28)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc28)
          %18 = cir.call @wcstombs(%13, %15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc29)
          cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc141)
          %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %20 = cir.cast(integral, %19 : !u64i), !u32i loc(#loc32)
          cir.call @printUnsignedLine(%20) : (!u32i) -> () loc(#loc33)
          %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc35)
        } loc(#loc136)
      } loc(#loc135)
    } loc(#loc133)
    cir.return loc(#loc11)
  } loc(#loc132)
  cir.func no_proto @CWE391_Unchecked_Error_Condition__wcstombs_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc142)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func private @__errno_location() -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"wcstombs() failed\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc150)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc150)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc54)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc54)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["bytesTranslated", init] {alignment = 8 : i64} loc(#loc153)
          %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["charString"] {alignment = 16 : i64} loc(#loc154)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc63)
          cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc153)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc66)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc67)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc68)
          cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc155)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc69)
          %14 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc70)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc156)
          %15 = cir.cast(bitcast, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 2>> loc(#loc73)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s32i x 2>>), !cir.ptr<!s32i> loc(#loc73)
          %18 = cir.const #cir.int<100> : !s32i loc(#loc74)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc74)
          %20 = cir.call @wcstombs(%15, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc75)
          cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc158)
          cir.scope {
            %24 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc80)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %26 = cir.const #cir.int<84> : !s32i loc(#loc81)
            %27 = cir.cmp(eq, %25, %26) : !s32i, !cir.bool loc(#loc160)
            cir.if %27 {
              %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
              cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc83)
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc85)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
            } loc(#loc161)
          } loc(#loc159)
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc86)
          %22 = cir.cast(integral, %21 : !u64i), !u32i loc(#loc86)
          cir.call @printUnsignedLine(%22) : (!u32i) -> () loc(#loc87)
          %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc89)
        } loc(#loc152)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc51)
  } loc(#loc148)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc164)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc164)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc94)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc94)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["bytesTranslated", init] {alignment = 8 : i64} loc(#loc167)
          %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["charString"] {alignment = 16 : i64} loc(#loc168)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc100)
          cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc167)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc103)
          %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc103)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc105)
          cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc169)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %14 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc107)
          cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc170)
          %15 = cir.cast(bitcast, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 2>> loc(#loc110)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s32i x 2>>), !cir.ptr<!s32i> loc(#loc110)
          %18 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc111)
          %20 = cir.call @wcstombs(%15, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s32i>, !u64i) -> !u64i extra(#fn_attr) loc(#loc112)
          cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc172)
          cir.scope {
            %24 = cir.call @__errno_location() : () -> !cir.ptr<!s32i> side_effect(const) extra(#fn_attr) loc(#loc117)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %26 = cir.const #cir.int<84> : !s32i loc(#loc118)
            %27 = cir.cmp(eq, %25, %26) : !s32i, !cir.bool loc(#loc174)
            cir.if %27 {
              %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc120)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc120)
              cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc121)
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc122)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc123)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc175)
          } loc(#loc173)
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc124)
          %22 = cir.cast(integral, %21 : !u64i), !u32i loc(#loc124)
          cir.call @printUnsignedLine(%22) : (!u32i) -> () loc(#loc125)
          %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc127)
        } loc(#loc166)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc91)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE391_Unchecked_Error_Condition/CWE391_Unchecked_Error_Condition__wcstombs_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":1077:1)
#loc4 = loc("/usr/include/stdlib.h":1079:6)
#loc5 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:61)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":22:1)
#loc11 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":36:1)
#loc12 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":24:5)
#loc13 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":35:5)
#loc14 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":24:8)
#loc15 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":24:26)
#loc16 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":25:5)
#loc17 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":26:9)
#loc18 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":34:9)
#loc19 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":27:13)
#loc20 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":27:38)
#loc21 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":28:13)
#loc22 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":28:32)
#loc23 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":29:29)
#loc24 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":29:24)
#loc25 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":29:13)
#loc26 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:48)
#loc27 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:49)
#loc28 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:72)
#loc29 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:31)
#loc30 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:13)
#loc31 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":30:75)
#loc32 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":32:31)
#loc33 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":32:13)
#loc34 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":33:23)
#loc35 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":33:13)
#loc36 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":93:1)
#loc37 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":97:1)
#loc38 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":95:5)
#loc39 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":95:11)
#loc40 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":96:5)
#loc41 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":96:11)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc44 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":48:19)
#loc45 = loc("/usr/include/errno.h":37:1)
#loc46 = loc("/usr/include/errno.h":37:45)
#loc47 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":61:27)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":43:1)
#loc51 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":68:1)
#loc52 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":45:5)
#loc53 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":67:5)
#loc54 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":45:8)
#loc55 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":45:27)
#loc56 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":46:5)
#loc57 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":49:5)
#loc58 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":51:5)
#loc59 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":48:9)
#loc60 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":52:9)
#loc61 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":66:9)
#loc62 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":53:13)
#loc63 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":53:38)
#loc64 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":54:13)
#loc65 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":54:32)
#loc66 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":55:29)
#loc67 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":55:24)
#loc68 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":55:13)
#loc69 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":56:21)
#loc70 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":56:13)
#loc71 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:48)
#loc72 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:49)
#loc73 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:61)
#loc74 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:72)
#loc75 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:31)
#loc76 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:13)
#loc77 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":57:75)
#loc78 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":59:13)
#loc79 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":63:13)
#loc80 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":59:17)
#loc81 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":59:26)
#loc82 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":60:13)
#loc83 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":61:17)
#loc84 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":62:17)
#loc85 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":62:22)
#loc86 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":64:31)
#loc87 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":64:13)
#loc88 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":65:23)
#loc89 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":65:13)
#loc90 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":71:1)
#loc91 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":91:1)
#loc92 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":73:5)
#loc93 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":90:5)
#loc94 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":73:8)
#loc95 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":73:26)
#loc96 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":74:5)
#loc97 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":75:9)
#loc98 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":89:9)
#loc99 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":76:13)
#loc100 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":76:38)
#loc101 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":77:13)
#loc102 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":77:32)
#loc103 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":78:29)
#loc104 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":78:24)
#loc105 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":78:13)
#loc106 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":79:21)
#loc107 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":79:13)
#loc108 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:48)
#loc109 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:49)
#loc110 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:61)
#loc111 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:72)
#loc112 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:31)
#loc113 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:13)
#loc114 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":80:75)
#loc115 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":82:13)
#loc116 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":86:13)
#loc117 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":82:17)
#loc118 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":82:26)
#loc119 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":83:13)
#loc120 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":84:27)
#loc121 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":84:17)
#loc122 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":85:17)
#loc123 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":85:22)
#loc124 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":87:31)
#loc125 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":87:13)
#loc126 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":88:23)
#loc127 = loc("CWE391_Unchecked_Error_Condition__wcstombs_11.c":88:13)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc6, #loc7])
#loc131 = loc(fused[#loc8, #loc9])
#loc132 = loc(fused[#loc10, #loc11])
#loc133 = loc(fused[#loc12, #loc13])
#loc134 = loc(fused[#loc14, #loc15])
#loc135 = loc(fused[#loc16, #loc13])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc25, #loc23])
#loc140 = loc(fused[#loc26, #loc27])
#loc141 = loc(fused[#loc30, #loc31])
#loc142 = loc(fused[#loc36, #loc37])
#loc143 = loc(fused[#loc38, #loc39])
#loc144 = loc(fused[#loc40, #loc41])
#loc145 = loc(fused[#loc42, #loc43])
#loc146 = loc(fused[#loc45, #loc46])
#loc147 = loc(fused[#loc48, #loc49])
#loc148 = loc(fused[#loc50, #loc51])
#loc149 = loc(fused[#loc52, #loc53])
#loc150 = loc(fused[#loc54, #loc55])
#loc151 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc152 = loc(fused[#loc60, #loc61])
#loc153 = loc(fused[#loc62, #loc63])
#loc154 = loc(fused[#loc64, #loc65])
#loc155 = loc(fused[#loc68, #loc66])
#loc156 = loc(fused[#loc70, #loc69])
#loc157 = loc(fused[#loc71, #loc72])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc78, #loc79])
#loc160 = loc(fused[#loc80, #loc81])
#loc161 = loc(fused[#loc82, #loc79])
#loc162 = loc(fused[#loc90, #loc91])
#loc163 = loc(fused[#loc92, #loc93])
#loc164 = loc(fused[#loc94, #loc95])
#loc165 = loc(fused[#loc96, #loc93])
#loc166 = loc(fused[#loc97, #loc98])
#loc167 = loc(fused[#loc99, #loc100])
#loc168 = loc(fused[#loc101, #loc102])
#loc169 = loc(fused[#loc105, #loc103])
#loc170 = loc(fused[#loc107, #loc106])
#loc171 = loc(fused[#loc108, #loc109])
#loc172 = loc(fused[#loc113, #loc114])
#loc173 = loc(fused[#loc115, #loc116])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc119, #loc116])
