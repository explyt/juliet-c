!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_min_postdec_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc192)
  cir.func no_proto @CWE191_Integer_Underflow__short_min_postdec_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc194)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc195)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc12)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<32767> : !s32i loc(#loc18)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc18)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc18)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc18)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc198)
    cir.br ^bb6 loc(#loc20)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc25)
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc23)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc200)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc29)
    %14 = cir.unary(dec, %13) : !s16i, !s16i loc(#loc30)
    cir.store %14, %1 : !s16i, !cir.ptr<!s16i> loc(#loc201)
    %15 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc9)
    cir.store %15, %0 : !s16i, !cir.ptr<!s16i> loc(#loc194)
    %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc31)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc32)
    cir.br ^bb13 loc(#loc28)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc33)
  ^bb14:  // pred: ^bb9
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb15 loc(#loc36)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc24)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc7)
  } loc(#loc193)
  cir.func no_proto @CWE191_Integer_Underflow__short_min_postdec_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc205)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc206)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc208)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc209)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc54)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<32767> : !s32i loc(#loc60)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc60)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc60)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc60)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc212)
    cir.br ^bb6 loc(#loc62)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb6 loc(#loc65)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<8> : !s32i loc(#loc68)
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc66)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb18 loc(#loc72)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc214)
  ^bb13:  // pred: ^bb12
    %15 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc75)
    %16 = cir.cast(integral, %15 : !s16i), !s32i loc(#loc75)
    %17 = cir.const #cir.int<32767> : !s32i loc(#loc76)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc76)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc76)
    %21 = cir.cmp(gt, %16, %20) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %21 ^bb14, ^bb15 loc(#loc216)
  ^bb14:  // pred: ^bb13
    %22 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc80)
    %23 = cir.unary(dec, %22) : !s16i, !s16i loc(#loc81)
    cir.store %23, %1 : !s16i, !cir.ptr<!s16i> loc(#loc217)
    %24 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc51)
    cir.store %24, %0 : !s16i, !cir.ptr<!s16i> loc(#loc208)
    %25 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc82)
    %26 = cir.cast(integral, %25 : !s16i), !s32i loc(#loc82)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc83)
    cir.br ^bb16 loc(#loc78)
  ^bb15:  // pred: ^bb13
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc47)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb16 loc(#loc74)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc74)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc85)
  ^bb18:  // 2 preds: ^bb11, ^bb17
    cir.br ^bb19 loc(#loc67)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc49)
  } loc(#loc207)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc219)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc220)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc92)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc96)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc94)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<32767> : !s32i loc(#loc98)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc98)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc98)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc223)
    cir.br ^bb6 loc(#loc100)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc95)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc224)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc106)
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb17 [
      7: ^bb11
    ] loc(#loc104)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc225)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc110)
    %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc110)
    %15 = cir.const #cir.int<32767> : !s32i loc(#loc111)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc111)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc111)
    %19 = cir.cmp(gt, %14, %18) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %19 ^bb13, ^bb14 loc(#loc227)
  ^bb13:  // pred: ^bb12
    %20 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc115)
    %21 = cir.unary(dec, %20) : !s16i, !s16i loc(#loc116)
    cir.store %21, %1 : !s16i, !cir.ptr<!s16i> loc(#loc228)
    %22 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc89)
    cir.store %22, %0 : !s16i, !cir.ptr<!s16i> loc(#loc219)
    %23 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc117)
    %24 = cir.cast(integral, %23 : !s16i), !s32i loc(#loc117)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc118)
    cir.br ^bb15 loc(#loc113)
  ^bb14:  // pred: ^bb12
    %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc119)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb15 loc(#loc109)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc109)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc121)
  ^bb17:  // pred: ^bb9
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb18 loc(#loc124)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc105)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc87)
  } loc(#loc218)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc230)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc231)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc131)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc135)
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc133)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb6 loc(#loc139)
  ^bb5:  // pred: ^bb2
    %7 = cir.const #cir.int<2> : !s32i loc(#loc140)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc141)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc141)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc234)
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc134)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc235)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.int<7> : !s32i loc(#loc146)
    cir.br ^bb9 loc(#loc144)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %10 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc144)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc147)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc236)
  ^bb12:  // pred: ^bb11
    %11 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc150)
    %12 = cir.unary(dec, %11) : !s16i, !s16i loc(#loc151)
    cir.store %12, %1 : !s16i, !cir.ptr<!s16i> loc(#loc237)
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc128)
    cir.store %13, %0 : !s16i, !cir.ptr<!s16i> loc(#loc230)
    %14 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc152)
    %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc152)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc153)
    cir.br ^bb13 loc(#loc149)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc154)
  ^bb14:  // pred: ^bb9
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc155)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb15 loc(#loc157)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc126)
  } loc(#loc229)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc239)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc240)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc164)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc241)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc168)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc166)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<2> : !s32i loc(#loc170)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc171)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc171)
    cir.store %7, %1 : !s16i, !cir.ptr<!s16i> loc(#loc243)
    cir.br ^bb6 loc(#loc173)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc244)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.int<7> : !s32i loc(#loc179)
    cir.br ^bb9 loc(#loc177)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %10 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc177)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc180)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc245)
  ^bb12:  // pred: ^bb11
    %11 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc183)
    %12 = cir.unary(dec, %11) : !s16i, !s16i loc(#loc184)
    cir.store %12, %1 : !s16i, !cir.ptr<!s16i> loc(#loc246)
    %13 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc161)
    cir.store %13, %0 : !s16i, !cir.ptr<!s16i> loc(#loc239)
    %14 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc185)
    %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc185)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc186)
    cir.br ^bb13 loc(#loc182)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc187)
  ^bb14:  // pred: ^bb9
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.br ^bb15 loc(#loc190)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc178)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc159)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__short_min_postdec_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":34:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":22:1)
#loc7 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":52:1)
#loc8 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":43:9)
#loc9 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":43:24)
#loc10 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":24:11)
#loc12 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":25:12)
#loc13 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":25:5)
#loc14 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":36:5)
#loc16 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":26:12)
#loc17 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":28:5)
#loc18 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":30:16)
#loc19 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":30:9)
#loc20 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":31:9)
#loc21 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":34:9)
#loc22 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":35:9)
#loc23 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":37:5)
#loc24 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":51:5)
#loc25 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":37:12)
#loc26 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":39:5)
#loc27 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":40:5)
#loc28 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":45:5)
#loc29 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":42:13)
#loc30 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":42:9)
#loc31 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":44:22)
#loc32 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":44:9)
#loc33 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":46:5)
#loc34 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":49:19)
#loc35 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":49:9)
#loc36 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":50:9)
#loc37 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":200:1)
#loc38 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":206:1)
#loc39 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":202:5)
#loc40 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":202:14)
#loc41 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":203:5)
#loc42 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":203:14)
#loc43 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":204:5)
#loc44 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":204:14)
#loc45 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":205:5)
#loc46 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":205:14)
#loc47 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":90:23)
#loc48 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":59:1)
#loc49 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":94:1)
#loc50 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":85:13)
#loc51 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":85:28)
#loc52 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":61:5)
#loc53 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":61:11)
#loc54 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":62:12)
#loc55 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":62:5)
#loc56 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":63:5)
#loc57 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":73:5)
#loc58 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":63:12)
#loc59 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":65:5)
#loc60 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":67:16)
#loc61 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":67:9)
#loc62 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":68:9)
#loc63 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":71:19)
#loc64 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":71:9)
#loc65 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":72:9)
#loc66 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":74:5)
#loc67 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":93:5)
#loc68 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":74:12)
#loc69 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":76:5)
#loc70 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":78:19)
#loc71 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":78:9)
#loc72 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":79:9)
#loc73 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":82:9)
#loc74 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":91:9)
#loc75 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":82:13)
#loc76 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":82:20)
#loc77 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":83:9)
#loc78 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":87:9)
#loc79 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":89:9)
#loc80 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":84:17)
#loc81 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":84:13)
#loc82 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":86:26)
#loc83 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":86:13)
#loc84 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":90:13)
#loc85 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":92:9)
#loc86 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":97:1)
#loc87 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":132:1)
#loc88 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":119:13)
#loc89 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":119:28)
#loc90 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":99:5)
#loc91 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":99:11)
#loc92 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":100:12)
#loc93 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":100:5)
#loc94 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":101:5)
#loc95 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":111:5)
#loc96 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":101:12)
#loc97 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":103:5)
#loc98 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":105:16)
#loc99 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":105:9)
#loc100 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":106:9)
#loc101 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":109:19)
#loc102 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":109:9)
#loc103 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":110:9)
#loc104 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":112:5)
#loc105 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":131:5)
#loc106 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":112:12)
#loc107 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":114:5)
#loc108 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":116:9)
#loc109 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":125:9)
#loc110 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":116:13)
#loc111 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":116:20)
#loc112 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":117:9)
#loc113 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":121:9)
#loc114 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":123:9)
#loc115 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":118:17)
#loc116 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":118:13)
#loc117 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":120:26)
#loc118 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":120:13)
#loc119 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":124:23)
#loc120 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":124:13)
#loc121 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":126:9)
#loc122 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":129:19)
#loc123 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":129:9)
#loc124 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":130:9)
#loc125 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":135:1)
#loc126 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":165:1)
#loc127 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":156:9)
#loc128 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":156:24)
#loc129 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":137:5)
#loc130 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":137:11)
#loc131 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":138:12)
#loc132 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":138:5)
#loc133 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":139:5)
#loc134 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":149:5)
#loc135 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":139:12)
#loc136 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":141:5)
#loc137 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":143:19)
#loc138 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":143:9)
#loc139 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":144:9)
#loc140 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":147:17)
#loc141 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":147:16)
#loc142 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":147:9)
#loc143 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":148:9)
#loc144 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":150:5)
#loc145 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":164:5)
#loc146 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":150:12)
#loc147 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":152:5)
#loc148 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":153:5)
#loc149 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":158:5)
#loc150 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":155:13)
#loc151 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":155:9)
#loc152 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":157:22)
#loc153 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":157:9)
#loc154 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":159:5)
#loc155 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":162:19)
#loc156 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":162:9)
#loc157 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":163:9)
#loc158 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":168:1)
#loc159 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":198:1)
#loc160 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":189:9)
#loc161 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":189:24)
#loc162 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":170:5)
#loc163 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":170:11)
#loc164 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":171:12)
#loc165 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":171:5)
#loc166 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":172:5)
#loc167 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":182:5)
#loc168 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":172:12)
#loc169 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":174:5)
#loc170 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":176:17)
#loc171 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":176:16)
#loc172 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":176:9)
#loc173 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":177:9)
#loc174 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":180:19)
#loc175 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":180:9)
#loc176 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":181:9)
#loc177 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":183:5)
#loc178 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":197:5)
#loc179 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":183:12)
#loc180 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":185:5)
#loc181 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":186:5)
#loc182 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":191:5)
#loc183 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":188:13)
#loc184 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":188:9)
#loc185 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":190:22)
#loc186 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":190:9)
#loc187 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":192:5)
#loc188 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":195:19)
#loc189 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":195:9)
#loc190 = loc("CWE191_Integer_Underflow__short_min_postdec_15.c":196:9)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc4, #loc5])
#loc193 = loc(fused[#loc6, #loc7])
#loc194 = loc(fused[#loc8, #loc9])
#loc195 = loc(fused[#loc10, #loc11])
#loc196 = loc(fused[#loc13, #loc12])
#loc197 = loc(fused[#loc14, #loc15])
#loc198 = loc(fused[#loc19, #loc18])
#loc199 = loc(fused[#loc23, #loc24])
#loc200 = loc(fused[#loc27, #loc28])
#loc201 = loc(fused[#loc30, #loc29])
#loc202 = loc(fused[#loc37, #loc38])
#loc203 = loc(fused[#loc39, #loc40])
#loc204 = loc(fused[#loc41, #loc42])
#loc205 = loc(fused[#loc43, #loc44])
#loc206 = loc(fused[#loc45, #loc46])
#loc207 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc55, #loc54])
#loc211 = loc(fused[#loc56, #loc57])
#loc212 = loc(fused[#loc61, #loc60])
#loc213 = loc(fused[#loc66, #loc67])
#loc214 = loc(fused[#loc73, #loc74])
#loc215 = loc(fused[#loc75, #loc76])
#loc216 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc217 = loc(fused[#loc81, #loc80])
#loc218 = loc(fused[#loc86, #loc87])
#loc219 = loc(fused[#loc88, #loc89])
#loc220 = loc(fused[#loc90, #loc91])
#loc221 = loc(fused[#loc93, #loc92])
#loc222 = loc(fused[#loc94, #loc95])
#loc223 = loc(fused[#loc99, #loc98])
#loc224 = loc(fused[#loc104, #loc105])
#loc225 = loc(fused[#loc108, #loc109])
#loc226 = loc(fused[#loc110, #loc111])
#loc227 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc228 = loc(fused[#loc116, #loc115])
#loc229 = loc(fused[#loc125, #loc126])
#loc230 = loc(fused[#loc127, #loc128])
#loc231 = loc(fused[#loc129, #loc130])
#loc232 = loc(fused[#loc132, #loc131])
#loc233 = loc(fused[#loc133, #loc134])
#loc234 = loc(fused[#loc142, #loc140])
#loc235 = loc(fused[#loc144, #loc145])
#loc236 = loc(fused[#loc148, #loc149])
#loc237 = loc(fused[#loc151, #loc150])
#loc238 = loc(fused[#loc158, #loc159])
#loc239 = loc(fused[#loc160, #loc161])
#loc240 = loc(fused[#loc162, #loc163])
#loc241 = loc(fused[#loc165, #loc164])
#loc242 = loc(fused[#loc166, #loc167])
#loc243 = loc(fused[#loc172, #loc170])
#loc244 = loc(fused[#loc177, #loc178])
#loc245 = loc(fused[#loc181, #loc182])
#loc246 = loc(fused[#loc184, #loc183])
