!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":47:65)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":47:72)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":85:70)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":85:77)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":101:70)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":101:77)
#loc115 = loc(fused[#loc18, #loc19])
#loc138 = loc(fused[#loc78, #loc79])
#loc144 = loc(fused[#loc96, #loc97])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE78_OS_Command_Injection__char_file_execl_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc108)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc109)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc110)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc7)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc8)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc111)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc113)
  cir.func  @CWE78_OS_Command_Injection__char_file_execl_22_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc18, #loc19])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
    cir.scope {
      %4 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_22_badGlobal : !cir.ptr<!s32i> loc(#loc108)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc119)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc120)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc119)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc35)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
            %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc122)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc37)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !s32i loc(#loc123)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc38)
            cir.if %19 {
              %20 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc7)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc7)
              %23 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc8)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc8)
              %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
              cir.store %25, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc125)
              cir.scope {
                %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc46)
                %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc127)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc47)
                cir.if %30 {
                  cir.scope {
                    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
                    %34 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc53)
                    %36 = cir.const #cir.int<100> : !s32i loc(#loc54)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc54)
                    %38 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc55)
                    %39 = cir.binop(sub, %37, %38) : !u64i loc(#loc130)
                    %40 = cir.cast(integral, %39 : !u64i), !s32i loc(#loc130)
                    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
                    %42 = cir.call @fgets(%35, %40, %41) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc57)
                    %43 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
                    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
                    %45 = cir.cmp(eq, %42, %44) : !cir.ptr<!s8i>, !s32i loc(#loc131)
                    %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc59)
                    cir.if %46 {
                      %47 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                      cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc61)
                      %49 = cir.const #cir.int<0> : !s32i loc(#loc62)
                      %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc62)
                      %51 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                      %52 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                      %53 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                      cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc133)
                    } loc(#loc132)
                  } loc(#loc129)
                  %31 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
                  %32 = cir.call @fclose(%31) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc67)
                } loc(#loc128)
              } loc(#loc126)
            } loc(#loc124)
          } loc(#loc121)
        } loc(#loc118)
      } loc(#loc117)
    } loc(#loc116)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc134)
  } loc(#loc114)
  cir.global "private"  external @CWE78_OS_Command_Injection__char_file_execl_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc72)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc75)
  cir.func  @CWE78_OS_Command_Injection__char_file_execl_22_goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc78, #loc79])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc77)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.scope {
      %4 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc135)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc83)
      cir.if %6 {
        %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc88)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc75)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc75)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc88)
      } loc(#loc140)
    } loc(#loc139)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc141)
  } loc(#loc137)
  cir.global "private"  external @CWE78_OS_Command_Injection__char_file_execl_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc142)
  cir.func  @CWE78_OS_Command_Injection__char_file_execl_22_goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc96, #loc97])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc95)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.scope {
      %4 = cir.get_global @CWE78_OS_Command_Injection__char_file_execl_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc142)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc101)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc105)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc105)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
      } loc(#loc146)
    } loc(#loc145)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc147)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_22b.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":45:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":45:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":264:1)
#loc6 = loc("/usr/include/stdio.h":266:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":58:31)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":58:41)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":64:35)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":47:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":74:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":48:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":49:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":72:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":49:8)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":50:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":51:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":71:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":53:13)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":53:41)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":54:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":54:20)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":53:30)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":53:37)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":56:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":70:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":56:17)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":56:21)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":56:31)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":56:29)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":57:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":58:25)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":58:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":58:44)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":59:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":69:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":59:21)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":59:30)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":59:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":60:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:21)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":67:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:31)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:36)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:35)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:51)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:55)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:65)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:25)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:75)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":62:72)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":63:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":64:25)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":66:41)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":66:25)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":66:30)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":66:37)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":68:28)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":68:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":73:12)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":73:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":81:1)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":81:12)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":90:19)
#loc73 = loc("/usr/include/string.h":149:1)
#loc74 = loc("/usr/include/string.h":150:14)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":95:22)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":85:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":98:1)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":86:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":87:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":96:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":87:8)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":88:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":91:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":93:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":90:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":95:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":95:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":97:12)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":97:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":82:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":82:12)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":101:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":109:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":102:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":103:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":107:5)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":103:8)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":104:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":106:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":106:16)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":106:22)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":108:12)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_22b.c":108:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc16, #loc17])
#loc116 = loc(fused[#loc21, #loc22])
#loc117 = loc(fused[#loc24, #loc22])
#loc118 = loc(fused[#loc25, #loc26])
#loc119 = loc(fused[#loc27, #loc28])
#loc120 = loc(fused[#loc29, #loc30])
#loc121 = loc(fused[#loc33, #loc34])
#loc122 = loc(fused[#loc35, #loc36])
#loc123 = loc(fused[#loc35, #loc37])
#loc124 = loc(fused[#loc39, #loc34])
#loc125 = loc(fused[#loc41, #loc42])
#loc126 = loc(fused[#loc43, #loc44])
#loc127 = loc(fused[#loc45, #loc46])
#loc128 = loc(fused[#loc48, #loc44])
#loc129 = loc(fused[#loc49, #loc50])
#loc130 = loc(fused[#loc54, #loc55])
#loc131 = loc(fused[#loc57, #loc58])
#loc132 = loc(fused[#loc60, #loc50])
#loc133 = loc(fused[#loc63, #loc62])
#loc134 = loc(fused[#loc69, #loc68])
#loc135 = loc(fused[#loc70, #loc71])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc76, #loc77])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc141 = loc(fused[#loc91, #loc90])
#loc142 = loc(fused[#loc92, #loc93])
#loc143 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc99, #loc100])
#loc146 = loc(fused[#loc102, #loc100])
#loc147 = loc(fused[#loc107, #loc106])
