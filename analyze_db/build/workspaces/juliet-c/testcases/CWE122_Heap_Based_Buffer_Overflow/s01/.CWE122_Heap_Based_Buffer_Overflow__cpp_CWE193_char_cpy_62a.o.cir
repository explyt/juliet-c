!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc46)
  cir.global "private" constant cir_private @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_623badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc47)
  cir.func private @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc48)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc50)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc52)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    cir.call @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc17)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc47)
      %3 = cir.get_global @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_623badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc47)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc47)
      %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc20)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc22)
      %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc20)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc24)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.delete.array %9 : <!s8i> loc(#loc25)
    } loc(#loc54)
    cir.return loc(#loc12)
  } loc(#loc51)
  cir.func private @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc55)
  cir.func internal private @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc57)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    cir.call @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc34)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc46)
      %3 = cir.get_global @__const._ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc46)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc46)
      %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc37)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc39)
      %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.delete.array %9 : <!s8i> loc(#loc42)
    } loc(#loc59)
    cir.return loc(#loc29)
  } loc(#loc56)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62L7goodG2BEv() : () -> () loc(#loc45)
    cir.return loc(#loc44)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":61:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":61:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":40:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":40:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":32:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":32:28)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":34:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":46:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":36:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":36:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":37:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":37:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":38:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":39:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":45:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":42:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":42:16)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":42:22)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":43:19)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":43:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":44:19)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":53:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":53:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":55:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":67:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":57:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":57:12)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":58:12)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":58:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":59:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":60:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":66:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":63:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":63:16)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":63:22)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":64:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":64:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":65:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":69:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":72:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_cpy_62a.cpp":71:5)
#loc46 = loc(fused[#loc1, #loc2])
#loc47 = loc(fused[#loc3, #loc4])
#loc48 = loc(fused[#loc5, #loc6])
#loc49 = loc(fused[#loc7, #loc8])
#loc50 = loc(fused[#loc9, #loc10])
#loc51 = loc(fused[#loc11, #loc12])
#loc52 = loc(fused[#loc13, #loc14])
#loc53 = loc(fused[#loc16, #loc15])
#loc54 = loc(fused[#loc18, #loc19])
#loc55 = loc(fused[#loc26, #loc27])
#loc56 = loc(fused[#loc28, #loc29])
#loc57 = loc(fused[#loc30, #loc31])
#loc58 = loc(fused[#loc33, #loc32])
#loc59 = loc(fused[#loc35, #loc36])
#loc60 = loc(fused[#loc43, #loc44])
