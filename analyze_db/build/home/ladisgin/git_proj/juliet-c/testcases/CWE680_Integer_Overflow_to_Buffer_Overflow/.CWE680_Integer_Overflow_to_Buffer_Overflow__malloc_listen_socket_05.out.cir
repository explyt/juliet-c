!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:48)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":222:10)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":222:14)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":222:20)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":222:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc425 = loc(fused[#loc211, #loc212])
#loc426 = loc(fused[#loc213, #loc214])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc341)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc343)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc344)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc346)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc347)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc348)
  cir.func private @close(!s32i) -> !s32i loc(#loc349)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc350)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc351)
  cir.func private @printIntLine(!s32i) loc(#loc352)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc353)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc356)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc357)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc358)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc359)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc360)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc361)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc362)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc46)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb1 loc(#loc364)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc341)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %12 ^bb2, ^bb46 loc(#loc365)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc366)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc34)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc36)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb4 loc(#loc367)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc367)
  ^bb5:  // pred: ^bb34
    %17 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %18 ^bb6, ^bb35 loc(#loc56)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc59)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb7 loc(#loc369)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc66)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc371)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc68)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc64)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc372)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc373)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc374)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc76)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc375)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc79)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc376)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc83)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc83)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc377)
    cir.br ^bb11 loc(#loc378)
  ^bb11:  // pred: ^bb10
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc379)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc380)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc380)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc95)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc96)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %48 ^bb12, ^bb13 loc(#loc382)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc98)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc89)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc383)
  ^bb15:  // pred: ^bb14
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc103)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc104)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %54 ^bb16, ^bb17 loc(#loc385)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc106)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc100)
  ^bb18:  // pred: ^bb17
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc108)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc109)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
    cir.store %58, %3 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb19 loc(#loc387)
  ^bb19:  // pred: ^bb18
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc116)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %62 ^bb20, ^bb21 loc(#loc389)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc118)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc114)
  ^bb22:  // pred: ^bb21
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %64 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %66 = cir.const #cir.int<3> : !s32i loc(#loc121)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc121)
    %68 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc121)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc121)
    %72 = cir.binop(add, %69, %71) : !u64i loc(#loc121)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc122)
    %75 = cir.binop(sub, %72, %74) : !u64i loc(#loc390)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %77 = cir.call @recv(%63, %65, %75, %76) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc124)
    %78 = cir.cast(integral, %77 : !s64i), !s32i loc(#loc124)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb23 loc(#loc392)
  ^bb23:  // pred: ^bb22
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc130)
    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc131)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc131)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc131)
  ^bb25:  // pred: ^bb23
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc394)
    cir.brcond %86 ^bb26, ^bb27 loc(#loc131)
  ^bb26:  // pred: ^bb25
    %87 = cir.const #true loc(#loc131)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc131)
  ^bb27:  // pred: ^bb25
    %88 = cir.const #false loc(#loc131)
    cir.br ^bb28(%88 : !cir.bool) loc(#loc131)
  ^bb28(%89: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc131)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%89 : !cir.bool) loc(#loc131)
  ^bb30(%90: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc131)
  ^bb31:  // pred: ^bb30
    cir.brcond %90 ^bb32, ^bb33 loc(#loc395)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc135)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc128)
  ^bb34:  // pred: ^bb33
    %91 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %92 = cir.cast(integral, %91 : !s32i), !s8i loc(#loc136)
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
    %95 = cir.ptr_stride(%94 : !cir.ptr<!s8i>, %93 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %92, %95 : !s8i, !cir.ptr<!s8i> loc(#loc396)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
    %97 = cir.call @atoi(%96) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc140)
    cir.store %97, %7 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb5 loc(#loc55)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc55)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc398)
  ^bb37:  // pred: ^bb36
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %100 = cir.unary(minus, %99) : !s32i, !s32i loc(#loc146)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc399)
    cir.brcond %101 ^bb38, ^bb39 loc(#loc400)
  ^bb38:  // pred: ^bb37
    %102 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc149)
    cir.br ^bb39 loc(#loc144)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc144)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc401)
  ^bb41:  // pred: ^bb40
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc153)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %107 ^bb42, ^bb43 loc(#loc403)
  ^bb42:  // pred: ^bb41
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc156)
    cir.br ^bb43 loc(#loc151)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc151)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc53)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc49)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc49)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc404)
  ^bb48:  // pred: ^bb47
    %110 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
    %111 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %112 = cir.cast(integral, %111 : !s32i), !u64i loc(#loc160)
    %113 = cir.const #cir.int<4> : !u64i loc(#loc405)
    %114 = cir.binop(mul, %112, %113) : !u64i loc(#loc406)
    %115 = cir.call @malloc(%114) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
    %116 = cir.cast(bitcast, %115 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc407)
    cir.store %116, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc408)
    cir.br ^bb49 loc(#loc409)
  ^bb49:  // pred: ^bb48
    %117 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
    %118 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
    %119 = cir.cast(bitcast, %118 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
    %120 = cir.cmp(eq, %117, %119) : !cir.ptr<!s32i>, !cir.bool loc(#loc410)
    cir.brcond %120 ^bb50, ^bb51 loc(#loc411)
  ^bb50:  // pred: ^bb49
    %121 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
    %122 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %123 = cir.unary(minus, %122) : !s32i, !s32i loc(#loc172)
    cir.call @exit(%123) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
    cir.br ^bb51 loc(#loc166)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc166)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc412)
  ^bb53:  // pred: ^bb52
    %124 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %125 = cir.cast(integral, %124 : !s32i), !u64i loc(#loc175)
    cir.store %125, %5 : !u64i, !cir.ptr<!u64i> loc(#loc413)
    cir.br ^bb54 loc(#loc412)
  ^bb54:  // 2 preds: ^bb53, ^bb58
    %126 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %127 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %128 = cir.cast(integral, %127 : !s32i), !u64i loc(#loc178)
    %129 = cir.cmp(lt, %126, %128) : !u64i, !cir.bool loc(#loc414)
    cir.brcond %129 ^bb55, ^bb59 loc(#loc179)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc415)
  ^bb56:  // pred: ^bb55
    %130 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %131 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    %132 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc183)
    %133 = cir.ptr_stride(%131 : !cir.ptr<!s32i>, %132 : !u64i), !cir.ptr<!s32i> loc(#loc184)
    cir.store %130, %133 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    cir.br ^bb57 loc(#loc174)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc174)
  ^bb58:  // pred: ^bb57
    %134 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %135 = cir.unary(inc, %134) : !u64i, !u64i loc(#loc186)
    cir.store %135, %5 : !u64i, !cir.ptr<!u64i> loc(#loc417)
    cir.br ^bb54 loc(#loc412)
  ^bb59:  // pred: ^bb54
    cir.br ^bb60 loc(#loc174)
  ^bb60:  // pred: ^bb59
    %136 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %137 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %138 = cir.ptr_stride(%136 : !cir.ptr<!s32i>, %137 : !s32i), !cir.ptr<!s32i> loc(#loc189)
    %139 = cir.load %138 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.call @printIntLine(%139) : (!s32i) -> () loc(#loc190)
    %140 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
    %141 = cir.cast(bitcast, %140 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc191)
    cir.call @free(%141) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    cir.br ^bb61 loc(#loc158)
  ^bb61:  // pred: ^bb60
    cir.return loc(#loc28)
  } loc(#loc354)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc419)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc195)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc420)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc197)
    cir.return loc(#loc194)
  } loc(#loc418)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc421)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc422)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc423)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc208)
  cir.func @main(%arg0: !s32i loc(fused[#loc211, #loc212]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc213, #loc214])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc425)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc426)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc210)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc215)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc216)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc217)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc217)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc218)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc205)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc427)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05_good() : () -> () loc(#loc220)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc206)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc207)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc428)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05_bad() : () -> () loc(#loc224)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc208)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc227)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc429)
    cir.return %17 : !s32i loc(#loc429)
  } loc(#loc424)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc430)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc231)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc432)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc433)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc434)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc241)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.br ^bb1 loc(#loc436)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc430)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc245)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc437)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc231)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc231)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc249)
    cir.br ^bb4 loc(#loc247)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc250)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb4 loc(#loc244)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc244)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc439)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc254)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc255)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc440)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc441)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc254)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc442)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc443)
    cir.br ^bb7 loc(#loc444)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc263)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc263)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc445)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc446)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc265)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc267)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc265)
    cir.br ^bb9 loc(#loc261)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc261)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc447)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc270)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc270)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc448)
    cir.br ^bb12 loc(#loc447)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc272)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc273)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc449)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc274)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc450)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc277)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc278)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc279)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.br ^bb15 loc(#loc269)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc269)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc280)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc281)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc452)
    cir.br ^bb12 loc(#loc447)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc269)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc282)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc283)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc284)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc285)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc286)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc286)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc287)
    cir.br ^bb19 loc(#loc253)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc233)
  } loc(#loc431)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc454)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc455)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc456)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc297)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc457)
    cir.br ^bb1 loc(#loc458)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc341)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc301)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc459)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc303)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    cir.br ^bb3 loc(#loc300)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc300)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc461)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc307)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc308)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc462)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc463)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc307)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc464)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc465)
    cir.br ^bb6 loc(#loc466)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc315)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc316)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc316)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc467)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc468)
  ^bb7:  // pred: ^bb6
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc318)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc319)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc320)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc318)
    cir.br ^bb8 loc(#loc314)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc314)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc469)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #cir.int<0> : !s32i loc(#loc323)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc323)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc470)
    cir.br ^bb11 loc(#loc469)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc325)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc326)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc471)
    cir.brcond %28 ^bb12, ^bb16 loc(#loc327)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc472)
  ^bb13:  // pred: ^bb12
    %29 = cir.const #cir.int<0> : !s32i loc(#loc329)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc330)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc331)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc332)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc473)
    cir.br ^bb14 loc(#loc322)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc322)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc333)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc334)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc474)
    cir.br ^bb11 loc(#loc469)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc322)
  ^bb17:  // pred: ^bb16
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc335)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc336)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc337)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc338)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc339)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc339)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc340)
    cir.br ^bb18 loc(#loc306)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc289)
  } loc(#loc453)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":45:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":45:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":50:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":141:1)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":62:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":62:17)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":63:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":63:32)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":64:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":64:35)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":65:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":65:35)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":66:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":66:45)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":128:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":128:16)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":129:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":129:14)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":52:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":52:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":54:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":54:12)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":54:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":55:5)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":126:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":55:8)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":56:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":57:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":125:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":67:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":110:21)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":110:20)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":77:39)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":77:48)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":77:61)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":77:32)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":77:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":77:72)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":78:17)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":81:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":78:21)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":78:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":79:17)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":80:21)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:24)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:25)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:34)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:37)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:51)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":82:52)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":83:38)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":83:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":84:43)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":84:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":85:42)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":85:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":85:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":85:50)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":89:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:26)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:58)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:59)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:68)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:82)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":86:88)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":87:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":88:21)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":90:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":93:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":90:28)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":90:42)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":90:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":90:61)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":91:17)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":92:21)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":94:39)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":94:53)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":94:59)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":94:32)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":94:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":94:63)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":95:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":98:17)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":95:21)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":95:37)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":96:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":97:21)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:35)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:49)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:62)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:80)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:83)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:30)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":100:84)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:17)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":104:17)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:21)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:35)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:51)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":101:65)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":102:17)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":103:21)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":106:43)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":106:29)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":106:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":108:29)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":108:24)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":108:17)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":108:40)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":111:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":114:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":111:17)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":111:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":112:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":113:30)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":113:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":115:13)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":118:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":115:17)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":115:33)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":116:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":117:30)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":117:17)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":127:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":140:5)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":132:28)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":132:35)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":132:42)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":132:52)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":132:53)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":132:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:43)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:13)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:27)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:33)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:34)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:40)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":133:39)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:9)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":137:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:18)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:14)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:21)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:33)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:23)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":135:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":136:29)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":136:13)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":136:24)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":136:25)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:40)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":134:39)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":138:22)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":138:33)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":138:34)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":138:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":139:14)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":139:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":206:1)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":210:1)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":208:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":208:14)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":209:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":209:14)
#loc199 = loc("/usr/include/stdlib.h":575:1)
#loc200 = loc("/usr/include/stdlib.h":575:41)
#loc201 = loc("/usr/include/time.h":76:1)
#loc202 = loc("/usr/include/time.h":76:38)
#loc203 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc204 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":227:15)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":229:15)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":232:15)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":234:15)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":222:1)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":237:1)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":223:1)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":225:27)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":225:22)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":225:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":227:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":228:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":228:78)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":229:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":232:5)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":233:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":233:77)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":234:5)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":236:12)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":236:5)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":46:1)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":46:26)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":156:19)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":148:1)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":177:1)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":164:9)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":164:16)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":165:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":165:14)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":150:5)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":150:9)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":152:13)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":152:12)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":152:5)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":153:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":162:5)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":153:8)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":154:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":157:5)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":159:5)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":156:9)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":161:16)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":161:9)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":163:5)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":176:5)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":168:28)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":168:35)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":168:42)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":168:52)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":168:53)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":168:9)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:9)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:43)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:13)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:27)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:33)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:34)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:40)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":169:39)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:9)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":173:9)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:18)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:14)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:21)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:33)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:23)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":171:9)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":172:29)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":172:13)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":172:24)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":172:25)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:40)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":170:39)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":174:22)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":174:33)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":174:34)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":174:9)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":175:14)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":175:9)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":180:1)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":204:1)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":191:9)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":191:16)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":192:9)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":192:14)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":182:5)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":182:9)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":184:13)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":184:12)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":184:5)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":185:5)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":189:5)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":185:8)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":186:5)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":188:16)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":188:9)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":190:5)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":203:5)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":195:28)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":195:35)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":195:42)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":195:52)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":195:53)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":195:9)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:9)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:43)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:13)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:27)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:33)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:34)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:40)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":196:39)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:9)
#loc322 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":200:9)
#loc323 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:18)
#loc324 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:14)
#loc325 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:21)
#loc326 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:33)
#loc327 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:23)
#loc328 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":198:9)
#loc329 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":199:29)
#loc330 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":199:13)
#loc331 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":199:24)
#loc332 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":199:25)
#loc333 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:40)
#loc334 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":197:39)
#loc335 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":201:22)
#loc336 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":201:33)
#loc337 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":201:34)
#loc338 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":201:9)
#loc339 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":202:14)
#loc340 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_05.c":202:9)
#loc341 = loc(fused[#loc1, #loc2])
#loc342 = loc(fused[#loc3, #loc4])
#loc343 = loc(fused[#loc5, #loc6])
#loc344 = loc(fused[#loc7, #loc8])
#loc345 = loc(fused[#loc9, #loc10])
#loc346 = loc(fused[#loc11, #loc12])
#loc347 = loc(fused[#loc13, #loc14])
#loc348 = loc(fused[#loc15, #loc16])
#loc349 = loc(fused[#loc17, #loc18])
#loc350 = loc(fused[#loc19, #loc20])
#loc351 = loc(fused[#loc21, #loc22])
#loc352 = loc(fused[#loc23, #loc24])
#loc353 = loc(fused[#loc25, #loc26])
#loc354 = loc(fused[#loc27, #loc28])
#loc355 = loc(fused[#loc29, #loc30])
#loc356 = loc(fused[#loc31, #loc32])
#loc357 = loc(fused[#loc33, #loc34])
#loc358 = loc(fused[#loc35, #loc36])
#loc359 = loc(fused[#loc37, #loc38])
#loc360 = loc(fused[#loc39, #loc40])
#loc361 = loc(fused[#loc41, #loc42])
#loc362 = loc(fused[#loc43, #loc44])
#loc363 = loc(fused[#loc47, #loc45])
#loc364 = loc(fused[#loc48, #loc49])
#loc365 = loc(fused[#loc51, #loc49])
#loc366 = loc(fused[#loc52, #loc53])
#loc367 = loc(fused[#loc54, #loc55])
#loc368 = loc(fused[#loc61, #loc62])
#loc369 = loc(fused[#loc63, #loc64])
#loc370 = loc(fused[#loc65, #loc66])
#loc371 = loc(fused[#loc67, #loc64])
#loc372 = loc(fused[#loc69, #loc70])
#loc373 = loc(fused[#loc72, #loc73])
#loc374 = loc(fused[#loc74, #loc75])
#loc375 = loc(fused[#loc78, #loc76])
#loc376 = loc(fused[#loc82, #loc79])
#loc377 = loc(fused[#loc86, #loc87])
#loc378 = loc(fused[#loc88, #loc89])
#loc379 = loc(fused[#loc91, #loc92])
#loc380 = loc(fused[#loc93, #loc94])
#loc381 = loc(fused[#loc95, #loc96])
#loc382 = loc(fused[#loc97, #loc89])
#loc383 = loc(fused[#loc99, #loc100])
#loc384 = loc(fused[#loc103, #loc104])
#loc385 = loc(fused[#loc105, #loc100])
#loc386 = loc(fused[#loc111, #loc112])
#loc387 = loc(fused[#loc113, #loc114])
#loc388 = loc(fused[#loc115, #loc116])
#loc389 = loc(fused[#loc117, #loc114])
#loc390 = loc(fused[#loc121, #loc122])
#loc391 = loc(fused[#loc125, #loc126])
#loc392 = loc(fused[#loc127, #loc128])
#loc393 = loc(fused[#loc129, #loc130])
#loc394 = loc(fused[#loc132, #loc133])
#loc395 = loc(fused[#loc134, #loc128])
#loc396 = loc(fused[#loc138, #loc136])
#loc397 = loc(fused[#loc141, #loc142])
#loc398 = loc(fused[#loc143, #loc144])
#loc399 = loc(fused[#loc145, #loc146])
#loc400 = loc(fused[#loc147, #loc144])
#loc401 = loc(fused[#loc150, #loc151])
#loc402 = loc(fused[#loc152, #loc153])
#loc403 = loc(fused[#loc154, #loc151])
#loc404 = loc(fused[#loc157, #loc158])
#loc405 = loc(fused[#loc161, #loc162])
#loc406 = loc(fused[#loc160, #loc162])
#loc407 = loc(fused[#loc159, #loc163])
#loc408 = loc(fused[#loc164, #loc163])
#loc409 = loc(fused[#loc165, #loc166])
#loc410 = loc(fused[#loc167, #loc168])
#loc411 = loc(fused[#loc169, #loc166])
#loc412 = loc(fused[#loc173, #loc174])
#loc413 = loc(fused[#loc176, #loc175])
#loc414 = loc(fused[#loc177, #loc178])
#loc415 = loc(fused[#loc180, #loc174])
#loc416 = loc(fused[#loc182, #loc181])
#loc417 = loc(fused[#loc186, #loc185])
#loc418 = loc(fused[#loc193, #loc194])
#loc419 = loc(fused[#loc195, #loc196])
#loc420 = loc(fused[#loc197, #loc198])
#loc421 = loc(fused[#loc199, #loc200])
#loc422 = loc(fused[#loc201, #loc202])
#loc423 = loc(fused[#loc203, #loc204])
#loc424 = loc(fused[#loc209, #loc210])
#loc427 = loc(fused[#loc220, #loc221])
#loc428 = loc(fused[#loc224, #loc225])
#loc429 = loc(fused[#loc228, #loc227])
#loc430 = loc(fused[#loc229, #loc230])
#loc431 = loc(fused[#loc232, #loc233])
#loc432 = loc(fused[#loc234, #loc235])
#loc433 = loc(fused[#loc236, #loc237])
#loc434 = loc(fused[#loc238, #loc239])
#loc435 = loc(fused[#loc242, #loc240])
#loc436 = loc(fused[#loc243, #loc244])
#loc437 = loc(fused[#loc246, #loc247, #loc248, #loc244])
#loc438 = loc(fused[#loc251, #loc250])
#loc439 = loc(fused[#loc252, #loc253])
#loc440 = loc(fused[#loc256, #loc257])
#loc441 = loc(fused[#loc255, #loc257])
#loc442 = loc(fused[#loc254, #loc258])
#loc443 = loc(fused[#loc259, #loc258])
#loc444 = loc(fused[#loc260, #loc261])
#loc445 = loc(fused[#loc262, #loc263])
#loc446 = loc(fused[#loc264, #loc261])
#loc447 = loc(fused[#loc268, #loc269])
#loc448 = loc(fused[#loc271, #loc270])
#loc449 = loc(fused[#loc272, #loc273])
#loc450 = loc(fused[#loc275, #loc269])
#loc451 = loc(fused[#loc277, #loc276])
#loc452 = loc(fused[#loc281, #loc280])
#loc453 = loc(fused[#loc288, #loc289])
#loc454 = loc(fused[#loc290, #loc291])
#loc455 = loc(fused[#loc292, #loc293])
#loc456 = loc(fused[#loc294, #loc295])
#loc457 = loc(fused[#loc298, #loc296])
#loc458 = loc(fused[#loc299, #loc300])
#loc459 = loc(fused[#loc302, #loc300])
#loc460 = loc(fused[#loc304, #loc303])
#loc461 = loc(fused[#loc305, #loc306])
#loc462 = loc(fused[#loc309, #loc310])
#loc463 = loc(fused[#loc308, #loc310])
#loc464 = loc(fused[#loc307, #loc311])
#loc465 = loc(fused[#loc312, #loc311])
#loc466 = loc(fused[#loc313, #loc314])
#loc467 = loc(fused[#loc315, #loc316])
#loc468 = loc(fused[#loc317, #loc314])
#loc469 = loc(fused[#loc321, #loc322])
#loc470 = loc(fused[#loc324, #loc323])
#loc471 = loc(fused[#loc325, #loc326])
#loc472 = loc(fused[#loc328, #loc322])
#loc473 = loc(fused[#loc330, #loc329])
#loc474 = loc(fused[#loc334, #loc333])
