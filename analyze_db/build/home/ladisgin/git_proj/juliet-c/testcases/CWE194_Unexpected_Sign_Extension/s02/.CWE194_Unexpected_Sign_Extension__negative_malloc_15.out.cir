!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":136:10)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":136:14)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":136:20)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":136:32)
#loc218 = loc(fused[#loc75, #loc76])
#loc219 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc194)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc195)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc196)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc198)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc14)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc199)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<1> : !s32i loc(#loc20)
          %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc21)
          %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc21)
          cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc201)
          cir.break loc(#loc23)
        } loc(#loc19)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc25)
          cir.break loc(#loc26)
        } loc(#loc24)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc200)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc29)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc29)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc203)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc205)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc35)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc35)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc43)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
          } loc(#loc209)
        } loc(#loc207)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc45)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc46)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc46)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc46)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc46)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc210)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc50)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc50)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc52)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc52)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc52)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc54)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc211)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc11)
  } loc(#loc197)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc212)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc215)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_15_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_15_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.return %17 : !s32i loc(#loc222)
  } loc(#loc217)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc224)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc97)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc225)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc101)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          cir.break loc(#loc105)
        } loc(#loc102)
        cir.case(default, []) {
          %4 = cir.const #cir.int<100> : !s32i loc(#loc107)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc108)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc107)
          %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc107)
          cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc227)
          cir.break loc(#loc110)
        } loc(#loc106)
        cir.yield loc(#loc99)
      } loc(#loc99)
    } loc(#loc226)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc113)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc113)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc114)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc229)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc231)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc118)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc119)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc119)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc127)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
          } loc(#loc235)
        } loc(#loc233)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc129)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc130)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc130)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc130)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc130)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc134)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc134)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc136)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc136)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc136)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc138)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc237)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc140)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc141)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc94)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc239)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc147)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc240)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc151)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<100> : !s32i loc(#loc153)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc154)
          %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc153)
          %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc153)
          cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc242)
          cir.break loc(#loc156)
        } loc(#loc152)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc159)
          cir.break loc(#loc160)
        } loc(#loc157)
        cir.yield loc(#loc149)
      } loc(#loc149)
    } loc(#loc241)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc163)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc163)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc244)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc246)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc168)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc169)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc169)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc247)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc249)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc177)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc250)
        } loc(#loc248)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc179)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc180)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc180)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc180)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc180)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc251)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc184)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc184)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc186)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc186)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc186)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc188)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc252)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc190)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc191)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc191)
      } loc(#loc245)
    } loc(#loc243)
    cir.return loc(#loc144)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":34:19)
#loc4 = loc("/usr/include/stdlib.h":672:1)
#loc5 = loc("/usr/include/stdlib.h":672:45)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":21:1)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":50:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":23:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":23:11)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":25:12)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":25:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":26:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":36:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":26:12)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":28:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":30:17)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":30:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":30:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":31:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":32:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":34:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":35:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":38:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":49:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":38:9)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":38:16)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":39:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":42:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":42:48)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":42:37)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":42:44)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:43)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:27)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:33)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:34)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:40)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":43:39)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":45:16)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":45:28)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":45:33)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":45:38)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":45:9)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":45:39)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":46:30)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":46:9)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":46:20)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":46:25)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":46:26)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":47:19)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":47:9)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":48:9)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":48:14)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":120:1)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":124:1)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":122:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":122:14)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":123:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":123:14)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":141:15)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":143:15)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":146:15)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":148:15)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":136:1)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":151:1)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":137:1)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":139:27)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":139:22)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":139:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":141:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":142:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":142:63)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":143:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":146:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":147:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":147:62)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":148:5)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":150:12)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":150:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":57:1)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":86:1)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":59:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":59:11)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":61:12)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":61:5)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":62:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":72:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":62:12)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":64:5)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":66:19)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":66:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":67:9)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":68:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":70:16)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":70:20)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":70:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":71:9)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":74:5)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":85:5)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":74:9)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":74:16)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":75:5)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":78:9)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":78:48)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":78:37)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":78:44)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:9)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:43)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:13)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:27)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:33)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:34)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:40)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":79:39)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":81:16)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":81:28)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":81:33)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":81:38)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":81:9)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":81:39)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":82:30)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":82:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":82:20)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":82:25)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":82:26)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":83:19)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":83:9)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":84:9)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":84:14)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":89:1)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":118:1)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":91:5)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":91:11)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":93:12)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":93:5)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":94:5)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":104:5)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":94:12)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":96:5)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":98:16)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":98:20)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":98:9)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":99:9)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":100:5)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":102:19)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":102:9)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":103:9)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":106:5)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":117:5)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":106:9)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":106:16)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":107:5)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":110:9)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":110:48)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":110:37)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":110:44)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:9)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:43)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:13)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:27)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:33)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:34)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:40)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":111:39)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":113:16)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":113:28)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":113:33)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":113:38)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":113:9)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":113:39)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":114:30)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":114:9)
#loc186 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":114:20)
#loc187 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":114:25)
#loc188 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":114:26)
#loc189 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":115:19)
#loc190 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":115:9)
#loc191 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":116:9)
#loc192 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_15.c":116:14)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc4, #loc5])
#loc195 = loc(fused[#loc6, #loc7])
#loc196 = loc(fused[#loc8, #loc9])
#loc197 = loc(fused[#loc10, #loc11])
#loc198 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc15, #loc14])
#loc200 = loc(fused[#loc16, #loc17])
#loc201 = loc(fused[#loc22, #loc20])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc29, #loc30])
#loc204 = loc(fused[#loc31, #loc28])
#loc205 = loc(fused[#loc32, #loc33])
#loc206 = loc(fused[#loc34, #loc33])
#loc207 = loc(fused[#loc36, #loc37])
#loc208 = loc(fused[#loc38, #loc39])
#loc209 = loc(fused[#loc40, #loc37])
#loc210 = loc(fused[#loc48, #loc49])
#loc211 = loc(fused[#loc51, #loc50])
#loc212 = loc(fused[#loc59, #loc60])
#loc213 = loc(fused[#loc61, #loc62])
#loc214 = loc(fused[#loc63, #loc64])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc67, #loc68])
#loc217 = loc(fused[#loc73, #loc74])
#loc220 = loc(fused[#loc84, #loc85])
#loc221 = loc(fused[#loc88, #loc89])
#loc222 = loc(fused[#loc92, #loc91])
#loc223 = loc(fused[#loc93, #loc94])
#loc224 = loc(fused[#loc95, #loc96])
#loc225 = loc(fused[#loc98, #loc97])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc109, #loc108])
#loc228 = loc(fused[#loc111, #loc112])
#loc229 = loc(fused[#loc113, #loc114])
#loc230 = loc(fused[#loc115, #loc112])
#loc231 = loc(fused[#loc116, #loc117])
#loc232 = loc(fused[#loc118, #loc117])
#loc233 = loc(fused[#loc120, #loc121])
#loc234 = loc(fused[#loc122, #loc123])
#loc235 = loc(fused[#loc124, #loc121])
#loc236 = loc(fused[#loc132, #loc133])
#loc237 = loc(fused[#loc135, #loc134])
#loc238 = loc(fused[#loc143, #loc144])
#loc239 = loc(fused[#loc145, #loc146])
#loc240 = loc(fused[#loc148, #loc147])
#loc241 = loc(fused[#loc149, #loc150])
#loc242 = loc(fused[#loc155, #loc154])
#loc243 = loc(fused[#loc161, #loc162])
#loc244 = loc(fused[#loc163, #loc164])
#loc245 = loc(fused[#loc165, #loc162])
#loc246 = loc(fused[#loc166, #loc167])
#loc247 = loc(fused[#loc168, #loc167])
#loc248 = loc(fused[#loc170, #loc171])
#loc249 = loc(fused[#loc172, #loc173])
#loc250 = loc(fused[#loc174, #loc171])
#loc251 = loc(fused[#loc182, #loc183])
#loc252 = loc(fused[#loc185, #loc184])
