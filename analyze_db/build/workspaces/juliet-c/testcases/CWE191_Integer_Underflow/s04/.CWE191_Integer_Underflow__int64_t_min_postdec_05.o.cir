!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc163)
  cir.func private @printLongLongLine(!s64i) loc(#loc164)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_postdec_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc9)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc167)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
      cir.if %4 {
        %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc15)
        %6 = cir.unary(minus, %5) nsw : !s64i, !s64i loc(#loc15)
        %7 = cir.const #cir.int<1> : !s64i loc(#loc15)
        %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc15)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc170)
      } loc(#loc169)
    } loc(#loc168)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc174)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc25)
          %7 = cir.unary(dec, %6) nsw : !s64i, !s64i loc(#loc26)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc175)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc24)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc174)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc27)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc28)
        } loc(#loc173)
      } loc(#loc172)
    } loc(#loc171)
    cir.return loc(#loc6)
  } loc(#loc165)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_postdec_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc179)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc30)
  } loc(#loc176)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc181)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc49)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc185)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc53)
      cir.if %4 {
        %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc55)
        %6 = cir.unary(minus, %5) nsw : !s64i, !s64i loc(#loc55)
        %7 = cir.const #cir.int<1> : !s64i loc(#loc55)
        %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc55)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc188)
      } loc(#loc187)
    } loc(#loc186)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc59)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc66)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc67)
          %7 = cir.unary(minus, %6) nsw : !s64i, !s64i loc(#loc67)
          %8 = cir.const #cir.int<1> : !s64i loc(#loc67)
          %9 = cir.binop(sub, %7, %8) nsw : !s64i loc(#loc67)
          %10 = cir.cmp(gt, %5, %9) : !s64i, !cir.bool loc(#loc192)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc194)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc73)
            %13 = cir.unary(dec, %12) nsw : !s64i, !s64i loc(#loc74)
            cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc195)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc72)
            cir.store %14, %11 : !s64i, !cir.ptr<!s64i> loc(#loc194)
            %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc75)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc76)
          } else {
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc44)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc44)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          } loc(#loc193)
        } loc(#loc191)
      } loc(#loc190)
    } loc(#loc189)
    cir.return loc(#loc46)
  } loc(#loc183)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc82)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc198)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc86)
      cir.if %4 {
        %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc88)
        %6 = cir.unary(minus, %5) nsw : !s64i, !s64i loc(#loc88)
        %7 = cir.const #cir.int<1> : !s64i loc(#loc88)
        %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc88)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc201)
      } loc(#loc200)
    } loc(#loc199)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc92)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc96)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc97)
          %7 = cir.unary(minus, %6) nsw : !s64i, !s64i loc(#loc97)
          %8 = cir.const #cir.int<1> : !s64i loc(#loc97)
          %9 = cir.binop(sub, %7, %8) nsw : !s64i loc(#loc97)
          %10 = cir.cmp(gt, %5, %9) : !s64i, !cir.bool loc(#loc205)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc207)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc103)
            %13 = cir.unary(dec, %12) nsw : !s64i, !s64i loc(#loc104)
            cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc208)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc102)
            cir.store %14, %11 : !s64i, !cir.ptr<!s64i> loc(#loc207)
            %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc105)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc106)
          } else {
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc107)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc107)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc203)
    } loc(#loc202)
    cir.return loc(#loc79)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc113)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc211)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc117)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc122)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc123)
        %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc124)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc124)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc214)
      } loc(#loc213)
    } loc(#loc212)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc128)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc218)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc134)
          %7 = cir.unary(dec, %6) nsw : !s64i, !s64i loc(#loc135)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc219)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc133)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc218)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc136)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc137)
        } loc(#loc217)
      } loc(#loc216)
    } loc(#loc215)
    cir.return loc(#loc110)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc142)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc222)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc146)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc148)
        %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc149)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc149)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc225)
      } loc(#loc224)
    } loc(#loc223)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc163)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc153)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc229)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc159)
          %7 = cir.unary(dec, %6) nsw : !s64i, !s64i loc(#loc160)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc230)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc158)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc229)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc161)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc162)
        } loc(#loc228)
      } loc(#loc227)
    } loc(#loc226)
    cir.return loc(#loc139)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_05.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":28:1)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":46:1)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":30:5)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":30:13)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":31:12)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":31:5)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":32:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":36:5)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":32:8)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":33:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":35:16)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":35:9)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":37:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":45:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":37:8)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":38:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":39:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":44:9)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":42:13)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":42:30)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":41:17)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":41:13)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":43:31)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":43:13)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":156:1)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":162:1)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":158:5)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":158:14)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":159:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":159:14)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":160:5)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":160:14)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":161:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":161:14)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":24:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":24:26)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":65:19)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":78:23)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":53:1)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":81:1)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":55:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":55:13)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":56:12)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":56:5)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":57:5)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":61:5)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":57:8)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":58:5)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":60:16)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":60:9)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":62:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":80:5)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":62:8)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":63:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":66:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":68:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":65:9)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":70:9)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":79:9)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":70:13)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":70:20)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":71:9)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":75:9)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":77:9)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":73:13)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":73:30)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":72:17)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":72:13)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":74:31)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":74:13)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":78:13)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":84:1)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":107:1)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":86:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":86:13)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":87:12)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":87:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":88:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":92:5)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":88:8)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":89:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":91:16)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":91:9)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":93:5)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":106:5)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":93:8)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":94:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":96:9)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":105:9)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":96:13)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":96:20)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":97:9)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":101:9)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":103:9)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":99:13)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":99:30)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":98:17)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":98:13)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":100:31)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":100:13)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":104:23)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":104:13)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":110:1)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":133:1)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":112:5)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":112:13)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":113:12)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":113:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":114:5)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":123:5)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":114:8)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":115:5)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":118:5)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":120:5)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":117:19)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":117:9)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":122:17)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":122:16)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":122:9)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":124:5)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":132:5)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":124:8)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":125:5)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":126:9)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":131:9)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":129:13)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":129:30)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":128:17)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":128:13)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":130:31)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":130:13)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":136:1)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":154:1)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":138:5)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":138:13)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":139:12)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":139:5)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":140:5)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":144:5)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":140:8)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":141:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":143:17)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":143:16)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":143:9)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":145:5)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":153:5)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":145:8)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":146:5)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":147:9)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":152:9)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":150:13)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":150:30)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":149:17)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":149:13)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":151:31)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_05.c":151:13)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc10, #loc9])
#loc168 = loc(fused[#loc11, #loc12])
#loc169 = loc(fused[#loc14, #loc12])
#loc170 = loc(fused[#loc16, #loc15])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc20, #loc18])
#loc173 = loc(fused[#loc21, #loc22])
#loc174 = loc(fused[#loc23, #loc24])
#loc175 = loc(fused[#loc26, #loc25])
#loc176 = loc(fused[#loc29, #loc30])
#loc177 = loc(fused[#loc31, #loc32])
#loc178 = loc(fused[#loc33, #loc34])
#loc179 = loc(fused[#loc35, #loc36])
#loc180 = loc(fused[#loc37, #loc38])
#loc181 = loc(fused[#loc39, #loc40])
#loc182 = loc(fused[#loc41, #loc42])
#loc183 = loc(fused[#loc45, #loc46])
#loc184 = loc(fused[#loc47, #loc48])
#loc185 = loc(fused[#loc50, #loc49])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc54, #loc52])
#loc188 = loc(fused[#loc56, #loc55])
#loc189 = loc(fused[#loc57, #loc58])
#loc190 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc191 = loc(fused[#loc64, #loc65])
#loc192 = loc(fused[#loc66, #loc67])
#loc193 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc194 = loc(fused[#loc71, #loc72])
#loc195 = loc(fused[#loc74, #loc73])
#loc196 = loc(fused[#loc78, #loc79])
#loc197 = loc(fused[#loc80, #loc81])
#loc198 = loc(fused[#loc83, #loc82])
#loc199 = loc(fused[#loc84, #loc85])
#loc200 = loc(fused[#loc87, #loc85])
#loc201 = loc(fused[#loc89, #loc88])
#loc202 = loc(fused[#loc90, #loc91])
#loc203 = loc(fused[#loc93, #loc91])
#loc204 = loc(fused[#loc94, #loc95])
#loc205 = loc(fused[#loc96, #loc97])
#loc206 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc207 = loc(fused[#loc101, #loc102])
#loc208 = loc(fused[#loc104, #loc103])
#loc209 = loc(fused[#loc109, #loc110])
#loc210 = loc(fused[#loc111, #loc112])
#loc211 = loc(fused[#loc114, #loc113])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc118, #loc119, #loc120, #loc116])
#loc214 = loc(fused[#loc125, #loc123])
#loc215 = loc(fused[#loc126, #loc127])
#loc216 = loc(fused[#loc129, #loc127])
#loc217 = loc(fused[#loc130, #loc131])
#loc218 = loc(fused[#loc132, #loc133])
#loc219 = loc(fused[#loc135, #loc134])
#loc220 = loc(fused[#loc138, #loc139])
#loc221 = loc(fused[#loc140, #loc141])
#loc222 = loc(fused[#loc143, #loc142])
#loc223 = loc(fused[#loc144, #loc145])
#loc224 = loc(fused[#loc147, #loc145])
#loc225 = loc(fused[#loc150, #loc148])
#loc226 = loc(fused[#loc151, #loc152])
#loc227 = loc(fused[#loc154, #loc152])
#loc228 = loc(fused[#loc155, #loc156])
#loc229 = loc(fused[#loc157, #loc158])
#loc230 = loc(fused[#loc160, #loc159])
