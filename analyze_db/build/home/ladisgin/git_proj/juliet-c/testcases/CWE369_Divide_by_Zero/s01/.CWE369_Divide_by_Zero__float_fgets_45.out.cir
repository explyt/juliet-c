!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":140:10)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":140:14)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":140:20)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":140:32)
#loc189 = loc(fused[#loc57, #loc58])
#loc190 = loc(fused[#loc59, #loc60])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc167)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc168)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__float_fgets_45_badData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc171)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc173)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc18)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc24)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc25)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc179)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc32)
    %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc33)
    %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc33)
    cir.store %13, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc180)
    cir.br ^bb5 loc(#loc30)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc37)
    %17 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_badData : !cir.ptr<!cir.float> loc(#loc171)
    cir.store %16, %17 : !cir.float, !cir.ptr<!cir.float> loc(#loc181)
    %18 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %18() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc13)
  } loc(#loc172)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc186)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE369_Divide_by_Zero__float_fgets_45_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE369_Divide_by_Zero__float_fgets_45_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.return %17 : !s32i loc(#loc193)
  } loc(#loc188)
  cir.func private @printIntLine(!s32i) loc(#loc194)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc197)
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_badData : !cir.ptr<!cir.float> loc(#loc171)
    %3 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc82)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc85)
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc86)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc86)
    %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc199)
    %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc199)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc88)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc78)
  } loc(#loc195)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__float_fgets_45_goodG2BData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc200)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc95)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc203)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc97)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc204)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc99)
    %4 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodG2BData : !cir.ptr<!cir.float> loc(#loc200)
    cir.store %3, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc205)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    cir.return loc(#loc92)
  } loc(#loc201)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc209)
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodG2BData : !cir.ptr<!cir.float> loc(#loc200)
    %3 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc108)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc111)
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc112)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc112)
    %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc211)
    %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc211)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc114)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc104)
  } loc(#loc207)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__float_fgets_45_goodB2GData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc212)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc214)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc215)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc123)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc216)
    cir.br ^bb1 loc(#loc217)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc129)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc130)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc131)
    %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc219)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc220)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc137)
    %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc138)
    %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc138)
    cir.store %13, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc221)
    cir.br ^bb5 loc(#loc135)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc141)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc126)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc143)
    %17 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodB2GData : !cir.ptr<!cir.float> loc(#loc212)
    cir.store %16, %17 : !cir.float, !cir.ptr<!cir.float> loc(#loc222)
    %18 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call %18() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc145)
    cir.return loc(#loc118)
  } loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc147)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc226)
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_45_goodB2GData : !cir.ptr<!cir.float> loc(#loc212)
    %3 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc153)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc156)
    %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc156)
    %6 = cir.fabs %5 : !cir.double loc(#loc156)
    %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc157)
    %8 = cir.cmp(gt, %6, %7) : !cir.double, !cir.bool loc(#loc228)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc162)
    %10 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc163)
    %11 = cir.cast(floating, %10 : !cir.float), !cir.double loc(#loc163)
    %12 = cir.binop(div, %9, %11) : !cir.double loc(#loc230)
    %13 = cir.cast(float_to_int, %12 : !cir.double), !s32i loc(#loc230)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc165)
    cir.br ^bb4 loc(#loc160)
  ^bb3:  // pred: ^bb1
    %15 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc147)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc149)
  } loc(#loc224)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":55:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":24:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":24:14)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":40:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":60:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":46:9)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":46:41)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":42:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":42:11)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":44:12)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":44:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":45:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":57:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":56:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:19)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:32)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:49)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":48:59)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":49:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":52:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":54:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:32)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:27)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:13)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":51:43)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":55:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":58:53)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":58:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":59:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":59:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":126:1)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":130:1)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":128:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":128:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":129:5)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":129:13)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":145:15)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":147:15)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":150:15)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":152:15)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":140:1)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":155:1)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":141:1)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":143:27)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":143:22)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":143:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":145:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":146:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":146:48)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":147:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":150:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":151:5)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":151:47)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":152:5)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":154:12)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":154:5)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":30:1)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":38:1)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:9)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:40)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":32:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":32:18)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":33:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":37:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:28)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":35:36)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":36:22)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":36:9)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":25:1)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":25:14)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":77:1)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":86:1)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":79:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":79:11)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":81:12)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":81:5)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":83:12)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":83:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":84:57)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":84:5)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":85:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":85:17)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":67:1)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":75:1)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:9)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:40)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":69:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":69:18)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":70:5)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":74:5)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:28)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":72:36)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":73:22)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":73:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":26:1)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":26:14)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":104:1)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":124:1)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":110:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":110:41)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":106:5)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":106:11)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":108:12)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":108:5)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":109:5)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":121:5)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:9)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":120:9)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:19)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:32)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:49)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":112:59)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":113:9)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":116:9)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":118:9)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:32)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:27)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:13)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":115:43)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":119:23)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":119:13)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":122:57)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":122:5)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":123:5)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":123:17)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":100:19)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":89:1)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":102:1)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:40)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":91:5)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":91:18)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:5)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":101:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:13)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:21)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":93:8)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":94:5)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":97:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":99:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:28)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":95:36)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":96:22)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":96:9)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_45.c":100:9)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc10, #loc11])
#loc172 = loc(fused[#loc12, #loc13])
#loc173 = loc(fused[#loc14, #loc15])
#loc174 = loc(fused[#loc16, #loc17])
#loc175 = loc(fused[#loc19, #loc18])
#loc176 = loc(fused[#loc20, #loc21])
#loc177 = loc(fused[#loc22, #loc23])
#loc178 = loc(fused[#loc27, #loc28])
#loc179 = loc(fused[#loc29, #loc30, #loc31, #loc23])
#loc180 = loc(fused[#loc34, #loc35])
#loc181 = loc(fused[#loc38, #loc37])
#loc182 = loc(fused[#loc39, #loc40])
#loc183 = loc(fused[#loc41, #loc42])
#loc184 = loc(fused[#loc43, #loc44])
#loc185 = loc(fused[#loc45, #loc46])
#loc186 = loc(fused[#loc47, #loc48])
#loc187 = loc(fused[#loc49, #loc50])
#loc188 = loc(fused[#loc55, #loc56])
#loc191 = loc(fused[#loc66, #loc67])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc74, #loc73])
#loc194 = loc(fused[#loc75, #loc76])
#loc195 = loc(fused[#loc77, #loc78])
#loc196 = loc(fused[#loc79, #loc80])
#loc197 = loc(fused[#loc81, #loc82])
#loc198 = loc(fused[#loc83, #loc84])
#loc199 = loc(fused[#loc85, #loc86])
#loc200 = loc(fused[#loc89, #loc90])
#loc201 = loc(fused[#loc91, #loc92])
#loc202 = loc(fused[#loc93, #loc94])
#loc203 = loc(fused[#loc96, #loc95])
#loc204 = loc(fused[#loc98, #loc97])
#loc205 = loc(fused[#loc100, #loc99])
#loc206 = loc(fused[#loc101, #loc102])
#loc207 = loc(fused[#loc103, #loc104])
#loc208 = loc(fused[#loc105, #loc106])
#loc209 = loc(fused[#loc107, #loc108])
#loc210 = loc(fused[#loc109, #loc110])
#loc211 = loc(fused[#loc111, #loc112])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc117, #loc118])
#loc214 = loc(fused[#loc119, #loc120])
#loc215 = loc(fused[#loc121, #loc122])
#loc216 = loc(fused[#loc124, #loc123])
#loc217 = loc(fused[#loc125, #loc126])
#loc218 = loc(fused[#loc127, #loc128])
#loc219 = loc(fused[#loc132, #loc133])
#loc220 = loc(fused[#loc134, #loc135, #loc136, #loc128])
#loc221 = loc(fused[#loc139, #loc140])
#loc222 = loc(fused[#loc144, #loc143])
#loc223 = loc(fused[#loc145, #loc146])
#loc224 = loc(fused[#loc148, #loc149])
#loc225 = loc(fused[#loc150, #loc151])
#loc226 = loc(fused[#loc152, #loc153])
#loc227 = loc(fused[#loc154, #loc155])
#loc228 = loc(fused[#loc158, #loc157])
#loc229 = loc(fused[#loc159, #loc160, #loc161, #loc155])
#loc230 = loc(fused[#loc162, #loc163])
