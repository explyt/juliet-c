!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc73)
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc77)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc78)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc73)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc80)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc81)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<5> : !s32i loc(#loc13)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %11 = cir.call @sprintf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc20)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc76)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc82)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc87)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc88)
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc85)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc90)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb6 loc(#loc45)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<5> : !s32i loc(#loc40)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %8 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc50)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc34)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc34)
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %13 = cir.call @sprintf(%9, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb5 loc(#loc49)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc36)
  } loc(#loc86)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc93)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc73)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc63)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc96)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<5> : !s32i loc(#loc60)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    %6 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc69)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc69)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %11 = cir.call @sprintf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc62)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc62)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc56)
  } loc(#loc92)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":0:0)
#loc1 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":23:1)
#loc2 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":23:25)
#loc3 = loc("/usr/include/stdio.h":365:1)
#loc4 = loc("/usr/include/stdio.h":366:45)
#loc5 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":36:27)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":28:1)
#loc9 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":40:1)
#loc10 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":33:13)
#loc11 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":33:32)
#loc12 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":34:13)
#loc13 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":34:27)
#loc14 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":30:5)
#loc15 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":39:5)
#loc16 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":30:8)
#loc17 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":31:5)
#loc18 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":32:9)
#loc19 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":38:9)
#loc20 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":36:13)
#loc21 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":36:21)
#loc22 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":36:33)
#loc23 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":37:23)
#loc24 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":37:13)
#loc25 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":81:1)
#loc26 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":85:1)
#loc27 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":83:5)
#loc28 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":83:11)
#loc29 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":84:5)
#loc30 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":84:11)
#loc31 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":24:1)
#loc32 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":24:26)
#loc33 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":52:19)
#loc34 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":60:27)
#loc35 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":47:1)
#loc36 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":64:1)
#loc37 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":57:13)
#loc38 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":57:32)
#loc39 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":58:13)
#loc40 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":58:27)
#loc41 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":49:5)
#loc42 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":63:5)
#loc43 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":49:8)
#loc44 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":50:5)
#loc45 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":53:5)
#loc46 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":55:5)
#loc47 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":52:9)
#loc48 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":56:9)
#loc49 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":62:9)
#loc50 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":60:13)
#loc51 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":60:21)
#loc52 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":60:33)
#loc53 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":61:23)
#loc54 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":61:13)
#loc55 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":67:1)
#loc56 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":79:1)
#loc57 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":72:13)
#loc58 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":72:32)
#loc59 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":73:13)
#loc60 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":73:27)
#loc61 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":69:5)
#loc62 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":78:5)
#loc63 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":69:8)
#loc64 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":70:5)
#loc65 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":71:9)
#loc66 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":77:9)
#loc67 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":75:13)
#loc68 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":75:21)
#loc69 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":75:27)
#loc70 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":75:33)
#loc71 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":76:23)
#loc72 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_05.c":76:13)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc6, #loc7])
#loc76 = loc(fused[#loc8, #loc9])
#loc77 = loc(fused[#loc10, #loc11])
#loc78 = loc(fused[#loc12, #loc13])
#loc79 = loc(fused[#loc14, #loc15])
#loc80 = loc(fused[#loc17, #loc15])
#loc81 = loc(fused[#loc18, #loc19])
#loc82 = loc(fused[#loc25, #loc26])
#loc83 = loc(fused[#loc27, #loc28])
#loc84 = loc(fused[#loc29, #loc30])
#loc85 = loc(fused[#loc31, #loc32])
#loc86 = loc(fused[#loc35, #loc36])
#loc87 = loc(fused[#loc37, #loc38])
#loc88 = loc(fused[#loc39, #loc40])
#loc89 = loc(fused[#loc41, #loc42])
#loc90 = loc(fused[#loc44, #loc45, #loc46, #loc42])
#loc91 = loc(fused[#loc48, #loc49])
#loc92 = loc(fused[#loc55, #loc56])
#loc93 = loc(fused[#loc57, #loc58])
#loc94 = loc(fused[#loc59, #loc60])
#loc95 = loc(fused[#loc61, #loc62])
#loc96 = loc(fused[#loc64, #loc62])
#loc97 = loc(fused[#loc65, #loc66])
