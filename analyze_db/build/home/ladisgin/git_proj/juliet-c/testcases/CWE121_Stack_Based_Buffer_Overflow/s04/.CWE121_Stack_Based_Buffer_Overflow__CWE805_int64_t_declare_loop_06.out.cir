!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":125:10)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":125:14)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":125:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":125:32)
#loc198 = loc(fused[#loc64, #loc65])
#loc199 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc172)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc175)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc176)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc178)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc16)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc180)
      } loc(#loc179)
    } loc(#loc177)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc182)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc182)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc182)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc184)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc28)
          cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc186)
          cir.for : cond {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc31)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc31)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc187)
            cir.condition(%15) loc(#loc32)
          } body {
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc35)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %12 : !u64i), !cir.ptr<!s64i> loc(#loc35)
              %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc35)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
              %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc38)
              cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc189)
            } loc(#loc188)
            cir.yield loc(#loc27)
          } step {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc41)
            cir.store %13, %5 : !u64i, !cir.ptr<!u64i> loc(#loc190)
            cir.yield loc(#loc185)
          } loc(#loc185)
        } loc(#loc185)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s64i>, %7 : !s32i), !cir.ptr<!s64i> loc(#loc44)
        %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc42)
        cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc45)
      } loc(#loc183)
    } loc(#loc181)
    cir.return loc(#loc4)
  } loc(#loc173)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc71)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %17 : !s32i loc(#loc202)
  } loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc205)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc206)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc93)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc94)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc208)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc82)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc82)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      } else {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc99)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc210)
      } loc(#loc209)
    } loc(#loc207)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc212)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc212)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc212)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc214)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc111)
          cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc216)
          cir.for : cond {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc113)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc114)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc114)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc217)
            cir.condition(%15) loc(#loc115)
          } body {
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc117)
              %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc118)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %12 : !u64i), !cir.ptr<!s64i> loc(#loc118)
              %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc118)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc119)
              %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc120)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc121)
              cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc219)
            } loc(#loc218)
            cir.yield loc(#loc110)
          } step {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc124)
            cir.store %13, %5 : !u64i, !cir.ptr<!u64i> loc(#loc220)
            cir.yield loc(#loc215)
          } loc(#loc215)
        } loc(#loc215)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc125)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc126)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s64i>, %7 : !s32i), !cir.ptr<!s64i> loc(#loc127)
        %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc125)
        cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc128)
      } loc(#loc213)
    } loc(#loc211)
    cir.return loc(#loc84)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc223)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc224)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc139)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc140)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc226)
      cir.if %5 {
        %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc142)
        cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc228)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc230)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc230)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc230)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc232)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc154)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc154)
          cir.store %11, %5 : !u64i, !cir.ptr<!u64i> loc(#loc234)
          cir.for : cond {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc157)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc157)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc235)
            cir.condition(%15) loc(#loc158)
          } body {
            cir.scope {
              %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc160)
              %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc161)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %12 : !u64i), !cir.ptr<!s64i> loc(#loc161)
              %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc161)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc162)
              %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc163)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !u64i), !cir.ptr<!s64i> loc(#loc164)
              cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc237)
            } loc(#loc236)
            cir.yield loc(#loc153)
          } step {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc166)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc167)
            cir.store %13, %5 : !u64i, !cir.ptr<!u64i> loc(#loc238)
            cir.yield loc(#loc233)
          } loc(#loc233)
        } loc(#loc233)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc168)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc169)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!s64i>, %7 : !s32i), !cir.ptr<!s64i> loc(#loc170)
        %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc168)
        cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc171)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc130)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":25:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":48:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":27:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":27:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":28:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":28:29)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":29:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":29:31)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":35:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":30:8)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":30:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":34:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":34:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":47:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":37:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":37:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":38:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":46:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":39:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":39:20)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":44:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":42:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":43:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":43:27)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":43:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":43:22)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":43:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":43:35)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:35)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":41:34)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":45:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":45:36)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":45:37)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":45:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":109:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":113:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":111:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":111:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":112:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":112:14)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":130:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":132:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":135:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":137:15)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":125:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":140:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":126:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":128:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":128:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":128:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":130:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":131:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":131:77)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":132:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":135:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":136:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":136:76)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":137:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":139:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":139:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":63:19)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":55:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":82:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":57:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":57:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":58:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":58:29)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":59:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":59:31)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":60:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":69:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":60:8)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":60:27)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":61:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":64:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":66:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":63:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":68:16)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":68:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":70:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":81:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":71:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":71:33)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":72:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":80:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":73:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":73:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":78:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:25)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:29)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:27)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":76:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":77:34)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":77:27)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":77:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":77:22)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":77:23)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":77:35)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:35)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":75:34)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":79:31)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":79:36)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":79:37)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":79:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":85:1)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":107:1)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":87:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":87:15)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":88:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":88:29)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":89:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":89:31)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":90:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":94:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":90:8)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":90:27)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":91:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":93:16)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":93:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":95:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":106:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":96:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":96:33)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":97:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":105:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":98:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":98:20)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:13)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":103:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:22)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:18)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:25)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:29)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:27)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":101:13)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":102:34)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":102:27)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":102:17)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":102:22)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":102:23)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":102:35)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:35)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":100:34)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":104:31)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":104:36)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":104:37)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_loop_06.c":104:13)
#loc172 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc3, #loc4])
#loc174 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc7, #loc8])
#loc176 = loc(fused[#loc9, #loc10])
#loc177 = loc(fused[#loc11, #loc12])
#loc178 = loc(fused[#loc13, #loc14])
#loc179 = loc(fused[#loc15, #loc12])
#loc180 = loc(fused[#loc17, #loc16])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc20, #loc21])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc24, #loc25])
#loc185 = loc(fused[#loc26, #loc27])
#loc186 = loc(fused[#loc29, #loc28])
#loc187 = loc(fused[#loc30, #loc31])
#loc188 = loc(fused[#loc33, #loc27])
#loc189 = loc(fused[#loc36, #loc39])
#loc190 = loc(fused[#loc41, #loc40])
#loc191 = loc(fused[#loc46, #loc47])
#loc192 = loc(fused[#loc48, #loc49])
#loc193 = loc(fused[#loc50, #loc51])
#loc194 = loc(fused[#loc52, #loc53])
#loc195 = loc(fused[#loc54, #loc55])
#loc196 = loc(fused[#loc56, #loc57])
#loc197 = loc(fused[#loc62, #loc63])
#loc200 = loc(fused[#loc73, #loc74])
#loc201 = loc(fused[#loc77, #loc78])
#loc202 = loc(fused[#loc81, #loc80])
#loc203 = loc(fused[#loc83, #loc84])
#loc204 = loc(fused[#loc85, #loc86])
#loc205 = loc(fused[#loc87, #loc88])
#loc206 = loc(fused[#loc89, #loc90])
#loc207 = loc(fused[#loc91, #loc92])
#loc208 = loc(fused[#loc93, #loc94])
#loc209 = loc(fused[#loc95, #loc96, #loc97, #loc92])
#loc210 = loc(fused[#loc100, #loc99])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc103, #loc104])
#loc213 = loc(fused[#loc105, #loc106])
#loc214 = loc(fused[#loc107, #loc108])
#loc215 = loc(fused[#loc109, #loc110])
#loc216 = loc(fused[#loc112, #loc111])
#loc217 = loc(fused[#loc113, #loc114])
#loc218 = loc(fused[#loc116, #loc110])
#loc219 = loc(fused[#loc119, #loc122])
#loc220 = loc(fused[#loc124, #loc123])
#loc221 = loc(fused[#loc129, #loc130])
#loc222 = loc(fused[#loc131, #loc132])
#loc223 = loc(fused[#loc133, #loc134])
#loc224 = loc(fused[#loc135, #loc136])
#loc225 = loc(fused[#loc137, #loc138])
#loc226 = loc(fused[#loc139, #loc140])
#loc227 = loc(fused[#loc141, #loc138])
#loc228 = loc(fused[#loc143, #loc142])
#loc229 = loc(fused[#loc144, #loc145])
#loc230 = loc(fused[#loc146, #loc147])
#loc231 = loc(fused[#loc148, #loc149])
#loc232 = loc(fused[#loc150, #loc151])
#loc233 = loc(fused[#loc152, #loc153])
#loc234 = loc(fused[#loc155, #loc154])
#loc235 = loc(fused[#loc156, #loc157])
#loc236 = loc(fused[#loc159, #loc153])
#loc237 = loc(fused[#loc162, #loc165])
#loc238 = loc(fused[#loc167, #loc166])
