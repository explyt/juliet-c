!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc58)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc61)
        cir.condition(%4) loc(#loc18)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
            %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc4)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc4)
            %6 = cir.call @rename(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc22)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc23)
            %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc64)
            cir.if %8 {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc25)
            } loc(#loc65)
          } loc(#loc63)
        } loc(#loc62)
        cir.yield loc(#loc13)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc27)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
        cir.yield loc(#loc59)
      } loc(#loc59)
    } loc(#loc59)
    cir.return loc(#loc9)
  } loc(#loc57)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc68)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc29)
  } loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc70)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc40)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc73)
        cir.condition(%4) loc(#loc44)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc32)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc32)
            %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc33)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc33)
            %6 = cir.call @rename(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc48)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc76)
            cir.if %8 {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
            } loc(#loc77)
          } loc(#loc75)
        } loc(#loc74)
        cir.yield loc(#loc39)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc54)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
        cir.yield loc(#loc71)
      } loc(#loc71)
    } loc(#loc71)
    cir.return loc(#loc35)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":160:1)
#loc2 = loc("/usr/include/stdio.h":160:58)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":42:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":42:39)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":44:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":35:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":47:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":37:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":37:9)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":46:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:16)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:20)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:18)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":39:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":42:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":45:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":42:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":42:61)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":43:9)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":44:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:24)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":38:23)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":67:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":70:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":69:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":69:11)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":60:20)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":60:40)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":54:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":65:1)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":56:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":56:9)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":64:5)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:13)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:16)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:20)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:18)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":58:5)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":60:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":63:9)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":60:13)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":60:63)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":61:9)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":62:23)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":62:13)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:24)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_17.c":57:23)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc5, #loc6])
#loc57 = loc(fused[#loc8, #loc9])
#loc58 = loc(fused[#loc10, #loc11])
#loc59 = loc(fused[#loc12, #loc13])
#loc60 = loc(fused[#loc15, #loc14])
#loc61 = loc(fused[#loc16, #loc17])
#loc62 = loc(fused[#loc19, #loc13])
#loc63 = loc(fused[#loc20, #loc21])
#loc64 = loc(fused[#loc22, #loc23])
#loc65 = loc(fused[#loc24, #loc21])
#loc66 = loc(fused[#loc27, #loc26])
#loc67 = loc(fused[#loc28, #loc29])
#loc68 = loc(fused[#loc30, #loc31])
#loc69 = loc(fused[#loc34, #loc35])
#loc70 = loc(fused[#loc36, #loc37])
#loc71 = loc(fused[#loc38, #loc39])
#loc72 = loc(fused[#loc41, #loc40])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc45, #loc39])
#loc75 = loc(fused[#loc46, #loc47])
#loc76 = loc(fused[#loc48, #loc49])
#loc77 = loc(fused[#loc50, #loc47])
#loc78 = loc(fused[#loc54, #loc53])
