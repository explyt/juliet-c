!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":426:10)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":426:14)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":426:20)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":426:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc644 = loc(fused[#loc187, #loc188])
#loc645 = loc(fused[#loc189, #loc190])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc571)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc572)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc573)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc574)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc575)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc576)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc577)
  cir.func private @close(!s32i) -> !s32i loc(#loc578)
  cir.func private @printIntLine(!s32i) loc(#loc579)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc580)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc582)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc31)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc587)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc588)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc589)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc590)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc591)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc40)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc589)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc42)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc590)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc47)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc49)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc593)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc56)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc595)
                cir.if %62 {
                  cir.break loc(#loc58)
                } loc(#loc596)
              } loc(#loc594)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc597)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc61)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc598)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc599)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc66)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc66)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc600)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc69)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc69)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc601)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc73)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc73)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc602)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc604)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc605)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc605)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc86)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc86)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc606)
                cir.if %66 {
                  cir.break loc(#loc88)
                } loc(#loc607)
              } loc(#loc603)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc92)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc94)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc94)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc609)
                cir.if %64 {
                  cir.break loc(#loc96)
                } loc(#loc610)
              } loc(#loc608)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc611)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc106)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc106)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc613)
                cir.if %62 {
                  cir.break loc(#loc108)
                } loc(#loc614)
              } loc(#loc612)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc111)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc111)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc111)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc111)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc111)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc111)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc111)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc112)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc112)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc615)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc113)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc114)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc616)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc120)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc120)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc618)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc121)
                  cir.yield %64 : !cir.bool loc(#loc121)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc123)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc619)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc121)
                    cir.yield %68 : !cir.bool loc(#loc121)
                  }, false {
                    %68 = cir.const #false loc(#loc121)
                    cir.yield %68 : !cir.bool loc(#loc121)
                  }) : (!cir.bool) -> !cir.bool loc(#loc121)
                  cir.yield %67 : !cir.bool loc(#loc121)
                }) : (!cir.bool) -> !cir.bool loc(#loc121)
                cir.if %63 {
                  cir.break loc(#loc125)
                } loc(#loc620)
              } loc(#loc617)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc126)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc126)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc128)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc621)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc622)
              cir.yield loc(#loc46)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc133)
              cir.condition(%15) loc(#loc133)
            } loc(#loc592)
          } loc(#loc592)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc136)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc137)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc137)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc624)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc140)
            } loc(#loc625)
          } loc(#loc623)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc144)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc627)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc147)
            } loc(#loc628)
          } loc(#loc626)
        } loc(#loc586)
      } loc(#loc585)
    } loc(#loc584)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc150)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc632)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc632)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc632)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc159)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc634)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc164)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc164)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc164)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc165)
            } else {
              %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc21)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc166)
            } loc(#loc635)
          } loc(#loc633)
        } loc(#loc631)
      } loc(#loc630)
    } loc(#loc629)
    cir.return loc(#loc23)
  } loc(#loc581)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc637)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc638)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc639)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc640)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc175)
    cir.return loc(#loc168)
  } loc(#loc636)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc641)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc642)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc184)
  cir.func @main(%arg0: !s32i loc(fused[#loc187, #loc188]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc189, #loc190])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc644)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc645)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc186)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc191)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc192)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc193)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc193)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc194)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc181)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc646)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_04_good() : () -> () loc(#loc196)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc182)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc183)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc647)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_04_bad() : () -> () loc(#loc200)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc184)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc203)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc648)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc648)
    cir.return %17 : !s32i loc(#loc648)
  } loc(#loc643)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc206)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc650)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc212)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc651)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc216)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc216)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc655)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc656)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc657)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc658)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc659)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc225)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc225)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc657)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc227)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc227)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc658)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc232)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc233)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc234)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc661)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc241)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc241)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc663)
                cir.if %62 {
                  cir.break loc(#loc243)
                } loc(#loc664)
              } loc(#loc662)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc665)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc246)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc666)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc667)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc251)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc251)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc668)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc253)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc253)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc669)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc255)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc255)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc256)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc670)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc672)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc673)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc673)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc266)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc267)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc267)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc674)
                cir.if %66 {
                  cir.break loc(#loc269)
                } loc(#loc675)
              } loc(#loc671)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc273)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc274)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc275)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc275)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc677)
                cir.if %64 {
                  cir.break loc(#loc277)
                } loc(#loc678)
              } loc(#loc676)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc279)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc280)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc281)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc679)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc287)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc287)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc681)
                cir.if %62 {
                  cir.break loc(#loc289)
                } loc(#loc682)
              } loc(#loc680)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc290)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc292)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc292)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc292)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc292)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc292)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc292)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc292)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc293)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc293)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc683)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc294)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc295)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc684)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc300)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc301)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc301)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc686)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc302)
                  cir.yield %64 : !cir.bool loc(#loc302)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc304)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc687)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc302)
                    cir.yield %68 : !cir.bool loc(#loc302)
                  }, false {
                    %68 = cir.const #false loc(#loc302)
                    cir.yield %68 : !cir.bool loc(#loc302)
                  }) : (!cir.bool) -> !cir.bool loc(#loc302)
                  cir.yield %67 : !cir.bool loc(#loc302)
                }) : (!cir.bool) -> !cir.bool loc(#loc302)
                cir.if %63 {
                  cir.break loc(#loc306)
                } loc(#loc688)
              } loc(#loc685)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc307)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc307)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc308)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc309)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc689)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc310)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc311)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc690)
              cir.yield loc(#loc231)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc314)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc314)
              cir.condition(%15) loc(#loc314)
            } loc(#loc660)
          } loc(#loc660)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc317)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc318)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc318)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc692)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc320)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc321)
            } loc(#loc693)
          } loc(#loc691)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc324)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc325)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc325)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc695)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc327)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc328)
            } loc(#loc696)
          } loc(#loc694)
        } loc(#loc654)
      } loc(#loc653)
    } loc(#loc652)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc331)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc331)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc205)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc205)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc335)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc700)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc700)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc700)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc343)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc702)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc346)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc703)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc344)
                cir.yield %15 : !cir.bool loc(#loc344)
              }, false {
                %15 = cir.const #false loc(#loc344)
                cir.yield %15 : !cir.bool loc(#loc344)
              }) : (!cir.bool) -> !cir.bool loc(#loc344)
              cir.yield %14 : !cir.bool loc(#loc344)
            }, false {
              %11 = cir.const #false loc(#loc344)
              cir.yield %11 : !cir.bool loc(#loc344)
            }) : (!cir.bool) -> !cir.bool loc(#loc344)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc352)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc352)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc352)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc353)
            } else {
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc206)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc206)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc354)
            } loc(#loc704)
          } loc(#loc701)
        } loc(#loc699)
      } loc(#loc698)
    } loc(#loc697)
    cir.return loc(#loc208)
  } loc(#loc649)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc706)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc359)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc360)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc707)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc364)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc364)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc711)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc712)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc713)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc714)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc715)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc373)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc373)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc713)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc375)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc375)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc714)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc380)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc381)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc382)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc383)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc717)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc389)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc389)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc719)
                cir.if %62 {
                  cir.break loc(#loc391)
                } loc(#loc720)
              } loc(#loc718)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc721)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc394)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc722)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc723)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc399)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc399)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc724)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc401)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc401)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc725)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc403)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc403)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc404)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc726)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc728)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc729)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc729)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc414)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc415)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc415)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc730)
                cir.if %66 {
                  cir.break loc(#loc417)
                } loc(#loc731)
              } loc(#loc727)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc420)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc421)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc422)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc423)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc423)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc733)
                cir.if %64 {
                  cir.break loc(#loc425)
                } loc(#loc734)
              } loc(#loc732)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc426)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc427)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc428)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc429)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc735)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc435)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc435)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc737)
                cir.if %62 {
                  cir.break loc(#loc437)
                } loc(#loc738)
              } loc(#loc736)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc438)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc439)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc439)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc440)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc440)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc440)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc440)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc440)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc440)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc440)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc441)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc441)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc739)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc442)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc443)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc443)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc740)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc448)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc449)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc449)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc742)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc450)
                  cir.yield %64 : !cir.bool loc(#loc450)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc451)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc452)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc743)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc450)
                    cir.yield %68 : !cir.bool loc(#loc450)
                  }, false {
                    %68 = cir.const #false loc(#loc450)
                    cir.yield %68 : !cir.bool loc(#loc450)
                  }) : (!cir.bool) -> !cir.bool loc(#loc450)
                  cir.yield %67 : !cir.bool loc(#loc450)
                }) : (!cir.bool) -> !cir.bool loc(#loc450)
                cir.if %63 {
                  cir.break loc(#loc454)
                } loc(#loc744)
              } loc(#loc741)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc455)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc455)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc456)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc457)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc457)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc745)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc458)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc459)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc746)
              cir.yield loc(#loc379)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc462)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc462)
              cir.condition(%15) loc(#loc462)
            } loc(#loc716)
          } loc(#loc716)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc465)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc466)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc466)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc748)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc468)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc469)
            } loc(#loc749)
          } loc(#loc747)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc472)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc473)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc473)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc751)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc475)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc476)
            } loc(#loc752)
          } loc(#loc750)
        } loc(#loc710)
      } loc(#loc709)
    } loc(#loc708)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc479)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc479)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc756)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc756)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc756)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc487)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc488)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc758)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc490)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc491)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc759)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc489)
                cir.yield %15 : !cir.bool loc(#loc489)
              }, false {
                %15 = cir.const #false loc(#loc489)
                cir.yield %15 : !cir.bool loc(#loc489)
              }) : (!cir.bool) -> !cir.bool loc(#loc489)
              cir.yield %14 : !cir.bool loc(#loc489)
            }, false {
              %11 = cir.const #false loc(#loc489)
              cir.yield %11 : !cir.bool loc(#loc489)
            }) : (!cir.bool) -> !cir.bool loc(#loc489)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc496)
              %12 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc497)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc497)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc497)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc498)
            } else {
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc499)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc499)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc500)
            } loc(#loc760)
          } loc(#loc757)
        } loc(#loc755)
      } loc(#loc754)
    } loc(#loc753)
    cir.return loc(#loc356)
  } loc(#loc705)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc762)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc505)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc506)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc763)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc510)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc510)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc514)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc514)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc515)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc516)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc766)
      } loc(#loc765)
    } loc(#loc764)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc520)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc520)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc770)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc770)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc770)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc528)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc529)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc772)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc533)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc534)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc534)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc534)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc535)
            } else {
              %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc536)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc536)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc537)
            } loc(#loc773)
          } loc(#loc771)
        } loc(#loc769)
      } loc(#loc768)
    } loc(#loc767)
    cir.return loc(#loc502)
  } loc(#loc761)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc775)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc542)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc543)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc776)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc547)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc547)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc549)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc779)
      } loc(#loc778)
    } loc(#loc777)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc553)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc553)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc783)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc783)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc783)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc561)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc562)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc785)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc566)
              %11 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc567)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc567)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc567)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc568)
            } else {
              %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc569)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc569)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc570)
            } loc(#loc786)
          } loc(#loc784)
        } loc(#loc782)
      } loc(#loc781)
    } loc(#loc780)
    cir.return loc(#loc539)
  } loc(#loc774)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_04.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":139:27)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":50:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":143:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":52:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":52:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":54:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":54:12)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":54:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":55:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":126:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":55:8)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":56:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":57:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":125:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":62:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":62:17)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":63:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":63:32)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":64:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":64:35)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":65:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":65:35)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":66:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":66:45)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":67:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":110:21)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":77:39)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":77:48)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":77:61)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":77:32)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":77:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":77:72)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":78:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":81:17)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":78:21)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":78:37)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":79:17)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":80:21)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:24)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:25)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:34)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:37)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:51)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:17)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":82:52)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":83:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":83:17)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":84:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":84:17)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":85:42)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":85:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":85:17)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":85:50)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":89:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:26)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:58)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:59)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:68)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:82)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:21)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":86:88)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":87:17)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":88:21)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":90:17)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":93:17)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":90:28)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":90:42)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":90:21)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":90:61)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":91:17)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":92:21)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":94:39)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":94:53)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":94:59)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":94:32)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":94:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":94:63)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":95:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":98:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":95:21)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":95:37)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":96:17)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":97:21)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:35)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:49)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:62)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:80)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:83)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:30)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:17)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":100:84)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":101:17)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":104:17)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":101:21)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":101:35)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":101:48)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":101:51)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":101:65)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":102:17)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":103:21)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":106:43)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":106:29)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":106:17)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":108:29)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":108:24)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":108:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":108:40)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":110:20)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":111:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":114:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":111:17)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":111:33)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":112:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":113:30)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":113:17)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":115:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":118:13)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":115:17)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":115:33)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":116:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":117:30)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":117:17)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":127:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":142:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":127:8)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":128:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":129:9)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":141:9)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":130:13)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":130:34)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":133:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":140:13)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":133:17)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":133:25)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":134:13)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":136:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":138:13)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":135:37)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":135:30)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":135:17)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":139:17)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":409:1)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":415:1)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":411:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":411:14)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":412:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":412:14)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":413:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":413:14)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":414:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":414:14)
#loc177 = loc("/usr/include/stdlib.h":575:1)
#loc178 = loc("/usr/include/stdlib.h":575:41)
#loc179 = loc("/usr/include/time.h":76:1)
#loc180 = loc("/usr/include/time.h":76:38)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":431:15)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":433:15)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":436:15)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":438:15)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":426:1)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":441:1)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":427:1)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":429:27)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":429:22)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":429:5)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":431:5)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":432:5)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":432:58)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":433:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":436:5)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":437:5)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":437:57)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":438:5)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":440:12)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":440:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":230:19)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":243:27)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":150:1)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":247:1)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":152:5)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":152:9)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":154:13)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":154:12)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":154:5)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":155:5)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":226:5)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":155:8)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":156:5)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":157:9)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":225:9)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":162:13)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":162:17)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":163:13)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":163:32)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":164:13)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":164:35)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":165:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":165:35)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":166:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":166:45)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":167:13)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":210:21)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":177:39)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":177:48)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":177:61)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":177:32)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":177:17)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":177:72)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":178:17)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":181:17)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":178:21)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":178:37)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":179:17)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":180:21)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:24)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:25)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:34)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:37)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:51)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:17)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":182:52)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":183:38)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":183:17)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":184:43)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":184:17)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":185:42)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":185:36)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":185:17)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":185:50)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:17)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":189:17)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:26)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:58)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:59)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:68)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:82)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:21)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":186:88)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":187:17)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":188:21)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":190:17)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":193:17)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":190:28)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":190:42)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":190:21)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":190:61)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":191:17)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":192:21)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":194:39)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":194:53)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":194:59)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":194:32)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":194:17)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":194:63)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":195:17)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":198:17)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":195:21)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":195:37)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":196:17)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":197:21)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:35)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:49)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:62)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:80)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:83)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:30)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:17)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":200:84)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":201:17)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":204:17)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":201:21)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":201:35)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":201:48)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":201:51)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":201:65)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":202:17)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":203:21)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":206:43)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":206:29)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":206:17)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":208:29)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":208:24)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":208:17)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":208:40)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":210:20)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":211:13)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":214:13)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":211:17)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":211:33)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":212:13)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":213:30)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":213:17)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":215:13)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":218:13)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":215:17)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":215:33)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":216:13)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":217:30)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":217:17)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":227:5)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":246:5)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":227:8)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":228:5)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":231:5)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":233:5)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":230:9)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":234:9)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":245:9)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":235:13)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":235:34)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:13)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":244:13)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:17)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:25)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:27)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:30)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:38)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":237:40)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":238:13)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":240:13)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":242:13)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":239:37)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":239:30)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":239:17)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":243:17)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":250:1)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":342:1)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":252:5)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":252:9)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":254:13)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":254:12)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":254:5)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":255:5)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":326:5)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":255:8)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":256:5)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":257:9)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":325:9)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":262:13)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":262:17)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":263:13)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":263:32)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":264:13)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":264:35)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":265:13)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":265:35)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":266:13)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":266:45)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":267:13)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":310:21)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":277:39)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":277:48)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":277:61)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":277:32)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":277:17)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":277:72)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":278:17)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":281:17)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":278:21)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":278:37)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":279:17)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":280:21)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:24)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:25)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:34)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:37)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:51)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:17)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":282:52)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":283:38)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":283:17)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":284:43)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":284:17)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":285:42)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":285:36)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":285:17)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":285:50)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:17)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":289:17)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:26)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:58)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:59)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:68)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:82)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:21)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":286:88)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":287:17)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":288:21)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":290:17)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":293:17)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":290:28)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":290:42)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":290:21)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":290:61)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":291:17)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":292:21)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":294:39)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":294:53)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":294:59)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":294:32)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":294:17)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":294:63)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":295:17)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":298:17)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":295:21)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":295:37)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":296:17)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":297:21)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:35)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:49)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:62)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:80)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:83)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:30)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:17)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":300:84)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":301:17)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":304:17)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":301:21)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":301:35)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":301:48)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":301:51)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":301:65)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":302:17)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":303:21)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":306:43)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":306:29)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":306:17)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":308:29)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":308:24)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":308:17)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":308:40)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":310:20)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":311:13)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":314:13)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":311:17)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":311:33)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":312:13)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":313:30)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":313:17)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":315:13)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":318:13)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":315:17)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":315:33)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":316:13)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":317:30)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":317:17)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":327:5)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":341:5)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":327:8)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":328:5)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":329:9)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":340:9)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":330:13)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":330:34)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:13)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":339:13)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:17)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:25)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:27)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:30)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:38)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":332:40)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":333:13)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":335:13)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":337:13)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":334:37)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":334:30)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":334:17)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":338:27)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":338:17)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":345:1)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":377:1)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":347:5)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":347:9)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":349:13)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":349:12)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":349:5)
#loc508 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":350:5)
#loc509 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":360:5)
#loc510 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":350:8)
#loc511 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":351:5)
#loc512 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":354:5)
#loc513 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":356:5)
#loc514 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":353:19)
#loc515 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":353:9)
#loc516 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":359:16)
#loc517 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":359:9)
#loc518 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":361:5)
#loc519 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":376:5)
#loc520 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":361:8)
#loc521 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":362:5)
#loc522 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":363:9)
#loc523 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":375:9)
#loc524 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":364:13)
#loc525 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":364:34)
#loc526 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":367:13)
#loc527 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":374:13)
#loc528 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":367:17)
#loc529 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":367:25)
#loc530 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":368:13)
#loc531 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":370:13)
#loc532 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":372:13)
#loc533 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":369:37)
#loc534 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":369:30)
#loc535 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":369:17)
#loc536 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":373:27)
#loc537 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":373:17)
#loc538 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":380:1)
#loc539 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":407:1)
#loc540 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":382:5)
#loc541 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":382:9)
#loc542 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":384:13)
#loc543 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":384:12)
#loc544 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":384:5)
#loc545 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":385:5)
#loc546 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":390:5)
#loc547 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":385:8)
#loc548 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":386:5)
#loc549 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":389:16)
#loc550 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":389:9)
#loc551 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":391:5)
#loc552 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":406:5)
#loc553 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":391:8)
#loc554 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":392:5)
#loc555 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":393:9)
#loc556 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":405:9)
#loc557 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":394:13)
#loc558 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":394:34)
#loc559 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":397:13)
#loc560 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":404:13)
#loc561 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":397:17)
#loc562 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":397:25)
#loc563 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":398:13)
#loc564 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":400:13)
#loc565 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":402:13)
#loc566 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":399:37)
#loc567 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":399:30)
#loc568 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":399:17)
#loc569 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":403:27)
#loc570 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_04.c":403:17)
#loc571 = loc(fused[#loc1, #loc2])
#loc572 = loc(fused[#loc3, #loc4])
#loc573 = loc(fused[#loc5, #loc6])
#loc574 = loc(fused[#loc7, #loc8])
#loc575 = loc(fused[#loc9, #loc10])
#loc576 = loc(fused[#loc11, #loc12])
#loc577 = loc(fused[#loc13, #loc14])
#loc578 = loc(fused[#loc15, #loc16])
#loc579 = loc(fused[#loc17, #loc18])
#loc580 = loc(fused[#loc19, #loc20])
#loc581 = loc(fused[#loc22, #loc23])
#loc582 = loc(fused[#loc24, #loc25])
#loc583 = loc(fused[#loc28, #loc26])
#loc584 = loc(fused[#loc29, #loc30])
#loc585 = loc(fused[#loc32, #loc30])
#loc586 = loc(fused[#loc33, #loc34])
#loc587 = loc(fused[#loc35, #loc36])
#loc588 = loc(fused[#loc37, #loc38])
#loc589 = loc(fused[#loc39, #loc40])
#loc590 = loc(fused[#loc41, #loc42])
#loc591 = loc(fused[#loc43, #loc44])
#loc592 = loc(fused[#loc45, #loc46])
#loc593 = loc(fused[#loc51, #loc52])
#loc594 = loc(fused[#loc53, #loc54])
#loc595 = loc(fused[#loc55, #loc56])
#loc596 = loc(fused[#loc57, #loc54])
#loc597 = loc(fused[#loc59, #loc60])
#loc598 = loc(fused[#loc62, #loc63])
#loc599 = loc(fused[#loc64, #loc65])
#loc600 = loc(fused[#loc68, #loc66])
#loc601 = loc(fused[#loc72, #loc69])
#loc602 = loc(fused[#loc76, #loc77])
#loc603 = loc(fused[#loc78, #loc79])
#loc604 = loc(fused[#loc81, #loc82])
#loc605 = loc(fused[#loc83, #loc84])
#loc606 = loc(fused[#loc85, #loc86])
#loc607 = loc(fused[#loc87, #loc79])
#loc608 = loc(fused[#loc89, #loc90])
#loc609 = loc(fused[#loc93, #loc94])
#loc610 = loc(fused[#loc95, #loc90])
#loc611 = loc(fused[#loc101, #loc102])
#loc612 = loc(fused[#loc103, #loc104])
#loc613 = loc(fused[#loc105, #loc106])
#loc614 = loc(fused[#loc107, #loc104])
#loc615 = loc(fused[#loc111, #loc112])
#loc616 = loc(fused[#loc115, #loc116])
#loc617 = loc(fused[#loc117, #loc118])
#loc618 = loc(fused[#loc119, #loc120])
#loc619 = loc(fused[#loc122, #loc123])
#loc620 = loc(fused[#loc124, #loc118])
#loc621 = loc(fused[#loc128, #loc126])
#loc622 = loc(fused[#loc131, #loc132])
#loc623 = loc(fused[#loc134, #loc135])
#loc624 = loc(fused[#loc136, #loc137])
#loc625 = loc(fused[#loc138, #loc135])
#loc626 = loc(fused[#loc141, #loc142])
#loc627 = loc(fused[#loc143, #loc144])
#loc628 = loc(fused[#loc145, #loc142])
#loc629 = loc(fused[#loc148, #loc149])
#loc630 = loc(fused[#loc151, #loc149])
#loc631 = loc(fused[#loc152, #loc153])
#loc632 = loc(fused[#loc154, #loc155])
#loc633 = loc(fused[#loc156, #loc157])
#loc634 = loc(fused[#loc158, #loc159])
#loc635 = loc(fused[#loc160, #loc161, #loc162, #loc157])
#loc636 = loc(fused[#loc167, #loc168])
#loc637 = loc(fused[#loc169, #loc170])
#loc638 = loc(fused[#loc171, #loc172])
#loc639 = loc(fused[#loc173, #loc174])
#loc640 = loc(fused[#loc175, #loc176])
#loc641 = loc(fused[#loc177, #loc178])
#loc642 = loc(fused[#loc179, #loc180])
#loc643 = loc(fused[#loc185, #loc186])
#loc646 = loc(fused[#loc196, #loc197])
#loc647 = loc(fused[#loc200, #loc201])
#loc648 = loc(fused[#loc204, #loc203])
#loc649 = loc(fused[#loc207, #loc208])
#loc650 = loc(fused[#loc209, #loc210])
#loc651 = loc(fused[#loc213, #loc211])
#loc652 = loc(fused[#loc214, #loc215])
#loc653 = loc(fused[#loc217, #loc215])
#loc654 = loc(fused[#loc218, #loc219])
#loc655 = loc(fused[#loc220, #loc221])
#loc656 = loc(fused[#loc222, #loc223])
#loc657 = loc(fused[#loc224, #loc225])
#loc658 = loc(fused[#loc226, #loc227])
#loc659 = loc(fused[#loc228, #loc229])
#loc660 = loc(fused[#loc230, #loc231])
#loc661 = loc(fused[#loc236, #loc237])
#loc662 = loc(fused[#loc238, #loc239])
#loc663 = loc(fused[#loc240, #loc241])
#loc664 = loc(fused[#loc242, #loc239])
#loc665 = loc(fused[#loc244, #loc245])
#loc666 = loc(fused[#loc247, #loc248])
#loc667 = loc(fused[#loc249, #loc250])
#loc668 = loc(fused[#loc252, #loc251])
#loc669 = loc(fused[#loc254, #loc253])
#loc670 = loc(fused[#loc257, #loc258])
#loc671 = loc(fused[#loc259, #loc260])
#loc672 = loc(fused[#loc262, #loc263])
#loc673 = loc(fused[#loc264, #loc265])
#loc674 = loc(fused[#loc266, #loc267])
#loc675 = loc(fused[#loc268, #loc260])
#loc676 = loc(fused[#loc270, #loc271])
#loc677 = loc(fused[#loc274, #loc275])
#loc678 = loc(fused[#loc276, #loc271])
#loc679 = loc(fused[#loc282, #loc283])
#loc680 = loc(fused[#loc284, #loc285])
#loc681 = loc(fused[#loc286, #loc287])
#loc682 = loc(fused[#loc288, #loc285])
#loc683 = loc(fused[#loc292, #loc293])
#loc684 = loc(fused[#loc296, #loc297])
#loc685 = loc(fused[#loc298, #loc299])
#loc686 = loc(fused[#loc300, #loc301])
#loc687 = loc(fused[#loc303, #loc304])
#loc688 = loc(fused[#loc305, #loc299])
#loc689 = loc(fused[#loc309, #loc307])
#loc690 = loc(fused[#loc312, #loc313])
#loc691 = loc(fused[#loc315, #loc316])
#loc692 = loc(fused[#loc317, #loc318])
#loc693 = loc(fused[#loc319, #loc316])
#loc694 = loc(fused[#loc322, #loc323])
#loc695 = loc(fused[#loc324, #loc325])
#loc696 = loc(fused[#loc326, #loc323])
#loc697 = loc(fused[#loc329, #loc330])
#loc698 = loc(fused[#loc332, #loc333, #loc334, #loc330])
#loc699 = loc(fused[#loc336, #loc337])
#loc700 = loc(fused[#loc338, #loc339])
#loc701 = loc(fused[#loc340, #loc341])
#loc702 = loc(fused[#loc342, #loc343])
#loc703 = loc(fused[#loc345, #loc347])
#loc704 = loc(fused[#loc348, #loc349, #loc350, #loc341])
#loc705 = loc(fused[#loc355, #loc356])
#loc706 = loc(fused[#loc357, #loc358])
#loc707 = loc(fused[#loc361, #loc359])
#loc708 = loc(fused[#loc362, #loc363])
#loc709 = loc(fused[#loc365, #loc363])
#loc710 = loc(fused[#loc366, #loc367])
#loc711 = loc(fused[#loc368, #loc369])
#loc712 = loc(fused[#loc370, #loc371])
#loc713 = loc(fused[#loc372, #loc373])
#loc714 = loc(fused[#loc374, #loc375])
#loc715 = loc(fused[#loc376, #loc377])
#loc716 = loc(fused[#loc378, #loc379])
#loc717 = loc(fused[#loc384, #loc385])
#loc718 = loc(fused[#loc386, #loc387])
#loc719 = loc(fused[#loc388, #loc389])
#loc720 = loc(fused[#loc390, #loc387])
#loc721 = loc(fused[#loc392, #loc393])
#loc722 = loc(fused[#loc395, #loc396])
#loc723 = loc(fused[#loc397, #loc398])
#loc724 = loc(fused[#loc400, #loc399])
#loc725 = loc(fused[#loc402, #loc401])
#loc726 = loc(fused[#loc405, #loc406])
#loc727 = loc(fused[#loc407, #loc408])
#loc728 = loc(fused[#loc410, #loc411])
#loc729 = loc(fused[#loc412, #loc413])
#loc730 = loc(fused[#loc414, #loc415])
#loc731 = loc(fused[#loc416, #loc408])
#loc732 = loc(fused[#loc418, #loc419])
#loc733 = loc(fused[#loc422, #loc423])
#loc734 = loc(fused[#loc424, #loc419])
#loc735 = loc(fused[#loc430, #loc431])
#loc736 = loc(fused[#loc432, #loc433])
#loc737 = loc(fused[#loc434, #loc435])
#loc738 = loc(fused[#loc436, #loc433])
#loc739 = loc(fused[#loc440, #loc441])
#loc740 = loc(fused[#loc444, #loc445])
#loc741 = loc(fused[#loc446, #loc447])
#loc742 = loc(fused[#loc448, #loc449])
#loc743 = loc(fused[#loc451, #loc452])
#loc744 = loc(fused[#loc453, #loc447])
#loc745 = loc(fused[#loc457, #loc455])
#loc746 = loc(fused[#loc460, #loc461])
#loc747 = loc(fused[#loc463, #loc464])
#loc748 = loc(fused[#loc465, #loc466])
#loc749 = loc(fused[#loc467, #loc464])
#loc750 = loc(fused[#loc470, #loc471])
#loc751 = loc(fused[#loc472, #loc473])
#loc752 = loc(fused[#loc474, #loc471])
#loc753 = loc(fused[#loc477, #loc478])
#loc754 = loc(fused[#loc480, #loc478])
#loc755 = loc(fused[#loc481, #loc482])
#loc756 = loc(fused[#loc483, #loc484])
#loc757 = loc(fused[#loc485, #loc486])
#loc758 = loc(fused[#loc487, #loc488])
#loc759 = loc(fused[#loc490, #loc492])
#loc760 = loc(fused[#loc493, #loc494, #loc495, #loc486])
#loc761 = loc(fused[#loc501, #loc502])
#loc762 = loc(fused[#loc503, #loc504])
#loc763 = loc(fused[#loc507, #loc505])
#loc764 = loc(fused[#loc508, #loc509])
#loc765 = loc(fused[#loc511, #loc512, #loc513, #loc509])
#loc766 = loc(fused[#loc517, #loc516])
#loc767 = loc(fused[#loc518, #loc519])
#loc768 = loc(fused[#loc521, #loc519])
#loc769 = loc(fused[#loc522, #loc523])
#loc770 = loc(fused[#loc524, #loc525])
#loc771 = loc(fused[#loc526, #loc527])
#loc772 = loc(fused[#loc528, #loc529])
#loc773 = loc(fused[#loc530, #loc531, #loc532, #loc527])
#loc774 = loc(fused[#loc538, #loc539])
#loc775 = loc(fused[#loc540, #loc541])
#loc776 = loc(fused[#loc544, #loc542])
#loc777 = loc(fused[#loc545, #loc546])
#loc778 = loc(fused[#loc548, #loc546])
#loc779 = loc(fused[#loc550, #loc549])
#loc780 = loc(fused[#loc551, #loc552])
#loc781 = loc(fused[#loc554, #loc552])
#loc782 = loc(fused[#loc555, #loc556])
#loc783 = loc(fused[#loc557, #loc558])
#loc784 = loc(fused[#loc559, #loc560])
#loc785 = loc(fused[#loc561, #loc562])
#loc786 = loc(fused[#loc563, #loc564, #loc565, #loc560])
