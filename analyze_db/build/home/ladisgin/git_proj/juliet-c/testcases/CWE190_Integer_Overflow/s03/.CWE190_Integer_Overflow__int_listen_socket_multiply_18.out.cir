!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":263:10)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":263:14)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":263:20)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":263:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc423 = loc(fused[#loc172, #loc173])
#loc424 = loc(fused[#loc174, #loc175])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc356)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc357)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc358)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc359)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc360)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc361)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc362)
  cir.func private @close(!s32i) -> !s32i loc(#loc363)
  cir.func private @printIntLine(!s32i) loc(#loc364)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc366)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc367)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc368)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc369)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc370)
    %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc371)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    cir.goto "source" loc(#loc373)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc37)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc28)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc30)
    cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.scope {
      cir.do {
        %11 = cir.const #cir.int<2> : !s32i loc(#loc40)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %13 = cir.const #cir.int<6> : !s32i loc(#loc42)
        %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
        cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc375)
        cir.scope {
          %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
          %57 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc49)
          %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc377)
          cir.if %59 {
            cir.break loc(#loc51)
          } loc(#loc378)
        } loc(#loc376)
        %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc379)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %17 = cir.const #cir.int<16> : !u64i loc(#loc380)
        cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc381)
        %18 = cir.const #cir.int<2> : !s32i loc(#loc59)
        %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc59)
        %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
        cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc382)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc62)
        %23 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
        %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
        cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc383)
        %25 = cir.const #cir.int<27015> : !s32i loc(#loc66)
        %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc66)
        %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
        %28 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
        cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc384)
        cir.scope {
          %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
          %57 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc386)
          %58 = cir.const #cir.int<16> : !u64i loc(#loc387)
          %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc387)
          %60 = cir.call @bind(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc78)
          %61 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc79)
          %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc388)
          cir.if %63 {
            cir.break loc(#loc81)
          } loc(#loc389)
        } loc(#loc385)
        cir.scope {
          %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          %57 = cir.const #cir.int<5> : !s32i loc(#loc85)
          %58 = cir.call @listen(%56, %57) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc86)
          %59 = cir.const #cir.int<1> : !s32i loc(#loc87)
          %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc87)
          %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc391)
          cir.if %61 {
            cir.break loc(#loc89)
          } loc(#loc392)
        } loc(#loc390)
        %29 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc91)
        %31 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc92)
        %32 = cir.call @accept(%29, %30, %31) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc93)
        cir.store %32, %4 : !s32i, !cir.ptr<!s32i> loc(#loc393)
        cir.scope {
          %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %57 = cir.const #cir.int<1> : !s32i loc(#loc99)
          %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc99)
          %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc395)
          cir.if %59 {
            cir.break loc(#loc101)
          } loc(#loc396)
        } loc(#loc394)
        %33 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc102)
        %34 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
        %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
        %36 = cir.const #cir.int<3> : !s32i loc(#loc104)
        %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc104)
        %38 = cir.const #cir.int<4> : !u64i loc(#loc104)
        %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc104)
        %40 = cir.const #cir.int<2> : !s32i loc(#loc104)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc104)
        %42 = cir.binop(add, %39, %41) : !u64i loc(#loc104)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc105)
        %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc397)
        %46 = cir.const #cir.int<0> : !s32i loc(#loc106)
        %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc107)
        %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc107)
        cir.store %48, %1 : !s32i, !cir.ptr<!s32i> loc(#loc398)
        cir.scope {
          %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %57 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc113)
          %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc400)
          %60 = cir.ternary(%59, true {
            %61 = cir.const #true loc(#loc114)
            cir.yield %61 : !cir.bool loc(#loc114)
          }, false {
            %61 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %62 = cir.const #cir.int<0> : !s32i loc(#loc116)
            %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc401)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc114)
              cir.yield %65 : !cir.bool loc(#loc114)
            }, false {
              %65 = cir.const #false loc(#loc114)
              cir.yield %65 : !cir.bool loc(#loc114)
            }) : (!cir.bool) -> !cir.bool loc(#loc114)
            cir.yield %64 : !cir.bool loc(#loc114)
          }) : (!cir.bool) -> !cir.bool loc(#loc114)
          cir.if %60 {
            cir.break loc(#loc118)
          } loc(#loc402)
        } loc(#loc399)
        %49 = cir.const #cir.int<0> : !s32i loc(#loc119)
        %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc119)
        %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
        %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc121)
        cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc403)
        %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
        %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc123)
        cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
        cir.yield loc(#loc39)
      } while {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc126)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc126)
        cir.condition(%12) loc(#loc126)
      } loc(#loc374)
    } loc(#loc374)
    cir.scope {
      %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc130)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc130)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc406)
      cir.if %14 {
        %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc133)
      } loc(#loc407)
    } loc(#loc405)
    cir.scope {
      %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc136)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc137)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc409)
      cir.if %14 {
        %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc140)
      } loc(#loc410)
    } loc(#loc408)
    cir.goto "sink" loc(#loc411)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc143)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc147)
      %13 = cir.cmp(gt, %11, %12) : !s32i, !cir.bool loc(#loc413)
      cir.if %13 {
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc415)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc150)
        %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc151)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc415)
        %18 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc152)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc153)
      } loc(#loc414)
    } loc(#loc412)
    cir.return loc(#loc20)
  } loc(#loc365)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_multiply_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc417)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc156)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc418)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    cir.return loc(#loc155)
  } loc(#loc416)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc419)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc420)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc421)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc169)
  cir.func @main(%arg0: !s32i loc(fused[#loc172, #loc173]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc174, #loc175])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc423)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc424)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc176)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc177)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc178)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc179)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc166)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc425)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_multiply_18_good() : () -> () loc(#loc181)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc168)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc426)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_multiply_18_bad() : () -> () loc(#loc185)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc169)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc427)
    cir.return %17 : !s32i loc(#loc427)
  } loc(#loc422)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc190)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc430)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc431)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc432)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc433)
    %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc434)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc205)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.goto "source" loc(#loc436)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc209)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc200)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc202)
    cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    cir.scope {
      cir.do {
        %11 = cir.const #cir.int<2> : !s32i loc(#loc212)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc213)
        %13 = cir.const #cir.int<6> : !s32i loc(#loc214)
        %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc215)
        cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc438)
        cir.scope {
          %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %57 = cir.const #cir.int<1> : !s32i loc(#loc221)
          %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc221)
          %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc440)
          cir.if %59 {
            cir.break loc(#loc223)
          } loc(#loc441)
        } loc(#loc439)
        %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc442)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc226)
        %17 = cir.const #cir.int<16> : !u64i loc(#loc443)
        cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc444)
        %18 = cir.const #cir.int<2> : !s32i loc(#loc231)
        %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc231)
        %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
        cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc445)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc233)
        %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc233)
        %23 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
        %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
        cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc446)
        %25 = cir.const #cir.int<27015> : !s32i loc(#loc235)
        %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc235)
        %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc236)
        %28 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
        cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc447)
        cir.scope {
          %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc241)
          %57 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc449)
          %58 = cir.const #cir.int<16> : !u64i loc(#loc450)
          %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc450)
          %60 = cir.call @bind(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc246)
          %61 = cir.const #cir.int<1> : !s32i loc(#loc247)
          %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc247)
          %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc451)
          cir.if %63 {
            cir.break loc(#loc249)
          } loc(#loc452)
        } loc(#loc448)
        cir.scope {
          %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
          %57 = cir.const #cir.int<5> : !s32i loc(#loc253)
          %58 = cir.call @listen(%56, %57) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc254)
          %59 = cir.const #cir.int<1> : !s32i loc(#loc255)
          %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc255)
          %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc454)
          cir.if %61 {
            cir.break loc(#loc257)
          } loc(#loc455)
        } loc(#loc453)
        %29 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc258)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc259)
        %31 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc260)
        %32 = cir.call @accept(%29, %30, %31) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc261)
        cir.store %32, %4 : !s32i, !cir.ptr<!s32i> loc(#loc456)
        cir.scope {
          %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc266)
          %57 = cir.const #cir.int<1> : !s32i loc(#loc267)
          %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc267)
          %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc458)
          cir.if %59 {
            cir.break loc(#loc269)
          } loc(#loc459)
        } loc(#loc457)
        %33 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc270)
        %34 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc271)
        %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc271)
        %36 = cir.const #cir.int<3> : !s32i loc(#loc272)
        %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc272)
        %38 = cir.const #cir.int<4> : !u64i loc(#loc272)
        %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc272)
        %40 = cir.const #cir.int<2> : !s32i loc(#loc272)
        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc272)
        %42 = cir.binop(add, %39, %41) : !u64i loc(#loc272)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc273)
        %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc273)
        %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc460)
        %46 = cir.const #cir.int<0> : !s32i loc(#loc274)
        %47 = cir.call @recv(%33, %35, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc275)
        %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc275)
        cir.store %48, %1 : !s32i, !cir.ptr<!s32i> loc(#loc461)
        cir.scope {
          %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc280)
          %57 = cir.const #cir.int<1> : !s32i loc(#loc281)
          %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc281)
          %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc463)
          %60 = cir.ternary(%59, true {
            %61 = cir.const #true loc(#loc282)
            cir.yield %61 : !cir.bool loc(#loc282)
          }, false {
            %61 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc283)
            %62 = cir.const #cir.int<0> : !s32i loc(#loc284)
            %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc464)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc282)
              cir.yield %65 : !cir.bool loc(#loc282)
            }, false {
              %65 = cir.const #false loc(#loc282)
              cir.yield %65 : !cir.bool loc(#loc282)
            }) : (!cir.bool) -> !cir.bool loc(#loc282)
            cir.yield %64 : !cir.bool loc(#loc282)
          }) : (!cir.bool) -> !cir.bool loc(#loc282)
          cir.if %60 {
            cir.break loc(#loc286)
          } loc(#loc465)
        } loc(#loc462)
        %49 = cir.const #cir.int<0> : !s32i loc(#loc287)
        %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc287)
        %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc288)
        %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc289)
        %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc289)
        cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc466)
        %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc290)
        %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc291)
        cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
        cir.yield loc(#loc211)
      } while {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc294)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc294)
        cir.condition(%12) loc(#loc294)
      } loc(#loc437)
    } loc(#loc437)
    cir.scope {
      %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc297)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc298)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc298)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc469)
      cir.if %14 {
        %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc300)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc301)
      } loc(#loc470)
    } loc(#loc468)
    cir.scope {
      %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc304)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc305)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc305)
      %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc472)
      cir.if %14 {
        %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc307)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc308)
      } loc(#loc473)
    } loc(#loc471)
    cir.goto "sink" loc(#loc474)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc311)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc314)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc315)
      %13 = cir.cmp(gt, %11, %12) : !s32i, !cir.bool loc(#loc476)
      cir.if %13 {
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc319)
          %15 = cir.const #cir.int<2147483647> : !s32i loc(#loc320)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc321)
          %17 = cir.binop(div, %15, %16) : !s32i loc(#loc479)
          %18 = cir.cmp(lt, %14, %17) : !s32i, !cir.bool loc(#loc480)
          cir.if %18 {
            %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc482)
            %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc328)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc327)
            %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc328)
            cir.store %22, %19 : !s32i, !cir.ptr<!s32i> loc(#loc482)
            %23 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc329)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc330)
          } else {
            %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc190)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc190)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc331)
          } loc(#loc481)
        } loc(#loc478)
      } loc(#loc477)
    } loc(#loc475)
    cir.return loc(#loc192)
  } loc(#loc428)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc484)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc336)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.goto "source" loc(#loc486)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc340)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc341)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.goto "sink" loc(#loc488)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc345)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc349)
      %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc490)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc492)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc353)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc352)
        %9 = cir.binop(mul, %7, %8) nsw : !s32i loc(#loc353)
        cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc492)
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc354)
        cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc355)
      } loc(#loc491)
    } loc(#loc489)
    cir.return loc(#loc333)
  } loc(#loc483)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":44:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":128:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":46:5)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":46:9)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":56:9)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":56:13)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":57:9)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":57:28)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":58:9)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":58:31)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":59:9)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":59:31)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":60:9)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":60:41)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":48:12)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":48:5)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":49:5)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":49:10)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":50:1)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":61:9)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":104:17)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":71:35)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":71:44)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":71:57)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":71:28)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":71:13)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":71:68)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":72:13)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":75:13)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":72:17)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":72:33)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":73:13)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":74:17)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:20)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:21)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:30)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:33)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:47)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:13)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":76:48)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":77:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":77:13)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":78:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":78:13)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":79:38)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":79:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":79:13)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":79:46)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":83:13)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:22)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:54)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:55)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:64)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:78)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:17)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":80:84)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":81:13)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":82:17)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":84:13)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":87:13)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":84:24)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":84:38)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":84:17)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":84:57)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":85:13)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":86:17)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":88:35)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":88:49)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":88:55)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":88:28)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":88:13)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":88:59)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":89:13)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":92:13)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":89:17)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":89:33)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":90:13)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":91:17)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:31)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:45)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:58)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:76)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:79)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:26)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:13)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":94:80)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":95:13)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":98:13)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":95:17)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":95:31)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":95:44)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":95:47)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":95:61)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":96:13)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":97:17)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":100:39)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":100:25)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":100:13)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":102:25)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":102:20)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":102:13)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":102:36)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":104:16)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":105:9)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":108:9)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":105:13)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":105:29)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":106:9)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":107:26)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":107:13)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":109:9)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":112:9)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":109:13)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":109:29)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":110:9)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":111:26)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":111:13)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":120:5)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":120:10)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":121:1)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":122:5)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":127:5)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":122:8)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":122:15)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":123:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":125:9)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":125:29)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":125:22)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":126:22)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":126:9)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":248:1)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":252:1)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":250:5)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":250:13)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":251:5)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":251:13)
#loc160 = loc("/usr/include/stdlib.h":575:1)
#loc161 = loc("/usr/include/stdlib.h":575:41)
#loc162 = loc("/usr/include/time.h":76:1)
#loc163 = loc("/usr/include/time.h":76:38)
#loc164 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc165 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":268:15)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":270:15)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":273:15)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":275:15)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":263:1)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":278:1)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":264:1)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":266:27)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":266:22)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":266:5)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":268:5)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":269:5)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":269:65)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":270:5)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":273:5)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":274:5)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":274:64)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":275:5)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":277:12)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":277:5)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":223:23)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":135:1)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":226:1)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":137:5)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":137:9)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":147:9)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":147:13)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":148:9)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":148:28)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":149:9)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":149:31)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":150:9)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":150:31)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":151:9)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":151:41)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":139:12)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":139:5)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":140:5)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":140:10)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":141:1)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":152:9)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":195:17)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":162:35)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":162:44)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":162:57)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":162:28)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":162:13)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":162:68)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":163:13)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":166:13)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":163:17)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":163:33)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":164:13)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":165:17)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:20)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:21)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:30)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:33)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:47)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:13)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":167:48)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":168:34)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":168:13)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":169:39)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":169:13)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":170:38)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":170:32)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":170:13)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":170:46)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:13)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":174:13)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:22)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:54)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:55)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:64)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:78)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":171:84)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":172:13)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":173:17)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":175:13)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":178:13)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":175:24)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":175:38)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":175:17)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":175:57)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":176:13)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":177:17)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":179:35)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":179:49)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":179:55)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":179:28)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":179:13)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":179:59)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":180:13)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":183:13)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":180:17)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":180:33)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":181:13)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":182:17)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:31)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:45)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:58)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:76)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:79)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:26)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:13)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":185:80)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":186:13)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":189:13)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":186:17)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":186:31)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":186:44)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":186:47)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":186:61)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":187:13)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":188:17)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":191:39)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":191:25)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":191:13)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":193:25)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":193:20)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":193:13)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":193:36)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":195:16)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":196:9)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":199:9)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":196:13)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":196:29)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":197:9)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":198:26)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":198:13)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":200:9)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":203:9)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":200:13)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":200:29)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":201:9)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":202:26)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":202:13)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":211:5)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":211:10)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":212:1)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":213:5)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":225:5)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":213:8)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":213:15)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":214:5)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":216:9)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":224:9)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":216:13)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":216:21)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":216:29)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":216:30)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":217:9)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":220:9)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":222:9)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":218:13)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":218:33)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":218:26)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":219:26)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":219:13)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":223:13)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":229:1)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":246:1)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":231:5)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":231:9)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":233:12)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":233:5)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":234:5)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":234:10)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":235:1)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":237:12)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":237:5)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":238:5)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":238:10)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":239:1)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":240:5)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":245:5)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":240:8)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":240:15)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":241:5)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":243:9)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":243:29)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":243:22)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":244:22)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_multiply_18.c":244:9)
#loc356 = loc(fused[#loc1, #loc2])
#loc357 = loc(fused[#loc3, #loc4])
#loc358 = loc(fused[#loc5, #loc6])
#loc359 = loc(fused[#loc7, #loc8])
#loc360 = loc(fused[#loc9, #loc10])
#loc361 = loc(fused[#loc11, #loc12])
#loc362 = loc(fused[#loc13, #loc14])
#loc363 = loc(fused[#loc15, #loc16])
#loc364 = loc(fused[#loc17, #loc18])
#loc365 = loc(fused[#loc19, #loc20])
#loc366 = loc(fused[#loc21, #loc22])
#loc367 = loc(fused[#loc23, #loc24])
#loc368 = loc(fused[#loc25, #loc26])
#loc369 = loc(fused[#loc27, #loc28])
#loc370 = loc(fused[#loc29, #loc30])
#loc371 = loc(fused[#loc31, #loc32])
#loc372 = loc(fused[#loc34, #loc33])
#loc373 = loc(fused[#loc35, #loc36])
#loc374 = loc(fused[#loc38, #loc39])
#loc375 = loc(fused[#loc44, #loc45])
#loc376 = loc(fused[#loc46, #loc47])
#loc377 = loc(fused[#loc48, #loc49])
#loc378 = loc(fused[#loc50, #loc47])
#loc379 = loc(fused[#loc52, #loc53])
#loc380 = loc(fused[#loc55, #loc56])
#loc381 = loc(fused[#loc57, #loc58])
#loc382 = loc(fused[#loc61, #loc59])
#loc383 = loc(fused[#loc65, #loc62])
#loc384 = loc(fused[#loc69, #loc70])
#loc385 = loc(fused[#loc71, #loc72])
#loc386 = loc(fused[#loc74, #loc75])
#loc387 = loc(fused[#loc76, #loc77])
#loc388 = loc(fused[#loc78, #loc79])
#loc389 = loc(fused[#loc80, #loc72])
#loc390 = loc(fused[#loc82, #loc83])
#loc391 = loc(fused[#loc86, #loc87])
#loc392 = loc(fused[#loc88, #loc83])
#loc393 = loc(fused[#loc94, #loc95])
#loc394 = loc(fused[#loc96, #loc97])
#loc395 = loc(fused[#loc98, #loc99])
#loc396 = loc(fused[#loc100, #loc97])
#loc397 = loc(fused[#loc104, #loc105])
#loc398 = loc(fused[#loc108, #loc109])
#loc399 = loc(fused[#loc110, #loc111])
#loc400 = loc(fused[#loc112, #loc113])
#loc401 = loc(fused[#loc115, #loc116])
#loc402 = loc(fused[#loc117, #loc111])
#loc403 = loc(fused[#loc121, #loc119])
#loc404 = loc(fused[#loc124, #loc125])
#loc405 = loc(fused[#loc127, #loc128])
#loc406 = loc(fused[#loc129, #loc130])
#loc407 = loc(fused[#loc131, #loc128])
#loc408 = loc(fused[#loc134, #loc135])
#loc409 = loc(fused[#loc136, #loc137])
#loc410 = loc(fused[#loc138, #loc135])
#loc411 = loc(fused[#loc141, #loc142])
#loc412 = loc(fused[#loc144, #loc145])
#loc413 = loc(fused[#loc146, #loc147])
#loc414 = loc(fused[#loc148, #loc145])
#loc415 = loc(fused[#loc149, #loc150])
#loc416 = loc(fused[#loc154, #loc155])
#loc417 = loc(fused[#loc156, #loc157])
#loc418 = loc(fused[#loc158, #loc159])
#loc419 = loc(fused[#loc160, #loc161])
#loc420 = loc(fused[#loc162, #loc163])
#loc421 = loc(fused[#loc164, #loc165])
#loc422 = loc(fused[#loc170, #loc171])
#loc425 = loc(fused[#loc181, #loc182])
#loc426 = loc(fused[#loc185, #loc186])
#loc427 = loc(fused[#loc189, #loc188])
#loc428 = loc(fused[#loc191, #loc192])
#loc429 = loc(fused[#loc193, #loc194])
#loc430 = loc(fused[#loc195, #loc196])
#loc431 = loc(fused[#loc197, #loc198])
#loc432 = loc(fused[#loc199, #loc200])
#loc433 = loc(fused[#loc201, #loc202])
#loc434 = loc(fused[#loc203, #loc204])
#loc435 = loc(fused[#loc206, #loc205])
#loc436 = loc(fused[#loc207, #loc208])
#loc437 = loc(fused[#loc210, #loc211])
#loc438 = loc(fused[#loc216, #loc217])
#loc439 = loc(fused[#loc218, #loc219])
#loc440 = loc(fused[#loc220, #loc221])
#loc441 = loc(fused[#loc222, #loc219])
#loc442 = loc(fused[#loc224, #loc225])
#loc443 = loc(fused[#loc227, #loc228])
#loc444 = loc(fused[#loc229, #loc230])
#loc445 = loc(fused[#loc232, #loc231])
#loc446 = loc(fused[#loc234, #loc233])
#loc447 = loc(fused[#loc237, #loc238])
#loc448 = loc(fused[#loc239, #loc240])
#loc449 = loc(fused[#loc242, #loc243])
#loc450 = loc(fused[#loc244, #loc245])
#loc451 = loc(fused[#loc246, #loc247])
#loc452 = loc(fused[#loc248, #loc240])
#loc453 = loc(fused[#loc250, #loc251])
#loc454 = loc(fused[#loc254, #loc255])
#loc455 = loc(fused[#loc256, #loc251])
#loc456 = loc(fused[#loc262, #loc263])
#loc457 = loc(fused[#loc264, #loc265])
#loc458 = loc(fused[#loc266, #loc267])
#loc459 = loc(fused[#loc268, #loc265])
#loc460 = loc(fused[#loc272, #loc273])
#loc461 = loc(fused[#loc276, #loc277])
#loc462 = loc(fused[#loc278, #loc279])
#loc463 = loc(fused[#loc280, #loc281])
#loc464 = loc(fused[#loc283, #loc284])
#loc465 = loc(fused[#loc285, #loc279])
#loc466 = loc(fused[#loc289, #loc287])
#loc467 = loc(fused[#loc292, #loc293])
#loc468 = loc(fused[#loc295, #loc296])
#loc469 = loc(fused[#loc297, #loc298])
#loc470 = loc(fused[#loc299, #loc296])
#loc471 = loc(fused[#loc302, #loc303])
#loc472 = loc(fused[#loc304, #loc305])
#loc473 = loc(fused[#loc306, #loc303])
#loc474 = loc(fused[#loc309, #loc310])
#loc475 = loc(fused[#loc312, #loc313])
#loc476 = loc(fused[#loc314, #loc315])
#loc477 = loc(fused[#loc316, #loc313])
#loc478 = loc(fused[#loc317, #loc318])
#loc479 = loc(fused[#loc320, #loc321])
#loc480 = loc(fused[#loc319, #loc322])
#loc481 = loc(fused[#loc323, #loc324, #loc325, #loc318])
#loc482 = loc(fused[#loc326, #loc327])
#loc483 = loc(fused[#loc332, #loc333])
#loc484 = loc(fused[#loc334, #loc335])
#loc485 = loc(fused[#loc337, #loc336])
#loc486 = loc(fused[#loc338, #loc339])
#loc487 = loc(fused[#loc342, #loc341])
#loc488 = loc(fused[#loc343, #loc344])
#loc489 = loc(fused[#loc346, #loc347])
#loc490 = loc(fused[#loc348, #loc349])
#loc491 = loc(fused[#loc350, #loc347])
#loc492 = loc(fused[#loc351, #loc352])
