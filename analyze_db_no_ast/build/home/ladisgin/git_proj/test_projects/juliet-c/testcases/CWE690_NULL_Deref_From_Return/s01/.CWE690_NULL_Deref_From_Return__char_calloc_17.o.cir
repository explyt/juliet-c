!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc83)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc84)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc18)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc19)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc19)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc89)
    %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc26)
      cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
      cir.for : cond {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc94)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%13) loc(#loc30)
      } body {
        cir.scope {
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc32)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc36)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
          cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
        } loc(#loc95)
        cir.yield loc(#loc25)
      } step {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc39)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
        cir.yield loc(#loc92)
      } loc(#loc92)
    } loc(#loc92)
    cir.return loc(#loc11)
  } loc(#loc85)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc97)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc50)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc52)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc53)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc53)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc103)
    %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc52)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc60)
      cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
      cir.for : cond {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc108)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc64)
        cir.condition(%13) loc(#loc64)
      } body {
        cir.scope {
          cir.scope {
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
            %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc111)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc70)
            cir.if %14 {
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc72)
              %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc74)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
              %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc76)
              %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
              %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
              cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
            } loc(#loc112)
          } loc(#loc110)
        } loc(#loc109)
        cir.yield loc(#loc59)
      } step {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc80)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
        cir.yield loc(#loc106)
      } loc(#loc106)
    } loc(#loc106)
    cir.return loc(#loc45)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":33:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":37:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":25:9)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":26:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":27:12)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":27:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":29:20)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":29:27)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":29:31)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":29:42)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":29:43)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":29:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":36:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:13)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:16)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:20)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:18)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":31:5)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":33:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":33:16)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":34:19)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":34:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":35:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":35:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:24)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":30:23)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":63:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":66:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":65:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":65:13)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":44:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":61:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":46:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":46:9)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":47:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":47:12)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":48:12)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":48:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":50:20)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":50:27)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":50:31)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":50:42)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":50:43)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":50:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":60:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:13)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:16)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:20)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:18)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":52:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":54:9)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":59:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":54:13)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":54:21)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":54:18)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":55:9)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":56:13)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":56:20)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":56:26)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":57:23)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":57:13)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":58:13)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":58:18)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:24)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_calloc_17.c":51:23)
#loc81 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc3, #loc4])
#loc83 = loc(fused[#loc6, #loc7])
#loc84 = loc(fused[#loc8, #loc9])
#loc85 = loc(fused[#loc10, #loc11])
#loc86 = loc(fused[#loc12, #loc13])
#loc87 = loc(fused[#loc14, #loc15])
#loc88 = loc(fused[#loc17, #loc16])
#loc89 = loc(fused[#loc20, #loc21])
#loc90 = loc(fused[#loc18, #loc22])
#loc91 = loc(fused[#loc23, #loc22])
#loc92 = loc(fused[#loc24, #loc25])
#loc93 = loc(fused[#loc27, #loc26])
#loc94 = loc(fused[#loc28, #loc29])
#loc95 = loc(fused[#loc31, #loc25])
#loc96 = loc(fused[#loc39, #loc38])
#loc97 = loc(fused[#loc40, #loc41])
#loc98 = loc(fused[#loc42, #loc43])
#loc99 = loc(fused[#loc44, #loc45])
#loc100 = loc(fused[#loc46, #loc47])
#loc101 = loc(fused[#loc48, #loc49])
#loc102 = loc(fused[#loc51, #loc50])
#loc103 = loc(fused[#loc54, #loc55])
#loc104 = loc(fused[#loc52, #loc56])
#loc105 = loc(fused[#loc57, #loc56])
#loc106 = loc(fused[#loc58, #loc59])
#loc107 = loc(fused[#loc61, #loc60])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc65, #loc59])
#loc110 = loc(fused[#loc66, #loc67])
#loc111 = loc(fused[#loc68, #loc69])
#loc112 = loc(fused[#loc71, #loc67])
#loc113 = loc(fused[#loc80, #loc79])
