!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc114 = loc("CWE367_TOC_TOU__stat_16.c":133:10)
#loc115 = loc("CWE367_TOC_TOU__stat_16.c":133:14)
#loc116 = loc("CWE367_TOC_TOU__stat_16.c":133:20)
#loc117 = loc("CWE367_TOC_TOU__stat_16.c":133:32)
!ty_timespec = !cir.struct<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
#loc245 = loc(fused[#loc114, #loc115])
#loc246 = loc(fused[#loc116, #loc117])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.struct<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc202)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc205)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc206)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc207)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc208)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc210)
  cir.func no_proto @CWE367_TOC_TOU__stat_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc25)
        cir.condition(%1) loc(#loc25)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc214)
          %1 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc215)
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc216)
          %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc214)
          cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc214)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc34)
          cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
            %10 = cir.const #cir.int<100> : !s32i loc(#loc38)
            %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
            %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
            %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
            cir.if %16 {
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc43)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
              %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc44)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
              %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc46)
              cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc220)
            } loc(#loc219)
          } loc(#loc217)
          cir.scope {
            %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
            %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
            %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc51)
            %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc222)
            cir.if %14 {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
              %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc53)
              %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
              %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
              %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc56)
              %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc224)
              %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc57)
              cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc225)
            } loc(#loc223)
          } loc(#loc221)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
            %10 = cir.call @stat(%9, %1) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc61)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc63)
            %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc227)
            cir.if %13 {
              %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc66)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
            } loc(#loc228)
          } loc(#loc226)
          %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
          %7 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc69)
          cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc229)
          cir.scope {
            %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc76)
            %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc231)
            cir.if %12 {
              %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc79)
              cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
            } loc(#loc232)
          } loc(#loc230)
          cir.scope {
            %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %13 = cir.const #cir.int<11> : !u64i loc(#loc234)
            %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc85)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc87)
            %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc87)
            %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc235)
            cir.if %18 {
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc89)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc90)
              cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
            } loc(#loc236)
          } loc(#loc233)
          cir.scope {
            %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc95)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc238)
            cir.if %12 {
              %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc98)
            } loc(#loc239)
          } loc(#loc237)
        } loc(#loc213)
        cir.break loc(#loc99)
      } loc(#loc212)
    } loc(#loc212)
    cir.return loc(#loc22)
  } loc(#loc211)
  cir.func no_proto @CWE367_TOC_TOU__stat_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    cir.return loc(#loc101)
  } loc(#loc240)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc242)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc111)
  cir.func @main(%arg0: !s32i loc(fused[#loc114, #loc115]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc116, #loc117])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc245)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc246)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc118)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc119)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc120)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc120)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc121)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc108)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %8 = cir.get_global @CWE367_TOC_TOU__stat_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call @CWE367_TOC_TOU__stat_16_good() : () -> () loc(#loc123)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc109)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc110)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %13 = cir.get_global @CWE367_TOC_TOU__stat_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call @CWE367_TOC_TOU__stat_16_bad() : () -> () loc(#loc127)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc111)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc130)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    cir.return %17 : !s32i loc(#loc249)
  } loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc132)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc137)
        cir.condition(%1) loc(#loc137)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc253)
          %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc254)
          %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc253)
          cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc253)
          %3 = cir.const #cir.int<1> : !s32i loc(#loc143)
          %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc144)
          cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc254)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc148)
            %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc203)
            %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
            %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc150)
            %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
            %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc256)
            cir.if %15 {
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc153)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc153)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc154)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc155)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc155)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc156)
              %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc157)
              cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc258)
            } loc(#loc257)
          } loc(#loc255)
          cir.scope {
            %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc160)
            %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
            %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc160)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc162)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc162)
            %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc260)
            cir.if %13 {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc164)
              %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc164)
              %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc165)
              %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
              %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc165)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc167)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc167)
              %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc262)
              %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc168)
              cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc263)
            } loc(#loc261)
          } loc(#loc259)
          %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc170)
          %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc171)
          cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc264)
          cir.scope {
            %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc177)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc178)
            %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc266)
            cir.if %11 {
              %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc180)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc181)
              cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc180)
            } loc(#loc267)
          } loc(#loc265)
          cir.scope {
            %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc132)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc132)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
            %12 = cir.const #cir.int<12> : !u64i loc(#loc269)
            %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc187)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc189)
            %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc189)
            %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc270)
            cir.if %17 {
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc191)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc192)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc191)
            } loc(#loc271)
          } loc(#loc268)
          cir.scope {
            %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc196)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc197)
            %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc273)
            cir.if %11 {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc200)
            } loc(#loc274)
          } loc(#loc272)
        } loc(#loc252)
        cir.break loc(#loc201)
      } loc(#loc251)
    } loc(#loc251)
    cir.return loc(#loc134)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_16.c":47:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/sys/stat.h":205:1)
#loc11 = loc("/usr/include/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_16.c":65:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_16.c":37:1)
#loc22 = loc("CWE367_TOC_TOU__stat_16.c":76:1)
#loc23 = loc("CWE367_TOC_TOU__stat_16.c":39:5)
#loc24 = loc("CWE367_TOC_TOU__stat_16.c":75:5)
#loc25 = loc("CWE367_TOC_TOU__stat_16.c":39:11)
#loc26 = loc("CWE367_TOC_TOU__stat_16.c":41:9)
#loc27 = loc("CWE367_TOC_TOU__stat_16.c":73:9)
#loc28 = loc("CWE367_TOC_TOU__stat_16.c":42:13)
#loc29 = loc("CWE367_TOC_TOU__stat_16.c":42:34)
#loc30 = loc("CWE367_TOC_TOU__stat_16.c":43:13)
#loc31 = loc("CWE367_TOC_TOU__stat_16.c":43:25)
#loc32 = loc("CWE367_TOC_TOU__stat_16.c":44:13)
#loc33 = loc("CWE367_TOC_TOU__stat_16.c":44:29)
#loc34 = loc("CWE367_TOC_TOU__stat_16.c":44:28)
#loc35 = loc("CWE367_TOC_TOU__stat_16.c":45:13)
#loc36 = loc("CWE367_TOC_TOU__stat_16.c":50:13)
#loc37 = loc("CWE367_TOC_TOU__stat_16.c":45:23)
#loc38 = loc("CWE367_TOC_TOU__stat_16.c":45:33)
#loc39 = loc("CWE367_TOC_TOU__stat_16.c":45:38)
#loc40 = loc("CWE367_TOC_TOU__stat_16.c":45:17)
#loc41 = loc("CWE367_TOC_TOU__stat_16.c":45:48)
#loc42 = loc("CWE367_TOC_TOU__stat_16.c":46:13)
#loc43 = loc("CWE367_TOC_TOU__stat_16.c":47:17)
#loc44 = loc("CWE367_TOC_TOU__stat_16.c":49:31)
#loc45 = loc("CWE367_TOC_TOU__stat_16.c":49:26)
#loc46 = loc("CWE367_TOC_TOU__stat_16.c":49:17)
#loc47 = loc("CWE367_TOC_TOU__stat_16.c":51:13)
#loc48 = loc("CWE367_TOC_TOU__stat_16.c":54:13)
#loc49 = loc("CWE367_TOC_TOU__stat_16.c":51:17)
#loc50 = loc("CWE367_TOC_TOU__stat_16.c":51:24)
#loc51 = loc("CWE367_TOC_TOU__stat_16.c":51:36)
#loc52 = loc("CWE367_TOC_TOU__stat_16.c":52:13)
#loc53 = loc("CWE367_TOC_TOU__stat_16.c":53:48)
#loc54 = loc("CWE367_TOC_TOU__stat_16.c":53:26)
#loc55 = loc("CWE367_TOC_TOU__stat_16.c":53:33)
#loc56 = loc("CWE367_TOC_TOU__stat_16.c":53:43)
#loc57 = loc("CWE367_TOC_TOU__stat_16.c":53:17)
#loc58 = loc("CWE367_TOC_TOU__stat_16.c":56:13)
#loc59 = loc("CWE367_TOC_TOU__stat_16.c":59:13)
#loc60 = loc("CWE367_TOC_TOU__stat_16.c":56:22)
#loc61 = loc("CWE367_TOC_TOU__stat_16.c":56:17)
#loc62 = loc("CWE367_TOC_TOU__stat_16.c":56:49)
#loc63 = loc("CWE367_TOC_TOU__stat_16.c":56:48)
#loc64 = loc("CWE367_TOC_TOU__stat_16.c":57:13)
#loc65 = loc("CWE367_TOC_TOU__stat_16.c":58:17)
#loc66 = loc("CWE367_TOC_TOU__stat_16.c":58:22)
#loc67 = loc("CWE367_TOC_TOU__stat_16.c":60:30)
#loc68 = loc("CWE367_TOC_TOU__stat_16.c":60:40)
#loc69 = loc("CWE367_TOC_TOU__stat_16.c":60:25)
#loc70 = loc("CWE367_TOC_TOU__stat_16.c":60:13)
#loc71 = loc("CWE367_TOC_TOU__stat_16.c":60:46)
#loc72 = loc("CWE367_TOC_TOU__stat_16.c":61:13)
#loc73 = loc("CWE367_TOC_TOU__stat_16.c":64:13)
#loc74 = loc("CWE367_TOC_TOU__stat_16.c":61:17)
#loc75 = loc("CWE367_TOC_TOU__stat_16.c":61:30)
#loc76 = loc("CWE367_TOC_TOU__stat_16.c":61:29)
#loc77 = loc("CWE367_TOC_TOU__stat_16.c":62:13)
#loc78 = loc("CWE367_TOC_TOU__stat_16.c":63:17)
#loc79 = loc("CWE367_TOC_TOU__stat_16.c":63:22)
#loc80 = loc("CWE367_TOC_TOU__stat_16.c":65:13)
#loc81 = loc("CWE367_TOC_TOU__stat_16.c":68:13)
#loc82 = loc("CWE367_TOC_TOU__stat_16.c":65:23)
#loc83 = loc("CWE367_TOC_TOU__stat_16.c":65:50)
#loc84 = loc("CWE367_TOC_TOU__stat_16.c":65:72)
#loc85 = loc("CWE367_TOC_TOU__stat_16.c":65:17)
#loc86 = loc("CWE367_TOC_TOU__stat_16.c":65:79)
#loc87 = loc("CWE367_TOC_TOU__stat_16.c":65:78)
#loc88 = loc("CWE367_TOC_TOU__stat_16.c":66:13)
#loc89 = loc("CWE367_TOC_TOU__stat_16.c":67:17)
#loc90 = loc("CWE367_TOC_TOU__stat_16.c":67:22)
#loc91 = loc("CWE367_TOC_TOU__stat_16.c":69:13)
#loc92 = loc("CWE367_TOC_TOU__stat_16.c":72:13)
#loc93 = loc("CWE367_TOC_TOU__stat_16.c":69:17)
#loc94 = loc("CWE367_TOC_TOU__stat_16.c":69:30)
#loc95 = loc("CWE367_TOC_TOU__stat_16.c":69:29)
#loc96 = loc("CWE367_TOC_TOU__stat_16.c":70:13)
#loc97 = loc("CWE367_TOC_TOU__stat_16.c":71:23)
#loc98 = loc("CWE367_TOC_TOU__stat_16.c":71:17)
#loc99 = loc("CWE367_TOC_TOU__stat_16.c":74:9)
#loc100 = loc("CWE367_TOC_TOU__stat_16.c":119:1)
#loc101 = loc("CWE367_TOC_TOU__stat_16.c":122:1)
#loc102 = loc("CWE367_TOC_TOU__stat_16.c":121:5)
#loc103 = loc("CWE367_TOC_TOU__stat_16.c":121:11)
#loc104 = loc("/usr/include/stdlib.h":575:1)
#loc105 = loc("/usr/include/stdlib.h":575:41)
#loc106 = loc("/usr/include/time.h":76:1)
#loc107 = loc("/usr/include/time.h":76:38)
#loc108 = loc("CWE367_TOC_TOU__stat_16.c":138:15)
#loc109 = loc("CWE367_TOC_TOU__stat_16.c":140:15)
#loc110 = loc("CWE367_TOC_TOU__stat_16.c":143:15)
#loc111 = loc("CWE367_TOC_TOU__stat_16.c":145:15)
#loc112 = loc("CWE367_TOC_TOU__stat_16.c":133:1)
#loc113 = loc("CWE367_TOC_TOU__stat_16.c":148:1)
#loc118 = loc("CWE367_TOC_TOU__stat_16.c":134:1)
#loc119 = loc("CWE367_TOC_TOU__stat_16.c":136:27)
#loc120 = loc("CWE367_TOC_TOU__stat_16.c":136:22)
#loc121 = loc("CWE367_TOC_TOU__stat_16.c":136:5)
#loc122 = loc("CWE367_TOC_TOU__stat_16.c":138:5)
#loc123 = loc("CWE367_TOC_TOU__stat_16.c":139:5)
#loc124 = loc("CWE367_TOC_TOU__stat_16.c":139:34)
#loc125 = loc("CWE367_TOC_TOU__stat_16.c":140:5)
#loc126 = loc("CWE367_TOC_TOU__stat_16.c":143:5)
#loc127 = loc("CWE367_TOC_TOU__stat_16.c":144:5)
#loc128 = loc("CWE367_TOC_TOU__stat_16.c":144:33)
#loc129 = loc("CWE367_TOC_TOU__stat_16.c":145:5)
#loc130 = loc("CWE367_TOC_TOU__stat_16.c":147:12)
#loc131 = loc("CWE367_TOC_TOU__stat_16.c":147:5)
#loc132 = loc("CWE367_TOC_TOU__stat_16.c":106:33)
#loc133 = loc("CWE367_TOC_TOU__stat_16.c":83:1)
#loc134 = loc("CWE367_TOC_TOU__stat_16.c":117:1)
#loc135 = loc("CWE367_TOC_TOU__stat_16.c":85:5)
#loc136 = loc("CWE367_TOC_TOU__stat_16.c":116:5)
#loc137 = loc("CWE367_TOC_TOU__stat_16.c":85:11)
#loc138 = loc("CWE367_TOC_TOU__stat_16.c":87:9)
#loc139 = loc("CWE367_TOC_TOU__stat_16.c":114:9)
#loc140 = loc("CWE367_TOC_TOU__stat_16.c":88:13)
#loc141 = loc("CWE367_TOC_TOU__stat_16.c":88:34)
#loc142 = loc("CWE367_TOC_TOU__stat_16.c":89:13)
#loc143 = loc("CWE367_TOC_TOU__stat_16.c":89:29)
#loc144 = loc("CWE367_TOC_TOU__stat_16.c":89:28)
#loc145 = loc("CWE367_TOC_TOU__stat_16.c":90:13)
#loc146 = loc("CWE367_TOC_TOU__stat_16.c":95:13)
#loc147 = loc("CWE367_TOC_TOU__stat_16.c":90:23)
#loc148 = loc("CWE367_TOC_TOU__stat_16.c":90:33)
#loc149 = loc("CWE367_TOC_TOU__stat_16.c":90:38)
#loc150 = loc("CWE367_TOC_TOU__stat_16.c":90:17)
#loc151 = loc("CWE367_TOC_TOU__stat_16.c":90:48)
#loc152 = loc("CWE367_TOC_TOU__stat_16.c":91:13)
#loc153 = loc("CWE367_TOC_TOU__stat_16.c":92:27)
#loc154 = loc("CWE367_TOC_TOU__stat_16.c":92:17)
#loc155 = loc("CWE367_TOC_TOU__stat_16.c":94:31)
#loc156 = loc("CWE367_TOC_TOU__stat_16.c":94:26)
#loc157 = loc("CWE367_TOC_TOU__stat_16.c":94:17)
#loc158 = loc("CWE367_TOC_TOU__stat_16.c":96:13)
#loc159 = loc("CWE367_TOC_TOU__stat_16.c":99:13)
#loc160 = loc("CWE367_TOC_TOU__stat_16.c":96:17)
#loc161 = loc("CWE367_TOC_TOU__stat_16.c":96:24)
#loc162 = loc("CWE367_TOC_TOU__stat_16.c":96:36)
#loc163 = loc("CWE367_TOC_TOU__stat_16.c":97:13)
#loc164 = loc("CWE367_TOC_TOU__stat_16.c":98:48)
#loc165 = loc("CWE367_TOC_TOU__stat_16.c":98:26)
#loc166 = loc("CWE367_TOC_TOU__stat_16.c":98:33)
#loc167 = loc("CWE367_TOC_TOU__stat_16.c":98:43)
#loc168 = loc("CWE367_TOC_TOU__stat_16.c":98:17)
#loc169 = loc("CWE367_TOC_TOU__stat_16.c":101:30)
#loc170 = loc("CWE367_TOC_TOU__stat_16.c":101:40)
#loc171 = loc("CWE367_TOC_TOU__stat_16.c":101:25)
#loc172 = loc("CWE367_TOC_TOU__stat_16.c":101:13)
#loc173 = loc("CWE367_TOC_TOU__stat_16.c":101:46)
#loc174 = loc("CWE367_TOC_TOU__stat_16.c":102:13)
#loc175 = loc("CWE367_TOC_TOU__stat_16.c":105:13)
#loc176 = loc("CWE367_TOC_TOU__stat_16.c":102:17)
#loc177 = loc("CWE367_TOC_TOU__stat_16.c":102:30)
#loc178 = loc("CWE367_TOC_TOU__stat_16.c":102:29)
#loc179 = loc("CWE367_TOC_TOU__stat_16.c":103:13)
#loc180 = loc("CWE367_TOC_TOU__stat_16.c":104:17)
#loc181 = loc("CWE367_TOC_TOU__stat_16.c":104:22)
#loc182 = loc("CWE367_TOC_TOU__stat_16.c":106:13)
#loc183 = loc("CWE367_TOC_TOU__stat_16.c":109:13)
#loc184 = loc("CWE367_TOC_TOU__stat_16.c":106:23)
#loc185 = loc("CWE367_TOC_TOU__stat_16.c":106:51)
#loc186 = loc("CWE367_TOC_TOU__stat_16.c":106:74)
#loc187 = loc("CWE367_TOC_TOU__stat_16.c":106:17)
#loc188 = loc("CWE367_TOC_TOU__stat_16.c":106:81)
#loc189 = loc("CWE367_TOC_TOU__stat_16.c":106:80)
#loc190 = loc("CWE367_TOC_TOU__stat_16.c":107:13)
#loc191 = loc("CWE367_TOC_TOU__stat_16.c":108:17)
#loc192 = loc("CWE367_TOC_TOU__stat_16.c":108:22)
#loc193 = loc("CWE367_TOC_TOU__stat_16.c":110:13)
#loc194 = loc("CWE367_TOC_TOU__stat_16.c":113:13)
#loc195 = loc("CWE367_TOC_TOU__stat_16.c":110:17)
#loc196 = loc("CWE367_TOC_TOU__stat_16.c":110:30)
#loc197 = loc("CWE367_TOC_TOU__stat_16.c":110:29)
#loc198 = loc("CWE367_TOC_TOU__stat_16.c":111:13)
#loc199 = loc("CWE367_TOC_TOU__stat_16.c":112:23)
#loc200 = loc("CWE367_TOC_TOU__stat_16.c":112:17)
#loc201 = loc("CWE367_TOC_TOU__stat_16.c":115:9)
#loc202 = loc(fused[#loc1, #loc2])
#loc203 = loc(fused[#loc3, #loc4])
#loc204 = loc(fused[#loc5, #loc6])
#loc205 = loc(fused[#loc8, #loc9])
#loc206 = loc(fused[#loc10, #loc11])
#loc207 = loc(fused[#loc12, #loc13])
#loc208 = loc(fused[#loc14, #loc15])
#loc209 = loc(fused[#loc16, #loc17])
#loc210 = loc(fused[#loc19, #loc20])
#loc211 = loc(fused[#loc21, #loc22])
#loc212 = loc(fused[#loc23, #loc24])
#loc213 = loc(fused[#loc26, #loc27])
#loc214 = loc(fused[#loc28, #loc29])
#loc215 = loc(fused[#loc30, #loc31])
#loc216 = loc(fused[#loc32, #loc33])
#loc217 = loc(fused[#loc35, #loc36])
#loc218 = loc(fused[#loc40, #loc41])
#loc219 = loc(fused[#loc42, #loc36])
#loc220 = loc(fused[#loc46, #loc44])
#loc221 = loc(fused[#loc47, #loc48])
#loc222 = loc(fused[#loc49, #loc51])
#loc223 = loc(fused[#loc52, #loc48])
#loc224 = loc(fused[#loc54, #loc56])
#loc225 = loc(fused[#loc57, #loc53])
#loc226 = loc(fused[#loc58, #loc59])
#loc227 = loc(fused[#loc61, #loc62])
#loc228 = loc(fused[#loc64, #loc59])
#loc229 = loc(fused[#loc70, #loc71])
#loc230 = loc(fused[#loc72, #loc73])
#loc231 = loc(fused[#loc74, #loc75])
#loc232 = loc(fused[#loc77, #loc73])
#loc233 = loc(fused[#loc80, #loc81])
#loc234 = loc(fused[#loc83, #loc84])
#loc235 = loc(fused[#loc85, #loc86])
#loc236 = loc(fused[#loc88, #loc81])
#loc237 = loc(fused[#loc91, #loc92])
#loc238 = loc(fused[#loc93, #loc94])
#loc239 = loc(fused[#loc96, #loc92])
#loc240 = loc(fused[#loc100, #loc101])
#loc241 = loc(fused[#loc102, #loc103])
#loc242 = loc(fused[#loc104, #loc105])
#loc243 = loc(fused[#loc106, #loc107])
#loc244 = loc(fused[#loc112, #loc113])
#loc247 = loc(fused[#loc123, #loc124])
#loc248 = loc(fused[#loc127, #loc128])
#loc249 = loc(fused[#loc131, #loc130])
#loc250 = loc(fused[#loc133, #loc134])
#loc251 = loc(fused[#loc135, #loc136])
#loc252 = loc(fused[#loc138, #loc139])
#loc253 = loc(fused[#loc140, #loc141])
#loc254 = loc(fused[#loc142, #loc143])
#loc255 = loc(fused[#loc145, #loc146])
#loc256 = loc(fused[#loc150, #loc151])
#loc257 = loc(fused[#loc152, #loc146])
#loc258 = loc(fused[#loc157, #loc155])
#loc259 = loc(fused[#loc158, #loc159])
#loc260 = loc(fused[#loc160, #loc162])
#loc261 = loc(fused[#loc163, #loc159])
#loc262 = loc(fused[#loc165, #loc167])
#loc263 = loc(fused[#loc168, #loc164])
#loc264 = loc(fused[#loc172, #loc173])
#loc265 = loc(fused[#loc174, #loc175])
#loc266 = loc(fused[#loc176, #loc177])
#loc267 = loc(fused[#loc179, #loc175])
#loc268 = loc(fused[#loc182, #loc183])
#loc269 = loc(fused[#loc185, #loc186])
#loc270 = loc(fused[#loc187, #loc188])
#loc271 = loc(fused[#loc190, #loc183])
#loc272 = loc(fused[#loc193, #loc194])
#loc273 = loc(fused[#loc195, #loc196])
#loc274 = loc(fused[#loc198, #loc194])
