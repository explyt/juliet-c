!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":22:89)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":22:96)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":43:93)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":43:100)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":60:93)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":60:100)
#loc110 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc34, #loc35])
#loc132 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printDoubleLine(!cir.double) loc(#loc108)
  cir.func  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc111)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc12)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc13)
    cir.store %6, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc112)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc114)
      cir.scope {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc20)
        cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc116)
        cir.for : cond {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc22)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc23)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc117)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc24)
          cir.condition(%12) loc(#loc24)
        } body {
          cir.scope {
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc26)
            %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc27)
            %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc28)
            %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc26)
            cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc29)
          } loc(#loc118)
          cir.yield loc(#loc19)
        } step {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc31)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc119)
          cir.yield loc(#loc115)
        } loc(#loc115)
      } loc(#loc115)
    } loc(#loc113)
    cir.return loc(#loc4)
  } loc(#loc109)
  cir.func  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc34, #loc35])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc40)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc37)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc37)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc122)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc41)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc42)
    cir.store %6, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc123)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc125)
      cir.scope {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc49)
        cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc127)
        cir.for : cond {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc52)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc128)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc53)
          cir.condition(%12) loc(#loc53)
        } body {
          cir.scope {
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc55)
            %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc57)
            %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc55)
            cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc58)
          } loc(#loc129)
          cir.yield loc(#loc48)
        } step {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc60)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc130)
          cir.yield loc(#loc126)
        } loc(#loc126)
      } loc(#loc126)
    } loc(#loc124)
    cir.return loc(#loc33)
  } loc(#loc120)
  cir.func  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc63, #loc64])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc69)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc66)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc66)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc133)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc70)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc71)
    cir.store %6, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc134)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc136)
      cir.scope {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc78)
        cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc138)
        cir.for : cond {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc81)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc139)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc82)
          cir.condition(%12) loc(#loc82)
        } body {
          cir.scope {
            %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %10 = cir.cast(int_to_float, %9 : !s32i), !cir.double loc(#loc84)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc85)
            %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!cir.double>, %12 : !s32i), !cir.ptr<!cir.double> loc(#loc87)
            cir.store %10, %13 : !cir.double, !cir.ptr<!cir.double> loc(#loc141)
          } loc(#loc140)
          cir.yield loc(#loc77)
        } step {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc88)
          %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc89)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc142)
          cir.yield loc(#loc137)
        } loc(#loc137)
      } loc(#loc137)
    } loc(#loc135)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc144)
      cir.scope {
        %8 = cir.const #cir.int<0> : !s32i loc(#loc96)
        cir.store %8, %7 : !s32i, !cir.ptr<!s32i> loc(#loc146)
        cir.for : cond {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc99)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc147)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc100)
          cir.condition(%12) loc(#loc100)
        } body {
          cir.scope {
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc102)
            %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %11 = cir.ptr_stride(%9 : !cir.ptr<!cir.double>, %10 : !s32i), !cir.ptr<!cir.double> loc(#loc104)
            %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc102)
            cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc105)
          } loc(#loc148)
          cir.yield loc(#loc95)
        } step {
          %9 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc107)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc149)
          cir.yield loc(#loc145)
        } loc(#loc145)
      } loc(#loc145)
    } loc(#loc143)
    cir.return loc(#loc62)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":36:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":25:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":25:38)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":27:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":27:30)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":23:1)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":27:23)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":27:22)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":29:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":35:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":30:9)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":30:13)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":34:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:15)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:18)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:20)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:19)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":32:9)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":33:29)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":33:34)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":33:35)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":33:13)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:25)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":31:24)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":43:1)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":57:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":46:5)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":46:38)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":48:5)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":48:30)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":44:1)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":48:23)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":48:22)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":50:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":56:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":51:9)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":51:13)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:9)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":55:9)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:15)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:13)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:18)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:20)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:19)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":53:9)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":54:29)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":54:34)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":54:35)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":54:13)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:25)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":52:24)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":60:1)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":81:1)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":63:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":63:38)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":65:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":65:30)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":61:1)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":65:23)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":65:22)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":67:5)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":73:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":68:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":68:13)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":72:9)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:15)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:13)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:18)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:20)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:19)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":70:9)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":71:31)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":71:13)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":71:18)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":71:19)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:25)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":69:24)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":74:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":80:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":75:9)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":75:13)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:9)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":79:9)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:15)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:13)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:18)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:20)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:19)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":77:9)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":78:29)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":78:34)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":78:35)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":78:13)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:25)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_partial_init_64b.c":76:24)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc16, #loc17])
#loc115 = loc(fused[#loc18, #loc19])
#loc116 = loc(fused[#loc21, #loc20])
#loc117 = loc(fused[#loc22, #loc23])
#loc118 = loc(fused[#loc25, #loc19])
#loc119 = loc(fused[#loc31, #loc30])
#loc120 = loc(fused[#loc32, #loc33])
#loc122 = loc(fused[#loc36, #loc37])
#loc123 = loc(fused[#loc38, #loc39])
#loc124 = loc(fused[#loc43, #loc44])
#loc125 = loc(fused[#loc45, #loc46])
#loc126 = loc(fused[#loc47, #loc48])
#loc127 = loc(fused[#loc50, #loc49])
#loc128 = loc(fused[#loc51, #loc52])
#loc129 = loc(fused[#loc54, #loc48])
#loc130 = loc(fused[#loc60, #loc59])
#loc131 = loc(fused[#loc61, #loc62])
#loc133 = loc(fused[#loc65, #loc66])
#loc134 = loc(fused[#loc67, #loc68])
#loc135 = loc(fused[#loc72, #loc73])
#loc136 = loc(fused[#loc74, #loc75])
#loc137 = loc(fused[#loc76, #loc77])
#loc138 = loc(fused[#loc79, #loc78])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc83, #loc77])
#loc141 = loc(fused[#loc85, #loc84])
#loc142 = loc(fused[#loc89, #loc88])
#loc143 = loc(fused[#loc90, #loc91])
#loc144 = loc(fused[#loc92, #loc93])
#loc145 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc97, #loc96])
#loc147 = loc(fused[#loc98, #loc99])
#loc148 = loc(fused[#loc101, #loc95])
#loc149 = loc(fused[#loc107, #loc106])
