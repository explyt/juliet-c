!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_open_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc143)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc144)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc146)
  cir.func private  @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc147)
  cir.func private  @close(!s32i) -> !s32i loc(#loc148)
  cir.func  @_ZN48CWE23_Relative_Path_Traversal__char_file_open_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc152)
    %3 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc152)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc152)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc30)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc156)
        cir.condition(%8) loc(#loc156)
      } body {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc158)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc159)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc40)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc40)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc158)
          cir.scope {
            %11 = cir.const #cir.int<4096> : !s32i loc(#loc44)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc44)
            %13 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc161)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc46)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc162)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc48)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc48)
              cir.store %23, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc54)
                %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc166)
                cir.if %26 {
                  cir.scope {
                    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                    %30 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc60)
                    %32 = cir.const #cir.int<4096> : !s32i loc(#loc61)
                    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc61)
                    %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc169)
                    %36 = cir.cast(integral, %35 : !u64i), !s32i loc(#loc169)
                    %37 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
                    %38 = cir.call @fgets(%31, %36, %37) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc64)
                    %39 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc65)
                    %40 = cir.cmp(eq, %38, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
                    cir.if %40 {
                      %41 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                      %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc67)
                      %43 = cir.const #cir.int<0> : !s8i loc(#loc68)
                      %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                      %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                      %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                      cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc172)
                    } loc(#loc171)
                  } loc(#loc168)
                  %27 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc73)
                } loc(#loc167)
              } loc(#loc165)
            } loc(#loc163)
          } loc(#loc160)
        } loc(#loc157)
        cir.yield loc(#loc29)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc75)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
        cir.yield loc(#loc154)
      } loc(#loc154)
    } loc(#loc154)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc175)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %7 = cir.const #cir.int<2> : !s32i loc(#loc81)
      %8 = cir.const #cir.int<64> : !s32i loc(#loc82)
      %9 = cir.binop(or, %7, %8) : !s32i loc(#loc176)
      %10 = cir.const #cir.int<256> : !s32i loc(#loc83)
      %11 = cir.const #cir.int<128> : !s32i loc(#loc84)
      %12 = cir.binop(or, %10, %11) : !s32i loc(#loc177)
      %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc85)
      cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc178)
      cir.scope {
        %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc92)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc180)
        cir.if %17 {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc95)
        } loc(#loc181)
      } loc(#loc179)
    } loc(#loc174)
    cir.return loc(#loc19)
  } loc(#loc149)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc98)
  cir.func internal private  @_ZN48CWE23_Relative_Path_Traversal__char_file_open_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc186)
    %3 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc186)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc186)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc111)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc114)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc190)
        cir.condition(%8) loc(#loc190)
      } body {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc115)
        %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc98)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc98)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
        cir.yield loc(#loc110)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc118)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
        cir.yield loc(#loc188)
      } loc(#loc188)
    } loc(#loc188)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc193)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %7 = cir.const #cir.int<2> : !s32i loc(#loc124)
      %8 = cir.const #cir.int<64> : !s32i loc(#loc125)
      %9 = cir.binop(or, %7, %8) : !s32i loc(#loc194)
      %10 = cir.const #cir.int<256> : !s32i loc(#loc126)
      %11 = cir.const #cir.int<128> : !s32i loc(#loc127)
      %12 = cir.binop(or, %10, %11) : !s32i loc(#loc195)
      %13 = cir.call @open(%6, %9, %12) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc128)
      cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc196)
      cir.scope {
        %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc135)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc198)
        cir.if %17 {
          %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc199)
      } loc(#loc197)
    } loc(#loc192)
    cir.return loc(#loc100)
  } loc(#loc183)
  cir.func  @_ZN48CWE23_Relative_Path_Traversal__char_file_open_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE23_Relative_Path_Traversal__char_file_open_17L7goodG2BEv() : () -> () loc(#loc141)
    cir.return loc(#loc140)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_open_17.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":61:31)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":61:41)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":67:35)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":46:1)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":85:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":48:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":48:9)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":49:5)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":49:12)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":50:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":50:37)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":51:12)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":51:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":75:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:16)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:20)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":54:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":74:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":56:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":56:41)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":57:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":57:20)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":56:30)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":56:37)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":59:13)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":73:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":59:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":59:30)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":59:40)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":60:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":61:25)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":61:17)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":61:44)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":62:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":72:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":62:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":62:30)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":63:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:21)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":70:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:31)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:36)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:35)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:51)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:64)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:74)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:25)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":65:84)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":66:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":67:25)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":69:41)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":69:25)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":69:30)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":69:37)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":71:28)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":71:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:24)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":52:23)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":76:5)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":84:5)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":77:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":77:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:25)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:31)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:38)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:47)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:55)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:20)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:9)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":79:63)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":80:9)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":83:9)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":80:13)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":80:26)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":80:25)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":81:9)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":82:19)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":82:13)
#loc96 = loc("/usr/include/string.h":149:1)
#loc97 = loc("/usr/include/string.h":150:14)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":101:22)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":92:1)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":112:1)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":94:5)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":94:9)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":95:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":95:12)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":96:5)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":96:37)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":97:12)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":97:5)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":102:5)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:13)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:9)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:16)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:20)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":101:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":101:16)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:24)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":98:23)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":103:5)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":111:5)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":104:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":104:13)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:25)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:31)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:38)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:47)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:55)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:20)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:9)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":106:63)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":107:9)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":110:9)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":107:13)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":107:26)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":107:25)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":108:9)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":109:19)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":109:13)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":114:1)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":117:1)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_file_open_17.cpp":116:5)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc14, #loc15])
#loc148 = loc(fused[#loc16, #loc17])
#loc149 = loc(fused[#loc18, #loc19])
#loc150 = loc(fused[#loc20, #loc21])
#loc151 = loc(fused[#loc22, #loc23])
#loc152 = loc(fused[#loc24, #loc25])
#loc153 = loc(fused[#loc27, #loc26])
#loc154 = loc(fused[#loc28, #loc29])
#loc155 = loc(fused[#loc31, #loc30])
#loc156 = loc(fused[#loc32, #loc33])
#loc157 = loc(fused[#loc34, #loc35])
#loc158 = loc(fused[#loc36, #loc37])
#loc159 = loc(fused[#loc38, #loc39])
#loc160 = loc(fused[#loc42, #loc43])
#loc161 = loc(fused[#loc44, #loc45])
#loc162 = loc(fused[#loc44, #loc46])
#loc163 = loc(fused[#loc47, #loc43])
#loc164 = loc(fused[#loc49, #loc50])
#loc165 = loc(fused[#loc51, #loc52])
#loc166 = loc(fused[#loc53, #loc54])
#loc167 = loc(fused[#loc55, #loc52])
#loc168 = loc(fused[#loc56, #loc57])
#loc169 = loc(fused[#loc61, #loc62])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc66, #loc57])
#loc172 = loc(fused[#loc69, #loc68])
#loc173 = loc(fused[#loc75, #loc74])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc78, #loc79])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc83, #loc84])
#loc178 = loc(fused[#loc86, #loc87])
#loc179 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc90, #loc91])
#loc181 = loc(fused[#loc93, #loc89])
#loc182 = loc(fused[#loc96, #loc97])
#loc183 = loc(fused[#loc99, #loc100])
#loc184 = loc(fused[#loc101, #loc102])
#loc185 = loc(fused[#loc103, #loc104])
#loc186 = loc(fused[#loc105, #loc106])
#loc187 = loc(fused[#loc108, #loc107])
#loc188 = loc(fused[#loc109, #loc110])
#loc189 = loc(fused[#loc112, #loc111])
#loc190 = loc(fused[#loc113, #loc114])
#loc191 = loc(fused[#loc118, #loc117])
#loc192 = loc(fused[#loc119, #loc120])
#loc193 = loc(fused[#loc121, #loc122])
#loc194 = loc(fused[#loc124, #loc125])
#loc195 = loc(fused[#loc126, #loc127])
#loc196 = loc(fused[#loc129, #loc130])
#loc197 = loc(fused[#loc131, #loc132])
#loc198 = loc(fused[#loc133, #loc134])
#loc199 = loc(fused[#loc136, #loc132])
#loc200 = loc(fused[#loc139, #loc140])
