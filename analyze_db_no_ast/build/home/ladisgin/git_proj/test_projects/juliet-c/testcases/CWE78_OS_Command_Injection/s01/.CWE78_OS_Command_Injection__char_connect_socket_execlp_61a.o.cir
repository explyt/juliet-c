!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE78_OS_Command_Injection__char_connect_socket_execlp_61b_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc47)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc48)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_connect_socket_execlp_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc50)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc51)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc51)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc51)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %5 = cir.call @CWE78_OS_Command_Injection__char_connect_socket_execlp_61b_badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc19)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc19)
    %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %14 = cir.call @execlp(%7, %9, %11, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc22)
    cir.return loc(#loc8)
  } loc(#loc49)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_connect_socket_execlp_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc55)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc54)
  cir.func private  @CWE78_OS_Command_Injection__char_connect_socket_execlp_61b_goodG2BSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc56)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc59)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc59)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc59)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %5 = cir.call @CWE78_OS_Command_Injection__char_connect_socket_execlp_61b_goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc38)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc41)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc42)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc42)
    %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc43)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc43)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %14 = cir.call @execlp(%7, %9, %11, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc46)
    cir.return loc(#loc30)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":66:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":66:88)
#loc3 = loc("/usr/include/unistd.h":605:1)
#loc4 = loc("/usr/include/unistd.h":606:14)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":77:12)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":77:38)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":68:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":78:1)
#loc9 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":70:5)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":70:12)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":71:5)
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":71:28)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":72:12)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":72:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":73:81)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":73:12)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":73:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":73:85)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":77:25)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":77:52)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":77:66)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":77:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":99:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":102:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":101:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":101:13)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":85:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":85:92)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":87:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":97:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":89:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":89:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":90:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":90:28)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":91:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":91:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":92:85)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":92:12)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":92:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":92:89)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":96:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":96:25)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":96:38)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":96:52)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":96:66)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_61a.c":96:5)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc3, #loc4])
#loc49 = loc(fused[#loc7, #loc8])
#loc50 = loc(fused[#loc9, #loc10])
#loc51 = loc(fused[#loc11, #loc12])
#loc52 = loc(fused[#loc14, #loc13])
#loc53 = loc(fused[#loc17, #loc18])
#loc54 = loc(fused[#loc23, #loc24])
#loc55 = loc(fused[#loc25, #loc26])
#loc56 = loc(fused[#loc27, #loc28])
#loc57 = loc(fused[#loc29, #loc30])
#loc58 = loc(fused[#loc31, #loc32])
#loc59 = loc(fused[#loc33, #loc34])
#loc60 = loc(fused[#loc36, #loc35])
#loc61 = loc(fused[#loc39, #loc40])
