!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc91)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc95)
    cir.br ^bb1 loc(#loc96)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc14)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc12)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc97)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.int<8> : !u64i loc(#loc9)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc94)
    %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.copy %7 to %1 : !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    %8 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc20)
    %10 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc23)
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc24)
  ^bb7:  // pred: ^bb2
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc13)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc93)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc99)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc100)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc98)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc103)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc43)
    cir.br ^bb2 loc(#loc41)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc41)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc44)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc45)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb10 loc(#loc47)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // pred: ^bb5
    %6 = cir.const #cir.int<8> : !u64i loc(#loc38)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc38)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc38)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %11 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %13 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.copy %0 to %14 : !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.copy %15 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %16 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc58)
    %18 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc60)
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc42)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc34)
  } loc(#loc101)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc72)
    cir.br ^bb2 loc(#loc70)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc70)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<8> : !u64i loc(#loc67)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc67)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc67)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.store %7, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %9 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %11 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    cir.copy %0 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.copy %13 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    %14 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc84)
    %16 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc86)
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc75)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc87)
  ^bb9:  // pred: ^bb2
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb10 loc(#loc90)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc63)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":34:19)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":20:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":37:1)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":26:9)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":26:52)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":27:9)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":27:31)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":22:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":36:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":22:12)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":24:5)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":25:5)
#loc17 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":30:5)
#loc18 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":28:27)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":28:9)
#loc21 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":29:27)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":29:9)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":31:5)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":34:9)
#loc26 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":35:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":95:1)
#loc28 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":99:1)
#loc29 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":97:5)
#loc30 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":97:11)
#loc31 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":98:5)
#loc32 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":98:11)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":44:1)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":67:1)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":54:9)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":54:23)
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":55:9)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":55:52)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":60:13)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":60:35)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":46:5)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":66:5)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":46:12)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":48:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":50:19)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":50:9)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":51:9)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":53:5)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":64:5)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":56:23)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":56:9)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":57:23)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":57:9)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":58:10)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":59:9)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":63:9)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":61:31)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":61:13)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":62:31)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":62:13)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":65:5)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":70:1)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":93:1)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":76:9)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":76:23)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":77:9)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":77:52)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":82:13)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":82:35)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":72:5)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":92:5)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":72:12)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":74:5)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":75:5)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":86:5)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":78:23)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":78:9)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":79:23)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":79:9)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":80:10)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":81:9)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":85:9)
#loc83 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":83:31)
#loc84 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":83:13)
#loc85 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":84:31)
#loc86 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":84:13)
#loc87 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":87:5)
#loc88 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":90:19)
#loc89 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":90:9)
#loc90 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":91:9)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc6, #loc7])
#loc94 = loc(fused[#loc8, #loc9])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc16, #loc17])
#loc98 = loc(fused[#loc27, #loc28])
#loc99 = loc(fused[#loc29, #loc30])
#loc100 = loc(fused[#loc31, #loc32])
#loc101 = loc(fused[#loc33, #loc34])
#loc102 = loc(fused[#loc35, #loc36])
#loc103 = loc(fused[#loc37, #loc38])
#loc104 = loc(fused[#loc39, #loc40])
#loc105 = loc(fused[#loc41, #loc42])
#loc106 = loc(fused[#loc48, #loc49])
#loc107 = loc(fused[#loc51, #loc50])
#loc108 = loc(fused[#loc53, #loc52])
#loc109 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc67])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc70, #loc71])
#loc115 = loc(fused[#loc74, #loc75])
#loc116 = loc(fused[#loc77, #loc76])
#loc117 = loc(fused[#loc79, #loc78])
#loc118 = loc(fused[#loc81, #loc82])
