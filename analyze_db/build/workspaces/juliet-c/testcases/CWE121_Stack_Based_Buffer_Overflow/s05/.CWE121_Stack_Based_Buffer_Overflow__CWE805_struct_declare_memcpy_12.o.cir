!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc119)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc124)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc126)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc126)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
        cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
      } else {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
        cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
      } loc(#loc127)
    } loc(#loc125)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc131)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc133)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc135)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc37)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc37)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc136)
            cir.condition(%21) loc(#loc38)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
              %19 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc41)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
              %21 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
              %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc138)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc44)
              %24 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc45)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
              %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc139)
            } loc(#loc137)
            cir.yield loc(#loc33)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc48)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc49)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc140)
            cir.yield loc(#loc134)
          } loc(#loc134)
        } loc(#loc134)
      } loc(#loc132)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc50)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc52)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc141)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc142)
      cir.libc.memcpy %11 bytes from %7 to %5 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc143)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc58)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
      cir.call @printStructLine(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc60)
    } loc(#loc130)
    cir.return loc(#loc6)
  } loc(#loc121)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc148)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc149)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc151)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc151)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc75)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc75)
      cir.if %6 {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
        cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
      } else {
        %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
        cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
      } loc(#loc152)
    } loc(#loc150)
    cir.scope {
      %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc156)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc158)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc94)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc160)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc96)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc97)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc97)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc161)
            cir.condition(%21) loc(#loc98)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc100)
              %19 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc101)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
              %21 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
              %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc163)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc103)
              %24 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc104)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
              %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc164)
            } loc(#loc162)
            cir.yield loc(#loc93)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc106)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc107)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc165)
            cir.yield loc(#loc159)
          } loc(#loc159)
        } loc(#loc159)
      } loc(#loc157)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc108)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc109)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc110)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc110)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc166)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc167)
      cir.libc.memcpy %11 bytes from %7 to %5 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc168)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc116)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
      cir.call @printStructLine(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc118)
    } loc(#loc155)
    cir.return loc(#loc66)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":21:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":52:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":23:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":23:21)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":24:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":24:35)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":25:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":36:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":26:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":26:33)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":30:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":30:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":35:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":37:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":51:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":38:33)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":39:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":47:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":40:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":40:20)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":46:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:18)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:25)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":43:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":44:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":44:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":44:17)
#loc43 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":45:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":45:24)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":45:17)
#loc47 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":42:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:16)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:34)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:54)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":49:55)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":50:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":50:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":50:32)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":50:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":92:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":95:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":94:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":94:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":60:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":90:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":62:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":62:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":63:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":63:35)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":64:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":64:37)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":65:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":74:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":65:8)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":65:33)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":66:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":69:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":71:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":68:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":68:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":73:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":73:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":75:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":89:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":76:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":76:33)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":77:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":85:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":78:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":78:20)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":84:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:22)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:18)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:25)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:29)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:27)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":81:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":82:36)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":82:24)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":82:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":83:36)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":83:24)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":83:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:35)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":80:34)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:22)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:30)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:34)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:54)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":87:55)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":88:26)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":88:31)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":88:32)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_12.c":88:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc13, #loc14])
#loc126 = loc(fused[#loc15, #loc16])
#loc127 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc128 = loc(fused[#loc21, #loc20])
#loc129 = loc(fused[#loc23, #loc22])
#loc130 = loc(fused[#loc24, #loc25])
#loc131 = loc(fused[#loc26, #loc27])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc30, #loc31])
#loc134 = loc(fused[#loc32, #loc33])
#loc135 = loc(fused[#loc35, #loc34])
#loc136 = loc(fused[#loc36, #loc37])
#loc137 = loc(fused[#loc39, #loc33])
#loc138 = loc(fused[#loc42, #loc40])
#loc139 = loc(fused[#loc46, #loc44])
#loc140 = loc(fused[#loc49, #loc48])
#loc141 = loc(fused[#loc53, #loc54])
#loc142 = loc(fused[#loc52, #loc54])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc61, #loc62])
#loc145 = loc(fused[#loc63, #loc64])
#loc146 = loc(fused[#loc65, #loc66])
#loc147 = loc(fused[#loc67, #loc68])
#loc148 = loc(fused[#loc69, #loc70])
#loc149 = loc(fused[#loc71, #loc72])
#loc150 = loc(fused[#loc73, #loc74])
#loc151 = loc(fused[#loc75, #loc76])
#loc152 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc153 = loc(fused[#loc81, #loc80])
#loc154 = loc(fused[#loc83, #loc82])
#loc155 = loc(fused[#loc84, #loc85])
#loc156 = loc(fused[#loc86, #loc87])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc92, #loc93])
#loc160 = loc(fused[#loc95, #loc94])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc99, #loc93])
#loc163 = loc(fused[#loc102, #loc100])
#loc164 = loc(fused[#loc105, #loc103])
#loc165 = loc(fused[#loc107, #loc106])
#loc166 = loc(fused[#loc111, #loc112])
#loc167 = loc(fused[#loc110, #loc112])
#loc168 = loc(fused[#loc113, #loc114])
