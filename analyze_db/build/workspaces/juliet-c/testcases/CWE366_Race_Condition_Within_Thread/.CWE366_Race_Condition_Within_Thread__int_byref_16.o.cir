!s32i = !cir.int<s, 32>
!ty__stdThread = !cir.record<struct "_stdThread" incomplete>
!ty__stdThreadLock = !cir.record<struct "_stdThreadLock" incomplete>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":24:23)
#loc6 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":24:29)
#loc70 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:25)
#loc79 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:25)
#loc102 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":38:24)
#loc103 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":38:30)
#loc172 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:25)
#loc181 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:25)
#true = #cir.bool<true> : !cir.bool
#loc194 = loc(fused[#loc5, #loc6])
#loc233 = loc(fused[#loc102, #loc103])
module @"/workspaces/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @stdThreadCreate(!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc192)
  cir.func internal private @helperBad(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc196)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc11)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb2 loc(#loc197)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %7 = cir.const #cir.int<1000000> : !s32i loc(#loc17)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc199)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc200)
  ^bb4:  // pred: ^bb3
    %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc21)
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc26)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb2 loc(#loc197)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc193)
  cir.func private @stdThreadJoin(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc203)
  cir.func private @stdThreadDestroy(!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc204)
  cir.func private @printIntLine(!s32i) loc(#loc205)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valBadSink"] {alignment = 4 : i64} loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc210)
  ^bb2:  // 2 preds: ^bb1, ^bb39
    %3 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %4 ^bb3, ^bb40 loc(#loc43)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc211)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc36)
    cir.store %5, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc207)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc38)
    cir.store %6, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc208)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb6 loc(#loc214)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc51)
    %9 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc215)
    %10 = cir.call @stdThreadCreate(%8, %9, %0) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc54)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc54)
    %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc54)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc216)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc56)
    cir.store %13, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc217)
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc50)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc218)
  ^bb10:  // pred: ^bb9
    %14 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc60)
    %15 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc219)
    %16 = cir.call @stdThreadCreate(%14, %15, %1) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc63)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc63)
    %18 = cir.unary(not, %17) : !cir.bool, !cir.bool loc(#loc63)
    cir.brcond %18 ^bb11, ^bb12 loc(#loc220)
  ^bb11:  // pred: ^bb10
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc65)
    cir.store %19, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc221)
    cir.br ^bb12 loc(#loc59)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc59)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // pred: ^bb13
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc69)
    %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc69)
    cir.brcond %21 ^bb15, ^bb20 loc(#loc70)
  ^bb15:  // pred: ^bb14
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc71)
    %23 = cir.call @stdThreadJoin(%22) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc72)
    %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %24 ^bb16, ^bb17 loc(#loc70)
  ^bb16:  // pred: ^bb15
    %25 = cir.const #true loc(#loc70)
    cir.br ^bb18(%25 : !cir.bool) loc(#loc70)
  ^bb17:  // pred: ^bb15
    %26 = cir.const #false loc(#loc70)
    cir.br ^bb18(%26 : !cir.bool) loc(#loc70)
  ^bb18(%27: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:25)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc70)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%27 : !cir.bool) loc(#loc70)
  ^bb20:  // pred: ^bb14
    %28 = cir.const #false loc(#loc70)
    cir.br ^bb21(%28 : !cir.bool) loc(#loc70)
  ^bb21(%29: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:25)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc70)
  ^bb22:  // pred: ^bb21
    cir.brcond %29 ^bb23, ^bb24 loc(#loc223)
  ^bb23:  // pred: ^bb22
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc74)
    %31 = cir.call @stdThreadDestroy(%30) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc75)
    cir.br ^bb24 loc(#loc68)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc68)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc224)
  ^bb26:  // pred: ^bb25
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc78)
    %33 = cir.cast(ptr_to_bool, %32 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc78)
    cir.brcond %33 ^bb27, ^bb32 loc(#loc79)
  ^bb27:  // pred: ^bb26
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc80)
    %35 = cir.call @stdThreadJoin(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc81)
    %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %36 ^bb28, ^bb29 loc(#loc79)
  ^bb28:  // pred: ^bb27
    %37 = cir.const #true loc(#loc79)
    cir.br ^bb30(%37 : !cir.bool) loc(#loc79)
  ^bb29:  // pred: ^bb27
    %38 = cir.const #false loc(#loc79)
    cir.br ^bb30(%38 : !cir.bool) loc(#loc79)
  ^bb30(%39: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:25)):  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc79)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33(%39 : !cir.bool) loc(#loc79)
  ^bb32:  // pred: ^bb26
    %40 = cir.const #false loc(#loc79)
    cir.br ^bb33(%40 : !cir.bool) loc(#loc79)
  ^bb33(%41: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:25)):  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc79)
  ^bb34:  // pred: ^bb33
    cir.brcond %41 ^bb35, ^bb36 loc(#loc225)
  ^bb35:  // pred: ^bb34
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc83)
    %43 = cir.call @stdThreadDestroy(%42) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc84)
    cir.br ^bb36 loc(#loc77)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc77)
  ^bb37:  // pred: ^bb36
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc86)
    cir.br ^bb38 loc(#loc46)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc87)
  ^bb39:  // no predecessors
    cir.br ^bb2 loc(#loc42)
  ^bb40:  // 2 preds: ^bb2, ^bb38
    cir.br ^bb41 loc(#loc42)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc34)
  } loc(#loc206)
  cir.func no_proto @CWE366_Race_Condition_Within_Thread__int_byref_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc227)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc226)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc228)
  cir.global "private" internal dsolocal @gGoodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc229)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc230)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc231)
  cir.func internal private @helperGood(%arg0: !cir.ptr<!void> loc(fused[#loc102, #loc103])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["args", init] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pIntArgs", init] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc235)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc108)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc105)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc105)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc234)
    %5 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc229)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc109)
    cir.call @stdThreadLockAcquire(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc110)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb2 loc(#loc236)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %9 = cir.const #cir.int<1000000> : !s32i loc(#loc116)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc238)
    cir.brcond %10 ^bb3, ^bb7 loc(#loc117)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc239)
  ^bb4:  // pred: ^bb3
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc120)
    %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc112)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %17 = cir.unary(inc, %16) nsw : !s32i, !s32i loc(#loc125)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb2 loc(#loc236)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc112)
  ^bb8:  // pred: ^bb7
    %18 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc229)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc126)
    cir.call @stdThreadLockRelease(%19) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc127)
    cir.return loc(#loc101)
  } loc(#loc232)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc242)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadA", init] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.alloca !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>>, ["threadB", init] {alignment = 8 : i64} loc(#loc245)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["valGoodSink"] {alignment = 4 : i64} loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc247)
  ^bb2:  // 2 preds: ^bb1, ^bb43
    %3 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc140)
    cir.brcond %4 ^bb3, ^bb44 loc(#loc140)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc248)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc249)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc133)
    cir.store %5, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc244)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc135)
    cir.store %6, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc245)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb6 loc(#loc251)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc229)
    %9 = cir.call @stdThreadLockCreate(%8) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc148)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc148)
    %11 = cir.unary(not, %10) : !cir.bool, !cir.bool loc(#loc148)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc252)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc150)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc147)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc253)
  ^bb10:  // pred: ^bb9
    %12 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc153)
    %13 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc254)
    %14 = cir.call @stdThreadCreate(%12, %13, %0) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc156)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc156)
    %16 = cir.unary(not, %15) : !cir.bool, !cir.bool loc(#loc156)
    cir.brcond %16 ^bb11, ^bb12 loc(#loc255)
  ^bb11:  // pred: ^bb10
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc158)
    cir.store %17, %0 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc256)
    cir.br ^bb12 loc(#loc152)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc152)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc257)
  ^bb14:  // pred: ^bb13
    %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc162)
    %19 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc258)
    %20 = cir.call @stdThreadCreate(%18, %19, %1) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!ty__stdThread>>) -> !s32i loc(#loc165)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc165)
    %22 = cir.unary(not, %21) : !cir.bool, !cir.bool loc(#loc165)
    cir.brcond %22 ^bb15, ^bb16 loc(#loc259)
  ^bb15:  // pred: ^bb14
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!ty__stdThread> loc(#loc167)
    cir.store %23, %1 : !cir.ptr<!ty__stdThread>, !cir.ptr<!cir.ptr<!ty__stdThread>> loc(#loc260)
    cir.br ^bb16 loc(#loc161)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc161)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc261)
  ^bb18:  // pred: ^bb17
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc171)
    %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc171)
    cir.brcond %25 ^bb19, ^bb24 loc(#loc172)
  ^bb19:  // pred: ^bb18
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc173)
    %27 = cir.call @stdThreadJoin(%26) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc174)
    %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %28 ^bb20, ^bb21 loc(#loc172)
  ^bb20:  // pred: ^bb19
    %29 = cir.const #true loc(#loc172)
    cir.br ^bb22(%29 : !cir.bool) loc(#loc172)
  ^bb21:  // pred: ^bb19
    %30 = cir.const #false loc(#loc172)
    cir.br ^bb22(%30 : !cir.bool) loc(#loc172)
  ^bb22(%31: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:25)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc172)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25(%31 : !cir.bool) loc(#loc172)
  ^bb24:  // pred: ^bb18
    %32 = cir.const #false loc(#loc172)
    cir.br ^bb25(%32 : !cir.bool) loc(#loc172)
  ^bb25(%33: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:25)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc172)
  ^bb26:  // pred: ^bb25
    cir.brcond %33 ^bb27, ^bb28 loc(#loc262)
  ^bb27:  // pred: ^bb26
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc176)
    %35 = cir.call @stdThreadDestroy(%34) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc177)
    cir.br ^bb28 loc(#loc170)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc170)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc263)
  ^bb30:  // pred: ^bb29
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc180)
    %37 = cir.cast(ptr_to_bool, %36 : !cir.ptr<!ty__stdThread>), !cir.bool loc(#loc180)
    cir.brcond %37 ^bb31, ^bb36 loc(#loc181)
  ^bb31:  // pred: ^bb30
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc182)
    %39 = cir.call @stdThreadJoin(%38) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc183)
    %40 = cir.cast(int_to_bool, %39 : !s32i), !cir.bool loc(#loc183)
    cir.brcond %40 ^bb32, ^bb33 loc(#loc181)
  ^bb32:  // pred: ^bb31
    %41 = cir.const #true loc(#loc181)
    cir.br ^bb34(%41 : !cir.bool) loc(#loc181)
  ^bb33:  // pred: ^bb31
    %42 = cir.const #false loc(#loc181)
    cir.br ^bb34(%42 : !cir.bool) loc(#loc181)
  ^bb34(%43: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:25)):  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc181)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37(%43 : !cir.bool) loc(#loc181)
  ^bb36:  // pred: ^bb30
    %44 = cir.const #false loc(#loc181)
    cir.br ^bb37(%44 : !cir.bool) loc(#loc181)
  ^bb37(%45: !cir.bool loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:25)):  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc181)
  ^bb38:  // pred: ^bb37
    cir.brcond %45 ^bb39, ^bb40 loc(#loc264)
  ^bb39:  // pred: ^bb38
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThread>>, !cir.ptr<!ty__stdThread> loc(#loc185)
    %47 = cir.call @stdThreadDestroy(%46) : (!cir.ptr<!ty__stdThread>) -> !s32i loc(#loc186)
    cir.br ^bb40 loc(#loc179)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc179)
  ^bb41:  // pred: ^bb40
    %48 = cir.get_global @gGoodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc229)
    %49 = cir.load %48 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc187)
    cir.call @stdThreadLockDestroy(%49) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc188)
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc190)
    cir.br ^bb42 loc(#loc143)
  ^bb42:  // pred: ^bb41
    cir.br ^bb44 loc(#loc191)
  ^bb43:  // no predecessors
    cir.br ^bb2 loc(#loc139)
  ^bb44:  // 2 preds: ^bb2, ^bb42
    cir.br ^bb45 loc(#loc139)
  ^bb45:  // pred: ^bb44
    cir.return loc(#loc131)
  } loc(#loc243)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE366_Race_Condition_Within_Thread/CWE366_Race_Condition_Within_Thread__int_byref_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_thread.h":14:1)
#loc2 = loc("../../testcasesupport/std_thread.h":14:74)
#loc3 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":24:1)
#loc4 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":36:1)
#loc7 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":26:5)
#loc8 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":26:27)
#loc9 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":27:5)
#loc10 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":27:9)
#loc11 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":25:1)
#loc12 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:5)
#loc13 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":35:5)
#loc14 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:14)
#loc15 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:10)
#loc16 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:17)
#loc17 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:21)
#loc18 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:19)
#loc19 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":33:5)
#loc20 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:22)
#loc21 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:21)
#loc22 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:33)
#loc23 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:10)
#loc24 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":34:9)
#loc25 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:31)
#loc26 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":32:30)
#loc27 = loc("../../testcasesupport/std_thread.h":15:1)
#loc28 = loc("../../testcasesupport/std_thread.h":15:35)
#loc29 = loc("../../testcasesupport/std_thread.h":16:1)
#loc30 = loc("../../testcasesupport/std_thread.h":16:38)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc33 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":55:1)
#loc34 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":84:1)
#loc35 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":60:13)
#loc36 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":60:33)
#loc37 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":61:13)
#loc38 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":61:33)
#loc39 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":62:13)
#loc40 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":62:17)
#loc41 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":57:5)
#loc42 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":83:5)
#loc43 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":57:11)
#loc44 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":58:5)
#loc45 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":59:9)
#loc46 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":81:9)
#loc47 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":63:26)
#loc48 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":63:13)
#loc49 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:13)
#loc50 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":67:13)
#loc51 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:34)
#loc52 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:52)
#loc53 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:53)
#loc54 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":64:18)
#loc55 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":65:13)
#loc56 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":66:27)
#loc57 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":66:17)
#loc58 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:13)
#loc59 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":71:13)
#loc60 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:34)
#loc61 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:52)
#loc62 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:53)
#loc63 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":68:18)
#loc64 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":69:13)
#loc65 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":70:27)
#loc66 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":70:17)
#loc67 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:13)
#loc68 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":75:13)
#loc69 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:17)
#loc71 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:42)
#loc72 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":72:28)
#loc73 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":73:13)
#loc74 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":74:34)
#loc75 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":74:17)
#loc76 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:13)
#loc77 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":79:13)
#loc78 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:17)
#loc80 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:42)
#loc81 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":76:28)
#loc82 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":77:13)
#loc83 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":78:34)
#loc84 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":78:17)
#loc85 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":80:26)
#loc86 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":80:13)
#loc87 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":82:9)
#loc88 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":127:1)
#loc89 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":130:1)
#loc90 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":129:5)
#loc91 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":129:11)
#loc92 = loc("../../testcasesupport/std_thread.h":18:1)
#loc93 = loc("../../testcasesupport/std_thread.h":18:44)
#loc94 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":22:1)
#loc95 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":22:34)
#loc96 = loc("../../testcasesupport/std_thread.h":19:1)
#loc97 = loc("../../testcasesupport/std_thread.h":19:45)
#loc98 = loc("../../testcasesupport/std_thread.h":20:1)
#loc99 = loc("../../testcasesupport/std_thread.h":20:45)
#loc100 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":38:1)
#loc101 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":51:1)
#loc104 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":40:5)
#loc105 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":40:28)
#loc106 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":41:5)
#loc107 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":41:9)
#loc108 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":39:1)
#loc109 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":45:26)
#loc110 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":45:5)
#loc111 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:5)
#loc112 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":49:5)
#loc113 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:14)
#loc114 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:10)
#loc115 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:17)
#loc116 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:21)
#loc117 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:19)
#loc118 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":47:5)
#loc119 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:22)
#loc120 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:21)
#loc121 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:33)
#loc122 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:10)
#loc123 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":48:9)
#loc124 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:31)
#loc125 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":46:30)
#loc126 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":50:26)
#loc127 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":50:5)
#loc128 = loc("../../testcasesupport/std_thread.h":21:1)
#loc129 = loc("../../testcasesupport/std_thread.h":21:45)
#loc130 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":91:1)
#loc131 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":125:1)
#loc132 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":96:13)
#loc133 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":96:33)
#loc134 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":97:13)
#loc135 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":97:33)
#loc136 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":98:13)
#loc137 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":98:17)
#loc138 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":93:5)
#loc139 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":124:5)
#loc140 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":93:11)
#loc141 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":94:5)
#loc142 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":95:9)
#loc143 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":122:9)
#loc144 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":99:27)
#loc145 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":99:13)
#loc146 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":100:13)
#loc147 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":103:13)
#loc148 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":100:18)
#loc149 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":101:13)
#loc150 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":102:17)
#loc151 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:13)
#loc152 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":107:13)
#loc153 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:34)
#loc154 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:53)
#loc155 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:54)
#loc156 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":104:18)
#loc157 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":105:13)
#loc158 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":106:27)
#loc159 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":106:17)
#loc160 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:13)
#loc161 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":111:13)
#loc162 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:34)
#loc163 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:53)
#loc164 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:54)
#loc165 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":108:18)
#loc166 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":109:13)
#loc167 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":110:27)
#loc168 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":110:17)
#loc169 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:13)
#loc170 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":115:13)
#loc171 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:17)
#loc173 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:42)
#loc174 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":112:28)
#loc175 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":113:13)
#loc176 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":114:34)
#loc177 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":114:17)
#loc178 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:13)
#loc179 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":119:13)
#loc180 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:17)
#loc182 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:42)
#loc183 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":116:28)
#loc184 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":117:13)
#loc185 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":118:34)
#loc186 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":118:17)
#loc187 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":120:34)
#loc188 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":120:13)
#loc189 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":121:26)
#loc190 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":121:13)
#loc191 = loc("CWE366_Race_Condition_Within_Thread__int_byref_16.c":123:9)
#loc192 = loc(fused[#loc1, #loc2])
#loc193 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc7, #loc8])
#loc196 = loc(fused[#loc9, #loc10])
#loc197 = loc(fused[#loc12, #loc13])
#loc198 = loc(fused[#loc15, #loc14])
#loc199 = loc(fused[#loc16, #loc17])
#loc200 = loc(fused[#loc19, #loc13])
#loc201 = loc(fused[#loc24, #loc22])
#loc202 = loc(fused[#loc26, #loc25])
#loc203 = loc(fused[#loc27, #loc28])
#loc204 = loc(fused[#loc29, #loc30])
#loc205 = loc(fused[#loc31, #loc32])
#loc206 = loc(fused[#loc33, #loc34])
#loc207 = loc(fused[#loc35, #loc36])
#loc208 = loc(fused[#loc37, #loc38])
#loc209 = loc(fused[#loc39, #loc40])
#loc210 = loc(fused[#loc41, #loc42])
#loc211 = loc(fused[#loc44, #loc42])
#loc212 = loc(fused[#loc45, #loc46])
#loc213 = loc(fused[#loc48, #loc47])
#loc214 = loc(fused[#loc49, #loc50])
#loc215 = loc(fused[#loc52, #loc53])
#loc216 = loc(fused[#loc55, #loc50])
#loc217 = loc(fused[#loc57, #loc56])
#loc218 = loc(fused[#loc58, #loc59])
#loc219 = loc(fused[#loc61, #loc62])
#loc220 = loc(fused[#loc64, #loc59])
#loc221 = loc(fused[#loc66, #loc65])
#loc222 = loc(fused[#loc67, #loc68])
#loc223 = loc(fused[#loc73, #loc68])
#loc224 = loc(fused[#loc76, #loc77])
#loc225 = loc(fused[#loc82, #loc77])
#loc226 = loc(fused[#loc88, #loc89])
#loc227 = loc(fused[#loc90, #loc91])
#loc228 = loc(fused[#loc92, #loc93])
#loc229 = loc(fused[#loc94, #loc95])
#loc230 = loc(fused[#loc96, #loc97])
#loc231 = loc(fused[#loc98, #loc99])
#loc232 = loc(fused[#loc100, #loc101])
#loc234 = loc(fused[#loc104, #loc105])
#loc235 = loc(fused[#loc106, #loc107])
#loc236 = loc(fused[#loc111, #loc112])
#loc237 = loc(fused[#loc114, #loc113])
#loc238 = loc(fused[#loc115, #loc116])
#loc239 = loc(fused[#loc118, #loc112])
#loc240 = loc(fused[#loc123, #loc121])
#loc241 = loc(fused[#loc125, #loc124])
#loc242 = loc(fused[#loc128, #loc129])
#loc243 = loc(fused[#loc130, #loc131])
#loc244 = loc(fused[#loc132, #loc133])
#loc245 = loc(fused[#loc134, #loc135])
#loc246 = loc(fused[#loc136, #loc137])
#loc247 = loc(fused[#loc138, #loc139])
#loc248 = loc(fused[#loc141, #loc139])
#loc249 = loc(fused[#loc142, #loc143])
#loc250 = loc(fused[#loc145, #loc144])
#loc251 = loc(fused[#loc146, #loc147])
#loc252 = loc(fused[#loc149, #loc147])
#loc253 = loc(fused[#loc151, #loc152])
#loc254 = loc(fused[#loc154, #loc155])
#loc255 = loc(fused[#loc157, #loc152])
#loc256 = loc(fused[#loc159, #loc158])
#loc257 = loc(fused[#loc160, #loc161])
#loc258 = loc(fused[#loc163, #loc164])
#loc259 = loc(fused[#loc166, #loc161])
#loc260 = loc(fused[#loc168, #loc167])
#loc261 = loc(fused[#loc169, #loc170])
#loc262 = loc(fused[#loc175, #loc170])
#loc263 = loc(fused[#loc178, #loc179])
#loc264 = loc(fused[#loc184, #loc179])
