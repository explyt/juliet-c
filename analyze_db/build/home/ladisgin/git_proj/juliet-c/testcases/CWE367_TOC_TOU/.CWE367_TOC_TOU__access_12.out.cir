!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc182 = loc("CWE367_TOC_TOU__access_12.c":199:10)
#loc183 = loc("CWE367_TOC_TOU__access_12.c":199:14)
#loc184 = loc("CWE367_TOC_TOU__access_12.c":199:20)
#loc185 = loc("CWE367_TOC_TOU__access_12.c":199:32)
#loc405 = loc(fused[#loc182, #loc183])
#loc406 = loc(fused[#loc184, #loc185])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc337)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc338)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc339)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc341)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc343)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc344)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc20)
  cir.func private @close(!s32i) -> !s32i loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE367_TOC_TOU__access_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc349)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc349)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc28)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc352)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc353)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc352)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc352)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc39)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc353)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc43)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc339)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc355)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc48)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc49)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc49)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc50)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc51)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc357)
            } loc(#loc356)
          } loc(#loc354)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc56)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc359)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc58)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc61)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc361)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc62)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc362)
            } loc(#loc360)
          } loc(#loc358)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc66)
            %14 = cir.call @access(%12, %13) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc67)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc69)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc364)
            cir.if %17 {
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc71)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc72)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
            } loc(#loc365)
          } loc(#loc363)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc74)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc75)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc366)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc82)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc368)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc85)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
            } loc(#loc369)
          } loc(#loc367)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc88)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc20)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc20)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
            %16 = cir.const #cir.int<11> : !u64i loc(#loc371)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc91)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc92)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc93)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc93)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc372)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc96)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
            } loc(#loc373)
          } loc(#loc370)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc100)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc101)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc375)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc104)
            } loc(#loc376)
          } loc(#loc374)
        } loc(#loc351)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc378)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc379)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc378)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc378)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc110)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc111)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc379)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc115)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc339)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc117)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc381)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc120)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc120)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc121)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc122)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc122)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc124)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc383)
            } loc(#loc382)
          } loc(#loc380)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc127)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc127)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc129)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc129)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc385)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc131)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc131)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc132)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc134)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc387)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc135)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc388)
            } loc(#loc386)
          } loc(#loc384)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc137)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc138)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc389)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc145)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc391)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc148)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
            } loc(#loc392)
          } loc(#loc390)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc23)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc23)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc394)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc154)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc155)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc156)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc156)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc395)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc159)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
            } loc(#loc396)
          } loc(#loc393)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc163)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc164)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc398)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc167)
            } loc(#loc399)
          } loc(#loc397)
        } loc(#loc377)
      } loc(#loc350)
    } loc(#loc348)
    cir.return loc(#loc25)
  } loc(#loc347)
  cir.func no_proto @CWE367_TOC_TOU__access_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc401)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc170)
    cir.return loc(#loc169)
  } loc(#loc400)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc402)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc403)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc179)
  cir.func @main(%arg0: !s32i loc(fused[#loc182, #loc183]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc184, #loc185])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc405)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc406)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc186)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc187)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc188)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc189)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %8 = cir.get_global @CWE367_TOC_TOU__access_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc407)
    cir.call @CWE367_TOC_TOU__access_12_good() : () -> () loc(#loc191)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc177)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc178)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %13 = cir.get_global @CWE367_TOC_TOU__access_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc408)
    cir.call @CWE367_TOC_TOU__access_12_bad() : () -> () loc(#loc195)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc409)
    cir.return %17 : !s32i loc(#loc409)
  } loc(#loc404)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc412)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc412)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc204)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc204)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc415)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc416)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc415)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc415)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc214)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc215)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc416)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc219)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc339)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc220)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc221)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc418)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc224)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc224)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc225)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc226)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc226)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc227)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc228)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc420)
            } loc(#loc419)
          } loc(#loc417)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc231)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc231)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc233)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc233)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc422)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc235)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc235)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc236)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc237)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc236)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc238)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc238)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc424)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc239)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc239)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc425)
            } loc(#loc423)
          } loc(#loc421)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc240)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc241)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc242)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc426)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc247)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc248)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc249)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc428)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc251)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc252)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc251)
            } loc(#loc429)
          } loc(#loc427)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc256)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc256)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc256)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc431)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc259)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc260)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc261)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc261)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc432)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc263)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc264)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc263)
            } loc(#loc433)
          } loc(#loc430)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc267)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc268)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc269)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc435)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc271)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc272)
            } loc(#loc436)
          } loc(#loc434)
        } loc(#loc414)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc438)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc439)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc438)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc438)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc278)
          %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc279)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc439)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc282)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc283)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc339)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc284)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc285)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc286)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc286)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc441)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc288)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc288)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc289)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc290)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc290)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc291)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc292)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc292)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc443)
            } loc(#loc442)
          } loc(#loc440)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc295)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc296)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc295)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc297)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc297)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc445)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc299)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc299)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc300)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc301)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc300)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc302)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc302)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc447)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc303)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc303)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc448)
            } loc(#loc446)
          } loc(#loc444)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc304)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc305)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc306)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc449)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc311)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc312)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc313)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc451)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc315)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc316)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc315)
            } loc(#loc452)
          } loc(#loc450)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc319)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc320)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc320)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc320)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc454)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc323)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc324)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc325)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc325)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc455)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc327)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc328)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc327)
            } loc(#loc456)
          } loc(#loc453)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc331)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc332)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc333)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc458)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc335)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc336)
            } loc(#loc459)
          } loc(#loc457)
        } loc(#loc437)
      } loc(#loc413)
    } loc(#loc411)
    cir.return loc(#loc201)
  } loc(#loc410)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE367_TOC_TOU__access_12.c":53:27)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("/usr/include/unistd.h":287:1)
#loc13 = loc("/usr/include/unistd.h":287:60)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/fcntl.h":209:1)
#loc17 = loc("/usr/include/fcntl.h":209:56)
#loc18 = loc("/usr/include/unistd.h":378:1)
#loc19 = loc("/usr/include/unistd.h":378:62)
#loc20 = loc("CWE367_TOC_TOU__access_12.c":71:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE367_TOC_TOU__access_12.c":102:33)
#loc24 = loc("CWE367_TOC_TOU__access_12.c":44:1)
#loc25 = loc("CWE367_TOC_TOU__access_12.c":112:1)
#loc26 = loc("CWE367_TOC_TOU__access_12.c":46:5)
#loc27 = loc("CWE367_TOC_TOU__access_12.c":111:5)
#loc28 = loc("CWE367_TOC_TOU__access_12.c":46:8)
#loc29 = loc("CWE367_TOC_TOU__access_12.c":46:33)
#loc30 = loc("CWE367_TOC_TOU__access_12.c":47:5)
#loc31 = loc("CWE367_TOC_TOU__access_12.c":80:5)
#loc32 = loc("CWE367_TOC_TOU__access_12.c":82:5)
#loc33 = loc("CWE367_TOC_TOU__access_12.c":48:9)
#loc34 = loc("CWE367_TOC_TOU__access_12.c":79:9)
#loc35 = loc("CWE367_TOC_TOU__access_12.c":49:13)
#loc36 = loc("CWE367_TOC_TOU__access_12.c":49:34)
#loc37 = loc("CWE367_TOC_TOU__access_12.c":50:13)
#loc38 = loc("CWE367_TOC_TOU__access_12.c":50:29)
#loc39 = loc("CWE367_TOC_TOU__access_12.c":50:28)
#loc40 = loc("CWE367_TOC_TOU__access_12.c":51:13)
#loc41 = loc("CWE367_TOC_TOU__access_12.c":56:13)
#loc42 = loc("CWE367_TOC_TOU__access_12.c":51:23)
#loc43 = loc("CWE367_TOC_TOU__access_12.c":51:33)
#loc44 = loc("CWE367_TOC_TOU__access_12.c":51:38)
#loc45 = loc("CWE367_TOC_TOU__access_12.c":51:17)
#loc46 = loc("CWE367_TOC_TOU__access_12.c":51:48)
#loc47 = loc("CWE367_TOC_TOU__access_12.c":52:13)
#loc48 = loc("CWE367_TOC_TOU__access_12.c":53:17)
#loc49 = loc("CWE367_TOC_TOU__access_12.c":55:31)
#loc50 = loc("CWE367_TOC_TOU__access_12.c":55:26)
#loc51 = loc("CWE367_TOC_TOU__access_12.c":55:17)
#loc52 = loc("CWE367_TOC_TOU__access_12.c":57:13)
#loc53 = loc("CWE367_TOC_TOU__access_12.c":60:13)
#loc54 = loc("CWE367_TOC_TOU__access_12.c":57:17)
#loc55 = loc("CWE367_TOC_TOU__access_12.c":57:24)
#loc56 = loc("CWE367_TOC_TOU__access_12.c":57:36)
#loc57 = loc("CWE367_TOC_TOU__access_12.c":58:13)
#loc58 = loc("CWE367_TOC_TOU__access_12.c":59:48)
#loc59 = loc("CWE367_TOC_TOU__access_12.c":59:26)
#loc60 = loc("CWE367_TOC_TOU__access_12.c":59:33)
#loc61 = loc("CWE367_TOC_TOU__access_12.c":59:43)
#loc62 = loc("CWE367_TOC_TOU__access_12.c":59:17)
#loc63 = loc("CWE367_TOC_TOU__access_12.c":62:13)
#loc64 = loc("CWE367_TOC_TOU__access_12.c":65:13)
#loc65 = loc("CWE367_TOC_TOU__access_12.c":62:24)
#loc66 = loc("CWE367_TOC_TOU__access_12.c":62:34)
#loc67 = loc("CWE367_TOC_TOU__access_12.c":62:17)
#loc68 = loc("CWE367_TOC_TOU__access_12.c":62:44)
#loc69 = loc("CWE367_TOC_TOU__access_12.c":62:43)
#loc70 = loc("CWE367_TOC_TOU__access_12.c":63:13)
#loc71 = loc("CWE367_TOC_TOU__access_12.c":64:17)
#loc72 = loc("CWE367_TOC_TOU__access_12.c":64:22)
#loc73 = loc("CWE367_TOC_TOU__access_12.c":66:30)
#loc74 = loc("CWE367_TOC_TOU__access_12.c":66:40)
#loc75 = loc("CWE367_TOC_TOU__access_12.c":66:25)
#loc76 = loc("CWE367_TOC_TOU__access_12.c":66:13)
#loc77 = loc("CWE367_TOC_TOU__access_12.c":66:46)
#loc78 = loc("CWE367_TOC_TOU__access_12.c":67:13)
#loc79 = loc("CWE367_TOC_TOU__access_12.c":70:13)
#loc80 = loc("CWE367_TOC_TOU__access_12.c":67:17)
#loc81 = loc("CWE367_TOC_TOU__access_12.c":67:30)
#loc82 = loc("CWE367_TOC_TOU__access_12.c":67:29)
#loc83 = loc("CWE367_TOC_TOU__access_12.c":68:13)
#loc84 = loc("CWE367_TOC_TOU__access_12.c":69:17)
#loc85 = loc("CWE367_TOC_TOU__access_12.c":69:22)
#loc86 = loc("CWE367_TOC_TOU__access_12.c":71:13)
#loc87 = loc("CWE367_TOC_TOU__access_12.c":74:13)
#loc88 = loc("CWE367_TOC_TOU__access_12.c":71:23)
#loc89 = loc("CWE367_TOC_TOU__access_12.c":71:50)
#loc90 = loc("CWE367_TOC_TOU__access_12.c":71:72)
#loc91 = loc("CWE367_TOC_TOU__access_12.c":71:17)
#loc92 = loc("CWE367_TOC_TOU__access_12.c":71:79)
#loc93 = loc("CWE367_TOC_TOU__access_12.c":71:78)
#loc94 = loc("CWE367_TOC_TOU__access_12.c":72:13)
#loc95 = loc("CWE367_TOC_TOU__access_12.c":73:17)
#loc96 = loc("CWE367_TOC_TOU__access_12.c":73:22)
#loc97 = loc("CWE367_TOC_TOU__access_12.c":75:13)
#loc98 = loc("CWE367_TOC_TOU__access_12.c":78:13)
#loc99 = loc("CWE367_TOC_TOU__access_12.c":75:17)
#loc100 = loc("CWE367_TOC_TOU__access_12.c":75:30)
#loc101 = loc("CWE367_TOC_TOU__access_12.c":75:29)
#loc102 = loc("CWE367_TOC_TOU__access_12.c":76:13)
#loc103 = loc("CWE367_TOC_TOU__access_12.c":77:23)
#loc104 = loc("CWE367_TOC_TOU__access_12.c":77:17)
#loc105 = loc("CWE367_TOC_TOU__access_12.c":83:9)
#loc106 = loc("CWE367_TOC_TOU__access_12.c":110:9)
#loc107 = loc("CWE367_TOC_TOU__access_12.c":84:13)
#loc108 = loc("CWE367_TOC_TOU__access_12.c":84:34)
#loc109 = loc("CWE367_TOC_TOU__access_12.c":85:13)
#loc110 = loc("CWE367_TOC_TOU__access_12.c":85:29)
#loc111 = loc("CWE367_TOC_TOU__access_12.c":85:28)
#loc112 = loc("CWE367_TOC_TOU__access_12.c":86:13)
#loc113 = loc("CWE367_TOC_TOU__access_12.c":91:13)
#loc114 = loc("CWE367_TOC_TOU__access_12.c":86:23)
#loc115 = loc("CWE367_TOC_TOU__access_12.c":86:33)
#loc116 = loc("CWE367_TOC_TOU__access_12.c":86:38)
#loc117 = loc("CWE367_TOC_TOU__access_12.c":86:17)
#loc118 = loc("CWE367_TOC_TOU__access_12.c":86:48)
#loc119 = loc("CWE367_TOC_TOU__access_12.c":87:13)
#loc120 = loc("CWE367_TOC_TOU__access_12.c":88:27)
#loc121 = loc("CWE367_TOC_TOU__access_12.c":88:17)
#loc122 = loc("CWE367_TOC_TOU__access_12.c":90:31)
#loc123 = loc("CWE367_TOC_TOU__access_12.c":90:26)
#loc124 = loc("CWE367_TOC_TOU__access_12.c":90:17)
#loc125 = loc("CWE367_TOC_TOU__access_12.c":92:13)
#loc126 = loc("CWE367_TOC_TOU__access_12.c":95:13)
#loc127 = loc("CWE367_TOC_TOU__access_12.c":92:17)
#loc128 = loc("CWE367_TOC_TOU__access_12.c":92:24)
#loc129 = loc("CWE367_TOC_TOU__access_12.c":92:36)
#loc130 = loc("CWE367_TOC_TOU__access_12.c":93:13)
#loc131 = loc("CWE367_TOC_TOU__access_12.c":94:48)
#loc132 = loc("CWE367_TOC_TOU__access_12.c":94:26)
#loc133 = loc("CWE367_TOC_TOU__access_12.c":94:33)
#loc134 = loc("CWE367_TOC_TOU__access_12.c":94:43)
#loc135 = loc("CWE367_TOC_TOU__access_12.c":94:17)
#loc136 = loc("CWE367_TOC_TOU__access_12.c":97:30)
#loc137 = loc("CWE367_TOC_TOU__access_12.c":97:40)
#loc138 = loc("CWE367_TOC_TOU__access_12.c":97:25)
#loc139 = loc("CWE367_TOC_TOU__access_12.c":97:13)
#loc140 = loc("CWE367_TOC_TOU__access_12.c":97:46)
#loc141 = loc("CWE367_TOC_TOU__access_12.c":98:13)
#loc142 = loc("CWE367_TOC_TOU__access_12.c":101:13)
#loc143 = loc("CWE367_TOC_TOU__access_12.c":98:17)
#loc144 = loc("CWE367_TOC_TOU__access_12.c":98:30)
#loc145 = loc("CWE367_TOC_TOU__access_12.c":98:29)
#loc146 = loc("CWE367_TOC_TOU__access_12.c":99:13)
#loc147 = loc("CWE367_TOC_TOU__access_12.c":100:17)
#loc148 = loc("CWE367_TOC_TOU__access_12.c":100:22)
#loc149 = loc("CWE367_TOC_TOU__access_12.c":102:13)
#loc150 = loc("CWE367_TOC_TOU__access_12.c":105:13)
#loc151 = loc("CWE367_TOC_TOU__access_12.c":102:23)
#loc152 = loc("CWE367_TOC_TOU__access_12.c":102:51)
#loc153 = loc("CWE367_TOC_TOU__access_12.c":102:74)
#loc154 = loc("CWE367_TOC_TOU__access_12.c":102:17)
#loc155 = loc("CWE367_TOC_TOU__access_12.c":102:81)
#loc156 = loc("CWE367_TOC_TOU__access_12.c":102:80)
#loc157 = loc("CWE367_TOC_TOU__access_12.c":103:13)
#loc158 = loc("CWE367_TOC_TOU__access_12.c":104:17)
#loc159 = loc("CWE367_TOC_TOU__access_12.c":104:22)
#loc160 = loc("CWE367_TOC_TOU__access_12.c":106:13)
#loc161 = loc("CWE367_TOC_TOU__access_12.c":109:13)
#loc162 = loc("CWE367_TOC_TOU__access_12.c":106:17)
#loc163 = loc("CWE367_TOC_TOU__access_12.c":106:30)
#loc164 = loc("CWE367_TOC_TOU__access_12.c":106:29)
#loc165 = loc("CWE367_TOC_TOU__access_12.c":107:13)
#loc166 = loc("CWE367_TOC_TOU__access_12.c":108:23)
#loc167 = loc("CWE367_TOC_TOU__access_12.c":108:17)
#loc168 = loc("CWE367_TOC_TOU__access_12.c":185:1)
#loc169 = loc("CWE367_TOC_TOU__access_12.c":188:1)
#loc170 = loc("CWE367_TOC_TOU__access_12.c":187:5)
#loc171 = loc("CWE367_TOC_TOU__access_12.c":187:11)
#loc172 = loc("/usr/include/stdlib.h":575:1)
#loc173 = loc("/usr/include/stdlib.h":575:41)
#loc174 = loc("/usr/include/time.h":76:1)
#loc175 = loc("/usr/include/time.h":76:38)
#loc176 = loc("CWE367_TOC_TOU__access_12.c":204:15)
#loc177 = loc("CWE367_TOC_TOU__access_12.c":206:15)
#loc178 = loc("CWE367_TOC_TOU__access_12.c":209:15)
#loc179 = loc("CWE367_TOC_TOU__access_12.c":211:15)
#loc180 = loc("CWE367_TOC_TOU__access_12.c":199:1)
#loc181 = loc("CWE367_TOC_TOU__access_12.c":214:1)
#loc186 = loc("CWE367_TOC_TOU__access_12.c":200:1)
#loc187 = loc("CWE367_TOC_TOU__access_12.c":202:27)
#loc188 = loc("CWE367_TOC_TOU__access_12.c":202:22)
#loc189 = loc("CWE367_TOC_TOU__access_12.c":202:5)
#loc190 = loc("CWE367_TOC_TOU__access_12.c":204:5)
#loc191 = loc("CWE367_TOC_TOU__access_12.c":205:5)
#loc192 = loc("CWE367_TOC_TOU__access_12.c":205:36)
#loc193 = loc("CWE367_TOC_TOU__access_12.c":206:5)
#loc194 = loc("CWE367_TOC_TOU__access_12.c":209:5)
#loc195 = loc("CWE367_TOC_TOU__access_12.c":210:5)
#loc196 = loc("CWE367_TOC_TOU__access_12.c":210:35)
#loc197 = loc("CWE367_TOC_TOU__access_12.c":211:5)
#loc198 = loc("CWE367_TOC_TOU__access_12.c":213:12)
#loc199 = loc("CWE367_TOC_TOU__access_12.c":213:5)
#loc200 = loc("CWE367_TOC_TOU__access_12.c":119:1)
#loc201 = loc("CWE367_TOC_TOU__access_12.c":183:1)
#loc202 = loc("CWE367_TOC_TOU__access_12.c":121:5)
#loc203 = loc("CWE367_TOC_TOU__access_12.c":182:5)
#loc204 = loc("CWE367_TOC_TOU__access_12.c":121:8)
#loc205 = loc("CWE367_TOC_TOU__access_12.c":121:33)
#loc206 = loc("CWE367_TOC_TOU__access_12.c":122:5)
#loc207 = loc("CWE367_TOC_TOU__access_12.c":151:5)
#loc208 = loc("CWE367_TOC_TOU__access_12.c":153:5)
#loc209 = loc("CWE367_TOC_TOU__access_12.c":123:9)
#loc210 = loc("CWE367_TOC_TOU__access_12.c":150:9)
#loc211 = loc("CWE367_TOC_TOU__access_12.c":124:13)
#loc212 = loc("CWE367_TOC_TOU__access_12.c":124:34)
#loc213 = loc("CWE367_TOC_TOU__access_12.c":125:13)
#loc214 = loc("CWE367_TOC_TOU__access_12.c":125:29)
#loc215 = loc("CWE367_TOC_TOU__access_12.c":125:28)
#loc216 = loc("CWE367_TOC_TOU__access_12.c":126:13)
#loc217 = loc("CWE367_TOC_TOU__access_12.c":131:13)
#loc218 = loc("CWE367_TOC_TOU__access_12.c":126:23)
#loc219 = loc("CWE367_TOC_TOU__access_12.c":126:33)
#loc220 = loc("CWE367_TOC_TOU__access_12.c":126:38)
#loc221 = loc("CWE367_TOC_TOU__access_12.c":126:17)
#loc222 = loc("CWE367_TOC_TOU__access_12.c":126:48)
#loc223 = loc("CWE367_TOC_TOU__access_12.c":127:13)
#loc224 = loc("CWE367_TOC_TOU__access_12.c":128:27)
#loc225 = loc("CWE367_TOC_TOU__access_12.c":128:17)
#loc226 = loc("CWE367_TOC_TOU__access_12.c":130:31)
#loc227 = loc("CWE367_TOC_TOU__access_12.c":130:26)
#loc228 = loc("CWE367_TOC_TOU__access_12.c":130:17)
#loc229 = loc("CWE367_TOC_TOU__access_12.c":132:13)
#loc230 = loc("CWE367_TOC_TOU__access_12.c":135:13)
#loc231 = loc("CWE367_TOC_TOU__access_12.c":132:17)
#loc232 = loc("CWE367_TOC_TOU__access_12.c":132:24)
#loc233 = loc("CWE367_TOC_TOU__access_12.c":132:36)
#loc234 = loc("CWE367_TOC_TOU__access_12.c":133:13)
#loc235 = loc("CWE367_TOC_TOU__access_12.c":134:48)
#loc236 = loc("CWE367_TOC_TOU__access_12.c":134:26)
#loc237 = loc("CWE367_TOC_TOU__access_12.c":134:33)
#loc238 = loc("CWE367_TOC_TOU__access_12.c":134:43)
#loc239 = loc("CWE367_TOC_TOU__access_12.c":134:17)
#loc240 = loc("CWE367_TOC_TOU__access_12.c":137:30)
#loc241 = loc("CWE367_TOC_TOU__access_12.c":137:40)
#loc242 = loc("CWE367_TOC_TOU__access_12.c":137:25)
#loc243 = loc("CWE367_TOC_TOU__access_12.c":137:13)
#loc244 = loc("CWE367_TOC_TOU__access_12.c":137:46)
#loc245 = loc("CWE367_TOC_TOU__access_12.c":138:13)
#loc246 = loc("CWE367_TOC_TOU__access_12.c":141:13)
#loc247 = loc("CWE367_TOC_TOU__access_12.c":138:17)
#loc248 = loc("CWE367_TOC_TOU__access_12.c":138:30)
#loc249 = loc("CWE367_TOC_TOU__access_12.c":138:29)
#loc250 = loc("CWE367_TOC_TOU__access_12.c":139:13)
#loc251 = loc("CWE367_TOC_TOU__access_12.c":140:17)
#loc252 = loc("CWE367_TOC_TOU__access_12.c":140:22)
#loc253 = loc("CWE367_TOC_TOU__access_12.c":142:13)
#loc254 = loc("CWE367_TOC_TOU__access_12.c":145:13)
#loc255 = loc("CWE367_TOC_TOU__access_12.c":142:23)
#loc256 = loc("CWE367_TOC_TOU__access_12.c":142:33)
#loc257 = loc("CWE367_TOC_TOU__access_12.c":142:51)
#loc258 = loc("CWE367_TOC_TOU__access_12.c":142:74)
#loc259 = loc("CWE367_TOC_TOU__access_12.c":142:17)
#loc260 = loc("CWE367_TOC_TOU__access_12.c":142:81)
#loc261 = loc("CWE367_TOC_TOU__access_12.c":142:80)
#loc262 = loc("CWE367_TOC_TOU__access_12.c":143:13)
#loc263 = loc("CWE367_TOC_TOU__access_12.c":144:17)
#loc264 = loc("CWE367_TOC_TOU__access_12.c":144:22)
#loc265 = loc("CWE367_TOC_TOU__access_12.c":146:13)
#loc266 = loc("CWE367_TOC_TOU__access_12.c":149:13)
#loc267 = loc("CWE367_TOC_TOU__access_12.c":146:17)
#loc268 = loc("CWE367_TOC_TOU__access_12.c":146:30)
#loc269 = loc("CWE367_TOC_TOU__access_12.c":146:29)
#loc270 = loc("CWE367_TOC_TOU__access_12.c":147:13)
#loc271 = loc("CWE367_TOC_TOU__access_12.c":148:23)
#loc272 = loc("CWE367_TOC_TOU__access_12.c":148:17)
#loc273 = loc("CWE367_TOC_TOU__access_12.c":154:9)
#loc274 = loc("CWE367_TOC_TOU__access_12.c":181:9)
#loc275 = loc("CWE367_TOC_TOU__access_12.c":155:13)
#loc276 = loc("CWE367_TOC_TOU__access_12.c":155:34)
#loc277 = loc("CWE367_TOC_TOU__access_12.c":156:13)
#loc278 = loc("CWE367_TOC_TOU__access_12.c":156:29)
#loc279 = loc("CWE367_TOC_TOU__access_12.c":156:28)
#loc280 = loc("CWE367_TOC_TOU__access_12.c":157:13)
#loc281 = loc("CWE367_TOC_TOU__access_12.c":162:13)
#loc282 = loc("CWE367_TOC_TOU__access_12.c":157:23)
#loc283 = loc("CWE367_TOC_TOU__access_12.c":157:33)
#loc284 = loc("CWE367_TOC_TOU__access_12.c":157:38)
#loc285 = loc("CWE367_TOC_TOU__access_12.c":157:17)
#loc286 = loc("CWE367_TOC_TOU__access_12.c":157:48)
#loc287 = loc("CWE367_TOC_TOU__access_12.c":158:13)
#loc288 = loc("CWE367_TOC_TOU__access_12.c":159:27)
#loc289 = loc("CWE367_TOC_TOU__access_12.c":159:17)
#loc290 = loc("CWE367_TOC_TOU__access_12.c":161:31)
#loc291 = loc("CWE367_TOC_TOU__access_12.c":161:26)
#loc292 = loc("CWE367_TOC_TOU__access_12.c":161:17)
#loc293 = loc("CWE367_TOC_TOU__access_12.c":163:13)
#loc294 = loc("CWE367_TOC_TOU__access_12.c":166:13)
#loc295 = loc("CWE367_TOC_TOU__access_12.c":163:17)
#loc296 = loc("CWE367_TOC_TOU__access_12.c":163:24)
#loc297 = loc("CWE367_TOC_TOU__access_12.c":163:36)
#loc298 = loc("CWE367_TOC_TOU__access_12.c":164:13)
#loc299 = loc("CWE367_TOC_TOU__access_12.c":165:48)
#loc300 = loc("CWE367_TOC_TOU__access_12.c":165:26)
#loc301 = loc("CWE367_TOC_TOU__access_12.c":165:33)
#loc302 = loc("CWE367_TOC_TOU__access_12.c":165:43)
#loc303 = loc("CWE367_TOC_TOU__access_12.c":165:17)
#loc304 = loc("CWE367_TOC_TOU__access_12.c":168:30)
#loc305 = loc("CWE367_TOC_TOU__access_12.c":168:40)
#loc306 = loc("CWE367_TOC_TOU__access_12.c":168:25)
#loc307 = loc("CWE367_TOC_TOU__access_12.c":168:13)
#loc308 = loc("CWE367_TOC_TOU__access_12.c":168:46)
#loc309 = loc("CWE367_TOC_TOU__access_12.c":169:13)
#loc310 = loc("CWE367_TOC_TOU__access_12.c":172:13)
#loc311 = loc("CWE367_TOC_TOU__access_12.c":169:17)
#loc312 = loc("CWE367_TOC_TOU__access_12.c":169:30)
#loc313 = loc("CWE367_TOC_TOU__access_12.c":169:29)
#loc314 = loc("CWE367_TOC_TOU__access_12.c":170:13)
#loc315 = loc("CWE367_TOC_TOU__access_12.c":171:17)
#loc316 = loc("CWE367_TOC_TOU__access_12.c":171:22)
#loc317 = loc("CWE367_TOC_TOU__access_12.c":173:13)
#loc318 = loc("CWE367_TOC_TOU__access_12.c":176:13)
#loc319 = loc("CWE367_TOC_TOU__access_12.c":173:23)
#loc320 = loc("CWE367_TOC_TOU__access_12.c":173:33)
#loc321 = loc("CWE367_TOC_TOU__access_12.c":173:51)
#loc322 = loc("CWE367_TOC_TOU__access_12.c":173:74)
#loc323 = loc("CWE367_TOC_TOU__access_12.c":173:17)
#loc324 = loc("CWE367_TOC_TOU__access_12.c":173:81)
#loc325 = loc("CWE367_TOC_TOU__access_12.c":173:80)
#loc326 = loc("CWE367_TOC_TOU__access_12.c":174:13)
#loc327 = loc("CWE367_TOC_TOU__access_12.c":175:17)
#loc328 = loc("CWE367_TOC_TOU__access_12.c":175:22)
#loc329 = loc("CWE367_TOC_TOU__access_12.c":177:13)
#loc330 = loc("CWE367_TOC_TOU__access_12.c":180:13)
#loc331 = loc("CWE367_TOC_TOU__access_12.c":177:17)
#loc332 = loc("CWE367_TOC_TOU__access_12.c":177:30)
#loc333 = loc("CWE367_TOC_TOU__access_12.c":177:29)
#loc334 = loc("CWE367_TOC_TOU__access_12.c":178:13)
#loc335 = loc("CWE367_TOC_TOU__access_12.c":179:23)
#loc336 = loc("CWE367_TOC_TOU__access_12.c":179:17)
#loc337 = loc(fused[#loc1, #loc2])
#loc338 = loc(fused[#loc3, #loc4])
#loc339 = loc(fused[#loc5, #loc6])
#loc340 = loc(fused[#loc7, #loc8])
#loc341 = loc(fused[#loc10, #loc11])
#loc342 = loc(fused[#loc12, #loc13])
#loc343 = loc(fused[#loc14, #loc15])
#loc344 = loc(fused[#loc16, #loc17])
#loc345 = loc(fused[#loc18, #loc19])
#loc346 = loc(fused[#loc21, #loc22])
#loc347 = loc(fused[#loc24, #loc25])
#loc348 = loc(fused[#loc26, #loc27])
#loc349 = loc(fused[#loc28, #loc29])
#loc350 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc351 = loc(fused[#loc33, #loc34])
#loc352 = loc(fused[#loc35, #loc36])
#loc353 = loc(fused[#loc37, #loc38])
#loc354 = loc(fused[#loc40, #loc41])
#loc355 = loc(fused[#loc45, #loc46])
#loc356 = loc(fused[#loc47, #loc41])
#loc357 = loc(fused[#loc51, #loc49])
#loc358 = loc(fused[#loc52, #loc53])
#loc359 = loc(fused[#loc54, #loc56])
#loc360 = loc(fused[#loc57, #loc53])
#loc361 = loc(fused[#loc59, #loc61])
#loc362 = loc(fused[#loc62, #loc58])
#loc363 = loc(fused[#loc63, #loc64])
#loc364 = loc(fused[#loc67, #loc68])
#loc365 = loc(fused[#loc70, #loc64])
#loc366 = loc(fused[#loc76, #loc77])
#loc367 = loc(fused[#loc78, #loc79])
#loc368 = loc(fused[#loc80, #loc81])
#loc369 = loc(fused[#loc83, #loc79])
#loc370 = loc(fused[#loc86, #loc87])
#loc371 = loc(fused[#loc89, #loc90])
#loc372 = loc(fused[#loc91, #loc92])
#loc373 = loc(fused[#loc94, #loc87])
#loc374 = loc(fused[#loc97, #loc98])
#loc375 = loc(fused[#loc99, #loc100])
#loc376 = loc(fused[#loc102, #loc98])
#loc377 = loc(fused[#loc105, #loc106])
#loc378 = loc(fused[#loc107, #loc108])
#loc379 = loc(fused[#loc109, #loc110])
#loc380 = loc(fused[#loc112, #loc113])
#loc381 = loc(fused[#loc117, #loc118])
#loc382 = loc(fused[#loc119, #loc113])
#loc383 = loc(fused[#loc124, #loc122])
#loc384 = loc(fused[#loc125, #loc126])
#loc385 = loc(fused[#loc127, #loc129])
#loc386 = loc(fused[#loc130, #loc126])
#loc387 = loc(fused[#loc132, #loc134])
#loc388 = loc(fused[#loc135, #loc131])
#loc389 = loc(fused[#loc139, #loc140])
#loc390 = loc(fused[#loc141, #loc142])
#loc391 = loc(fused[#loc143, #loc144])
#loc392 = loc(fused[#loc146, #loc142])
#loc393 = loc(fused[#loc149, #loc150])
#loc394 = loc(fused[#loc152, #loc153])
#loc395 = loc(fused[#loc154, #loc155])
#loc396 = loc(fused[#loc157, #loc150])
#loc397 = loc(fused[#loc160, #loc161])
#loc398 = loc(fused[#loc162, #loc163])
#loc399 = loc(fused[#loc165, #loc161])
#loc400 = loc(fused[#loc168, #loc169])
#loc401 = loc(fused[#loc170, #loc171])
#loc402 = loc(fused[#loc172, #loc173])
#loc403 = loc(fused[#loc174, #loc175])
#loc404 = loc(fused[#loc180, #loc181])
#loc407 = loc(fused[#loc191, #loc192])
#loc408 = loc(fused[#loc195, #loc196])
#loc409 = loc(fused[#loc199, #loc198])
#loc410 = loc(fused[#loc200, #loc201])
#loc411 = loc(fused[#loc202, #loc203])
#loc412 = loc(fused[#loc204, #loc205])
#loc413 = loc(fused[#loc206, #loc207, #loc208, #loc203])
#loc414 = loc(fused[#loc209, #loc210])
#loc415 = loc(fused[#loc211, #loc212])
#loc416 = loc(fused[#loc213, #loc214])
#loc417 = loc(fused[#loc216, #loc217])
#loc418 = loc(fused[#loc221, #loc222])
#loc419 = loc(fused[#loc223, #loc217])
#loc420 = loc(fused[#loc228, #loc226])
#loc421 = loc(fused[#loc229, #loc230])
#loc422 = loc(fused[#loc231, #loc233])
#loc423 = loc(fused[#loc234, #loc230])
#loc424 = loc(fused[#loc236, #loc238])
#loc425 = loc(fused[#loc239, #loc235])
#loc426 = loc(fused[#loc243, #loc244])
#loc427 = loc(fused[#loc245, #loc246])
#loc428 = loc(fused[#loc247, #loc248])
#loc429 = loc(fused[#loc250, #loc246])
#loc430 = loc(fused[#loc253, #loc254])
#loc431 = loc(fused[#loc257, #loc258])
#loc432 = loc(fused[#loc259, #loc260])
#loc433 = loc(fused[#loc262, #loc254])
#loc434 = loc(fused[#loc265, #loc266])
#loc435 = loc(fused[#loc267, #loc268])
#loc436 = loc(fused[#loc270, #loc266])
#loc437 = loc(fused[#loc273, #loc274])
#loc438 = loc(fused[#loc275, #loc276])
#loc439 = loc(fused[#loc277, #loc278])
#loc440 = loc(fused[#loc280, #loc281])
#loc441 = loc(fused[#loc285, #loc286])
#loc442 = loc(fused[#loc287, #loc281])
#loc443 = loc(fused[#loc292, #loc290])
#loc444 = loc(fused[#loc293, #loc294])
#loc445 = loc(fused[#loc295, #loc297])
#loc446 = loc(fused[#loc298, #loc294])
#loc447 = loc(fused[#loc300, #loc302])
#loc448 = loc(fused[#loc303, #loc299])
#loc449 = loc(fused[#loc307, #loc308])
#loc450 = loc(fused[#loc309, #loc310])
#loc451 = loc(fused[#loc311, #loc312])
#loc452 = loc(fused[#loc314, #loc310])
#loc453 = loc(fused[#loc317, #loc318])
#loc454 = loc(fused[#loc321, #loc322])
#loc455 = loc(fused[#loc323, #loc324])
#loc456 = loc(fused[#loc326, #loc318])
#loc457 = loc(fused[#loc329, #loc330])
#loc458 = loc(fused[#loc331, #loc332])
#loc459 = loc(fused[#loc334, #loc330])
