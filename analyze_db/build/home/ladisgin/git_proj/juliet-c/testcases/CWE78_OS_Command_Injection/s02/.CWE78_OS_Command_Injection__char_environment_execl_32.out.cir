!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":123:10)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":123:14)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":123:20)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":123:32)
#loc163 = loc(fused[#loc81, #loc82])
#loc164 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc133)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execl_32_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc134)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc135)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc142)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc145)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc146)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc145)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc146)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execl_32_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
    %17 = cir.call @getenv(%16) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
    cir.store %17, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb3 loc(#loc150)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
    cir.brcond %21 ^bb4, ^bb5 loc(#loc152)
  ^bb4:  // pred: ^bb3
    %22 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc47)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc52)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %30 = cir.binop(sub, %28, %29) : !u64i loc(#loc153)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc54)
    %33 = cir.binop(sub, %30, %32) : !u64i loc(#loc154)
    %34 = cir.call @strncat(%25, %26, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc43)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %36 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    cir.store %35, %36 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.br ^bb8 loc(#loc35)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc156)
  ^bb9:  // pred: ^bb8
    %37 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
    %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.store %38, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %39 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc14)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc14)
    %41 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc61)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc61)
    %43 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc15)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc15)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %46 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
    %47 = cir.call @execl(%40, %42, %44, %45, %46) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc64)
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc17)
  } loc(#loc139)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execl_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execl_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE78_OS_Command_Injection__char_environment_execl_32_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execl_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE78_OS_Command_Injection__char_environment_execl_32_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %17 : !s32i loc(#loc167)
  } loc(#loc162)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc173)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc174)
    %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc173)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc174)
    %6 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %10 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %12 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
    %14 = cir.call @strcat(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    cir.store %18, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc127)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc127)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc128)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc128)
    %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc129)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc129)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
    %27 = cir.call @execl(%20, %22, %24, %25, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc132)
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc103)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execl_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":93:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":93:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":58:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":58:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdlib.h":773:1)
#loc8 = loc("/usr/include/stdlib.h":773:50)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:41)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("/usr/include/unistd.h":594:1)
#loc13 = loc("/usr/include/unistd.h":595:14)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:15)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:51)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":53:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":81:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":61:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":61:24)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:13)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:41)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:13)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:53)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":76:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":76:24)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":55:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":55:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":56:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":56:25)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":57:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":57:25)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":59:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":59:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":60:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":74:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":61:23)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":62:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":72:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:30)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":64:37)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":65:34)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":71:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":67:32)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":68:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:25)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:30)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:29)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:39)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:52)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:56)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":70:64)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":73:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":73:10)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":73:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":75:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":80:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":76:23)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:33)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:65)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:79)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":79:9)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":109:1)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":112:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":111:5)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":111:13)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":128:15)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":130:15)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":133:15)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":135:15)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":123:1)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":138:1)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":124:1)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":126:27)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":126:22)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":126:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":128:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":129:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":129:64)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":130:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":133:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":134:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":134:63)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":135:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":137:12)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":137:5)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":98:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":88:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":107:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":96:9)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":96:24)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":102:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":102:24)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":90:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":90:12)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":91:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":91:25)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":92:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":92:25)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":94:12)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":94:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":95:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":100:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":96:23)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":98:9)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":98:16)
#loc121 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":99:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":99:10)
#loc123 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":99:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":101:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":106:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":102:23)
#loc127 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:15)
#loc128 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:33)
#loc129 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:51)
#loc130 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:65)
#loc131 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:79)
#loc132 = loc("CWE78_OS_Command_Injection__char_environment_execl_32.c":105:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc16, #loc17])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc22, #loc23])
#loc143 = loc(fused[#loc24, #loc25])
#loc144 = loc(fused[#loc26, #loc27])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc30, #loc31])
#loc147 = loc(fused[#loc33, #loc32])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc42, #loc43])
#loc151 = loc(fused[#loc44, #loc45])
#loc152 = loc(fused[#loc46, #loc43])
#loc153 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc52, #loc54])
#loc155 = loc(fused[#loc57, #loc55])
#loc156 = loc(fused[#loc58, #loc59])
#loc157 = loc(fused[#loc65, #loc66])
#loc158 = loc(fused[#loc67, #loc68])
#loc159 = loc(fused[#loc69, #loc70])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc73, #loc74])
#loc162 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc90, #loc91])
#loc166 = loc(fused[#loc94, #loc95])
#loc167 = loc(fused[#loc98, #loc97])
#loc168 = loc(fused[#loc99, #loc100])
#loc169 = loc(fused[#loc102, #loc103])
#loc170 = loc(fused[#loc104, #loc105])
#loc171 = loc(fused[#loc106, #loc107])
#loc172 = loc(fused[#loc108, #loc109])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc112, #loc113])
#loc175 = loc(fused[#loc115, #loc114])
#loc176 = loc(fused[#loc116, #loc117])
#loc177 = loc(fused[#loc123, #loc121])
#loc178 = loc(fused[#loc124, #loc125])
