!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":100:10)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":100:14)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":100:20)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":100:32)
#loc121 = loc(fused[#loc46, #loc47])
#loc122 = loc(fused[#loc48, #loc49])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc107)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc16)
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
        %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc16)
        cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc112)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
        %9 = cir.call @fclose(%8) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc20)
        cir.break loc(#loc21)
      } loc(#loc111)
    } loc(#loc111)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc24)
        cir.condition(%3) loc(#loc24)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %3 = cir.call @fclose(%2) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc26)
        cir.break loc(#loc27)
      } loc(#loc113)
    } loc(#loc113)
    cir.return loc(#loc8)
  } loc(#loc108)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc115)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc114)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc43)
  cir.func @main(%arg0: !s32i loc(fused[#loc46, #loc47]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc52)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc52)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc53)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__fopen_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE675_Duplicate_Operations_on_Resource__fopen_16_good() : () -> () loc(#loc55)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc41)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__fopen_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE675_Duplicate_Operations_on_Resource__fopen_16_bad() : () -> () loc(#loc59)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc43)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %17 : !s32i loc(#loc125)
  } loc(#loc120)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc68)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc72)
        cir.condition(%3) loc(#loc72)
      } do {
        %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc73)
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc74)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc74)
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc75)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc75)
        %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc73)
        cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
        %9 = cir.call @fclose(%8) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc79)
        cir.break loc(#loc80)
      } loc(#loc129)
    } loc(#loc129)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%3) loc(#loc83)
      } do {
        cir.break loc(#loc84)
      } loc(#loc131)
    } loc(#loc131)
    cir.return loc(#loc65)
  } loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc90)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc94)
        cir.condition(%3) loc(#loc94)
      } do {
        %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc95)
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc96)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc96)
        %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc95)
        cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
        cir.break loc(#loc99)
      } loc(#loc135)
    } loc(#loc135)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc102)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc102)
        cir.condition(%3) loc(#loc102)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
        %3 = cir.call @fclose(%2) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc104)
        cir.break loc(#loc105)
      } loc(#loc137)
    } loc(#loc137)
    cir.return loc(#loc87)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":28:22)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":28:45)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":22:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":39:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":24:5)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":24:12)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":25:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":25:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":26:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":32:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":26:11)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":28:16)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":28:9)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":28:49)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":30:16)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":30:9)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":31:9)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":33:5)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":38:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":33:11)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":36:16)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":36:9)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":37:9)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":85:1)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":89:1)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":87:5)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":87:13)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":88:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":88:13)
#loc34 = loc("/usr/include/stdlib.h":575:1)
#loc35 = loc("/usr/include/stdlib.h":575:41)
#loc36 = loc("/usr/include/time.h":76:1)
#loc37 = loc("/usr/include/time.h":76:38)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":105:15)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":107:15)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":110:15)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":112:15)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":100:1)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":115:1)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":101:1)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":103:27)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":103:22)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":103:5)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":105:5)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":106:5)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":106:60)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":107:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":110:5)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":111:5)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":111:59)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":112:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":114:12)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":114:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":46:1)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":64:1)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":48:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":48:12)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":49:12)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":49:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":50:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":56:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":50:11)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":52:16)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":52:22)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":52:45)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":52:9)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":52:49)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":54:16)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":54:9)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":55:9)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":57:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":63:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":57:11)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":62:9)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":74:22)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":67:1)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":83:1)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":69:5)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":69:12)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":70:12)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":70:5)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":71:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":76:5)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":71:11)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":74:16)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":74:46)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":74:9)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":74:50)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":75:9)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":77:5)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":82:5)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":77:11)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":80:16)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":80:9)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_16.c":81:9)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc12, #loc11])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc22, #loc23])
#loc114 = loc(fused[#loc28, #loc29])
#loc115 = loc(fused[#loc30, #loc31])
#loc116 = loc(fused[#loc32, #loc33])
#loc117 = loc(fused[#loc34, #loc35])
#loc118 = loc(fused[#loc36, #loc37])
#loc119 = loc(fused[#loc38, #loc39])
#loc120 = loc(fused[#loc44, #loc45])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc59, #loc60])
#loc125 = loc(fused[#loc63, #loc62])
#loc126 = loc(fused[#loc64, #loc65])
#loc127 = loc(fused[#loc66, #loc67])
#loc128 = loc(fused[#loc69, #loc68])
#loc129 = loc(fused[#loc70, #loc71])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc88, #loc89])
#loc134 = loc(fused[#loc91, #loc90])
#loc135 = loc(fused[#loc92, #loc93])
#loc136 = loc(fused[#loc97, #loc98])
#loc137 = loc(fused[#loc100, #loc101])
