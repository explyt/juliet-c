!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc50)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64b_badSink(!cir.ptr<!void>) loc(#loc51)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc9)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc54)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc55)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc56)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64b_badSink(%5) : (!cir.ptr<!void>) -> () loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc52)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc58)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc59)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc57)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc60)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc29)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc63)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc31)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc31)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc64)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc65)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64b_goodG2BSink(%5) : (!cir.ptr<!void>) -> () loc(#loc35)
    cir.return loc(#loc26)
  } loc(#loc61)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64b_goodB2GSink(!cir.ptr<!void>) loc(#loc66)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc68)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc42)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc69)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc44)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc44)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc70)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!u64i>), !cir.ptr<!void> loc(#loc71)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64b_goodB2GSink(%5) : (!cir.ptr<!void>) -> () loc(#loc49)
    cir.return loc(#loc39)
  } loc(#loc67)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":29:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":29:84)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":31:1)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":39:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":33:5)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":33:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":35:12)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":35:5)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":37:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":37:5)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":37:17)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":38:65)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":38:66)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":38:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":71:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":75:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":73:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":73:13)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":74:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":74:13)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":46:1)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":46:88)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":48:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":56:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":50:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":50:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":52:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":52:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":54:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":54:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":55:69)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":55:70)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":55:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":59:1)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":59:88)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":61:1)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":69:1)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":63:5)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":63:12)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":65:12)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":65:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":67:12)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":67:5)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":67:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":68:69)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":68:70)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_64a.c":68:5)
#loc50 = loc(fused[#loc1, #loc2])
#loc51 = loc(fused[#loc3, #loc4])
#loc52 = loc(fused[#loc5, #loc6])
#loc53 = loc(fused[#loc7, #loc8])
#loc54 = loc(fused[#loc10, #loc9])
#loc55 = loc(fused[#loc12, #loc13])
#loc56 = loc(fused[#loc14, #loc15])
#loc57 = loc(fused[#loc17, #loc18])
#loc58 = loc(fused[#loc19, #loc20])
#loc59 = loc(fused[#loc21, #loc22])
#loc60 = loc(fused[#loc23, #loc24])
#loc61 = loc(fused[#loc25, #loc26])
#loc62 = loc(fused[#loc27, #loc28])
#loc63 = loc(fused[#loc30, #loc29])
#loc64 = loc(fused[#loc32, #loc31])
#loc65 = loc(fused[#loc33, #loc34])
#loc66 = loc(fused[#loc36, #loc37])
#loc67 = loc(fused[#loc38, #loc39])
#loc68 = loc(fused[#loc40, #loc41])
#loc69 = loc(fused[#loc43, #loc42])
#loc70 = loc(fused[#loc45, #loc46])
#loc71 = loc(fused[#loc47, #loc48])
