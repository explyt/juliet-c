!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":215:10)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":215:14)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":215:20)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":215:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc429 = loc(fused[#loc212, #loc213])
#loc430 = loc(fused[#loc214, #loc215])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc344)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc346)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc347)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc348)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc349)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc350)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc351)
  cir.func private @close(!s32i) -> !s32i loc(#loc352)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc353)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc354)
  cir.func private @printIntLine(!s32i) loc(#loc355)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc356)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc32)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc361)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc361)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc36)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc36)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc364)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc365)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc366)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc367)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc368)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc366)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc48)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc367)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc55)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc370)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc62)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc372)
                cir.if %64 {
                  cir.break loc(#loc64)
                } loc(#loc373)
              } loc(#loc371)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc375)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc72)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc377)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc75)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc75)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc378)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc79)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc79)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc379)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc382)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc382)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc92)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc383)
                cir.if %68 {
                  cir.break loc(#loc94)
                } loc(#loc384)
              } loc(#loc380)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc98)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc100)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc386)
                cir.if %66 {
                  cir.break loc(#loc102)
                } loc(#loc387)
              } loc(#loc385)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc388)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc112)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc112)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc390)
                cir.if %64 {
                  cir.break loc(#loc114)
                } loc(#loc391)
              } loc(#loc389)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc117)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc117)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc117)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc117)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc117)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc117)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc117)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc118)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc392)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc120)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc120)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc393)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc126)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc126)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc395)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc127)
                  cir.yield %66 : !cir.bool loc(#loc127)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc129)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc396)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc127)
                    cir.yield %70 : !cir.bool loc(#loc127)
                  }, false {
                    %70 = cir.const #false loc(#loc127)
                    cir.yield %70 : !cir.bool loc(#loc127)
                  }) : (!cir.bool) -> !cir.bool loc(#loc127)
                  cir.yield %69 : !cir.bool loc(#loc127)
                }) : (!cir.bool) -> !cir.bool loc(#loc127)
                cir.if %65 {
                  cir.break loc(#loc131)
                } loc(#loc397)
              } loc(#loc394)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc132)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc134)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc398)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc136)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc399)
              cir.yield loc(#loc52)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc139)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc139)
              cir.condition(%17) loc(#loc139)
            } loc(#loc369)
          } loc(#loc369)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc143)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc401)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc146)
            } loc(#loc402)
          } loc(#loc400)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc149)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc150)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc150)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc404)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc153)
            } loc(#loc405)
          } loc(#loc403)
        } loc(#loc363)
      } loc(#loc362)
    } loc(#loc360)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc407)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc408)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc160)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc161)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc409)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc410)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc411)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc412)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc169)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc414)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc171)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc173)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc171)
        } loc(#loc415)
      } loc(#loc413)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc176)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc176)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc417)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc178)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc179)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc418)
          cir.condition(%24) loc(#loc180)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc182)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc184)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc185)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc420)
          } loc(#loc419)
          cir.yield loc(#loc175)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc186)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc187)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc421)
          cir.yield loc(#loc416)
        } loc(#loc416)
      } loc(#loc416)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc189)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc190)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc191)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc192)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc193)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    } loc(#loc406)
    cir.return loc(#loc28)
  } loc(#loc357)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc423)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc424)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc198)
    cir.return loc(#loc195)
  } loc(#loc422)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc425)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc426)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc427)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc209)
  cir.func @main(%arg0: !s32i loc(fused[#loc212, #loc213]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc214, #loc215])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc430)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc211)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc216)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc217)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc218)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc218)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc219)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc206)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc431)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11_good() : () -> () loc(#loc221)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc207)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc208)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc432)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11_bad() : () -> () loc(#loc225)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc209)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc228)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    cir.return %17 : !s32i loc(#loc433)
  } loc(#loc428)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc232)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc436)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc238)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc439)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc439)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc242)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc242)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc232)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc232)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc247)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc248)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc441)
      } loc(#loc440)
    } loc(#loc438)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc443)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc444)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc256)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc257)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc445)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc446)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc256)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc447)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc448)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc265)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc265)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc450)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc268)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc269)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc267)
        } loc(#loc451)
      } loc(#loc449)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc272)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc272)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc453)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc274)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc275)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc454)
          cir.condition(%24) loc(#loc276)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc280)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc281)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc456)
          } loc(#loc455)
          cir.yield loc(#loc271)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc282)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc283)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc457)
          cir.yield loc(#loc452)
        } loc(#loc452)
      } loc(#loc452)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc284)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc285)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc286)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc284)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc287)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc288)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc289)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc289)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc288)
    } loc(#loc442)
    cir.return loc(#loc234)
  } loc(#loc435)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc459)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc295)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc460)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc462)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc462)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc299)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc299)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc302)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc464)
      } loc(#loc463)
    } loc(#loc461)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc466)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc467)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc310)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc311)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc311)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc468)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc469)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc310)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc470)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc471)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc318)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc319)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc319)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc473)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc321)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc322)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc323)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc321)
        } loc(#loc474)
      } loc(#loc472)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc326)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc326)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc476)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc328)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc329)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc329)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc477)
          cir.condition(%24) loc(#loc330)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc332)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc333)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc334)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc335)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc479)
          } loc(#loc478)
          cir.yield loc(#loc325)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc336)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc337)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc480)
          cir.yield loc(#loc475)
        } loc(#loc475)
      } loc(#loc475)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc338)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc339)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc340)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc338)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc341)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc342)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc343)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc343)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc342)
    } loc(#loc465)
    cir.return loc(#loc291)
  } loc(#loc458)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":43:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":134:1)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":45:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":45:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":47:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":47:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":47:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":48:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":119:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":48:8)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":48:26)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":49:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":50:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":118:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":55:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":55:17)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":56:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":56:32)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":57:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":57:35)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":58:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":58:35)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":59:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":59:45)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":60:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":103:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":70:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":70:48)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":70:61)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":70:32)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":70:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":70:72)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":71:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":74:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":71:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":71:37)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":72:17)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":73:21)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:24)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:25)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:37)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:51)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":75:52)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":76:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":76:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":77:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":77:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":78:42)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":78:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":78:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":78:50)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":82:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:26)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:58)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:59)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:68)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:82)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":79:88)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":80:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":81:21)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":83:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":86:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":83:28)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":83:42)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":83:21)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":83:61)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":84:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":85:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":87:39)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":87:53)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":87:59)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":87:32)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":87:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":87:63)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":88:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":91:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":88:21)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":88:37)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":89:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":90:21)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:35)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:49)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:62)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:80)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:83)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:30)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":93:84)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":94:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":97:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":94:21)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":94:35)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":94:48)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":94:51)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":94:65)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":95:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":96:21)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":99:43)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":99:29)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":99:17)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":101:29)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":101:24)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":101:17)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":101:40)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":103:20)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":104:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":107:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":104:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":104:33)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":105:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":106:30)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":106:17)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":108:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":111:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":108:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":108:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":109:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":110:30)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":110:17)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":120:5)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":133:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":121:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":121:16)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":122:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":122:14)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":125:28)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":125:35)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":125:42)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":125:52)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":125:53)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":125:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:43)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:27)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:33)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:34)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:40)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":126:39)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":130:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:18)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:14)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:21)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:33)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:23)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":128:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":129:29)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":129:13)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":129:24)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":129:25)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:40)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":127:39)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":131:22)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":131:33)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":131:34)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":131:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":132:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":132:14)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":199:1)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":203:1)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":201:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":201:14)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":202:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":202:14)
#loc200 = loc("/usr/include/stdlib.h":575:1)
#loc201 = loc("/usr/include/stdlib.h":575:41)
#loc202 = loc("/usr/include/time.h":76:1)
#loc203 = loc("/usr/include/time.h":76:38)
#loc204 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc205 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":220:15)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":222:15)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":225:15)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":227:15)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":215:1)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":230:1)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":216:1)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":218:27)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":218:22)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":218:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":220:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":221:5)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":221:78)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":222:5)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":225:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":226:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":226:77)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":227:5)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":229:12)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":229:5)
#loc230 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc231 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":149:19)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":141:1)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":170:1)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":143:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":143:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":145:13)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":145:12)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":145:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":146:5)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":155:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":146:8)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":146:27)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":147:5)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":150:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":152:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":149:9)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":154:16)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":154:9)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":156:5)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":169:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":157:9)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":157:16)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":158:9)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":158:14)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":161:28)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":161:35)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":161:42)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":161:52)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":161:53)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":161:9)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:43)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:13)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:27)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:33)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:34)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:40)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":162:39)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:9)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":166:9)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:18)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:14)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:21)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:33)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:23)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":164:9)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":165:29)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":165:13)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":165:24)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":165:25)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:40)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":163:39)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":167:22)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":167:33)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":167:34)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":167:9)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":168:9)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":168:14)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":173:1)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":197:1)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":175:5)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":175:9)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":177:13)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":177:12)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":177:5)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":178:5)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":182:5)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":178:8)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":178:26)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":179:5)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":181:16)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":181:9)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":183:5)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":196:5)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":184:9)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":184:16)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":185:9)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":185:14)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":188:28)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":188:35)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":188:42)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":188:52)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":188:53)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":188:9)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:9)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:43)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:13)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:27)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:33)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:34)
#loc322 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:40)
#loc323 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":189:39)
#loc324 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:9)
#loc325 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":193:9)
#loc326 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:18)
#loc327 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:14)
#loc328 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:21)
#loc329 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:33)
#loc330 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:23)
#loc331 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":191:9)
#loc332 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":192:29)
#loc333 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":192:13)
#loc334 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":192:24)
#loc335 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":192:25)
#loc336 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:40)
#loc337 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":190:39)
#loc338 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":194:22)
#loc339 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":194:33)
#loc340 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":194:34)
#loc341 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":194:9)
#loc342 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":195:9)
#loc343 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_11.c":195:14)
#loc344 = loc(fused[#loc1, #loc2])
#loc345 = loc(fused[#loc3, #loc4])
#loc346 = loc(fused[#loc5, #loc6])
#loc347 = loc(fused[#loc7, #loc8])
#loc348 = loc(fused[#loc9, #loc10])
#loc349 = loc(fused[#loc11, #loc12])
#loc350 = loc(fused[#loc13, #loc14])
#loc351 = loc(fused[#loc15, #loc16])
#loc352 = loc(fused[#loc17, #loc18])
#loc353 = loc(fused[#loc19, #loc20])
#loc354 = loc(fused[#loc21, #loc22])
#loc355 = loc(fused[#loc23, #loc24])
#loc356 = loc(fused[#loc25, #loc26])
#loc357 = loc(fused[#loc27, #loc28])
#loc358 = loc(fused[#loc29, #loc30])
#loc359 = loc(fused[#loc33, #loc31])
#loc360 = loc(fused[#loc34, #loc35])
#loc361 = loc(fused[#loc36, #loc37])
#loc362 = loc(fused[#loc38, #loc35])
#loc363 = loc(fused[#loc39, #loc40])
#loc364 = loc(fused[#loc41, #loc42])
#loc365 = loc(fused[#loc43, #loc44])
#loc366 = loc(fused[#loc45, #loc46])
#loc367 = loc(fused[#loc47, #loc48])
#loc368 = loc(fused[#loc49, #loc50])
#loc369 = loc(fused[#loc51, #loc52])
#loc370 = loc(fused[#loc57, #loc58])
#loc371 = loc(fused[#loc59, #loc60])
#loc372 = loc(fused[#loc61, #loc62])
#loc373 = loc(fused[#loc63, #loc60])
#loc374 = loc(fused[#loc65, #loc66])
#loc375 = loc(fused[#loc68, #loc69])
#loc376 = loc(fused[#loc70, #loc71])
#loc377 = loc(fused[#loc74, #loc72])
#loc378 = loc(fused[#loc78, #loc75])
#loc379 = loc(fused[#loc82, #loc83])
#loc380 = loc(fused[#loc84, #loc85])
#loc381 = loc(fused[#loc87, #loc88])
#loc382 = loc(fused[#loc89, #loc90])
#loc383 = loc(fused[#loc91, #loc92])
#loc384 = loc(fused[#loc93, #loc85])
#loc385 = loc(fused[#loc95, #loc96])
#loc386 = loc(fused[#loc99, #loc100])
#loc387 = loc(fused[#loc101, #loc96])
#loc388 = loc(fused[#loc107, #loc108])
#loc389 = loc(fused[#loc109, #loc110])
#loc390 = loc(fused[#loc111, #loc112])
#loc391 = loc(fused[#loc113, #loc110])
#loc392 = loc(fused[#loc117, #loc118])
#loc393 = loc(fused[#loc121, #loc122])
#loc394 = loc(fused[#loc123, #loc124])
#loc395 = loc(fused[#loc125, #loc126])
#loc396 = loc(fused[#loc128, #loc129])
#loc397 = loc(fused[#loc130, #loc124])
#loc398 = loc(fused[#loc134, #loc132])
#loc399 = loc(fused[#loc137, #loc138])
#loc400 = loc(fused[#loc140, #loc141])
#loc401 = loc(fused[#loc142, #loc143])
#loc402 = loc(fused[#loc144, #loc141])
#loc403 = loc(fused[#loc147, #loc148])
#loc404 = loc(fused[#loc149, #loc150])
#loc405 = loc(fused[#loc151, #loc148])
#loc406 = loc(fused[#loc154, #loc155])
#loc407 = loc(fused[#loc156, #loc157])
#loc408 = loc(fused[#loc158, #loc159])
#loc409 = loc(fused[#loc162, #loc163])
#loc410 = loc(fused[#loc161, #loc163])
#loc411 = loc(fused[#loc160, #loc164])
#loc412 = loc(fused[#loc165, #loc164])
#loc413 = loc(fused[#loc166, #loc167])
#loc414 = loc(fused[#loc168, #loc169])
#loc415 = loc(fused[#loc170, #loc167])
#loc416 = loc(fused[#loc174, #loc175])
#loc417 = loc(fused[#loc177, #loc176])
#loc418 = loc(fused[#loc178, #loc179])
#loc419 = loc(fused[#loc181, #loc175])
#loc420 = loc(fused[#loc183, #loc182])
#loc421 = loc(fused[#loc187, #loc186])
#loc422 = loc(fused[#loc194, #loc195])
#loc423 = loc(fused[#loc196, #loc197])
#loc424 = loc(fused[#loc198, #loc199])
#loc425 = loc(fused[#loc200, #loc201])
#loc426 = loc(fused[#loc202, #loc203])
#loc427 = loc(fused[#loc204, #loc205])
#loc428 = loc(fused[#loc210, #loc211])
#loc431 = loc(fused[#loc221, #loc222])
#loc432 = loc(fused[#loc225, #loc226])
#loc433 = loc(fused[#loc229, #loc228])
#loc434 = loc(fused[#loc230, #loc231])
#loc435 = loc(fused[#loc233, #loc234])
#loc436 = loc(fused[#loc235, #loc236])
#loc437 = loc(fused[#loc239, #loc237])
#loc438 = loc(fused[#loc240, #loc241])
#loc439 = loc(fused[#loc242, #loc243])
#loc440 = loc(fused[#loc244, #loc245, #loc246, #loc241])
#loc441 = loc(fused[#loc249, #loc248])
#loc442 = loc(fused[#loc250, #loc251])
#loc443 = loc(fused[#loc252, #loc253])
#loc444 = loc(fused[#loc254, #loc255])
#loc445 = loc(fused[#loc258, #loc259])
#loc446 = loc(fused[#loc257, #loc259])
#loc447 = loc(fused[#loc256, #loc260])
#loc448 = loc(fused[#loc261, #loc260])
#loc449 = loc(fused[#loc262, #loc263])
#loc450 = loc(fused[#loc264, #loc265])
#loc451 = loc(fused[#loc266, #loc263])
#loc452 = loc(fused[#loc270, #loc271])
#loc453 = loc(fused[#loc273, #loc272])
#loc454 = loc(fused[#loc274, #loc275])
#loc455 = loc(fused[#loc277, #loc271])
#loc456 = loc(fused[#loc279, #loc278])
#loc457 = loc(fused[#loc283, #loc282])
#loc458 = loc(fused[#loc290, #loc291])
#loc459 = loc(fused[#loc292, #loc293])
#loc460 = loc(fused[#loc296, #loc294])
#loc461 = loc(fused[#loc297, #loc298])
#loc462 = loc(fused[#loc299, #loc300])
#loc463 = loc(fused[#loc301, #loc298])
#loc464 = loc(fused[#loc303, #loc302])
#loc465 = loc(fused[#loc304, #loc305])
#loc466 = loc(fused[#loc306, #loc307])
#loc467 = loc(fused[#loc308, #loc309])
#loc468 = loc(fused[#loc312, #loc313])
#loc469 = loc(fused[#loc311, #loc313])
#loc470 = loc(fused[#loc310, #loc314])
#loc471 = loc(fused[#loc315, #loc314])
#loc472 = loc(fused[#loc316, #loc317])
#loc473 = loc(fused[#loc318, #loc319])
#loc474 = loc(fused[#loc320, #loc317])
#loc475 = loc(fused[#loc324, #loc325])
#loc476 = loc(fused[#loc327, #loc326])
#loc477 = loc(fused[#loc328, #loc329])
#loc478 = loc(fused[#loc331, #loc325])
#loc479 = loc(fused[#loc333, #loc332])
#loc480 = loc(fused[#loc337, #loc336])
