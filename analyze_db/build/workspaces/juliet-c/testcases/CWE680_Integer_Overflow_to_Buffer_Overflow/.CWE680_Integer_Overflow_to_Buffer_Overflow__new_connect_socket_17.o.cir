!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc220)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc222)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc223)
  cir.func private @close(!s32i) -> !s32i loc(#loc224)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc225)
  cir.func private @printIntLine(!s32i) loc(#loc226)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc228)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc27)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc31)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc233)
        cir.condition(%7) loc(#loc233)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc236)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc237)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc238)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc239)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc43)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc238)
            cir.scope {
              cir.do {
                cir.scope {
                  %11 = cir.const #cir.int<2> : !s32i loc(#loc50)
                  %12 = cir.const #cir.int<1> : !u32i loc(#loc51)
                  %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc51)
                  %14 = cir.const #cir.int<6> : !u32i loc(#loc52)
                  %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc52)
                  %16 = cir.call @socket(%11, %13, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                  cir.store %16, %7 : !s32i, !cir.ptr<!s32i> loc(#loc242)
                  cir.scope {
                    %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc59)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc59)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc244)
                    cir.if %57 {
                      cir.break loc(#loc61)
                    } loc(#loc245)
                  } loc(#loc243)
                  %17 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc246)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc64)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc247)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc69)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc69)
                  %22 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc249)
                  %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
                  %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                  %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                  cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc250)
                  %28 = cir.const #cir.int<27015> : !s32i loc(#loc77)
                  %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc77)
                  %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
                  %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                  cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc251)
                  cir.scope {
                    %54 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                    %55 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc253)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc254)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc254)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc90)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc90)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc255)
                    cir.if %61 {
                      cir.break loc(#loc92)
                    } loc(#loc256)
                  } loc(#loc252)
                  %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                  %33 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc94)
                  %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
                  %35 = cir.const #cir.int<3> : !s32i loc(#loc95)
                  %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc95)
                  %37 = cir.const #cir.int<4> : !u64i loc(#loc95)
                  %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc95)
                  %39 = cir.const #cir.int<2> : !s32i loc(#loc95)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc95)
                  %41 = cir.binop(add, %38, %40) : !u64i loc(#loc95)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc96)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc96)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc257)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc97)
                  %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
                  %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc98)
                  cir.store %47, %5 : !s32i, !cir.ptr<!s32i> loc(#loc258)
                  cir.scope {
                    %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc104)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc104)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc260)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc105)
                      cir.yield %59 : !cir.bool loc(#loc105)
                    }, false {
                      %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc107)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc261)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc105)
                        cir.yield %63 : !cir.bool loc(#loc105)
                      }, false {
                        %63 = cir.const #false loc(#loc105)
                        cir.yield %63 : !cir.bool loc(#loc105)
                      }) : (!cir.bool) -> !cir.bool loc(#loc105)
                      cir.yield %62 : !cir.bool loc(#loc105)
                    }) : (!cir.bool) -> !cir.bool loc(#loc105)
                    cir.if %58 {
                      cir.break loc(#loc109)
                    } loc(#loc262)
                  } loc(#loc259)
                  %48 = cir.const #cir.int<0> : !s8i loc(#loc110)
                  %49 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                  %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc112)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc263)
                  %52 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
                  %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc114)
                  cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc264)
                } loc(#loc241)
                cir.yield loc(#loc47)
              } while {
                %11 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc117)
                cir.condition(%12) loc(#loc117)
              } loc(#loc240)
            } loc(#loc240)
            cir.scope {
              %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc121)
              %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc266)
              cir.if %14 {
                %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc124)
              } loc(#loc267)
            } loc(#loc265)
          } loc(#loc235)
        } loc(#loc234)
        cir.yield loc(#loc30)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc126)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
        cir.yield loc(#loc231)
      } loc(#loc231)
    } loc(#loc231)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc270)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc271)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc272)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc134)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc273)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc274)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc275)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc138)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc139)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc276)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc276)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc277)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc145)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc145)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc279)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc147)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc148)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc280)
          cir.condition(%25) loc(#loc280)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc153)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc282)
          } loc(#loc281)
          cir.yield loc(#loc144)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc155)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc283)
          cir.yield loc(#loc278)
        } loc(#loc278)
      } loc(#loc278)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc157)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc158)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc159)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
      cir.delete.array %19 : <!s32i> loc(#loc160)
    } loc(#loc269)
    cir.return loc(#loc21)
  } loc(#loc227)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc286)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc168)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc172)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc290)
        cir.condition(%7) loc(#loc290)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<20> : !s32i loc(#loc177)
          cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc292)
        } loc(#loc291)
        cir.yield loc(#loc171)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc180)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
        cir.yield loc(#loc288)
      } loc(#loc288)
    } loc(#loc288)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc295)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc296)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc297)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc188)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc298)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc299)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc300)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc192)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc193)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc301)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc301)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc302)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc199)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc199)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc304)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc201)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc202)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc202)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc305)
          cir.condition(%25) loc(#loc305)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc204)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc206)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc207)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc307)
          } loc(#loc306)
          cir.yield loc(#loc198)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc208)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc209)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc308)
          cir.yield loc(#loc303)
        } loc(#loc303)
      } loc(#loc303)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc211)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc212)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc210)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc213)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
      cir.delete.array %19 : <!s32i> loc(#loc214)
    } loc(#loc294)
    cir.return loc(#loc162)
  } loc(#loc284)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17L7goodG2BEv() : () -> () loc(#loc217)
    cir.return loc(#loc216)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":80:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":46:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":124:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":48:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":48:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":49:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":49:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":51:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":51:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":51:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":110:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:20)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":53:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":54:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":109:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":59:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":59:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":60:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":60:32)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":61:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":61:36)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":62:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":62:45)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":63:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":98:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":64:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":97:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":73:40)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":73:49)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":73:62)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":73:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":73:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":73:73)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":74:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":77:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":74:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":74:38)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":75:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":76:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:24)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:25)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:37)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:51)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:17)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":78:52)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":79:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":79:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":80:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":80:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":80:63)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":81:42)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":81:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":81:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":81:50)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":85:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:29)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:62)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:63)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:72)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:86)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":82:92)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":83:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":84:21)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:35)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:50)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:63)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:81)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:84)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:30)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":88:85)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":89:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":92:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":89:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":89:35)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":89:48)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":89:51)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":89:65)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":90:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":91:21)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":94:43)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":94:29)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":94:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":96:29)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":96:24)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":96:17)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":96:40)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":98:20)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":99:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":102:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":99:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":99:34)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":100:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":101:30)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":101:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:24)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":52:23)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":111:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":123:5)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":112:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":112:16)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":112:26)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":113:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":113:14)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":115:21)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":115:28)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":115:38)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":115:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":116:37)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":46:6)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":116:28)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":116:46)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":116:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":120:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:18)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:14)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:21)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:33)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":118:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":119:29)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":119:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":119:24)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":119:25)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:40)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":117:39)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":121:22)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":121:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":121:34)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":121:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":122:19)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":131:1)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":155:1)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":133:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":133:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":134:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":134:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":136:13)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":136:12)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":136:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":141:5)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:9)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:16)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:20)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":138:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":140:16)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":140:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:24)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":137:23)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":142:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":154:5)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":143:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":143:16)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":143:26)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":144:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":144:14)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":146:21)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":146:28)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":146:38)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":146:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":147:37)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":131:13)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":147:28)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":147:46)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":147:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":151:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:18)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:14)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:21)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:33)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":149:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":150:29)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":150:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":150:24)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":150:25)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:40)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":148:39)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":152:22)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":152:33)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":152:34)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":152:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":153:19)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":157:1)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":160:1)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_17.cpp":159:5)
#loc218 = loc(fused[#loc1, #loc2])
#loc219 = loc(fused[#loc3, #loc4])
#loc220 = loc(fused[#loc6, #loc7])
#loc221 = loc(fused[#loc8, #loc9])
#loc222 = loc(fused[#loc10, #loc11])
#loc223 = loc(fused[#loc12, #loc13])
#loc224 = loc(fused[#loc14, #loc15])
#loc225 = loc(fused[#loc16, #loc17])
#loc226 = loc(fused[#loc18, #loc19])
#loc227 = loc(fused[#loc20, #loc21])
#loc228 = loc(fused[#loc22, #loc23])
#loc229 = loc(fused[#loc24, #loc25])
#loc230 = loc(fused[#loc28, #loc26])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc32, #loc31])
#loc233 = loc(fused[#loc33, #loc34])
#loc234 = loc(fused[#loc35, #loc30])
#loc235 = loc(fused[#loc36, #loc37])
#loc236 = loc(fused[#loc38, #loc39])
#loc237 = loc(fused[#loc40, #loc41])
#loc238 = loc(fused[#loc42, #loc43])
#loc239 = loc(fused[#loc44, #loc45])
#loc240 = loc(fused[#loc46, #loc47])
#loc241 = loc(fused[#loc48, #loc49])
#loc242 = loc(fused[#loc54, #loc55])
#loc243 = loc(fused[#loc56, #loc57])
#loc244 = loc(fused[#loc58, #loc59])
#loc245 = loc(fused[#loc60, #loc57])
#loc246 = loc(fused[#loc62, #loc63])
#loc247 = loc(fused[#loc65, #loc66])
#loc248 = loc(fused[#loc67, #loc68])
#loc249 = loc(fused[#loc71, #loc69])
#loc250 = loc(fused[#loc75, #loc76])
#loc251 = loc(fused[#loc80, #loc81])
#loc252 = loc(fused[#loc82, #loc83])
#loc253 = loc(fused[#loc85, #loc86])
#loc254 = loc(fused[#loc87, #loc88])
#loc255 = loc(fused[#loc89, #loc90])
#loc256 = loc(fused[#loc91, #loc83])
#loc257 = loc(fused[#loc95, #loc96])
#loc258 = loc(fused[#loc99, #loc100])
#loc259 = loc(fused[#loc101, #loc102])
#loc260 = loc(fused[#loc103, #loc104])
#loc261 = loc(fused[#loc106, #loc107])
#loc262 = loc(fused[#loc108, #loc102])
#loc263 = loc(fused[#loc112, #loc110])
#loc264 = loc(fused[#loc115, #loc116])
#loc265 = loc(fused[#loc118, #loc119])
#loc266 = loc(fused[#loc120, #loc121])
#loc267 = loc(fused[#loc122, #loc119])
#loc268 = loc(fused[#loc126, #loc125])
#loc269 = loc(fused[#loc127, #loc128])
#loc270 = loc(fused[#loc129, #loc130])
#loc271 = loc(fused[#loc129, #loc131])
#loc272 = loc(fused[#loc132, #loc133])
#loc273 = loc(fused[#loc135, #loc136])
#loc274 = loc(fused[#loc134, #loc136])
#loc275 = loc(fused[#loc137, #loc136])
#loc276 = loc(fused[#loc140, #loc141])
#loc277 = loc(fused[#loc142, #loc141])
#loc278 = loc(fused[#loc143, #loc144])
#loc279 = loc(fused[#loc146, #loc145])
#loc280 = loc(fused[#loc147, #loc148])
#loc281 = loc(fused[#loc149, #loc144])
#loc282 = loc(fused[#loc151, #loc150])
#loc283 = loc(fused[#loc155, #loc154])
#loc284 = loc(fused[#loc161, #loc162])
#loc285 = loc(fused[#loc163, #loc164])
#loc286 = loc(fused[#loc165, #loc166])
#loc287 = loc(fused[#loc169, #loc167])
#loc288 = loc(fused[#loc170, #loc171])
#loc289 = loc(fused[#loc173, #loc172])
#loc290 = loc(fused[#loc174, #loc175])
#loc291 = loc(fused[#loc176, #loc171])
#loc292 = loc(fused[#loc178, #loc177])
#loc293 = loc(fused[#loc180, #loc179])
#loc294 = loc(fused[#loc181, #loc182])
#loc295 = loc(fused[#loc183, #loc184])
#loc296 = loc(fused[#loc183, #loc185])
#loc297 = loc(fused[#loc186, #loc187])
#loc298 = loc(fused[#loc189, #loc190])
#loc299 = loc(fused[#loc188, #loc190])
#loc300 = loc(fused[#loc191, #loc190])
#loc301 = loc(fused[#loc194, #loc195])
#loc302 = loc(fused[#loc196, #loc195])
#loc303 = loc(fused[#loc197, #loc198])
#loc304 = loc(fused[#loc200, #loc199])
#loc305 = loc(fused[#loc201, #loc202])
#loc306 = loc(fused[#loc203, #loc198])
#loc307 = loc(fused[#loc205, #loc204])
#loc308 = loc(fused[#loc209, #loc208])
#loc309 = loc(fused[#loc215, #loc216])
