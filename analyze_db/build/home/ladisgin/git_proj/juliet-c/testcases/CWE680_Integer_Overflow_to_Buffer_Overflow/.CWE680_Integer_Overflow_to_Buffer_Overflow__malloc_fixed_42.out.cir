!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":21:22)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":21:26)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":101:10)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":101:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":101:20)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":101:32)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":56:26)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":56:30)
#loc166 = loc(fused[#loc3, #loc4])
#loc200 = loc(fused[#loc87, #loc88])
#loc201 = loc(fused[#loc89, #loc90])
#loc206 = loc(fused[#loc107, #loc108])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc3, #loc4])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc5)
    %2 = cir.const #cir.int<2147483647> : !s32i loc(#loc6)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc7)
    %4 = cir.binop(div, %2, %3) : !s32i loc(#loc167)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc167)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %8 : !s32i loc(#loc169)
  } loc(#loc165)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc170)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc171)
  cir.func private @printIntLine(!s32i) loc(#loc172)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc173)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc29)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc32)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc37)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc38)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc181)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc182)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc37)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc183)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc184)
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc46)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc186)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc187)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc48)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc50)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc48)
    cir.br ^bb4 loc(#loc44)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc44)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc53)
    cir.store %22, %0 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb7 loc(#loc188)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc56)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %26 ^bb8, ^bb12 loc(#loc57)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc191)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc62)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc52)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc64)
    cir.store %32, %0 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.br ^bb7 loc(#loc188)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc52)
  ^bb13:  // pred: ^bb12
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc68)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc69)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc70)
    cir.br ^bb14 loc(#loc36)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc21)
  } loc(#loc174)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc194)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc196)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc197)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    cir.return %17 : !s32i loc(#loc204)
  } loc(#loc199)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc107, #loc108])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc110)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.return %4 : !s32i loc(#loc208)
  } loc(#loc205)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc212)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc123)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %6 = cir.call @goodG2BSource(%5) : (!s32i) -> !s32i loc(#loc126)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc132)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc216)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc217)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc131)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc218)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
    cir.br ^bb2 loc(#loc220)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc221)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc222)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc144)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc142)
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc223)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc147)
    cir.store %22, %0 : !u64i, !cir.ptr<!u64i> loc(#loc224)
    cir.br ^bb7 loc(#loc223)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc150)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc225)
    cir.brcond %26 ^bb8, ^bb12 loc(#loc151)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc226)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc156)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb10 loc(#loc146)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc146)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc158)
    cir.store %32, %0 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb7 loc(#loc223)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // pred: ^bb12
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc162)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc164)
    cir.br ^bb14 loc(#loc130)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc115)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":21:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":28:1)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":22:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":24:12)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":24:22)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":24:26)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":24:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":27:12)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":27:5)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("/usr/include/stdlib.h":687:1)
#loc19 = loc("/usr/include/stdlib.h":687:32)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":30:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":50:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":37:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":37:16)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":38:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":38:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":32:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":32:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":34:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":34:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":34:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":35:22)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":35:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":35:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":35:26)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":36:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":49:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":41:28)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":41:35)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":41:42)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":41:52)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":41:53)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":41:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:43)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:27)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:34)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":42:39)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":46:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:18)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:14)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:21)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:23)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":44:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":45:29)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":45:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":45:24)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":45:25)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:40)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":43:39)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":47:22)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":47:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":47:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":47:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":48:14)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":48:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":86:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":89:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":88:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":88:13)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc80 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":106:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":108:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":111:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":113:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":101:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":116:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":102:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":104:27)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":104:22)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":104:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":106:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":107:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":107:70)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":108:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":111:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":112:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":112:69)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":113:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":115:12)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":115:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":56:1)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":61:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":57:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":59:12)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":59:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":60:12)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":60:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":64:1)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":84:1)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":71:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":71:16)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":72:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":72:14)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":66:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":66:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":68:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":68:12)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":68:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":69:26)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":69:12)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":69:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":69:30)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":70:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":83:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":75:28)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":75:35)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":75:42)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":75:52)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":75:53)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":75:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:43)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:27)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:33)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:34)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:40)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":76:39)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":80:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:18)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:14)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:21)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:23)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":78:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":79:29)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":79:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":79:24)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":79:25)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:40)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":77:39)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":81:22)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":81:33)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":81:34)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":81:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":82:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_42.c":82:9)
#loc165 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc6, #loc7])
#loc168 = loc(fused[#loc9, #loc8])
#loc169 = loc(fused[#loc11, #loc10])
#loc170 = loc(fused[#loc12, #loc13])
#loc171 = loc(fused[#loc14, #loc15])
#loc172 = loc(fused[#loc16, #loc17])
#loc173 = loc(fused[#loc18, #loc19])
#loc174 = loc(fused[#loc20, #loc21])
#loc175 = loc(fused[#loc22, #loc23])
#loc176 = loc(fused[#loc24, #loc25])
#loc177 = loc(fused[#loc26, #loc27])
#loc178 = loc(fused[#loc30, #loc28])
#loc179 = loc(fused[#loc33, #loc34])
#loc180 = loc(fused[#loc35, #loc36])
#loc181 = loc(fused[#loc39, #loc40])
#loc182 = loc(fused[#loc38, #loc40])
#loc183 = loc(fused[#loc37, #loc41])
#loc184 = loc(fused[#loc42, #loc41])
#loc185 = loc(fused[#loc43, #loc44])
#loc186 = loc(fused[#loc45, #loc46])
#loc187 = loc(fused[#loc47, #loc44])
#loc188 = loc(fused[#loc51, #loc52])
#loc189 = loc(fused[#loc54, #loc53])
#loc190 = loc(fused[#loc55, #loc56])
#loc191 = loc(fused[#loc58, #loc52])
#loc192 = loc(fused[#loc60, #loc59])
#loc193 = loc(fused[#loc64, #loc63])
#loc194 = loc(fused[#loc71, #loc72])
#loc195 = loc(fused[#loc73, #loc74])
#loc196 = loc(fused[#loc75, #loc76])
#loc197 = loc(fused[#loc77, #loc78])
#loc198 = loc(fused[#loc79, #loc80])
#loc199 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc96, #loc97])
#loc203 = loc(fused[#loc100, #loc101])
#loc204 = loc(fused[#loc104, #loc103])
#loc205 = loc(fused[#loc105, #loc106])
#loc207 = loc(fused[#loc111, #loc110])
#loc208 = loc(fused[#loc113, #loc112])
#loc209 = loc(fused[#loc114, #loc115])
#loc210 = loc(fused[#loc116, #loc117])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc120, #loc121])
#loc213 = loc(fused[#loc124, #loc122])
#loc214 = loc(fused[#loc127, #loc128])
#loc215 = loc(fused[#loc129, #loc130])
#loc216 = loc(fused[#loc133, #loc134])
#loc217 = loc(fused[#loc132, #loc134])
#loc218 = loc(fused[#loc131, #loc135])
#loc219 = loc(fused[#loc136, #loc135])
#loc220 = loc(fused[#loc137, #loc138])
#loc221 = loc(fused[#loc139, #loc140])
#loc222 = loc(fused[#loc141, #loc138])
#loc223 = loc(fused[#loc145, #loc146])
#loc224 = loc(fused[#loc148, #loc147])
#loc225 = loc(fused[#loc149, #loc150])
#loc226 = loc(fused[#loc152, #loc146])
#loc227 = loc(fused[#loc154, #loc153])
#loc228 = loc(fused[#loc158, #loc157])
