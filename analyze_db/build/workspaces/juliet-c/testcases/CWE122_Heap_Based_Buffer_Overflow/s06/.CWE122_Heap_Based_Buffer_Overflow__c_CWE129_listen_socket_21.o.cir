!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":47:21)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":47:25)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":168:26)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":168:30)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":284:26)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":284:30)
#loc643 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":395:25)
#loc644 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":395:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc739 = loc(fused[#loc32, #loc33])
#loc820 = loc(fused[#loc241, #loc242])
#loc898 = loc(fused[#loc443, #loc444])
#loc976 = loc(fused[#loc643, #loc644])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc724)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc725)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc726)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc727)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc728)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc729)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc730)
  cir.func private @close(!s32i) -> !s32i loc(#loc731)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc732)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc733)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc734)
  cir.func private @printIntLine(!s32i) loc(#loc735)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc736)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc27)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc737)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc32, #loc33])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc739)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc34)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc732)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc37)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc743)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc744)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc45)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc46)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc46)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc745)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc746)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc45)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc747)
          cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc744)
          cir.scope {
            %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc52)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc749)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc55)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc56)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
            } loc(#loc750)
          } loc(#loc748)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc752)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc62)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc753)
              cir.condition(%19) loc(#loc63)
            } body {
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
                %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc68)
                cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc755)
              } loc(#loc754)
              cir.yield loc(#loc58)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc70)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc756)
              cir.yield loc(#loc751)
            } loc(#loc751)
          } loc(#loc751)
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc74)
            %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc758)
            cir.if %18 {
              %19 = cir.const #cir.int<1> : !s32i loc(#loc78)
              %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
              %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
              %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc81)
              cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc760)
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc84)
                cir.store %23, %4 : !s32i, !cir.ptr<!s32i> loc(#loc762)
                cir.for : cond {
                  %24 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                  %25 = cir.const #cir.int<10> : !s32i loc(#loc87)
                  %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc763)
                  cir.condition(%26) loc(#loc88)
                } body {
                  cir.scope {
                    %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
                    %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc92)
                    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc93)
                  } loc(#loc764)
                  cir.yield loc(#loc83)
                } step {
                  %24 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                  %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc95)
                  cir.store %25, %4 : !s32i, !cir.ptr<!s32i> loc(#loc765)
                  cir.yield loc(#loc761)
                } loc(#loc761)
              } loc(#loc761)
            } else {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc27)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc27)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc96)
            } loc(#loc759)
          } loc(#loc757)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc97)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc98)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
        } loc(#loc742)
      } loc(#loc741)
    } loc(#loc740)
    cir.return loc(#loc31)
  } loc(#loc738)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc767)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc104)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc768)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc770)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc771)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc772)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc773)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc774)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc113)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc113)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc772)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc115)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc773)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc122)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc123)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc124)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc125)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc777)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc131)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc779)
              cir.if %63 {
                cir.break loc(#loc133)
              } loc(#loc780)
            } loc(#loc778)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc781)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc136)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc782)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc783)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc141)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc141)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc142)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc784)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc144)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc144)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc145)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc146)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc785)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc148)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc148)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc149)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc150)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc786)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc788)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc789)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc789)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc160)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc161)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc161)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc790)
              cir.if %67 {
                cir.break loc(#loc163)
              } loc(#loc791)
            } loc(#loc787)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc167)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc168)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc169)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc169)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc793)
              cir.if %65 {
                cir.break loc(#loc171)
              } loc(#loc794)
            } loc(#loc792)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc173)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc174)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc175)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc795)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc181)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc181)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc797)
              cir.if %63 {
                cir.break loc(#loc183)
              } loc(#loc798)
            } loc(#loc796)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc185)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc186)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc186)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc186)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc186)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc186)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc186)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc186)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc187)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc187)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc799)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc188)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc189)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc189)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc800)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc195)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc195)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc802)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc196)
                cir.yield %65 : !cir.bool loc(#loc196)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc198)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc803)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc196)
                  cir.yield %69 : !cir.bool loc(#loc196)
                }, false {
                  %69 = cir.const #false loc(#loc196)
                  cir.yield %69 : !cir.bool loc(#loc196)
                }) : (!cir.bool) -> !cir.bool loc(#loc196)
                cir.yield %68 : !cir.bool loc(#loc196)
              }) : (!cir.bool) -> !cir.bool loc(#loc196)
              cir.if %64 {
                cir.break loc(#loc200)
              } loc(#loc804)
            } loc(#loc801)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc201)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc201)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc202)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc203)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc203)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc805)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc204)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc205)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc806)
          } loc(#loc776)
          cir.yield loc(#loc119)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc208)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc208)
          cir.condition(%16) loc(#loc208)
        } loc(#loc775)
      } loc(#loc775)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc211)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc212)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc212)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc808)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc215)
        } loc(#loc809)
      } loc(#loc807)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc218)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc219)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc811)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc221)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc222)
        } loc(#loc812)
      } loc(#loc810)
    } loc(#loc769)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc732)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc813)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc226)
    cir.return loc(#loc100)
  } loc(#loc766)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc815)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc229)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc816)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc231)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc817)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc233)
    cir.return loc(#loc228)
  } loc(#loc814)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc818)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc238)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc241, #loc242])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc820)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc818)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc246)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc246)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc237)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc237)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc250)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc824)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc825)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc257)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc258)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc258)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc826)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc827)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc257)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc828)
          cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc825)
          cir.scope {
            %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc263)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc264)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc264)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc830)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc266)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc267)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc268)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc266)
            } loc(#loc831)
          } loc(#loc829)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc271)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc833)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc273)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc274)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc834)
              cir.condition(%19) loc(#loc275)
            } body {
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc277)
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc278)
                %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc280)
                cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc836)
              } loc(#loc835)
              cir.yield loc(#loc270)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc282)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc837)
              cir.yield loc(#loc832)
            } loc(#loc832)
          } loc(#loc832)
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc286)
            %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc839)
            %19 = cir.ternary(%18, true {
              %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc288)
              %21 = cir.const #cir.int<10> : !s32i loc(#loc289)
              %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc840)
              %23 = cir.ternary(%22, true {
                %24 = cir.const #true loc(#loc287)
                cir.yield %24 : !cir.bool loc(#loc287)
              }, false {
                %24 = cir.const #false loc(#loc287)
                cir.yield %24 : !cir.bool loc(#loc287)
              }) : (!cir.bool) -> !cir.bool loc(#loc287)
              cir.yield %23 : !cir.bool loc(#loc287)
            }, false {
              %20 = cir.const #false loc(#loc287)
              cir.yield %20 : !cir.bool loc(#loc287)
            }) : (!cir.bool) -> !cir.bool loc(#loc287)
            cir.if %19 {
              %20 = cir.const #cir.int<1> : !s32i loc(#loc294)
              %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc295)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc297)
              cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc842)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc300)
                cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc844)
                cir.for : cond {
                  %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                  %26 = cir.const #cir.int<10> : !s32i loc(#loc303)
                  %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc845)
                  cir.condition(%27) loc(#loc304)
                } body {
                  cir.scope {
                    %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc306)
                    %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc308)
                    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc309)
                  } loc(#loc846)
                  cir.yield loc(#loc299)
                } step {
                  %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc310)
                  %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc311)
                  cir.store %26, %4 : !s32i, !cir.ptr<!s32i> loc(#loc847)
                  cir.yield loc(#loc843)
                } loc(#loc843)
              } loc(#loc843)
            } else {
              %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc238)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc238)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc312)
            } loc(#loc841)
          } loc(#loc838)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc313)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc314)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc314)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc313)
        } loc(#loc823)
      } loc(#loc822)
    } loc(#loc821)
    cir.return loc(#loc240)
  } loc(#loc819)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc849)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc319)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc320)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc850)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc852)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc853)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc854)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc855)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc856)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc329)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc329)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc854)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc331)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc331)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc855)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc338)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc339)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc340)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc341)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc859)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc347)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc347)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc861)
              cir.if %63 {
                cir.break loc(#loc349)
              } loc(#loc862)
            } loc(#loc860)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc863)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc352)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc864)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc865)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc357)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc357)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc142)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc866)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc359)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc359)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc145)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc146)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc867)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc361)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc361)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc362)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc150)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc868)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc870)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc871)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc871)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc372)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc373)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc373)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc872)
              cir.if %67 {
                cir.break loc(#loc375)
              } loc(#loc873)
            } loc(#loc869)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc378)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc379)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc380)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc381)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc381)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc875)
              cir.if %65 {
                cir.break loc(#loc383)
              } loc(#loc876)
            } loc(#loc874)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc384)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc385)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc386)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc387)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc877)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc392)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc393)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc393)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc879)
              cir.if %63 {
                cir.break loc(#loc395)
              } loc(#loc880)
            } loc(#loc878)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc396)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc397)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc397)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc398)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc398)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc398)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc398)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc398)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc398)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc398)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc399)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc399)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc881)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc400)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc401)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc401)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc882)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc406)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc407)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc407)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc884)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc408)
                cir.yield %65 : !cir.bool loc(#loc408)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc410)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc885)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc408)
                  cir.yield %69 : !cir.bool loc(#loc408)
                }, false {
                  %69 = cir.const #false loc(#loc408)
                  cir.yield %69 : !cir.bool loc(#loc408)
                }) : (!cir.bool) -> !cir.bool loc(#loc408)
                cir.yield %68 : !cir.bool loc(#loc408)
              }) : (!cir.bool) -> !cir.bool loc(#loc408)
              cir.if %64 {
                cir.break loc(#loc412)
              } loc(#loc886)
            } loc(#loc883)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc413)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc413)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc414)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc415)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc415)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc887)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc416)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc417)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc888)
          } loc(#loc858)
          cir.yield loc(#loc335)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc420)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc420)
          cir.condition(%16) loc(#loc420)
        } loc(#loc857)
      } loc(#loc857)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc423)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc424)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc424)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc890)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc426)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc427)
        } loc(#loc891)
      } loc(#loc889)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc430)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc431)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc431)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc893)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc433)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc434)
        } loc(#loc894)
      } loc(#loc892)
    } loc(#loc851)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc435)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc818)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc895)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc437)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc438)
    cir.return loc(#loc316)
  } loc(#loc848)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc896)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc443, #loc444])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc898)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc896)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc448)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc448)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc902)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc903)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc456)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc457)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc457)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc904)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc905)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc456)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc906)
          cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc903)
          cir.scope {
            %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc462)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc463)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc463)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc908)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc465)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc466)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc467)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc465)
            } loc(#loc909)
          } loc(#loc907)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc470)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc911)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc472)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc473)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc912)
              cir.condition(%19) loc(#loc474)
            } body {
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc476)
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc477)
                %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc478)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc479)
                cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc914)
              } loc(#loc913)
              cir.yield loc(#loc469)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc480)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc481)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc915)
              cir.yield loc(#loc910)
            } loc(#loc910)
          } loc(#loc910)
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc484)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc485)
            %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc917)
            %19 = cir.ternary(%18, true {
              %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc487)
              %21 = cir.const #cir.int<10> : !s32i loc(#loc488)
              %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc918)
              %23 = cir.ternary(%22, true {
                %24 = cir.const #true loc(#loc486)
                cir.yield %24 : !cir.bool loc(#loc486)
              }, false {
                %24 = cir.const #false loc(#loc486)
                cir.yield %24 : !cir.bool loc(#loc486)
              }) : (!cir.bool) -> !cir.bool loc(#loc486)
              cir.yield %23 : !cir.bool loc(#loc486)
            }, false {
              %20 = cir.const #false loc(#loc486)
              cir.yield %20 : !cir.bool loc(#loc486)
            }) : (!cir.bool) -> !cir.bool loc(#loc486)
            cir.if %19 {
              %20 = cir.const #cir.int<1> : !s32i loc(#loc493)
              %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc494)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc495)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc496)
              cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc920)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc499)
                cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc922)
                cir.for : cond {
                  %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc501)
                  %26 = cir.const #cir.int<10> : !s32i loc(#loc502)
                  %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc923)
                  cir.condition(%27) loc(#loc503)
                } body {
                  cir.scope {
                    %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc505)
                    %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc506)
                    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc507)
                    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc505)
                    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc508)
                  } loc(#loc924)
                  cir.yield loc(#loc498)
                } step {
                  %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc509)
                  %26 = cir.unary(inc, %25) nsw : !s32i, !s32i loc(#loc510)
                  cir.store %26, %4 : !s32i, !cir.ptr<!s32i> loc(#loc925)
                  cir.yield loc(#loc921)
                } loc(#loc921)
              } loc(#loc921)
            } else {
              %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc511)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc511)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc512)
            } loc(#loc919)
          } loc(#loc916)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc513)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc514)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc514)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc513)
        } loc(#loc901)
      } loc(#loc900)
    } loc(#loc899)
    cir.return loc(#loc442)
  } loc(#loc897)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc927)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc519)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc520)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc928)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc930)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc931)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc932)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc933)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc934)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc529)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc529)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc932)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc531)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc531)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc933)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc538)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc539)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc540)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc541)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc937)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc546)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc547)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc547)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc939)
              cir.if %63 {
                cir.break loc(#loc549)
              } loc(#loc940)
            } loc(#loc938)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc941)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc552)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc942)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc943)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc557)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc557)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc142)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc944)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc559)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc559)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc145)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc146)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc945)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc561)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc561)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc562)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc150)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc946)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc567)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc948)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc949)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc949)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc572)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc573)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc573)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc950)
              cir.if %67 {
                cir.break loc(#loc575)
              } loc(#loc951)
            } loc(#loc947)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc578)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc579)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc580)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc581)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc581)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc953)
              cir.if %65 {
                cir.break loc(#loc583)
              } loc(#loc954)
            } loc(#loc952)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc584)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc585)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc586)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc587)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc955)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc592)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc593)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc593)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc957)
              cir.if %63 {
                cir.break loc(#loc595)
              } loc(#loc958)
            } loc(#loc956)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc596)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc597)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc597)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc598)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc598)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc598)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc598)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc598)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc598)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc598)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc599)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc599)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc959)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc600)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc601)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc601)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc960)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc606)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc607)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc607)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc962)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc608)
                cir.yield %65 : !cir.bool loc(#loc608)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc609)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc610)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc963)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc608)
                  cir.yield %69 : !cir.bool loc(#loc608)
                }, false {
                  %69 = cir.const #false loc(#loc608)
                  cir.yield %69 : !cir.bool loc(#loc608)
                }) : (!cir.bool) -> !cir.bool loc(#loc608)
                cir.yield %68 : !cir.bool loc(#loc608)
              }) : (!cir.bool) -> !cir.bool loc(#loc608)
              cir.if %64 {
                cir.break loc(#loc612)
              } loc(#loc964)
            } loc(#loc961)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc613)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc613)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc614)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc615)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc615)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc965)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc616)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc617)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc966)
          } loc(#loc936)
          cir.yield loc(#loc535)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc620)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc620)
          cir.condition(%16) loc(#loc620)
        } loc(#loc935)
      } loc(#loc935)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc623)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc624)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc624)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc968)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc626)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc627)
        } loc(#loc969)
      } loc(#loc967)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc630)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc631)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc631)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc971)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc633)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc634)
        } loc(#loc972)
      } loc(#loc970)
    } loc(#loc929)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc635)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc896)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc973)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc637)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc638)
    cir.return loc(#loc516)
  } loc(#loc926)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc974)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc643, #loc644])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc976)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc645)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc974)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc648)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc648)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc980)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc981)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc656)
          %7 = cir.const #cir.int<10> : !s32i loc(#loc657)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc657)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc982)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc983)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc656)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc984)
          cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc981)
          cir.scope {
            %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc662)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc663)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc663)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc986)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc665)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc666)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc667)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc665)
            } loc(#loc987)
          } loc(#loc985)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc670)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc989)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc672)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc673)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc990)
              cir.condition(%19) loc(#loc674)
            } body {
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc676)
                %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc677)
                %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc678)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc679)
                cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc992)
              } loc(#loc991)
              cir.yield loc(#loc669)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc680)
              %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc681)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc993)
              cir.yield loc(#loc988)
            } loc(#loc988)
          } loc(#loc988)
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc684)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc685)
            %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc995)
            cir.if %18 {
              %19 = cir.const #cir.int<1> : !s32i loc(#loc689)
              %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc690)
              %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc691)
              %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc692)
              cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc997)
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc695)
                cir.store %23, %4 : !s32i, !cir.ptr<!s32i> loc(#loc999)
                cir.for : cond {
                  %24 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc697)
                  %25 = cir.const #cir.int<10> : !s32i loc(#loc698)
                  %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc1000)
                  cir.condition(%26) loc(#loc699)
                } body {
                  cir.scope {
                    %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc701)
                    %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc702)
                    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc703)
                    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc701)
                    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc704)
                  } loc(#loc1001)
                  cir.yield loc(#loc694)
                } step {
                  %24 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc705)
                  %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc706)
                  cir.store %25, %4 : !s32i, !cir.ptr<!s32i> loc(#loc1002)
                  cir.yield loc(#loc998)
                } loc(#loc998)
              } loc(#loc998)
            } else {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc707)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc707)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc708)
            } loc(#loc996)
          } loc(#loc994)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc709)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc710)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc710)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc709)
        } loc(#loc979)
      } loc(#loc978)
    } loc(#loc977)
    cir.return loc(#loc642)
  } loc(#loc975)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc1004)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc715)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc716)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1005)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc718)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1006)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc720)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc974)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1007)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc722)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc723)
    cir.return loc(#loc712)
  } loc(#loc1003)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":45:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":45:24)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":73:27)
#loc28 = loc("/usr/include/stdlib.h":687:1)
#loc29 = loc("/usr/include/stdlib.h":687:32)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":47:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":78:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":48:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":49:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":77:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":49:8)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":50:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":51:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":76:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":52:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":52:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":53:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":53:58)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":53:35)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":53:42)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":53:47)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":53:57)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:43)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:33)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:34)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:40)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":54:39)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":59:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:22)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:18)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:25)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:27)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":57:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":58:29)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":58:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":58:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":58:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":56:33)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":62:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":74:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":62:17)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":62:25)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":63:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":70:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":72:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":64:32)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":64:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":64:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":64:28)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":69:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:25)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:28)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:32)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:30)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":67:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":68:34)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":68:41)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":68:42)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":68:21)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:37)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":66:36)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":73:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":75:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":75:18)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":80:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":156:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":82:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":82:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":84:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":84:12)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":84:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":85:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":153:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":90:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":90:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":91:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":91:28)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":92:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":92:31)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":93:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":93:31)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":94:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":94:41)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":95:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":138:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":96:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":137:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":105:35)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":105:44)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":105:57)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":105:28)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":105:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":105:68)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":106:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":109:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":106:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":106:33)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":107:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":108:17)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:20)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:21)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:30)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:33)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:47)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":110:48)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":111:34)
#loc142 = loc("/usr/include/netinet/in.h":249:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":111:13)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":112:39)
#loc145 = loc("/usr/include/netinet/in.h":251:20)
#loc146 = loc("/usr/include/netinet/in.h":33:15)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":112:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":113:38)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":113:32)
#loc150 = loc("/usr/include/netinet/in.h":250:15)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":113:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":113:46)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":117:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:22)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:54)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:55)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:64)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:78)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:17)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":114:84)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":115:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":116:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":118:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":121:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":118:24)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":118:38)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":118:17)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":118:57)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":119:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":120:17)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":122:35)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":122:49)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":122:55)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":122:28)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":122:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":122:59)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":123:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":126:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":123:17)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":123:33)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":124:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":125:17)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:31)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:45)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:58)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:76)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:79)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:26)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:13)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":128:80)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":129:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":132:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":129:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":129:31)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":129:44)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":129:47)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":129:61)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":130:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":131:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":134:39)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":134:25)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":134:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":136:25)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":136:20)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":136:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":136:36)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":138:16)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":139:9)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":142:9)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":139:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":139:29)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":140:9)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":141:26)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":141:13)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":143:9)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":146:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":143:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":143:29)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":144:9)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":145:26)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":145:13)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":154:17)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":154:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":155:13)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":155:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":440:1)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":445:1)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":442:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":442:14)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":443:5)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":443:14)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":444:5)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":444:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":163:1)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":163:29)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":173:19)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":198:27)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":168:1)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":203:1)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":169:1)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":170:5)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":202:5)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":170:8)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":171:5)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":174:5)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":176:5)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":173:9)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":177:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":201:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":178:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":178:17)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":179:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":179:58)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":179:35)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":179:42)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":179:47)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":179:57)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:13)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:43)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:17)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:27)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:33)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:34)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:40)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":180:39)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":185:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:22)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:18)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:25)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:29)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:27)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":183:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":184:29)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":184:17)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":184:24)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":184:25)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:34)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":182:33)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:13)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":199:13)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:17)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:25)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:27)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:30)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:38)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":187:40)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":188:13)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":195:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":197:13)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":189:32)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":189:17)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":189:24)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":189:28)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:17)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":194:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:25)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:21)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:28)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:32)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:30)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":192:17)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":193:34)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":193:41)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":193:42)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":193:21)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:37)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":191:36)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":198:17)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":200:13)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":200:18)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":205:1)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":281:1)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":207:5)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":207:9)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":209:13)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":209:12)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":209:5)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":210:5)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":278:5)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":215:9)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":215:13)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":216:9)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":216:28)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":217:9)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":217:31)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":218:9)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":218:31)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":219:9)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":219:41)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":220:9)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":263:17)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":221:9)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":262:9)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":230:35)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":230:44)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":230:57)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":230:28)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":230:13)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":230:68)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":231:13)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":234:13)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":231:17)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":231:33)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":232:13)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":233:17)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:20)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:21)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:30)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:33)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:47)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:13)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":235:48)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":236:34)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":236:13)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":237:39)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":237:13)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":238:38)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":238:32)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":238:13)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":238:46)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:13)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":242:13)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:22)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:54)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:55)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:64)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:78)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:17)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":239:84)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":240:13)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":241:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":243:13)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":246:13)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":243:24)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":243:38)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":243:17)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":243:57)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":244:13)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":245:17)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":247:35)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":247:49)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":247:55)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":247:28)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":247:13)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":247:59)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":248:13)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":251:13)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":248:17)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":248:33)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":249:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":250:17)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:31)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:45)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:58)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:76)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:79)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:26)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:13)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":253:80)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":254:13)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":257:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":254:17)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":254:31)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":254:44)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":254:47)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":254:61)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":255:13)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":256:17)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":259:39)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":259:25)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":259:13)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":261:25)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":261:20)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":261:13)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":261:36)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":263:16)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":264:9)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":267:9)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":264:13)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":264:29)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":265:9)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":266:26)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":266:13)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":268:9)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":271:9)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":268:13)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":268:29)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":269:9)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":270:26)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":270:13)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":279:22)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":279:5)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":280:18)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":280:5)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":164:1)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":164:29)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":284:1)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":314:1)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":285:1)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":286:5)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":313:5)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":286:8)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":287:5)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":288:9)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":312:9)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":289:13)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":289:17)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":290:13)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":290:58)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":290:35)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":290:42)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":290:47)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":290:57)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:13)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:43)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:17)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:27)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:33)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:34)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:40)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":291:39)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:13)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":296:13)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:22)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:18)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:25)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:29)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:27)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":294:13)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":295:29)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":295:17)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":295:24)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":295:25)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:34)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":293:33)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:13)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":310:13)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:17)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:25)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:27)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:30)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:38)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":298:40)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":299:13)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":306:13)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":308:13)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":300:32)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":300:17)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":300:24)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":300:28)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:17)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":305:17)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:25)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:21)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:28)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:32)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:30)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":303:17)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":304:34)
#loc506 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":304:41)
#loc507 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":304:42)
#loc508 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":304:21)
#loc509 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:37)
#loc510 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":302:36)
#loc511 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":309:27)
#loc512 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":309:17)
#loc513 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":311:13)
#loc514 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":311:18)
#loc515 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":316:1)
#loc516 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":392:1)
#loc517 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":318:5)
#loc518 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":318:9)
#loc519 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":320:13)
#loc520 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":320:12)
#loc521 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":320:5)
#loc522 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":321:5)
#loc523 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":389:5)
#loc524 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":326:9)
#loc525 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":326:13)
#loc526 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":327:9)
#loc527 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":327:28)
#loc528 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":328:9)
#loc529 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":328:31)
#loc530 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":329:9)
#loc531 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":329:31)
#loc532 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":330:9)
#loc533 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":330:41)
#loc534 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":331:9)
#loc535 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":374:17)
#loc536 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":332:9)
#loc537 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":373:9)
#loc538 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":341:35)
#loc539 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":341:44)
#loc540 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":341:57)
#loc541 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":341:28)
#loc542 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":341:13)
#loc543 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":341:68)
#loc544 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":342:13)
#loc545 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":345:13)
#loc546 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":342:17)
#loc547 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":342:33)
#loc548 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":343:13)
#loc549 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":344:17)
#loc550 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:20)
#loc551 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:21)
#loc552 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:30)
#loc553 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:33)
#loc554 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:47)
#loc555 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:13)
#loc556 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":346:48)
#loc557 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":347:34)
#loc558 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":347:13)
#loc559 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":348:39)
#loc560 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":348:13)
#loc561 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":349:38)
#loc562 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":349:32)
#loc563 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":349:13)
#loc564 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":349:46)
#loc565 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:13)
#loc566 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":353:13)
#loc567 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:22)
#loc568 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:54)
#loc569 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:55)
#loc570 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:64)
#loc571 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:78)
#loc572 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:17)
#loc573 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":350:84)
#loc574 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":351:13)
#loc575 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":352:17)
#loc576 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":354:13)
#loc577 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":357:13)
#loc578 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":354:24)
#loc579 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":354:38)
#loc580 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":354:17)
#loc581 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":354:57)
#loc582 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":355:13)
#loc583 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":356:17)
#loc584 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":358:35)
#loc585 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":358:49)
#loc586 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":358:55)
#loc587 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":358:28)
#loc588 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":358:13)
#loc589 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":358:59)
#loc590 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":359:13)
#loc591 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":362:13)
#loc592 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":359:17)
#loc593 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":359:33)
#loc594 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":360:13)
#loc595 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":361:17)
#loc596 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:31)
#loc597 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:45)
#loc598 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:58)
#loc599 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:76)
#loc600 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:79)
#loc601 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:26)
#loc602 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:13)
#loc603 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":364:80)
#loc604 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":365:13)
#loc605 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":368:13)
#loc606 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":365:17)
#loc607 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":365:31)
#loc608 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":365:44)
#loc609 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":365:47)
#loc610 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":365:61)
#loc611 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":366:13)
#loc612 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":367:17)
#loc613 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":370:39)
#loc614 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":370:25)
#loc615 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":370:13)
#loc616 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":372:25)
#loc617 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":372:20)
#loc618 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":372:13)
#loc619 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":372:36)
#loc620 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":374:16)
#loc621 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":375:9)
#loc622 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":378:9)
#loc623 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":375:13)
#loc624 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":375:29)
#loc625 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":376:9)
#loc626 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":377:26)
#loc627 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":377:13)
#loc628 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":379:9)
#loc629 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":382:9)
#loc630 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":379:13)
#loc631 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":379:29)
#loc632 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":380:9)
#loc633 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":381:26)
#loc634 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":381:13)
#loc635 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":390:22)
#loc636 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":390:5)
#loc637 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":391:18)
#loc638 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":391:5)
#loc639 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":165:1)
#loc640 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":165:28)
#loc641 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":395:1)
#loc642 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":426:1)
#loc645 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":396:1)
#loc646 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":397:5)
#loc647 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":425:5)
#loc648 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":397:8)
#loc649 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":398:5)
#loc650 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":399:9)
#loc651 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":424:9)
#loc652 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":400:13)
#loc653 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":400:17)
#loc654 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":401:13)
#loc655 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":401:58)
#loc656 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":401:35)
#loc657 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":401:42)
#loc658 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":401:47)
#loc659 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":401:57)
#loc660 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:13)
#loc661 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:43)
#loc662 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:17)
#loc663 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:27)
#loc664 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:33)
#loc665 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:34)
#loc666 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:40)
#loc667 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":402:39)
#loc668 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:13)
#loc669 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":407:13)
#loc670 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:22)
#loc671 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:18)
#loc672 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:25)
#loc673 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:29)
#loc674 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:27)
#loc675 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":405:13)
#loc676 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":406:29)
#loc677 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":406:17)
#loc678 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":406:24)
#loc679 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":406:25)
#loc680 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:34)
#loc681 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":404:33)
#loc682 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":410:13)
#loc683 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":422:13)
#loc684 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":410:17)
#loc685 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":410:25)
#loc686 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":411:13)
#loc687 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":418:13)
#loc688 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":420:13)
#loc689 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":412:32)
#loc690 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":412:17)
#loc691 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":412:24)
#loc692 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":412:28)
#loc693 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:17)
#loc694 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":417:17)
#loc695 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:25)
#loc696 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:21)
#loc697 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:28)
#loc698 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:32)
#loc699 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:30)
#loc700 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":415:17)
#loc701 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":416:34)
#loc702 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":416:41)
#loc703 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":416:42)
#loc704 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":416:21)
#loc705 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:37)
#loc706 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":414:36)
#loc707 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":421:27)
#loc708 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":421:17)
#loc709 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":423:13)
#loc710 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":423:18)
#loc711 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":428:1)
#loc712 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":438:1)
#loc713 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":430:5)
#loc714 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":430:9)
#loc715 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":432:13)
#loc716 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":432:12)
#loc717 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":432:5)
#loc718 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":435:12)
#loc719 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":435:5)
#loc720 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":436:21)
#loc721 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":436:5)
#loc722 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":437:17)
#loc723 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_21.c":437:5)
#loc724 = loc(fused[#loc1, #loc2])
#loc725 = loc(fused[#loc3, #loc4])
#loc726 = loc(fused[#loc5, #loc6])
#loc727 = loc(fused[#loc7, #loc8])
#loc728 = loc(fused[#loc9, #loc10])
#loc729 = loc(fused[#loc11, #loc12])
#loc730 = loc(fused[#loc13, #loc14])
#loc731 = loc(fused[#loc15, #loc16])
#loc732 = loc(fused[#loc17, #loc18])
#loc733 = loc(fused[#loc19, #loc20])
#loc734 = loc(fused[#loc21, #loc22])
#loc735 = loc(fused[#loc23, #loc24])
#loc736 = loc(fused[#loc25, #loc26])
#loc737 = loc(fused[#loc28, #loc29])
#loc738 = loc(fused[#loc30, #loc31])
#loc740 = loc(fused[#loc35, #loc36])
#loc741 = loc(fused[#loc38, #loc36])
#loc742 = loc(fused[#loc39, #loc40])
#loc743 = loc(fused[#loc41, #loc42])
#loc744 = loc(fused[#loc43, #loc44])
#loc745 = loc(fused[#loc47, #loc48])
#loc746 = loc(fused[#loc46, #loc48])
#loc747 = loc(fused[#loc45, #loc44])
#loc748 = loc(fused[#loc49, #loc50])
#loc749 = loc(fused[#loc51, #loc52])
#loc750 = loc(fused[#loc53, #loc50])
#loc751 = loc(fused[#loc57, #loc58])
#loc752 = loc(fused[#loc60, #loc59])
#loc753 = loc(fused[#loc61, #loc62])
#loc754 = loc(fused[#loc64, #loc58])
#loc755 = loc(fused[#loc66, #loc65])
#loc756 = loc(fused[#loc70, #loc69])
#loc757 = loc(fused[#loc71, #loc72])
#loc758 = loc(fused[#loc73, #loc74])
#loc759 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc760 = loc(fused[#loc79, #loc78])
#loc761 = loc(fused[#loc82, #loc83])
#loc762 = loc(fused[#loc85, #loc84])
#loc763 = loc(fused[#loc86, #loc87])
#loc764 = loc(fused[#loc89, #loc83])
#loc765 = loc(fused[#loc95, #loc94])
#loc766 = loc(fused[#loc99, #loc100])
#loc767 = loc(fused[#loc101, #loc102])
#loc768 = loc(fused[#loc105, #loc103])
#loc769 = loc(fused[#loc106, #loc107])
#loc770 = loc(fused[#loc108, #loc109])
#loc771 = loc(fused[#loc110, #loc111])
#loc772 = loc(fused[#loc112, #loc113])
#loc773 = loc(fused[#loc114, #loc115])
#loc774 = loc(fused[#loc116, #loc117])
#loc775 = loc(fused[#loc118, #loc119])
#loc776 = loc(fused[#loc120, #loc121])
#loc777 = loc(fused[#loc126, #loc127])
#loc778 = loc(fused[#loc128, #loc129])
#loc779 = loc(fused[#loc130, #loc131])
#loc780 = loc(fused[#loc132, #loc129])
#loc781 = loc(fused[#loc134, #loc135])
#loc782 = loc(fused[#loc137, #loc138])
#loc783 = loc(fused[#loc139, #loc140])
#loc784 = loc(fused[#loc143, #loc141])
#loc785 = loc(fused[#loc147, #loc144])
#loc786 = loc(fused[#loc151, #loc152])
#loc787 = loc(fused[#loc153, #loc154])
#loc788 = loc(fused[#loc156, #loc157])
#loc789 = loc(fused[#loc158, #loc159])
#loc790 = loc(fused[#loc160, #loc161])
#loc791 = loc(fused[#loc162, #loc154])
#loc792 = loc(fused[#loc164, #loc165])
#loc793 = loc(fused[#loc168, #loc169])
#loc794 = loc(fused[#loc170, #loc165])
#loc795 = loc(fused[#loc176, #loc177])
#loc796 = loc(fused[#loc178, #loc179])
#loc797 = loc(fused[#loc180, #loc181])
#loc798 = loc(fused[#loc182, #loc179])
#loc799 = loc(fused[#loc186, #loc187])
#loc800 = loc(fused[#loc190, #loc191])
#loc801 = loc(fused[#loc192, #loc193])
#loc802 = loc(fused[#loc194, #loc195])
#loc803 = loc(fused[#loc197, #loc198])
#loc804 = loc(fused[#loc199, #loc193])
#loc805 = loc(fused[#loc203, #loc201])
#loc806 = loc(fused[#loc206, #loc207])
#loc807 = loc(fused[#loc209, #loc210])
#loc808 = loc(fused[#loc211, #loc212])
#loc809 = loc(fused[#loc213, #loc210])
#loc810 = loc(fused[#loc216, #loc217])
#loc811 = loc(fused[#loc218, #loc219])
#loc812 = loc(fused[#loc220, #loc217])
#loc813 = loc(fused[#loc224, #loc223])
#loc814 = loc(fused[#loc227, #loc228])
#loc815 = loc(fused[#loc229, #loc230])
#loc816 = loc(fused[#loc231, #loc232])
#loc817 = loc(fused[#loc233, #loc234])
#loc818 = loc(fused[#loc235, #loc236])
#loc819 = loc(fused[#loc239, #loc240])
#loc821 = loc(fused[#loc244, #loc245])
#loc822 = loc(fused[#loc247, #loc248, #loc249, #loc245])
#loc823 = loc(fused[#loc251, #loc252])
#loc824 = loc(fused[#loc253, #loc254])
#loc825 = loc(fused[#loc255, #loc256])
#loc826 = loc(fused[#loc259, #loc260])
#loc827 = loc(fused[#loc258, #loc260])
#loc828 = loc(fused[#loc257, #loc256])
#loc829 = loc(fused[#loc261, #loc262])
#loc830 = loc(fused[#loc263, #loc264])
#loc831 = loc(fused[#loc265, #loc262])
#loc832 = loc(fused[#loc269, #loc270])
#loc833 = loc(fused[#loc272, #loc271])
#loc834 = loc(fused[#loc273, #loc274])
#loc835 = loc(fused[#loc276, #loc270])
#loc836 = loc(fused[#loc278, #loc277])
#loc837 = loc(fused[#loc282, #loc281])
#loc838 = loc(fused[#loc283, #loc284])
#loc839 = loc(fused[#loc285, #loc286])
#loc840 = loc(fused[#loc288, #loc290])
#loc841 = loc(fused[#loc291, #loc292, #loc293, #loc284])
#loc842 = loc(fused[#loc295, #loc294])
#loc843 = loc(fused[#loc298, #loc299])
#loc844 = loc(fused[#loc301, #loc300])
#loc845 = loc(fused[#loc302, #loc303])
#loc846 = loc(fused[#loc305, #loc299])
#loc847 = loc(fused[#loc311, #loc310])
#loc848 = loc(fused[#loc315, #loc316])
#loc849 = loc(fused[#loc317, #loc318])
#loc850 = loc(fused[#loc321, #loc319])
#loc851 = loc(fused[#loc322, #loc323])
#loc852 = loc(fused[#loc324, #loc325])
#loc853 = loc(fused[#loc326, #loc327])
#loc854 = loc(fused[#loc328, #loc329])
#loc855 = loc(fused[#loc330, #loc331])
#loc856 = loc(fused[#loc332, #loc333])
#loc857 = loc(fused[#loc334, #loc335])
#loc858 = loc(fused[#loc336, #loc337])
#loc859 = loc(fused[#loc342, #loc343])
#loc860 = loc(fused[#loc344, #loc345])
#loc861 = loc(fused[#loc346, #loc347])
#loc862 = loc(fused[#loc348, #loc345])
#loc863 = loc(fused[#loc350, #loc351])
#loc864 = loc(fused[#loc353, #loc354])
#loc865 = loc(fused[#loc355, #loc356])
#loc866 = loc(fused[#loc358, #loc357])
#loc867 = loc(fused[#loc360, #loc359])
#loc868 = loc(fused[#loc363, #loc364])
#loc869 = loc(fused[#loc365, #loc366])
#loc870 = loc(fused[#loc368, #loc369])
#loc871 = loc(fused[#loc370, #loc371])
#loc872 = loc(fused[#loc372, #loc373])
#loc873 = loc(fused[#loc374, #loc366])
#loc874 = loc(fused[#loc376, #loc377])
#loc875 = loc(fused[#loc380, #loc381])
#loc876 = loc(fused[#loc382, #loc377])
#loc877 = loc(fused[#loc388, #loc389])
#loc878 = loc(fused[#loc390, #loc391])
#loc879 = loc(fused[#loc392, #loc393])
#loc880 = loc(fused[#loc394, #loc391])
#loc881 = loc(fused[#loc398, #loc399])
#loc882 = loc(fused[#loc402, #loc403])
#loc883 = loc(fused[#loc404, #loc405])
#loc884 = loc(fused[#loc406, #loc407])
#loc885 = loc(fused[#loc409, #loc410])
#loc886 = loc(fused[#loc411, #loc405])
#loc887 = loc(fused[#loc415, #loc413])
#loc888 = loc(fused[#loc418, #loc419])
#loc889 = loc(fused[#loc421, #loc422])
#loc890 = loc(fused[#loc423, #loc424])
#loc891 = loc(fused[#loc425, #loc422])
#loc892 = loc(fused[#loc428, #loc429])
#loc893 = loc(fused[#loc430, #loc431])
#loc894 = loc(fused[#loc432, #loc429])
#loc895 = loc(fused[#loc436, #loc435])
#loc896 = loc(fused[#loc439, #loc440])
#loc897 = loc(fused[#loc441, #loc442])
#loc899 = loc(fused[#loc446, #loc447])
#loc900 = loc(fused[#loc449, #loc447])
#loc901 = loc(fused[#loc450, #loc451])
#loc902 = loc(fused[#loc452, #loc453])
#loc903 = loc(fused[#loc454, #loc455])
#loc904 = loc(fused[#loc458, #loc459])
#loc905 = loc(fused[#loc457, #loc459])
#loc906 = loc(fused[#loc456, #loc455])
#loc907 = loc(fused[#loc460, #loc461])
#loc908 = loc(fused[#loc462, #loc463])
#loc909 = loc(fused[#loc464, #loc461])
#loc910 = loc(fused[#loc468, #loc469])
#loc911 = loc(fused[#loc471, #loc470])
#loc912 = loc(fused[#loc472, #loc473])
#loc913 = loc(fused[#loc475, #loc469])
#loc914 = loc(fused[#loc477, #loc476])
#loc915 = loc(fused[#loc481, #loc480])
#loc916 = loc(fused[#loc482, #loc483])
#loc917 = loc(fused[#loc484, #loc485])
#loc918 = loc(fused[#loc487, #loc489])
#loc919 = loc(fused[#loc490, #loc491, #loc492, #loc483])
#loc920 = loc(fused[#loc494, #loc493])
#loc921 = loc(fused[#loc497, #loc498])
#loc922 = loc(fused[#loc500, #loc499])
#loc923 = loc(fused[#loc501, #loc502])
#loc924 = loc(fused[#loc504, #loc498])
#loc925 = loc(fused[#loc510, #loc509])
#loc926 = loc(fused[#loc515, #loc516])
#loc927 = loc(fused[#loc517, #loc518])
#loc928 = loc(fused[#loc521, #loc519])
#loc929 = loc(fused[#loc522, #loc523])
#loc930 = loc(fused[#loc524, #loc525])
#loc931 = loc(fused[#loc526, #loc527])
#loc932 = loc(fused[#loc528, #loc529])
#loc933 = loc(fused[#loc530, #loc531])
#loc934 = loc(fused[#loc532, #loc533])
#loc935 = loc(fused[#loc534, #loc535])
#loc936 = loc(fused[#loc536, #loc537])
#loc937 = loc(fused[#loc542, #loc543])
#loc938 = loc(fused[#loc544, #loc545])
#loc939 = loc(fused[#loc546, #loc547])
#loc940 = loc(fused[#loc548, #loc545])
#loc941 = loc(fused[#loc550, #loc551])
#loc942 = loc(fused[#loc553, #loc554])
#loc943 = loc(fused[#loc555, #loc556])
#loc944 = loc(fused[#loc558, #loc557])
#loc945 = loc(fused[#loc560, #loc559])
#loc946 = loc(fused[#loc563, #loc564])
#loc947 = loc(fused[#loc565, #loc566])
#loc948 = loc(fused[#loc568, #loc569])
#loc949 = loc(fused[#loc570, #loc571])
#loc950 = loc(fused[#loc572, #loc573])
#loc951 = loc(fused[#loc574, #loc566])
#loc952 = loc(fused[#loc576, #loc577])
#loc953 = loc(fused[#loc580, #loc581])
#loc954 = loc(fused[#loc582, #loc577])
#loc955 = loc(fused[#loc588, #loc589])
#loc956 = loc(fused[#loc590, #loc591])
#loc957 = loc(fused[#loc592, #loc593])
#loc958 = loc(fused[#loc594, #loc591])
#loc959 = loc(fused[#loc598, #loc599])
#loc960 = loc(fused[#loc602, #loc603])
#loc961 = loc(fused[#loc604, #loc605])
#loc962 = loc(fused[#loc606, #loc607])
#loc963 = loc(fused[#loc609, #loc610])
#loc964 = loc(fused[#loc611, #loc605])
#loc965 = loc(fused[#loc615, #loc613])
#loc966 = loc(fused[#loc618, #loc619])
#loc967 = loc(fused[#loc621, #loc622])
#loc968 = loc(fused[#loc623, #loc624])
#loc969 = loc(fused[#loc625, #loc622])
#loc970 = loc(fused[#loc628, #loc629])
#loc971 = loc(fused[#loc630, #loc631])
#loc972 = loc(fused[#loc632, #loc629])
#loc973 = loc(fused[#loc636, #loc635])
#loc974 = loc(fused[#loc639, #loc640])
#loc975 = loc(fused[#loc641, #loc642])
#loc977 = loc(fused[#loc646, #loc647])
#loc978 = loc(fused[#loc649, #loc647])
#loc979 = loc(fused[#loc650, #loc651])
#loc980 = loc(fused[#loc652, #loc653])
#loc981 = loc(fused[#loc654, #loc655])
#loc982 = loc(fused[#loc658, #loc659])
#loc983 = loc(fused[#loc657, #loc659])
#loc984 = loc(fused[#loc656, #loc655])
#loc985 = loc(fused[#loc660, #loc661])
#loc986 = loc(fused[#loc662, #loc663])
#loc987 = loc(fused[#loc664, #loc661])
#loc988 = loc(fused[#loc668, #loc669])
#loc989 = loc(fused[#loc671, #loc670])
#loc990 = loc(fused[#loc672, #loc673])
#loc991 = loc(fused[#loc675, #loc669])
#loc992 = loc(fused[#loc677, #loc676])
#loc993 = loc(fused[#loc681, #loc680])
#loc994 = loc(fused[#loc682, #loc683])
#loc995 = loc(fused[#loc684, #loc685])
#loc996 = loc(fused[#loc686, #loc687, #loc688, #loc683])
#loc997 = loc(fused[#loc690, #loc689])
#loc998 = loc(fused[#loc693, #loc694])
#loc999 = loc(fused[#loc696, #loc695])
#loc1000 = loc(fused[#loc697, #loc698])
#loc1001 = loc(fused[#loc700, #loc694])
#loc1002 = loc(fused[#loc706, #loc705])
#loc1003 = loc(fused[#loc711, #loc712])
#loc1004 = loc(fused[#loc713, #loc714])
#loc1005 = loc(fused[#loc717, #loc715])
#loc1006 = loc(fused[#loc719, #loc718])
#loc1007 = loc(fused[#loc721, #loc720])
