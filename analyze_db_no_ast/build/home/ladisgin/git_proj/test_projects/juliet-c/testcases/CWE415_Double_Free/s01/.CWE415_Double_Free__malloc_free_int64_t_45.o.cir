!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc115)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc116)
  cir.global "private"  internal dsolocal @CWE415_Double_Free__malloc_free_int64_t_45_badData = #cir.ptr<null> : !cir.ptr<!s64i> {alignment = 8 : i64} loc(#loc117)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int64_t_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc122)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc123)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc24)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc126)
      %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc25)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc29)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc127)
    } loc(#loc125)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc30)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc31)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
    %13 = cir.get_global @CWE415_Double_Free__malloc_free_int64_t_45_badData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc117)
    cir.store %12, %13 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc128)
    %14 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %14() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc10)
  } loc(#loc118)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int64_t_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc130)
  cir.func no_proto internal private  @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.get_global @CWE415_Double_Free__malloc_free_int64_t_45_badData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc117)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc134)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc47)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc133)
  cir.global "private"  internal dsolocal @CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s64i> {alignment = 8 : i64} loc(#loc135)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc138)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc57)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc139)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc140)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc141)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc142)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc65)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !s32i loc(#loc144)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc66)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc70)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc145)
    } loc(#loc143)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc71)
    %10 = cir.get_global @CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc135)
    cir.store %9, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
    %11 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc51)
  } loc(#loc136)
  cir.func no_proto internal private  @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.get_global @CWE415_Double_Free__malloc_free_int64_t_45_goodG2BData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc78)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc79)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc80)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc80)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc148)
  cir.global "private"  internal dsolocal @CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData = #cir.ptr<null> : !cir.ptr<!s64i> {alignment = 8 : i64} loc(#loc150)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc153)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc89)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc90)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc154)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc155)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc156)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc157)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc97)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc98)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc159)
      %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc99)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc102)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc103)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
      } loc(#loc160)
    } loc(#loc158)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc104)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc105)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc105)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc104)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc106)
    %13 = cir.get_global @CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc150)
    cir.store %12, %13 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc161)
    %14 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %14() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc108)
    cir.return loc(#loc84)
  } loc(#loc151)
  cir.func no_proto internal private  @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.get_global @CWE415_Double_Free__malloc_free_int64_t_45_goodB2GData : !cir.ptr<!cir.ptr<!s64i>> loc(#loc150)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc113)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc164)
    cir.return loc(#loc111)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":22:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":22:18)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":35:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":46:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":37:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":37:15)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":39:12)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":39:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":40:23)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":40:30)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":40:34)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":40:48)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":40:49)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":40:5)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:33)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:9)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:17)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:14)
#loc26 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:23)
#loc27 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:24)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:30)
#loc29 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":41:29)
#loc30 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":43:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":43:10)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":44:58)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":44:5)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":45:5)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":45:13)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":94:1)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":98:1)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":96:5)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":96:13)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":97:5)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":97:13)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":28:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":33:1)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":30:5)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":30:22)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":32:5)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":32:10)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":23:1)
#loc49 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":23:18)
#loc50 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":60:1)
#loc51 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":70:1)
#loc52 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":62:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":62:15)
#loc54 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":64:12)
#loc55 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":64:5)
#loc56 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":65:23)
#loc57 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":65:30)
#loc58 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":65:34)
#loc59 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":65:48)
#loc60 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":65:49)
#loc61 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":65:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:33)
#loc64 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:9)
#loc65 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:17)
#loc66 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:14)
#loc67 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:23)
#loc68 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:24)
#loc69 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:30)
#loc70 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":66:29)
#loc71 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":68:62)
#loc72 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":68:5)
#loc73 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":69:5)
#loc74 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":69:17)
#loc75 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":53:1)
#loc76 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":58:1)
#loc77 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":55:5)
#loc78 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":55:22)
#loc79 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":57:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":57:10)
#loc81 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":24:1)
#loc82 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":24:18)
#loc83 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":81:1)
#loc84 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":92:1)
#loc85 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":83:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":83:15)
#loc87 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":85:12)
#loc88 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":85:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":86:23)
#loc90 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":86:30)
#loc91 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":86:34)
#loc92 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":86:48)
#loc93 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":86:49)
#loc94 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":86:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:33)
#loc97 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:9)
#loc98 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:17)
#loc99 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:14)
#loc100 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:23)
#loc101 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:24)
#loc102 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:30)
#loc103 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":87:29)
#loc104 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":89:5)
#loc105 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":89:10)
#loc106 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":90:62)
#loc107 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":90:5)
#loc108 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":91:5)
#loc109 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":91:17)
#loc110 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":73:1)
#loc111 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":79:1)
#loc112 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":75:5)
#loc113 = loc("CWE415_Double_Free__malloc_free_int64_t_45.c":75:22)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc11, #loc12])
#loc120 = loc(fused[#loc14, #loc13])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc16, #loc18])
#loc123 = loc(fused[#loc15, #loc19])
#loc124 = loc(fused[#loc20, #loc19])
#loc125 = loc(fused[#loc21, #loc22])
#loc126 = loc(fused[#loc23, #loc24])
#loc127 = loc(fused[#loc26, #loc22])
#loc128 = loc(fused[#loc33, #loc32])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc42, #loc43])
#loc134 = loc(fused[#loc44, #loc45])
#loc135 = loc(fused[#loc48, #loc49])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc52, #loc53])
#loc138 = loc(fused[#loc55, #loc54])
#loc139 = loc(fused[#loc58, #loc59])
#loc140 = loc(fused[#loc57, #loc59])
#loc141 = loc(fused[#loc56, #loc60])
#loc142 = loc(fused[#loc61, #loc60])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc67, #loc63])
#loc146 = loc(fused[#loc72, #loc71])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc75, #loc76])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc81, #loc82])
#loc151 = loc(fused[#loc83, #loc84])
#loc152 = loc(fused[#loc85, #loc86])
#loc153 = loc(fused[#loc88, #loc87])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc90, #loc92])
#loc156 = loc(fused[#loc89, #loc93])
#loc157 = loc(fused[#loc94, #loc93])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc98])
#loc160 = loc(fused[#loc100, #loc96])
#loc161 = loc(fused[#loc107, #loc106])
#loc162 = loc(fused[#loc108, #loc109])
#loc163 = loc(fused[#loc110, #loc111])
#loc164 = loc(fused[#loc112, #loc113])
