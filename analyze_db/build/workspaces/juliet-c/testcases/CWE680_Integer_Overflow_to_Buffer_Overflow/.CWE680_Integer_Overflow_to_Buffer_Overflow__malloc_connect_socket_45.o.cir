!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc233)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc235)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc236)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc237)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc238)
  cir.func private @close(!s32i) -> !s32i loc(#loc239)
  cir.global "private" internal dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc240)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc245)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc246)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc247)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc248)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc32)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc247)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc41)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
            cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc251)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc48)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc253)
              cir.if %57 {
                cir.break loc(#loc50)
              } loc(#loc254)
            } loc(#loc252)
            %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc255)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc256)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc58)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc58)
            %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc258)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
            %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc259)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc66)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc66)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc67)
            %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc260)
            cir.scope {
              %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
              %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc262)
              %56 = cir.const #cir.int<16> : !u64i loc(#loc263)
              %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc263)
              %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc79)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc264)
              cir.if %61 {
                cir.break loc(#loc81)
              } loc(#loc265)
            } loc(#loc261)
            %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc84)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc84)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc84)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc84)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc84)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc84)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc85)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc266)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc87)
            cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc267)
            cir.scope {
              %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc93)
              %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc269)
              %58 = cir.ternary(%57, true {
                %59 = cir.const #true loc(#loc94)
                cir.yield %59 : !cir.bool loc(#loc94)
              }, false {
                %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc270)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc94)
                  cir.yield %63 : !cir.bool loc(#loc94)
                }, false {
                  %63 = cir.const #false loc(#loc94)
                  cir.yield %63 : !cir.bool loc(#loc94)
                }) : (!cir.bool) -> !cir.bool loc(#loc94)
                cir.yield %62 : !cir.bool loc(#loc94)
              }) : (!cir.bool) -> !cir.bool loc(#loc94)
              cir.if %58 {
                cir.break loc(#loc98)
              } loc(#loc271)
            } loc(#loc268)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc99)
            %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc101)
            cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc272)
            %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
            %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc103)
            cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
          } loc(#loc250)
          cir.yield loc(#loc36)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc106)
          cir.condition(%13) loc(#loc106)
        } loc(#loc249)
      } loc(#loc249)
      cir.scope {
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc110)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc275)
        cir.if %15 {
          %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc113)
        } loc(#loc276)
      } loc(#loc274)
    } loc(#loc244)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %4 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc240)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc278)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc116)
    cir.return loc(#loc19)
  } loc(#loc241)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc280)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc120)
    cir.return loc(#loc119)
  } loc(#loc279)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc281)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc282)
  cir.func private @printIntLine(!s32i) loc(#loc283)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc284)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc240)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc288)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc289)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc140)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc141)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc290)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc291)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc292)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc293)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc149)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc295)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc151)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc152)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc153)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
        } loc(#loc296)
      } loc(#loc294)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc156)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc156)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc298)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc158)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc159)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc299)
          cir.condition(%24) loc(#loc160)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc162)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc164)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc165)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc301)
          } loc(#loc300)
          cir.yield loc(#loc155)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc166)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc167)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc302)
          cir.yield loc(#loc297)
        } loc(#loc297)
      } loc(#loc297)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc169)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc170)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc168)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc171)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc172)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc173)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc173)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc172)
    } loc(#loc287)
    cir.return loc(#loc131)
  } loc(#loc285)
  cir.global "private" internal dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc303)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc183)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %5 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc303)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc309)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc187)
    cir.return loc(#loc177)
  } loc(#loc304)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc303)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc313)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc314)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc199)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc200)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc315)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc316)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc317)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc318)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc208)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc320)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc210)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc212)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc210)
        } loc(#loc321)
      } loc(#loc319)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc215)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc215)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc323)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc217)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc218)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc324)
          cir.condition(%24) loc(#loc219)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc221)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc223)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc224)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc326)
          } loc(#loc325)
          cir.yield loc(#loc214)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc225)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc226)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc327)
          cir.yield loc(#loc322)
        } loc(#loc322)
      } loc(#loc322)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc228)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc229)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc227)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc230)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc231)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc232)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc232)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc231)
    } loc(#loc312)
    cir.return loc(#loc190)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":96:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":41:1)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":41:12)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":65:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":128:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":67:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":67:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":69:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":69:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":69:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":70:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":125:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":75:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":75:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":76:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":76:28)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":77:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":77:32)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":78:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":78:41)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":79:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":114:17)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":80:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":113:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":89:36)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":89:45)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":89:58)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":89:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":89:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":89:69)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":90:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":93:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":90:17)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":90:34)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":91:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":92:17)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:20)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:30)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:47)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":94:48)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":95:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":95:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":96:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":96:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":96:59)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":97:38)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":97:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":97:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":97:46)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":101:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:25)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:58)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:59)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:68)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:82)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":98:88)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":99:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":100:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:31)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:46)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:59)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:77)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:80)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:26)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":104:81)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":105:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":108:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":105:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":105:31)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":105:44)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":105:47)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":105:61)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":106:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":107:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":110:39)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":110:25)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":110:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":112:25)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":112:20)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":112:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":112:36)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":114:16)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":115:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":118:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":115:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":115:30)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":116:9)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":117:26)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":117:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":126:84)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":126:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":127:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":127:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":165:1)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":168:1)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":167:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":167:13)
#loc122 = loc("/usr/include/stdlib.h":672:1)
#loc123 = loc("/usr/include/stdlib.h":672:45)
#loc124 = loc("/usr/include/stdlib.h":756:1)
#loc125 = loc("/usr/include/stdlib.h":756:70)
#loc126 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc127 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc128 = loc("/usr/include/stdlib.h":687:1)
#loc129 = loc("/usr/include/stdlib.h":687:32)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":46:1)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":63:1)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":48:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":48:16)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":49:5)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":62:5)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":50:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":50:16)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":51:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":51:14)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":54:28)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":54:35)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":54:42)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":54:52)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":54:53)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":54:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:43)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:27)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:34)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:40)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":55:39)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":59:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:18)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:14)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:21)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:23)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":57:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":58:29)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":58:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":58:24)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":58:25)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:40)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":56:39)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":60:22)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":60:33)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":60:34)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":60:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":61:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":61:14)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":42:1)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":42:12)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":154:1)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":163:1)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":156:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":156:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":158:13)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":158:12)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":158:5)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":160:12)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":160:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":161:88)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":161:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":162:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":162:17)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":135:1)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":152:1)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":137:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":137:16)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":138:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":151:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":139:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":139:16)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":140:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":140:14)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":143:28)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":143:35)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":143:42)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":143:52)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":143:53)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":143:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:43)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:13)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:27)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:33)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:34)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:40)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":144:39)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":148:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:18)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:14)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:21)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:33)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:23)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":146:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":147:29)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":147:13)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":147:24)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":147:25)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:40)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":145:39)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":149:22)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":149:33)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":149:34)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":149:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":150:9)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_45.c":150:14)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc6, #loc7])
#loc236 = loc(fused[#loc8, #loc9])
#loc237 = loc(fused[#loc10, #loc11])
#loc238 = loc(fused[#loc12, #loc13])
#loc239 = loc(fused[#loc14, #loc15])
#loc240 = loc(fused[#loc16, #loc17])
#loc241 = loc(fused[#loc18, #loc19])
#loc242 = loc(fused[#loc20, #loc21])
#loc243 = loc(fused[#loc24, #loc22])
#loc244 = loc(fused[#loc25, #loc26])
#loc245 = loc(fused[#loc27, #loc28])
#loc246 = loc(fused[#loc29, #loc30])
#loc247 = loc(fused[#loc31, #loc32])
#loc248 = loc(fused[#loc33, #loc34])
#loc249 = loc(fused[#loc35, #loc36])
#loc250 = loc(fused[#loc37, #loc38])
#loc251 = loc(fused[#loc43, #loc44])
#loc252 = loc(fused[#loc45, #loc46])
#loc253 = loc(fused[#loc47, #loc48])
#loc254 = loc(fused[#loc49, #loc46])
#loc255 = loc(fused[#loc51, #loc52])
#loc256 = loc(fused[#loc54, #loc55])
#loc257 = loc(fused[#loc56, #loc57])
#loc258 = loc(fused[#loc60, #loc58])
#loc259 = loc(fused[#loc64, #loc65])
#loc260 = loc(fused[#loc69, #loc70])
#loc261 = loc(fused[#loc71, #loc72])
#loc262 = loc(fused[#loc74, #loc75])
#loc263 = loc(fused[#loc76, #loc77])
#loc264 = loc(fused[#loc78, #loc79])
#loc265 = loc(fused[#loc80, #loc72])
#loc266 = loc(fused[#loc84, #loc85])
#loc267 = loc(fused[#loc88, #loc89])
#loc268 = loc(fused[#loc90, #loc91])
#loc269 = loc(fused[#loc92, #loc93])
#loc270 = loc(fused[#loc95, #loc96])
#loc271 = loc(fused[#loc97, #loc91])
#loc272 = loc(fused[#loc101, #loc99])
#loc273 = loc(fused[#loc104, #loc105])
#loc274 = loc(fused[#loc107, #loc108])
#loc275 = loc(fused[#loc109, #loc110])
#loc276 = loc(fused[#loc111, #loc108])
#loc277 = loc(fused[#loc115, #loc114])
#loc278 = loc(fused[#loc116, #loc117])
#loc279 = loc(fused[#loc118, #loc119])
#loc280 = loc(fused[#loc120, #loc121])
#loc281 = loc(fused[#loc122, #loc123])
#loc282 = loc(fused[#loc124, #loc125])
#loc283 = loc(fused[#loc126, #loc127])
#loc284 = loc(fused[#loc128, #loc129])
#loc285 = loc(fused[#loc130, #loc131])
#loc286 = loc(fused[#loc132, #loc133])
#loc287 = loc(fused[#loc134, #loc135])
#loc288 = loc(fused[#loc136, #loc137])
#loc289 = loc(fused[#loc138, #loc139])
#loc290 = loc(fused[#loc142, #loc143])
#loc291 = loc(fused[#loc141, #loc143])
#loc292 = loc(fused[#loc140, #loc144])
#loc293 = loc(fused[#loc145, #loc144])
#loc294 = loc(fused[#loc146, #loc147])
#loc295 = loc(fused[#loc148, #loc149])
#loc296 = loc(fused[#loc150, #loc147])
#loc297 = loc(fused[#loc154, #loc155])
#loc298 = loc(fused[#loc157, #loc156])
#loc299 = loc(fused[#loc158, #loc159])
#loc300 = loc(fused[#loc161, #loc155])
#loc301 = loc(fused[#loc163, #loc162])
#loc302 = loc(fused[#loc167, #loc166])
#loc303 = loc(fused[#loc174, #loc175])
#loc304 = loc(fused[#loc176, #loc177])
#loc305 = loc(fused[#loc178, #loc179])
#loc306 = loc(fused[#loc182, #loc180])
#loc307 = loc(fused[#loc184, #loc183])
#loc308 = loc(fused[#loc186, #loc185])
#loc309 = loc(fused[#loc187, #loc188])
#loc310 = loc(fused[#loc189, #loc190])
#loc311 = loc(fused[#loc191, #loc192])
#loc312 = loc(fused[#loc193, #loc194])
#loc313 = loc(fused[#loc195, #loc196])
#loc314 = loc(fused[#loc197, #loc198])
#loc315 = loc(fused[#loc201, #loc202])
#loc316 = loc(fused[#loc200, #loc202])
#loc317 = loc(fused[#loc199, #loc203])
#loc318 = loc(fused[#loc204, #loc203])
#loc319 = loc(fused[#loc205, #loc206])
#loc320 = loc(fused[#loc207, #loc208])
#loc321 = loc(fused[#loc209, #loc206])
#loc322 = loc(fused[#loc213, #loc214])
#loc323 = loc(fused[#loc216, #loc215])
#loc324 = loc(fused[#loc217, #loc218])
#loc325 = loc(fused[#loc220, #loc214])
#loc326 = loc(fused[#loc222, #loc221])
#loc327 = loc(fused[#loc226, #loc225])
