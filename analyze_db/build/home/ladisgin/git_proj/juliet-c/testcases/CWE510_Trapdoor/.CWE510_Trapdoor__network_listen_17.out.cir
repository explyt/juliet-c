!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc124 = loc("CWE510_Trapdoor__network_listen_17.c":114:10)
#loc125 = loc("CWE510_Trapdoor__network_listen_17.c":114:14)
#loc126 = loc("CWE510_Trapdoor__network_listen_17.c":114:20)
#loc127 = loc("CWE510_Trapdoor__network_listen_17.c":114:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc188 = loc(fused[#loc124, #loc125])
#loc189 = loc(fused[#loc126, #loc127])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_listen_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc138)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc139)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc140)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc141)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc142)
  cir.func private @close(!s32i) -> !s32i loc(#loc143)
  cir.func no_proto @CWE510_Trapdoor__network_listen_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc146)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc147)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // 2 preds: ^bb1, ^bb37
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc151)
    cir.brcond %7 ^bb3, ^bb38 loc(#loc29)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc18)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc20)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb6 loc(#loc154)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc154)
  ^bb7:  // pred: ^bb24
    %12 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc35)
    cir.brcond %13 ^bb8, ^bb25 loc(#loc35)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %14 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc38)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb9 loc(#loc156)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc45)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc157)
    cir.brcond %21 ^bb10, ^bb11 loc(#loc158)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc47)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc43)
  ^bb12:  // pred: ^bb11
    %22 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc159)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc160)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc55)
    %27 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc162)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc58)
    %30 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc163)
    %32 = cir.const #cir.int<30000> : !s32i loc(#loc62)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc62)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc63)
    %35 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc164)
    cir.br ^bb13 loc(#loc165)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %37 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc166)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc167)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc167)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc75)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %43 ^bb14, ^bb15 loc(#loc169)
  ^bb14:  // pred: ^bb13
    cir.br ^bb25 loc(#loc77)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc68)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc170)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc81)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc83)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %49 ^bb18, ^bb19 loc(#loc172)
  ^bb18:  // pred: ^bb17
    cir.br ^bb25 loc(#loc85)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc79)
  ^bb20:  // pred: ^bb19
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc87)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc88)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc89)
    cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb21 loc(#loc174)
  ^bb21:  // pred: ^bb20
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc95)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %57 ^bb22, ^bb23 loc(#loc176)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc97)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc93)
  ^bb24:  // pred: ^bb23
    cir.br ^bb7 loc(#loc34)
  ^bb25:  // 5 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22
    cir.br ^bb26 loc(#loc34)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc177)
  ^bb27:  // pred: ^bb26
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc101)
    %61 = cir.cmp(ne, %58, %60) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %61 ^bb28, ^bb29 loc(#loc179)
  ^bb28:  // pred: ^bb27
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %63 = cir.call @close(%62) : (!s32i) -> !s32i loc(#loc104)
    cir.br ^bb29 loc(#loc99)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc99)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc180)
  ^bb31:  // pred: ^bb30
    %64 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc108)
    %67 = cir.cmp(ne, %64, %66) : !s32i, !cir.bool loc(#loc181)
    cir.brcond %67 ^bb32, ^bb33 loc(#loc182)
  ^bb32:  // pred: ^bb31
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %69 = cir.call @close(%68) : (!s32i) -> !s32i loc(#loc111)
    cir.br ^bb33 loc(#loc106)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc106)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc32)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc24)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc24)
  ^bb37:  // pred: ^bb36
    %70 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %71 = cir.unary(inc, %70) : !s32i, !s32i loc(#loc113)
    cir.store %71, %3 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb2 loc(#loc149)
  ^bb38:  // pred: ^bb2
    cir.br ^bb39 loc(#loc24)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc14)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc184)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc131)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %8 = cir.get_global @CWE510_Trapdoor__network_listen_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE510_Trapdoor__network_listen_17_bad() : () -> () loc(#loc133)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc136)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.return %12 : !s32i loc(#loc191)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_listen_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/unistd.h":358:1)
#loc12 = loc("/usr/include/unistd.h":358:27)
#loc13 = loc("CWE510_Trapdoor__network_listen_17.c":39:1)
#loc14 = loc("CWE510_Trapdoor__network_listen_17.c":103:1)
#loc15 = loc("CWE510_Trapdoor__network_listen_17.c":49:13)
#loc16 = loc("CWE510_Trapdoor__network_listen_17.c":49:32)
#loc17 = loc("CWE510_Trapdoor__network_listen_17.c":50:13)
#loc18 = loc("CWE510_Trapdoor__network_listen_17.c":50:35)
#loc19 = loc("CWE510_Trapdoor__network_listen_17.c":51:13)
#loc20 = loc("CWE510_Trapdoor__network_listen_17.c":51:35)
#loc21 = loc("CWE510_Trapdoor__network_listen_17.c":41:5)
#loc22 = loc("CWE510_Trapdoor__network_listen_17.c":41:9)
#loc23 = loc("CWE510_Trapdoor__network_listen_17.c":42:5)
#loc24 = loc("CWE510_Trapdoor__network_listen_17.c":102:5)
#loc25 = loc("CWE510_Trapdoor__network_listen_17.c":42:13)
#loc26 = loc("CWE510_Trapdoor__network_listen_17.c":42:9)
#loc27 = loc("CWE510_Trapdoor__network_listen_17.c":42:16)
#loc28 = loc("CWE510_Trapdoor__network_listen_17.c":42:20)
#loc29 = loc("CWE510_Trapdoor__network_listen_17.c":42:18)
#loc30 = loc("CWE510_Trapdoor__network_listen_17.c":43:5)
#loc31 = loc("CWE510_Trapdoor__network_listen_17.c":44:9)
#loc32 = loc("CWE510_Trapdoor__network_listen_17.c":101:9)
#loc33 = loc("CWE510_Trapdoor__network_listen_17.c":52:13)
#loc34 = loc("CWE510_Trapdoor__network_listen_17.c":86:21)
#loc35 = loc("CWE510_Trapdoor__network_listen_17.c":86:20)
#loc36 = loc("CWE510_Trapdoor__network_listen_17.c":61:39)
#loc37 = loc("CWE510_Trapdoor__network_listen_17.c":61:48)
#loc38 = loc("CWE510_Trapdoor__network_listen_17.c":61:61)
#loc39 = loc("CWE510_Trapdoor__network_listen_17.c":61:32)
#loc40 = loc("CWE510_Trapdoor__network_listen_17.c":61:17)
#loc41 = loc("CWE510_Trapdoor__network_listen_17.c":61:72)
#loc42 = loc("CWE510_Trapdoor__network_listen_17.c":62:17)
#loc43 = loc("CWE510_Trapdoor__network_listen_17.c":65:17)
#loc44 = loc("CWE510_Trapdoor__network_listen_17.c":62:21)
#loc45 = loc("CWE510_Trapdoor__network_listen_17.c":62:37)
#loc46 = loc("CWE510_Trapdoor__network_listen_17.c":63:17)
#loc47 = loc("CWE510_Trapdoor__network_listen_17.c":64:21)
#loc48 = loc("CWE510_Trapdoor__network_listen_17.c":66:24)
#loc49 = loc("CWE510_Trapdoor__network_listen_17.c":66:25)
#loc50 = loc("CWE510_Trapdoor__network_listen_17.c":66:34)
#loc51 = loc("CWE510_Trapdoor__network_listen_17.c":66:37)
#loc52 = loc("CWE510_Trapdoor__network_listen_17.c":66:51)
#loc53 = loc("CWE510_Trapdoor__network_listen_17.c":66:17)
#loc54 = loc("CWE510_Trapdoor__network_listen_17.c":66:52)
#loc55 = loc("CWE510_Trapdoor__network_listen_17.c":67:38)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE510_Trapdoor__network_listen_17.c":67:17)
#loc58 = loc("CWE510_Trapdoor__network_listen_17.c":68:43)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE510_Trapdoor__network_listen_17.c":68:17)
#loc62 = loc("CWE510_Trapdoor__network_listen_17.c":69:42)
#loc63 = loc("CWE510_Trapdoor__network_listen_17.c":69:36)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE510_Trapdoor__network_listen_17.c":69:17)
#loc66 = loc("CWE510_Trapdoor__network_listen_17.c":69:47)
#loc67 = loc("CWE510_Trapdoor__network_listen_17.c":70:17)
#loc68 = loc("CWE510_Trapdoor__network_listen_17.c":73:17)
#loc69 = loc("CWE510_Trapdoor__network_listen_17.c":70:26)
#loc70 = loc("CWE510_Trapdoor__network_listen_17.c":70:58)
#loc71 = loc("CWE510_Trapdoor__network_listen_17.c":70:59)
#loc72 = loc("CWE510_Trapdoor__network_listen_17.c":70:68)
#loc73 = loc("CWE510_Trapdoor__network_listen_17.c":70:82)
#loc74 = loc("CWE510_Trapdoor__network_listen_17.c":70:21)
#loc75 = loc("CWE510_Trapdoor__network_listen_17.c":70:88)
#loc76 = loc("CWE510_Trapdoor__network_listen_17.c":71:17)
#loc77 = loc("CWE510_Trapdoor__network_listen_17.c":72:21)
#loc78 = loc("CWE510_Trapdoor__network_listen_17.c":74:17)
#loc79 = loc("CWE510_Trapdoor__network_listen_17.c":77:17)
#loc80 = loc("CWE510_Trapdoor__network_listen_17.c":74:28)
#loc81 = loc("CWE510_Trapdoor__network_listen_17.c":74:42)
#loc82 = loc("CWE510_Trapdoor__network_listen_17.c":74:21)
#loc83 = loc("CWE510_Trapdoor__network_listen_17.c":74:48)
#loc84 = loc("CWE510_Trapdoor__network_listen_17.c":75:17)
#loc85 = loc("CWE510_Trapdoor__network_listen_17.c":76:21)
#loc86 = loc("CWE510_Trapdoor__network_listen_17.c":79:39)
#loc87 = loc("CWE510_Trapdoor__network_listen_17.c":79:53)
#loc88 = loc("CWE510_Trapdoor__network_listen_17.c":79:59)
#loc89 = loc("CWE510_Trapdoor__network_listen_17.c":79:32)
#loc90 = loc("CWE510_Trapdoor__network_listen_17.c":79:17)
#loc91 = loc("CWE510_Trapdoor__network_listen_17.c":79:63)
#loc92 = loc("CWE510_Trapdoor__network_listen_17.c":80:17)
#loc93 = loc("CWE510_Trapdoor__network_listen_17.c":83:17)
#loc94 = loc("CWE510_Trapdoor__network_listen_17.c":80:21)
#loc95 = loc("CWE510_Trapdoor__network_listen_17.c":80:37)
#loc96 = loc("CWE510_Trapdoor__network_listen_17.c":81:17)
#loc97 = loc("CWE510_Trapdoor__network_listen_17.c":82:21)
#loc98 = loc("CWE510_Trapdoor__network_listen_17.c":87:13)
#loc99 = loc("CWE510_Trapdoor__network_listen_17.c":90:13)
#loc100 = loc("CWE510_Trapdoor__network_listen_17.c":87:17)
#loc101 = loc("CWE510_Trapdoor__network_listen_17.c":87:33)
#loc102 = loc("CWE510_Trapdoor__network_listen_17.c":88:13)
#loc103 = loc("CWE510_Trapdoor__network_listen_17.c":89:30)
#loc104 = loc("CWE510_Trapdoor__network_listen_17.c":89:17)
#loc105 = loc("CWE510_Trapdoor__network_listen_17.c":91:13)
#loc106 = loc("CWE510_Trapdoor__network_listen_17.c":94:13)
#loc107 = loc("CWE510_Trapdoor__network_listen_17.c":91:17)
#loc108 = loc("CWE510_Trapdoor__network_listen_17.c":91:33)
#loc109 = loc("CWE510_Trapdoor__network_listen_17.c":92:13)
#loc110 = loc("CWE510_Trapdoor__network_listen_17.c":93:30)
#loc111 = loc("CWE510_Trapdoor__network_listen_17.c":93:17)
#loc112 = loc("CWE510_Trapdoor__network_listen_17.c":42:24)
#loc113 = loc("CWE510_Trapdoor__network_listen_17.c":42:23)
#loc114 = loc("/usr/include/stdlib.h":575:1)
#loc115 = loc("/usr/include/stdlib.h":575:41)
#loc116 = loc("/usr/include/time.h":76:1)
#loc117 = loc("/usr/include/time.h":76:38)
#loc118 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc119 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc120 = loc("CWE510_Trapdoor__network_listen_17.c":119:15)
#loc121 = loc("CWE510_Trapdoor__network_listen_17.c":121:15)
#loc122 = loc("CWE510_Trapdoor__network_listen_17.c":114:1)
#loc123 = loc("CWE510_Trapdoor__network_listen_17.c":124:1)
#loc128 = loc("CWE510_Trapdoor__network_listen_17.c":115:1)
#loc129 = loc("CWE510_Trapdoor__network_listen_17.c":117:27)
#loc130 = loc("CWE510_Trapdoor__network_listen_17.c":117:22)
#loc131 = loc("CWE510_Trapdoor__network_listen_17.c":117:5)
#loc132 = loc("CWE510_Trapdoor__network_listen_17.c":119:5)
#loc133 = loc("CWE510_Trapdoor__network_listen_17.c":120:5)
#loc134 = loc("CWE510_Trapdoor__network_listen_17.c":120:44)
#loc135 = loc("CWE510_Trapdoor__network_listen_17.c":121:5)
#loc136 = loc("CWE510_Trapdoor__network_listen_17.c":123:12)
#loc137 = loc("CWE510_Trapdoor__network_listen_17.c":123:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc17, #loc18])
#loc147 = loc(fused[#loc19, #loc20])
#loc148 = loc(fused[#loc21, #loc22])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc26, #loc25])
#loc151 = loc(fused[#loc27, #loc28])
#loc152 = loc(fused[#loc30, #loc24])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc33, #loc34])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc43])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc57, #loc55])
#loc163 = loc(fused[#loc61, #loc58])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc67, #loc68])
#loc166 = loc(fused[#loc70, #loc71])
#loc167 = loc(fused[#loc72, #loc73])
#loc168 = loc(fused[#loc74, #loc75])
#loc169 = loc(fused[#loc76, #loc68])
#loc170 = loc(fused[#loc78, #loc79])
#loc171 = loc(fused[#loc82, #loc83])
#loc172 = loc(fused[#loc84, #loc79])
#loc173 = loc(fused[#loc90, #loc91])
#loc174 = loc(fused[#loc92, #loc93])
#loc175 = loc(fused[#loc94, #loc95])
#loc176 = loc(fused[#loc96, #loc93])
#loc177 = loc(fused[#loc98, #loc99])
#loc178 = loc(fused[#loc100, #loc101])
#loc179 = loc(fused[#loc102, #loc99])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108])
#loc182 = loc(fused[#loc109, #loc106])
#loc183 = loc(fused[#loc113, #loc112])
#loc184 = loc(fused[#loc114, #loc115])
#loc185 = loc(fused[#loc116, #loc117])
#loc186 = loc(fused[#loc118, #loc119])
#loc187 = loc(fused[#loc122, #loc123])
#loc190 = loc(fused[#loc133, #loc134])
#loc191 = loc(fused[#loc137, #loc136])
