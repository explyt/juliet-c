!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc111)
  cir.func private @printIntLine(!s32i) loc(#loc112)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_323badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc117)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc118)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc117)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc118)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc17)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc8)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc114)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc121)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %12 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc31)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc33)
    cir.store %15, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc113)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_32L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc128)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc131)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc132)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc131)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc132)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc52)
    cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc41)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc135)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc59)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc64)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc66)
    cir.store %13, %14 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    cir.br ^bb2 loc(#loc55)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc138)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc45)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc39)
  } loc(#loc126)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc139)
  cir.func internal private @_ZN30CWE401_Memory_Leak__new_int_32L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc144)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc144)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc145)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc85)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc148)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc92)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc148)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc149)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %12 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc99)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    cir.store %15, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // pred: ^bb2
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc78)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc106)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc92)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc74)
  } loc(#loc140)
  cir.func @_ZN30CWE401_Memory_Leak__new_int_324goodEv() extra(#fn_attr) {
    cir.call @_ZN30CWE401_Memory_Leak__new_int_32L7goodG2BEv() : () -> () loc(#loc109)
    cir.call @_ZN30CWE401_Memory_Leak__new_int_32L7goodB2GEv() : () -> () loc(#loc110)
    cir.return loc(#loc108)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_32.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE401_Memory_Leak__new_int_32.cpp":29:1)
#loc6 = loc("CWE401_Memory_Leak__new_int_32.cpp":49:1)
#loc7 = loc("CWE401_Memory_Leak__new_int_32.cpp":36:9)
#loc8 = loc("CWE401_Memory_Leak__new_int_32.cpp":36:23)
#loc9 = loc("CWE401_Memory_Leak__new_int_32.cpp":45:9)
#loc10 = loc("CWE401_Memory_Leak__new_int_32.cpp":45:23)
#loc11 = loc("CWE401_Memory_Leak__new_int_32.cpp":31:5)
#loc12 = loc("CWE401_Memory_Leak__new_int_32.cpp":31:11)
#loc13 = loc("CWE401_Memory_Leak__new_int_32.cpp":32:5)
#loc14 = loc("CWE401_Memory_Leak__new_int_32.cpp":32:24)
#loc15 = loc("CWE401_Memory_Leak__new_int_32.cpp":33:5)
#loc16 = loc("CWE401_Memory_Leak__new_int_32.cpp":33:24)
#loc17 = loc("CWE401_Memory_Leak__new_int_32.cpp":34:12)
#loc18 = loc("CWE401_Memory_Leak__new_int_32.cpp":34:5)
#loc19 = loc("CWE401_Memory_Leak__new_int_32.cpp":35:5)
#loc20 = loc("CWE401_Memory_Leak__new_int_32.cpp":43:5)
#loc21 = loc("CWE401_Memory_Leak__new_int_32.cpp":36:22)
#loc22 = loc("CWE401_Memory_Leak__new_int_32.cpp":38:16)
#loc23 = loc("CWE401_Memory_Leak__new_int_32.cpp":38:20)
#loc24 = loc("CWE401_Memory_Leak__new_int_32.cpp":29:6)
#loc25 = loc("CWE401_Memory_Leak__new_int_32.cpp":38:9)
#loc26 = loc("CWE401_Memory_Leak__new_int_32.cpp":40:17)
#loc27 = loc("CWE401_Memory_Leak__new_int_32.cpp":40:10)
#loc28 = loc("CWE401_Memory_Leak__new_int_32.cpp":40:9)
#loc29 = loc("CWE401_Memory_Leak__new_int_32.cpp":41:23)
#loc30 = loc("CWE401_Memory_Leak__new_int_32.cpp":41:22)
#loc31 = loc("CWE401_Memory_Leak__new_int_32.cpp":41:9)
#loc32 = loc("CWE401_Memory_Leak__new_int_32.cpp":42:21)
#loc33 = loc("CWE401_Memory_Leak__new_int_32.cpp":42:10)
#loc34 = loc("CWE401_Memory_Leak__new_int_32.cpp":42:9)
#loc35 = loc("CWE401_Memory_Leak__new_int_32.cpp":44:5)
#loc36 = loc("CWE401_Memory_Leak__new_int_32.cpp":48:5)
#loc37 = loc("CWE401_Memory_Leak__new_int_32.cpp":45:22)
#loc38 = loc("CWE401_Memory_Leak__new_int_32.cpp":56:1)
#loc39 = loc("CWE401_Memory_Leak__new_int_32.cpp":77:1)
#loc40 = loc("CWE401_Memory_Leak__new_int_32.cpp":63:9)
#loc41 = loc("CWE401_Memory_Leak__new_int_32.cpp":63:23)
#loc42 = loc("CWE401_Memory_Leak__new_int_32.cpp":65:9)
#loc43 = loc("CWE401_Memory_Leak__new_int_32.cpp":65:13)
#loc44 = loc("CWE401_Memory_Leak__new_int_32.cpp":73:9)
#loc45 = loc("CWE401_Memory_Leak__new_int_32.cpp":73:23)
#loc46 = loc("CWE401_Memory_Leak__new_int_32.cpp":58:5)
#loc47 = loc("CWE401_Memory_Leak__new_int_32.cpp":58:11)
#loc48 = loc("CWE401_Memory_Leak__new_int_32.cpp":59:5)
#loc49 = loc("CWE401_Memory_Leak__new_int_32.cpp":59:24)
#loc50 = loc("CWE401_Memory_Leak__new_int_32.cpp":60:5)
#loc51 = loc("CWE401_Memory_Leak__new_int_32.cpp":60:24)
#loc52 = loc("CWE401_Memory_Leak__new_int_32.cpp":61:12)
#loc53 = loc("CWE401_Memory_Leak__new_int_32.cpp":61:5)
#loc54 = loc("CWE401_Memory_Leak__new_int_32.cpp":62:5)
#loc55 = loc("CWE401_Memory_Leak__new_int_32.cpp":71:5)
#loc56 = loc("CWE401_Memory_Leak__new_int_32.cpp":63:22)
#loc57 = loc("CWE401_Memory_Leak__new_int_32.cpp":66:9)
#loc58 = loc("CWE401_Memory_Leak__new_int_32.cpp":66:17)
#loc59 = loc("CWE401_Memory_Leak__new_int_32.cpp":68:17)
#loc60 = loc("CWE401_Memory_Leak__new_int_32.cpp":68:10)
#loc61 = loc("CWE401_Memory_Leak__new_int_32.cpp":68:9)
#loc62 = loc("CWE401_Memory_Leak__new_int_32.cpp":69:23)
#loc63 = loc("CWE401_Memory_Leak__new_int_32.cpp":69:22)
#loc64 = loc("CWE401_Memory_Leak__new_int_32.cpp":69:9)
#loc65 = loc("CWE401_Memory_Leak__new_int_32.cpp":70:21)
#loc66 = loc("CWE401_Memory_Leak__new_int_32.cpp":70:10)
#loc67 = loc("CWE401_Memory_Leak__new_int_32.cpp":70:9)
#loc68 = loc("CWE401_Memory_Leak__new_int_32.cpp":72:5)
#loc69 = loc("CWE401_Memory_Leak__new_int_32.cpp":76:5)
#loc70 = loc("CWE401_Memory_Leak__new_int_32.cpp":73:22)
#loc71 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc72 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc73 = loc("CWE401_Memory_Leak__new_int_32.cpp":80:1)
#loc74 = loc("CWE401_Memory_Leak__new_int_32.cpp":100:1)
#loc75 = loc("CWE401_Memory_Leak__new_int_32.cpp":87:9)
#loc76 = loc("CWE401_Memory_Leak__new_int_32.cpp":87:23)
#loc77 = loc("CWE401_Memory_Leak__new_int_32.cpp":96:9)
#loc78 = loc("CWE401_Memory_Leak__new_int_32.cpp":96:23)
#loc79 = loc("CWE401_Memory_Leak__new_int_32.cpp":82:5)
#loc80 = loc("CWE401_Memory_Leak__new_int_32.cpp":82:11)
#loc81 = loc("CWE401_Memory_Leak__new_int_32.cpp":83:5)
#loc82 = loc("CWE401_Memory_Leak__new_int_32.cpp":83:24)
#loc83 = loc("CWE401_Memory_Leak__new_int_32.cpp":84:5)
#loc84 = loc("CWE401_Memory_Leak__new_int_32.cpp":84:24)
#loc85 = loc("CWE401_Memory_Leak__new_int_32.cpp":85:12)
#loc86 = loc("CWE401_Memory_Leak__new_int_32.cpp":85:5)
#loc87 = loc("CWE401_Memory_Leak__new_int_32.cpp":86:5)
#loc88 = loc("CWE401_Memory_Leak__new_int_32.cpp":94:5)
#loc89 = loc("CWE401_Memory_Leak__new_int_32.cpp":87:22)
#loc90 = loc("CWE401_Memory_Leak__new_int_32.cpp":89:16)
#loc91 = loc("CWE401_Memory_Leak__new_int_32.cpp":89:20)
#loc92 = loc("CWE401_Memory_Leak__new_int_32.cpp":80:13)
#loc93 = loc("CWE401_Memory_Leak__new_int_32.cpp":89:9)
#loc94 = loc("CWE401_Memory_Leak__new_int_32.cpp":91:17)
#loc95 = loc("CWE401_Memory_Leak__new_int_32.cpp":91:10)
#loc96 = loc("CWE401_Memory_Leak__new_int_32.cpp":91:9)
#loc97 = loc("CWE401_Memory_Leak__new_int_32.cpp":92:23)
#loc98 = loc("CWE401_Memory_Leak__new_int_32.cpp":92:22)
#loc99 = loc("CWE401_Memory_Leak__new_int_32.cpp":92:9)
#loc100 = loc("CWE401_Memory_Leak__new_int_32.cpp":93:21)
#loc101 = loc("CWE401_Memory_Leak__new_int_32.cpp":93:10)
#loc102 = loc("CWE401_Memory_Leak__new_int_32.cpp":93:9)
#loc103 = loc("CWE401_Memory_Leak__new_int_32.cpp":95:5)
#loc104 = loc("CWE401_Memory_Leak__new_int_32.cpp":99:5)
#loc105 = loc("CWE401_Memory_Leak__new_int_32.cpp":96:22)
#loc106 = loc("CWE401_Memory_Leak__new_int_32.cpp":98:16)
#loc107 = loc("CWE401_Memory_Leak__new_int_32.cpp":102:1)
#loc108 = loc("CWE401_Memory_Leak__new_int_32.cpp":106:1)
#loc109 = loc("CWE401_Memory_Leak__new_int_32.cpp":104:5)
#loc110 = loc("CWE401_Memory_Leak__new_int_32.cpp":105:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc18, #loc17])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc22, #loc23])
#loc122 = loc(fused[#loc25, #loc23])
#loc123 = loc(fused[#loc28, #loc26])
#loc124 = loc(fused[#loc34, #loc32])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc38, #loc39])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc42, #loc43])
#loc129 = loc(fused[#loc44, #loc45])
#loc130 = loc(fused[#loc46, #loc47])
#loc131 = loc(fused[#loc48, #loc49])
#loc132 = loc(fused[#loc50, #loc51])
#loc133 = loc(fused[#loc53, #loc52])
#loc134 = loc(fused[#loc54, #loc55])
#loc135 = loc(fused[#loc57, #loc58])
#loc136 = loc(fused[#loc61, #loc59])
#loc137 = loc(fused[#loc67, #loc65])
#loc138 = loc(fused[#loc68, #loc69])
#loc139 = loc(fused[#loc71, #loc72])
#loc140 = loc(fused[#loc73, #loc74])
#loc141 = loc(fused[#loc75, #loc76])
#loc142 = loc(fused[#loc77, #loc78])
#loc143 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc81, #loc82])
#loc145 = loc(fused[#loc83, #loc84])
#loc146 = loc(fused[#loc86, #loc85])
#loc147 = loc(fused[#loc87, #loc88])
#loc148 = loc(fused[#loc90, #loc91])
#loc149 = loc(fused[#loc93, #loc91])
#loc150 = loc(fused[#loc96, #loc94])
#loc151 = loc(fused[#loc102, #loc100])
#loc152 = loc(fused[#loc103, #loc104])
#loc153 = loc(fused[#loc107, #loc108])
