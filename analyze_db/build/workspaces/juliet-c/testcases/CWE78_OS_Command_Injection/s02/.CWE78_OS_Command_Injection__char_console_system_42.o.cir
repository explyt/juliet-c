!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":36:25)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":36:32)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:33)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":84:29)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":84:36)
#true = #cir.bool<true> : !cir.bool
#loc137 = loc(fused[#loc14, #loc15])
#loc172 = loc(fused[#loc104, #loc105])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc131)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_42_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc132)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc13)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc21)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc21)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc141)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
    %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc142)
    cir.brcond %12 ^bb3, ^bb21 loc(#loc143)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc33)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc34)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %19 = cir.binop(sub, %17, %18) : !u64i loc(#loc145)
    %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc145)
    %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
    %23 = cir.call @fgets(%15, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
    cir.brcond %26 ^bb5, ^bb18 loc(#loc147)
  ^bb5:  // pred: ^bb4
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc49)
    %33 = cir.cmp(gt, %30, %32) : !u64i, !cir.bool loc(#loc150)
    cir.brcond %33 ^bb7, ^bb12 loc(#loc50)
  ^bb7:  // pred: ^bb6
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc53)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc151)
    %39 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc54)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc51)
    %41 = cir.cast(integral, %40 : !s8i), !s32i loc(#loc51)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc55)
    %43 = cir.cmp(eq, %41, %42) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %43 ^bb8, ^bb9 loc(#loc50)
  ^bb8:  // pred: ^bb7
    %44 = cir.const #true loc(#loc50)
    cir.br ^bb10(%44 : !cir.bool) loc(#loc50)
  ^bb9:  // pred: ^bb7
    %45 = cir.const #false loc(#loc50)
    cir.br ^bb10(%45 : !cir.bool) loc(#loc50)
  ^bb10(%46: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%46 : !cir.bool) loc(#loc50)
  ^bb12:  // pred: ^bb6
    %47 = cir.const #false loc(#loc50)
    cir.br ^bb13(%47 : !cir.bool) loc(#loc50)
  ^bb13(%48: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc50)
  ^bb14:  // pred: ^bb13
    cir.brcond %48 ^bb15, ^bb16 loc(#loc153)
  ^bb15:  // pred: ^bb14
    %49 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc57)
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %52 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc60)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc154)
    %56 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc61)
    cir.store %50, %56 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb16 loc(#loc47)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc47)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc40)
  ^bb18:  // pred: ^bb4
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc63)
    %61 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %62 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    cir.br ^bb19 loc(#loc30)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc30)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc24)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc24)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc20)
  ^bb23:  // pred: ^bb22
    %64 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.store %64, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.return %65 : !cir.ptr<!s8i> loc(#loc157)
  } loc(#loc136)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc73)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_42_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc83)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc89)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc73)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc93)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc94)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc77)
  } loc(#loc161)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc168)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc101)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc104, #loc105])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc173)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc118)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc124)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc179)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc127)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc129)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc130)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
    cir.br ^bb3 loc(#loc122)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc112)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_42.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":95:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":95:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":69:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":69:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":57:27)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":36:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":64:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:9)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:37)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":37:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":38:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":62:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:26)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":40:33)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":61:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:17)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":42:27)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":43:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":60:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:23)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:28)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:27)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:43)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:47)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:57)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":45:67)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":46:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":54:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":56:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:34)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":49:38)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":53:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:31)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:36)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:41)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:49)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:50)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":50:55)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":51:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:39)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:26)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:34)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":52:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":57:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:22)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":59:29)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":63:12)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":63:5)
#loc69 = loc("/usr/include/stdlib.h":923:1)
#loc70 = loc("/usr/include/stdlib.h":923:41)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":75:19)
#loc74 = loc("/usr/include/stdlib.h":756:1)
#loc75 = loc("/usr/include/stdlib.h":756:70)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":66:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":78:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":68:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":68:12)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":70:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":70:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:12)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":71:26)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":77:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:16)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":73:25)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":74:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":75:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":76:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":76:14)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":106:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":109:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":108:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":108:13)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":87:18)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":84:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":89:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":85:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":87:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":87:12)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":88:12)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":88:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":92:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":104:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":94:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":94:12)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":96:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":96:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:26)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:12)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":97:30)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":103:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:16)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":99:25)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":100:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":101:19)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":101:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":102:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_42.c":102:14)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc12, #loc13])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc25, #loc26])
#loc142 = loc(fused[#loc25, #loc27])
#loc143 = loc(fused[#loc28, #loc24])
#loc144 = loc(fused[#loc29, #loc30])
#loc145 = loc(fused[#loc34, #loc35])
#loc146 = loc(fused[#loc37, #loc38])
#loc147 = loc(fused[#loc39, #loc40, #loc41, #loc30])
#loc148 = loc(fused[#loc44, #loc45])
#loc149 = loc(fused[#loc46, #loc47])
#loc150 = loc(fused[#loc48, #loc49])
#loc151 = loc(fused[#loc52, #loc53])
#loc152 = loc(fused[#loc51, #loc55])
#loc153 = loc(fused[#loc56, #loc47])
#loc154 = loc(fused[#loc59, #loc60])
#loc155 = loc(fused[#loc58, #loc57])
#loc156 = loc(fused[#loc64, #loc63])
#loc157 = loc(fused[#loc68, #loc67])
#loc158 = loc(fused[#loc69, #loc70])
#loc159 = loc(fused[#loc71, #loc72])
#loc160 = loc(fused[#loc74, #loc75])
#loc161 = loc(fused[#loc76, #loc77])
#loc162 = loc(fused[#loc78, #loc79])
#loc163 = loc(fused[#loc81, #loc80])
#loc164 = loc(fused[#loc84, #loc85])
#loc165 = loc(fused[#loc86, #loc87])
#loc166 = loc(fused[#loc89, #loc90])
#loc167 = loc(fused[#loc91, #loc87])
#loc168 = loc(fused[#loc95, #loc96])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc110, #loc109])
#loc174 = loc(fused[#loc111, #loc112])
#loc175 = loc(fused[#loc113, #loc114])
#loc176 = loc(fused[#loc116, #loc115])
#loc177 = loc(fused[#loc119, #loc120])
#loc178 = loc(fused[#loc121, #loc122])
#loc179 = loc(fused[#loc124, #loc125])
#loc180 = loc(fused[#loc126, #loc122])
