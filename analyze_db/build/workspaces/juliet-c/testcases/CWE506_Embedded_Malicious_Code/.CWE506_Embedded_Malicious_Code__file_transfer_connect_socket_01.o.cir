!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE506_Embedded_Malicious_Code/CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"conf.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc128)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc129)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc130)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc131)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc132)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private @close(!s32i) -> !s32i loc(#loc134)
  cir.func no_proto @CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc137)
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc138)
      %2 = cir.alloca !cir.array<!s8i x 65536>, !cir.ptr<!cir.array<!s8i x 65536>>, ["contents"] {alignment = 16 : i64} loc(#loc139)
      %3 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc140)
      %4 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc31)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc138)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc36)
      %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc4)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc4)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc36)
      cir.store %11, %3 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc42)
        %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc143)
        cir.if %15 {
          cir.scope {
            %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc46)
            %19 = cir.const #cir.int<65535> : !s32i loc(#loc47)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
            %21 = cir.call @fgets(%18, %19, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc49)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
            cir.if %24 {
              %25 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc52)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc53)
              %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc53)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc54)
              %30 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc55)
              %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc55)
              cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc148)
            } loc(#loc147)
          } loc(#loc145)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
          %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc57)
        } loc(#loc144)
      } loc(#loc142)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc62)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc64)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc65)
            cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc151)
            cir.scope {
              %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc71)
              %33 = cir.cmp(eq, %30, %32) : !s32i, !cir.bool loc(#loc153)
              cir.if %33 {
                cir.break loc(#loc73)
              } loc(#loc154)
            } loc(#loc152)
            %16 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc155)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc156)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc81)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc81)
            %21 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc158)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc84)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc84)
            %24 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc159)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc88)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc88)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc89)
            %29 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc160)
            cir.scope {
              %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %31 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc162)
              %32 = cir.const #cir.int<16> : !u64i loc(#loc163)
              %33 = cir.cast(integral, %32 : !u64i), !u32i loc(#loc163)
              %34 = cir.call @connect(%30, %31, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc100)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %36 = cir.unary(minus, %35) nsw : !s32i, !s32i loc(#loc101)
              %37 = cir.cmp(eq, %34, %36) : !s32i, !cir.bool loc(#loc164)
              cir.if %37 {
                cir.break loc(#loc103)
              } loc(#loc165)
            } loc(#loc161)
            cir.scope {
              %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc107)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
              %33 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc108)
              %34 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc109)
              %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc108)
              %36 = cir.const #cir.int<0> : !s32i loc(#loc110)
              %37 = cir.call @send(%30, %32, %35, %36) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
              %38 = cir.cast(integral, %37 : !s64i), !u64i loc(#loc111)
              %39 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc112)
              %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc113)
              %41 = cir.call @strlen(%40) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc112)
              %42 = cir.cmp(ne, %38, %41) : !u64i, !cir.bool loc(#loc167)
              cir.if %42 {
                cir.break loc(#loc116)
              } loc(#loc168)
            } loc(#loc166)
          } loc(#loc150)
          cir.yield loc(#loc59)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc117)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc117)
          cir.condition(%13) loc(#loc117)
        } loc(#loc149)
      } loc(#loc149)
      cir.scope {
        %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc121)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc170)
        cir.if %15 {
          %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc124)
        } loc(#loc171)
      } loc(#loc169)
    } loc(#loc136)
    cir.return loc(#loc25)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE506_Embedded_Malicious_Code/CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":52:23)
#loc4 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":52:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":57:27)
#loc10 = loc("/usr/include/stdio.h":184:1)
#loc11 = loc("/usr/include/stdio.h":184:36)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc20 = loc("/usr/include/string.h":407:1)
#loc21 = loc("/usr/include/string.h":408:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":41:1)
#loc25 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":103:1)
#loc26 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":43:5)
#loc27 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":102:5)
#loc28 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":48:9)
#loc29 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":48:28)
#loc30 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":49:9)
#loc31 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":49:32)
#loc32 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":50:9)
#loc33 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":50:28)
#loc34 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":51:9)
#loc35 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":51:16)
#loc36 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":52:17)
#loc37 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":52:9)
#loc38 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":52:36)
#loc39 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":53:9)
#loc40 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":62:9)
#loc41 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":53:13)
#loc42 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":53:22)
#loc43 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":54:9)
#loc44 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":55:13)
#loc45 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":60:13)
#loc46 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":55:23)
#loc47 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":55:39)
#loc48 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":55:47)
#loc49 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":55:17)
#loc50 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":55:57)
#loc51 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":56:13)
#loc52 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":57:17)
#loc53 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":59:31)
#loc54 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":59:26)
#loc55 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":59:17)
#loc56 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":61:20)
#loc57 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":61:13)
#loc58 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":63:9)
#loc59 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":91:17)
#loc60 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":64:9)
#loc61 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":90:9)
#loc62 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":72:36)
#loc63 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":72:45)
#loc64 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":72:58)
#loc65 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":72:29)
#loc66 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":72:13)
#loc67 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":72:69)
#loc68 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":73:13)
#loc69 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":76:13)
#loc70 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":73:17)
#loc71 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":73:34)
#loc72 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":74:13)
#loc73 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":75:17)
#loc74 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:20)
#loc75 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:21)
#loc76 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:30)
#loc77 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:33)
#loc78 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:47)
#loc79 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:13)
#loc80 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":77:48)
#loc81 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":78:34)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":78:13)
#loc84 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":79:39)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":79:13)
#loc88 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":80:38)
#loc89 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":80:32)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":80:13)
#loc92 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":80:46)
#loc93 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:13)
#loc94 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":84:13)
#loc95 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:25)
#loc96 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:58)
#loc97 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:59)
#loc98 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:68)
#loc99 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:82)
#loc100 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:17)
#loc101 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":81:88)
#loc102 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":82:13)
#loc103 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":83:17)
#loc104 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:13)
#loc105 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":89:13)
#loc106 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:22)
#loc107 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:37)
#loc108 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:47)
#loc109 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:54)
#loc110 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:65)
#loc111 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:17)
#loc112 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:71)
#loc113 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:78)
#loc114 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":86:86)
#loc115 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":87:13)
#loc116 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":88:17)
#loc117 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":91:16)
#loc118 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":92:9)
#loc119 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":95:9)
#loc120 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":92:13)
#loc121 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":92:30)
#loc122 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":93:9)
#loc123 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":94:26)
#loc124 = loc("CWE506_Embedded_Malicious_Code__file_transfer_connect_socket_01.c":94:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc12, #loc13])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc18, #loc19])
#loc133 = loc(fused[#loc20, #loc21])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc26, #loc27])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc30, #loc31])
#loc139 = loc(fused[#loc32, #loc33])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc37, #loc38])
#loc142 = loc(fused[#loc39, #loc40])
#loc143 = loc(fused[#loc41, #loc42])
#loc144 = loc(fused[#loc43, #loc40])
#loc145 = loc(fused[#loc44, #loc45])
#loc146 = loc(fused[#loc49, #loc50])
#loc147 = loc(fused[#loc51, #loc45])
#loc148 = loc(fused[#loc55, #loc53])
#loc149 = loc(fused[#loc58, #loc59])
#loc150 = loc(fused[#loc60, #loc61])
#loc151 = loc(fused[#loc66, #loc67])
#loc152 = loc(fused[#loc68, #loc69])
#loc153 = loc(fused[#loc70, #loc71])
#loc154 = loc(fused[#loc72, #loc69])
#loc155 = loc(fused[#loc74, #loc75])
#loc156 = loc(fused[#loc77, #loc78])
#loc157 = loc(fused[#loc79, #loc80])
#loc158 = loc(fused[#loc83, #loc81])
#loc159 = loc(fused[#loc87, #loc84])
#loc160 = loc(fused[#loc91, #loc92])
#loc161 = loc(fused[#loc93, #loc94])
#loc162 = loc(fused[#loc96, #loc97])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc100, #loc101])
#loc165 = loc(fused[#loc102, #loc94])
#loc166 = loc(fused[#loc104, #loc105])
#loc167 = loc(fused[#loc111, #loc114])
#loc168 = loc(fused[#loc115, #loc105])
#loc169 = loc(fused[#loc118, #loc119])
#loc170 = loc(fused[#loc120, #loc121])
#loc171 = loc(fused[#loc122, #loc119])
