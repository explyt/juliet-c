!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:10)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:14)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:20)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:32)
#loc197 = loc(fused[#loc71, #loc72])
#loc198 = loc(fused[#loc73, #loc74])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc171)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc172)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc175)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
        cir.condition(%3) loc(#loc20)
      } do {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc181)
          %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc181)
          cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc181)
          cir.scope {
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
            %5 = cir.const #cir.int<3> : !s32i loc(#loc28)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc28)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc28)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc28)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
            %11 = cir.binop(add, %8, %10) : !u64i loc(#loc28)
            %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc28)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
            %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
            %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc183)
            cir.if %18 {
              %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
              %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc36)
              cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
            } else {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc39)
            } loc(#loc184)
          } loc(#loc182)
        } loc(#loc180)
        cir.break loc(#loc40)
      } loc(#loc179)
    } loc(#loc179)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc43)
        cir.condition(%3) loc(#loc43)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          %3 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc188)
          cir.if %4 {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc190)
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc50)
            %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc51)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc190)
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc52)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc53)
          } loc(#loc189)
        } loc(#loc187)
        cir.break loc(#loc54)
      } loc(#loc186)
    } loc(#loc186)
    cir.return loc(#loc13)
  } loc(#loc176)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_16_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_16_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %17 : !s32i loc(#loc201)
  } loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc89)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc98)
        cir.condition(%3) loc(#loc98)
      } do {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc207)
          %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc207)
          cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc207)
          cir.scope {
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
            %5 = cir.const #cir.int<3> : !s32i loc(#loc106)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc106)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc106)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc106)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc106)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc106)
            %11 = cir.binop(add, %8, %10) : !u64i loc(#loc106)
            %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc106)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
            %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc108)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
            %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc209)
            cir.if %18 {
              %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
              %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc114)
              cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
            } else {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc118)
            } loc(#loc210)
          } loc(#loc208)
        } loc(#loc206)
        cir.break loc(#loc119)
      } loc(#loc205)
    } loc(#loc205)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc122)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc122)
        cir.condition(%3) loc(#loc122)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %3 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc214)
          cir.if %4 {
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc131)
              %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc131)
              %8 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc131)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc132)
              %11 = cir.binop(div, %9, %10) : !s32i loc(#loc217)
              %12 = cir.cmp(gt, %5, %11) : !s32i, !cir.bool loc(#loc218)
              cir.if %12 {
                %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc220)
                %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %15 = cir.const #cir.int<2> : !s32i loc(#loc138)
                %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc139)
                cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc220)
                %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc141)
              } else {
                %13 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc89)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc89)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc142)
              } loc(#loc219)
            } loc(#loc216)
          } loc(#loc215)
        } loc(#loc213)
        cir.break loc(#loc143)
      } loc(#loc212)
    } loc(#loc212)
    cir.return loc(#loc91)
  } loc(#loc202)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc148)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc152)
        cir.condition(%3) loc(#loc152)
      } do {
        %2 = cir.const #cir.int<2> : !s32i loc(#loc153)
        %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc154)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
        cir.break loc(#loc156)
      } loc(#loc224)
    } loc(#loc224)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc159)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc159)
        cir.condition(%3) loc(#loc159)
      } do {
        cir.scope {
          %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          %3 = cir.const #cir.int<0> : !s32i loc(#loc163)
          %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc228)
          cir.if %4 {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc230)
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
            %7 = cir.const #cir.int<2> : !s32i loc(#loc166)
            %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc167)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc230)
            %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc168)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc169)
          } loc(#loc229)
        } loc(#loc227)
        cir.break loc(#loc170)
      } loc(#loc226)
    } loc(#loc226)
    cir.return loc(#loc145)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":56:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":26:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":28:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":28:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":29:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":45:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":29:11)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":31:9)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":43:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":32:13)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":32:49)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:13)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":42:13)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:23)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:36)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:53)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:17)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:63)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":35:13)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":38:13)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":40:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:29)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:24)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:17)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:40)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":41:17)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":44:9)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":46:5)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":55:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":46:11)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":48:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":53:9)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":48:12)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":48:19)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":49:9)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":51:13)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":51:33)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":51:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":52:26)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":52:13)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":54:9)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":128:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":132:1)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":130:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":130:13)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":131:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":131:13)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":148:15)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":150:15)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":153:15)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":155:15)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:1)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":158:1)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":144:1)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":146:27)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":146:22)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":146:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":148:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":149:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":149:58)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":150:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":153:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":154:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":154:57)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":155:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":157:12)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":157:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":97:27)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":63:1)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":102:1)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":65:5)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":65:9)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":67:12)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":67:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":68:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":84:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":68:11)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":70:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":82:9)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":71:13)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":71:49)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:13)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":81:13)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:23)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:36)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:53)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:17)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:63)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":74:13)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":77:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":79:13)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:29)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:24)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:17)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:40)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":80:27)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":80:17)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":83:9)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":85:5)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":101:5)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":85:11)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":87:9)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":99:9)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":87:12)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":87:19)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":88:9)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:13)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":98:13)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:17)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:25)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:33)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:34)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":91:13)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":94:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":96:13)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":92:17)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":92:37)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":92:30)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":93:30)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":93:17)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":97:17)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":100:9)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":105:1)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":126:1)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":107:5)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":107:9)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":109:12)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":109:5)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":110:5)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":115:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":110:11)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":113:17)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":113:16)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":113:9)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":114:9)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":116:5)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":125:5)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":116:11)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":118:9)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":123:9)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":118:12)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":118:19)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":119:9)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":121:13)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":121:33)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":121:26)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":122:26)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":122:13)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":124:9)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc10, #loc11])
#loc176 = loc(fused[#loc12, #loc13])
#loc177 = loc(fused[#loc14, #loc15])
#loc178 = loc(fused[#loc17, #loc16])
#loc179 = loc(fused[#loc18, #loc19])
#loc180 = loc(fused[#loc21, #loc22])
#loc181 = loc(fused[#loc23, #loc24])
#loc182 = loc(fused[#loc25, #loc26])
#loc183 = loc(fused[#loc30, #loc31])
#loc184 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc185 = loc(fused[#loc37, #loc38])
#loc186 = loc(fused[#loc41, #loc42])
#loc187 = loc(fused[#loc44, #loc45])
#loc188 = loc(fused[#loc46, #loc47])
#loc189 = loc(fused[#loc48, #loc45])
#loc190 = loc(fused[#loc49, #loc50])
#loc191 = loc(fused[#loc55, #loc56])
#loc192 = loc(fused[#loc57, #loc58])
#loc193 = loc(fused[#loc59, #loc60])
#loc194 = loc(fused[#loc61, #loc62])
#loc195 = loc(fused[#loc63, #loc64])
#loc196 = loc(fused[#loc69, #loc70])
#loc199 = loc(fused[#loc80, #loc81])
#loc200 = loc(fused[#loc84, #loc85])
#loc201 = loc(fused[#loc88, #loc87])
#loc202 = loc(fused[#loc90, #loc91])
#loc203 = loc(fused[#loc92, #loc93])
#loc204 = loc(fused[#loc95, #loc94])
#loc205 = loc(fused[#loc96, #loc97])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc101, #loc102])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc108, #loc109])
#loc210 = loc(fused[#loc110, #loc111, #loc112, #loc104])
#loc211 = loc(fused[#loc115, #loc116])
#loc212 = loc(fused[#loc120, #loc121])
#loc213 = loc(fused[#loc123, #loc124])
#loc214 = loc(fused[#loc125, #loc126])
#loc215 = loc(fused[#loc127, #loc124])
#loc216 = loc(fused[#loc128, #loc129])
#loc217 = loc(fused[#loc131, #loc132])
#loc218 = loc(fused[#loc130, #loc133])
#loc219 = loc(fused[#loc134, #loc135, #loc136, #loc129])
#loc220 = loc(fused[#loc137, #loc138])
#loc221 = loc(fused[#loc144, #loc145])
#loc222 = loc(fused[#loc146, #loc147])
#loc223 = loc(fused[#loc149, #loc148])
#loc224 = loc(fused[#loc150, #loc151])
#loc225 = loc(fused[#loc155, #loc153])
#loc226 = loc(fused[#loc157, #loc158])
#loc227 = loc(fused[#loc160, #loc161])
#loc228 = loc(fused[#loc162, #loc163])
#loc229 = loc(fused[#loc164, #loc161])
#loc230 = loc(fused[#loc165, #loc166])
