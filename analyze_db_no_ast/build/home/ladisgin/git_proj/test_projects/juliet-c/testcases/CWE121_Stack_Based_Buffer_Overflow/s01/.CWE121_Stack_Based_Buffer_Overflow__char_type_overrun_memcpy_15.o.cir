!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc9)
      cir.switch (%0 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc135)
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
          %5 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc136)
          %6 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc16)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc18)
          %9 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc22)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc22)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
          %15 = cir.const #cir.int<32> : !u64i loc(#loc139)
          cir.libc.memcpy %15 bytes from %14 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc140)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc27)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc27)
          %18 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc141)
          %20 = cir.const #cir.int<1> : !u64i loc(#loc142)
          %21 = cir.binop(div, %19, %20) : !u64i loc(#loc143)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc32)
          %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc144)
          %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc34)
          %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc35)
          cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc145)
          %27 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc146)
          cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc38)
          %29 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc39)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc41)
        } loc(#loc134)
        cir.break loc(#loc42)
      },
      case (default) {
        %1 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        cir.break loc(#loc44)
      }
      ] loc(#loc7)
    } loc(#loc133)
    cir.return loc(#loc6)
  } loc(#loc132)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc148)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc55)
      cir.switch (%0 : !s32i) [
      case (equal, 6) {
        %1 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc57)
        cir.break loc(#loc58)
      },
      case (default) {
        cir.scope {
          %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc154)
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc63)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc63)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
          %5 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc155)
          %6 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc65)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc156)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc67)
          %9 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc157)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc70)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc70)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc158)
          cir.libc.memcpy %15 bytes from %14 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc159)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc75)
          %18 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc160)
          %20 = cir.const #cir.int<1> : !u64i loc(#loc161)
          %21 = cir.binop(div, %19, %20) : !u64i loc(#loc162)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc80)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc80)
          %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc163)
          %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
          %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc83)
          cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc164)
          %27 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc165)
          cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc86)
          %29 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc87)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc89)
        } loc(#loc153)
        cir.break loc(#loc90)
      }
      ] loc(#loc53)
    } loc(#loc152)
    cir.return loc(#loc52)
  } loc(#loc151)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc95)
      cir.switch (%0 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %1 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc170)
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc100)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc100)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
          %5 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc171)
          %6 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc102)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          %9 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc173)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc173)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc107)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc107)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc174)
          cir.libc.memcpy %15 bytes from %14 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc175)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc112)
          %18 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc176)
          %20 = cir.const #cir.int<1> : !u64i loc(#loc177)
          %21 = cir.binop(div, %19, %20) : !u64i loc(#loc178)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc117)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc117)
          %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc179)
          %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
          %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc120)
          cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc180)
          %27 = cir.get_member %1[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
          %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc181)
          cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc123)
          %29 = cir.get_member %1[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc14)
          %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc124)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc126)
        } loc(#loc169)
        cir.break loc(#loc127)
      },
      case (default) {
        %1 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc129)
        cir.break loc(#loc130)
      }
      ] loc(#loc93)
    } loc(#loc168)
    cir.return loc(#loc92)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":41:45)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":53:19)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":34:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":56:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":36:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":55:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":36:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":39:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":49:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":40:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":40:18)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":28:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":41:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":43:42)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":43:27)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":43:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":27:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:31)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:42)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:51)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:72)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":45:73)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:87)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:35)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:66)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:68)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:79)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:82)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":46:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":47:27)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":47:42)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":47:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":48:42)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":48:27)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":48:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":50:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":53:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":54:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":112:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":116:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":114:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":114:11)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":115:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":115:11)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":63:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":85:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":65:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":84:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":65:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":69:19)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":69:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":70:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":72:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":82:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":73:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":73:18)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":74:45)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":74:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":76:42)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":76:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":76:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:31)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:42)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:51)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:82)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":78:83)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:87)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:35)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:66)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:68)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:79)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:82)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:34)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":79:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":80:27)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":80:42)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":80:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":81:42)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":81:27)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":81:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":83:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":88:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":110:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":90:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":109:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":90:12)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":93:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":103:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":94:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":94:18)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":95:45)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":95:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":97:42)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":97:27)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":97:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:31)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:42)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:51)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:82)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":99:83)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:87)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:35)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:66)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:68)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:79)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:82)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:34)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":100:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":101:27)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":101:42)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":101:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":102:42)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":102:27)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":102:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":104:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":107:19)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":107:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_15.c":108:9)
#loc131 = loc(fused[#loc2, #loc3])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc15, #loc1])
#loc137 = loc(fused[#loc17, #loc16])
#loc138 = loc(fused[#loc20, #loc21])
#loc139 = loc(fused[#loc23, #loc24])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc28, #loc29])
#loc142 = loc(fused[#loc30, #loc31])
#loc143 = loc(fused[#loc28, #loc31])
#loc144 = loc(fused[#loc33, #loc32])
#loc145 = loc(fused[#loc34, #loc27])
#loc146 = loc(fused[#loc36, #loc37])
#loc147 = loc(fused[#loc40, #loc39])
#loc148 = loc(fused[#loc45, #loc46])
#loc149 = loc(fused[#loc47, #loc48])
#loc150 = loc(fused[#loc49, #loc50])
#loc151 = loc(fused[#loc51, #loc52])
#loc152 = loc(fused[#loc53, #loc54])
#loc153 = loc(fused[#loc59, #loc60])
#loc154 = loc(fused[#loc61, #loc62])
#loc155 = loc(fused[#loc64, #loc63])
#loc156 = loc(fused[#loc66, #loc65])
#loc157 = loc(fused[#loc68, #loc69])
#loc158 = loc(fused[#loc71, #loc72])
#loc159 = loc(fused[#loc73, #loc74])
#loc160 = loc(fused[#loc76, #loc77])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc76, #loc79])
#loc163 = loc(fused[#loc81, #loc80])
#loc164 = loc(fused[#loc82, #loc75])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc88, #loc87])
#loc167 = loc(fused[#loc91, #loc92])
#loc168 = loc(fused[#loc93, #loc94])
#loc169 = loc(fused[#loc96, #loc97])
#loc170 = loc(fused[#loc98, #loc99])
#loc171 = loc(fused[#loc101, #loc100])
#loc172 = loc(fused[#loc103, #loc102])
#loc173 = loc(fused[#loc105, #loc106])
#loc174 = loc(fused[#loc108, #loc109])
#loc175 = loc(fused[#loc110, #loc111])
#loc176 = loc(fused[#loc113, #loc114])
#loc177 = loc(fused[#loc115, #loc116])
#loc178 = loc(fused[#loc113, #loc116])
#loc179 = loc(fused[#loc118, #loc117])
#loc180 = loc(fused[#loc119, #loc112])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc125, #loc124])
