!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc252)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc253)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc255)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc257)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc258)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc260)
  cir.func no_proto @CWE367_TOC_TOU__access_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc26)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc263)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc266)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc267)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc266)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc266)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc34)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc267)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc38)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc43)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc44)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc44)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc45)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc46)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc271)
            } loc(#loc270)
          } loc(#loc268)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc51)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc273)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc53)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc53)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc56)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc275)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc57)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc276)
            } loc(#loc274)
          } loc(#loc272)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %13 = cir.call @access(%11, %12) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc64)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc278)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc67)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
            } loc(#loc279)
          } loc(#loc277)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc69)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc70)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc77)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc282)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc79)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc80)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
            } loc(#loc283)
          } loc(#loc281)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
            %15 = cir.const #cir.int<11> : !u64i loc(#loc285)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc86)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc88)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc88)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc286)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc90)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc91)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
            } loc(#loc287)
          } loc(#loc284)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc96)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc289)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc99)
            } loc(#loc290)
          } loc(#loc288)
        } loc(#loc265)
      } loc(#loc264)
    } loc(#loc262)
    cir.return loc(#loc22)
  } loc(#loc261)
  cir.func no_proto @CWE367_TOC_TOU__access_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc292)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc102)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc293)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc104)
    cir.return loc(#loc101)
  } loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc107)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc112)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc296)
      cir.if %2 {
        %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc106)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc106)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc117)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc299)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc300)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc299)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc299)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc123)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc124)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc300)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc128)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc129)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc130)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc302)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc133)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc133)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc134)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc135)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc137)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc304)
            } loc(#loc303)
          } loc(#loc301)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc140)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc140)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc142)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc142)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc306)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc144)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc144)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc145)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc145)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc147)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc147)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc308)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc148)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc309)
            } loc(#loc307)
          } loc(#loc305)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc150)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc151)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc310)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc156)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc157)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc158)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc312)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc160)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc161)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc160)
            } loc(#loc313)
          } loc(#loc311)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc107)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc107)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc315)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc167)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc168)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc169)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc169)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc316)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc171)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc172)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc171)
            } loc(#loc317)
          } loc(#loc314)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc175)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc177)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc319)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc179)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc180)
            } loc(#loc320)
          } loc(#loc318)
        } loc(#loc298)
      } loc(#loc297)
    } loc(#loc295)
    cir.return loc(#loc109)
  } loc(#loc294)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc185)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc186)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc323)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc326)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc327)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc326)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc326)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc193)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc194)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc327)
          cir.scope {
            %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc197)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc198)
            %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc199)
            %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc200)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc201)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc329)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc203)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc204)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc205)
              %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc205)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc206)
              %24 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc207)
              cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc331)
            } loc(#loc330)
          } loc(#loc328)
          cir.scope {
            %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc210)
            %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
            %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc210)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc212)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc212)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc333)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc214)
              %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc214)
              %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc215)
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
              %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc215)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc217)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc217)
              %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc335)
              %25 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc218)
              cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc336)
            } loc(#loc334)
          } loc(#loc332)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc220)
          %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc221)
          cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc337)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc226)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc227)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc228)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc339)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc230)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc231)
              cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc230)
            } loc(#loc340)
          } loc(#loc338)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc234)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc235)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc235)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
            %15 = cir.const #cir.int<12> : !u64i loc(#loc342)
            %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc238)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc239)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc240)
            %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc240)
            %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc343)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc242)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc243)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
            } loc(#loc344)
          } loc(#loc341)
          cir.scope {
            %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc247)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc248)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc346)
            cir.if %14 {
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc251)
            } loc(#loc347)
          } loc(#loc345)
        } loc(#loc325)
      } loc(#loc324)
    } loc(#loc322)
    cir.return loc(#loc182)
  } loc(#loc321)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_06.c":58:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_06.c":76:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_06.c":49:1)
#loc22 = loc("CWE367_TOC_TOU__access_06.c":86:1)
#loc23 = loc("CWE367_TOC_TOU__access_06.c":51:5)
#loc24 = loc("CWE367_TOC_TOU__access_06.c":85:5)
#loc25 = loc("CWE367_TOC_TOU__access_06.c":51:8)
#loc26 = loc("CWE367_TOC_TOU__access_06.c":51:27)
#loc27 = loc("CWE367_TOC_TOU__access_06.c":52:5)
#loc28 = loc("CWE367_TOC_TOU__access_06.c":53:9)
#loc29 = loc("CWE367_TOC_TOU__access_06.c":84:9)
#loc30 = loc("CWE367_TOC_TOU__access_06.c":54:13)
#loc31 = loc("CWE367_TOC_TOU__access_06.c":54:34)
#loc32 = loc("CWE367_TOC_TOU__access_06.c":55:13)
#loc33 = loc("CWE367_TOC_TOU__access_06.c":55:29)
#loc34 = loc("CWE367_TOC_TOU__access_06.c":55:28)
#loc35 = loc("CWE367_TOC_TOU__access_06.c":56:13)
#loc36 = loc("CWE367_TOC_TOU__access_06.c":61:13)
#loc37 = loc("CWE367_TOC_TOU__access_06.c":56:23)
#loc38 = loc("CWE367_TOC_TOU__access_06.c":56:33)
#loc39 = loc("CWE367_TOC_TOU__access_06.c":56:38)
#loc40 = loc("CWE367_TOC_TOU__access_06.c":56:17)
#loc41 = loc("CWE367_TOC_TOU__access_06.c":56:48)
#loc42 = loc("CWE367_TOC_TOU__access_06.c":57:13)
#loc43 = loc("CWE367_TOC_TOU__access_06.c":58:17)
#loc44 = loc("CWE367_TOC_TOU__access_06.c":60:31)
#loc45 = loc("CWE367_TOC_TOU__access_06.c":60:26)
#loc46 = loc("CWE367_TOC_TOU__access_06.c":60:17)
#loc47 = loc("CWE367_TOC_TOU__access_06.c":62:13)
#loc48 = loc("CWE367_TOC_TOU__access_06.c":65:13)
#loc49 = loc("CWE367_TOC_TOU__access_06.c":62:17)
#loc50 = loc("CWE367_TOC_TOU__access_06.c":62:24)
#loc51 = loc("CWE367_TOC_TOU__access_06.c":62:36)
#loc52 = loc("CWE367_TOC_TOU__access_06.c":63:13)
#loc53 = loc("CWE367_TOC_TOU__access_06.c":64:48)
#loc54 = loc("CWE367_TOC_TOU__access_06.c":64:26)
#loc55 = loc("CWE367_TOC_TOU__access_06.c":64:33)
#loc56 = loc("CWE367_TOC_TOU__access_06.c":64:43)
#loc57 = loc("CWE367_TOC_TOU__access_06.c":64:17)
#loc58 = loc("CWE367_TOC_TOU__access_06.c":67:13)
#loc59 = loc("CWE367_TOC_TOU__access_06.c":70:13)
#loc60 = loc("CWE367_TOC_TOU__access_06.c":67:24)
#loc61 = loc("CWE367_TOC_TOU__access_06.c":67:34)
#loc62 = loc("CWE367_TOC_TOU__access_06.c":67:17)
#loc63 = loc("CWE367_TOC_TOU__access_06.c":67:44)
#loc64 = loc("CWE367_TOC_TOU__access_06.c":67:43)
#loc65 = loc("CWE367_TOC_TOU__access_06.c":68:13)
#loc66 = loc("CWE367_TOC_TOU__access_06.c":69:17)
#loc67 = loc("CWE367_TOC_TOU__access_06.c":69:22)
#loc68 = loc("CWE367_TOC_TOU__access_06.c":71:30)
#loc69 = loc("CWE367_TOC_TOU__access_06.c":71:40)
#loc70 = loc("CWE367_TOC_TOU__access_06.c":71:25)
#loc71 = loc("CWE367_TOC_TOU__access_06.c":71:13)
#loc72 = loc("CWE367_TOC_TOU__access_06.c":71:46)
#loc73 = loc("CWE367_TOC_TOU__access_06.c":72:13)
#loc74 = loc("CWE367_TOC_TOU__access_06.c":75:13)
#loc75 = loc("CWE367_TOC_TOU__access_06.c":72:17)
#loc76 = loc("CWE367_TOC_TOU__access_06.c":72:30)
#loc77 = loc("CWE367_TOC_TOU__access_06.c":72:29)
#loc78 = loc("CWE367_TOC_TOU__access_06.c":73:13)
#loc79 = loc("CWE367_TOC_TOU__access_06.c":74:17)
#loc80 = loc("CWE367_TOC_TOU__access_06.c":74:22)
#loc81 = loc("CWE367_TOC_TOU__access_06.c":76:13)
#loc82 = loc("CWE367_TOC_TOU__access_06.c":79:13)
#loc83 = loc("CWE367_TOC_TOU__access_06.c":76:23)
#loc84 = loc("CWE367_TOC_TOU__access_06.c":76:50)
#loc85 = loc("CWE367_TOC_TOU__access_06.c":76:72)
#loc86 = loc("CWE367_TOC_TOU__access_06.c":76:17)
#loc87 = loc("CWE367_TOC_TOU__access_06.c":76:79)
#loc88 = loc("CWE367_TOC_TOU__access_06.c":76:78)
#loc89 = loc("CWE367_TOC_TOU__access_06.c":77:13)
#loc90 = loc("CWE367_TOC_TOU__access_06.c":78:17)
#loc91 = loc("CWE367_TOC_TOU__access_06.c":78:22)
#loc92 = loc("CWE367_TOC_TOU__access_06.c":80:13)
#loc93 = loc("CWE367_TOC_TOU__access_06.c":83:13)
#loc94 = loc("CWE367_TOC_TOU__access_06.c":80:17)
#loc95 = loc("CWE367_TOC_TOU__access_06.c":80:30)
#loc96 = loc("CWE367_TOC_TOU__access_06.c":80:29)
#loc97 = loc("CWE367_TOC_TOU__access_06.c":81:13)
#loc98 = loc("CWE367_TOC_TOU__access_06.c":82:23)
#loc99 = loc("CWE367_TOC_TOU__access_06.c":82:17)
#loc100 = loc("CWE367_TOC_TOU__access_06.c":169:1)
#loc101 = loc("CWE367_TOC_TOU__access_06.c":173:1)
#loc102 = loc("CWE367_TOC_TOU__access_06.c":171:5)
#loc103 = loc("CWE367_TOC_TOU__access_06.c":171:11)
#loc104 = loc("CWE367_TOC_TOU__access_06.c":172:5)
#loc105 = loc("CWE367_TOC_TOU__access_06.c":172:11)
#loc106 = loc("CWE367_TOC_TOU__access_06.c":98:19)
#loc107 = loc("CWE367_TOC_TOU__access_06.c":121:33)
#loc108 = loc("CWE367_TOC_TOU__access_06.c":93:1)
#loc109 = loc("CWE367_TOC_TOU__access_06.c":131:1)
#loc110 = loc("CWE367_TOC_TOU__access_06.c":95:5)
#loc111 = loc("CWE367_TOC_TOU__access_06.c":130:5)
#loc112 = loc("CWE367_TOC_TOU__access_06.c":95:8)
#loc113 = loc("CWE367_TOC_TOU__access_06.c":95:27)
#loc114 = loc("CWE367_TOC_TOU__access_06.c":96:5)
#loc115 = loc("CWE367_TOC_TOU__access_06.c":99:5)
#loc116 = loc("CWE367_TOC_TOU__access_06.c":101:5)
#loc117 = loc("CWE367_TOC_TOU__access_06.c":98:9)
#loc118 = loc("CWE367_TOC_TOU__access_06.c":102:9)
#loc119 = loc("CWE367_TOC_TOU__access_06.c":129:9)
#loc120 = loc("CWE367_TOC_TOU__access_06.c":103:13)
#loc121 = loc("CWE367_TOC_TOU__access_06.c":103:34)
#loc122 = loc("CWE367_TOC_TOU__access_06.c":104:13)
#loc123 = loc("CWE367_TOC_TOU__access_06.c":104:29)
#loc124 = loc("CWE367_TOC_TOU__access_06.c":104:28)
#loc125 = loc("CWE367_TOC_TOU__access_06.c":105:13)
#loc126 = loc("CWE367_TOC_TOU__access_06.c":110:13)
#loc127 = loc("CWE367_TOC_TOU__access_06.c":105:23)
#loc128 = loc("CWE367_TOC_TOU__access_06.c":105:33)
#loc129 = loc("CWE367_TOC_TOU__access_06.c":105:38)
#loc130 = loc("CWE367_TOC_TOU__access_06.c":105:17)
#loc131 = loc("CWE367_TOC_TOU__access_06.c":105:48)
#loc132 = loc("CWE367_TOC_TOU__access_06.c":106:13)
#loc133 = loc("CWE367_TOC_TOU__access_06.c":107:27)
#loc134 = loc("CWE367_TOC_TOU__access_06.c":107:17)
#loc135 = loc("CWE367_TOC_TOU__access_06.c":109:31)
#loc136 = loc("CWE367_TOC_TOU__access_06.c":109:26)
#loc137 = loc("CWE367_TOC_TOU__access_06.c":109:17)
#loc138 = loc("CWE367_TOC_TOU__access_06.c":111:13)
#loc139 = loc("CWE367_TOC_TOU__access_06.c":114:13)
#loc140 = loc("CWE367_TOC_TOU__access_06.c":111:17)
#loc141 = loc("CWE367_TOC_TOU__access_06.c":111:24)
#loc142 = loc("CWE367_TOC_TOU__access_06.c":111:36)
#loc143 = loc("CWE367_TOC_TOU__access_06.c":112:13)
#loc144 = loc("CWE367_TOC_TOU__access_06.c":113:48)
#loc145 = loc("CWE367_TOC_TOU__access_06.c":113:26)
#loc146 = loc("CWE367_TOC_TOU__access_06.c":113:33)
#loc147 = loc("CWE367_TOC_TOU__access_06.c":113:43)
#loc148 = loc("CWE367_TOC_TOU__access_06.c":113:17)
#loc149 = loc("CWE367_TOC_TOU__access_06.c":116:30)
#loc150 = loc("CWE367_TOC_TOU__access_06.c":116:40)
#loc151 = loc("CWE367_TOC_TOU__access_06.c":116:25)
#loc152 = loc("CWE367_TOC_TOU__access_06.c":116:13)
#loc153 = loc("CWE367_TOC_TOU__access_06.c":116:46)
#loc154 = loc("CWE367_TOC_TOU__access_06.c":117:13)
#loc155 = loc("CWE367_TOC_TOU__access_06.c":120:13)
#loc156 = loc("CWE367_TOC_TOU__access_06.c":117:17)
#loc157 = loc("CWE367_TOC_TOU__access_06.c":117:30)
#loc158 = loc("CWE367_TOC_TOU__access_06.c":117:29)
#loc159 = loc("CWE367_TOC_TOU__access_06.c":118:13)
#loc160 = loc("CWE367_TOC_TOU__access_06.c":119:17)
#loc161 = loc("CWE367_TOC_TOU__access_06.c":119:22)
#loc162 = loc("CWE367_TOC_TOU__access_06.c":121:13)
#loc163 = loc("CWE367_TOC_TOU__access_06.c":124:13)
#loc164 = loc("CWE367_TOC_TOU__access_06.c":121:23)
#loc165 = loc("CWE367_TOC_TOU__access_06.c":121:51)
#loc166 = loc("CWE367_TOC_TOU__access_06.c":121:74)
#loc167 = loc("CWE367_TOC_TOU__access_06.c":121:17)
#loc168 = loc("CWE367_TOC_TOU__access_06.c":121:81)
#loc169 = loc("CWE367_TOC_TOU__access_06.c":121:80)
#loc170 = loc("CWE367_TOC_TOU__access_06.c":122:13)
#loc171 = loc("CWE367_TOC_TOU__access_06.c":123:17)
#loc172 = loc("CWE367_TOC_TOU__access_06.c":123:22)
#loc173 = loc("CWE367_TOC_TOU__access_06.c":125:13)
#loc174 = loc("CWE367_TOC_TOU__access_06.c":128:13)
#loc175 = loc("CWE367_TOC_TOU__access_06.c":125:17)
#loc176 = loc("CWE367_TOC_TOU__access_06.c":125:30)
#loc177 = loc("CWE367_TOC_TOU__access_06.c":125:29)
#loc178 = loc("CWE367_TOC_TOU__access_06.c":126:13)
#loc179 = loc("CWE367_TOC_TOU__access_06.c":127:23)
#loc180 = loc("CWE367_TOC_TOU__access_06.c":127:17)
#loc181 = loc("CWE367_TOC_TOU__access_06.c":134:1)
#loc182 = loc("CWE367_TOC_TOU__access_06.c":167:1)
#loc183 = loc("CWE367_TOC_TOU__access_06.c":136:5)
#loc184 = loc("CWE367_TOC_TOU__access_06.c":166:5)
#loc185 = loc("CWE367_TOC_TOU__access_06.c":136:8)
#loc186 = loc("CWE367_TOC_TOU__access_06.c":136:27)
#loc187 = loc("CWE367_TOC_TOU__access_06.c":137:5)
#loc188 = loc("CWE367_TOC_TOU__access_06.c":138:9)
#loc189 = loc("CWE367_TOC_TOU__access_06.c":165:9)
#loc190 = loc("CWE367_TOC_TOU__access_06.c":139:13)
#loc191 = loc("CWE367_TOC_TOU__access_06.c":139:34)
#loc192 = loc("CWE367_TOC_TOU__access_06.c":140:13)
#loc193 = loc("CWE367_TOC_TOU__access_06.c":140:29)
#loc194 = loc("CWE367_TOC_TOU__access_06.c":140:28)
#loc195 = loc("CWE367_TOC_TOU__access_06.c":141:13)
#loc196 = loc("CWE367_TOC_TOU__access_06.c":146:13)
#loc197 = loc("CWE367_TOC_TOU__access_06.c":141:23)
#loc198 = loc("CWE367_TOC_TOU__access_06.c":141:33)
#loc199 = loc("CWE367_TOC_TOU__access_06.c":141:38)
#loc200 = loc("CWE367_TOC_TOU__access_06.c":141:17)
#loc201 = loc("CWE367_TOC_TOU__access_06.c":141:48)
#loc202 = loc("CWE367_TOC_TOU__access_06.c":142:13)
#loc203 = loc("CWE367_TOC_TOU__access_06.c":143:27)
#loc204 = loc("CWE367_TOC_TOU__access_06.c":143:17)
#loc205 = loc("CWE367_TOC_TOU__access_06.c":145:31)
#loc206 = loc("CWE367_TOC_TOU__access_06.c":145:26)
#loc207 = loc("CWE367_TOC_TOU__access_06.c":145:17)
#loc208 = loc("CWE367_TOC_TOU__access_06.c":147:13)
#loc209 = loc("CWE367_TOC_TOU__access_06.c":150:13)
#loc210 = loc("CWE367_TOC_TOU__access_06.c":147:17)
#loc211 = loc("CWE367_TOC_TOU__access_06.c":147:24)
#loc212 = loc("CWE367_TOC_TOU__access_06.c":147:36)
#loc213 = loc("CWE367_TOC_TOU__access_06.c":148:13)
#loc214 = loc("CWE367_TOC_TOU__access_06.c":149:48)
#loc215 = loc("CWE367_TOC_TOU__access_06.c":149:26)
#loc216 = loc("CWE367_TOC_TOU__access_06.c":149:33)
#loc217 = loc("CWE367_TOC_TOU__access_06.c":149:43)
#loc218 = loc("CWE367_TOC_TOU__access_06.c":149:17)
#loc219 = loc("CWE367_TOC_TOU__access_06.c":152:30)
#loc220 = loc("CWE367_TOC_TOU__access_06.c":152:40)
#loc221 = loc("CWE367_TOC_TOU__access_06.c":152:25)
#loc222 = loc("CWE367_TOC_TOU__access_06.c":152:13)
#loc223 = loc("CWE367_TOC_TOU__access_06.c":152:46)
#loc224 = loc("CWE367_TOC_TOU__access_06.c":153:13)
#loc225 = loc("CWE367_TOC_TOU__access_06.c":156:13)
#loc226 = loc("CWE367_TOC_TOU__access_06.c":153:17)
#loc227 = loc("CWE367_TOC_TOU__access_06.c":153:30)
#loc228 = loc("CWE367_TOC_TOU__access_06.c":153:29)
#loc229 = loc("CWE367_TOC_TOU__access_06.c":154:13)
#loc230 = loc("CWE367_TOC_TOU__access_06.c":155:17)
#loc231 = loc("CWE367_TOC_TOU__access_06.c":155:22)
#loc232 = loc("CWE367_TOC_TOU__access_06.c":157:13)
#loc233 = loc("CWE367_TOC_TOU__access_06.c":160:13)
#loc234 = loc("CWE367_TOC_TOU__access_06.c":157:23)
#loc235 = loc("CWE367_TOC_TOU__access_06.c":157:33)
#loc236 = loc("CWE367_TOC_TOU__access_06.c":157:51)
#loc237 = loc("CWE367_TOC_TOU__access_06.c":157:74)
#loc238 = loc("CWE367_TOC_TOU__access_06.c":157:17)
#loc239 = loc("CWE367_TOC_TOU__access_06.c":157:81)
#loc240 = loc("CWE367_TOC_TOU__access_06.c":157:80)
#loc241 = loc("CWE367_TOC_TOU__access_06.c":158:13)
#loc242 = loc("CWE367_TOC_TOU__access_06.c":159:17)
#loc243 = loc("CWE367_TOC_TOU__access_06.c":159:22)
#loc244 = loc("CWE367_TOC_TOU__access_06.c":161:13)
#loc245 = loc("CWE367_TOC_TOU__access_06.c":164:13)
#loc246 = loc("CWE367_TOC_TOU__access_06.c":161:17)
#loc247 = loc("CWE367_TOC_TOU__access_06.c":161:30)
#loc248 = loc("CWE367_TOC_TOU__access_06.c":161:29)
#loc249 = loc("CWE367_TOC_TOU__access_06.c":162:13)
#loc250 = loc("CWE367_TOC_TOU__access_06.c":163:23)
#loc251 = loc("CWE367_TOC_TOU__access_06.c":163:17)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc8, #loc9])
#loc256 = loc(fused[#loc10, #loc11])
#loc257 = loc(fused[#loc12, #loc13])
#loc258 = loc(fused[#loc14, #loc15])
#loc259 = loc(fused[#loc16, #loc17])
#loc260 = loc(fused[#loc19, #loc20])
#loc261 = loc(fused[#loc21, #loc22])
#loc262 = loc(fused[#loc23, #loc24])
#loc263 = loc(fused[#loc25, #loc26])
#loc264 = loc(fused[#loc27, #loc24])
#loc265 = loc(fused[#loc28, #loc29])
#loc266 = loc(fused[#loc30, #loc31])
#loc267 = loc(fused[#loc32, #loc33])
#loc268 = loc(fused[#loc35, #loc36])
#loc269 = loc(fused[#loc40, #loc41])
#loc270 = loc(fused[#loc42, #loc36])
#loc271 = loc(fused[#loc46, #loc44])
#loc272 = loc(fused[#loc47, #loc48])
#loc273 = loc(fused[#loc49, #loc51])
#loc274 = loc(fused[#loc52, #loc48])
#loc275 = loc(fused[#loc54, #loc56])
#loc276 = loc(fused[#loc57, #loc53])
#loc277 = loc(fused[#loc58, #loc59])
#loc278 = loc(fused[#loc62, #loc63])
#loc279 = loc(fused[#loc65, #loc59])
#loc280 = loc(fused[#loc71, #loc72])
#loc281 = loc(fused[#loc73, #loc74])
#loc282 = loc(fused[#loc75, #loc76])
#loc283 = loc(fused[#loc78, #loc74])
#loc284 = loc(fused[#loc81, #loc82])
#loc285 = loc(fused[#loc84, #loc85])
#loc286 = loc(fused[#loc86, #loc87])
#loc287 = loc(fused[#loc89, #loc82])
#loc288 = loc(fused[#loc92, #loc93])
#loc289 = loc(fused[#loc94, #loc95])
#loc290 = loc(fused[#loc97, #loc93])
#loc291 = loc(fused[#loc100, #loc101])
#loc292 = loc(fused[#loc102, #loc103])
#loc293 = loc(fused[#loc104, #loc105])
#loc294 = loc(fused[#loc108, #loc109])
#loc295 = loc(fused[#loc110, #loc111])
#loc296 = loc(fused[#loc112, #loc113])
#loc297 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc298 = loc(fused[#loc118, #loc119])
#loc299 = loc(fused[#loc120, #loc121])
#loc300 = loc(fused[#loc122, #loc123])
#loc301 = loc(fused[#loc125, #loc126])
#loc302 = loc(fused[#loc130, #loc131])
#loc303 = loc(fused[#loc132, #loc126])
#loc304 = loc(fused[#loc137, #loc135])
#loc305 = loc(fused[#loc138, #loc139])
#loc306 = loc(fused[#loc140, #loc142])
#loc307 = loc(fused[#loc143, #loc139])
#loc308 = loc(fused[#loc145, #loc147])
#loc309 = loc(fused[#loc148, #loc144])
#loc310 = loc(fused[#loc152, #loc153])
#loc311 = loc(fused[#loc154, #loc155])
#loc312 = loc(fused[#loc156, #loc157])
#loc313 = loc(fused[#loc159, #loc155])
#loc314 = loc(fused[#loc162, #loc163])
#loc315 = loc(fused[#loc165, #loc166])
#loc316 = loc(fused[#loc167, #loc168])
#loc317 = loc(fused[#loc170, #loc163])
#loc318 = loc(fused[#loc173, #loc174])
#loc319 = loc(fused[#loc175, #loc176])
#loc320 = loc(fused[#loc178, #loc174])
#loc321 = loc(fused[#loc181, #loc182])
#loc322 = loc(fused[#loc183, #loc184])
#loc323 = loc(fused[#loc185, #loc186])
#loc324 = loc(fused[#loc187, #loc184])
#loc325 = loc(fused[#loc188, #loc189])
#loc326 = loc(fused[#loc190, #loc191])
#loc327 = loc(fused[#loc192, #loc193])
#loc328 = loc(fused[#loc195, #loc196])
#loc329 = loc(fused[#loc200, #loc201])
#loc330 = loc(fused[#loc202, #loc196])
#loc331 = loc(fused[#loc207, #loc205])
#loc332 = loc(fused[#loc208, #loc209])
#loc333 = loc(fused[#loc210, #loc212])
#loc334 = loc(fused[#loc213, #loc209])
#loc335 = loc(fused[#loc215, #loc217])
#loc336 = loc(fused[#loc218, #loc214])
#loc337 = loc(fused[#loc222, #loc223])
#loc338 = loc(fused[#loc224, #loc225])
#loc339 = loc(fused[#loc226, #loc227])
#loc340 = loc(fused[#loc229, #loc225])
#loc341 = loc(fused[#loc232, #loc233])
#loc342 = loc(fused[#loc236, #loc237])
#loc343 = loc(fused[#loc238, #loc239])
#loc344 = loc(fused[#loc241, #loc233])
#loc345 = loc(fused[#loc244, #loc245])
#loc346 = loc(fused[#loc246, #loc247])
#loc347 = loc(fused[#loc249, #loc245])
