!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc141)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc147)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc20)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %5, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
    %7 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc149)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc150)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc154)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc36)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb3 loc(#loc30)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc158)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc45)
    cir.store %22, %2 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb9 loc(#loc159)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %23 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc48)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc161)
    cir.brcond %26 ^bb10, ^bb14 loc(#loc161)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc162)
  ^bb11:  // pred: ^bb10
    %27 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb12 loc(#loc44)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc59)
    cir.store %38, %2 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.br ^bb9 loc(#loc159)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc44)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc42)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc60)
    %41 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc61)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc62)
    %45 = cir.const #cir.int<8> : !u64i loc(#loc166)
    %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc167)
    cir.libc.memmove %46 bytes from %42 to %40 : !cir.ptr<!void>, !u64i loc(#loc168)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %48 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.call @printStructLine(%49) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc70)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc71)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb17 loc(#loc40)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc38)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc142)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc172)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc174)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc84)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.store %5, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc87)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc88)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc176)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc177)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
    cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc181)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc98)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc100)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
    cir.br ^bb3 loc(#loc94)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc76)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    cir.store %20, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc170)
    cir.br ^bb6 loc(#loc184)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc185)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc109)
    cir.store %22, %2 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb9 loc(#loc186)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %23 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc112)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc188)
    cir.brcond %26 ^bb10, ^bb14 loc(#loc188)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc189)
  ^bb11:  // pred: ^bb10
    %27 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb12 loc(#loc108)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc108)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc121)
    cir.store %38, %2 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb9 loc(#loc186)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc108)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc106)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc122)
    %41 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc123)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc124)
    %45 = cir.const #cir.int<8> : !u64i loc(#loc193)
    %46 = cir.binop(mul, %44, %45) : !u64i loc(#loc194)
    cir.libc.memmove %46 bytes from %42 to %40 : !cir.ptr<!void>, !u64i loc(#loc195)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!ty__twoIntsStruct>, %48 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    cir.call @printStructLine(%49) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc132)
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc133)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb17 loc(#loc104)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc102)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc74)
  } loc(#loc169)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33L7goodG2BEv() : () -> () loc(#loc137)
    cir.return loc(#loc136)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":51:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":33:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":33:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":35:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":35:37)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":37:17)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":37:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":26:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":26:21)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":27:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":27:32)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":28:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":28:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":30:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":30:36)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":30:39)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":30:59)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":30:60)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":30:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":31:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":32:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":50:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":34:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":49:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":36:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":44:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":43:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:26)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:22)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":40:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":41:40)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":41:28)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":41:21)
#loc53 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":42:40)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":42:28)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":42:21)
#loc57 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:39)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":39:38)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:27)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:35)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:39)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:59)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":46:60)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":47:30)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":47:35)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":47:36)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":47:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":48:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":48:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":58:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":85:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":67:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":67:32)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":69:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":69:37)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":71:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":71:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":60:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":60:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":61:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":61:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":62:12)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":62:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":64:29)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":64:36)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":64:40)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":64:60)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":64:61)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":64:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:33)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:23)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:30)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":65:29)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":66:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":84:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":68:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":83:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":70:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":78:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:17)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":77:17)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:26)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:22)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:29)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:33)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":74:17)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":75:40)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":75:28)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":75:21)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":76:40)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":76:28)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":76:21)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:39)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":73:38)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:21)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:27)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:35)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:39)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:59)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":80:60)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":81:30)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":81:35)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":81:36)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":81:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":82:18)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":82:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":87:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":90:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_33.cpp":89:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc17, #loc18])
#loc147 = loc(fused[#loc19, #loc20])
#loc148 = loc(fused[#loc22, #loc21])
#loc149 = loc(fused[#loc25, #loc26])
#loc150 = loc(fused[#loc24, #loc26])
#loc151 = loc(fused[#loc23, #loc27])
#loc152 = loc(fused[#loc28, #loc27])
#loc153 = loc(fused[#loc29, #loc30])
#loc154 = loc(fused[#loc31, #loc32])
#loc155 = loc(fused[#loc33, #loc30])
#loc156 = loc(fused[#loc37, #loc38])
#loc157 = loc(fused[#loc39, #loc40])
#loc158 = loc(fused[#loc41, #loc42])
#loc159 = loc(fused[#loc43, #loc44])
#loc160 = loc(fused[#loc46, #loc45])
#loc161 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc49, #loc44])
#loc163 = loc(fused[#loc52, #loc50])
#loc164 = loc(fused[#loc56, #loc54])
#loc165 = loc(fused[#loc59, #loc58])
#loc166 = loc(fused[#loc63, #loc64])
#loc167 = loc(fused[#loc62, #loc64])
#loc168 = loc(fused[#loc65, #loc66])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc78])
#loc172 = loc(fused[#loc79, #loc80])
#loc173 = loc(fused[#loc81, #loc82])
#loc174 = loc(fused[#loc83, #loc84])
#loc175 = loc(fused[#loc86, #loc85])
#loc176 = loc(fused[#loc89, #loc90])
#loc177 = loc(fused[#loc88, #loc90])
#loc178 = loc(fused[#loc87, #loc91])
#loc179 = loc(fused[#loc92, #loc91])
#loc180 = loc(fused[#loc93, #loc94])
#loc181 = loc(fused[#loc95, #loc96])
#loc182 = loc(fused[#loc97, #loc94])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc105, #loc106])
#loc186 = loc(fused[#loc107, #loc108])
#loc187 = loc(fused[#loc110, #loc109])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc113, #loc108])
#loc190 = loc(fused[#loc116, #loc114])
#loc191 = loc(fused[#loc119, #loc117])
#loc192 = loc(fused[#loc121, #loc120])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc124, #loc126])
#loc195 = loc(fused[#loc127, #loc128])
#loc196 = loc(fused[#loc135, #loc136])
