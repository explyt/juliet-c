!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE665_Improper_Initialization__char_ncat_21.c":26:25)
#loc6 = loc("CWE665_Improper_Initialization__char_ncat_21.c":26:32)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_21.c":144:10)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_21.c":144:14)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_21.c":144:20)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_21.c":144:32)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_21.c":64:30)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_21.c":64:37)
#loc159 = loc("CWE665_Improper_Initialization__char_ncat_21.c":99:30)
#loc160 = loc("CWE665_Improper_Initialization__char_ncat_21.c":99:37)
#loc214 = loc(fused[#loc5, #loc6])
#loc239 = loc(fused[#loc76, #loc77])
#loc240 = loc(fused[#loc78, #loc79])
#loc246 = loc(fused[#loc99, #loc100])
#loc265 = loc(fused[#loc159, #loc160])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc212)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc212)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc10)
      cir.if %6 {
      } loc(#loc216)
    } loc(#loc215)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc217)
  } loc(#loc213)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc218)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc219)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc220)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc223)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc212)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %6 = cir.call @badSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc31)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc228)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc229)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %11 = cir.const #cir.int<67> : !s32i loc(#loc41)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc42)
      %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc42)
      cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc230)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc46)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc47)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc49)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc231)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc50)
      cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc232)
      %26 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc54)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      %28 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
      %29 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
      %30 = cir.call @strncat(%27, %28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc54)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    } loc(#loc227)
    cir.return loc(#loc21)
  } loc(#loc221)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc233)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc236)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_ncat_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call @CWE665_Improper_Initialization__char_ncat_21_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_ncat_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE665_Improper_Initialization__char_ncat_21_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.return %17 : !s32i loc(#loc243)
  } loc(#loc238)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc96)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc99, #loc100])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc244)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc104)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc108)
      } else {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc109)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc109)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc111)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc112)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc249)
      } loc(#loc248)
    } loc(#loc247)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc250)
  } loc(#loc245)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc253)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc244)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %6 = cir.call @goodG2B1Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc126)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc258)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc259)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
      %11 = cir.const #cir.int<67> : !s32i loc(#loc136)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc137)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc138)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc137)
      %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc137)
      cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc260)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc141)
      %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc141)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc142)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc144)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc261)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc145)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc145)
      cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc262)
      %26 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc149)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %28 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
      %29 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc152)
      %30 = cir.call @strncat(%27, %28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc149)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    } loc(#loc257)
    cir.return loc(#loc116)
  } loc(#loc251)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc263)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc159, #loc160])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc158)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc263)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc164)
      cir.if %6 {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc166)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc166)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc168)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc169)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc268)
      } loc(#loc267)
    } loc(#loc266)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc269)
  } loc(#loc264)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc272)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc263)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
    %6 = cir.call @goodG2B2Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc183)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc277)
      %8 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc278)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
      %11 = cir.const #cir.int<67> : !s32i loc(#loc193)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc194)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc195)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc194)
      %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc194)
      cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc198)
      %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc198)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc199)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc200)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc199)
      %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc201)
      %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc201)
      cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc280)
      %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc202)
      %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc202)
      cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc281)
      %26 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc206)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      %28 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc208)
      %29 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc209)
      %30 = cir.call @strncat(%27, %28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc206)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    } loc(#loc276)
    cir.return loc(#loc173)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_21.c":0:0)
#loc1 = loc("CWE665_Improper_Initialization__char_ncat_21.c":24:1)
#loc2 = loc("CWE665_Improper_Initialization__char_ncat_21.c":24:24)
#loc3 = loc("CWE665_Improper_Initialization__char_ncat_21.c":26:1)
#loc4 = loc("CWE665_Improper_Initialization__char_ncat_21.c":34:1)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_21.c":27:1)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_21.c":28:5)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_21.c":32:5)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_21.c":28:8)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_21.c":29:5)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_21.c":33:12)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_21.c":33:5)
#loc14 = loc("/usr/include/string.h":407:1)
#loc15 = loc("/usr/include/string.h":408:33)
#loc16 = loc("/usr/include/string.h":152:1)
#loc17 = loc("/usr/include/string.h":153:29)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_21.c":36:1)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_21.c":53:1)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_21.c":38:5)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_21.c":38:12)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_21.c":39:5)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_21.c":39:24)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_21.c":40:12)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_21.c":40:5)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_21.c":41:17)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_21.c":41:5)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_21.c":42:22)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_21.c":42:12)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_21.c":42:5)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_21.c":42:26)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_21.c":43:5)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_21.c":52:5)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_21.c":44:9)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_21.c":44:16)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_21.c":45:9)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_21.c":45:24)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_21.c":46:16)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_21.c":46:24)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_21.c":46:29)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_21.c":46:33)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_21.c":46:9)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_21.c":46:34)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_21.c":47:25)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_21.c":47:16)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_21.c":47:20)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_21.c":47:9)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_21.c":48:21)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_21.c":48:28)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_21.c":48:9)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_21.c":48:34)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_21.c":50:9)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_21.c":50:17)
#loc56 = loc("CWE665_Improper_Initialization__char_ncat_21.c":50:23)
#loc57 = loc("CWE665_Improper_Initialization__char_ncat_21.c":50:31)
#loc58 = loc("CWE665_Improper_Initialization__char_ncat_21.c":51:19)
#loc59 = loc("CWE665_Improper_Initialization__char_ncat_21.c":51:9)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_21.c":128:1)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_21.c":132:1)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_21.c":130:5)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_21.c":130:14)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_21.c":131:5)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_21.c":131:14)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_21.c":149:15)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_21.c":151:15)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_21.c":154:15)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_21.c":156:15)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_21.c":144:1)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_21.c":159:1)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_21.c":145:1)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_21.c":147:27)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_21.c":147:22)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_21.c":147:5)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_21.c":149:5)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_21.c":150:5)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_21.c":150:55)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_21.c":151:5)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_21.c":154:5)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_21.c":155:5)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_21.c":155:54)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_21.c":156:5)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_21.c":158:12)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_21.c":158:5)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_21.c":60:1)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_21.c":60:29)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_21.c":69:19)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_21.c":64:1)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_21.c":77:1)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_21.c":65:1)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_21.c":66:5)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_21.c":75:5)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_21.c":66:8)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_21.c":67:5)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_21.c":70:5)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_21.c":72:5)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_21.c":69:9)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_21.c":74:19)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_21.c":74:9)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_21.c":74:14)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_21.c":74:15)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_21.c":76:12)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_21.c":76:5)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_21.c":79:1)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_21.c":96:1)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_21.c":81:5)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_21.c":81:12)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_21.c":82:5)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_21.c":82:24)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_21.c":83:12)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_21.c":83:5)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_21.c":84:22)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_21.c":84:5)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_21.c":85:27)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_21.c":85:12)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_21.c":85:5)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_21.c":85:31)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_21.c":86:5)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_21.c":95:5)
#loc131 = loc("CWE665_Improper_Initialization__char_ncat_21.c":87:9)
#loc132 = loc("CWE665_Improper_Initialization__char_ncat_21.c":87:16)
#loc133 = loc("CWE665_Improper_Initialization__char_ncat_21.c":88:9)
#loc134 = loc("CWE665_Improper_Initialization__char_ncat_21.c":88:24)
#loc135 = loc("CWE665_Improper_Initialization__char_ncat_21.c":89:16)
#loc136 = loc("CWE665_Improper_Initialization__char_ncat_21.c":89:24)
#loc137 = loc("CWE665_Improper_Initialization__char_ncat_21.c":89:29)
#loc138 = loc("CWE665_Improper_Initialization__char_ncat_21.c":89:33)
#loc139 = loc("CWE665_Improper_Initialization__char_ncat_21.c":89:9)
#loc140 = loc("CWE665_Improper_Initialization__char_ncat_21.c":89:34)
#loc141 = loc("CWE665_Improper_Initialization__char_ncat_21.c":90:25)
#loc142 = loc("CWE665_Improper_Initialization__char_ncat_21.c":90:16)
#loc143 = loc("CWE665_Improper_Initialization__char_ncat_21.c":90:20)
#loc144 = loc("CWE665_Improper_Initialization__char_ncat_21.c":90:9)
#loc145 = loc("CWE665_Improper_Initialization__char_ncat_21.c":91:21)
#loc146 = loc("CWE665_Improper_Initialization__char_ncat_21.c":91:28)
#loc147 = loc("CWE665_Improper_Initialization__char_ncat_21.c":91:9)
#loc148 = loc("CWE665_Improper_Initialization__char_ncat_21.c":91:34)
#loc149 = loc("CWE665_Improper_Initialization__char_ncat_21.c":93:9)
#loc150 = loc("CWE665_Improper_Initialization__char_ncat_21.c":93:17)
#loc151 = loc("CWE665_Improper_Initialization__char_ncat_21.c":93:23)
#loc152 = loc("CWE665_Improper_Initialization__char_ncat_21.c":93:31)
#loc153 = loc("CWE665_Improper_Initialization__char_ncat_21.c":94:19)
#loc154 = loc("CWE665_Improper_Initialization__char_ncat_21.c":94:9)
#loc155 = loc("CWE665_Improper_Initialization__char_ncat_21.c":61:1)
#loc156 = loc("CWE665_Improper_Initialization__char_ncat_21.c":61:29)
#loc157 = loc("CWE665_Improper_Initialization__char_ncat_21.c":99:1)
#loc158 = loc("CWE665_Improper_Initialization__char_ncat_21.c":107:1)
#loc161 = loc("CWE665_Improper_Initialization__char_ncat_21.c":100:1)
#loc162 = loc("CWE665_Improper_Initialization__char_ncat_21.c":101:5)
#loc163 = loc("CWE665_Improper_Initialization__char_ncat_21.c":105:5)
#loc164 = loc("CWE665_Improper_Initialization__char_ncat_21.c":101:8)
#loc165 = loc("CWE665_Improper_Initialization__char_ncat_21.c":102:5)
#loc166 = loc("CWE665_Improper_Initialization__char_ncat_21.c":104:19)
#loc167 = loc("CWE665_Improper_Initialization__char_ncat_21.c":104:9)
#loc168 = loc("CWE665_Improper_Initialization__char_ncat_21.c":104:14)
#loc169 = loc("CWE665_Improper_Initialization__char_ncat_21.c":104:15)
#loc170 = loc("CWE665_Improper_Initialization__char_ncat_21.c":106:12)
#loc171 = loc("CWE665_Improper_Initialization__char_ncat_21.c":106:5)
#loc172 = loc("CWE665_Improper_Initialization__char_ncat_21.c":109:1)
#loc173 = loc("CWE665_Improper_Initialization__char_ncat_21.c":126:1)
#loc174 = loc("CWE665_Improper_Initialization__char_ncat_21.c":111:5)
#loc175 = loc("CWE665_Improper_Initialization__char_ncat_21.c":111:12)
#loc176 = loc("CWE665_Improper_Initialization__char_ncat_21.c":112:5)
#loc177 = loc("CWE665_Improper_Initialization__char_ncat_21.c":112:24)
#loc178 = loc("CWE665_Improper_Initialization__char_ncat_21.c":113:12)
#loc179 = loc("CWE665_Improper_Initialization__char_ncat_21.c":113:5)
#loc180 = loc("CWE665_Improper_Initialization__char_ncat_21.c":114:22)
#loc181 = loc("CWE665_Improper_Initialization__char_ncat_21.c":114:5)
#loc182 = loc("CWE665_Improper_Initialization__char_ncat_21.c":115:27)
#loc183 = loc("CWE665_Improper_Initialization__char_ncat_21.c":115:12)
#loc184 = loc("CWE665_Improper_Initialization__char_ncat_21.c":115:5)
#loc185 = loc("CWE665_Improper_Initialization__char_ncat_21.c":115:31)
#loc186 = loc("CWE665_Improper_Initialization__char_ncat_21.c":116:5)
#loc187 = loc("CWE665_Improper_Initialization__char_ncat_21.c":125:5)
#loc188 = loc("CWE665_Improper_Initialization__char_ncat_21.c":117:9)
#loc189 = loc("CWE665_Improper_Initialization__char_ncat_21.c":117:16)
#loc190 = loc("CWE665_Improper_Initialization__char_ncat_21.c":118:9)
#loc191 = loc("CWE665_Improper_Initialization__char_ncat_21.c":118:24)
#loc192 = loc("CWE665_Improper_Initialization__char_ncat_21.c":119:16)
#loc193 = loc("CWE665_Improper_Initialization__char_ncat_21.c":119:24)
#loc194 = loc("CWE665_Improper_Initialization__char_ncat_21.c":119:29)
#loc195 = loc("CWE665_Improper_Initialization__char_ncat_21.c":119:33)
#loc196 = loc("CWE665_Improper_Initialization__char_ncat_21.c":119:9)
#loc197 = loc("CWE665_Improper_Initialization__char_ncat_21.c":119:34)
#loc198 = loc("CWE665_Improper_Initialization__char_ncat_21.c":120:25)
#loc199 = loc("CWE665_Improper_Initialization__char_ncat_21.c":120:16)
#loc200 = loc("CWE665_Improper_Initialization__char_ncat_21.c":120:20)
#loc201 = loc("CWE665_Improper_Initialization__char_ncat_21.c":120:9)
#loc202 = loc("CWE665_Improper_Initialization__char_ncat_21.c":121:21)
#loc203 = loc("CWE665_Improper_Initialization__char_ncat_21.c":121:28)
#loc204 = loc("CWE665_Improper_Initialization__char_ncat_21.c":121:9)
#loc205 = loc("CWE665_Improper_Initialization__char_ncat_21.c":121:34)
#loc206 = loc("CWE665_Improper_Initialization__char_ncat_21.c":123:9)
#loc207 = loc("CWE665_Improper_Initialization__char_ncat_21.c":123:17)
#loc208 = loc("CWE665_Improper_Initialization__char_ncat_21.c":123:23)
#loc209 = loc("CWE665_Improper_Initialization__char_ncat_21.c":123:31)
#loc210 = loc("CWE665_Improper_Initialization__char_ncat_21.c":124:19)
#loc211 = loc("CWE665_Improper_Initialization__char_ncat_21.c":124:9)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc8, #loc9])
#loc216 = loc(fused[#loc11, #loc9])
#loc217 = loc(fused[#loc13, #loc12])
#loc218 = loc(fused[#loc14, #loc15])
#loc219 = loc(fused[#loc16, #loc17])
#loc220 = loc(fused[#loc18, #loc19])
#loc221 = loc(fused[#loc20, #loc21])
#loc222 = loc(fused[#loc22, #loc23])
#loc223 = loc(fused[#loc24, #loc25])
#loc224 = loc(fused[#loc27, #loc26])
#loc225 = loc(fused[#loc29, #loc28])
#loc226 = loc(fused[#loc32, #loc33])
#loc227 = loc(fused[#loc34, #loc35])
#loc228 = loc(fused[#loc36, #loc37])
#loc229 = loc(fused[#loc38, #loc39])
#loc230 = loc(fused[#loc44, #loc45])
#loc231 = loc(fused[#loc49, #loc46])
#loc232 = loc(fused[#loc52, #loc53])
#loc233 = loc(fused[#loc60, #loc61])
#loc234 = loc(fused[#loc62, #loc63])
#loc235 = loc(fused[#loc64, #loc65])
#loc236 = loc(fused[#loc66, #loc67])
#loc237 = loc(fused[#loc68, #loc69])
#loc238 = loc(fused[#loc74, #loc75])
#loc241 = loc(fused[#loc85, #loc86])
#loc242 = loc(fused[#loc89, #loc90])
#loc243 = loc(fused[#loc93, #loc92])
#loc244 = loc(fused[#loc94, #loc95])
#loc245 = loc(fused[#loc97, #loc98])
#loc247 = loc(fused[#loc102, #loc103])
#loc248 = loc(fused[#loc105, #loc106, #loc107, #loc103])
#loc249 = loc(fused[#loc110, #loc109])
#loc250 = loc(fused[#loc114, #loc113])
#loc251 = loc(fused[#loc115, #loc116])
#loc252 = loc(fused[#loc117, #loc118])
#loc253 = loc(fused[#loc119, #loc120])
#loc254 = loc(fused[#loc122, #loc121])
#loc255 = loc(fused[#loc124, #loc123])
#loc256 = loc(fused[#loc127, #loc128])
#loc257 = loc(fused[#loc129, #loc130])
#loc258 = loc(fused[#loc131, #loc132])
#loc259 = loc(fused[#loc133, #loc134])
#loc260 = loc(fused[#loc139, #loc140])
#loc261 = loc(fused[#loc144, #loc141])
#loc262 = loc(fused[#loc147, #loc148])
#loc263 = loc(fused[#loc155, #loc156])
#loc264 = loc(fused[#loc157, #loc158])
#loc266 = loc(fused[#loc162, #loc163])
#loc267 = loc(fused[#loc165, #loc163])
#loc268 = loc(fused[#loc167, #loc166])
#loc269 = loc(fused[#loc171, #loc170])
#loc270 = loc(fused[#loc172, #loc173])
#loc271 = loc(fused[#loc174, #loc175])
#loc272 = loc(fused[#loc176, #loc177])
#loc273 = loc(fused[#loc179, #loc178])
#loc274 = loc(fused[#loc181, #loc180])
#loc275 = loc(fused[#loc184, #loc185])
#loc276 = loc(fused[#loc186, #loc187])
#loc277 = loc(fused[#loc188, #loc189])
#loc278 = loc(fused[#loc190, #loc191])
#loc279 = loc(fused[#loc196, #loc197])
#loc280 = loc(fused[#loc201, #loc198])
#loc281 = loc(fused[#loc204, #loc205])
