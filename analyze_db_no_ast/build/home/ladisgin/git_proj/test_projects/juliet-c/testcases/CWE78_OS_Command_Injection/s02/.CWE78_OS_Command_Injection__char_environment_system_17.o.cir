!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc108)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc111)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc113)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_system_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc117)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc117)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc117)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc121)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc31)
        cir.condition(%9) loc(#loc31)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc124)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc125)
            %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc39)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc124)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
            %13 = cir.call @getenv(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
            cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
            cir.scope {
              %14 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
              %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
              %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc127)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc46)
              cir.if %18 {
                %19 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc48)
                %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc51)
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc53)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc53)
                %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc54)
                %27 = cir.binop(sub, %25, %26) : !u64i loc(#loc129)
                %28 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc55)
                %30 = cir.binop(sub, %27, %29) : !u64i loc(#loc130)
                %31 = cir.call @strncat(%22, %23, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
              } loc(#loc128)
            } loc(#loc126)
          } loc(#loc123)
        } loc(#loc122)
        cir.yield loc(#loc26)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc57)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
        cir.yield loc(#loc119)
      } loc(#loc119)
    } loc(#loc119)
    cir.scope {
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %6 = cir.call @system(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc61)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !s32i loc(#loc133)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc63)
      cir.if %9 {
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc12)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc65)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc67)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
      } loc(#loc134)
    } loc(#loc132)
    cir.return loc(#loc16)
  } loc(#loc114)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_system_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc69)
  } loc(#loc135)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc74)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc141)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc141)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc87)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc145)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc91)
        cir.condition(%9) loc(#loc91)
      } body {
        cir.scope {
          %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc93)
          %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc74)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc74)
          %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
        } loc(#loc146)
        cir.yield loc(#loc86)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc96)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
        cir.yield loc(#loc143)
      } loc(#loc143)
    } loc(#loc143)
    cir.scope {
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      %6 = cir.call @system(%5) : (!cir.ptr<!s8i>) -> !s32i loc(#loc100)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc101)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !s32i loc(#loc149)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc102)
      cir.if %9 {
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc104)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc104)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc105)
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc107)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc76)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_17.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdlib.h":773:1)
#loc4 = loc("/usr/include/stdlib.h":773:50)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":55:41)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("/usr/include/stdlib.h":923:1)
#loc9 = loc("/usr/include/stdlib.h":923:41)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":67:19)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":44:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":70:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":46:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":46:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":47:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":47:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":48:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":48:26)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":49:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":49:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":63:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:13)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:16)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:20)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:18)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":51:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":52:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":62:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":54:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":54:41)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":55:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":55:53)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":54:30)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":54:37)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":55:34)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":57:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":61:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":57:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":57:32)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":57:29)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":58:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:30)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:29)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:39)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:52)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:56)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":60:64)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:24)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":50:23)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":65:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":69:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":65:16)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":65:9)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":65:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":65:22)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":66:5)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":67:9)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":68:9)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":68:14)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":96:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":99:1)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":98:5)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":98:13)
#loc72 = loc("/usr/include/string.h":149:1)
#loc73 = loc("/usr/include/string.h":150:14)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":86:22)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":77:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":94:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":79:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":79:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":80:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":80:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":81:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":81:26)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":82:12)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":82:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":87:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:13)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:20)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:18)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":84:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":86:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":86:16)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:24)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":83:23)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":89:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":93:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":89:16)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":89:9)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":89:25)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":89:22)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":90:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":91:19)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":91:9)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":92:9)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_system_17.c":92:14)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc6, #loc7])
#loc111 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc13, #loc14])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc19, #loc20])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc24, #loc23])
#loc119 = loc(fused[#loc25, #loc26])
#loc120 = loc(fused[#loc28, #loc27])
#loc121 = loc(fused[#loc29, #loc30])
#loc122 = loc(fused[#loc32, #loc26])
#loc123 = loc(fused[#loc33, #loc34])
#loc124 = loc(fused[#loc35, #loc36])
#loc125 = loc(fused[#loc37, #loc38])
#loc126 = loc(fused[#loc42, #loc43])
#loc127 = loc(fused[#loc44, #loc45])
#loc128 = loc(fused[#loc47, #loc43])
#loc129 = loc(fused[#loc53, #loc54])
#loc130 = loc(fused[#loc53, #loc55])
#loc131 = loc(fused[#loc57, #loc56])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc61, #loc62])
#loc134 = loc(fused[#loc64, #loc59])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc70, #loc71])
#loc137 = loc(fused[#loc72, #loc73])
#loc138 = loc(fused[#loc75, #loc76])
#loc139 = loc(fused[#loc77, #loc78])
#loc140 = loc(fused[#loc79, #loc80])
#loc141 = loc(fused[#loc81, #loc82])
#loc142 = loc(fused[#loc84, #loc83])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc88, #loc87])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc92, #loc86])
#loc147 = loc(fused[#loc96, #loc95])
#loc148 = loc(fused[#loc97, #loc98])
#loc149 = loc(fused[#loc100, #loc101])
#loc150 = loc(fused[#loc103, #loc98])
