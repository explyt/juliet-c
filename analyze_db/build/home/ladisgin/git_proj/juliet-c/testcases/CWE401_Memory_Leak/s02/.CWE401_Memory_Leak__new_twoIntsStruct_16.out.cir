!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc99 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":120:10)
#loc100 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":120:14)
#loc101 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":120:20)
#loc102 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":120:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc150 = loc(fused[#loc99, #loc100])
#loc151 = loc(fused[#loc101, #loc102])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc115)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc116)
  cir.func @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc14)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.call @_ZN14_twoIntsStructC2Ev(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr2) loc(#loc16)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc26)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc7)
  } loc(#loc117)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc126)
  cir.func internal private @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc42)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc131)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    cir.call @_ZN14_twoIntsStructC2Ev(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr2) loc(#loc44)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc52)
    cir.br ^bb4 loc(#loc53)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc41)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc135)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc135)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc56)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc57)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc45)
    cir.br ^bb9 loc(#loc58)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc35)
  } loc(#loc127)
  cir.func internal private @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc69)
  ^bb3:  // pred: ^bb2
    cir.store %0, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    cir.call @printStructLine(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc77)
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc144)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc144)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %13 ^bb8, ^bb9 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc60)
  } loc(#loc136)
  cir.func @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodB2GEv() : () -> () loc(#loc85)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodG2BEv() : () -> () loc(#loc86)
    cir.return loc(#loc84)
  } loc(#loc145)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc146)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc96)
  cir.func @main(%arg0: !s32i loc(fused[#loc99, #loc100]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc101, #loc102])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc98)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc103)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc104)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc105)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc105)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc106)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_164goodEv() : () -> () loc(#loc108)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc95)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_163badEv() : () -> () loc(#loc111)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc96)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %15 : !s32i loc(#loc152)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc6 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":28:1)
#loc7 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":48:1)
#loc8 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":30:5)
#loc9 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":30:21)
#loc10 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":31:12)
#loc11 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":31:5)
#loc12 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":32:5)
#loc13 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":41:5)
#loc14 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":32:11)
#loc15 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":35:16)
#loc16 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":35:20)
#loc17 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":28:6)
#loc18 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":35:9)
#loc19 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":37:24)
#loc20 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":37:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc22 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":38:24)
#loc23 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":38:9)
#loc24 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc25 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":39:25)
#loc26 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":39:9)
#loc27 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":40:9)
#loc28 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":42:5)
#loc29 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":47:5)
#loc30 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":42:11)
#loc31 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":46:9)
#loc32 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc33 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc34 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":55:1)
#loc35 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":75:1)
#loc36 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":57:5)
#loc37 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":57:21)
#loc38 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":58:12)
#loc39 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":58:5)
#loc40 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":59:5)
#loc41 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":68:5)
#loc42 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":59:11)
#loc43 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":62:16)
#loc44 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":62:20)
#loc45 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":55:13)
#loc46 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":62:9)
#loc47 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":64:24)
#loc48 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":64:9)
#loc49 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":65:24)
#loc50 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":65:9)
#loc51 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":66:25)
#loc52 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":66:9)
#loc53 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":67:9)
#loc54 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":69:5)
#loc55 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":74:5)
#loc56 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":69:11)
#loc57 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":72:16)
#loc58 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":73:9)
#loc59 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":78:1)
#loc60 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":99:1)
#loc61 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":85:9)
#loc62 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":85:23)
#loc63 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":80:5)
#loc64 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":80:21)
#loc65 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":81:12)
#loc66 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":81:5)
#loc67 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":82:5)
#loc68 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":92:5)
#loc69 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":82:11)
#loc70 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":86:9)
#loc71 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":86:17)
#loc72 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":88:24)
#loc73 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":88:9)
#loc74 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":89:24)
#loc75 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":89:9)
#loc76 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":90:25)
#loc77 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":90:9)
#loc78 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":91:9)
#loc79 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":93:5)
#loc80 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":98:5)
#loc81 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":93:11)
#loc82 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":97:9)
#loc83 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":101:1)
#loc84 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":105:1)
#loc85 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":103:5)
#loc86 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":104:5)
#loc87 = loc("/usr/include/stdlib.h":575:1)
#loc88 = loc("/usr/include/stdlib.h":575:41)
#loc89 = loc("/usr/include/time.h":76:1)
#loc90 = loc("/usr/include/time.h":76:38)
#loc91 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc92 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc93 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":125:15)
#loc94 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":127:15)
#loc95 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":130:15)
#loc96 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":132:15)
#loc97 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":120:1)
#loc98 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":135:1)
#loc103 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":121:1)
#loc104 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":123:27)
#loc105 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":123:22)
#loc106 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":123:5)
#loc107 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":125:5)
#loc108 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":126:5)
#loc109 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":127:5)
#loc110 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":130:5)
#loc111 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":131:5)
#loc112 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":132:5)
#loc113 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":134:12)
#loc114 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":134:5)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc4, #loc5])
#loc117 = loc(fused[#loc6, #loc7])
#loc118 = loc(fused[#loc8, #loc9])
#loc119 = loc(fused[#loc11, #loc10])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc18, #loc16])
#loc123 = loc(fused[#loc20, #loc19])
#loc124 = loc(fused[#loc23, #loc22])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc32, #loc33])
#loc127 = loc(fused[#loc34, #loc35])
#loc128 = loc(fused[#loc36, #loc37])
#loc129 = loc(fused[#loc39, #loc38])
#loc130 = loc(fused[#loc40, #loc41])
#loc131 = loc(fused[#loc43, #loc44])
#loc132 = loc(fused[#loc46, #loc44])
#loc133 = loc(fused[#loc48, #loc47])
#loc134 = loc(fused[#loc50, #loc49])
#loc135 = loc(fused[#loc54, #loc55])
#loc136 = loc(fused[#loc59, #loc60])
#loc137 = loc(fused[#loc61, #loc62])
#loc138 = loc(fused[#loc63, #loc64])
#loc139 = loc(fused[#loc66, #loc65])
#loc140 = loc(fused[#loc67, #loc68])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc73, #loc72])
#loc143 = loc(fused[#loc75, #loc74])
#loc144 = loc(fused[#loc79, #loc80])
#loc145 = loc(fused[#loc83, #loc84])
#loc146 = loc(fused[#loc87, #loc88])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc91, #loc92])
#loc149 = loc(fused[#loc97, #loc98])
#loc152 = loc(fused[#loc114, #loc113])
