!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":30:21)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":30:28)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":82:25)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":82:32)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":117:25)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":117:32)
#true = #cir.bool<true> : !cir.bool
#loc236 = loc(fused[#loc13, #loc14])
#loc268 = loc(fused[#loc100, #loc101])
#loc288 = loc(fused[#loc155, #loc156])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc231)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc232)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc234)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private  @badSink(%arg0: !u64i loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc236)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc15)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc238)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc22)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc240)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !s32i loc(#loc241)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
        cir.if %5 {
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc30)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc243)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc244)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc245)
          cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
          cir.scope {
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc248)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc39)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc43)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
            } loc(#loc249)
          } loc(#loc247)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc44)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc48)
          %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
        } else {
          %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        } loc(#loc242)
      } loc(#loc239)
    } loc(#loc237)
    cir.return loc(#loc12)
  } loc(#loc235)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc250)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc251)
  cir.func private  @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc252)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc65)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc256)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc66)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc257)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc259)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc259)
      cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc259)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc74)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc75)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc75)
        %12 = cir.const #cir.int<8> : !u64i loc(#loc75)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc75)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc75)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc75)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc75)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc75)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc77)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc78)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc261)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc79)
        cir.if %24 {
          %25 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc83)
          %26 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc84)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
          %28 = cir.const #cir.int<0> : !s32i loc(#loc86)
          %29 = cir.call @strtoul(%26, %27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc83)
          cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc263)
        } else {
          %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
          %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc89)
        } loc(#loc262)
      } loc(#loc260)
    } loc(#loc258)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc90)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc91)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc90)
    cir.return loc(#loc61)
  } loc(#loc254)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc266)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc93)
  } loc(#loc264)
  cir.func internal private  @goodG2BSink(%arg0: !u64i loc(fused[#loc100, #loc101])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc268)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc102)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc270)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc109)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc272)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !s32i loc(#loc273)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc112)
        cir.if %5 {
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc275)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc276)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc277)
          cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
          cir.scope {
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc280)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc126)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc130)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
            } loc(#loc281)
          } loc(#loc279)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc131)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc133)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc133)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc135)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc136)
          %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
        } else {
          %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc138)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc138)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc139)
        } loc(#loc274)
      } loc(#loc271)
    } loc(#loc269)
    cir.return loc(#loc99)
  } loc(#loc267)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc283)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc284)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc145)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc284)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc146)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc148)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc148)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc286)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc150)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc150)
    cir.return loc(#loc141)
  } loc(#loc282)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc152)
  cir.func internal private  @goodB2GSink(%arg0: !u64i loc(fused[#loc155, #loc156])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc288)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc290)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc164)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc292)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !s32i loc(#loc293)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc167)
        %6 = cir.ternary(%5, true {
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc169)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc170)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc170)
          %10 = cir.cmp(lt, %7, %9) : !u64i, !s32i loc(#loc294)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc171)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc168)
            cir.yield %13 : !cir.bool loc(#loc168)
          }, false {
            %13 = cir.const #false loc(#loc168)
            cir.yield %13 : !cir.bool loc(#loc168)
          }) : (!cir.bool) -> !cir.bool loc(#loc168)
          cir.yield %12 : !cir.bool loc(#loc168)
        }, false {
          %7 = cir.const #false loc(#loc168)
          cir.yield %7 : !cir.bool loc(#loc168)
        }) : (!cir.bool) -> !cir.bool loc(#loc168)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc175)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc176)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc296)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc297)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc175)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc298)
          cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
          cir.scope {
            %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc184)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !s32i loc(#loc301)
            %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc185)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc187)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc188)
              %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc189)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc187)
            } loc(#loc302)
          } loc(#loc300)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc190)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
          %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc192)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc192)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc190)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc194)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc195)
          %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc196)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc195)
        } else {
          %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc152)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc197)
        } loc(#loc295)
      } loc(#loc291)
    } loc(#loc289)
    cir.return loc(#loc154)
  } loc(#loc287)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc304)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc305)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc203)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc305)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc204)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc306)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc308)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc308)
      cir.store %8, %7 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc308)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc212)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc213)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc213)
        %12 = cir.const #cir.int<8> : !u64i loc(#loc213)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc213)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc213)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc213)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc213)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc213)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc214)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc215)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc216)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc310)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc217)
        cir.if %24 {
          %25 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc221)
          %26 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc222)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
          %28 = cir.const #cir.int<0> : !s32i loc(#loc224)
          %29 = cir.call @strtoul(%26, %27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc221)
          cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc312)
        } else {
          %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc227)
          %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc227)
          cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc228)
        } loc(#loc311)
      } loc(#loc309)
    } loc(#loc307)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc229)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc230)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc229)
    cir.return loc(#loc199)
  } loc(#loc303)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":42:30)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":48:23)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":30:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":51:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":31:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":32:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":50:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":33:9)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":33:16)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:9)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":49:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:13)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:20)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:39)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":37:18)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":38:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":45:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":47:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:32)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:39)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:44)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:55)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:56)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":39:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:45)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:17)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:29)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:26)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:35)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:36)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:42)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":40:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":42:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":42:20)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":43:23)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":43:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":44:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":44:18)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":48:13)
#loc51 = loc("/usr/include/stdio.h":654:1)
#loc52 = loc("/usr/include/stdio.h":655:59)
#loc53 = loc("/usr/include/stdio.h":149:1)
#loc54 = loc("/usr/include/stdio.h":149:14)
#loc55 = loc("/usr/include/stdlib.h":181:1)
#loc56 = loc("/usr/include/stdlib.h":183:14)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":70:23)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":53:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":75:1)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":55:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":55:12)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":57:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":57:32)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":59:12)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":59:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":60:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":72:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":61:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":61:45)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":71:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:19)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:32)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:49)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:59)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":63:56)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":64:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":67:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":69:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:20)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:28)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:41)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:47)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":66:48)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":70:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":74:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":74:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":162:1)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":166:1)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":164:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":164:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":165:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":165:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":82:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":103:1)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":83:1)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":84:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":102:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":85:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":85:16)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:9)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":101:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:20)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:39)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":89:18)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":90:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":97:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":99:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:32)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:39)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:44)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:55)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:56)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":91:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:45)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:29)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:26)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:35)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:36)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:42)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":92:41)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":94:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":94:20)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":94:30)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":95:23)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":95:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":96:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":96:18)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":100:23)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":100:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":105:1)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":114:1)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":107:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":107:12)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":108:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":108:32)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":110:12)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":110:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":112:12)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":112:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":113:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":113:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":135:23)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":117:1)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":138:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":118:1)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":119:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":137:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":120:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":120:16)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":136:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:20)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:39)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:18)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:41)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:44)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:51)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":124:49)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":125:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":132:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":134:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:32)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:39)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:44)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:55)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:56)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":126:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:45)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:17)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:29)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:26)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:35)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:36)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:42)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":127:41)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":129:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":129:20)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":129:30)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":130:23)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":130:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":131:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":131:18)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":135:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":140:1)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":160:1)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":142:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":142:12)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":143:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":143:32)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":145:12)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":145:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":146:5)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":158:5)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":147:9)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":147:45)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":157:9)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:19)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:32)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:49)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:59)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":149:56)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":150:9)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":153:9)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":155:9)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:20)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:28)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:41)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:47)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":152:48)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":156:23)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":156:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":159:5)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_44.c":159:13)
#loc231 = loc(fused[#loc1, #loc2])
#loc232 = loc(fused[#loc3, #loc4])
#loc233 = loc(fused[#loc5, #loc6])
#loc234 = loc(fused[#loc8, #loc9])
#loc235 = loc(fused[#loc11, #loc12])
#loc237 = loc(fused[#loc16, #loc17])
#loc238 = loc(fused[#loc18, #loc19])
#loc239 = loc(fused[#loc20, #loc21])
#loc240 = loc(fused[#loc23, #loc24])
#loc241 = loc(fused[#loc22, #loc24])
#loc242 = loc(fused[#loc26, #loc27, #loc28, #loc21])
#loc243 = loc(fused[#loc31, #loc32])
#loc244 = loc(fused[#loc30, #loc32])
#loc245 = loc(fused[#loc29, #loc33])
#loc246 = loc(fused[#loc34, #loc33])
#loc247 = loc(fused[#loc35, #loc36])
#loc248 = loc(fused[#loc37, #loc38])
#loc249 = loc(fused[#loc40, #loc36])
#loc250 = loc(fused[#loc51, #loc52])
#loc251 = loc(fused[#loc53, #loc54])
#loc252 = loc(fused[#loc55, #loc56])
#loc253 = loc(fused[#loc57, #loc58])
#loc254 = loc(fused[#loc60, #loc61])
#loc255 = loc(fused[#loc62, #loc63])
#loc256 = loc(fused[#loc64, #loc65])
#loc257 = loc(fused[#loc67, #loc66])
#loc258 = loc(fused[#loc68, #loc69])
#loc259 = loc(fused[#loc70, #loc71])
#loc260 = loc(fused[#loc72, #loc73])
#loc261 = loc(fused[#loc77, #loc78])
#loc262 = loc(fused[#loc80, #loc81, #loc82, #loc73])
#loc263 = loc(fused[#loc87, #loc88])
#loc264 = loc(fused[#loc92, #loc93])
#loc265 = loc(fused[#loc94, #loc95])
#loc266 = loc(fused[#loc96, #loc97])
#loc267 = loc(fused[#loc98, #loc99])
#loc269 = loc(fused[#loc103, #loc104])
#loc270 = loc(fused[#loc105, #loc106])
#loc271 = loc(fused[#loc107, #loc108])
#loc272 = loc(fused[#loc110, #loc111])
#loc273 = loc(fused[#loc109, #loc111])
#loc274 = loc(fused[#loc113, #loc114, #loc115, #loc108])
#loc275 = loc(fused[#loc118, #loc119])
#loc276 = loc(fused[#loc117, #loc119])
#loc277 = loc(fused[#loc116, #loc120])
#loc278 = loc(fused[#loc121, #loc120])
#loc279 = loc(fused[#loc122, #loc123])
#loc280 = loc(fused[#loc124, #loc125])
#loc281 = loc(fused[#loc127, #loc123])
#loc282 = loc(fused[#loc140, #loc141])
#loc283 = loc(fused[#loc142, #loc143])
#loc284 = loc(fused[#loc144, #loc145])
#loc285 = loc(fused[#loc147, #loc146])
#loc286 = loc(fused[#loc149, #loc148])
#loc287 = loc(fused[#loc153, #loc154])
#loc289 = loc(fused[#loc158, #loc159])
#loc290 = loc(fused[#loc160, #loc161])
#loc291 = loc(fused[#loc162, #loc163])
#loc292 = loc(fused[#loc165, #loc166])
#loc293 = loc(fused[#loc164, #loc166])
#loc294 = loc(fused[#loc169, #loc170])
#loc295 = loc(fused[#loc172, #loc173, #loc174, #loc163])
#loc296 = loc(fused[#loc177, #loc178])
#loc297 = loc(fused[#loc176, #loc178])
#loc298 = loc(fused[#loc175, #loc179])
#loc299 = loc(fused[#loc180, #loc179])
#loc300 = loc(fused[#loc181, #loc182])
#loc301 = loc(fused[#loc183, #loc184])
#loc302 = loc(fused[#loc186, #loc182])
#loc303 = loc(fused[#loc198, #loc199])
#loc304 = loc(fused[#loc200, #loc201])
#loc305 = loc(fused[#loc202, #loc203])
#loc306 = loc(fused[#loc205, #loc204])
#loc307 = loc(fused[#loc206, #loc207])
#loc308 = loc(fused[#loc208, #loc209])
#loc309 = loc(fused[#loc210, #loc211])
#loc310 = loc(fused[#loc215, #loc216])
#loc311 = loc(fused[#loc218, #loc219, #loc220, #loc211])
#loc312 = loc(fused[#loc225, #loc226])
