!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":122:10)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":122:14)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":122:20)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":122:32)
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc131)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc132)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc133)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc20)
    %11 = cir.const #cir.int<6> : !u64i loc(#loc134)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc135)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc23)
    %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc136)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc12)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc12)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc127)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc137)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc49)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_08_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_08_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %17 : !s32i loc(#loc148)
  } loc(#loc143)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc62)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %2 : !s32i loc(#loc150)
  } loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc155)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc156)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb10 loc(#loc77)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc157)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc152)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc84)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc86)
    %13 = cir.const #cir.int<6> : !u64i loc(#loc159)
    %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc160)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc89)
    %17 = cir.binop(sub, %14, %16) : !u64i loc(#loc161)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc90)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc90)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc91)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc91)
    %22 = cir.call @snprintf(%10, %17, %19, %21) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc84)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc162)
    cir.brcond %24 ^bb6, ^bb7 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %25 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc81)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc73)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc73)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc67)
  } loc(#loc151)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %2 : !s32i loc(#loc165)
  } loc(#loc164)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc170)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc107)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc171)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc167)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc167)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb4 loc(#loc173)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc114)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc116)
    %11 = cir.const #cir.int<6> : !u64i loc(#loc174)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc175)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc119)
    %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc176)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc120)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc120)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc121)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc121)
    %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc114)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc178)
  ^bb5:  // pred: ^bb4
    %23 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc124)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc113)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc111)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc106)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc100)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:46)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:54)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":45:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":58:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":52:13)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":52:36)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":53:13)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":53:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":47:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":57:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":47:8)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":47:26)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":48:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":49:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":56:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:22)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:27)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:31)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:41)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":55:43)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":107:1)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":111:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":109:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":109:11)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":110:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":110:11)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":127:15)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":129:15)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":132:15)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":134:15)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":122:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":137:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":123:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":125:27)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":125:22)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":125:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":127:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":128:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":128:58)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":129:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":132:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":133:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":133:57)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":134:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":136:12)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":136:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":33:1)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":36:1)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":35:12)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":35:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":70:19)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":82:27)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":65:1)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":86:1)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":77:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":77:36)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":78:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":78:27)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":67:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":85:5)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":67:8)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":67:27)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":68:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":71:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":73:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":70:9)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":74:9)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":84:9)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:13)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":83:13)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:17)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:26)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:31)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:35)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:45)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:47)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:50)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:58)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":80:65)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":81:13)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":82:17)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":38:1)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":41:1)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":40:12)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":40:5)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":89:1)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":105:1)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":96:13)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":96:36)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":97:13)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":97:27)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":91:5)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":104:5)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":91:8)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":91:26)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":92:5)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":93:9)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":103:9)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:13)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":102:13)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:17)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:26)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:31)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:35)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:45)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:47)
#loc120 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:50)
#loc121 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:58)
#loc122 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":99:65)
#loc123 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":100:13)
#loc124 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":101:27)
#loc125 = loc("CWE252_Unchecked_Return_Value__char_snprintf_08.c":101:17)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc12])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc20, #loc22])
#loc136 = loc(fused[#loc20, #loc23])
#loc137 = loc(fused[#loc24, #loc25])
#loc138 = loc(fused[#loc26, #loc27])
#loc139 = loc(fused[#loc28, #loc29])
#loc140 = loc(fused[#loc30, #loc31])
#loc141 = loc(fused[#loc32, #loc33])
#loc142 = loc(fused[#loc34, #loc35])
#loc143 = loc(fused[#loc40, #loc41])
#loc146 = loc(fused[#loc51, #loc52])
#loc147 = loc(fused[#loc55, #loc56])
#loc148 = loc(fused[#loc59, #loc58])
#loc149 = loc(fused[#loc60, #loc61])
#loc150 = loc(fused[#loc63, #loc62])
#loc151 = loc(fused[#loc66, #loc67])
#loc152 = loc(fused[#loc68, #loc69])
#loc153 = loc(fused[#loc70, #loc71])
#loc154 = loc(fused[#loc72, #loc73])
#loc155 = loc(fused[#loc74, #loc75])
#loc156 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc157 = loc(fused[#loc80, #loc81])
#loc158 = loc(fused[#loc82, #loc83])
#loc159 = loc(fused[#loc87, #loc88])
#loc160 = loc(fused[#loc86, #loc88])
#loc161 = loc(fused[#loc86, #loc89])
#loc162 = loc(fused[#loc84, #loc92])
#loc163 = loc(fused[#loc93, #loc83])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc98, #loc97])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc109, #loc106])
#loc172 = loc(fused[#loc110, #loc111])
#loc173 = loc(fused[#loc112, #loc113])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc116, #loc118])
#loc176 = loc(fused[#loc116, #loc119])
#loc177 = loc(fused[#loc114, #loc122])
#loc178 = loc(fused[#loc123, #loc113])
