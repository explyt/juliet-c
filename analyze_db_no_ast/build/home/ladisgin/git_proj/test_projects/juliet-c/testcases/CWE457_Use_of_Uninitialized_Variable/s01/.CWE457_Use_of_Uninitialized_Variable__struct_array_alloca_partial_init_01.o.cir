!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc193)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc198)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc15)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc200)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc17)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc18)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc19)
          %13 = cir.binop(div, %11, %12) : !s32i loc(#loc201)
          %14 = cir.cmp(lt, %10, %13) : !s32i, !s32i loc(#loc202)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc21)
          cir.condition(%15) loc(#loc21)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc23)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc204)
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc28)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc30)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc205)
          } loc(#loc203)
          cir.yield loc(#loc14)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc34)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc206)
          cir.yield loc(#loc199)
        } loc(#loc199)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc208)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc41)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc210)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc44)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc211)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc45)
          cir.condition(%13) loc(#loc45)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc50)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc51)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
            %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
            %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc56)
          } loc(#loc212)
          cir.yield loc(#loc40)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc58)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc213)
          cir.yield loc(#loc209)
        } loc(#loc209)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc4)
  } loc(#loc194)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc214)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc69)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc69)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc69)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc69)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc69)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc69)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc219)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc221)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc77)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc223)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc80)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc224)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc81)
          cir.condition(%13) loc(#loc81)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc226)
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc227)
          } loc(#loc225)
          cir.yield loc(#loc76)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc92)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc228)
          cir.yield loc(#loc222)
        } loc(#loc222)
      } loc(#loc222)
    } loc(#loc220)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc230)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc99)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc232)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc102)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc233)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc103)
          cir.condition(%13) loc(#loc103)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc109)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
            %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
            %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc114)
          } loc(#loc234)
          cir.yield loc(#loc98)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc116)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc235)
          cir.yield loc(#loc231)
        } loc(#loc231)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc66)
  } loc(#loc217)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc121)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc121)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc121)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc121)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc121)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc238)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc240)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc129)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc242)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc132)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc133)
          %13 = cir.binop(div, %11, %12) : !s32i loc(#loc243)
          %14 = cir.cmp(lt, %10, %13) : !s32i, !s32i loc(#loc244)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc135)
          cir.condition(%15) loc(#loc135)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc246)
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc247)
          } loc(#loc245)
          cir.yield loc(#loc128)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc146)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc248)
          cir.yield loc(#loc241)
        } loc(#loc241)
      } loc(#loc241)
    } loc(#loc239)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc250)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc153)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc252)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc156)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc253)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc157)
          cir.condition(%13) loc(#loc157)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc159)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc255)
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc256)
          } loc(#loc254)
          cir.yield loc(#loc152)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc168)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc257)
          cir.yield loc(#loc251)
        } loc(#loc251)
      } loc(#loc251)
    } loc(#loc249)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc259)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc175)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc261)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc177)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc178)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc262)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc179)
          cir.condition(%13) loc(#loc179)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc181)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc185)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
            %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
            %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc190)
          } loc(#loc263)
          cir.yield loc(#loc174)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc192)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc264)
          cir.yield loc(#loc260)
        } loc(#loc260)
      } loc(#loc260)
    } loc(#loc258)
    cir.return loc(#loc118)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":44:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":24:21)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":25:29)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":27:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":34:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":28:9)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":28:13)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":33:9)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:15)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:13)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:18)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:21)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:24)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:25)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:19)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":30:9)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":31:30)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":31:13)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":31:18)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":31:19)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":32:30)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":32:13)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":32:18)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":32:19)
#loc32 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:29)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":29:28)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":36:5)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":43:5)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":37:9)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":37:13)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:9)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":42:9)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:15)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:13)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:18)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:20)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:19)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":39:9)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":40:26)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":40:31)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":40:32)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":40:34)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":40:13)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":41:26)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":41:31)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":41:32)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":41:34)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":41:13)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:25)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":38:24)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":108:1)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":112:1)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":110:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":110:13)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":111:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":111:13)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":51:1)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":73:1)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":53:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":53:21)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":54:29)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":54:5)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":56:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":63:5)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":57:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":57:13)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:9)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":62:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:15)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:13)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:18)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:20)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:19)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":59:9)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":60:30)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":60:13)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":60:18)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":60:19)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":61:30)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":61:13)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":61:18)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":61:19)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:25)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":58:24)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":65:5)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":72:5)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":66:9)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":66:13)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":71:9)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:15)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:13)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:18)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:20)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:19)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":68:9)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":69:26)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":69:31)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":69:32)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":69:34)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":69:13)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":70:26)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":70:31)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":70:32)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":70:34)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":70:13)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:25)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":67:24)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":76:1)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":106:1)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":78:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":78:21)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":79:29)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":79:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":81:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":88:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":82:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":82:13)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:9)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":87:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:15)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:18)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:21)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:24)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:25)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:19)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":84:9)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":85:30)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":85:13)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":85:18)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":85:19)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":86:30)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":86:13)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":86:18)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":86:19)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:29)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":83:28)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":90:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":97:5)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":91:9)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":91:13)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:9)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":96:9)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:15)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:13)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:18)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:20)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:19)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":93:9)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":94:30)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":94:13)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":94:18)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":94:19)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":95:30)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":95:13)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":95:18)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":95:19)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:25)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":92:24)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":98:5)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":105:5)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":99:9)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":99:13)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:9)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":104:9)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:15)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:13)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:18)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:20)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:19)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":101:9)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":102:26)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":102:31)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":102:32)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":102:34)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":102:13)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":103:26)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":103:31)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":103:32)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":103:34)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":103:13)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:25)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_partial_init_01.c":100:24)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc8, #loc7])
#loc197 = loc(fused[#loc9, #loc10])
#loc198 = loc(fused[#loc11, #loc12])
#loc199 = loc(fused[#loc13, #loc14])
#loc200 = loc(fused[#loc16, #loc15])
#loc201 = loc(fused[#loc18, #loc19])
#loc202 = loc(fused[#loc17, #loc20])
#loc203 = loc(fused[#loc22, #loc14])
#loc204 = loc(fused[#loc24, #loc23])
#loc205 = loc(fused[#loc29, #loc28])
#loc206 = loc(fused[#loc34, #loc33])
#loc207 = loc(fused[#loc35, #loc36])
#loc208 = loc(fused[#loc37, #loc38])
#loc209 = loc(fused[#loc39, #loc40])
#loc210 = loc(fused[#loc42, #loc41])
#loc211 = loc(fused[#loc43, #loc44])
#loc212 = loc(fused[#loc46, #loc40])
#loc213 = loc(fused[#loc58, #loc57])
#loc214 = loc(fused[#loc59, #loc60])
#loc215 = loc(fused[#loc61, #loc62])
#loc216 = loc(fused[#loc63, #loc64])
#loc217 = loc(fused[#loc65, #loc66])
#loc218 = loc(fused[#loc67, #loc68])
#loc219 = loc(fused[#loc70, #loc69])
#loc220 = loc(fused[#loc71, #loc72])
#loc221 = loc(fused[#loc73, #loc74])
#loc222 = loc(fused[#loc75, #loc76])
#loc223 = loc(fused[#loc78, #loc77])
#loc224 = loc(fused[#loc79, #loc80])
#loc225 = loc(fused[#loc82, #loc76])
#loc226 = loc(fused[#loc84, #loc83])
#loc227 = loc(fused[#loc88, #loc87])
#loc228 = loc(fused[#loc92, #loc91])
#loc229 = loc(fused[#loc93, #loc94])
#loc230 = loc(fused[#loc95, #loc96])
#loc231 = loc(fused[#loc97, #loc98])
#loc232 = loc(fused[#loc100, #loc99])
#loc233 = loc(fused[#loc101, #loc102])
#loc234 = loc(fused[#loc104, #loc98])
#loc235 = loc(fused[#loc116, #loc115])
#loc236 = loc(fused[#loc117, #loc118])
#loc237 = loc(fused[#loc119, #loc120])
#loc238 = loc(fused[#loc122, #loc121])
#loc239 = loc(fused[#loc123, #loc124])
#loc240 = loc(fused[#loc125, #loc126])
#loc241 = loc(fused[#loc127, #loc128])
#loc242 = loc(fused[#loc130, #loc129])
#loc243 = loc(fused[#loc132, #loc133])
#loc244 = loc(fused[#loc131, #loc134])
#loc245 = loc(fused[#loc136, #loc128])
#loc246 = loc(fused[#loc138, #loc137])
#loc247 = loc(fused[#loc142, #loc141])
#loc248 = loc(fused[#loc146, #loc145])
#loc249 = loc(fused[#loc147, #loc148])
#loc250 = loc(fused[#loc149, #loc150])
#loc251 = loc(fused[#loc151, #loc152])
#loc252 = loc(fused[#loc154, #loc153])
#loc253 = loc(fused[#loc155, #loc156])
#loc254 = loc(fused[#loc158, #loc152])
#loc255 = loc(fused[#loc160, #loc159])
#loc256 = loc(fused[#loc164, #loc163])
#loc257 = loc(fused[#loc168, #loc167])
#loc258 = loc(fused[#loc169, #loc170])
#loc259 = loc(fused[#loc171, #loc172])
#loc260 = loc(fused[#loc173, #loc174])
#loc261 = loc(fused[#loc176, #loc175])
#loc262 = loc(fused[#loc177, #loc178])
#loc263 = loc(fused[#loc180, #loc174])
#loc264 = loc(fused[#loc192, #loc191])
