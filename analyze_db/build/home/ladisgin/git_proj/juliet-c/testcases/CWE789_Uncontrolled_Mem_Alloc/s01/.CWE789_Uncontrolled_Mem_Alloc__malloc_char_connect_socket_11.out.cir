!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":417:10)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":417:14)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":417:20)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":417:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc677 = loc(fused[#loc188, #loc189])
#loc678 = loc(fused[#loc190, #loc191])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc602)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc603)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc604)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc605)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc606)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc607)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc608)
  cir.func private @close(!s32i) -> !s32i loc(#loc609)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc610)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc611)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc612)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc24)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc613)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc614)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc29)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc616)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc34)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc617)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc619)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc619)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc38)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc622)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc623)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc624)
          %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc625)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc48)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc624)
          cir.scope {
            cir.do {
              %13 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %15 = cir.const #cir.int<6> : !s32i loc(#loc55)
              %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc627)
              cir.scope {
                %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc62)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc629)
                cir.if %61 {
                  cir.break loc(#loc64)
                } loc(#loc630)
              } loc(#loc628)
              %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc631)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %19 = cir.const #cir.int<16> : !u64i loc(#loc632)
              cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc633)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc72)
              %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc634)
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
              %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc635)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc80)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc80)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
              %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc636)
              cir.scope {
                %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %59 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc638)
                %60 = cir.const #cir.int<16> : !u64i loc(#loc639)
                %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc639)
                %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc93)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc640)
                cir.if %65 {
                  cir.break loc(#loc95)
                } loc(#loc641)
              } loc(#loc637)
              %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc97)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
              %35 = cir.const #cir.int<3> : !s32i loc(#loc98)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc98)
              %37 = cir.const #cir.int<8> : !u64i loc(#loc98)
              %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc98)
              %39 = cir.const #cir.int<2> : !s32i loc(#loc98)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc98)
              %41 = cir.binop(add, %38, %40) : !u64i loc(#loc98)
              %42 = cir.const #cir.int<1> : !s32i loc(#loc99)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc99)
              %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc642)
              %45 = cir.const #cir.int<0> : !s32i loc(#loc100)
              %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
              %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc101)
              cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc643)
              cir.scope {
                %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc107)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc645)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc108)
                  cir.yield %63 : !cir.bool loc(#loc108)
                }, false {
                  %63 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %64 = cir.const #cir.int<0> : !s32i loc(#loc110)
                  %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc646)
                  %66 = cir.ternary(%65, true {
                    %67 = cir.const #true loc(#loc108)
                    cir.yield %67 : !cir.bool loc(#loc108)
                  }, false {
                    %67 = cir.const #false loc(#loc108)
                    cir.yield %67 : !cir.bool loc(#loc108)
                  }) : (!cir.bool) -> !cir.bool loc(#loc108)
                  cir.yield %66 : !cir.bool loc(#loc108)
                }) : (!cir.bool) -> !cir.bool loc(#loc108)
                cir.if %62 {
                  cir.break loc(#loc112)
                } loc(#loc647)
              } loc(#loc644)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc113)
              %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc113)
              %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
              %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc115)
              cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc648)
              %53 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc116)
              %54 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc117)
              %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %57 = cir.call @strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc116)
              cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc649)
              cir.yield loc(#loc52)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc122)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc122)
              cir.condition(%14) loc(#loc122)
            } loc(#loc626)
          } loc(#loc626)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc126)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc651)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc129)
            } loc(#loc652)
          } loc(#loc650)
        } loc(#loc621)
      } loc(#loc620)
    } loc(#loc618)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc654)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc654)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc132)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc657)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc659)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc660)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc147)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc148)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc662)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc663)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc664)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc665)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc156)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc667)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc159)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc160)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
                } loc(#loc668)
              } loc(#loc666)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc161)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc24)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc24)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc164)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc165)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc165)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc29)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc29)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc167)
            } loc(#loc661)
          } loc(#loc658)
        } loc(#loc656)
      } loc(#loc655)
    } loc(#loc653)
    cir.return loc(#loc31)
  } loc(#loc615)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc670)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc170)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc671)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc172)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc672)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc174)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc673)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc176)
    cir.return loc(#loc169)
  } loc(#loc669)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc674)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc675)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc185)
  cir.func @main(%arg0: !s32i loc(fused[#loc188, #loc189]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc190, #loc191])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc677)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc678)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc187)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc192)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc193)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc194)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc194)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc195)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc182)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc679)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11_good() : () -> () loc(#loc197)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc183)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc184)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc680)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11_bad() : () -> () loc(#loc201)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc185)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc204)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc681)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc681)
    cir.return %17 : !s32i loc(#loc681)
  } loc(#loc676)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc682)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc209)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc684)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc214)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc685)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc687)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc687)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc218)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc218)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc690)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc691)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc692)
          %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc693)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc228)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc228)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc692)
          cir.scope {
            cir.do {
              %13 = cir.const #cir.int<2> : !s32i loc(#loc233)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc234)
              %15 = cir.const #cir.int<6> : !s32i loc(#loc235)
              %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc236)
              cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc695)
              cir.scope {
                %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc242)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc242)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc697)
                cir.if %61 {
                  cir.break loc(#loc244)
                } loc(#loc698)
              } loc(#loc696)
              %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc699)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc247)
              %19 = cir.const #cir.int<16> : !u64i loc(#loc700)
              cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc701)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc252)
              %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc252)
              %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc702)
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc254)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc254)
              %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc255)
              %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc703)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc258)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc258)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc259)
              %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc704)
              cir.scope {
                %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                %59 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc706)
                %60 = cir.const #cir.int<16> : !u64i loc(#loc707)
                %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc707)
                %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc269)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc270)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc270)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc708)
                cir.if %65 {
                  cir.break loc(#loc272)
                } loc(#loc709)
              } loc(#loc705)
              %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc273)
              %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc274)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc274)
              %35 = cir.const #cir.int<3> : !s32i loc(#loc275)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc275)
              %37 = cir.const #cir.int<8> : !u64i loc(#loc275)
              %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc275)
              %39 = cir.const #cir.int<2> : !s32i loc(#loc275)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc275)
              %41 = cir.binop(add, %38, %40) : !u64i loc(#loc275)
              %42 = cir.const #cir.int<1> : !s32i loc(#loc276)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc276)
              %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc710)
              %45 = cir.const #cir.int<0> : !s32i loc(#loc277)
              %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc278)
              %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc278)
              cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc711)
              cir.scope {
                %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc284)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc284)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc713)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc285)
                  cir.yield %63 : !cir.bool loc(#loc285)
                }, false {
                  %63 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                  %64 = cir.const #cir.int<0> : !s32i loc(#loc287)
                  %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc714)
                  %66 = cir.ternary(%65, true {
                    %67 = cir.const #true loc(#loc285)
                    cir.yield %67 : !cir.bool loc(#loc285)
                  }, false {
                    %67 = cir.const #false loc(#loc285)
                    cir.yield %67 : !cir.bool loc(#loc285)
                  }) : (!cir.bool) -> !cir.bool loc(#loc285)
                  cir.yield %66 : !cir.bool loc(#loc285)
                }) : (!cir.bool) -> !cir.bool loc(#loc285)
                cir.if %62 {
                  cir.break loc(#loc289)
                } loc(#loc715)
              } loc(#loc712)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc290)
              %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc290)
              %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc291)
              %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc292)
              %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc292)
              cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc716)
              %53 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc293)
              %54 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc294)
              %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc296)
              %57 = cir.call @strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc293)
              cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc717)
              cir.yield loc(#loc232)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc299)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc299)
              cir.condition(%14) loc(#loc299)
            } loc(#loc694)
          } loc(#loc694)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc302)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc303)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc303)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc719)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc305)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc306)
            } loc(#loc720)
          } loc(#loc718)
        } loc(#loc689)
      } loc(#loc688)
    } loc(#loc686)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc722)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc722)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc309)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc309)
      cir.if %6 {
        %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc208)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc208)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc314)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc725)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc321)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc727)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc728)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc325)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc326)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc326)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc729)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc324)
                cir.yield %17 : !cir.bool loc(#loc324)
              }, false {
                %17 = cir.const #false loc(#loc324)
                cir.yield %17 : !cir.bool loc(#loc324)
              }) : (!cir.bool) -> !cir.bool loc(#loc324)
              cir.yield %16 : !cir.bool loc(#loc324)
            }, false {
              %12 = cir.const #false loc(#loc324)
              cir.yield %12 : !cir.bool loc(#loc324)
            }) : (!cir.bool) -> !cir.bool loc(#loc324)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc330)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc331)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc731)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc732)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc330)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc733)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc734)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc338)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc339)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc339)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc736)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc341)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc342)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc343)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc341)
                } loc(#loc737)
              } loc(#loc735)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc344)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc346)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc346)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc344)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc347)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc348)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc349)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc350)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc350)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc349)
            } else {
              %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc209)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc209)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc351)
            } loc(#loc730)
          } loc(#loc726)
        } loc(#loc724)
      } loc(#loc723)
    } loc(#loc721)
    cir.return loc(#loc211)
  } loc(#loc683)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc739)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc356)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc356)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc740)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc742)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc742)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc360)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc360)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc745)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc746)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc747)
          %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc748)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc370)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc370)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc747)
          cir.scope {
            cir.do {
              %13 = cir.const #cir.int<2> : !s32i loc(#loc375)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc376)
              %15 = cir.const #cir.int<6> : !s32i loc(#loc377)
              %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc378)
              cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc750)
              cir.scope {
                %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc384)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc384)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc752)
                cir.if %61 {
                  cir.break loc(#loc386)
                } loc(#loc753)
              } loc(#loc751)
              %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc754)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc389)
              %19 = cir.const #cir.int<16> : !u64i loc(#loc755)
              cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc756)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc394)
              %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc394)
              %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc757)
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc396)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc396)
              %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc397)
              %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc758)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc400)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc400)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc401)
              %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc759)
              cir.scope {
                %58 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc406)
                %59 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc761)
                %60 = cir.const #cir.int<16> : !u64i loc(#loc762)
                %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc762)
                %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc411)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc412)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc412)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc763)
                cir.if %65 {
                  cir.break loc(#loc414)
                } loc(#loc764)
              } loc(#loc760)
              %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc415)
              %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc416)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc416)
              %35 = cir.const #cir.int<3> : !s32i loc(#loc417)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc417)
              %37 = cir.const #cir.int<8> : !u64i loc(#loc417)
              %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc417)
              %39 = cir.const #cir.int<2> : !s32i loc(#loc417)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc417)
              %41 = cir.binop(add, %38, %40) : !u64i loc(#loc417)
              %42 = cir.const #cir.int<1> : !s32i loc(#loc418)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc418)
              %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc765)
              %45 = cir.const #cir.int<0> : !s32i loc(#loc419)
              %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc420)
              %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc420)
              cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc766)
              cir.scope {
                %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc425)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc426)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc426)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc768)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc427)
                  cir.yield %63 : !cir.bool loc(#loc427)
                }, false {
                  %63 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc428)
                  %64 = cir.const #cir.int<0> : !s32i loc(#loc429)
                  %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc769)
                  %66 = cir.ternary(%65, true {
                    %67 = cir.const #true loc(#loc427)
                    cir.yield %67 : !cir.bool loc(#loc427)
                  }, false {
                    %67 = cir.const #false loc(#loc427)
                    cir.yield %67 : !cir.bool loc(#loc427)
                  }) : (!cir.bool) -> !cir.bool loc(#loc427)
                  cir.yield %66 : !cir.bool loc(#loc427)
                }) : (!cir.bool) -> !cir.bool loc(#loc427)
                cir.if %62 {
                  cir.break loc(#loc431)
                } loc(#loc770)
              } loc(#loc767)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc432)
              %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc432)
              %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc433)
              %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc434)
              %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc434)
              cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc771)
              %53 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc435)
              %54 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc436)
              %55 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc437)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc438)
              %57 = cir.call @strtoul(%54, %55, %56) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc435)
              cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc772)
              cir.yield loc(#loc374)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc441)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc441)
              cir.condition(%14) loc(#loc441)
            } loc(#loc749)
          } loc(#loc749)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc444)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc445)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc445)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc774)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc447)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc448)
            } loc(#loc775)
          } loc(#loc773)
        } loc(#loc744)
      } loc(#loc743)
    } loc(#loc741)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc777)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc777)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc451)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc451)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc780)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc460)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc782)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc783)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc464)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc465)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc465)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc784)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc463)
                cir.yield %17 : !cir.bool loc(#loc463)
              }, false {
                %17 = cir.const #false loc(#loc463)
                cir.yield %17 : !cir.bool loc(#loc463)
              }) : (!cir.bool) -> !cir.bool loc(#loc463)
              cir.yield %16 : !cir.bool loc(#loc463)
            }, false {
              %12 = cir.const #false loc(#loc463)
              cir.yield %12 : !cir.bool loc(#loc463)
            }) : (!cir.bool) -> !cir.bool loc(#loc463)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc469)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc470)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc786)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc787)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc469)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc788)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc789)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc477)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc478)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc478)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc791)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc480)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc481)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc482)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc480)
                } loc(#loc792)
              } loc(#loc790)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc483)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc484)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc485)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc485)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc483)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc486)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc487)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc488)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc489)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc489)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc488)
            } else {
              %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc490)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc490)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc491)
            } loc(#loc785)
          } loc(#loc781)
        } loc(#loc779)
      } loc(#loc778)
    } loc(#loc776)
    cir.return loc(#loc353)
  } loc(#loc738)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc794)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc496)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc496)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc795)
    cir.scope {
      %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc797)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc797)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc500)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc500)
      cir.if %6 {
        %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc505)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc505)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc506)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc507)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc507)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc799)
      } loc(#loc798)
    } loc(#loc796)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc801)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc801)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc511)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc511)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc804)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc520)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc806)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc807)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc526)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc527)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc809)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc810)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc526)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc811)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc812)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc534)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc535)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc535)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc814)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc537)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc538)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc539)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc537)
                } loc(#loc815)
              } loc(#loc813)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc540)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc541)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc542)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc542)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc540)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc543)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc544)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc545)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc546)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc546)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc545)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc547)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc547)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc548)
            } loc(#loc808)
          } loc(#loc805)
        } loc(#loc803)
      } loc(#loc802)
    } loc(#loc800)
    cir.return loc(#loc493)
  } loc(#loc793)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc817)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc553)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc553)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc818)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc820)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc820)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc557)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc557)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc560)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc560)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc822)
      } loc(#loc821)
    } loc(#loc819)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc824)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc824)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc564)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc564)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc827)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc573)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc829)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc830)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc579)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc580)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc832)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc833)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc579)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc834)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc835)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc587)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc588)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc588)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc837)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc590)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc591)
                  %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc592)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc590)
                } loc(#loc838)
              } loc(#loc836)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc593)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc594)
              %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc595)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc595)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc593)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc596)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc597)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc598)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc599)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc599)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc598)
            } else {
              %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc600)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc600)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc601)
            } loc(#loc831)
          } loc(#loc828)
        } loc(#loc826)
      } loc(#loc825)
    } loc(#loc823)
    cir.return loc(#loc550)
  } loc(#loc816)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":181:1)
#loc15 = loc("/usr/include/stdlib.h":183:14)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("/usr/include/string.h":141:1)
#loc23 = loc("/usr/include/string.h":142:14)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":126:34)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("/usr/include/stdlib.h":687:1)
#loc28 = loc("/usr/include/stdlib.h":687:32)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":132:27)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":50:1)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":136:1)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":52:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":52:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":54:12)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":54:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":55:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":113:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":55:8)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":55:26)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":56:5)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":57:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":112:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":62:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":62:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":63:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":63:32)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":64:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":64:36)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":65:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":65:45)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":66:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":101:21)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":76:40)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":76:49)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":76:62)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":76:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":76:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":76:73)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":77:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":80:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":77:21)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":77:38)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":78:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":79:21)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:24)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:25)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:34)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:37)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:51)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:17)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":81:52)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":82:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":82:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":83:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":83:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":83:63)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":84:42)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":84:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":84:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":84:50)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":88:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:29)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:62)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:63)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:72)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:86)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:21)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":85:92)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":86:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":87:21)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:35)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:50)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:63)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:81)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:84)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:30)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":91:85)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":92:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":95:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":92:21)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":92:35)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":92:48)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":92:51)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":92:65)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":93:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":94:21)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":97:43)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":97:29)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":97:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":99:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":99:32)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":99:45)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":99:51)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":99:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":99:52)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":101:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":102:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":105:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":102:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":102:34)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":103:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":104:30)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":104:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":114:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":135:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":114:8)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":114:26)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":115:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":116:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":134:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":117:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":117:20)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":121:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":133:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":121:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":121:24)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":121:43)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":122:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":129:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":131:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":123:36)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":123:43)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":123:48)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":123:59)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":123:60)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":123:17)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:49)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:21)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:33)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:39)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:40)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:46)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":124:45)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":126:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":126:24)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":127:27)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":127:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":128:17)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":128:22)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":132:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":400:1)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":406:1)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":402:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":402:14)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":403:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":403:14)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":404:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":404:14)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":405:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":405:14)
#loc178 = loc("/usr/include/stdlib.h":575:1)
#loc179 = loc("/usr/include/stdlib.h":575:41)
#loc180 = loc("/usr/include/time.h":76:1)
#loc181 = loc("/usr/include/time.h":76:38)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":422:15)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":424:15)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":427:15)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":429:15)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":417:1)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":432:1)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":418:1)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":420:27)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":420:22)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":420:5)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":422:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":423:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":423:71)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":424:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":427:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":428:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":428:70)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":429:5)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":431:12)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":431:5)
#loc206 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":210:19)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":230:27)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":143:1)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":234:1)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":145:5)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":145:12)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":147:12)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":147:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":148:5)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":206:5)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":148:8)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":148:26)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":149:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":150:9)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":205:9)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":155:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":155:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":156:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":156:32)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":157:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":157:36)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":158:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":158:45)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":159:13)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":194:21)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":169:40)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":169:49)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":169:62)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":169:33)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":169:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":169:73)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":170:17)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":173:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":170:21)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":170:38)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":171:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":172:21)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:24)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:25)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:34)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:37)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:51)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":174:52)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":175:38)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":175:17)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":176:53)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":176:43)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":176:17)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":176:63)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":177:42)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":177:36)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":177:17)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":177:50)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:17)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":181:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:29)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:62)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:63)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:72)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:86)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:21)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":178:92)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":179:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":180:21)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:35)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:50)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:63)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:81)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:84)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:30)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":184:85)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":185:17)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":188:17)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":185:21)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":185:35)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":185:48)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":185:51)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":185:65)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":186:17)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":187:21)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":190:43)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":190:29)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":190:17)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":192:24)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":192:32)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":192:45)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":192:51)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":192:17)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":192:52)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":194:20)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":195:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":198:13)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":195:17)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":195:34)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":196:13)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":197:30)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":197:17)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":207:5)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":233:5)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":207:8)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":207:27)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":208:5)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":211:5)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":213:5)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":210:9)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":214:9)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":232:9)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":215:13)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":215:20)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":231:13)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:17)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:24)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:43)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:45)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:48)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":219:55)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":220:13)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":227:13)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":229:13)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":221:36)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":221:43)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":221:48)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":221:59)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":221:60)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":221:17)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:17)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:49)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:21)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:33)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:39)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:40)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:46)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":222:45)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":224:17)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":224:24)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":224:34)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":225:27)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":225:17)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":226:17)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":226:22)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":230:17)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":237:1)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":323:1)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":239:5)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":239:12)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":241:12)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":241:5)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":242:5)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":300:5)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":242:8)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":242:26)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":243:5)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":244:9)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":299:9)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":249:13)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":249:17)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":250:13)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":250:32)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":251:13)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":251:36)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":252:13)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":252:45)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":253:13)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":288:21)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":263:40)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":263:49)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":263:62)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":263:33)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":263:17)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":263:73)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":264:17)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":267:17)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":264:21)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":264:38)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":265:17)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":266:21)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:24)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:25)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:34)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:37)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:51)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:17)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":268:52)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":269:38)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":269:17)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":270:53)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":270:43)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":270:17)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":270:63)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":271:42)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":271:36)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":271:17)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":271:50)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:17)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":275:17)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:29)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:62)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:63)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:72)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:86)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:21)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":272:92)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":273:17)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":274:21)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:35)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:50)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:63)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:81)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:84)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:30)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:17)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":278:85)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":279:17)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":282:17)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":279:21)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":279:35)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":279:48)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":279:51)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":279:65)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":280:17)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":281:21)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":284:43)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":284:29)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":284:17)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":286:24)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":286:32)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":286:45)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":286:51)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":286:17)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":286:52)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":288:20)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":289:13)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":292:13)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":289:17)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":289:34)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":290:13)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":291:30)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":291:17)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":301:5)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":322:5)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":301:8)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":301:26)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":302:5)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":303:9)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":321:9)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":304:13)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":304:20)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:13)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":320:13)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:17)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:24)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:43)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:45)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:48)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":308:55)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":309:13)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":316:13)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":318:13)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":310:36)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":310:43)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":310:48)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":310:59)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":310:60)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":310:17)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:17)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:49)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:21)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:33)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:39)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:40)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:46)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":311:45)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":313:17)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":313:24)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":313:34)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":314:27)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":314:17)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":315:17)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":315:22)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":319:27)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":319:17)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":326:1)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":363:1)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":328:5)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":328:12)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":330:12)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":330:5)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":331:5)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":340:5)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":331:8)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":331:27)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":332:5)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":335:5)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":337:5)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":334:19)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":334:9)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":339:16)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":339:9)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":341:5)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":362:5)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":341:8)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":341:26)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":342:5)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":343:9)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":361:9)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":344:13)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":344:20)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":348:13)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":360:13)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":348:17)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":348:24)
#loc522 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":348:43)
#loc523 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":349:13)
#loc524 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":356:13)
#loc525 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":358:13)
#loc526 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":350:36)
#loc527 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":350:43)
#loc528 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":350:48)
#loc529 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":350:59)
#loc530 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":350:60)
#loc531 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":350:17)
#loc532 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:17)
#loc533 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:49)
#loc534 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:21)
#loc535 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:33)
#loc536 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:39)
#loc537 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:40)
#loc538 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:46)
#loc539 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":351:45)
#loc540 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":353:17)
#loc541 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":353:24)
#loc542 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":353:34)
#loc543 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":354:27)
#loc544 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":354:17)
#loc545 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":355:17)
#loc546 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":355:22)
#loc547 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":359:27)
#loc548 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":359:17)
#loc549 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":366:1)
#loc550 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":398:1)
#loc551 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":368:5)
#loc552 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":368:12)
#loc553 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":370:12)
#loc554 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":370:5)
#loc555 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":371:5)
#loc556 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":375:5)
#loc557 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":371:8)
#loc558 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":371:26)
#loc559 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":372:5)
#loc560 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":374:16)
#loc561 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":374:9)
#loc562 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":376:5)
#loc563 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":397:5)
#loc564 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":376:8)
#loc565 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":376:26)
#loc566 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":377:5)
#loc567 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":378:9)
#loc568 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":396:9)
#loc569 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":379:13)
#loc570 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":379:20)
#loc571 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":383:13)
#loc572 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":395:13)
#loc573 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":383:17)
#loc574 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":383:24)
#loc575 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":383:43)
#loc576 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":384:13)
#loc577 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":391:13)
#loc578 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":393:13)
#loc579 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":385:36)
#loc580 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":385:43)
#loc581 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":385:48)
#loc582 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":385:59)
#loc583 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":385:60)
#loc584 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":385:17)
#loc585 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:17)
#loc586 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:49)
#loc587 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:21)
#loc588 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:33)
#loc589 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:39)
#loc590 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:40)
#loc591 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:46)
#loc592 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":386:45)
#loc593 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":388:17)
#loc594 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":388:24)
#loc595 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":388:34)
#loc596 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":389:27)
#loc597 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":389:17)
#loc598 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":390:17)
#loc599 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":390:22)
#loc600 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":394:27)
#loc601 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_11.c":394:17)
#loc602 = loc(fused[#loc1, #loc2])
#loc603 = loc(fused[#loc3, #loc4])
#loc604 = loc(fused[#loc5, #loc6])
#loc605 = loc(fused[#loc8, #loc9])
#loc606 = loc(fused[#loc10, #loc11])
#loc607 = loc(fused[#loc12, #loc13])
#loc608 = loc(fused[#loc14, #loc15])
#loc609 = loc(fused[#loc16, #loc17])
#loc610 = loc(fused[#loc18, #loc19])
#loc611 = loc(fused[#loc20, #loc21])
#loc612 = loc(fused[#loc22, #loc23])
#loc613 = loc(fused[#loc25, #loc26])
#loc614 = loc(fused[#loc27, #loc28])
#loc615 = loc(fused[#loc30, #loc31])
#loc616 = loc(fused[#loc32, #loc33])
#loc617 = loc(fused[#loc35, #loc34])
#loc618 = loc(fused[#loc36, #loc37])
#loc619 = loc(fused[#loc38, #loc39])
#loc620 = loc(fused[#loc40, #loc37])
#loc621 = loc(fused[#loc41, #loc42])
#loc622 = loc(fused[#loc43, #loc44])
#loc623 = loc(fused[#loc45, #loc46])
#loc624 = loc(fused[#loc47, #loc48])
#loc625 = loc(fused[#loc49, #loc50])
#loc626 = loc(fused[#loc51, #loc52])
#loc627 = loc(fused[#loc57, #loc58])
#loc628 = loc(fused[#loc59, #loc60])
#loc629 = loc(fused[#loc61, #loc62])
#loc630 = loc(fused[#loc63, #loc60])
#loc631 = loc(fused[#loc65, #loc66])
#loc632 = loc(fused[#loc68, #loc69])
#loc633 = loc(fused[#loc70, #loc71])
#loc634 = loc(fused[#loc74, #loc72])
#loc635 = loc(fused[#loc78, #loc79])
#loc636 = loc(fused[#loc83, #loc84])
#loc637 = loc(fused[#loc85, #loc86])
#loc638 = loc(fused[#loc88, #loc89])
#loc639 = loc(fused[#loc90, #loc91])
#loc640 = loc(fused[#loc92, #loc93])
#loc641 = loc(fused[#loc94, #loc86])
#loc642 = loc(fused[#loc98, #loc99])
#loc643 = loc(fused[#loc102, #loc103])
#loc644 = loc(fused[#loc104, #loc105])
#loc645 = loc(fused[#loc106, #loc107])
#loc646 = loc(fused[#loc109, #loc110])
#loc647 = loc(fused[#loc111, #loc105])
#loc648 = loc(fused[#loc115, #loc113])
#loc649 = loc(fused[#loc120, #loc121])
#loc650 = loc(fused[#loc123, #loc124])
#loc651 = loc(fused[#loc125, #loc126])
#loc652 = loc(fused[#loc127, #loc124])
#loc653 = loc(fused[#loc130, #loc131])
#loc654 = loc(fused[#loc132, #loc133])
#loc655 = loc(fused[#loc134, #loc131])
#loc656 = loc(fused[#loc135, #loc136])
#loc657 = loc(fused[#loc137, #loc138])
#loc658 = loc(fused[#loc139, #loc140])
#loc659 = loc(fused[#loc142, #loc143])
#loc660 = loc(fused[#loc141, #loc143])
#loc661 = loc(fused[#loc144, #loc145, #loc146, #loc140])
#loc662 = loc(fused[#loc149, #loc150])
#loc663 = loc(fused[#loc148, #loc150])
#loc664 = loc(fused[#loc147, #loc151])
#loc665 = loc(fused[#loc152, #loc151])
#loc666 = loc(fused[#loc153, #loc154])
#loc667 = loc(fused[#loc155, #loc156])
#loc668 = loc(fused[#loc157, #loc154])
#loc669 = loc(fused[#loc168, #loc169])
#loc670 = loc(fused[#loc170, #loc171])
#loc671 = loc(fused[#loc172, #loc173])
#loc672 = loc(fused[#loc174, #loc175])
#loc673 = loc(fused[#loc176, #loc177])
#loc674 = loc(fused[#loc178, #loc179])
#loc675 = loc(fused[#loc180, #loc181])
#loc676 = loc(fused[#loc186, #loc187])
#loc679 = loc(fused[#loc197, #loc198])
#loc680 = loc(fused[#loc201, #loc202])
#loc681 = loc(fused[#loc205, #loc204])
#loc682 = loc(fused[#loc206, #loc207])
#loc683 = loc(fused[#loc210, #loc211])
#loc684 = loc(fused[#loc212, #loc213])
#loc685 = loc(fused[#loc215, #loc214])
#loc686 = loc(fused[#loc216, #loc217])
#loc687 = loc(fused[#loc218, #loc219])
#loc688 = loc(fused[#loc220, #loc217])
#loc689 = loc(fused[#loc221, #loc222])
#loc690 = loc(fused[#loc223, #loc224])
#loc691 = loc(fused[#loc225, #loc226])
#loc692 = loc(fused[#loc227, #loc228])
#loc693 = loc(fused[#loc229, #loc230])
#loc694 = loc(fused[#loc231, #loc232])
#loc695 = loc(fused[#loc237, #loc238])
#loc696 = loc(fused[#loc239, #loc240])
#loc697 = loc(fused[#loc241, #loc242])
#loc698 = loc(fused[#loc243, #loc240])
#loc699 = loc(fused[#loc245, #loc246])
#loc700 = loc(fused[#loc248, #loc249])
#loc701 = loc(fused[#loc250, #loc251])
#loc702 = loc(fused[#loc253, #loc252])
#loc703 = loc(fused[#loc256, #loc257])
#loc704 = loc(fused[#loc260, #loc261])
#loc705 = loc(fused[#loc262, #loc263])
#loc706 = loc(fused[#loc265, #loc266])
#loc707 = loc(fused[#loc267, #loc268])
#loc708 = loc(fused[#loc269, #loc270])
#loc709 = loc(fused[#loc271, #loc263])
#loc710 = loc(fused[#loc275, #loc276])
#loc711 = loc(fused[#loc279, #loc280])
#loc712 = loc(fused[#loc281, #loc282])
#loc713 = loc(fused[#loc283, #loc284])
#loc714 = loc(fused[#loc286, #loc287])
#loc715 = loc(fused[#loc288, #loc282])
#loc716 = loc(fused[#loc292, #loc290])
#loc717 = loc(fused[#loc297, #loc298])
#loc718 = loc(fused[#loc300, #loc301])
#loc719 = loc(fused[#loc302, #loc303])
#loc720 = loc(fused[#loc304, #loc301])
#loc721 = loc(fused[#loc307, #loc308])
#loc722 = loc(fused[#loc309, #loc310])
#loc723 = loc(fused[#loc311, #loc312, #loc313, #loc308])
#loc724 = loc(fused[#loc315, #loc316])
#loc725 = loc(fused[#loc317, #loc318])
#loc726 = loc(fused[#loc319, #loc320])
#loc727 = loc(fused[#loc322, #loc323])
#loc728 = loc(fused[#loc321, #loc323])
#loc729 = loc(fused[#loc325, #loc326])
#loc730 = loc(fused[#loc327, #loc328, #loc329, #loc320])
#loc731 = loc(fused[#loc332, #loc333])
#loc732 = loc(fused[#loc331, #loc333])
#loc733 = loc(fused[#loc330, #loc334])
#loc734 = loc(fused[#loc335, #loc334])
#loc735 = loc(fused[#loc336, #loc337])
#loc736 = loc(fused[#loc338, #loc339])
#loc737 = loc(fused[#loc340, #loc337])
#loc738 = loc(fused[#loc352, #loc353])
#loc739 = loc(fused[#loc354, #loc355])
#loc740 = loc(fused[#loc357, #loc356])
#loc741 = loc(fused[#loc358, #loc359])
#loc742 = loc(fused[#loc360, #loc361])
#loc743 = loc(fused[#loc362, #loc359])
#loc744 = loc(fused[#loc363, #loc364])
#loc745 = loc(fused[#loc365, #loc366])
#loc746 = loc(fused[#loc367, #loc368])
#loc747 = loc(fused[#loc369, #loc370])
#loc748 = loc(fused[#loc371, #loc372])
#loc749 = loc(fused[#loc373, #loc374])
#loc750 = loc(fused[#loc379, #loc380])
#loc751 = loc(fused[#loc381, #loc382])
#loc752 = loc(fused[#loc383, #loc384])
#loc753 = loc(fused[#loc385, #loc382])
#loc754 = loc(fused[#loc387, #loc388])
#loc755 = loc(fused[#loc390, #loc391])
#loc756 = loc(fused[#loc392, #loc393])
#loc757 = loc(fused[#loc395, #loc394])
#loc758 = loc(fused[#loc398, #loc399])
#loc759 = loc(fused[#loc402, #loc403])
#loc760 = loc(fused[#loc404, #loc405])
#loc761 = loc(fused[#loc407, #loc408])
#loc762 = loc(fused[#loc409, #loc410])
#loc763 = loc(fused[#loc411, #loc412])
#loc764 = loc(fused[#loc413, #loc405])
#loc765 = loc(fused[#loc417, #loc418])
#loc766 = loc(fused[#loc421, #loc422])
#loc767 = loc(fused[#loc423, #loc424])
#loc768 = loc(fused[#loc425, #loc426])
#loc769 = loc(fused[#loc428, #loc429])
#loc770 = loc(fused[#loc430, #loc424])
#loc771 = loc(fused[#loc434, #loc432])
#loc772 = loc(fused[#loc439, #loc440])
#loc773 = loc(fused[#loc442, #loc443])
#loc774 = loc(fused[#loc444, #loc445])
#loc775 = loc(fused[#loc446, #loc443])
#loc776 = loc(fused[#loc449, #loc450])
#loc777 = loc(fused[#loc451, #loc452])
#loc778 = loc(fused[#loc453, #loc450])
#loc779 = loc(fused[#loc454, #loc455])
#loc780 = loc(fused[#loc456, #loc457])
#loc781 = loc(fused[#loc458, #loc459])
#loc782 = loc(fused[#loc461, #loc462])
#loc783 = loc(fused[#loc460, #loc462])
#loc784 = loc(fused[#loc464, #loc465])
#loc785 = loc(fused[#loc466, #loc467, #loc468, #loc459])
#loc786 = loc(fused[#loc471, #loc472])
#loc787 = loc(fused[#loc470, #loc472])
#loc788 = loc(fused[#loc469, #loc473])
#loc789 = loc(fused[#loc474, #loc473])
#loc790 = loc(fused[#loc475, #loc476])
#loc791 = loc(fused[#loc477, #loc478])
#loc792 = loc(fused[#loc479, #loc476])
#loc793 = loc(fused[#loc492, #loc493])
#loc794 = loc(fused[#loc494, #loc495])
#loc795 = loc(fused[#loc497, #loc496])
#loc796 = loc(fused[#loc498, #loc499])
#loc797 = loc(fused[#loc500, #loc501])
#loc798 = loc(fused[#loc502, #loc503, #loc504, #loc499])
#loc799 = loc(fused[#loc508, #loc507])
#loc800 = loc(fused[#loc509, #loc510])
#loc801 = loc(fused[#loc511, #loc512])
#loc802 = loc(fused[#loc513, #loc510])
#loc803 = loc(fused[#loc514, #loc515])
#loc804 = loc(fused[#loc516, #loc517])
#loc805 = loc(fused[#loc518, #loc519])
#loc806 = loc(fused[#loc521, #loc522])
#loc807 = loc(fused[#loc520, #loc522])
#loc808 = loc(fused[#loc523, #loc524, #loc525, #loc519])
#loc809 = loc(fused[#loc528, #loc529])
#loc810 = loc(fused[#loc527, #loc529])
#loc811 = loc(fused[#loc526, #loc530])
#loc812 = loc(fused[#loc531, #loc530])
#loc813 = loc(fused[#loc532, #loc533])
#loc814 = loc(fused[#loc534, #loc535])
#loc815 = loc(fused[#loc536, #loc533])
#loc816 = loc(fused[#loc549, #loc550])
#loc817 = loc(fused[#loc551, #loc552])
#loc818 = loc(fused[#loc554, #loc553])
#loc819 = loc(fused[#loc555, #loc556])
#loc820 = loc(fused[#loc557, #loc558])
#loc821 = loc(fused[#loc559, #loc556])
#loc822 = loc(fused[#loc561, #loc560])
#loc823 = loc(fused[#loc562, #loc563])
#loc824 = loc(fused[#loc564, #loc565])
#loc825 = loc(fused[#loc566, #loc563])
#loc826 = loc(fused[#loc567, #loc568])
#loc827 = loc(fused[#loc569, #loc570])
#loc828 = loc(fused[#loc571, #loc572])
#loc829 = loc(fused[#loc574, #loc575])
#loc830 = loc(fused[#loc573, #loc575])
#loc831 = loc(fused[#loc576, #loc577, #loc578, #loc572])
#loc832 = loc(fused[#loc581, #loc582])
#loc833 = loc(fused[#loc580, #loc582])
#loc834 = loc(fused[#loc579, #loc583])
#loc835 = loc(fused[#loc584, #loc583])
#loc836 = loc(fused[#loc585, #loc586])
#loc837 = loc(fused[#loc587, #loc588])
#loc838 = loc(fused[#loc589, #loc586])
