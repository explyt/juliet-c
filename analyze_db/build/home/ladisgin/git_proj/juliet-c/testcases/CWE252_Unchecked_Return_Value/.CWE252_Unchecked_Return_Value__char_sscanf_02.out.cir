!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc37 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":103:10)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":103:14)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":103:20)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":103:32)
#loc117 = loc(fused[#loc37, #loc38])
#loc118 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sscanf\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_sscanf_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc9)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc9)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc108)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc108)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
          %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
        } loc(#loc107)
      } loc(#loc106)
    } loc(#loc105)
    cir.return loc(#loc6)
  } loc(#loc104)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_sscanf_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc110)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc113)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc114)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc44)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_sscanf_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call @CWE252_Unchecked_Return_Value__char_sscanf_02_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_sscanf_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call @CWE252_Unchecked_Return_Value__char_sscanf_02_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.return %17 : !s32i loc(#loc121)
  } loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc61)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc61)
      cir.if %1 {
        %2 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc65)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc126)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc126)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc126)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
          cir.scope {
            %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc74)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc75)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc75)
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc76)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc76)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
            %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc74)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc78)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc129)
            cir.if %15 {
              %16 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc80)
            } loc(#loc130)
          } loc(#loc128)
        } loc(#loc125)
      } loc(#loc124)
    } loc(#loc123)
    cir.return loc(#loc58)
  } loc(#loc122)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc85)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc135)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc135)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc135)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
          cir.scope {
            %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc95)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc96)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc96)
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc97)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc97)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
            %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc95)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc99)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc138)
            cir.if %15 {
              %16 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc101)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc101)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc102)
            } loc(#loc139)
          } loc(#loc137)
        } loc(#loc134)
      } loc(#loc133)
    } loc(#loc132)
    cir.return loc(#loc82)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:20)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:25)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":26:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":39:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":28:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":38:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":28:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":29:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":30:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":37:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":33:13)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":33:36)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":34:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":34:27)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:35)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":88:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":92:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":90:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":90:11)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":91:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":91:11)
#loc25 = loc("/usr/include/stdlib.h":575:1)
#loc26 = loc("/usr/include/stdlib.h":575:41)
#loc27 = loc("/usr/include/time.h":76:1)
#loc28 = loc("/usr/include/time.h":76:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":108:15)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":110:15)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":113:15)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":115:15)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":103:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":118:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":104:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":106:27)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":106:22)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":106:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":108:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":109:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":109:56)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":110:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":113:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":114:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":114:55)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":115:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":117:12)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":117:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":51:19)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":63:27)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":46:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":67:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":48:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":66:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":48:8)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":49:5)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":52:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":54:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":51:9)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":55:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":65:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":58:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":58:36)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":59:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":59:27)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":64:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:17)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:24)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:29)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:39)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:48)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":62:13)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":63:17)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":70:1)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":86:1)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":72:5)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":85:5)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":72:8)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":73:5)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":74:9)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":84:9)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":77:13)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":77:36)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":78:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":78:27)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:13)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":83:13)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:17)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:24)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:29)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:39)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:48)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":81:13)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":82:27)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":82:17)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc10, #loc8])
#loc107 = loc(fused[#loc11, #loc12])
#loc108 = loc(fused[#loc13, #loc14])
#loc109 = loc(fused[#loc15, #loc16])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc21, #loc22])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc25, #loc26])
#loc114 = loc(fused[#loc27, #loc28])
#loc115 = loc(fused[#loc29, #loc30])
#loc116 = loc(fused[#loc35, #loc36])
#loc119 = loc(fused[#loc46, #loc47])
#loc120 = loc(fused[#loc50, #loc51])
#loc121 = loc(fused[#loc54, #loc53])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc62, #loc63, #loc64, #loc60])
#loc125 = loc(fused[#loc66, #loc67])
#loc126 = loc(fused[#loc68, #loc69])
#loc127 = loc(fused[#loc70, #loc71])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc74, #loc78])
#loc130 = loc(fused[#loc79, #loc73])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc83, #loc84])
#loc133 = loc(fused[#loc86, #loc84])
#loc134 = loc(fused[#loc87, #loc88])
#loc135 = loc(fused[#loc89, #loc90])
#loc136 = loc(fused[#loc91, #loc92])
#loc137 = loc(fused[#loc93, #loc94])
#loc138 = loc(fused[#loc95, #loc99])
#loc139 = loc(fused[#loc100, #loc94])
