!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":49:23)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":49:28)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:44)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":127:27)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":127:32)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":147:27)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":147:32)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:44)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:24)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc276 = loc(fused[#loc18, #loc19])
#loc316 = loc(fused[#loc126, #loc127])
#loc324 = loc(fused[#loc147, #loc148])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc268)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc270)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc271)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc272)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc273)
  cir.func private @close(!s32i) -> !s32i loc(#loc274)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc278)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc279)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc280)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc276)
    cir.store %arg0, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc28)
    cir.br ^bb1 loc(#loc281)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc25)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb2 loc(#loc282)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc282)
  ^bb3:  // pred: ^bb24
    %7 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %8 ^bb4, ^bb25 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %9 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %10 = cir.const #cir.int<1> : !u32i loc(#loc35)
    %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc35)
    %12 = cir.const #cir.int<6> : !u32i loc(#loc36)
    %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc36)
    %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc37)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb5 loc(#loc284)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc43)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc285)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc286)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc45)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc287)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc288)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc289)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc53)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc290)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc56)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc291)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc61)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc61)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc62)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc292)
    cir.br ^bb9 loc(#loc293)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc294)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc295)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc295)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc73)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc74)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc296)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc297)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc76)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc67)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc78)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc79)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc79)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc79)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc79)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc79)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc79)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc80)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc298)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc82)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc82)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb13 loc(#loc300)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc88)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc89)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc89)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc89)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc89)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc89)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc89)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc89)
  ^bb18(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc89)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc89)
  ^bb20(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc89)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc303)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc93)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc86)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s8i loc(#loc94)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc304)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc98)
    %76 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    cir.store %75, %76 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb3 loc(#loc32)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc32)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc306)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc104)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc308)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc107)
    cir.br ^bb29 loc(#loc102)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc102)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc30)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc17)
  } loc(#loc275)
  cir.func private @printIntLine(!s32i) loc(#loc309)
  cir.func @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc312)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.call @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L9badSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc118)
    cir.br ^bb1 loc(#loc314)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %5 = cir.binop(mul, %3, %4) nsw : !s32i loc(#loc121)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc123)
    cir.br ^bb2 loc(#loc120)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc111)
  } loc(#loc310)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc126, #loc127])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc316)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc129)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.return loc(#loc125)
  } loc(#loc315)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc319)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.call @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L13goodG2BSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc139)
    cir.br ^bb1 loc(#loc322)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %5 = cir.binop(mul, %3, %4) nsw : !s32i loc(#loc142)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc144)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc132)
  } loc(#loc318)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc147, #loc148])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc326)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc327)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc328)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc324)
    cir.store %arg0, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.br ^bb1 loc(#loc329)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc154)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb2 loc(#loc330)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc330)
  ^bb3:  // pred: ^bb24
    %7 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %8 ^bb4, ^bb25 loc(#loc162)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %9 = cir.const #cir.int<2> : !s32i loc(#loc163)
    %10 = cir.const #cir.int<1> : !u32i loc(#loc164)
    %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc164)
    %12 = cir.const #cir.int<6> : !u32i loc(#loc165)
    %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc165)
    %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc166)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb5 loc(#loc332)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc172)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc334)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc174)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc170)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc335)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc336)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc337)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc182)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc182)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc338)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc184)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc184)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc185)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc339)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc188)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc188)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc189)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc340)
    cir.br ^bb9 loc(#loc341)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc342)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc343)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc343)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc199)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc200)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc345)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc202)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc193)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc204)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc205)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc205)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc205)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc205)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc205)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc205)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc205)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc206)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc346)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc207)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc208)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc208)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb13 loc(#loc348)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc214)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc215)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc215)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc215)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc350)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc215)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc215)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc215)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc215)
  ^bb18(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc215)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc215)
  ^bb20(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc215)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc351)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc219)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc212)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s8i loc(#loc220)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc222)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc222)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc352)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc223)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc224)
    %76 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
    cir.store %75, %76 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb3 loc(#loc161)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc161)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc354)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc230)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc356)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc233)
    cir.br ^bb29 loc(#loc228)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc228)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc159)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc146)
  } loc(#loc323)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc234)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc357)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc237)
  cir.func internal private @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc360)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc244)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.call @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L13goodB2GSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc246)
    cir.br ^bb1 loc(#loc362)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc250)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc250)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc250)
    %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %10 = cir.abs %9 poison : !s32i loc(#loc253)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc253)
    %12 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc254)
    %13 = cir.const #cir.int<2147483647> : !s32i loc(#loc255)
    %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc255)
    %15 = cir.call @sqrt(%14) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc254)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s64i loc(#loc254)
    %17 = cir.cmp(lt, %11, %16) : !s64i, !cir.bool loc(#loc364)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc251)
  ^bb3:  // pred: ^bb2
    %18 = cir.const #true loc(#loc251)
    cir.br ^bb5(%18 : !cir.bool) loc(#loc251)
  ^bb4:  // pred: ^bb2
    %19 = cir.const #false loc(#loc251)
    cir.br ^bb5(%19 : !cir.bool) loc(#loc251)
  ^bb5(%20: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:24)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc251)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8(%20 : !cir.bool) loc(#loc251)
  ^bb7:  // pred: ^bb1
    %21 = cir.const #false loc(#loc251)
    cir.br ^bb8(%21 : !cir.bool) loc(#loc251)
  ^bb8(%22: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:24)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc251)
  ^bb9:  // pred: ^bb8
    cir.brcond %22 ^bb10, ^bb11 loc(#loc365)
  ^bb10:  // pred: ^bb9
    %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %25 = cir.binop(mul, %23, %24) nsw : !s32i loc(#loc260)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc262)
    cir.br ^bb12 loc(#loc258)
  ^bb11:  // pred: ^bb9
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc237)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc237)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc263)
    cir.br ^bb12 loc(#loc248)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc248)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc239)
  } loc(#loc358)
  cir.func @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L7goodG2BEv() : () -> () loc(#loc266)
    cir.call @_ZN53CWE190_Integer_Overflow__int_connect_socket_square_43L7goodB2GEv() : () -> () loc(#loc267)
    cir.return loc(#loc265)
  } loc(#loc366)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":77:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":49:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":107:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":56:9)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":56:13)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":57:9)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":57:28)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":58:9)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":58:32)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":59:9)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":59:41)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":50:1)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":51:5)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":106:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":60:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":95:17)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":95:16)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":70:36)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":70:45)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":70:58)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":70:29)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":70:13)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":70:69)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":71:13)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":74:13)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":71:17)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":71:34)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":72:13)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":73:17)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:20)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:21)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:30)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:33)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:47)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":75:48)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":76:34)
#loc54 = loc("/usr/include/netinet/in.h":249:5)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":76:13)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":77:39)
#loc57 = loc("/usr/include/netinet/in.h":251:20)
#loc58 = loc("/usr/include/netinet/in.h":33:15)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":77:13)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":77:59)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":78:38)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":78:32)
#loc63 = loc("/usr/include/netinet/in.h":250:15)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":78:13)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":78:46)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:13)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":82:13)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:25)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:58)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:59)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:68)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:82)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:17)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":79:88)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":80:13)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":81:17)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:31)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:46)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:59)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:77)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:80)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:26)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:13)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":85:81)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:13)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":89:13)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:17)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:31)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:47)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":86:61)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":87:13)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":88:17)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":91:39)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":91:25)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":91:13)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":93:25)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":93:20)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":93:13)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":93:36)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":96:9)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":99:9)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":96:13)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":96:30)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":97:9)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":98:26)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":98:13)
#loc108 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":109:1)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":120:1)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":117:9)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":117:29)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":111:5)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":111:9)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":113:12)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":113:5)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":114:5)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":115:5)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":119:5)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":117:22)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":118:22)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":118:9)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":127:1)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":131:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":128:1)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":130:12)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":130:5)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":133:1)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":144:1)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":141:9)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":141:29)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":135:5)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":135:9)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":137:12)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":137:5)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":138:5)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":139:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":143:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":141:22)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":142:22)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":142:9)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":147:1)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":205:1)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":154:9)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":154:13)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":155:9)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":155:28)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":156:9)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":156:32)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":157:9)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":157:41)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":148:1)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":149:5)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":204:5)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":158:9)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":193:17)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":193:16)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":168:36)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":168:45)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":168:58)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":168:29)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":168:13)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":168:69)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":169:13)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":172:13)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":169:17)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":169:34)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":170:13)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":171:17)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:20)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:21)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:30)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:33)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:47)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:13)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":173:48)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":174:34)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":174:13)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":175:49)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":175:39)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":175:13)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":175:59)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":176:38)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":176:32)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":176:13)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":176:46)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:13)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":180:13)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:25)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:58)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:59)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:68)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:82)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:17)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":177:88)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":178:13)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":179:17)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:31)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:46)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:59)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:77)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:80)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:26)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:13)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":183:81)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:13)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":187:13)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:17)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:31)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:47)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":184:61)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":185:13)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":186:17)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":189:39)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":189:25)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":189:13)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":191:25)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":191:20)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":191:13)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":191:36)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":194:9)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":197:9)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":194:13)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":194:30)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":195:9)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":196:26)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":196:13)
#loc234 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc235 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc236 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":221:19)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":207:1)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":223:1)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":216:9)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":216:29)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":209:5)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":209:9)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":211:12)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":211:5)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":212:5)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:5)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":222:5)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:9)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:16)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:31)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:27)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:45)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:58)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":214:65)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":215:5)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":218:5)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":220:5)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":216:22)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":217:22)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":217:9)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":221:9)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":225:1)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":229:1)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":227:5)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_43.cpp":228:5)
#loc268 = loc(fused[#loc1, #loc2])
#loc269 = loc(fused[#loc3, #loc4])
#loc270 = loc(fused[#loc6, #loc7])
#loc271 = loc(fused[#loc8, #loc9])
#loc272 = loc(fused[#loc10, #loc11])
#loc273 = loc(fused[#loc12, #loc13])
#loc274 = loc(fused[#loc14, #loc15])
#loc275 = loc(fused[#loc16, #loc17])
#loc277 = loc(fused[#loc20, #loc21])
#loc278 = loc(fused[#loc22, #loc23])
#loc279 = loc(fused[#loc24, #loc25])
#loc280 = loc(fused[#loc26, #loc27])
#loc281 = loc(fused[#loc29, #loc30])
#loc282 = loc(fused[#loc31, #loc32])
#loc283 = loc(fused[#loc38, #loc39])
#loc284 = loc(fused[#loc40, #loc41])
#loc285 = loc(fused[#loc42, #loc43])
#loc286 = loc(fused[#loc44, #loc41])
#loc287 = loc(fused[#loc46, #loc47])
#loc288 = loc(fused[#loc49, #loc50])
#loc289 = loc(fused[#loc51, #loc52])
#loc290 = loc(fused[#loc55, #loc53])
#loc291 = loc(fused[#loc59, #loc60])
#loc292 = loc(fused[#loc64, #loc65])
#loc293 = loc(fused[#loc66, #loc67])
#loc294 = loc(fused[#loc69, #loc70])
#loc295 = loc(fused[#loc71, #loc72])
#loc296 = loc(fused[#loc73, #loc74])
#loc297 = loc(fused[#loc75, #loc67])
#loc298 = loc(fused[#loc79, #loc80])
#loc299 = loc(fused[#loc83, #loc84])
#loc300 = loc(fused[#loc85, #loc86])
#loc301 = loc(fused[#loc87, #loc88])
#loc302 = loc(fused[#loc90, #loc91])
#loc303 = loc(fused[#loc92, #loc86])
#loc304 = loc(fused[#loc96, #loc94])
#loc305 = loc(fused[#loc99, #loc100])
#loc306 = loc(fused[#loc101, #loc102])
#loc307 = loc(fused[#loc103, #loc104])
#loc308 = loc(fused[#loc105, #loc102])
#loc309 = loc(fused[#loc108, #loc109])
#loc310 = loc(fused[#loc110, #loc111])
#loc311 = loc(fused[#loc112, #loc113])
#loc312 = loc(fused[#loc114, #loc115])
#loc313 = loc(fused[#loc117, #loc116])
#loc314 = loc(fused[#loc119, #loc120])
#loc315 = loc(fused[#loc124, #loc125])
#loc317 = loc(fused[#loc130, #loc129])
#loc318 = loc(fused[#loc131, #loc132])
#loc319 = loc(fused[#loc133, #loc134])
#loc320 = loc(fused[#loc135, #loc136])
#loc321 = loc(fused[#loc138, #loc137])
#loc322 = loc(fused[#loc140, #loc141])
#loc323 = loc(fused[#loc145, #loc146])
#loc325 = loc(fused[#loc149, #loc150])
#loc326 = loc(fused[#loc151, #loc152])
#loc327 = loc(fused[#loc153, #loc154])
#loc328 = loc(fused[#loc155, #loc156])
#loc329 = loc(fused[#loc158, #loc159])
#loc330 = loc(fused[#loc160, #loc161])
#loc331 = loc(fused[#loc167, #loc168])
#loc332 = loc(fused[#loc169, #loc170])
#loc333 = loc(fused[#loc171, #loc172])
#loc334 = loc(fused[#loc173, #loc170])
#loc335 = loc(fused[#loc175, #loc176])
#loc336 = loc(fused[#loc178, #loc179])
#loc337 = loc(fused[#loc180, #loc181])
#loc338 = loc(fused[#loc183, #loc182])
#loc339 = loc(fused[#loc186, #loc187])
#loc340 = loc(fused[#loc190, #loc191])
#loc341 = loc(fused[#loc192, #loc193])
#loc342 = loc(fused[#loc195, #loc196])
#loc343 = loc(fused[#loc197, #loc198])
#loc344 = loc(fused[#loc199, #loc200])
#loc345 = loc(fused[#loc201, #loc193])
#loc346 = loc(fused[#loc205, #loc206])
#loc347 = loc(fused[#loc209, #loc210])
#loc348 = loc(fused[#loc211, #loc212])
#loc349 = loc(fused[#loc213, #loc214])
#loc350 = loc(fused[#loc216, #loc217])
#loc351 = loc(fused[#loc218, #loc212])
#loc352 = loc(fused[#loc222, #loc220])
#loc353 = loc(fused[#loc225, #loc226])
#loc354 = loc(fused[#loc227, #loc228])
#loc355 = loc(fused[#loc229, #loc230])
#loc356 = loc(fused[#loc231, #loc228])
#loc357 = loc(fused[#loc235, #loc236])
#loc358 = loc(fused[#loc238, #loc239])
#loc359 = loc(fused[#loc240, #loc241])
#loc360 = loc(fused[#loc242, #loc243])
#loc361 = loc(fused[#loc245, #loc244])
#loc362 = loc(fused[#loc247, #loc248])
#loc363 = loc(fused[#loc249, #loc250])
#loc364 = loc(fused[#loc253, #loc256])
#loc365 = loc(fused[#loc257, #loc258, #loc259, #loc248])
#loc366 = loc(fused[#loc264, #loc265])
