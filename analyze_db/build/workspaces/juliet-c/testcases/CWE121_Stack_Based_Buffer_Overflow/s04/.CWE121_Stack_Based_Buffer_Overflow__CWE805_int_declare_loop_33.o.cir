!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc92)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc95)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc96)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc98)
    %5 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc99)
    %6 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc100)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc14)
    %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 50>>), !cir.ptr<!s32i> loc(#loc19)
    cir.store %7, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc6)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc6)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc95)
    cir.store %10, %1 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc95)
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
    cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc106)
    cir.br ^bb5 loc(#loc105)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc32)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc107)
    cir.brcond %16 ^bb6, ^bb10 loc(#loc107)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc35)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc35)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc38)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc41)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc110)
    cir.br ^bb5 loc(#loc105)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc45)
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc24)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc22)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc4)
  } loc(#loc93)
  cir.func internal private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc113)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc114)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc116)
    %5 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc117)
    %6 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc118)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc62)
    cir.store %7, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc113)
    cir.store %10, %1 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc113)
    cir.br ^bb3 loc(#loc122)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // pred: ^bb3
    %11 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc72)
    cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc124)
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc75)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc125)
    cir.brcond %16 ^bb6, ^bb10 loc(#loc125)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc126)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc78)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc78)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
    %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc81)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc84)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc128)
    cir.br ^bb5 loc(#loc123)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc87)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc88)
    cir.br ^bb12 loc(#loc69)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc67)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc65)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc47)
  } loc(#loc111)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_334goodEv() extra(#fn_attr) {
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33L7goodG2BEv() : () -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":24:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":48:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":34:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":34:22)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":36:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":36:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":38:17)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":38:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":26:11)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":27:22)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":28:25)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":29:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":29:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":32:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":32:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":33:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":47:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":46:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":37:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":45:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":43:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":41:17)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":42:38)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":42:31)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":42:21)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":42:26)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":42:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":42:39)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:39)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":40:38)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":44:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":44:35)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":44:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":44:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":55:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":78:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":64:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":64:22)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":66:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":66:33)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":68:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":68:24)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":57:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":57:11)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":58:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":58:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":59:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":59:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":60:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":60:27)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":62:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":62:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":63:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":77:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":65:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":76:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":67:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":75:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:17)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":73:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:26)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:22)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:29)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:33)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":71:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":72:38)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":72:31)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":72:21)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":72:26)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":72:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":72:39)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:39)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":70:38)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":74:30)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":74:35)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":74:36)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":74:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":80:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":83:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_33.cpp":82:5)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc9, #loc10])
#loc97 = loc(fused[#loc11, #loc12])
#loc98 = loc(fused[#loc13, #loc14])
#loc99 = loc(fused[#loc15, #loc16])
#loc100 = loc(fused[#loc17, #loc18])
#loc101 = loc(fused[#loc20, #loc19])
#loc102 = loc(fused[#loc21, #loc22])
#loc103 = loc(fused[#loc23, #loc24])
#loc104 = loc(fused[#loc25, #loc26])
#loc105 = loc(fused[#loc27, #loc28])
#loc106 = loc(fused[#loc30, #loc29])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc28])
#loc109 = loc(fused[#loc36, #loc39])
#loc110 = loc(fused[#loc41, #loc40])
#loc111 = loc(fused[#loc46, #loc47])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc58, #loc59])
#loc118 = loc(fused[#loc60, #loc61])
#loc119 = loc(fused[#loc63, #loc62])
#loc120 = loc(fused[#loc64, #loc65])
#loc121 = loc(fused[#loc66, #loc67])
#loc122 = loc(fused[#loc68, #loc69])
#loc123 = loc(fused[#loc70, #loc71])
#loc124 = loc(fused[#loc73, #loc72])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc76, #loc71])
#loc127 = loc(fused[#loc79, #loc82])
#loc128 = loc(fused[#loc84, #loc83])
#loc129 = loc(fused[#loc89, #loc90])
