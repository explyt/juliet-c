!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":23:25)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":23:32)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":51:29)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":51:36)
#loc138 = loc(fused[#loc7, #loc8])
#loc164 = loc(fused[#loc77, #loc78])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc136)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc10)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc11)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc12)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc12)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc16)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc18)
    %15 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.return %17 : !cir.ptr<!s8i> loc(#loc141)
  } loc(#loc137)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc35)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc36)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc148)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc149)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc46)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc48)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
    cir.br ^bb3 loc(#loc42)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %17 = cir.call @badSource(%16) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc50)
    cir.store %17, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc146)
    cir.store %18, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc146)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc55)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc57)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc57)
    %26 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc158)
    cir.libc.memcpy %27 bytes from %22 to %20 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc159)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc63)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc64)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc64)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc66)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %36 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc69)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc30)
  } loc(#loc145)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc161)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc77, #loc78])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc76)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc81)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc82)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc82)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc82)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc86)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc88)
    %15 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.return %17 : !cir.ptr<!s8i> loc(#loc167)
  } loc(#loc163)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc100)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc171)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc172)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc112)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb3 loc(#loc106)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %17 = cir.call @goodG2BSource(%16) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc114)
    cir.store %17, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.br ^bb5 loc(#loc179)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc169)
    cir.store %18, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc169)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc119)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc121)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc121)
    %26 = cir.const #cir.int<1> : !u64i loc(#loc180)
    %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc181)
    cir.libc.memcpy %27 bytes from %22 to %20 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc182)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc127)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc128)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc128)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc130)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %36 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc133)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc94)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":29:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":26:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":26:18)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":26:23)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":26:27)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":26:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":26:28)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":27:19)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":27:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":27:10)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":27:14)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":27:15)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":28:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":28:5)
#loc23 = loc("/usr/include/string.h":407:1)
#loc24 = loc("/usr/include/string.h":408:33)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("/usr/include/stdlib.h":687:1)
#loc28 = loc("/usr/include/stdlib.h":687:32)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":31:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":45:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":38:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":38:25)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":33:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":33:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":34:20)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":34:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":34:31)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":34:42)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":34:43)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":34:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":35:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":36:22)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":36:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":36:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":36:26)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":37:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":44:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:16)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:22)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:28)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:41)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:52)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":40:53)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":41:22)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":41:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":41:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":41:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":42:19)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":42:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":43:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":43:14)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":76:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":79:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":78:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":78:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":51:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":57:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":52:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":54:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":54:18)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":54:23)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":54:26)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":54:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":54:27)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":55:18)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":55:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":55:10)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":55:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":55:14)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":56:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":56:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":60:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":74:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":67:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":67:25)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":62:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":62:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":63:20)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":63:27)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":63:31)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":63:42)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":63:43)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":63:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:33)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:17)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:23)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:24)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:30)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":64:29)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":65:26)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":65:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":65:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":65:30)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":66:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":73:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:16)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:22)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:28)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:35)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:41)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:52)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":69:53)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":70:22)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":70:14)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":70:17)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":70:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":71:19)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":71:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":72:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_42.c":72:14)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc17, #loc16])
#loc141 = loc(fused[#loc22, #loc21])
#loc142 = loc(fused[#loc23, #loc24])
#loc143 = loc(fused[#loc25, #loc26])
#loc144 = loc(fused[#loc27, #loc28])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc37, #loc38])
#loc149 = loc(fused[#loc36, #loc38])
#loc150 = loc(fused[#loc35, #loc39])
#loc151 = loc(fused[#loc40, #loc39])
#loc152 = loc(fused[#loc41, #loc42])
#loc153 = loc(fused[#loc43, #loc44])
#loc154 = loc(fused[#loc45, #loc42])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc59, #loc60])
#loc158 = loc(fused[#loc57, #loc60])
#loc159 = loc(fused[#loc61, #loc62])
#loc160 = loc(fused[#loc66, #loc63])
#loc161 = loc(fused[#loc71, #loc72])
#loc162 = loc(fused[#loc73, #loc74])
#loc163 = loc(fused[#loc75, #loc76])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc87, #loc86])
#loc167 = loc(fused[#loc92, #loc91])
#loc168 = loc(fused[#loc93, #loc94])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc100, #loc102])
#loc173 = loc(fused[#loc99, #loc103])
#loc174 = loc(fused[#loc104, #loc103])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc107, #loc108])
#loc177 = loc(fused[#loc109, #loc106])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc117, #loc118])
#loc180 = loc(fused[#loc123, #loc124])
#loc181 = loc(fused[#loc121, #loc124])
#loc182 = loc(fused[#loc125, #loc126])
#loc183 = loc(fused[#loc130, #loc127])
