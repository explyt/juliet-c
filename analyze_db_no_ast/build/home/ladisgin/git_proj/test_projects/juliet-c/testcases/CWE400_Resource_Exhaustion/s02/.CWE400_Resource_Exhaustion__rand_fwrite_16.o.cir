!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc236)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc237)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc238)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc239)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc240)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%4) loc(#loc23)
      } do {
        %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
        %4 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %5 = cir.binop(and, %3, %4) : !s32i loc(#loc24)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
        %7 = cir.ternary(%6, true {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc24)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc24)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc24)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc24)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc24)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc24)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc24)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc24)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc24)
          cir.yield %20 : !u32i loc(#loc24)
        }, false {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc24)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc24)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc24)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc24)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc24)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc24)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc24)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc24)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc24)
          %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc24)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc24)
          %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc24)
          cir.yield %24 : !u32i loc(#loc24)
        }) : (!cir.bool) -> !u32i loc(#loc24)
        %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc24)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
        cir.break loc(#loc26)
      } loc(#loc244)
    } loc(#loc244)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
        cir.condition(%4) loc(#loc29)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc248)
          %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc249)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc250)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc33)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
          cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc248)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc35)
          cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc249)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
          %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc37)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
          %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc37)
          cir.store %15, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc251)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc253)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc45)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc47)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc48)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
            } loc(#loc254)
          } loc(#loc252)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc51)
            cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc256)
            cir.for : cond {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc53)
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc54)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !s32i loc(#loc257)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc55)
              cir.condition(%22) loc(#loc55)
            } body {
              cir.scope {
                cir.scope {
                  %18 = cir.const #cir.int<50> : !u64i loc(#loc260)
                  %19 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc61)
                  %20 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                  %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                  %23 = cir.const #cir.int<1> : !u64i loc(#loc261)
                  %24 = cir.const #cir.int<50> : !u64i loc(#loc262)
                  %25 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
                  %26 = cir.call @fwrite(%22, %23, %24, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc61)
                  %27 = cir.cmp(ne, %18, %26) : !u64i, !s32i loc(#loc263)
                  %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc68)
                  cir.if %28 {
                    %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
                    %30 = cir.const #cir.int<1> : !s32i loc(#loc71)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
                  } loc(#loc264)
                } loc(#loc259)
              } loc(#loc258)
              cir.yield loc(#loc50)
            } step {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc72)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc73)
              cir.store %19, %3 : !u64i, !cir.ptr<!u64i> loc(#loc265)
              cir.yield loc(#loc255)
            } loc(#loc255)
          } loc(#loc255)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
            %17 = cir.cast(ptr_to_bool, %16 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc76)
            cir.if %17 {
              %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
              %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc79)
            } loc(#loc267)
          } loc(#loc266)
        } loc(#loc247)
        cir.break loc(#loc80)
      } loc(#loc246)
    } loc(#loc246)
    cir.return loc(#loc15)
  } loc(#loc241)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    cir.return loc(#loc82)
  } loc(#loc268)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc272)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc93)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc97)
        cir.condition(%4) loc(#loc97)
      } do {
        %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
        %4 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %5 = cir.binop(and, %3, %4) : !s32i loc(#loc98)
        %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc98)
        %7 = cir.ternary(%6, true {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc98)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc98)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc98)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc98)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc98)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc98)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc98)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc98)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc98)
          cir.yield %20 : !u32i loc(#loc98)
        }, false {
          %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
          %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc98)
          %11 = cir.const #cir.int<30> : !s32i loc(#loc98)
          %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc98)
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc98)
          %15 = cir.const #cir.int<15> : !s32i loc(#loc98)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc98)
          %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc98)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc98)
          %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc98)
          %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc98)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc98)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc98)
          %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc98)
          cir.yield %24 : !u32i loc(#loc98)
        }) : (!cir.bool) -> !u32i loc(#loc98)
        %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc98)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
        cir.break loc(#loc100)
      } loc(#loc274)
    } loc(#loc274)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc103)
        cir.condition(%4) loc(#loc103)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc278)
          %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc279)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc280)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc107)
          cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc278)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc109)
          cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
          %9 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc114)
            %13 = cir.cmp(gt, %11, %12) : !s32i, !s32i loc(#loc282)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc115)
            %15 = cir.ternary(%14, true {
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %17 = cir.const #cir.int<20> : !s32i loc(#loc118)
              %18 = cir.cmp(le, %16, %17) : !s32i, !s32i loc(#loc283)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc119)
              %20 = cir.ternary(%19, true {
                %21 = cir.const #true loc(#loc116)
                cir.yield %21 : !cir.bool loc(#loc116)
              }, false {
                %21 = cir.const #false loc(#loc116)
                cir.yield %21 : !cir.bool loc(#loc116)
              }) : (!cir.bool) -> !cir.bool loc(#loc116)
              cir.yield %20 : !cir.bool loc(#loc116)
            }, false {
              %16 = cir.const #false loc(#loc116)
              cir.yield %16 : !cir.bool loc(#loc116)
            }) : (!cir.bool) -> !cir.bool loc(#loc116)
            cir.if %15 {
              %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc121)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc123)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc123)
              %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc121)
              cir.store %20, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
              cir.scope {
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc128)
                %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc129)
                %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc287)
                %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc130)
                cir.if %25 {
                  %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc132)
                  %27 = cir.const #cir.int<1> : !s32i loc(#loc133)
                  cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc132)
                } loc(#loc288)
              } loc(#loc286)
              cir.scope {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc136)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc136)
                cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc290)
                cir.for : cond {
                  %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc138)
                  %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                  %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc139)
                  %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc291)
                  %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc140)
                  cir.condition(%27) loc(#loc140)
                } body {
                  cir.scope {
                    cir.scope {
                      %23 = cir.const #cir.int<50> : !u64i loc(#loc294)
                      %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc146)
                      %25 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc147)
                      %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc147)
                      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
                      %28 = cir.const #cir.int<1> : !u64i loc(#loc295)
                      %29 = cir.const #cir.int<50> : !u64i loc(#loc296)
                      %30 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc152)
                      %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc146)
                      %32 = cir.cmp(ne, %23, %31) : !u64i, !s32i loc(#loc297)
                      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc154)
                      cir.if %33 {
                        %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc155)
                        %35 = cir.const #cir.int<1> : !s32i loc(#loc156)
                        cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc155)
                      } loc(#loc298)
                    } loc(#loc293)
                  } loc(#loc292)
                  cir.yield loc(#loc135)
                } step {
                  %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc157)
                  %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc158)
                  cir.store %24, %3 : !u64i, !cir.ptr<!u64i> loc(#loc299)
                  cir.yield loc(#loc289)
                } loc(#loc289)
              } loc(#loc289)
              cir.scope {
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
                %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc161)
                cir.if %22 {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc163)
                  %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc164)
                } loc(#loc301)
              } loc(#loc300)
            } loc(#loc284)
          } loc(#loc281)
        } loc(#loc277)
        cir.break loc(#loc165)
      } loc(#loc276)
    } loc(#loc276)
    cir.return loc(#loc89)
  } loc(#loc271)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc303)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc171)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc175)
        cir.condition(%4) loc(#loc175)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc176)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
        cir.break loc(#loc178)
      } loc(#loc305)
    } loc(#loc305)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc181)
        cir.condition(%4) loc(#loc181)
      } do {
        cir.scope {
          %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc309)
          %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc310)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc311)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc185)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc185)
          cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc309)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc187)
          cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc310)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc189)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc189)
          cir.store %10, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
          %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc190)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc192)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc192)
          %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc190)
          cir.store %15, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc312)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc197)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc198)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc314)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc199)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc201)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc202)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
            } loc(#loc315)
          } loc(#loc313)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc205)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc205)
            cir.store %17, %3 : !u64i, !cir.ptr<!u64i> loc(#loc317)
            cir.for : cond {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc207)
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc208)
              %21 = cir.cmp(lt, %18, %20) : !u64i, !s32i loc(#loc318)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc209)
              cir.condition(%22) loc(#loc209)
            } body {
              cir.scope {
                cir.scope {
                  %18 = cir.const #cir.int<50> : !u64i loc(#loc321)
                  %19 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc215)
                  %20 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc216)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc216)
                  %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc216)
                  %23 = cir.const #cir.int<1> : !u64i loc(#loc322)
                  %24 = cir.const #cir.int<50> : !u64i loc(#loc323)
                  %25 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc221)
                  %26 = cir.call @fwrite(%22, %23, %24, %25) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc215)
                  %27 = cir.cmp(ne, %18, %26) : !u64i, !s32i loc(#loc324)
                  %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc223)
                  cir.if %28 {
                    %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc225)
                    %30 = cir.const #cir.int<1> : !s32i loc(#loc226)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc225)
                  } loc(#loc325)
                } loc(#loc320)
              } loc(#loc319)
              cir.yield loc(#loc204)
            } step {
              %18 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc227)
              %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc228)
              cir.store %19, %3 : !u64i, !cir.ptr<!u64i> loc(#loc326)
              cir.yield loc(#loc316)
            } loc(#loc316)
          } loc(#loc316)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc231)
            %17 = cir.cast(ptr_to_bool, %16 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc231)
            cir.if %17 {
              %18 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc233)
              %19 = cir.call @fclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc234)
            } loc(#loc328)
          } loc(#loc327)
        } loc(#loc308)
        cir.break loc(#loc235)
      } loc(#loc307)
    } loc(#loc307)
    cir.return loc(#loc167)
  } loc(#loc302)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":40:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":62:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":28:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":28:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":29:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":34:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":29:11)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":32:17)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":32:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":33:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":35:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":61:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":35:11)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":37:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":59:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":38:13)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":38:24)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":39:13)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":39:27)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":40:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:21)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:27)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":41:41)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:13)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":45:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:17)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:26)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":42:23)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":43:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":44:17)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":44:22)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":54:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:22)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:18)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:25)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:37)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:27)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":49:13)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:17)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":53:17)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:21)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:36)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:41)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:58)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:69)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:72)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:87)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:90)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:95)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":50:38)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":51:17)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":52:21)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":52:26)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:45)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":48:44)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":55:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":58:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":55:17)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":56:13)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":57:24)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":57:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":60:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":149:1)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":153:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":151:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":151:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":152:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":152:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":85:36)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":69:1)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":106:1)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":71:5)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":71:9)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":73:14)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":73:13)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":73:5)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":74:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":79:5)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":74:11)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":77:17)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":77:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":78:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":80:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":105:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":80:11)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":82:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":103:9)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":83:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":83:24)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":84:13)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":84:27)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":85:13)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":102:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:17)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:25)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:23)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:27)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:30)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:39)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":87:36)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":88:13)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:25)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:31)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:41)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:17)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":89:45)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:17)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":93:17)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:21)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:30)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":90:27)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":91:17)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":92:21)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":92:26)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:17)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":97:17)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:26)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:22)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:29)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:41)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:31)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":95:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:21)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:108)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:25)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:40)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:45)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:52)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:62)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:73)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:76)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:91)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:94)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:99)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:42)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:102)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":96:107)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:49)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":94:48)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":98:17)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":101:17)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":98:21)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":99:17)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":100:28)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":100:21)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":104:9)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":109:1)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":147:1)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":111:5)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":111:9)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":113:14)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":113:13)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":113:5)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":114:5)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":119:5)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":114:11)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":117:17)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":117:9)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":118:9)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":120:5)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":146:5)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":120:11)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":122:9)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":144:9)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":123:13)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":123:24)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":124:13)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":124:27)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":125:13)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":125:36)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:21)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:27)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:37)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:13)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":126:41)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:13)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":130:13)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:17)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:26)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":127:23)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":128:13)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":129:17)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":129:22)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:13)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":139:13)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:22)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:18)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:25)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:37)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:27)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":134:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:17)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":138:17)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:21)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:36)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:41)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:48)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:58)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:69)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:72)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:87)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:90)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:95)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":135:38)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":136:17)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":137:21)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":137:26)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:45)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":133:44)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":140:13)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":143:13)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":140:17)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":141:13)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":142:24)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":142:17)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_16.c":145:9)
#loc236 = loc(fused[#loc1, #loc2])
#loc237 = loc(fused[#loc4, #loc5])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc9, #loc10])
#loc240 = loc(fused[#loc12, #loc13])
#loc241 = loc(fused[#loc14, #loc15])
#loc242 = loc(fused[#loc16, #loc17])
#loc243 = loc(fused[#loc20, #loc18])
#loc244 = loc(fused[#loc21, #loc22])
#loc245 = loc(fused[#loc25, #loc24])
#loc246 = loc(fused[#loc27, #loc28])
#loc247 = loc(fused[#loc30, #loc31])
#loc248 = loc(fused[#loc32, #loc33])
#loc249 = loc(fused[#loc34, #loc35])
#loc250 = loc(fused[#loc36, #loc3])
#loc251 = loc(fused[#loc39, #loc40])
#loc252 = loc(fused[#loc41, #loc42])
#loc253 = loc(fused[#loc43, #loc44])
#loc254 = loc(fused[#loc46, #loc42])
#loc255 = loc(fused[#loc49, #loc50])
#loc256 = loc(fused[#loc52, #loc51])
#loc257 = loc(fused[#loc53, #loc54])
#loc258 = loc(fused[#loc56, #loc50])
#loc259 = loc(fused[#loc57, #loc58])
#loc260 = loc(fused[#loc59, #loc60])
#loc261 = loc(fused[#loc62, #loc63])
#loc262 = loc(fused[#loc64, #loc65])
#loc263 = loc(fused[#loc59, #loc67])
#loc264 = loc(fused[#loc69, #loc58])
#loc265 = loc(fused[#loc73, #loc72])
#loc266 = loc(fused[#loc74, #loc75])
#loc267 = loc(fused[#loc77, #loc75])
#loc268 = loc(fused[#loc81, #loc82])
#loc269 = loc(fused[#loc83, #loc84])
#loc270 = loc(fused[#loc85, #loc86])
#loc271 = loc(fused[#loc88, #loc89])
#loc272 = loc(fused[#loc90, #loc91])
#loc273 = loc(fused[#loc94, #loc92])
#loc274 = loc(fused[#loc95, #loc96])
#loc275 = loc(fused[#loc99, #loc98])
#loc276 = loc(fused[#loc101, #loc102])
#loc277 = loc(fused[#loc104, #loc105])
#loc278 = loc(fused[#loc106, #loc107])
#loc279 = loc(fused[#loc108, #loc109])
#loc280 = loc(fused[#loc110, #loc87])
#loc281 = loc(fused[#loc111, #loc112])
#loc282 = loc(fused[#loc113, #loc114])
#loc283 = loc(fused[#loc117, #loc118])
#loc284 = loc(fused[#loc120, #loc112])
#loc285 = loc(fused[#loc124, #loc125])
#loc286 = loc(fused[#loc126, #loc127])
#loc287 = loc(fused[#loc128, #loc129])
#loc288 = loc(fused[#loc131, #loc127])
#loc289 = loc(fused[#loc134, #loc135])
#loc290 = loc(fused[#loc137, #loc136])
#loc291 = loc(fused[#loc138, #loc139])
#loc292 = loc(fused[#loc141, #loc135])
#loc293 = loc(fused[#loc142, #loc143])
#loc294 = loc(fused[#loc144, #loc145])
#loc295 = loc(fused[#loc148, #loc149])
#loc296 = loc(fused[#loc150, #loc151])
#loc297 = loc(fused[#loc144, #loc153])
#loc298 = loc(fused[#loc155, #loc143])
#loc299 = loc(fused[#loc158, #loc157])
#loc300 = loc(fused[#loc159, #loc160])
#loc301 = loc(fused[#loc162, #loc160])
#loc302 = loc(fused[#loc166, #loc167])
#loc303 = loc(fused[#loc168, #loc169])
#loc304 = loc(fused[#loc172, #loc170])
#loc305 = loc(fused[#loc173, #loc174])
#loc306 = loc(fused[#loc177, #loc176])
#loc307 = loc(fused[#loc179, #loc180])
#loc308 = loc(fused[#loc182, #loc183])
#loc309 = loc(fused[#loc184, #loc185])
#loc310 = loc(fused[#loc186, #loc187])
#loc311 = loc(fused[#loc188, #loc189])
#loc312 = loc(fused[#loc193, #loc194])
#loc313 = loc(fused[#loc195, #loc196])
#loc314 = loc(fused[#loc197, #loc198])
#loc315 = loc(fused[#loc200, #loc196])
#loc316 = loc(fused[#loc203, #loc204])
#loc317 = loc(fused[#loc206, #loc205])
#loc318 = loc(fused[#loc207, #loc208])
#loc319 = loc(fused[#loc210, #loc204])
#loc320 = loc(fused[#loc211, #loc212])
#loc321 = loc(fused[#loc213, #loc214])
#loc322 = loc(fused[#loc217, #loc218])
#loc323 = loc(fused[#loc219, #loc220])
#loc324 = loc(fused[#loc213, #loc222])
#loc325 = loc(fused[#loc224, #loc212])
#loc326 = loc(fused[#loc228, #loc227])
#loc327 = loc(fused[#loc229, #loc230])
#loc328 = loc(fused[#loc232, #loc230])
