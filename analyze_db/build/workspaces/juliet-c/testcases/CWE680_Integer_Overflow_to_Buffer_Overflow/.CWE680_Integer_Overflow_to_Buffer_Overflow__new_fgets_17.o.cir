!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc143)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc146)
  cir.func private @printIntLine(!s32i) loc(#loc147)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc21)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc154)
        cir.condition(%7) loc(#loc154)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc157)
            %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc157)
            cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc157)
            cir.scope {
              %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
              %8 = cir.const #cir.int<3> : !s32i loc(#loc37)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
              %10 = cir.const #cir.int<4> : !u64i loc(#loc37)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc37)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc37)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
              %14 = cir.binop(add, %11, %13) : !u64i loc(#loc37)
              %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc37)
              %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
              %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
              %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
              %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
              %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
                cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc48)
              } loc(#loc160)
            } loc(#loc158)
          } loc(#loc156)
        } loc(#loc155)
        cir.yield loc(#loc24)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc50)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
        cir.yield loc(#loc152)
      } loc(#loc152)
    } loc(#loc152)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc164)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc165)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc166)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc58)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc167)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc168)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc169)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc62)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc63)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc170)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc69)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc173)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc72)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc174)
          cir.condition(%25) loc(#loc174)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc74)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc77)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc176)
          } loc(#loc175)
          cir.yield loc(#loc68)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc78)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc79)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc177)
          cir.yield loc(#loc172)
        } loc(#loc172)
      } loc(#loc172)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc82)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc83)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
      cir.delete.array %19 : <!s32i> loc(#loc84)
    } loc(#loc163)
    cir.return loc(#loc15)
  } loc(#loc148)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc180)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc92)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc96)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc184)
        cir.condition(%7) loc(#loc184)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<20> : !s32i loc(#loc101)
          cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc186)
        } loc(#loc185)
        cir.yield loc(#loc95)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc104)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
        cir.yield loc(#loc182)
      } loc(#loc182)
    } loc(#loc182)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc189)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc190)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc191)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc112)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc192)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc193)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc194)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc116)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc117)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc195)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc123)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc123)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc198)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc126)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc199)
          cir.condition(%25) loc(#loc199)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc128)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc130)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc131)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc201)
          } loc(#loc200)
          cir.yield loc(#loc122)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc132)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc133)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc202)
          cir.yield loc(#loc197)
        } loc(#loc197)
      } loc(#loc197)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc136)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc137)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
      cir.delete.array %19 : <!s32i> loc(#loc138)
    } loc(#loc188)
    cir.return loc(#loc86)
  } loc(#loc178)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17L7goodG2BEv() : () -> () loc(#loc141)
    cir.return loc(#loc140)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":44:27)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":61:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":28:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":29:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":29:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":31:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":31:12)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":31:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":47:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:16)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:20)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":33:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":34:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":46:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":35:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":35:49)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":37:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":45:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":37:23)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":37:36)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":37:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":37:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":37:63)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":38:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":41:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":43:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":40:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":40:24)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":40:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":40:40)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":44:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:24)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":32:23)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":48:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":60:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":49:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":49:16)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":49:26)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":50:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":50:14)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":52:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":52:28)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":52:38)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":52:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":53:37)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":26:6)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":53:28)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":53:46)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":53:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":57:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:18)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:21)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:33)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":55:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":56:29)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":56:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":56:24)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":56:25)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:40)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":54:39)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":58:22)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":58:33)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":58:34)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":58:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":59:19)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":68:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":92:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":70:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":70:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":71:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":71:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":73:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":73:12)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":73:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":78:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:16)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:20)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":75:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":77:16)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":77:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:24)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":74:23)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":79:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":91:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":80:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":80:16)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":80:26)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":81:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":81:14)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":83:21)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":83:28)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":83:38)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":83:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":84:37)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":68:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":84:28)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":84:46)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":84:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":88:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:18)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:14)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:21)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:33)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":86:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":87:29)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":87:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":87:24)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":87:25)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:40)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":85:39)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":89:22)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":89:33)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":89:34)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":89:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":90:19)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":94:1)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":97:1)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_17.cpp":96:5)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc10, #loc11])
#loc147 = loc(fused[#loc12, #loc13])
#loc148 = loc(fused[#loc14, #loc15])
#loc149 = loc(fused[#loc16, #loc17])
#loc150 = loc(fused[#loc18, #loc19])
#loc151 = loc(fused[#loc22, #loc20])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc26, #loc25])
#loc154 = loc(fused[#loc27, #loc28])
#loc155 = loc(fused[#loc29, #loc24])
#loc156 = loc(fused[#loc30, #loc31])
#loc157 = loc(fused[#loc32, #loc33])
#loc158 = loc(fused[#loc34, #loc35])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc161 = loc(fused[#loc46, #loc47])
#loc162 = loc(fused[#loc50, #loc49])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc53, #loc54])
#loc165 = loc(fused[#loc53, #loc55])
#loc166 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc59, #loc60])
#loc168 = loc(fused[#loc58, #loc60])
#loc169 = loc(fused[#loc61, #loc60])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc66, #loc65])
#loc172 = loc(fused[#loc67, #loc68])
#loc173 = loc(fused[#loc70, #loc69])
#loc174 = loc(fused[#loc71, #loc72])
#loc175 = loc(fused[#loc73, #loc68])
#loc176 = loc(fused[#loc75, #loc74])
#loc177 = loc(fused[#loc79, #loc78])
#loc178 = loc(fused[#loc85, #loc86])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc89, #loc90])
#loc181 = loc(fused[#loc93, #loc91])
#loc182 = loc(fused[#loc94, #loc95])
#loc183 = loc(fused[#loc97, #loc96])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc100, #loc95])
#loc186 = loc(fused[#loc102, #loc101])
#loc187 = loc(fused[#loc104, #loc103])
#loc188 = loc(fused[#loc105, #loc106])
#loc189 = loc(fused[#loc107, #loc108])
#loc190 = loc(fused[#loc107, #loc109])
#loc191 = loc(fused[#loc110, #loc111])
#loc192 = loc(fused[#loc113, #loc114])
#loc193 = loc(fused[#loc112, #loc114])
#loc194 = loc(fused[#loc115, #loc114])
#loc195 = loc(fused[#loc118, #loc119])
#loc196 = loc(fused[#loc120, #loc119])
#loc197 = loc(fused[#loc121, #loc122])
#loc198 = loc(fused[#loc124, #loc123])
#loc199 = loc(fused[#loc125, #loc126])
#loc200 = loc(fused[#loc127, #loc122])
#loc201 = loc(fused[#loc129, #loc128])
#loc202 = loc(fused[#loc133, #loc132])
#loc203 = loc(fused[#loc139, #loc140])
