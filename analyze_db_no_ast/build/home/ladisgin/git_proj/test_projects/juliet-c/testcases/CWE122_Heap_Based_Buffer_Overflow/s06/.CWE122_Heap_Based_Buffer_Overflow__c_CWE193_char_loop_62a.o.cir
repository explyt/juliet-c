!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc88)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc89)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc91)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc15)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc96)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc97)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc98)
      %5 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc96)
      cir.store %5, %2 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc96)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc23)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc24)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc23)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc99)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc29)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
        cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc101)
        cir.for : cond {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc31)
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc33)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc102)
          %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc103)
          cir.condition(%20) loc(#loc103)
        } body {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc34)
          %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc35)
          %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc35)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %20 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc38)
          cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc104)
          cir.yield loc(#loc28)
        } step {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc41)
          cir.store %16, %3 : !u64i, !cir.ptr<!u64i> loc(#loc105)
          cir.yield loc(#loc100)
        } loc(#loc100)
      } loc(#loc100)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    } loc(#loc95)
    cir.return loc(#loc10)
  } loc(#loc92)
  cir.func private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc106)
  cir.func internal private  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc52)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc54)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc111)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc112)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc113)
      %5 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc111)
      cir.store %5, %2 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc111)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc62)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc63)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc62)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc114)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc68)
        cir.store %14, %3 : !u64i, !cir.ptr<!u64i> loc(#loc116)
        cir.for : cond {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc72)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc72)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc117)
          %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc118)
          cir.condition(%20) loc(#loc118)
        } body {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc74)
          %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc74)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          %20 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc76)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc77)
          cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc119)
          cir.yield loc(#loc67)
        } step {
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc80)
          cir.store %16, %3 : !u64i, !cir.ptr<!u64i> loc(#loc120)
          cir.yield loc(#loc115)
        } loc(#loc115)
      } loc(#loc115)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc82)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc83)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    } loc(#loc110)
    cir.return loc(#loc49)
  } loc(#loc107)
  cir.func  @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62L7goodG2BEv() : () -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":32:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":32:28)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":34:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":52:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":36:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":36:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":37:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":37:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":38:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":39:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":51:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":40:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":40:29)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":41:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":41:16)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":41:19)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:21)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:28)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":42:34)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":48:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:18)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:14)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:21)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:25)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:37)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":47:31)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:41)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":45:40)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":49:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":49:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":50:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":50:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":59:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":59:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":61:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":79:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":63:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":63:12)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":64:12)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":64:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":65:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":66:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":78:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":67:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":67:29)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":68:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":68:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":68:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:21)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:28)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":69:34)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":75:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:37)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:30)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:23)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:18)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:19)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":74:31)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:41)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":72:40)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":76:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":76:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":77:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":77:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":81:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":84:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_62a.cpp":83:5)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc11, #loc12])
#loc94 = loc(fused[#loc14, #loc13])
#loc95 = loc(fused[#loc16, #loc17])
#loc96 = loc(fused[#loc18, #loc19])
#loc97 = loc(fused[#loc20, #loc21])
#loc98 = loc(fused[#loc20, #loc22])
#loc99 = loc(fused[#loc25, #loc26])
#loc100 = loc(fused[#loc27, #loc28])
#loc101 = loc(fused[#loc30, #loc29])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc31, #loc33])
#loc104 = loc(fused[#loc36, #loc39])
#loc105 = loc(fused[#loc41, #loc40])
#loc106 = loc(fused[#loc46, #loc47])
#loc107 = loc(fused[#loc48, #loc49])
#loc108 = loc(fused[#loc50, #loc51])
#loc109 = loc(fused[#loc53, #loc52])
#loc110 = loc(fused[#loc55, #loc56])
#loc111 = loc(fused[#loc57, #loc58])
#loc112 = loc(fused[#loc59, #loc60])
#loc113 = loc(fused[#loc59, #loc61])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc67])
#loc116 = loc(fused[#loc69, #loc68])
#loc117 = loc(fused[#loc71, #loc72])
#loc118 = loc(fused[#loc70, #loc72])
#loc119 = loc(fused[#loc75, #loc78])
#loc120 = loc(fused[#loc80, #loc79])
#loc121 = loc(fused[#loc85, #loc86])
