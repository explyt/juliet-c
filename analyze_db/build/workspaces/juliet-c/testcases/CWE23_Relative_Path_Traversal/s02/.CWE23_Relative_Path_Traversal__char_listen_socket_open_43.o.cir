!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":60:16)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":60:24)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":165:27)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":165:35)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc262 = loc(fused[#loc25, #loc26])
#loc336 = loc(fused[#loc215, #loc216])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_43L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc250)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_433badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc251)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc252)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc255)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc257)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc258)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc259)
  cir.func private @close(!s32i) -> !s32i loc(#loc260)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_439badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc25, #loc26])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc262)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc27)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc264)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc265)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc266)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc267)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc268)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc269)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc37)
      cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc267)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc39)
      cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc268)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
      cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc269)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc48)
            %16 = cir.const #cir.int<1> : !u32i loc(#loc49)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc49)
            %18 = cir.const #cir.int<6> : !u32i loc(#loc50)
            %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc50)
            %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
            cir.store %20, %4 : !s32i, !cir.ptr<!s32i> loc(#loc272)
            cir.scope {
              %77 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc57)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc274)
              cir.if %80 {
                cir.break loc(#loc59)
              } loc(#loc275)
            } loc(#loc273)
            %21 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc276)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc277)
            cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc278)
            %24 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc67)
            %26 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc279)
            %27 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc70)
            %29 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc280)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc74)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc74)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
            %34 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc281)
            cir.scope {
              %77 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %78 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc283)
              %79 = cir.const #cir.int<16> : !u64i loc(#loc284)
              %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc284)
              %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc87)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc285)
              cir.if %84 {
                cir.break loc(#loc89)
              } loc(#loc286)
            } loc(#loc282)
            cir.scope {
              %77 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %78 = cir.const #cir.int<5> : !s32i loc(#loc93)
              %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
              %80 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc95)
              %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc288)
              cir.if %82 {
                cir.break loc(#loc97)
              } loc(#loc289)
            } loc(#loc287)
            %35 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
            %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
            %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
            cir.store %38, %5 : !s32i, !cir.ptr<!s32i> loc(#loc290)
            cir.scope {
              %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc107)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc107)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc292)
              cir.if %80 {
                cir.break loc(#loc109)
              } loc(#loc293)
            } loc(#loc291)
            %39 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %40 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
            %41 = cir.load %40 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
            %42 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc113)
            %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc294)
            %45 = cir.const #cir.int<1> : !u64i loc(#loc295)
            %46 = cir.const #cir.int<4096> : !s32i loc(#loc118)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc118)
            %48 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc296)
            %50 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc120)
            %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc297)
            %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc298)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %55 = cir.call @recv(%39, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
            %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc123)
            cir.store %56, %1 : !s32i, !cir.ptr<!s32i> loc(#loc299)
            cir.scope {
              %77 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc129)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc301)
              %81 = cir.ternary(%80, true {
                %82 = cir.const #true loc(#loc130)
                cir.yield %82 : !cir.bool loc(#loc130)
              }, false {
                %82 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %83 = cir.const #cir.int<0> : !s32i loc(#loc132)
                %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc302)
                %85 = cir.ternary(%84, true {
                  %86 = cir.const #true loc(#loc130)
                  cir.yield %86 : !cir.bool loc(#loc130)
                }, false {
                  %86 = cir.const #false loc(#loc130)
                  cir.yield %86 : !cir.bool loc(#loc130)
                }) : (!cir.bool) -> !cir.bool loc(#loc130)
                cir.yield %85 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.if %81 {
                cir.break loc(#loc134)
              } loc(#loc303)
            } loc(#loc300)
            %57 = cir.const #cir.int<0> : !s8i loc(#loc135)
            %58 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
            %59 = cir.load %58 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
            %60 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %61 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc138)
            %63 = cir.const #cir.int<1> : !u64i loc(#loc304)
            %64 = cir.binop(div, %62, %63) : !u64i loc(#loc305)
            %65 = cir.binop(add, %60, %64) : !u64i loc(#loc306)
            %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc141)
            cir.store %57, %66 : !s8i, !cir.ptr<!s8i> loc(#loc307)
            %67 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
            %68 = cir.load %67 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc143)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc143)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc144)
            cir.store %71, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc308)
            cir.scope {
              %77 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
              cir.if %78 {
                %79 = cir.const #cir.int<0> : !s8i loc(#loc151)
                %80 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc311)
              } loc(#loc310)
            } loc(#loc309)
            %72 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
            %73 = cir.load %72 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %74 = cir.const #cir.int<10> : !s8i loc(#loc155)
            %75 = cir.cast(integral, %74 : !s8i), !s32i loc(#loc155)
            %76 = cir.call @strchr(%73, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc156)
            cir.store %76, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc312)
            cir.scope {
              %77 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
              cir.if %78 {
                %79 = cir.const #cir.int<0> : !s8i loc(#loc163)
                %80 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc315)
              } loc(#loc314)
            } loc(#loc313)
          } loc(#loc271)
          cir.yield loc(#loc45)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc166)
          cir.condition(%16) loc(#loc166)
        } loc(#loc270)
      } loc(#loc270)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc170)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc170)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc317)
        cir.if %18 {
          %19 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc172)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc173)
        } loc(#loc318)
      } loc(#loc316)
      cir.scope {
        %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc177)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc320)
        cir.if %18 {
          %19 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc180)
        } loc(#loc321)
      } loc(#loc319)
    } loc(#loc263)
    cir.return loc(#loc24)
  } loc(#loc261)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc322)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc324)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc251)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_433badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc251)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc251)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc325)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_439badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc189)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc327)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc195)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc196)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc328)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc197)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc198)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc329)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc199)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc330)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc204)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc205)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc206)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc332)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc209)
        } loc(#loc333)
      } loc(#loc331)
    } loc(#loc326)
    cir.return loc(#loc184)
  } loc(#loc323)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc212)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc215, #loc216])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc336)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc217)
    %1 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc218)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc212)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc212)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
    cir.return loc(#loc214)
  } loc(#loc335)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc250)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_43L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc250)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc250)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc224)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc226)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc341)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc232)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc233)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc342)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc234)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc235)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc343)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc236)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc344)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc241)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc242)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc243)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc346)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc245)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc246)
        } loc(#loc347)
      } loc(#loc345)
    } loc(#loc340)
    cir.return loc(#loc221)
  } loc(#loc337)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_43L7goodG2BEv() : () -> () loc(#loc249)
    cir.return loc(#loc248)
  } loc(#loc348)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":174:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":174:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":146:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":146:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":60:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":141:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":61:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":62:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":140:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":67:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":67:13)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":68:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":68:28)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":69:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":69:15)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":70:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":70:31)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":71:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":71:31)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":72:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":72:37)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":72:26)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":72:33)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":73:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":125:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":74:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":124:9)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":83:35)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":83:44)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":83:57)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":83:28)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":83:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":83:68)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":84:13)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":87:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":84:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":84:33)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":85:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":86:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:20)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:30)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:33)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:47)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:13)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":88:48)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":89:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":89:13)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":90:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":90:13)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":91:38)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":91:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":91:13)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":91:46)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":95:13)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:22)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:54)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:55)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:64)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:78)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":92:84)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":93:13)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":94:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":96:13)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":99:13)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":96:24)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":96:38)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":96:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":96:57)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":97:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":98:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":100:35)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":100:49)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":100:55)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":100:28)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":100:13)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":100:59)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":101:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":104:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":101:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":101:33)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":102:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":103:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:31)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:54)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:61)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:59)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:45)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:68)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:71)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:82)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:87)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:102)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:112)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:113)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:116)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:26)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":106:117)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":107:13)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":110:13)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":107:17)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":107:31)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":107:44)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":107:47)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":107:61)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":108:13)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":109:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:57)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:13)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:18)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:28)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:41)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:52)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":112:53)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":114:30)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":114:36)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":114:23)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":114:13)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":114:40)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":115:13)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":118:13)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":115:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":116:13)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":117:28)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":117:18)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":117:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":119:30)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":119:36)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":119:23)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":119:13)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":119:40)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":120:13)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":123:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":120:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":121:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":122:28)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":122:18)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":122:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":125:16)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":126:9)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":129:9)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":126:13)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":126:29)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":127:9)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":128:26)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":128:13)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":130:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":133:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":130:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":130:29)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":131:9)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":132:26)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":132:13)
#loc181 = loc("/usr/include/fcntl.h":209:1)
#loc182 = loc("/usr/include/fcntl.h":209:56)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":143:1)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":158:1)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":145:5)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":145:12)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":147:12)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":147:5)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":148:5)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":149:5)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":157:5)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":150:9)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":150:13)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:25)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:31)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:38)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:47)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:55)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:20)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:9)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":152:63)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":153:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":156:9)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":153:13)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":153:26)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":153:25)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":154:9)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":155:19)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":155:13)
#loc210 = loc("/usr/include/string.h":149:1)
#loc211 = loc("/usr/include/string.h":150:14)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":168:18)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":165:1)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":169:1)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":166:1)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":168:5)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":168:12)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":171:1)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":186:1)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":173:5)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":173:12)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":175:12)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":175:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":176:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":177:5)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":185:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":178:9)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":178:13)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:25)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:31)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:38)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:47)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:55)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:20)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:9)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":180:63)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":181:9)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":184:9)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":181:13)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":181:26)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":181:25)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":182:9)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":183:19)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":183:13)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":188:1)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":191:1)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_43.cpp":190:5)
#loc250 = loc(fused[#loc1, #loc2])
#loc251 = loc(fused[#loc3, #loc4])
#loc252 = loc(fused[#loc5, #loc6])
#loc253 = loc(fused[#loc7, #loc8])
#loc254 = loc(fused[#loc9, #loc10])
#loc255 = loc(fused[#loc11, #loc12])
#loc256 = loc(fused[#loc13, #loc14])
#loc257 = loc(fused[#loc15, #loc16])
#loc258 = loc(fused[#loc17, #loc18])
#loc259 = loc(fused[#loc19, #loc20])
#loc260 = loc(fused[#loc21, #loc22])
#loc261 = loc(fused[#loc23, #loc24])
#loc263 = loc(fused[#loc28, #loc29])
#loc264 = loc(fused[#loc30, #loc31])
#loc265 = loc(fused[#loc32, #loc33])
#loc266 = loc(fused[#loc34, #loc35])
#loc267 = loc(fused[#loc36, #loc37])
#loc268 = loc(fused[#loc38, #loc39])
#loc269 = loc(fused[#loc40, #loc41])
#loc270 = loc(fused[#loc44, #loc45])
#loc271 = loc(fused[#loc46, #loc47])
#loc272 = loc(fused[#loc52, #loc53])
#loc273 = loc(fused[#loc54, #loc55])
#loc274 = loc(fused[#loc56, #loc57])
#loc275 = loc(fused[#loc58, #loc55])
#loc276 = loc(fused[#loc60, #loc61])
#loc277 = loc(fused[#loc63, #loc64])
#loc278 = loc(fused[#loc65, #loc66])
#loc279 = loc(fused[#loc69, #loc67])
#loc280 = loc(fused[#loc73, #loc70])
#loc281 = loc(fused[#loc77, #loc78])
#loc282 = loc(fused[#loc79, #loc80])
#loc283 = loc(fused[#loc82, #loc83])
#loc284 = loc(fused[#loc84, #loc85])
#loc285 = loc(fused[#loc86, #loc87])
#loc286 = loc(fused[#loc88, #loc80])
#loc287 = loc(fused[#loc90, #loc91])
#loc288 = loc(fused[#loc94, #loc95])
#loc289 = loc(fused[#loc96, #loc91])
#loc290 = loc(fused[#loc102, #loc103])
#loc291 = loc(fused[#loc104, #loc105])
#loc292 = loc(fused[#loc106, #loc107])
#loc293 = loc(fused[#loc108, #loc105])
#loc294 = loc(fused[#loc114, #loc115])
#loc295 = loc(fused[#loc116, #loc117])
#loc296 = loc(fused[#loc118, #loc119])
#loc297 = loc(fused[#loc118, #loc120])
#loc298 = loc(fused[#loc116, #loc121])
#loc299 = loc(fused[#loc124, #loc125])
#loc300 = loc(fused[#loc126, #loc127])
#loc301 = loc(fused[#loc128, #loc129])
#loc302 = loc(fused[#loc131, #loc132])
#loc303 = loc(fused[#loc133, #loc127])
#loc304 = loc(fused[#loc139, #loc140])
#loc305 = loc(fused[#loc138, #loc140])
#loc306 = loc(fused[#loc137, #loc140])
#loc307 = loc(fused[#loc136, #loc135])
#loc308 = loc(fused[#loc145, #loc146])
#loc309 = loc(fused[#loc147, #loc148])
#loc310 = loc(fused[#loc150, #loc148])
#loc311 = loc(fused[#loc153, #loc151])
#loc312 = loc(fused[#loc157, #loc158])
#loc313 = loc(fused[#loc159, #loc160])
#loc314 = loc(fused[#loc162, #loc160])
#loc315 = loc(fused[#loc165, #loc163])
#loc316 = loc(fused[#loc167, #loc168])
#loc317 = loc(fused[#loc169, #loc170])
#loc318 = loc(fused[#loc171, #loc168])
#loc319 = loc(fused[#loc174, #loc175])
#loc320 = loc(fused[#loc176, #loc177])
#loc321 = loc(fused[#loc178, #loc175])
#loc322 = loc(fused[#loc181, #loc182])
#loc323 = loc(fused[#loc183, #loc184])
#loc324 = loc(fused[#loc185, #loc186])
#loc325 = loc(fused[#loc188, #loc187])
#loc326 = loc(fused[#loc190, #loc191])
#loc327 = loc(fused[#loc192, #loc193])
#loc328 = loc(fused[#loc195, #loc196])
#loc329 = loc(fused[#loc197, #loc198])
#loc330 = loc(fused[#loc200, #loc201])
#loc331 = loc(fused[#loc202, #loc203])
#loc332 = loc(fused[#loc204, #loc205])
#loc333 = loc(fused[#loc207, #loc203])
#loc334 = loc(fused[#loc210, #loc211])
#loc335 = loc(fused[#loc213, #loc214])
#loc337 = loc(fused[#loc220, #loc221])
#loc338 = loc(fused[#loc222, #loc223])
#loc339 = loc(fused[#loc225, #loc224])
#loc340 = loc(fused[#loc227, #loc228])
#loc341 = loc(fused[#loc229, #loc230])
#loc342 = loc(fused[#loc232, #loc233])
#loc343 = loc(fused[#loc234, #loc235])
#loc344 = loc(fused[#loc237, #loc238])
#loc345 = loc(fused[#loc239, #loc240])
#loc346 = loc(fused[#loc241, #loc242])
#loc347 = loc(fused[#loc244, #loc240])
#loc348 = loc(fused[#loc247, #loc248])
