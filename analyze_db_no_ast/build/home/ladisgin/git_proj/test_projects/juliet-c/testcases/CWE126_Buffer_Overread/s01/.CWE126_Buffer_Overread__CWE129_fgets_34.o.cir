!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType = !cir.struct<union "CWE126_Buffer_Overread__CWE129_fgets_34_unionType" {!s32i, !s32i}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc164)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc165)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc166)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc171)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc20)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc174)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc174)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc174)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc29)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc29)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc29)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc29)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc29)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc176)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc33)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc41)
        } loc(#loc177)
      } loc(#loc175)
    } loc(#loc173)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc181)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc49)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc181)
      cir.scope {
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc183)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc183)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc183)
        cir.scope {
          %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc57)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !s32i loc(#loc185)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc58)
          cir.if %14 {
            %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc62)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc63)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc63)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc63)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc64)
          } else {
            %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc65)
          } loc(#loc186)
        } loc(#loc184)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc187)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc192)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc79)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc81)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc197)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc49)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc197)
      cir.scope {
        %10 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc199)
        %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc199)
        cir.store %11, %10 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc199)
        cir.scope {
          %12 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc95)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc96)
          %14 = cir.cmp(ge, %12, %13) : !s32i, !s32i loc(#loc201)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc97)
          cir.if %15 {
            %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %17 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc102)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc102)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc102)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc103)
          } else {
            %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc104)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc104)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc105)
          } loc(#loc202)
        } loc(#loc200)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc73)
  } loc(#loc190)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.alloca !ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType, !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc205)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc114)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc208)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc208)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc208)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc123)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc123)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc123)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc123)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc123)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc123)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc123)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc123)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc125)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc210)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc127)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc132)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc135)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc135)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc136)
        } loc(#loc211)
      } loc(#loc209)
    } loc(#loc207)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc215)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE126_Buffer_Overread__CWE129_fgets_34_unionType> -> !cir.ptr<!s32i> loc(#loc49)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc215)
      cir.scope {
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc217)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc217)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc217)
        cir.scope {
          %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc150)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !s32i loc(#loc219)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc151)
          %15 = cir.ternary(%14, true {
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc153)
            %17 = cir.const #cir.int<10> : !s32i loc(#loc154)
            %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc220)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc156)
            %20 = cir.ternary(%19, true {
              %21 = cir.const #true loc(#loc152)
              cir.yield %21 : !cir.bool loc(#loc152)
            }, false {
              %21 = cir.const #false loc(#loc152)
              cir.yield %21 : !cir.bool loc(#loc152)
            }) : (!cir.bool) -> !cir.bool loc(#loc152)
            cir.yield %20 : !cir.bool loc(#loc152)
          }, false {
            %16 = cir.const #false loc(#loc152)
            cir.yield %16 : !cir.bool loc(#loc152)
          }) : (!cir.bool) -> !cir.bool loc(#loc152)
          cir.if %15 {
            %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc160)
            %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc161)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc161)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc162)
          } else {
            %16 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc106)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc106)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          } loc(#loc221)
        } loc(#loc218)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc108)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":46:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":62:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":30:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":66:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":32:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":32:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":33:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":33:55)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":35:13)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":35:12)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":35:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":36:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":48:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":37:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":37:45)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":47:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:19)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:32)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:49)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:59)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":39:56)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":40:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":43:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":45:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":42:25)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":42:20)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":42:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":42:36)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":46:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":49:26)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":24:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":49:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":50:5)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":65:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":51:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":51:28)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":25:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":52:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":64:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":53:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":53:34)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":56:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":63:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":56:17)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":56:25)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":56:22)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":57:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":59:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":61:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":58:37)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":58:30)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":58:17)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":62:17)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":139:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":143:1)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":141:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":141:13)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":142:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":142:13)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":73:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":99:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":75:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":75:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":76:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":76:55)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":78:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":78:12)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":78:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":81:12)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":81:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":82:26)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":82:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":83:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":98:5)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":84:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":84:28)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":85:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":97:9)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":86:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":86:34)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":89:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":96:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":89:17)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":89:25)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":89:22)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":90:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":92:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":94:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":91:37)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":91:30)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":91:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":95:27)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":95:17)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":133:27)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":102:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":137:1)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":104:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":104:9)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":105:5)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":105:55)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":107:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":107:12)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":107:5)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":108:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":120:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":109:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":109:45)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:9)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":119:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:19)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:32)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:49)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:59)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":111:56)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":112:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":115:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":117:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":114:25)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":114:20)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":114:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":114:36)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":118:23)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":118:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":121:26)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":121:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":122:5)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":136:5)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":123:9)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":123:28)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":124:9)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":135:9)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":125:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":125:34)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":134:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:17)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:25)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:22)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:27)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:30)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:38)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:40)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":127:35)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":128:13)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":130:13)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":132:13)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":129:37)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":129:30)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":129:17)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_34.c":133:17)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc7, #loc8])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc21, #loc19])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc24, #loc25])
#loc175 = loc(fused[#loc26, #loc27])
#loc176 = loc(fused[#loc31, #loc32])
#loc177 = loc(fused[#loc34, #loc35, #loc36, #loc27])
#loc178 = loc(fused[#loc39, #loc40])
#loc179 = loc(fused[#loc44, #loc42])
#loc180 = loc(fused[#loc45, #loc46])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc54, #loc55])
#loc185 = loc(fused[#loc56, #loc57])
#loc186 = loc(fused[#loc59, #loc60, #loc61, #loc55])
#loc187 = loc(fused[#loc66, #loc67])
#loc188 = loc(fused[#loc68, #loc69])
#loc189 = loc(fused[#loc70, #loc71])
#loc190 = loc(fused[#loc72, #loc73])
#loc191 = loc(fused[#loc74, #loc75])
#loc192 = loc(fused[#loc76, #loc77])
#loc193 = loc(fused[#loc80, #loc78])
#loc194 = loc(fused[#loc82, #loc81])
#loc195 = loc(fused[#loc84, #loc83])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90])
#loc199 = loc(fused[#loc91, #loc92])
#loc200 = loc(fused[#loc93, #loc94])
#loc201 = loc(fused[#loc95, #loc96])
#loc202 = loc(fused[#loc98, #loc99, #loc100, #loc94])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc109, #loc110])
#loc205 = loc(fused[#loc111, #loc112])
#loc206 = loc(fused[#loc115, #loc113])
#loc207 = loc(fused[#loc116, #loc117])
#loc208 = loc(fused[#loc118, #loc119])
#loc209 = loc(fused[#loc120, #loc121])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc128, #loc129, #loc130, #loc121])
#loc212 = loc(fused[#loc133, #loc134])
#loc213 = loc(fused[#loc138, #loc137])
#loc214 = loc(fused[#loc139, #loc140])
#loc215 = loc(fused[#loc141, #loc142])
#loc216 = loc(fused[#loc143, #loc144])
#loc217 = loc(fused[#loc145, #loc146])
#loc218 = loc(fused[#loc147, #loc148])
#loc219 = loc(fused[#loc149, #loc150])
#loc220 = loc(fused[#loc153, #loc155])
#loc221 = loc(fused[#loc157, #loc158, #loc159, #loc148])
