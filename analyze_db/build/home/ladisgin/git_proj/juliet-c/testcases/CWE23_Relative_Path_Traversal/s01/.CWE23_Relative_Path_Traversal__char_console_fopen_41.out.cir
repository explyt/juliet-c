!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":37:14)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":37:21)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":87:18)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":87:25)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":129:10)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":129:14)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":129:20)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":129:32)
#true = #cir.bool<true> : !cir.bool
#loc165 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc99, #loc100])
#loc214 = loc(fused[#loc144, #loc145])
#loc215 = loc(fused[#loc146, #loc147])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_41L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc160)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_413badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc161)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc163)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_417badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc167)
      %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc18)
      cir.store %2, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc167)
      %3 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc19)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
      %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc19)
      cir.store %7, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc170)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
        } loc(#loc171)
      } loc(#loc169)
    } loc(#loc166)
    cir.return loc(#loc11)
  } loc(#loc164)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc172)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_413badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_413badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc161)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc161)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc43)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc180)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc49)
      cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc180)
      cir.scope {
        %9 = cir.const #cir.int<4096> : !s32i loc(#loc53)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc53)
        %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc54)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc182)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc55)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc183)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc60)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc61)
            %19 = cir.const #cir.int<4096> : !s32i loc(#loc62)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc62)
            %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc63)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc186)
            %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc186)
            %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc174)
            %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
            %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc66)
            %28 = cir.cmp(ne, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc70)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc70)
              cir.store %31, %5 : !u64i, !cir.ptr<!u64i> loc(#loc189)
              cir.scope {
                %32 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc77)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc77)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc191)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
                  %38 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc80)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc81)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc81)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc192)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc82)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc79)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc79)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc83)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc83)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc193)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc78)
                    cir.yield %49 : !cir.bool loc(#loc78)
                  }, false {
                    %49 = cir.const #false loc(#loc78)
                    cir.yield %49 : !cir.bool loc(#loc78)
                  }) : (!cir.bool) -> !cir.bool loc(#loc78)
                  cir.yield %48 : !cir.bool loc(#loc78)
                }, false {
                  %37 = cir.const #false loc(#loc78)
                  cir.yield %37 : !cir.bool loc(#loc78)
                }) : (!cir.bool) -> !cir.bool loc(#loc78)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s8i loc(#loc85)
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
                  %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc87)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc88)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc88)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc195)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc89)
                  cir.store %37, %43 : !s8i, !cir.ptr<!s8i> loc(#loc196)
                } loc(#loc194)
              } loc(#loc190)
            } else {
              %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc90)
              %31 = cir.const #cir.int<0> : !s8i loc(#loc91)
              %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
              %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc93)
              %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc94)
              cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc197)
            } loc(#loc188)
          } loc(#loc185)
        } loc(#loc184)
      } loc(#loc181)
    } loc(#loc179)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_417badSinkEPc(%4) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.return loc(#loc40)
  } loc(#loc176)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_4111goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc99, #loc100])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc201)
      %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc105)
      cir.store %2, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
      %3 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc106)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc108)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc108)
      %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc106)
      cir.store %7, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc202)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc114)
        %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc204)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc117)
        } loc(#loc205)
      } loc(#loc203)
    } loc(#loc200)
    cir.return loc(#loc98)
  } loc(#loc198)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc120)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_41L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc160)
    %2 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_41L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc160)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc160)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc125)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc127)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc120)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc120)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc127)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_4111goodG2BSinkEPc(%9) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.return loc(#loc122)
  } loc(#loc207)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_414goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_41L7goodG2BEv() : () -> () loc(#loc133)
    cir.return loc(#loc132)
  } loc(#loc210)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc211)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc141)
  cir.func @main(%arg0: !s32i loc(fused[#loc144, #loc145]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc146, #loc147])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc143)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc149)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc150)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc150)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc151)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc138)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_414goodEv() : () -> () loc(#loc153)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc140)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_413badEv() : () -> () loc(#loc156)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc141)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc158)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %15 : !s32i loc(#loc216)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":104:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":104:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":53:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":53:37)
#loc5 = loc("/usr/include/stdio.h":264:1)
#loc6 = loc("/usr/include/stdio.h":266:3)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":42:29)
#loc8 = loc("/usr/include/stdio.h":184:1)
#loc9 = loc("/usr/include/stdio.h":184:36)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":37:1)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":48:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":38:1)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":39:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":47:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":40:9)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":40:23)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":42:17)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":42:23)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":42:9)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":42:34)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":43:9)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":46:9)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":43:13)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":43:22)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":44:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":45:20)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":45:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/stdio.h":654:1)
#loc33 = loc("/usr/include/stdio.h":655:59)
#loc34 = loc("/usr/include/stdio.h":149:1)
#loc35 = loc("/usr/include/stdio.h":149:14)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":74:27)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":50:1)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":81:1)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":52:5)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":52:12)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":54:12)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":54:5)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":55:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":79:5)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":57:9)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":57:37)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":57:26)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":57:33)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":59:9)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":78:9)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":59:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":59:26)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":59:36)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":60:9)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:13)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":77:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:23)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:28)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:27)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:43)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:56)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:66)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":62:76)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":63:13)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":71:13)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":73:13)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":66:27)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":66:34)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":66:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":66:38)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":70:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:21)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:31)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:33)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:36)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:41)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:49)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:50)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":67:55)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":68:17)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":69:39)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":69:21)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":69:26)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":69:34)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":69:35)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":74:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":76:33)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":76:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":76:22)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":76:29)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":80:13)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":80:5)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":87:1)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":98:1)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":88:1)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":89:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":97:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":90:9)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":90:23)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":92:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":92:23)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":92:29)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":92:9)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":92:34)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":93:9)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":96:9)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":93:13)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":93:22)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":94:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":95:20)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":95:13)
#loc118 = loc("/usr/include/string.h":149:1)
#loc119 = loc("/usr/include/string.h":150:14)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":107:18)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":101:1)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":109:1)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":103:5)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":103:12)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":105:12)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":105:5)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":107:5)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":107:12)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":108:17)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":108:5)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":111:1)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":114:1)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":113:5)
#loc134 = loc("/usr/include/stdlib.h":575:1)
#loc135 = loc("/usr/include/stdlib.h":575:41)
#loc136 = loc("/usr/include/time.h":76:1)
#loc137 = loc("/usr/include/time.h":76:38)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":134:15)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":136:15)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":139:15)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":141:15)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":129:1)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":144:1)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":130:1)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":132:27)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":132:22)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":132:5)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":134:5)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":135:5)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":136:5)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":139:5)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":140:5)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":141:5)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":143:12)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_41.cpp":143:5)
#loc160 = loc(fused[#loc1, #loc2])
#loc161 = loc(fused[#loc3, #loc4])
#loc162 = loc(fused[#loc5, #loc6])
#loc163 = loc(fused[#loc8, #loc9])
#loc164 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc21, #loc22])
#loc169 = loc(fused[#loc23, #loc24])
#loc170 = loc(fused[#loc25, #loc26])
#loc171 = loc(fused[#loc27, #loc24])
#loc172 = loc(fused[#loc30, #loc31])
#loc173 = loc(fused[#loc32, #loc33])
#loc174 = loc(fused[#loc34, #loc35])
#loc175 = loc(fused[#loc36, #loc37])
#loc176 = loc(fused[#loc39, #loc40])
#loc177 = loc(fused[#loc41, #loc42])
#loc178 = loc(fused[#loc44, #loc43])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc47, #loc48])
#loc181 = loc(fused[#loc51, #loc52])
#loc182 = loc(fused[#loc53, #loc54])
#loc183 = loc(fused[#loc53, #loc55])
#loc184 = loc(fused[#loc56, #loc52])
#loc185 = loc(fused[#loc57, #loc58])
#loc186 = loc(fused[#loc62, #loc63])
#loc187 = loc(fused[#loc65, #loc66])
#loc188 = loc(fused[#loc67, #loc68, #loc69, #loc58])
#loc189 = loc(fused[#loc72, #loc73])
#loc190 = loc(fused[#loc74, #loc75])
#loc191 = loc(fused[#loc76, #loc77])
#loc192 = loc(fused[#loc80, #loc81])
#loc193 = loc(fused[#loc79, #loc83])
#loc194 = loc(fused[#loc84, #loc75])
#loc195 = loc(fused[#loc87, #loc88])
#loc196 = loc(fused[#loc86, #loc85])
#loc197 = loc(fused[#loc92, #loc91])
#loc198 = loc(fused[#loc97, #loc98])
#loc200 = loc(fused[#loc102, #loc103])
#loc201 = loc(fused[#loc104, #loc105])
#loc202 = loc(fused[#loc109, #loc110])
#loc203 = loc(fused[#loc111, #loc112])
#loc204 = loc(fused[#loc113, #loc114])
#loc205 = loc(fused[#loc115, #loc112])
#loc206 = loc(fused[#loc118, #loc119])
#loc207 = loc(fused[#loc121, #loc122])
#loc208 = loc(fused[#loc123, #loc124])
#loc209 = loc(fused[#loc126, #loc125])
#loc210 = loc(fused[#loc131, #loc132])
#loc211 = loc(fused[#loc134, #loc135])
#loc212 = loc(fused[#loc136, #loc137])
#loc213 = loc(fused[#loc142, #loc143])
#loc216 = loc(fused[#loc159, #loc158])
