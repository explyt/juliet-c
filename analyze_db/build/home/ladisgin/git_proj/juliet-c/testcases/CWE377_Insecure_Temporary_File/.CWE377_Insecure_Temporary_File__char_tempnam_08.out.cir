!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc80 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":152:10)
#loc81 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":152:14)
#loc82 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":152:20)
#loc83 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":152:32)
#loc193 = loc(fused[#loc80, #loc81])
#loc194 = loc(fused[#loc82, #loc83])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_tempnam_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good2.filename = #cir.const_array<"/tmp/fileXXXXXX\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> loc(#loc162)
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"/tmp/fileXXXXXX\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> loc(#loc163)
  cir.func private @tempnam(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Temporary file was opened...now closing file\00" : !cir.array<!s8i x 45>> : !cir.array<!s8i x 45> {alignment = 1 : i64} loc(#loc13)
  cir.func private @close(!s32i) -> !s32i loc(#loc168)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc169)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_tempnam_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc172)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc22)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename"] {alignment = 8 : i64} loc(#loc175)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc176)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
          %7 = cir.call @tempnam(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
          cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
          cir.scope {
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc42)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
            } loc(#loc180)
          } loc(#loc178)
          %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc44)
          %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc46)
          %11 = cir.const #cir.int<64> : !s32i loc(#loc47)
          %12 = cir.binop(or, %10, %11) : !s32i loc(#loc181)
          %13 = cir.const #cir.int<256> : !s32i loc(#loc48)
          %14 = cir.const #cir.int<128> : !s32i loc(#loc49)
          %15 = cir.binop(or, %13, %14) : !s32i loc(#loc182)
          %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc50)
          cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc183)
          cir.scope {
            %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc57)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc185)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc13)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc59)
              %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc61)
            } loc(#loc186)
          } loc(#loc184)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
        } loc(#loc174)
      } loc(#loc173)
    } loc(#loc171)
    cir.return loc(#loc19)
  } loc(#loc170)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_tempnam_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc65)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc190)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc77)
  cir.func @main(%arg0: !s32i loc(fused[#loc80, #loc81]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc82, #loc83])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc86)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc86)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc87)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %8 = cir.get_global @CWE377_Insecure_Temporary_File__char_tempnam_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE377_Insecure_Temporary_File__char_tempnam_08_good() : () -> () loc(#loc89)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %13 = cir.get_global @CWE377_Insecure_Temporary_File__char_tempnam_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE377_Insecure_Temporary_File__char_tempnam_08_bad() : () -> () loc(#loc93)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %17 : !s32i loc(#loc197)
  } loc(#loc192)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc100)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.return %2 : !s32i loc(#loc199)
  } loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc102)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc200)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc203)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc109)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc109)
      cir.if %2 {
        %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc102)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc102)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 16>, !cir.ptr<!cir.array<!s8i x 16>>, ["filename"] {alignment = 16 : i64} loc(#loc163)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc206)
          %5 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc163)
          cir.copy %5 to %3 : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc163)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
          %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc120)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc206)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc121)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc122)
          cir.scope {
            %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc127)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc208)
            cir.if %12 {
              %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc129)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc129)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc130)
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc132)
            } loc(#loc209)
          } loc(#loc207)
        } loc(#loc205)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc106)
  } loc(#loc201)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.return %2 : !s32i loc(#loc211)
  } loc(#loc210)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc214)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc141)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc141)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 16>, !cir.ptr<!cir.array<!s8i x 16>>, ["filename"] {alignment = 16 : i64} loc(#loc162)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc217)
          %5 = cir.get_global @__const.good2.filename : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
          cir.copy %5 to %3 : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc148)
          %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc149)
          cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc217)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc151)
          cir.scope {
            %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc155)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc156)
            %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc219)
            cir.if %12 {
              %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc158)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc158)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc159)
              %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc161)
            } loc(#loc220)
          } loc(#loc218)
        } loc(#loc216)
      } loc(#loc215)
    } loc(#loc213)
    cir.return loc(#loc138)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_tempnam_08.c":0:0)
#loc1 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":123:13)
#loc2 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":123:31)
#loc3 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":103:13)
#loc4 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":103:31)
#loc5 = loc("/usr/include/stdio.h":228:1)
#loc6 = loc("/usr/include/stdio.h":229:12)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/fcntl.h":209:1)
#loc12 = loc("/usr/include/fcntl.h":209:56)
#loc13 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":80:27)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":63:1)
#loc19 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":86:1)
#loc20 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":65:5)
#loc21 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":85:5)
#loc22 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":65:8)
#loc23 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":65:26)
#loc24 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":66:5)
#loc25 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":67:9)
#loc26 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":84:9)
#loc27 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":68:13)
#loc28 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":68:20)
#loc29 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":69:13)
#loc30 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":69:17)
#loc31 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":70:32)
#loc32 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":70:38)
#loc33 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":70:24)
#loc34 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":70:13)
#loc35 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":70:42)
#loc36 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":71:13)
#loc37 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":74:13)
#loc38 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":71:17)
#loc39 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":71:29)
#loc40 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":72:13)
#loc41 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":73:17)
#loc42 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":73:22)
#loc43 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":75:23)
#loc44 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":75:13)
#loc45 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:29)
#loc46 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:39)
#loc47 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:46)
#loc48 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:55)
#loc49 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:63)
#loc50 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:24)
#loc51 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:13)
#loc52 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":77:71)
#loc53 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":78:13)
#loc54 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":82:13)
#loc55 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":78:17)
#loc56 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":78:30)
#loc57 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":78:29)
#loc58 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":79:13)
#loc59 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":80:17)
#loc60 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":81:23)
#loc61 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":81:17)
#loc62 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":83:13)
#loc63 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":83:18)
#loc64 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":137:1)
#loc65 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":141:1)
#loc66 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":139:5)
#loc67 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":139:11)
#loc68 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":140:5)
#loc69 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":140:11)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":157:15)
#loc75 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":159:15)
#loc76 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":162:15)
#loc77 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":164:15)
#loc78 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":152:1)
#loc79 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":167:1)
#loc84 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":153:1)
#loc85 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":155:27)
#loc86 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":155:22)
#loc87 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":155:5)
#loc88 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":157:5)
#loc89 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":158:5)
#loc90 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":158:58)
#loc91 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":159:5)
#loc92 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":162:5)
#loc93 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":163:5)
#loc94 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":163:57)
#loc95 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":164:5)
#loc96 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":166:12)
#loc97 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":166:5)
#loc98 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":51:1)
#loc99 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":54:1)
#loc100 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":53:12)
#loc101 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":53:5)
#loc102 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":98:19)
#loc103 = loc("/usr/include/stdlib.h":827:1)
#loc104 = loc("/usr/include/stdlib.h":827:39)
#loc105 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":93:1)
#loc106 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":115:1)
#loc107 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":95:5)
#loc108 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":114:5)
#loc109 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":95:8)
#loc110 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":95:27)
#loc111 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":96:5)
#loc112 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":99:5)
#loc113 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":101:5)
#loc114 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":98:9)
#loc115 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":102:9)
#loc116 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":113:9)
#loc117 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":106:13)
#loc118 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":106:44)
#loc119 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":106:36)
#loc120 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":106:28)
#loc121 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":107:23)
#loc122 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":107:13)
#loc123 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":108:13)
#loc124 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":112:13)
#loc125 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":108:17)
#loc126 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":108:30)
#loc127 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":108:29)
#loc128 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":109:13)
#loc129 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":110:27)
#loc130 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":110:17)
#loc131 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":111:23)
#loc132 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":111:17)
#loc133 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":56:1)
#loc134 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":59:1)
#loc135 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":58:12)
#loc136 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":58:5)
#loc137 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":118:1)
#loc138 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":135:1)
#loc139 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":120:5)
#loc140 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":134:5)
#loc141 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":120:8)
#loc142 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":120:26)
#loc143 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":121:5)
#loc144 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":122:9)
#loc145 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":133:9)
#loc146 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":126:13)
#loc147 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":126:44)
#loc148 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":126:36)
#loc149 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":126:28)
#loc150 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":127:23)
#loc151 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":127:13)
#loc152 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":128:13)
#loc153 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":132:13)
#loc154 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":128:17)
#loc155 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":128:30)
#loc156 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":128:29)
#loc157 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":129:13)
#loc158 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":130:27)
#loc159 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":130:17)
#loc160 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":131:23)
#loc161 = loc("CWE377_Insecure_Temporary_File__char_tempnam_08.c":131:17)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc9, #loc10])
#loc167 = loc(fused[#loc11, #loc12])
#loc168 = loc(fused[#loc14, #loc15])
#loc169 = loc(fused[#loc16, #loc17])
#loc170 = loc(fused[#loc18, #loc19])
#loc171 = loc(fused[#loc20, #loc21])
#loc172 = loc(fused[#loc22, #loc23])
#loc173 = loc(fused[#loc24, #loc21])
#loc174 = loc(fused[#loc25, #loc26])
#loc175 = loc(fused[#loc27, #loc28])
#loc176 = loc(fused[#loc29, #loc30])
#loc177 = loc(fused[#loc34, #loc35])
#loc178 = loc(fused[#loc36, #loc37])
#loc179 = loc(fused[#loc38, #loc39])
#loc180 = loc(fused[#loc40, #loc37])
#loc181 = loc(fused[#loc46, #loc47])
#loc182 = loc(fused[#loc48, #loc49])
#loc183 = loc(fused[#loc51, #loc52])
#loc184 = loc(fused[#loc53, #loc54])
#loc185 = loc(fused[#loc55, #loc56])
#loc186 = loc(fused[#loc58, #loc54])
#loc187 = loc(fused[#loc64, #loc65])
#loc188 = loc(fused[#loc66, #loc67])
#loc189 = loc(fused[#loc68, #loc69])
#loc190 = loc(fused[#loc70, #loc71])
#loc191 = loc(fused[#loc72, #loc73])
#loc192 = loc(fused[#loc78, #loc79])
#loc195 = loc(fused[#loc89, #loc90])
#loc196 = loc(fused[#loc93, #loc94])
#loc197 = loc(fused[#loc97, #loc96])
#loc198 = loc(fused[#loc98, #loc99])
#loc199 = loc(fused[#loc101, #loc100])
#loc200 = loc(fused[#loc103, #loc104])
#loc201 = loc(fused[#loc105, #loc106])
#loc202 = loc(fused[#loc107, #loc108])
#loc203 = loc(fused[#loc109, #loc110])
#loc204 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc205 = loc(fused[#loc115, #loc116])
#loc206 = loc(fused[#loc117, #loc118])
#loc207 = loc(fused[#loc123, #loc124])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc128, #loc124])
#loc210 = loc(fused[#loc133, #loc134])
#loc211 = loc(fused[#loc136, #loc135])
#loc212 = loc(fused[#loc137, #loc138])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc141, #loc142])
#loc215 = loc(fused[#loc143, #loc140])
#loc216 = loc(fused[#loc144, #loc145])
#loc217 = loc(fused[#loc146, #loc147])
#loc218 = loc(fused[#loc152, #loc153])
#loc219 = loc(fused[#loc154, #loc155])
#loc220 = loc(fused[#loc157, #loc153])
