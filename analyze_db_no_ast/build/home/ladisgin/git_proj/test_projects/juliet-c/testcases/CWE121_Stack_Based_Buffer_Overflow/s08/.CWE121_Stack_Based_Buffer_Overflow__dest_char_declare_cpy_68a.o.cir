!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global  external dsolocal @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc49)
  cir.func no_proto private  @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68b_badSink(...) loc(#loc50)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc52)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc53)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc54)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc15)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc56)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    %11 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc58)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc58)
    cir.call %12() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc6)
  } loc(#loc51)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc60)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc59)
  cir.global  external dsolocal @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc61)
  cir.func no_proto private  @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68b_goodG2BSink(...) loc(#loc62)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc64)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc65)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc66)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc41)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc68)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %11 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc70)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc70)
    cir.call %12() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc32)
  } loc(#loc63)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":21:8)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":27:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":27:76)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":29:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":40:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":31:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":31:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":32:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":32:26)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":33:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":33:28)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":36:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":36:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":37:15)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":37:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":37:10)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":37:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":38:76)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":38:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":39:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":39:75)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":62:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":65:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":64:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":64:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":22:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":22:8)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":47:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":47:80)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":50:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":60:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":52:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":52:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":53:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":53:26)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":54:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":54:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":56:12)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":56:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":57:15)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":57:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":57:10)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":57:11)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":58:80)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":58:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":59:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_68a.c":59:79)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc11, #loc12])
#loc55 = loc(fused[#loc14, #loc13])
#loc56 = loc(fused[#loc16, #loc15])
#loc57 = loc(fused[#loc20, #loc19])
#loc58 = loc(fused[#loc21, #loc22])
#loc59 = loc(fused[#loc23, #loc24])
#loc60 = loc(fused[#loc25, #loc26])
#loc61 = loc(fused[#loc27, #loc28])
#loc62 = loc(fused[#loc29, #loc30])
#loc63 = loc(fused[#loc31, #loc32])
#loc64 = loc(fused[#loc33, #loc34])
#loc65 = loc(fused[#loc35, #loc36])
#loc66 = loc(fused[#loc37, #loc38])
#loc67 = loc(fused[#loc40, #loc39])
#loc68 = loc(fused[#loc42, #loc41])
#loc69 = loc(fused[#loc46, #loc45])
#loc70 = loc(fused[#loc47, #loc48])
