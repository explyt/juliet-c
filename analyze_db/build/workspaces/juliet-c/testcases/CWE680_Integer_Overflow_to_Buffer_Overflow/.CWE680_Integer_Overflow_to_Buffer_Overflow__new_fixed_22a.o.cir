!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badGlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc162)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badSourceEi(!s32i) -> !s32i loc(#loc163)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc164)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_223badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc169)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc19)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %7 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badGlobalE : !cir.ptr<!s32i> loc(#loc162)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %9 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badSourceEi(%8) : (!s32i) -> !s32i loc(#loc24)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc29)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc175)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc176)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc34)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc178)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc43)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc182)
    cir.brcond %23 ^bb4, ^bb8 loc(#loc182)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc48)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc50)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    cir.br ^bb3 loc(#loc180)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc53)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc54)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    cir.delete.array %34 : <!s32i> loc(#loc55)
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc166)
  cir.global external dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.global external dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2GlobalE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1SourceEi(!s32i) -> !s32i loc(#loc188)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc192)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc193)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc72)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %7 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc186)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %9 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1SourceEi(%8) : (!s32i) -> !s32i loc(#loc77)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc82)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc198)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc199)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc87)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc201)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc202)
    cir.br ^bb2 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %18 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc93)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc204)
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc96)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc205)
    cir.brcond %23 ^bb4, ^bb8 loc(#loc205)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc101)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc92)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc103)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb3 loc(#loc203)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc106)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc107)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    cir.delete.array %34 : <!s32i> loc(#loc108)
    cir.br ^bb10 loc(#loc81)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc63)
  } loc(#loc189)
  cir.func private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2SourceEi(!s32i) -> !s32i loc(#loc209)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc121)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %7 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2GlobalE : !cir.ptr<!s32i> loc(#loc187)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %9 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2SourceEi(%8) : (!s32i) -> !s32i loc(#loc126)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc131)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc219)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc220)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc221)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc136)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc222)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc223)
    cir.br ^bb2 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %18 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc142)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.br ^bb3 loc(#loc224)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc145)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %23 ^bb4, ^bb8 loc(#loc226)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %24 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc150)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc152)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb3 loc(#loc224)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc155)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc156)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    cir.delete.array %34 : <!s32i> loc(#loc157)
    cir.br ^bb10 loc(#loc130)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc112)
  } loc(#loc210)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_224goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22L8goodG2B1Ev() : () -> () loc(#loc160)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22L8goodG2B2Ev() : () -> () loc(#loc161)
    cir.return loc(#loc159)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":26:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":26:17)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":28:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":28:23)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":30:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":51:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":38:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":38:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":38:26)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":39:9)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":39:14)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":32:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":32:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":34:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":34:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":34:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":35:17)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":35:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":36:22)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":36:12)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":36:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":36:26)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":37:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":49:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":41:21)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":41:28)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":41:38)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":41:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":42:37)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":30:6)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":42:28)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":42:46)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":42:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":46:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:18)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:14)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:21)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:33)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":44:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":45:29)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":45:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":45:24)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":45:25)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":43:39)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":47:22)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":47:33)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":47:34)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":47:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":48:19)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":59:1)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":59:22)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":60:1)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":60:22)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":63:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":63:28)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":65:1)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":86:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":73:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":73:16)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":73:26)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":74:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":74:14)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":67:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":67:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":69:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":69:12)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":69:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":70:22)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":70:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":71:27)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":71:12)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":71:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":71:31)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":72:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":84:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":76:21)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":76:28)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":76:38)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":76:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":77:37)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":65:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":77:28)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":77:46)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":77:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":81:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:18)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:33)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":79:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":80:29)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":80:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":80:24)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":80:25)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:40)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":78:39)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":82:22)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":82:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":82:34)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":82:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":83:19)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":89:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":89:28)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":91:1)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":112:1)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":99:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":99:16)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":99:26)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":100:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":100:14)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":93:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":93:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":95:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":95:12)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":95:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":96:22)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":96:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":97:27)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":97:12)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":97:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":97:31)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":98:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":110:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":102:21)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":102:28)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":102:38)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":102:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":103:37)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":91:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":103:28)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":103:46)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":103:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":107:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:18)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:14)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:21)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:33)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":105:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":106:29)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":106:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":106:24)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":106:25)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:40)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":104:39)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":108:22)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":108:33)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":108:34)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":108:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":109:19)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":114:1)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":118:1)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":116:5)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22a.cpp":117:5)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc9, #loc10])
#loc167 = loc(fused[#loc11, #loc12])
#loc168 = loc(fused[#loc11, #loc13])
#loc169 = loc(fused[#loc14, #loc15])
#loc170 = loc(fused[#loc16, #loc17])
#loc171 = loc(fused[#loc20, #loc18])
#loc172 = loc(fused[#loc22, #loc21])
#loc173 = loc(fused[#loc25, #loc26])
#loc174 = loc(fused[#loc27, #loc28])
#loc175 = loc(fused[#loc30, #loc31])
#loc176 = loc(fused[#loc29, #loc31])
#loc177 = loc(fused[#loc32, #loc31])
#loc178 = loc(fused[#loc35, #loc36])
#loc179 = loc(fused[#loc37, #loc36])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc41, #loc40])
#loc182 = loc(fused[#loc42, #loc43])
#loc183 = loc(fused[#loc44, #loc39])
#loc184 = loc(fused[#loc46, #loc45])
#loc185 = loc(fused[#loc50, #loc49])
#loc186 = loc(fused[#loc56, #loc57])
#loc187 = loc(fused[#loc58, #loc59])
#loc188 = loc(fused[#loc60, #loc61])
#loc189 = loc(fused[#loc62, #loc63])
#loc190 = loc(fused[#loc64, #loc65])
#loc191 = loc(fused[#loc64, #loc66])
#loc192 = loc(fused[#loc67, #loc68])
#loc193 = loc(fused[#loc69, #loc70])
#loc194 = loc(fused[#loc73, #loc71])
#loc195 = loc(fused[#loc75, #loc74])
#loc196 = loc(fused[#loc78, #loc79])
#loc197 = loc(fused[#loc80, #loc81])
#loc198 = loc(fused[#loc83, #loc84])
#loc199 = loc(fused[#loc82, #loc84])
#loc200 = loc(fused[#loc85, #loc84])
#loc201 = loc(fused[#loc88, #loc89])
#loc202 = loc(fused[#loc90, #loc89])
#loc203 = loc(fused[#loc91, #loc92])
#loc204 = loc(fused[#loc94, #loc93])
#loc205 = loc(fused[#loc95, #loc96])
#loc206 = loc(fused[#loc97, #loc92])
#loc207 = loc(fused[#loc99, #loc98])
#loc208 = loc(fused[#loc103, #loc102])
#loc209 = loc(fused[#loc109, #loc110])
#loc210 = loc(fused[#loc111, #loc112])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc113, #loc115])
#loc213 = loc(fused[#loc116, #loc117])
#loc214 = loc(fused[#loc118, #loc119])
#loc215 = loc(fused[#loc122, #loc120])
#loc216 = loc(fused[#loc124, #loc123])
#loc217 = loc(fused[#loc127, #loc128])
#loc218 = loc(fused[#loc129, #loc130])
#loc219 = loc(fused[#loc132, #loc133])
#loc220 = loc(fused[#loc131, #loc133])
#loc221 = loc(fused[#loc134, #loc133])
#loc222 = loc(fused[#loc137, #loc138])
#loc223 = loc(fused[#loc139, #loc138])
#loc224 = loc(fused[#loc140, #loc141])
#loc225 = loc(fused[#loc143, #loc142])
#loc226 = loc(fused[#loc144, #loc145])
#loc227 = loc(fused[#loc146, #loc141])
#loc228 = loc(fused[#loc148, #loc147])
#loc229 = loc(fused[#loc152, #loc151])
#loc230 = loc(fused[#loc158, #loc159])
