!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_new_use_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc111)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2ERKS_(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7), %arg1: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["", init, const] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    cir.store %arg1, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc3)
    %7 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc4)
    %8 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc4)
    cir.libc.memcpy %6 bytes from %8 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc112)
  cir.func private @printIntLine(!s32i) loc(#loc113)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func @_ZN43CWE758_Undefined_Behavior__class_new_use_153badEv() extra(#fn_attr2) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["pointer", init] {alignment = 8 : i64} loc(#loc118)
            %2 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data", init] {alignment = 4 : i64} loc(#loc119)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc120)
            %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc118)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc120)
            cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc21)
            cir.store %5, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc118)
            %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
            cir.call @_ZN12TwoIntsClassC2ERKS_(%2, %6) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc25)
            %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
            %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc26)
            cir.call @_ZdlPv(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc27)
            %9 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
            %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc28)
            cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc29)
            %11 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
            %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc31)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc32)
          } loc(#loc117)
          cir.break loc(#loc33)
        } loc(#loc17)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          cir.break loc(#loc36)
        } loc(#loc34)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc116)
    cir.return loc(#loc13)
  } loc(#loc115)
  cir.func linkonce_odr @_ZN12TwoIntsClassaSERKS_(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7), %arg1: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["", init, const] {alignment = 8 : i64} loc(#loc3)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["__retval"] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    cir.store %arg1, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc3)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc4)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc4)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc3)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return %10 : !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
  } loc(#loc3)
  cir.func internal private @_ZN43CWE758_Undefined_Behavior__class_new_use_15L5good1Ev() extra(#fn_attr2) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc41)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc44)
          cir.break loc(#loc45)
        } loc(#loc42)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data"] {alignment = 4 : i64} loc(#loc124)
            %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["pointer", init] {alignment = 8 : i64} loc(#loc125)
            %3 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %4 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
            cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc126)
            %5 = cir.const #cir.int<2> : !s32i loc(#loc55)
            %6 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
            cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc127)
            %7 = cir.const #cir.int<8> : !u64i loc(#loc128)
            %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc125)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc128)
            cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc52)
            cir.store %9, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc125)
            %10 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
            %11 = cir.call @_ZN12TwoIntsClassaSERKS_(%10, %1) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr1) loc(#loc59)
            cir.scope {
              %14 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data", init] {alignment = 4 : i64} loc(#loc130)
              %15 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
              cir.call @_ZN12TwoIntsClassC2ERKS_(%14, %15) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc64)
              %16 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc66)
              %18 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
              %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc67)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc68)
            } loc(#loc129)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc69)
            cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc70)
          } loc(#loc123)
          cir.break loc(#loc71)
        } loc(#loc46)
        cir.yield loc(#loc39)
      } loc(#loc39)
    } loc(#loc122)
    cir.return loc(#loc38)
  } loc(#loc121)
  cir.func internal private @_ZN43CWE758_Undefined_Behavior__class_new_use_15L5good2Ev() extra(#fn_attr2) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc76)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data"] {alignment = 4 : i64} loc(#loc134)
            %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["pointer", init] {alignment = 8 : i64} loc(#loc135)
            %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
            %4 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
            cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc136)
            %5 = cir.const #cir.int<2> : !s32i loc(#loc86)
            %6 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
            cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc137)
            %7 = cir.const #cir.int<8> : !u64i loc(#loc138)
            %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc135)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
            cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc83)
            cir.store %9, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc135)
            %10 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
            %11 = cir.call @_ZN12TwoIntsClassaSERKS_(%10, %1) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr1) loc(#loc90)
            cir.scope {
              %14 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data", init] {alignment = 4 : i64} loc(#loc140)
              %15 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
              cir.call @_ZN12TwoIntsClassC2ERKS_(%14, %15) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc95)
              %16 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc4)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc97)
              %18 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
              %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc99)
            } loc(#loc139)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc100)
            cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc101)
          } loc(#loc133)
          cir.break loc(#loc102)
        } loc(#loc77)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc105)
          cir.break loc(#loc106)
        } loc(#loc103)
        cir.yield loc(#loc74)
      } loc(#loc74)
    } loc(#loc132)
    cir.return loc(#loc73)
  } loc(#loc131)
  cir.func @_ZN43CWE758_Undefined_Behavior__class_new_use_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN43CWE758_Undefined_Behavior__class_new_use_15L5good1Ev() : () -> () loc(#loc109)
    cir.call @_ZN43CWE758_Undefined_Behavior__class_new_use_15L5good2Ev() : () -> () loc(#loc110)
    cir.return loc(#loc108)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_new_use_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc4 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":38:19)
#loc12 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":23:1)
#loc13 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":41:1)
#loc14 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":25:5)
#loc15 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":40:5)
#loc16 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":25:12)
#loc17 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":27:5)
#loc18 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":28:5)
#loc19 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":34:5)
#loc20 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":29:9)
#loc21 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":29:38)
#loc22 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":30:9)
#loc23 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":30:30)
#loc24 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":29:34)
#loc25 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":30:29)
#loc26 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":31:16)
#loc27 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":23:6)
#loc28 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":32:27)
#loc29 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":32:9)
#loc30 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc31 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":33:27)
#loc32 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":33:9)
#loc33 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":35:5)
#loc34 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":36:5)
#loc35 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":38:9)
#loc36 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":39:9)
#loc37 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":48:1)
#loc38 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":72:1)
#loc39 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":50:5)
#loc40 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":71:5)
#loc41 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":50:12)
#loc42 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":52:5)
#loc43 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":54:19)
#loc44 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":54:9)
#loc45 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":55:9)
#loc46 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":56:5)
#loc47 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":57:5)
#loc48 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":69:5)
#loc49 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":58:9)
#loc50 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":58:22)
#loc51 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":61:9)
#loc52 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":61:38)
#loc53 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":59:23)
#loc54 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":59:9)
#loc55 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":60:23)
#loc56 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":60:9)
#loc57 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":61:34)
#loc58 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":62:10)
#loc59 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":62:18)
#loc60 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":63:9)
#loc61 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":67:9)
#loc62 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":64:13)
#loc63 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":64:34)
#loc64 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":64:33)
#loc65 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":65:31)
#loc66 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":65:13)
#loc67 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":66:31)
#loc68 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":66:13)
#loc69 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":68:16)
#loc70 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":48:13)
#loc71 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":70:5)
#loc72 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":75:1)
#loc73 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":99:1)
#loc74 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":77:5)
#loc75 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":98:5)
#loc76 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":77:12)
#loc77 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":79:5)
#loc78 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":80:5)
#loc79 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":92:5)
#loc80 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":81:9)
#loc81 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":81:22)
#loc82 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":84:9)
#loc83 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":84:38)
#loc84 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":82:23)
#loc85 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":82:9)
#loc86 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":83:23)
#loc87 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":83:9)
#loc88 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":84:34)
#loc89 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":85:10)
#loc90 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":85:18)
#loc91 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":86:9)
#loc92 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":90:9)
#loc93 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":87:13)
#loc94 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":87:34)
#loc95 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":87:33)
#loc96 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":88:31)
#loc97 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":88:13)
#loc98 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":89:31)
#loc99 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":89:13)
#loc100 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":91:16)
#loc101 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":75:13)
#loc102 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":93:5)
#loc103 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":94:5)
#loc104 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":96:19)
#loc105 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":96:9)
#loc106 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":97:9)
#loc107 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":101:1)
#loc108 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":105:1)
#loc109 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":103:5)
#loc110 = loc("CWE758_Undefined_Behavior__class_new_use_15.cpp":104:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc12, #loc13])
#loc116 = loc(fused[#loc14, #loc15])
#loc117 = loc(fused[#loc18, #loc19])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc24, #loc21])
#loc121 = loc(fused[#loc37, #loc38])
#loc122 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc47, #loc48])
#loc124 = loc(fused[#loc49, #loc50])
#loc125 = loc(fused[#loc51, #loc52])
#loc126 = loc(fused[#loc54, #loc53])
#loc127 = loc(fused[#loc56, #loc55])
#loc128 = loc(fused[#loc57, #loc52])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc62, #loc63])
#loc131 = loc(fused[#loc72, #loc73])
#loc132 = loc(fused[#loc74, #loc75])
#loc133 = loc(fused[#loc78, #loc79])
#loc134 = loc(fused[#loc80, #loc81])
#loc135 = loc(fused[#loc82, #loc83])
#loc136 = loc(fused[#loc85, #loc84])
#loc137 = loc(fused[#loc87, #loc86])
#loc138 = loc(fused[#loc88, #loc83])
#loc139 = loc(fused[#loc91, #loc92])
#loc140 = loc(fused[#loc93, #loc94])
#loc141 = loc(fused[#loc107, #loc108])
