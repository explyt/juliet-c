!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":25:26)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":25:41)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":37:30)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":37:45)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":46:30)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":46:45)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc53 = loc(fused[#loc6, #loc7])
#loc60 = loc(fused[#loc21, #loc22])
#loc70 = loc(fused[#loc42, #loc43])
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc51)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_619badSourceEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc6, #loc7])) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc53)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["__retval"] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc8)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc54)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc11)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc10)
    cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc55)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %5, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc56)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
    cir.return %6 : !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
  } loc(#loc52)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc57)
  cir.func private @exit(!s32i) extra(#fn_attr2) loc(#loc58)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_6113goodG2BSourceEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc21, #loc22])) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["__retval"] {alignment = 8 : i64} loc(#loc20)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc23)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc61)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc62)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc64)
    cir.br ^bb1 loc(#loc65)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc66)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc67)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc37)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr2) loc(#loc35)
    cir.br ^bb3 loc(#loc31)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    cir.store %15, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc68)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
    cir.return %16 : !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
  } loc(#loc59)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_6113goodB2GSourceEP12TwoIntsClass(%arg0: !cir.ptr<!ty_TwoIntsClass> loc(fused[#loc42, #loc43])) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc70)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["__retval"] {alignment = 8 : i64} loc(#loc41)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc44)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc71)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc46)
    cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc72)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc49)
    cir.store %5, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc73)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    cir.return %6 : !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":25:1)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":30:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":26:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":28:12)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":28:16)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":25:16)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":28:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":29:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":29:5)
#loc15 = loc("/usr/include/stdlib.h":672:1)
#loc16 = loc("/usr/include/stdlib.h":672:45)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":37:1)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":43:1)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":38:1)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":40:28)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":40:35)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":40:39)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":40:58)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":40:59)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":40:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:33)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:9)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:17)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:23)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:24)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:30)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":41:29)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":42:12)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":42:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":46:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":51:1)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":47:1)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":49:12)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":49:16)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":46:16)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":49:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":50:12)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_61b.cpp":50:5)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc4, #loc5])
#loc54 = loc(fused[#loc9, #loc10])
#loc55 = loc(fused[#loc12, #loc10])
#loc56 = loc(fused[#loc14, #loc13])
#loc57 = loc(fused[#loc15, #loc16])
#loc58 = loc(fused[#loc17, #loc18])
#loc59 = loc(fused[#loc19, #loc20])
#loc61 = loc(fused[#loc26, #loc27])
#loc62 = loc(fused[#loc25, #loc27])
#loc63 = loc(fused[#loc24, #loc28])
#loc64 = loc(fused[#loc29, #loc28])
#loc65 = loc(fused[#loc30, #loc31])
#loc66 = loc(fused[#loc32, #loc33])
#loc67 = loc(fused[#loc34, #loc31])
#loc68 = loc(fused[#loc39, #loc38])
#loc69 = loc(fused[#loc40, #loc41])
#loc71 = loc(fused[#loc45, #loc46])
#loc72 = loc(fused[#loc48, #loc46])
#loc73 = loc(fused[#loc50, #loc49])
