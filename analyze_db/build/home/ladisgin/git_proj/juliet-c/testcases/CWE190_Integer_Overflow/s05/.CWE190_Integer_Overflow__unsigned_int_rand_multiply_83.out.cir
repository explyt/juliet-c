!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":72:10)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":72:14)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":72:20)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":72:32)
!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad = !cir.struct<class "CWE190_Integer_Overflow__unsigned_int_rand_multiply_83::CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad" {!u32i}>
!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G = !cir.struct<class "CWE190_Integer_Overflow__unsigned_int_rand_multiply_83::CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G" {!u32i}>
!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B = !cir.struct<class "CWE190_Integer_Overflow__unsigned_int_rand_multiply_83::CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B" {!u32i}>
#loc98 = loc(fused[#loc59, #loc60])
#loc99 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8358CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_badC1Ej(!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad>, !u32i) loc(#loc75)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8358CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_badD1Ev(!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad>) extra(#fn_attr) loc(#loc76)
  cir.func @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_833badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc78)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad>, ["badObject", init] {alignment = 4 : i64} loc(#loc79)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc11)
    cir.store %3, %0 : !u32i, !cir.ptr<!u32i> loc(#loc80)
    %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc13)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8358CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_badC1Ej(%1, %4) : (!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad>, !u32i) -> () loc(#loc14)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8358CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_badD1Ev(%1) : (!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_bad>) -> () extra(#fn_attr) loc(#loc76)
    cir.return loc(#loc6)
  } loc(#loc77)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2BC1Ej(!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B>, !u32i) loc(#loc81)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2BD1Ev(!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B>) extra(#fn_attr) loc(#loc82)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_83L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc84)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B>, ["goodG2BObject", init] {alignment = 4 : i64} loc(#loc85)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc25)
    cir.store %3, %0 : !u32i, !cir.ptr<!u32i> loc(#loc86)
    %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc27)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2BC1Ej(%1, %4) : (!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B>, !u32i) -> () loc(#loc28)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2BD1Ev(%1) : (!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodG2B>) -> () extra(#fn_attr) loc(#loc82)
    cir.return loc(#loc20)
  } loc(#loc83)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2GC1Ej(!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G>, !u32i) loc(#loc87)
  cir.func private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2GD1Ev(!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G>) extra(#fn_attr) loc(#loc88)
  cir.func internal private @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_83L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G>, ["goodB2GObject", init] {alignment = 4 : i64} loc(#loc91)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc39)
    cir.store %3, %0 : !u32i, !cir.ptr<!u32i> loc(#loc92)
    %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc41)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2GC1Ej(%1, %4) : (!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G>, !u32i) -> () loc(#loc42)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_8362CWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2GD1Ev(%1) : (!cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_rand_multiply_833A3ACWE190_Integer_Overflow__unsigned_int_rand_multiply_83_goodB2G>) -> () extra(#fn_attr) loc(#loc88)
    cir.return loc(#loc34)
  } loc(#loc89)
  cir.func @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_834goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_83L7goodG2BEv() : () -> () loc(#loc45)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_83L7goodB2GEv() : () -> () loc(#loc46)
    cir.return loc(#loc44)
  } loc(#loc93)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc94)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc95)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc98)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc99)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_834goodEv() : () -> () loc(#loc68)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.call @_ZN54CWE190_Integer_Overflow__unsigned_int_rand_multiply_833badEv() : () -> () loc(#loc71)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.return %15 : !s32i loc(#loc100)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":0:0)
#loc1 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":28:5)
#loc2 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":28:85)
#loc3 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":29:5)
#loc4 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":29:65)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":26:1)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":31:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":28:5)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":28:18)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":30:5)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":30:78)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":29:12)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":29:5)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":30:74)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":30:64)
#loc15 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":42:5)
#loc16 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":42:89)
#loc17 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":43:5)
#loc18 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":43:69)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":38:1)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":43:1)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":40:5)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":40:18)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":42:5)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":42:86)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":41:12)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":41:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":42:82)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":42:68)
#loc29 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":52:5)
#loc30 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":52:89)
#loc31 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":53:5)
#loc32 = loc("./CWE190_Integer_Overflow__unsigned_int_rand_multiply_83.h":53:69)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":46:1)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":51:1)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":48:5)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":48:18)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":50:5)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":50:86)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":49:12)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":49:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":50:82)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":50:68)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":53:1)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":57:1)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":55:5)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":56:5)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":77:15)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":79:15)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":82:15)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":84:15)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":72:1)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":87:1)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":73:1)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":75:27)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":75:22)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":75:5)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":77:5)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":78:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":79:5)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":82:5)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":83:5)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":84:5)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":86:12)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_rand_multiply_83a.cpp":86:5)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc12, #loc11])
#loc81 = loc(fused[#loc15, #loc16])
#loc82 = loc(fused[#loc17, #loc18])
#loc83 = loc(fused[#loc19, #loc20])
#loc84 = loc(fused[#loc21, #loc22])
#loc85 = loc(fused[#loc23, #loc24])
#loc86 = loc(fused[#loc26, #loc25])
#loc87 = loc(fused[#loc29, #loc30])
#loc88 = loc(fused[#loc31, #loc32])
#loc89 = loc(fused[#loc33, #loc34])
#loc90 = loc(fused[#loc35, #loc36])
#loc91 = loc(fused[#loc37, #loc38])
#loc92 = loc(fused[#loc40, #loc39])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc51, #loc52])
#loc97 = loc(fused[#loc57, #loc58])
#loc100 = loc(fused[#loc74, #loc73])
