!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc50)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_549badSink_bEi(!s32i) loc(#loc52)
  cir.func @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_543badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc54)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc15)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc51)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc15)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_549badSink_bEi(%9) : (!s32i) -> () loc(#loc18)
    cir.return loc(#loc9)
  } loc(#loc53)
  cir.func private @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_5413goodG2BSink_bEi(!s32i) loc(#loc56)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc58)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc28)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_5413goodG2BSink_bEi(%4) : (!s32i) -> () loc(#loc31)
    cir.return loc(#loc22)
  } loc(#loc57)
  cir.func private @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_5413goodB2GSink_bEi(!s32i) loc(#loc61)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc63)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc39)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc41)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc51)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc43)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc41)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_5413goodB2GSink_bEi(%9) : (!s32i) -> () loc(#loc45)
    cir.return loc(#loc35)
  } loc(#loc62)
  cir.func @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_544goodEv() extra(#fn_attr) {
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54L7goodG2BEv() : () -> () loc(#loc48)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54L7goodB2GEv() : () -> () loc(#loc49)
    cir.return loc(#loc47)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":34:19)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":26:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":26:24)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":28:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":36:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":30:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":30:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":32:13)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":32:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":34:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":34:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":35:15)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":35:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":43:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":43:28)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":45:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":54:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":47:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":47:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":49:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":49:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":49:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":52:12)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":52:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":53:19)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":53:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":57:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":57:28)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":59:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":67:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":61:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":61:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":63:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":63:12)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":63:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":65:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":65:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":65:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":66:19)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":66:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":69:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":73:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":71:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE129_fscanf_54a.cpp":72:5)
#loc50 = loc(fused[#loc1, #loc2])
#loc51 = loc(fused[#loc3, #loc4])
#loc52 = loc(fused[#loc6, #loc7])
#loc53 = loc(fused[#loc8, #loc9])
#loc54 = loc(fused[#loc10, #loc11])
#loc55 = loc(fused[#loc14, #loc12])
#loc56 = loc(fused[#loc19, #loc20])
#loc57 = loc(fused[#loc21, #loc22])
#loc58 = loc(fused[#loc23, #loc24])
#loc59 = loc(fused[#loc27, #loc25])
#loc60 = loc(fused[#loc29, #loc28])
#loc61 = loc(fused[#loc32, #loc33])
#loc62 = loc(fused[#loc34, #loc35])
#loc63 = loc(fused[#loc36, #loc37])
#loc64 = loc(fused[#loc40, #loc38])
#loc65 = loc(fused[#loc46, #loc47])
