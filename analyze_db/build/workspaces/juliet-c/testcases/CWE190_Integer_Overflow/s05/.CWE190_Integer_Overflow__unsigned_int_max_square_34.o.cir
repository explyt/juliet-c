!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType = !cir.record<union "CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType" {!u32i, !u32i}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printUnsignedLine(!u32i) loc(#loc93)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_square_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc95)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc96)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc97)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc98)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc13)
    cir.store %5, %2 : !u32i, !cir.ptr<!u32i> loc(#loc99)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc15)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc15)
    %8 = cir.const #cir.int<2> : !u32i loc(#loc15)
    %9 = cir.binop(mul, %7, %8) : !u32i loc(#loc15)
    %10 = cir.const #cir.int<1> : !u32i loc(#loc15)
    %11 = cir.binop(add, %9, %10) : !u32i loc(#loc15)
    cir.store %11, %2 : !u32i, !cir.ptr<!u32i> loc(#loc100)
    %12 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc17)
    %13 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType> -> !cir.ptr<!u32i> loc(#loc18)
    cir.store %12, %13 : !u32i, !cir.ptr<!u32i> loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %14 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType> -> !cir.ptr<!u32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!u32i>, !u32i loc(#loc6)
    cir.store %15, %0 : !u32i, !cir.ptr<!u32i> loc(#loc95)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc25)
    %17 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc8)
    %18 = cir.binop(mul, %16, %17) : !u32i loc(#loc104)
    cir.store %18, %1 : !u32i, !cir.ptr<!u32i> loc(#loc96)
    %19 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc26)
    cir.call @printUnsignedLine(%19) : (!u32i) -> () loc(#loc27)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc4)
  } loc(#loc94)
  cir.func no_proto @CWE190_Integer_Overflow__unsigned_int_max_square_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc106)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc105)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc109)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc110)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc111)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc112)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc44)
    cir.store %5, %2 : !u32i, !cir.ptr<!u32i> loc(#loc113)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc46)
    cir.store %7, %2 : !u32i, !cir.ptr<!u32i> loc(#loc114)
    %8 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc48)
    %9 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType> -> !cir.ptr<!u32i> loc(#loc18)
    cir.store %8, %9 : !u32i, !cir.ptr<!u32i> loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType> -> !cir.ptr<!u32i> loc(#loc22)
    %11 = cir.load %10 : !cir.ptr<!u32i>, !u32i loc(#loc37)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc109)
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc54)
    %13 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc39)
    %14 = cir.binop(mul, %12, %13) : !u32i loc(#loc118)
    cir.store %14, %1 : !u32i, !cir.ptr<!u32i> loc(#loc110)
    %15 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc55)
    cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc56)
    cir.br ^bb3 loc(#loc53)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc51)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc35)
  } loc(#loc108)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc57)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc60)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc122)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc124)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc71)
    cir.store %5, %2 : !u32i, !cir.ptr<!u32i> loc(#loc125)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc73)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc73)
    %8 = cir.const #cir.int<2> : !u32i loc(#loc73)
    %9 = cir.binop(mul, %7, %8) : !u32i loc(#loc73)
    %10 = cir.const #cir.int<1> : !u32i loc(#loc73)
    %11 = cir.binop(add, %9, %10) : !u32i loc(#loc73)
    cir.store %11, %2 : !u32i, !cir.ptr<!u32i> loc(#loc126)
    %12 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc75)
    %13 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType> -> !cir.ptr<!u32i> loc(#loc18)
    cir.store %12, %13 : !u32i, !cir.ptr<!u32i> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %14 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__unsigned_int_max_square_34_unionType> -> !cir.ptr<!u32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!u32i>, !u32i loc(#loc64)
    cir.store %15, %0 : !u32i, !cir.ptr<!u32i> loc(#loc121)
    cir.br ^bb2 loc(#loc129)
  ^bb2:  // pred: ^bb1
    %16 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc81)
    %17 = cir.cast(integral, %16 : !u32i), !s64i loc(#loc81)
    %18 = cir.cast(integral, %17 : !s64i), !s32i loc(#loc81)
    %19 = cir.abs %18 poison : !s32i loc(#loc82)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc82)
    %21 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc83)
    %22 = cir.const #cir.int<2147483647> : !s32i loc(#loc84)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc84)
    %24 = cir.const #cir.int<2> : !u32i loc(#loc84)
    %25 = cir.binop(mul, %23, %24) : !u32i loc(#loc84)
    %26 = cir.const #cir.int<1> : !u32i loc(#loc84)
    %27 = cir.binop(add, %25, %26) : !u32i loc(#loc84)
    %28 = cir.cast(int_to_float, %27 : !u32i), !cir.double loc(#loc84)
    %29 = cir.call @sqrt(%28) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc83)
    %30 = cir.cast(float_to_int, %29 : !cir.double), !s64i loc(#loc83)
    %31 = cir.cmp(lt, %20, %30) : !s64i, !cir.bool loc(#loc130)
    cir.brcond %31 ^bb3, ^bb4 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %32 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc89)
    %33 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc66)
    %34 = cir.binop(mul, %32, %33) : !u32i loc(#loc132)
    cir.store %34, %1 : !u32i, !cir.ptr<!u32i> loc(#loc122)
    %35 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc90)
    cir.call @printUnsignedLine(%35) : (!u32i) -> () loc(#loc91)
    cir.br ^bb5 loc(#loc87)
  ^bb4:  // pred: ^bb2
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc60)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb5 loc(#loc80)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc80)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc78)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc62)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc3 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":30:1)
#loc4 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":46:1)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":39:9)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":39:37)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":42:13)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":42:42)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":32:5)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":32:18)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":33:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":33:67)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":34:12)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":34:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":36:12)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":36:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":37:26)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":24:18)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":37:5)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":38:5)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":45:5)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":25:18)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":40:9)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":44:9)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":42:35)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":43:31)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":43:13)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":95:1)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":99:1)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":97:5)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":97:13)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":98:5)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":98:13)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":53:1)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":69:1)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":62:9)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":62:37)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":65:13)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":65:42)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":55:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":55:18)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":56:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":56:67)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":57:12)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":57:5)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":59:12)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":59:5)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":60:26)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":60:5)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":61:5)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":68:5)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":63:9)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":67:9)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":65:35)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":66:31)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":66:13)
#loc57 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":90:23)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":72:1)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":93:1)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":81:9)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":81:37)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":85:13)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":85:42)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":74:5)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":74:18)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":75:5)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":75:67)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":76:12)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":76:5)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":78:12)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":78:5)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":79:26)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":79:5)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":80:5)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":92:5)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":83:9)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":91:9)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":83:23)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":83:13)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":83:37)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":83:50)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":83:58)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":84:9)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":87:9)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":89:9)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":85:35)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":86:31)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":86:13)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_max_square_34.c":90:13)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc5, #loc6])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc14, #loc13])
#loc100 = loc(fused[#loc16, #loc15])
#loc101 = loc(fused[#loc19, #loc17])
#loc102 = loc(fused[#loc20, #loc21])
#loc103 = loc(fused[#loc23, #loc24])
#loc104 = loc(fused[#loc25, #loc8])
#loc105 = loc(fused[#loc28, #loc29])
#loc106 = loc(fused[#loc30, #loc31])
#loc107 = loc(fused[#loc32, #loc33])
#loc108 = loc(fused[#loc34, #loc35])
#loc109 = loc(fused[#loc36, #loc37])
#loc110 = loc(fused[#loc38, #loc39])
#loc111 = loc(fused[#loc40, #loc41])
#loc112 = loc(fused[#loc42, #loc43])
#loc113 = loc(fused[#loc45, #loc44])
#loc114 = loc(fused[#loc47, #loc46])
#loc115 = loc(fused[#loc49, #loc48])
#loc116 = loc(fused[#loc50, #loc51])
#loc117 = loc(fused[#loc52, #loc53])
#loc118 = loc(fused[#loc54, #loc39])
#loc119 = loc(fused[#loc58, #loc59])
#loc120 = loc(fused[#loc61, #loc62])
#loc121 = loc(fused[#loc63, #loc64])
#loc122 = loc(fused[#loc65, #loc66])
#loc123 = loc(fused[#loc67, #loc68])
#loc124 = loc(fused[#loc69, #loc70])
#loc125 = loc(fused[#loc72, #loc71])
#loc126 = loc(fused[#loc74, #loc73])
#loc127 = loc(fused[#loc76, #loc75])
#loc128 = loc(fused[#loc77, #loc78])
#loc129 = loc(fused[#loc79, #loc80])
#loc130 = loc(fused[#loc82, #loc85])
#loc131 = loc(fused[#loc86, #loc87, #loc88, #loc80])
#loc132 = loc(fused[#loc89, #loc66])
