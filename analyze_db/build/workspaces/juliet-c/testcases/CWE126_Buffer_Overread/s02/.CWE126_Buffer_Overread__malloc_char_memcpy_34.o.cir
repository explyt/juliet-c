!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType = !cir.record<union "CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc156)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType, !cir.ptr<!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc19)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc164)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc165)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.scope {
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
      %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc169)
      cir.if %29 {
        %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc32)
        cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc170)
    } loc(#loc168)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc34)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc35)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc35)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc39)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc41)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc41)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %25 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    cir.store %24, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %26 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc175)
      %27 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
      %28 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      cir.store %28, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
      cir.scope {
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc177)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc57)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc58)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc58)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc58)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc178)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc62)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc63)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc63)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc179)
        %44 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
        %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
        %46 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
        %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
        %48 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc68)
        %49 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
        %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc68)
        %51 = cir.const #cir.int<1> : !u64i loc(#loc180)
        %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc181)
        cir.libc.memcpy %52 bytes from %47 to %45 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc182)
        %53 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc74)
        %55 = cir.const #cir.int<100> : !s32i loc(#loc75)
        %56 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc75)
        %58 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
        %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc77)
        cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc183)
        %60 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc79)
        %61 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc80)
        %62 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
        %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        cir.call @free(%63) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc12)
  } loc(#loc160)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memcpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc84)
    cir.return loc(#loc83)
  } loc(#loc184)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType, !cir.ptr<!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc92)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc94)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc95)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc190)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc191)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
      %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
      %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
      cir.if %29 {
        %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc105)
        %31 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc107)
        cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
      } loc(#loc196)
    } loc(#loc194)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc109)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc110)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc114)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc116)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %25 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    cir.store %24, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.scope {
      %26 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %27 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE126_Buffer_Overread__malloc_char_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
      %28 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      cir.store %28, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      cir.scope {
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc203)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc130)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc131)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc131)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc131)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc135)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc135)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc136)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc136)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc138)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc205)
        %44 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
        %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
        %46 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
        %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
        %48 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc141)
        %49 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
        %50 = cir.call @strlen(%49) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc141)
        %51 = cir.const #cir.int<1> : !u64i loc(#loc206)
        %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc207)
        cir.libc.memcpy %52 bytes from %47 to %45 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc208)
        %53 = cir.const #cir.int<0> : !s32i loc(#loc147)
        %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc147)
        %55 = cir.const #cir.int<100> : !s32i loc(#loc148)
        %56 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc148)
        %58 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
        %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc150)
        cir.store %54, %59 : !s8i, !cir.ptr<!s8i> loc(#loc209)
        %60 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        %61 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc153)
        %62 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
        cir.call @free(%63) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc87)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memcpy_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":29:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":54:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":31:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":31:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":32:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":32:61)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":33:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":33:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":35:20)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":35:27)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":35:30)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":35:41)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":35:42)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":35:5)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:5)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:33)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:17)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:23)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:24)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:30)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":36:29)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":37:12)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":37:18)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":37:23)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":37:26)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":37:5)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":37:27)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":38:18)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":38:5)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":38:10)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":38:13)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":38:14)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":39:26)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":23:12)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":39:5)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":40:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":53:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":41:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":41:31)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":24:12)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":42:9)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":52:9)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":43:13)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":43:26)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":44:20)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":44:26)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":44:31)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":44:35)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":44:13)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":44:36)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":45:27)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":45:18)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":45:22)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":45:13)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:20)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:26)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:32)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:39)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:45)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:56)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:13)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":48:57)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":49:27)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":49:18)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":49:22)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":49:13)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":50:23)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":50:13)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":51:13)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":51:18)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":88:1)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":91:1)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":90:5)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":90:13)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":61:1)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":86:1)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":63:5)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":63:12)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":64:5)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":64:61)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":65:12)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":65:5)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":67:20)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":67:27)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":67:31)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":67:42)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":67:43)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":67:5)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:5)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:33)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:9)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:17)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:23)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:24)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:30)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":68:29)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":69:12)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":69:18)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":69:23)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":69:27)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":69:5)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":69:28)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":70:19)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":70:5)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":70:10)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":70:14)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":70:15)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":71:26)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":71:5)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":72:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":85:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":73:9)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":73:31)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":74:9)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":84:9)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":75:13)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":75:26)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":76:20)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":76:26)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":76:31)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":76:35)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":76:13)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":76:36)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":77:27)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":77:18)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":77:22)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":77:13)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:20)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:26)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:32)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:39)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:45)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:56)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:13)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":80:57)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":81:27)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":81:18)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":81:22)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":81:13)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":82:23)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":82:13)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":83:13)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memcpy_34.c":83:18)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc16])
#loc163 = loc(fused[#loc18, #loc17])
#loc164 = loc(fused[#loc21, #loc22])
#loc165 = loc(fused[#loc20, #loc22])
#loc166 = loc(fused[#loc19, #loc23])
#loc167 = loc(fused[#loc24, #loc23])
#loc168 = loc(fused[#loc25, #loc26])
#loc169 = loc(fused[#loc27, #loc28])
#loc170 = loc(fused[#loc29, #loc26])
#loc171 = loc(fused[#loc37, #loc38])
#loc172 = loc(fused[#loc40, #loc39])
#loc173 = loc(fused[#loc46, #loc44])
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc49, #loc50])
#loc176 = loc(fused[#loc52, #loc53])
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc60, #loc61])
#loc179 = loc(fused[#loc65, #loc62])
#loc180 = loc(fused[#loc70, #loc71])
#loc181 = loc(fused[#loc68, #loc71])
#loc182 = loc(fused[#loc72, #loc73])
#loc183 = loc(fused[#loc77, #loc74])
#loc184 = loc(fused[#loc82, #loc83])
#loc185 = loc(fused[#loc84, #loc85])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc90, #loc91])
#loc189 = loc(fused[#loc93, #loc92])
#loc190 = loc(fused[#loc96, #loc97])
#loc191 = loc(fused[#loc95, #loc97])
#loc192 = loc(fused[#loc94, #loc98])
#loc193 = loc(fused[#loc99, #loc98])
#loc194 = loc(fused[#loc100, #loc101])
#loc195 = loc(fused[#loc102, #loc103])
#loc196 = loc(fused[#loc104, #loc101])
#loc197 = loc(fused[#loc112, #loc113])
#loc198 = loc(fused[#loc115, #loc114])
#loc199 = loc(fused[#loc120, #loc119])
#loc200 = loc(fused[#loc121, #loc122])
#loc201 = loc(fused[#loc123, #loc124])
#loc202 = loc(fused[#loc125, #loc126])
#loc203 = loc(fused[#loc127, #loc128])
#loc204 = loc(fused[#loc133, #loc134])
#loc205 = loc(fused[#loc138, #loc135])
#loc206 = loc(fused[#loc143, #loc144])
#loc207 = loc(fused[#loc141, #loc144])
#loc208 = loc(fused[#loc145, #loc146])
#loc209 = loc(fused[#loc150, #loc147])
