!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN14_twoIntsStructaSERKS_(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16), %arg1: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["", init, const] {alignment = 8 : i64} loc(#loc1)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    cir.store %arg1, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc1)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc2)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc2)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc1)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    cir.return %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
  } loc(#loc1)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc133)
  cir.func @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc137)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc10)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc20)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
      cir.scope {
        %22 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc145)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc31)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc31)
            cir.store %25, %23 : !u64i, !cir.ptr<!u64i> loc(#loc147)
            cir.for : cond {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc33)
              %27 = cir.const #cir.int<100> : !s32i loc(#loc34)
              %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc34)
              %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc148)
              cir.condition(%29) loc(#loc148)
            } body {
              cir.scope {
                %26 = cir.const #cir.int<0> : !s32i loc(#loc36)
                %27 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc37)
                %28 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
                %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
                %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
                cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc150)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc39)
                %32 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc40)
                %33 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc151)
              } loc(#loc149)
              cir.yield loc(#loc30)
            } step {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc44)
              cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc152)
              cir.yield loc(#loc146)
            } loc(#loc146)
          } loc(#loc146)
        } loc(#loc144)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc154)
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc51)
            cir.store %28, %23 : !u64i, !cir.ptr<!u64i> loc(#loc156)
            cir.for : cond {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc53)
              %30 = cir.const #cir.int<100> : !s32i loc(#loc54)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc54)
              %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc157)
              cir.condition(%32) loc(#loc157)
            } body {
              cir.scope {
                %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                %30 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
                %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
                %32 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
                %33 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                %34 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
                %35 = cir.call @_ZN14_twoIntsStructaSERKS_(%34, %31) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr2) loc(#loc61)
              } loc(#loc158)
              cir.yield loc(#loc50)
            } step {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc62)
              %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc63)
              cir.store %30, %23 : !u64i, !cir.ptr<!u64i> loc(#loc159)
              cir.yield loc(#loc155)
            } loc(#loc155)
          } loc(#loc155)
          %24 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc65)
          %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
          cir.call @printStructLine(%26) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc67)
        } loc(#loc153)
      } loc(#loc142)
    } loc(#loc140)
    cir.return loc(#loc6)
  } loc(#loc134)
  cir.func internal private @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc163)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc73)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc75)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc75)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc75)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc75)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc164)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc163)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc77)
    %13 = cir.const #cir.int<8> : !u64i loc(#loc77)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc77)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.store %17, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
    %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc83)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
      cir.store %21, %19 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
      cir.scope {
        %22 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc169)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc94)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc94)
            cir.store %25, %23 : !u64i, !cir.ptr<!u64i> loc(#loc173)
            cir.for : cond {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc96)
              %27 = cir.const #cir.int<100> : !s32i loc(#loc97)
              %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc97)
              %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc174)
              cir.condition(%29) loc(#loc174)
            } body {
              cir.scope {
                %26 = cir.const #cir.int<0> : !s32i loc(#loc99)
                %27 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc100)
                %28 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
                %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
                %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
                cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc176)
                %31 = cir.const #cir.int<0> : !s32i loc(#loc102)
                %32 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc103)
                %33 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
                %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
                %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc177)
              } loc(#loc175)
              cir.yield loc(#loc93)
            } step {
              %26 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc106)
              cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc178)
              cir.yield loc(#loc172)
            } loc(#loc172)
          } loc(#loc172)
        } loc(#loc170)
        cir.scope {
          %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc180)
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc113)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc113)
            cir.store %28, %23 : !u64i, !cir.ptr<!u64i> loc(#loc182)
            cir.for : cond {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc115)
              %30 = cir.const #cir.int<100> : !s32i loc(#loc116)
              %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc116)
              %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc183)
              cir.condition(%32) loc(#loc183)
            } body {
              cir.scope {
                %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc118)
                %30 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
                %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
                %32 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
                %33 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                %34 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
                %35 = cir.call @_ZN14_twoIntsStructaSERKS_(%34, %31) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr2) loc(#loc123)
              } loc(#loc184)
              cir.yield loc(#loc112)
            } step {
              %29 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc124)
              %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc125)
              cir.store %30, %23 : !u64i, !cir.ptr<!u64i> loc(#loc185)
              cir.yield loc(#loc181)
            } loc(#loc181)
          } loc(#loc181)
          %24 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
          cir.call @printStructLine(%26) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc129)
        } loc(#loc179)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc69)
  } loc(#loc160)
  cir.func @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33L7goodG2BEv() : () -> () loc(#loc132)
    cir.return loc(#loc131)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":24:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":57:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":26:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":26:21)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":27:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":27:32)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":28:54)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":29:55)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":32:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":56:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":34:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":34:32)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":35:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":55:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":36:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":36:37)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":37:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":45:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":38:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":38:24)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:17)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":44:17)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:26)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:22)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":41:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":42:40)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":42:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":42:21)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":43:40)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":43:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":43:21)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:39)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":40:38)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":46:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":54:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":47:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":47:24)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:17)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":52:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":50:17)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":51:38)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":51:31)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":51:21)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":51:26)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":51:27)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":51:29)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:39)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":49:38)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":53:34)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":53:39)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":53:40)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":53:17)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":64:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":96:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":66:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":66:21)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":67:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":67:32)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":68:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":68:54)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":69:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":69:55)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":71:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":71:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":72:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":95:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":73:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":73:32)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":74:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":94:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":75:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":75:37)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":76:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":84:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":77:17)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":77:24)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:17)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":83:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:26)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:22)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:29)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:33)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":80:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":81:40)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":81:28)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":81:21)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":82:40)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":82:28)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":82:21)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:39)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":79:38)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":85:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":93:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":86:17)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":86:24)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:17)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":91:17)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:26)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:22)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:29)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:33)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":89:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":90:38)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":90:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":90:21)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":90:26)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":90:27)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":90:29)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:39)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":88:38)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":92:34)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":92:39)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":92:40)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":92:17)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":98:1)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":101:1)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_33.cpp":100:5)
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc16, #loc15])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc21, #loc22])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc27, #loc28])
#loc146 = loc(fused[#loc29, #loc30])
#loc147 = loc(fused[#loc32, #loc31])
#loc148 = loc(fused[#loc33, #loc34])
#loc149 = loc(fused[#loc35, #loc30])
#loc150 = loc(fused[#loc38, #loc36])
#loc151 = loc(fused[#loc41, #loc39])
#loc152 = loc(fused[#loc44, #loc43])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc52, #loc51])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc50])
#loc159 = loc(fused[#loc63, #loc62])
#loc160 = loc(fused[#loc68, #loc69])
#loc161 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc72, #loc73])
#loc163 = loc(fused[#loc74, #loc75])
#loc164 = loc(fused[#loc76, #loc77])
#loc165 = loc(fused[#loc79, #loc78])
#loc166 = loc(fused[#loc80, #loc81])
#loc167 = loc(fused[#loc82, #loc83])
#loc168 = loc(fused[#loc84, #loc85])
#loc169 = loc(fused[#loc86, #loc87])
#loc170 = loc(fused[#loc88, #loc89])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc92, #loc93])
#loc173 = loc(fused[#loc95, #loc94])
#loc174 = loc(fused[#loc96, #loc97])
#loc175 = loc(fused[#loc98, #loc93])
#loc176 = loc(fused[#loc101, #loc99])
#loc177 = loc(fused[#loc104, #loc102])
#loc178 = loc(fused[#loc106, #loc105])
#loc179 = loc(fused[#loc107, #loc108])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc112])
#loc182 = loc(fused[#loc114, #loc113])
#loc183 = loc(fused[#loc115, #loc116])
#loc184 = loc(fused[#loc117, #loc112])
#loc185 = loc(fused[#loc125, #loc124])
#loc186 = loc(fused[#loc130, #loc131])
