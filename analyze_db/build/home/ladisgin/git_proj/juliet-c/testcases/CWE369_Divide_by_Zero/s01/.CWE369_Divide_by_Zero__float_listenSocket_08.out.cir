!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:48)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":405:10)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":405:14)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":405:20)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":405:32)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:48)
#loc451 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc624 = loc(fused[#loc180, #loc181])
#loc625 = loc(fused[#loc182, #loc183])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc552)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc553)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc554)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc555)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc556)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc557)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc558)
  cir.func private @close(!s32i) -> !s32i loc(#loc559)
  cir.func private @printIntLine(!s32i) loc(#loc560)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc562)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc563)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc564)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc565)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc566)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc567)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc568)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc35)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc569)
    cir.br ^bb1 loc(#loc570)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc571)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc39)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc572)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc573)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc26)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc28)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    cir.br ^bb4 loc(#loc574)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc574)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc49)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc575)
    cir.br ^bb7 loc(#loc576)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc56)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc578)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc58)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc579)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc580)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc581)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc66)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc582)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc69)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc583)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc73)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc584)
    cir.br ^bb11 loc(#loc585)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc586)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc587)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc587)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc86)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc589)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc88)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc79)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc590)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc94)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc591)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc592)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc96)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc90)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    cir.br ^bb19 loc(#loc594)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc106)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc595)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc596)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc108)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc104)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc110)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %64 = cir.const #cir.int<20> : !s32i loc(#loc111)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %66 = cir.binop(sub, %64, %65) nsw : !s32i loc(#loc111)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc111)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %69 = cir.call @recv(%61, %63, %67, %68) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %70 = cir.cast(integral, %69 : !s64i), !s32i loc(#loc114)
    cir.store %70, %0 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    cir.br ^bb23 loc(#loc598)
  ^bb23:  // pred: ^bb22
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc120)
    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc599)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc121)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc121)
    cir.br ^bb30(%75 : !cir.bool) loc(#loc121)
  ^bb25:  // pred: ^bb23
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc600)
    cir.brcond %78 ^bb26, ^bb27 loc(#loc121)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #true loc(#loc121)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc121)
  ^bb27:  // pred: ^bb25
    %80 = cir.const #false loc(#loc121)
    cir.br ^bb28(%80 : !cir.bool) loc(#loc121)
  ^bb28(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc121)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%81 : !cir.bool) loc(#loc121)
  ^bb30(%82: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc121)
  ^bb31:  // pred: ^bb30
    cir.brcond %82 ^bb32, ^bb33 loc(#loc601)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc125)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc118)
  ^bb34:  // pred: ^bb33
    %83 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc126)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %86 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc128)
    %87 = cir.ptr_stride(%86 : !cir.ptr<!s8i>, %85 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %84, %87 : !s8i, !cir.ptr<!s8i> loc(#loc602)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc129)
    %89 = cir.call @atof(%88) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc130)
    %90 = cir.cast(floating, %89 : !cir.double), !cir.float loc(#loc130)
    cir.store %90, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc603)
    cir.br ^bb5 loc(#loc45)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc45)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc604)
  ^bb37:  // pred: ^bb36
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %93 = cir.unary(minus, %92) : !s32i, !s32i loc(#loc136)
    %94 = cir.cmp(ne, %91, %93) : !s32i, !cir.bool loc(#loc605)
    cir.brcond %94 ^bb38, ^bb39 loc(#loc606)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %96 = cir.call @close(%95) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb39 loc(#loc134)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc134)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc607)
  ^bb41:  // pred: ^bb40
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc143)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc608)
    cir.brcond %100 ^bb42, ^bb43 loc(#loc609)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc43)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc38)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc38)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc610)
  ^bb48:  // pred: ^bb47
    %103 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc611)
    %104 = cir.call %103() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc149)
    %105 = cir.cast(int_to_bool, %104 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %105 ^bb49, ^bb52 loc(#loc612)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc613)
  ^bb50:  // pred: ^bb49
    %106 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc154)
    %107 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc155)
    %108 = cir.cast(floating, %107 : !cir.float), !cir.double loc(#loc155)
    %109 = cir.binop(div, %106, %108) : !cir.double loc(#loc614)
    %110 = cir.cast(float_to_int, %109 : !cir.double), !s32i loc(#loc614)
    cir.store %110, %5 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @printIntLine(%111) : (!s32i) -> () loc(#loc157)
    cir.br ^bb51 loc(#loc153)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc148)
  ^bb52:  // 2 preds: ^bb48, ^bb51
    cir.br ^bb53 loc(#loc148)
  ^bb53:  // pred: ^bb52
    cir.return loc(#loc20)
  } loc(#loc561)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc616)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc617)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc618)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc619)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    cir.return loc(#loc159)
  } loc(#loc615)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc620)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc621)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc622)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc177)
  cir.func @main(%arg0: !s32i loc(fused[#loc180, #loc181]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc182, #loc183])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc624)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc625)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc179)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc184)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc185)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc186)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc186)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc187)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc174)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc626)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_08_good() : () -> () loc(#loc189)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc176)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc627)
    cir.call @CWE369_Divide_by_Zero__float_listenSocket_08_bad() : () -> () loc(#loc193)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc177)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc196)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc628)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc628)
    cir.return %17 : !s32i loc(#loc628)
  } loc(#loc623)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc200)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc630)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc630)
    cir.return %2 : !s32i loc(#loc630)
  } loc(#loc629)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc203)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc632)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc633)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc634)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc635)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc636)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc637)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc638)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc220)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc639)
    cir.br ^bb1 loc(#loc640)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc641)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc224)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc224)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc642)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc643)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc211)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc634)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc213)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    cir.br ^bb4 loc(#loc644)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc644)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc231)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc231)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc232)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc234)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc645)
    cir.br ^bb7 loc(#loc646)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc241)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc647)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc648)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc243)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc239)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc649)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc650)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc651)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc251)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc251)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc652)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc253)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc253)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc653)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc255)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc255)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc256)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc654)
    cir.br ^bb11 loc(#loc655)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc656)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc657)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc657)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc266)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc267)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc658)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc659)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc269)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc260)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc660)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc273)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc274)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc275)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc661)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc662)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc277)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc271)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc279)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc280)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc281)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc663)
    cir.br ^bb19 loc(#loc664)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc287)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc665)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc666)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc289)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc285)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc291)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
    %64 = cir.const #cir.int<20> : !s32i loc(#loc292)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %66 = cir.binop(sub, %64, %65) nsw : !s32i loc(#loc292)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc292)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc294)
    %69 = cir.call @recv(%61, %63, %67, %68) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
    %70 = cir.cast(integral, %69 : !s64i), !s32i loc(#loc295)
    cir.store %70, %0 : !s32i, !cir.ptr<!s32i> loc(#loc667)
    cir.br ^bb23 loc(#loc668)
  ^bb23:  // pred: ^bb22
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc301)
    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc669)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc302)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc302)
    cir.br ^bb30(%75 : !cir.bool) loc(#loc302)
  ^bb25:  // pred: ^bb23
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc304)
    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc670)
    cir.brcond %78 ^bb26, ^bb27 loc(#loc302)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #true loc(#loc302)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc302)
  ^bb27:  // pred: ^bb25
    %80 = cir.const #false loc(#loc302)
    cir.br ^bb28(%80 : !cir.bool) loc(#loc302)
  ^bb28(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc302)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%81 : !cir.bool) loc(#loc302)
  ^bb30(%82: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc302)
  ^bb31:  // pred: ^bb30
    cir.brcond %82 ^bb32, ^bb33 loc(#loc671)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc306)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc299)
  ^bb34:  // pred: ^bb33
    %83 = cir.const #cir.int<0> : !s32i loc(#loc307)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc307)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %86 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc309)
    %87 = cir.ptr_stride(%86 : !cir.ptr<!s8i>, %85 : !s32i), !cir.ptr<!s8i> loc(#loc309)
    cir.store %84, %87 : !s8i, !cir.ptr<!s8i> loc(#loc672)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc310)
    %89 = cir.call @atof(%88) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc311)
    %90 = cir.cast(floating, %89 : !cir.double), !cir.float loc(#loc311)
    cir.store %90, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc673)
    cir.br ^bb5 loc(#loc230)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc230)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc674)
  ^bb37:  // pred: ^bb36
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %93 = cir.unary(minus, %92) : !s32i, !s32i loc(#loc317)
    %94 = cir.cmp(ne, %91, %93) : !s32i, !cir.bool loc(#loc675)
    cir.brcond %94 ^bb38, ^bb39 loc(#loc676)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %96 = cir.call @close(%95) : (!s32i) -> !s32i loc(#loc320)
    cir.br ^bb39 loc(#loc315)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc315)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc677)
  ^bb41:  // pred: ^bb40
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc324)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc678)
    cir.brcond %100 ^bb42, ^bb43 loc(#loc679)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc327)
    cir.br ^bb43 loc(#loc322)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc322)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc228)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc223)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc223)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc680)
  ^bb48:  // pred: ^bb47
    %103 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc681)
    %104 = cir.call %103() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc330)
    %105 = cir.cast(int_to_bool, %104 : !s32i), !cir.bool loc(#loc330)
    cir.brcond %105 ^bb49, ^bb50 loc(#loc682)
  ^bb49:  // pred: ^bb48
    %106 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc335)
    cir.br ^bb56 loc(#loc333)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc683)
  ^bb51:  // pred: ^bb50
    %108 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc338)
    %109 = cir.cast(floating, %108 : !cir.float), !cir.double loc(#loc338)
    %110 = cir.fabs %109 : !cir.double loc(#loc338)
    %111 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc339)
    %112 = cir.cmp(gt, %110, %111) : !cir.double, !cir.bool loc(#loc684)
    cir.brcond %112 ^bb52, ^bb53 loc(#loc685)
  ^bb52:  // pred: ^bb51
    %113 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc344)
    %114 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc345)
    %115 = cir.cast(floating, %114 : !cir.float), !cir.double loc(#loc345)
    %116 = cir.binop(div, %113, %115) : !cir.double loc(#loc686)
    %117 = cir.cast(float_to_int, %116 : !cir.double), !s32i loc(#loc686)
    cir.store %117, %5 : !s32i, !cir.ptr<!s32i> loc(#loc637)
    %118 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
    cir.call @printIntLine(%118) : (!s32i) -> () loc(#loc347)
    cir.br ^bb54 loc(#loc342)
  ^bb53:  // pred: ^bb51
    %119 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc203)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%120) : (!cir.ptr<!s8i>) -> () loc(#loc348)
    cir.br ^bb54 loc(#loc337)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc337)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc329)
  ^bb56:  // 2 preds: ^bb49, ^bb55
    cir.br ^bb57 loc(#loc329)
  ^bb57:  // pred: ^bb56
    cir.return loc(#loc205)
  } loc(#loc631)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc351)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc688)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc688)
    cir.return %2 : !s32i loc(#loc688)
  } loc(#loc687)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc690)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc691)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc692)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc693)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc694)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc695)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc696)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc369)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc697)
    cir.br ^bb1 loc(#loc698)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc699)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc373)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc373)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc700)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc701)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc360)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc360)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc692)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc362)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc362)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc693)
    cir.br ^bb4 loc(#loc702)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc702)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc380)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc380)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc380)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc381)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc382)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc383)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc384)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc703)
    cir.br ^bb7 loc(#loc704)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc390)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc390)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc705)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc706)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc392)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc388)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc707)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc395)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc708)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc709)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc400)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc400)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc710)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc402)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc402)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc711)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc404)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc404)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc405)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc712)
    cir.br ^bb11 loc(#loc713)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc714)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc715)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc715)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc415)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc416)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc416)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc716)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc717)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc418)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc409)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc718)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc422)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc423)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc424)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc424)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc719)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc720)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc426)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc420)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc427)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc428)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc429)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc430)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc721)
    cir.br ^bb19 loc(#loc722)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc436)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc436)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc723)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc724)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc438)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc434)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc439)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc440)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc440)
    %64 = cir.const #cir.int<20> : !s32i loc(#loc441)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc442)
    %66 = cir.binop(sub, %64, %65) nsw : !s32i loc(#loc441)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc441)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc443)
    %69 = cir.call @recv(%61, %63, %67, %68) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc444)
    %70 = cir.cast(integral, %69 : !s64i), !s32i loc(#loc444)
    cir.store %70, %0 : !s32i, !cir.ptr<!s32i> loc(#loc725)
    cir.br ^bb23 loc(#loc726)
  ^bb23:  // pred: ^bb22
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc449)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc450)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc450)
    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc727)
    cir.brcond %74 ^bb24, ^bb25 loc(#loc451)
  ^bb24:  // pred: ^bb23
    %75 = cir.const #true loc(#loc451)
    cir.br ^bb30(%75 : !cir.bool) loc(#loc451)
  ^bb25:  // pred: ^bb23
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc453)
    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc728)
    cir.brcond %78 ^bb26, ^bb27 loc(#loc451)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #true loc(#loc451)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc451)
  ^bb27:  // pred: ^bb25
    %80 = cir.const #false loc(#loc451)
    cir.br ^bb28(%80 : !cir.bool) loc(#loc451)
  ^bb28(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc451)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%81 : !cir.bool) loc(#loc451)
  ^bb30(%82: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc451)
  ^bb31:  // pred: ^bb30
    cir.brcond %82 ^bb32, ^bb33 loc(#loc729)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc455)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc448)
  ^bb34:  // pred: ^bb33
    %83 = cir.const #cir.int<0> : !s32i loc(#loc456)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc456)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc457)
    %86 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc458)
    %87 = cir.ptr_stride(%86 : !cir.ptr<!s8i>, %85 : !s32i), !cir.ptr<!s8i> loc(#loc458)
    cir.store %84, %87 : !s8i, !cir.ptr<!s8i> loc(#loc730)
    %88 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc459)
    %89 = cir.call @atof(%88) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc460)
    %90 = cir.cast(floating, %89 : !cir.double), !cir.float loc(#loc460)
    cir.store %90, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc731)
    cir.br ^bb5 loc(#loc379)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc379)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc732)
  ^bb37:  // pred: ^bb36
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc465)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc466)
    %93 = cir.unary(minus, %92) : !s32i, !s32i loc(#loc466)
    %94 = cir.cmp(ne, %91, %93) : !s32i, !cir.bool loc(#loc733)
    cir.brcond %94 ^bb38, ^bb39 loc(#loc734)
  ^bb38:  // pred: ^bb37
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc468)
    %96 = cir.call @close(%95) : (!s32i) -> !s32i loc(#loc469)
    cir.br ^bb39 loc(#loc464)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc464)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc735)
  ^bb41:  // pred: ^bb40
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc472)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc473)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc473)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc736)
    cir.brcond %100 ^bb42, ^bb43 loc(#loc737)
  ^bb42:  // pred: ^bb41
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc475)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc476)
    cir.br ^bb43 loc(#loc471)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc471)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc377)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc372)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc372)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc738)
  ^bb48:  // pred: ^bb47
    %103 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc739)
    %104 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc479)
    %105 = cir.cast(int_to_bool, %104 : !s32i), !cir.bool loc(#loc479)
    cir.brcond %105 ^bb49, ^bb55 loc(#loc740)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc741)
  ^bb50:  // pred: ^bb49
    %106 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc484)
    %107 = cir.cast(floating, %106 : !cir.float), !cir.double loc(#loc484)
    %108 = cir.fabs %107 : !cir.double loc(#loc484)
    %109 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc485)
    %110 = cir.cmp(gt, %108, %109) : !cir.double, !cir.bool loc(#loc742)
    cir.brcond %110 ^bb51, ^bb52 loc(#loc743)
  ^bb51:  // pred: ^bb50
    %111 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc490)
    %112 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc491)
    %113 = cir.cast(floating, %112 : !cir.float), !cir.double loc(#loc491)
    %114 = cir.binop(div, %111, %113) : !cir.double loc(#loc744)
    %115 = cir.cast(float_to_int, %114 : !cir.double), !s32i loc(#loc744)
    cir.store %115, %5 : !s32i, !cir.ptr<!s32i> loc(#loc695)
    %116 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc492)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc493)
    cir.br ^bb53 loc(#loc488)
  ^bb52:  // pred: ^bb50
    %117 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc494)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc494)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc495)
    cir.br ^bb53 loc(#loc483)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc483)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc478)
  ^bb55:  // 2 preds: ^bb48, ^bb54
    cir.br ^bb56 loc(#loc478)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc354)
  } loc(#loc689)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc746)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc747)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc502)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc748)
    cir.br ^bb1 loc(#loc749)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc750)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc506)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc506)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc751)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc511)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc511)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc512)
    cir.br ^bb4 loc(#loc509)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc513)
    cir.store %8, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc752)
    cir.br ^bb4 loc(#loc505)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc505)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc753)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc754)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc517)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc517)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc755)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc756)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc522)
    %13 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc523)
    %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc523)
    %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc757)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc757)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc746)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc524)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc525)
    cir.br ^bb9 loc(#loc521)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc516)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc516)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc497)
  } loc(#loc745)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc759)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc760)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc532)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc761)
    cir.br ^bb1 loc(#loc762)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc763)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc536)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc536)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc764)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc539)
    cir.store %6, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc765)
    cir.br ^bb3 loc(#loc535)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc535)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc766)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc767)
    %8 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc543)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc543)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc768)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc769)
  ^bb7:  // pred: ^bb6
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc548)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc549)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc549)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc770)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc770)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc759)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc550)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc551)
    cir.br ^bb8 loc(#loc547)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc542)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc542)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc527)
  } loc(#loc758)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_08.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":59:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":144:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":71:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":71:17)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":72:13)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":72:32)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":73:13)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":73:35)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":74:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":74:35)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":75:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":75:45)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":140:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":140:44)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":61:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":61:11)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":63:12)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":63:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":64:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":135:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":64:8)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":64:26)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":65:5)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":66:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":134:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":76:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":119:21)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":119:20)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":85:39)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":85:48)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":85:61)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":85:32)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":85:17)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":85:72)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":86:17)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":89:17)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":86:21)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":86:37)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":87:17)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":88:21)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:24)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:25)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:34)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:37)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:51)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:17)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":90:52)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":91:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":91:17)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":92:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":92:17)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":93:42)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":93:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":93:17)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":93:50)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:17)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":97:17)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:26)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:58)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:59)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:68)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:82)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:21)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":94:88)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":95:17)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":96:21)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":98:17)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":101:17)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":98:28)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":98:42)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":98:21)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":98:61)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":99:17)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":100:21)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":102:39)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":102:53)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":102:59)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":102:32)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":102:17)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":102:63)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":103:17)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":106:17)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":103:21)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":103:37)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":104:17)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":105:21)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:35)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:49)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:62)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:80)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:83)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:30)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:17)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":109:84)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:17)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":113:17)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:21)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:35)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:51)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":110:65)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":111:17)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":112:21)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":115:43)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":115:29)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":115:17)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":117:36)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":117:31)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":117:17)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":117:47)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":120:13)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":123:13)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":120:17)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":120:33)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":121:13)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":122:30)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":122:17)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":124:13)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":127:13)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":124:17)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":124:33)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":125:13)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":126:30)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":126:17)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":136:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":143:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":136:8)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":136:26)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":137:5)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":138:9)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":142:9)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":140:32)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":140:40)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":141:26)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":141:13)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":388:1)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":394:1)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":390:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":390:14)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":391:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":391:14)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":392:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":392:14)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":393:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":393:14)
#loc168 = loc("/usr/include/stdlib.h":575:1)
#loc169 = loc("/usr/include/stdlib.h":575:41)
#loc170 = loc("/usr/include/time.h":76:1)
#loc171 = loc("/usr/include/time.h":76:38)
#loc172 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc173 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":410:15)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":412:15)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":415:15)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":417:15)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":405:1)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":420:1)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":406:1)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":408:27)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":408:22)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":408:5)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":410:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":411:5)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":411:55)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":412:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":415:5)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":416:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":416:54)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":417:5)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":419:12)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":419:5)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":47:1)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":50:1)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":49:12)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":49:5)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":231:19)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":243:23)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":151:1)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":246:1)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":163:13)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":163:17)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":164:13)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":164:32)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":165:13)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":165:35)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":166:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":166:35)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":167:13)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":167:45)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":238:13)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":238:44)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":153:5)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":153:11)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":155:12)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":155:5)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":156:5)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":227:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":156:8)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":156:26)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":157:5)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":158:9)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":226:9)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":168:13)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":211:21)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":211:20)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":177:39)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":177:48)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":177:61)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":177:32)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":177:17)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":177:72)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":178:17)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":181:17)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":178:21)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":178:37)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":179:17)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":180:21)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:24)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:25)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:34)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:37)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:51)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:17)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":182:52)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":183:38)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":183:17)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":184:43)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":184:17)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":185:42)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":185:36)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":185:17)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":185:50)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:17)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":189:17)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:26)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:58)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:59)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:68)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:82)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:21)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":186:88)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":187:17)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":188:21)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":190:17)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":193:17)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":190:28)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":190:42)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":190:21)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":190:61)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":191:17)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":192:21)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":194:39)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":194:53)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":194:59)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":194:32)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":194:17)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":194:63)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":195:17)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":198:17)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":195:21)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":195:37)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":196:17)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":197:21)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:35)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:49)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:62)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:80)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:83)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:30)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:17)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":201:84)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:17)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":205:17)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:21)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:35)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:51)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":202:65)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":203:17)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":204:21)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":207:43)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":207:29)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":207:17)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":209:36)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":209:31)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":209:17)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":209:47)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":212:13)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":215:13)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":212:17)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":212:33)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":213:13)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":214:30)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":214:17)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":216:13)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":219:13)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":216:17)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":216:33)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":217:13)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":218:30)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":218:17)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":228:5)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":245:5)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":228:8)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":228:27)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":229:5)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":232:5)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":234:5)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":231:9)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":236:9)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":244:9)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":236:17)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":236:25)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":236:12)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":237:9)
#loc342 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":240:9)
#loc343 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":242:9)
#loc344 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":238:32)
#loc345 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":238:40)
#loc346 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":239:26)
#loc347 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":239:13)
#loc348 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":243:13)
#loc349 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":52:1)
#loc350 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":55:1)
#loc351 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":54:12)
#loc352 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":54:5)
#loc353 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":249:1)
#loc354 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":339:1)
#loc355 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":261:13)
#loc356 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":261:17)
#loc357 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":262:13)
#loc358 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":262:32)
#loc359 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":263:13)
#loc360 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":263:35)
#loc361 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":264:13)
#loc362 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":264:35)
#loc363 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":265:13)
#loc364 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":265:45)
#loc365 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":331:13)
#loc366 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":331:44)
#loc367 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":251:5)
#loc368 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":251:11)
#loc369 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":253:12)
#loc370 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":253:5)
#loc371 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":254:5)
#loc372 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":325:5)
#loc373 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":254:8)
#loc374 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":254:26)
#loc375 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":255:5)
#loc376 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":256:9)
#loc377 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":324:9)
#loc378 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":266:13)
#loc379 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":309:21)
#loc380 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":309:20)
#loc381 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":275:39)
#loc382 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":275:48)
#loc383 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":275:61)
#loc384 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":275:32)
#loc385 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":275:17)
#loc386 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":275:72)
#loc387 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":276:17)
#loc388 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":279:17)
#loc389 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":276:21)
#loc390 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":276:37)
#loc391 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":277:17)
#loc392 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":278:21)
#loc393 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:24)
#loc394 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:25)
#loc395 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:34)
#loc396 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:37)
#loc397 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:51)
#loc398 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:17)
#loc399 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":280:52)
#loc400 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":281:38)
#loc401 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":281:17)
#loc402 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":282:43)
#loc403 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":282:17)
#loc404 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":283:42)
#loc405 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":283:36)
#loc406 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":283:17)
#loc407 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":283:50)
#loc408 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:17)
#loc409 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":287:17)
#loc410 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:26)
#loc411 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:58)
#loc412 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:59)
#loc413 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:68)
#loc414 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:82)
#loc415 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:21)
#loc416 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":284:88)
#loc417 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":285:17)
#loc418 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":286:21)
#loc419 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":288:17)
#loc420 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":291:17)
#loc421 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":288:28)
#loc422 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":288:42)
#loc423 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":288:21)
#loc424 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":288:61)
#loc425 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":289:17)
#loc426 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":290:21)
#loc427 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":292:39)
#loc428 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":292:53)
#loc429 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":292:59)
#loc430 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":292:32)
#loc431 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":292:17)
#loc432 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":292:63)
#loc433 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":293:17)
#loc434 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":296:17)
#loc435 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":293:21)
#loc436 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":293:37)
#loc437 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":294:17)
#loc438 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":295:21)
#loc439 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:35)
#loc440 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:49)
#loc441 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:62)
#loc442 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:80)
#loc443 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:83)
#loc444 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:30)
#loc445 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:17)
#loc446 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":299:84)
#loc447 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:17)
#loc448 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":303:17)
#loc449 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:21)
#loc450 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:35)
#loc452 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:51)
#loc453 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":300:65)
#loc454 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":301:17)
#loc455 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":302:21)
#loc456 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":305:43)
#loc457 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":305:29)
#loc458 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":305:17)
#loc459 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":307:36)
#loc460 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":307:31)
#loc461 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":307:17)
#loc462 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":307:47)
#loc463 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":310:13)
#loc464 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":313:13)
#loc465 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":310:17)
#loc466 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":310:33)
#loc467 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":311:13)
#loc468 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":312:30)
#loc469 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":312:17)
#loc470 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":314:13)
#loc471 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":317:13)
#loc472 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":314:17)
#loc473 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":314:33)
#loc474 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":315:13)
#loc475 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":316:30)
#loc476 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":316:17)
#loc477 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":326:5)
#loc478 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":338:5)
#loc479 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":326:8)
#loc480 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":326:26)
#loc481 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":327:5)
#loc482 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":329:9)
#loc483 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":337:9)
#loc484 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":329:17)
#loc485 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":329:25)
#loc486 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":329:12)
#loc487 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":330:9)
#loc488 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":333:9)
#loc489 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":335:9)
#loc490 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":331:32)
#loc491 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":331:40)
#loc492 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":332:26)
#loc493 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":332:13)
#loc494 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":336:23)
#loc495 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":336:13)
#loc496 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":342:1)
#loc497 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":365:1)
#loc498 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":361:13)
#loc499 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":361:44)
#loc500 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":344:5)
#loc501 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":344:11)
#loc502 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":346:12)
#loc503 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":346:5)
#loc504 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":347:5)
#loc505 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":356:5)
#loc506 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":347:8)
#loc507 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":347:27)
#loc508 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":348:5)
#loc509 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":351:5)
#loc510 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":353:5)
#loc511 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":350:19)
#loc512 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":350:9)
#loc513 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":355:16)
#loc514 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":355:9)
#loc515 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":357:5)
#loc516 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":364:5)
#loc517 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":357:8)
#loc518 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":357:26)
#loc519 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":358:5)
#loc520 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":359:9)
#loc521 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":363:9)
#loc522 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":361:32)
#loc523 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":361:40)
#loc524 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":362:26)
#loc525 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":362:13)
#loc526 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":368:1)
#loc527 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":386:1)
#loc528 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":382:13)
#loc529 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":382:44)
#loc530 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":370:5)
#loc531 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":370:11)
#loc532 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":372:12)
#loc533 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":372:5)
#loc534 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":373:5)
#loc535 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":377:5)
#loc536 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":373:8)
#loc537 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":373:26)
#loc538 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":374:5)
#loc539 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":376:16)
#loc540 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":376:9)
#loc541 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":378:5)
#loc542 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":385:5)
#loc543 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":378:8)
#loc544 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":378:26)
#loc545 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":379:5)
#loc546 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":380:9)
#loc547 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":384:9)
#loc548 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":382:32)
#loc549 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":382:40)
#loc550 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":383:26)
#loc551 = loc("CWE369_Divide_by_Zero__float_listenSocket_08.c":383:13)
#loc552 = loc(fused[#loc1, #loc2])
#loc553 = loc(fused[#loc3, #loc4])
#loc554 = loc(fused[#loc5, #loc6])
#loc555 = loc(fused[#loc7, #loc8])
#loc556 = loc(fused[#loc9, #loc10])
#loc557 = loc(fused[#loc11, #loc12])
#loc558 = loc(fused[#loc13, #loc14])
#loc559 = loc(fused[#loc15, #loc16])
#loc560 = loc(fused[#loc17, #loc18])
#loc561 = loc(fused[#loc19, #loc20])
#loc562 = loc(fused[#loc21, #loc22])
#loc563 = loc(fused[#loc23, #loc24])
#loc564 = loc(fused[#loc25, #loc26])
#loc565 = loc(fused[#loc27, #loc28])
#loc566 = loc(fused[#loc29, #loc30])
#loc567 = loc(fused[#loc31, #loc32])
#loc568 = loc(fused[#loc33, #loc34])
#loc569 = loc(fused[#loc36, #loc35])
#loc570 = loc(fused[#loc37, #loc38])
#loc571 = loc(fused[#loc39, #loc40])
#loc572 = loc(fused[#loc41, #loc38])
#loc573 = loc(fused[#loc42, #loc43])
#loc574 = loc(fused[#loc44, #loc45])
#loc575 = loc(fused[#loc51, #loc52])
#loc576 = loc(fused[#loc53, #loc54])
#loc577 = loc(fused[#loc55, #loc56])
#loc578 = loc(fused[#loc57, #loc54])
#loc579 = loc(fused[#loc59, #loc60])
#loc580 = loc(fused[#loc62, #loc63])
#loc581 = loc(fused[#loc64, #loc65])
#loc582 = loc(fused[#loc68, #loc66])
#loc583 = loc(fused[#loc72, #loc69])
#loc584 = loc(fused[#loc76, #loc77])
#loc585 = loc(fused[#loc78, #loc79])
#loc586 = loc(fused[#loc81, #loc82])
#loc587 = loc(fused[#loc83, #loc84])
#loc588 = loc(fused[#loc85, #loc86])
#loc589 = loc(fused[#loc87, #loc79])
#loc590 = loc(fused[#loc89, #loc90])
#loc591 = loc(fused[#loc93, #loc94])
#loc592 = loc(fused[#loc95, #loc90])
#loc593 = loc(fused[#loc101, #loc102])
#loc594 = loc(fused[#loc103, #loc104])
#loc595 = loc(fused[#loc105, #loc106])
#loc596 = loc(fused[#loc107, #loc104])
#loc597 = loc(fused[#loc115, #loc116])
#loc598 = loc(fused[#loc117, #loc118])
#loc599 = loc(fused[#loc119, #loc120])
#loc600 = loc(fused[#loc122, #loc123])
#loc601 = loc(fused[#loc124, #loc118])
#loc602 = loc(fused[#loc128, #loc126])
#loc603 = loc(fused[#loc131, #loc132])
#loc604 = loc(fused[#loc133, #loc134])
#loc605 = loc(fused[#loc135, #loc136])
#loc606 = loc(fused[#loc137, #loc134])
#loc607 = loc(fused[#loc140, #loc141])
#loc608 = loc(fused[#loc142, #loc143])
#loc609 = loc(fused[#loc144, #loc141])
#loc610 = loc(fused[#loc147, #loc148])
#loc611 = loc(fused[#loc149, #loc150])
#loc612 = loc(fused[#loc151, #loc148])
#loc613 = loc(fused[#loc152, #loc153])
#loc614 = loc(fused[#loc154, #loc155])
#loc615 = loc(fused[#loc158, #loc159])
#loc616 = loc(fused[#loc160, #loc161])
#loc617 = loc(fused[#loc162, #loc163])
#loc618 = loc(fused[#loc164, #loc165])
#loc619 = loc(fused[#loc166, #loc167])
#loc620 = loc(fused[#loc168, #loc169])
#loc621 = loc(fused[#loc170, #loc171])
#loc622 = loc(fused[#loc172, #loc173])
#loc623 = loc(fused[#loc178, #loc179])
#loc626 = loc(fused[#loc189, #loc190])
#loc627 = loc(fused[#loc193, #loc194])
#loc628 = loc(fused[#loc197, #loc196])
#loc629 = loc(fused[#loc198, #loc199])
#loc630 = loc(fused[#loc201, #loc200])
#loc631 = loc(fused[#loc204, #loc205])
#loc632 = loc(fused[#loc206, #loc207])
#loc633 = loc(fused[#loc208, #loc209])
#loc634 = loc(fused[#loc210, #loc211])
#loc635 = loc(fused[#loc212, #loc213])
#loc636 = loc(fused[#loc214, #loc215])
#loc637 = loc(fused[#loc216, #loc217])
#loc638 = loc(fused[#loc218, #loc219])
#loc639 = loc(fused[#loc221, #loc220])
#loc640 = loc(fused[#loc222, #loc223])
#loc641 = loc(fused[#loc224, #loc225])
#loc642 = loc(fused[#loc226, #loc223])
#loc643 = loc(fused[#loc227, #loc228])
#loc644 = loc(fused[#loc229, #loc230])
#loc645 = loc(fused[#loc236, #loc237])
#loc646 = loc(fused[#loc238, #loc239])
#loc647 = loc(fused[#loc240, #loc241])
#loc648 = loc(fused[#loc242, #loc239])
#loc649 = loc(fused[#loc244, #loc245])
#loc650 = loc(fused[#loc247, #loc248])
#loc651 = loc(fused[#loc249, #loc250])
#loc652 = loc(fused[#loc252, #loc251])
#loc653 = loc(fused[#loc254, #loc253])
#loc654 = loc(fused[#loc257, #loc258])
#loc655 = loc(fused[#loc259, #loc260])
#loc656 = loc(fused[#loc262, #loc263])
#loc657 = loc(fused[#loc264, #loc265])
#loc658 = loc(fused[#loc266, #loc267])
#loc659 = loc(fused[#loc268, #loc260])
#loc660 = loc(fused[#loc270, #loc271])
#loc661 = loc(fused[#loc274, #loc275])
#loc662 = loc(fused[#loc276, #loc271])
#loc663 = loc(fused[#loc282, #loc283])
#loc664 = loc(fused[#loc284, #loc285])
#loc665 = loc(fused[#loc286, #loc287])
#loc666 = loc(fused[#loc288, #loc285])
#loc667 = loc(fused[#loc296, #loc297])
#loc668 = loc(fused[#loc298, #loc299])
#loc669 = loc(fused[#loc300, #loc301])
#loc670 = loc(fused[#loc303, #loc304])
#loc671 = loc(fused[#loc305, #loc299])
#loc672 = loc(fused[#loc309, #loc307])
#loc673 = loc(fused[#loc312, #loc313])
#loc674 = loc(fused[#loc314, #loc315])
#loc675 = loc(fused[#loc316, #loc317])
#loc676 = loc(fused[#loc318, #loc315])
#loc677 = loc(fused[#loc321, #loc322])
#loc678 = loc(fused[#loc323, #loc324])
#loc679 = loc(fused[#loc325, #loc322])
#loc680 = loc(fused[#loc328, #loc329])
#loc681 = loc(fused[#loc330, #loc331])
#loc682 = loc(fused[#loc332, #loc333, #loc334, #loc329])
#loc683 = loc(fused[#loc336, #loc337])
#loc684 = loc(fused[#loc340, #loc339])
#loc685 = loc(fused[#loc341, #loc342, #loc343, #loc337])
#loc686 = loc(fused[#loc344, #loc345])
#loc687 = loc(fused[#loc349, #loc350])
#loc688 = loc(fused[#loc352, #loc351])
#loc689 = loc(fused[#loc353, #loc354])
#loc690 = loc(fused[#loc355, #loc356])
#loc691 = loc(fused[#loc357, #loc358])
#loc692 = loc(fused[#loc359, #loc360])
#loc693 = loc(fused[#loc361, #loc362])
#loc694 = loc(fused[#loc363, #loc364])
#loc695 = loc(fused[#loc365, #loc366])
#loc696 = loc(fused[#loc367, #loc368])
#loc697 = loc(fused[#loc370, #loc369])
#loc698 = loc(fused[#loc371, #loc372])
#loc699 = loc(fused[#loc373, #loc374])
#loc700 = loc(fused[#loc375, #loc372])
#loc701 = loc(fused[#loc376, #loc377])
#loc702 = loc(fused[#loc378, #loc379])
#loc703 = loc(fused[#loc385, #loc386])
#loc704 = loc(fused[#loc387, #loc388])
#loc705 = loc(fused[#loc389, #loc390])
#loc706 = loc(fused[#loc391, #loc388])
#loc707 = loc(fused[#loc393, #loc394])
#loc708 = loc(fused[#loc396, #loc397])
#loc709 = loc(fused[#loc398, #loc399])
#loc710 = loc(fused[#loc401, #loc400])
#loc711 = loc(fused[#loc403, #loc402])
#loc712 = loc(fused[#loc406, #loc407])
#loc713 = loc(fused[#loc408, #loc409])
#loc714 = loc(fused[#loc411, #loc412])
#loc715 = loc(fused[#loc413, #loc414])
#loc716 = loc(fused[#loc415, #loc416])
#loc717 = loc(fused[#loc417, #loc409])
#loc718 = loc(fused[#loc419, #loc420])
#loc719 = loc(fused[#loc423, #loc424])
#loc720 = loc(fused[#loc425, #loc420])
#loc721 = loc(fused[#loc431, #loc432])
#loc722 = loc(fused[#loc433, #loc434])
#loc723 = loc(fused[#loc435, #loc436])
#loc724 = loc(fused[#loc437, #loc434])
#loc725 = loc(fused[#loc445, #loc446])
#loc726 = loc(fused[#loc447, #loc448])
#loc727 = loc(fused[#loc449, #loc450])
#loc728 = loc(fused[#loc452, #loc453])
#loc729 = loc(fused[#loc454, #loc448])
#loc730 = loc(fused[#loc458, #loc456])
#loc731 = loc(fused[#loc461, #loc462])
#loc732 = loc(fused[#loc463, #loc464])
#loc733 = loc(fused[#loc465, #loc466])
#loc734 = loc(fused[#loc467, #loc464])
#loc735 = loc(fused[#loc470, #loc471])
#loc736 = loc(fused[#loc472, #loc473])
#loc737 = loc(fused[#loc474, #loc471])
#loc738 = loc(fused[#loc477, #loc478])
#loc739 = loc(fused[#loc479, #loc480])
#loc740 = loc(fused[#loc481, #loc478])
#loc741 = loc(fused[#loc482, #loc483])
#loc742 = loc(fused[#loc486, #loc485])
#loc743 = loc(fused[#loc487, #loc488, #loc489, #loc483])
#loc744 = loc(fused[#loc490, #loc491])
#loc745 = loc(fused[#loc496, #loc497])
#loc746 = loc(fused[#loc498, #loc499])
#loc747 = loc(fused[#loc500, #loc501])
#loc748 = loc(fused[#loc503, #loc502])
#loc749 = loc(fused[#loc504, #loc505])
#loc750 = loc(fused[#loc506, #loc507])
#loc751 = loc(fused[#loc508, #loc509, #loc510, #loc505])
#loc752 = loc(fused[#loc514, #loc513])
#loc753 = loc(fused[#loc515, #loc516])
#loc754 = loc(fused[#loc517, #loc518])
#loc755 = loc(fused[#loc519, #loc516])
#loc756 = loc(fused[#loc520, #loc521])
#loc757 = loc(fused[#loc522, #loc523])
#loc758 = loc(fused[#loc526, #loc527])
#loc759 = loc(fused[#loc528, #loc529])
#loc760 = loc(fused[#loc530, #loc531])
#loc761 = loc(fused[#loc533, #loc532])
#loc762 = loc(fused[#loc534, #loc535])
#loc763 = loc(fused[#loc536, #loc537])
#loc764 = loc(fused[#loc538, #loc535])
#loc765 = loc(fused[#loc540, #loc539])
#loc766 = loc(fused[#loc541, #loc542])
#loc767 = loc(fused[#loc543, #loc544])
#loc768 = loc(fused[#loc545, #loc542])
#loc769 = loc(fused[#loc546, #loc547])
#loc770 = loc(fused[#loc548, #loc549])
