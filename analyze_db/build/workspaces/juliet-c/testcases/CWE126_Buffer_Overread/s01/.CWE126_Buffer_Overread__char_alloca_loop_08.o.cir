!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc260)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc261)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc264)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc265)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc266)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc268)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    cir.scope {
      %45 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc271)
      %46 = cir.call %45() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc37)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc37)
      cir.if %47 {
        %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
      } loc(#loc272)
    } loc(#loc270)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc275)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc276)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc277)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc50)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc51)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc51)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc51)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc278)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc55)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc56)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc58)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc279)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc280)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc65)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc65)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc282)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc68)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc283)
          cir.condition(%77) loc(#loc69)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc73)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc71)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc285)
          } loc(#loc284)
          cir.yield loc(#loc64)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc76)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc77)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc286)
          cir.yield loc(#loc281)
        } loc(#loc281)
      } loc(#loc281)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc78)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc78)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc79)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc79)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc81)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc287)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    } loc(#loc274)
    cir.return loc(#loc6)
  } loc(#loc262)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc289)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc86)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc290)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc88)
    cir.return loc(#loc85)
  } loc(#loc288)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc92)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    cir.return %2 : !s32i loc(#loc292)
  } loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc294)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc295)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc100)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc100)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc100)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc100)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc100)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc296)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc100)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc102)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc102)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc102)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc102)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc102)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc104)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc105)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc105)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc105)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc297)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc109)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc111)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc111)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc298)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc115)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc116)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc116)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc299)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc120)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc122)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc300)
    cir.scope {
      %45 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc302)
      %46 = cir.call %45() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc127)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc127)
      cir.if %47 {
        %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
        %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc306)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc307)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc308)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc143)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc144)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc144)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc144)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc309)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc148)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc148)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc149)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc149)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc151)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc310)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc152)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc152)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc311)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc158)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc158)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc313)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc160)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc161)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc314)
          cir.condition(%77) loc(#loc162)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc165)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc166)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc164)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc167)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc168)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc316)
          } loc(#loc315)
          cir.yield loc(#loc157)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc169)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc170)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc317)
          cir.yield loc(#loc312)
        } loc(#loc312)
      } loc(#loc312)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc171)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc171)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc172)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc173)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc172)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc174)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc318)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    } loc(#loc305)
    cir.return loc(#loc96)
  } loc(#loc293)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    cir.return %2 : !s32i loc(#loc320)
  } loc(#loc319)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc322)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc323)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc186)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc186)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc186)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc186)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc324)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc186)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc188)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc188)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc188)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc188)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc188)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc188)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc189)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc190)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc191)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc191)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc191)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc325)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc195)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc197)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc197)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc199)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc326)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc201)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc202)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc202)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc202)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc327)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc206)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc208)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc208)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc210)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc328)
    cir.scope {
      %45 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc330)
      %46 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc213)
      %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc213)
      cir.if %47 {
        %48 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
        cir.store %48, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc332)
      } loc(#loc331)
    } loc(#loc329)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc334)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc335)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc336)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc225)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc226)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc227)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc228)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc227)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc227)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc337)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc231)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc231)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc232)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc233)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc232)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc234)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc234)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc338)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc235)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc236)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc235)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc339)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc241)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc241)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc341)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc243)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc244)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc342)
          cir.condition(%77) loc(#loc245)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc248)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc249)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc247)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc250)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc251)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc251)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc344)
          } loc(#loc343)
          cir.yield loc(#loc240)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc252)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc253)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc345)
          cir.yield loc(#loc340)
        } loc(#loc340)
      } loc(#loc340)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc254)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc254)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc255)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc256)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc255)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc257)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc257)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc346)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc258)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc259)
    } loc(#loc333)
    cir.return loc(#loc182)
  } loc(#loc321)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":37:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":66:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":39:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":39:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":40:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":40:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":41:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":41:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":42:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":42:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":42:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":42:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":42:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":42:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":43:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":43:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":43:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":43:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":43:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":44:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":44:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":44:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":44:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":44:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":44:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":45:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":45:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":45:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":45:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":45:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":46:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":50:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":46:8)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":46:26)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":47:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":49:16)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":49:9)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":51:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":65:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":52:9)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":52:16)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":52:19)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":53:9)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":53:22)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":54:16)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":54:22)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":54:27)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":54:31)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":54:9)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":54:32)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":55:23)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":55:14)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":55:18)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":55:9)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":56:19)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":56:26)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":56:9)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":56:30)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:9)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":62:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:18)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:14)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:21)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:25)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:23)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":60:9)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":61:23)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":61:28)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":61:29)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":61:18)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":61:13)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:35)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":59:34)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":63:23)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":63:14)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":63:18)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":63:9)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":64:19)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":64:9)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":141:1)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":145:1)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":143:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":143:14)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":144:5)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":144:14)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":25:1)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":28:1)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":27:12)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":27:5)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":85:19)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":73:1)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":107:1)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":75:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":75:12)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":76:5)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":76:36)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":77:5)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":77:37)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":78:12)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":78:27)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":78:32)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":78:35)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":78:5)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":78:36)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":79:27)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":79:5)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":79:19)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":79:22)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":79:23)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":80:12)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":80:28)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":80:33)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":80:37)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":80:5)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":80:38)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":81:29)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":81:5)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":81:20)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":81:24)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":81:25)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":82:5)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":91:5)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":82:8)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":82:27)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":83:5)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":86:5)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":88:5)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":85:9)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":90:16)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":90:9)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":92:5)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":106:5)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":93:9)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":93:16)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":93:19)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":94:9)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":94:22)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":95:16)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":95:22)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":95:27)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":95:31)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":95:9)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":95:32)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":96:23)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":96:14)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":96:18)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":96:9)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":97:19)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":97:26)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":97:9)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":97:30)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:9)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":103:9)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:18)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:14)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:21)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:25)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:23)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":101:9)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":102:23)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":102:28)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":102:29)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":102:18)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":102:13)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:35)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":100:34)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":104:23)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":104:14)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":104:18)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":104:9)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":105:19)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":105:9)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":30:1)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":33:1)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":32:12)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":32:5)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":110:1)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":139:1)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":112:5)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":112:12)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":113:5)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":113:36)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":114:5)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":114:37)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":115:12)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":115:27)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":115:32)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":115:35)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":115:5)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":115:36)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":116:27)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":116:5)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":116:19)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":116:22)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":116:23)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":117:12)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":117:28)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":117:33)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":117:37)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":117:5)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":117:38)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":118:29)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":118:5)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":118:20)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":118:24)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":118:25)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":119:5)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":123:5)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":119:8)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":119:26)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":120:5)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":122:16)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":122:9)
#loc218 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":124:5)
#loc219 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":138:5)
#loc220 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":125:9)
#loc221 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":125:16)
#loc222 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":125:19)
#loc223 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":126:9)
#loc224 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":126:22)
#loc225 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":127:16)
#loc226 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":127:22)
#loc227 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":127:27)
#loc228 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":127:31)
#loc229 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":127:9)
#loc230 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":127:32)
#loc231 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":128:23)
#loc232 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":128:14)
#loc233 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":128:18)
#loc234 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":128:9)
#loc235 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":129:19)
#loc236 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":129:26)
#loc237 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":129:9)
#loc238 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":129:30)
#loc239 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:9)
#loc240 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":135:9)
#loc241 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:18)
#loc242 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:14)
#loc243 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:21)
#loc244 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:25)
#loc245 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:23)
#loc246 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":133:9)
#loc247 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":134:23)
#loc248 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":134:28)
#loc249 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":134:29)
#loc250 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":134:18)
#loc251 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":134:13)
#loc252 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:35)
#loc253 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":132:34)
#loc254 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":136:23)
#loc255 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":136:14)
#loc256 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":136:18)
#loc257 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":136:9)
#loc258 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":137:19)
#loc259 = loc("CWE126_Buffer_Overread__char_alloca_loop_08.c":137:9)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc7, #loc8])
#loc264 = loc(fused[#loc9, #loc10])
#loc265 = loc(fused[#loc11, #loc12])
#loc266 = loc(fused[#loc17, #loc18])
#loc267 = loc(fused[#loc20, #loc19])
#loc268 = loc(fused[#loc28, #loc29])
#loc269 = loc(fused[#loc31, #loc30])
#loc270 = loc(fused[#loc35, #loc36])
#loc271 = loc(fused[#loc37, #loc38])
#loc272 = loc(fused[#loc39, #loc36])
#loc273 = loc(fused[#loc41, #loc40])
#loc274 = loc(fused[#loc42, #loc43])
#loc275 = loc(fused[#loc44, #loc45])
#loc276 = loc(fused[#loc44, #loc46])
#loc277 = loc(fused[#loc47, #loc48])
#loc278 = loc(fused[#loc53, #loc54])
#loc279 = loc(fused[#loc58, #loc55])
#loc280 = loc(fused[#loc61, #loc62])
#loc281 = loc(fused[#loc63, #loc64])
#loc282 = loc(fused[#loc66, #loc65])
#loc283 = loc(fused[#loc67, #loc68])
#loc284 = loc(fused[#loc70, #loc64])
#loc285 = loc(fused[#loc75, #loc73])
#loc286 = loc(fused[#loc77, #loc76])
#loc287 = loc(fused[#loc81, #loc78])
#loc288 = loc(fused[#loc84, #loc85])
#loc289 = loc(fused[#loc86, #loc87])
#loc290 = loc(fused[#loc88, #loc89])
#loc291 = loc(fused[#loc90, #loc91])
#loc292 = loc(fused[#loc93, #loc92])
#loc293 = loc(fused[#loc95, #loc96])
#loc294 = loc(fused[#loc97, #loc98])
#loc295 = loc(fused[#loc99, #loc100])
#loc296 = loc(fused[#loc101, #loc102])
#loc297 = loc(fused[#loc107, #loc108])
#loc298 = loc(fused[#loc110, #loc109])
#loc299 = loc(fused[#loc118, #loc119])
#loc300 = loc(fused[#loc121, #loc120])
#loc301 = loc(fused[#loc125, #loc126])
#loc302 = loc(fused[#loc127, #loc128])
#loc303 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc304 = loc(fused[#loc134, #loc133])
#loc305 = loc(fused[#loc135, #loc136])
#loc306 = loc(fused[#loc137, #loc138])
#loc307 = loc(fused[#loc137, #loc139])
#loc308 = loc(fused[#loc140, #loc141])
#loc309 = loc(fused[#loc146, #loc147])
#loc310 = loc(fused[#loc151, #loc148])
#loc311 = loc(fused[#loc154, #loc155])
#loc312 = loc(fused[#loc156, #loc157])
#loc313 = loc(fused[#loc159, #loc158])
#loc314 = loc(fused[#loc160, #loc161])
#loc315 = loc(fused[#loc163, #loc157])
#loc316 = loc(fused[#loc168, #loc166])
#loc317 = loc(fused[#loc170, #loc169])
#loc318 = loc(fused[#loc174, #loc171])
#loc319 = loc(fused[#loc177, #loc178])
#loc320 = loc(fused[#loc180, #loc179])
#loc321 = loc(fused[#loc181, #loc182])
#loc322 = loc(fused[#loc183, #loc184])
#loc323 = loc(fused[#loc185, #loc186])
#loc324 = loc(fused[#loc187, #loc188])
#loc325 = loc(fused[#loc193, #loc194])
#loc326 = loc(fused[#loc196, #loc195])
#loc327 = loc(fused[#loc204, #loc205])
#loc328 = loc(fused[#loc207, #loc206])
#loc329 = loc(fused[#loc211, #loc212])
#loc330 = loc(fused[#loc213, #loc214])
#loc331 = loc(fused[#loc215, #loc212])
#loc332 = loc(fused[#loc217, #loc216])
#loc333 = loc(fused[#loc218, #loc219])
#loc334 = loc(fused[#loc220, #loc221])
#loc335 = loc(fused[#loc220, #loc222])
#loc336 = loc(fused[#loc223, #loc224])
#loc337 = loc(fused[#loc229, #loc230])
#loc338 = loc(fused[#loc234, #loc231])
#loc339 = loc(fused[#loc237, #loc238])
#loc340 = loc(fused[#loc239, #loc240])
#loc341 = loc(fused[#loc242, #loc241])
#loc342 = loc(fused[#loc243, #loc244])
#loc343 = loc(fused[#loc246, #loc240])
#loc344 = loc(fused[#loc251, #loc249])
#loc345 = loc(fused[#loc253, #loc252])
#loc346 = loc(fused[#loc257, #loc254])
