!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.struct<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":204:10)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":204:14)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":204:20)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":204:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc386 = loc(fused[#loc266, #loc267])
#loc387 = loc(fused[#loc268, #loc269])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.struct<struct "__pthread_internal_list" {!cir.ptr<!cir.struct<struct "__pthread_internal_list">>, !cir.ptr<!cir.struct<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.struct<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.struct<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.struct<struct "__mbstate_t" {!s32i, !ty_anon2E0_} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.struct<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.struct<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.struct<class "std::__basic_file<char>" packed {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.struct<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::ctype<char>" packed {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.struct<class "std::basic_ostream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.struct<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<!void (!u32i, !cir.ptr<!cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.struct<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.struct<class "std::locale" {!cir.ptr<!cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.struct<class "std::locale::facet" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.struct<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.struct<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.struct<class "std::ctype<char>" packed {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_get<char, std::istreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E = !cir.struct<class "std::num_put<char, std::ostreambuf_iterator<char>>" {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.struct<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.struct<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.struct<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.struct<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.struct<class "std::basic_ofstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc282)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc283)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc284)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc287)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
  cir.func private @close(!s32i) -> !s32i loc(#loc290)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc291)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc292)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc293)
  cir.func private @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc294)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc297)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc298)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc299)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc297)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc298)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc299)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc299)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc302)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc302)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc304)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc305)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc306)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc307)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc308)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc309)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc53)
        cir.store %18, %14 : !s32i, !cir.ptr<!s32i> loc(#loc307)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc55)
        cir.store %20, %15 : !s32i, !cir.ptr<!s32i> loc(#loc308)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
        %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
        cir.store %23, %16 : !u64i, !cir.ptr<!u64i> loc(#loc309)
        cir.scope {
          cir.do {
            %24 = cir.const #cir.int<2> : !s32i loc(#loc62)
            %25 = cir.const #cir.int<1> : !u32i loc(#loc63)
            %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc63)
            %27 = cir.const #cir.int<6> : !u32i loc(#loc64)
            %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc64)
            %29 = cir.call @socket(%24, %26, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc65)
            cir.store %29, %14 : !s32i, !cir.ptr<!s32i> loc(#loc311)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc71)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc313)
              cir.if %85 {
                cir.break loc(#loc73)
              } loc(#loc314)
            } loc(#loc312)
            %30 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %32 = cir.const #cir.int<16> : !u64i loc(#loc316)
            cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
            %33 = cir.const #cir.int<2> : !s32i loc(#loc81)
            %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc81)
            %35 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc318)
            %36 = cir.const #cir.int<0> : !s32i loc(#loc84)
            %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc84)
            %38 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc319)
            %40 = cir.const #cir.int<27015> : !s32i loc(#loc88)
            %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc88)
            %42 = cir.call @htons(%41) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc89)
            %43 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
            cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc320)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %83 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
              %84 = cir.const #cir.int<16> : !u64i loc(#loc323)
              %85 = cir.cast(integral, %84 : !u64i), !u32i loc(#loc323)
              %86 = cir.call @bind(%82, %83, %85) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc100)
              %87 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc101)
              %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc324)
              cir.if %89 {
                cir.break loc(#loc103)
              } loc(#loc325)
            } loc(#loc321)
            cir.scope {
              %82 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %83 = cir.const #cir.int<5> : !s32i loc(#loc107)
              %84 = cir.call @listen(%82, %83) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc108)
              %85 = cir.const #cir.int<1> : !s32i loc(#loc109)
              %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc109)
              %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc327)
              cir.if %87 {
                cir.break loc(#loc111)
              } loc(#loc328)
            } loc(#loc326)
            %44 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc113)
            %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc114)
            %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc115)
            cir.store %47, %15 : !s32i, !cir.ptr<!s32i> loc(#loc329)
            cir.scope {
              %82 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc121)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc331)
              cir.if %85 {
                cir.break loc(#loc123)
              } loc(#loc332)
            } loc(#loc330)
            %48 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %49 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
            %50 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc126)
            %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc127)
            %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc333)
            %53 = cir.const #cir.int<1> : !u64i loc(#loc334)
            %54 = cir.const #cir.int<4096> : !s32i loc(#loc132)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc132)
            %56 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc335)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc134)
            %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc336)
            %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc337)
            %62 = cir.const #cir.int<0> : !s32i loc(#loc136)
            %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc137)
            %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc137)
            cir.store %64, %11 : !s32i, !cir.ptr<!s32i> loc(#loc338)
            cir.scope {
              %82 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %83 = cir.const #cir.int<1> : !s32i loc(#loc143)
              %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc143)
              %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc340)
              %86 = cir.ternary(%85, true {
                %87 = cir.const #true loc(#loc144)
                cir.yield %87 : !cir.bool loc(#loc144)
              }, false {
                %87 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                %88 = cir.const #cir.int<0> : !s32i loc(#loc146)
                %89 = cir.cmp(eq, %87, %88) : !s32i, !cir.bool loc(#loc341)
                %90 = cir.ternary(%89, true {
                  %91 = cir.const #true loc(#loc144)
                  cir.yield %91 : !cir.bool loc(#loc144)
                }, false {
                  %91 = cir.const #false loc(#loc144)
                  cir.yield %91 : !cir.bool loc(#loc144)
                }) : (!cir.bool) -> !cir.bool loc(#loc144)
                cir.yield %90 : !cir.bool loc(#loc144)
              }) : (!cir.bool) -> !cir.bool loc(#loc144)
              cir.if %86 {
                cir.break loc(#loc148)
              } loc(#loc342)
            } loc(#loc339)
            %65 = cir.const #cir.int<0> : !s8i loc(#loc149)
            %66 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
            %67 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc151)
            %68 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc152)
            %70 = cir.const #cir.int<1> : !u64i loc(#loc343)
            %71 = cir.binop(div, %69, %70) : !u64i loc(#loc344)
            %72 = cir.binop(add, %67, %71) : !u64i loc(#loc345)
            %73 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %72 : !u64i), !cir.ptr<!s8i> loc(#loc155)
            cir.store %65, %73 : !s8i, !cir.ptr<!s8i> loc(#loc346)
            %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
            %75 = cir.const #cir.int<13> : !s8i loc(#loc157)
            %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc157)
            %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
            cir.store %77, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc347)
            cir.scope {
              %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
              %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc163)
              cir.if %83 {
                %84 = cir.const #cir.int<0> : !s8i loc(#loc165)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc350)
              } loc(#loc349)
            } loc(#loc348)
            %78 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
            %79 = cir.const #cir.int<10> : !s8i loc(#loc169)
            %80 = cir.cast(integral, %79 : !s8i), !s32i loc(#loc169)
            %81 = cir.call @strchr(%78, %80) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
            cir.store %81, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc351)
            cir.scope {
              %82 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
              %83 = cir.cast(ptr_to_bool, %82 : !cir.ptr<!s8i>), !cir.bool loc(#loc175)
              cir.if %83 {
                %84 = cir.const #cir.int<0> : !s8i loc(#loc177)
                %85 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                cir.store %84, %85 : !s8i, !cir.ptr<!s8i> loc(#loc354)
              } loc(#loc353)
            } loc(#loc352)
            cir.yield loc(#loc61)
          } while {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc180)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc180)
            cir.condition(%25) loc(#loc180)
          } loc(#loc310)
        } loc(#loc310)
        cir.scope {
          %24 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc183)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc184)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc184)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc356)
          cir.if %27 {
            %28 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc187)
          } loc(#loc357)
        } loc(#loc355)
        cir.scope {
          %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc190)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc191)
          %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc191)
          %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc359)
          cir.if %27 {
            %28 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc194)
          } loc(#loc360)
        } loc(#loc358)
      } loc(#loc303)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc361)
    } loc(#loc301)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc363)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc363)
      cir.scope {
        %9 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc365)
        cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc206)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
        %11 = cir.const #cir.int<16> : !s32i loc(#loc366)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%9, %10, %11) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
            cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc294)
            cir.yield loc(#loc211)
          } loc(#loc211)
          cir.yield loc(#loc210)
        } catch [#cir.unwind {
          cir.resume loc(#loc210)
        }] loc(#loc210)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
            cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc294)
            cir.yield loc(#loc212)
          } loc(#loc212)
          cir.yield loc(#loc210)
        } catch [#cir.unwind {
          cir.resume loc(#loc210)
        }] loc(#loc210)
        cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc294)
      } loc(#loc364)
    } loc(#loc362)
    cir.return loc(#loc28)
  } loc(#loc295)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc215)
  cir.func internal private @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc369)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc370)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc371)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc372)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc370)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc371)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc372)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc372)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc226)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc373)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc375)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc375)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc233)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
      %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc215)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc215)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc376)
    } loc(#loc374)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc378)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc378)
      cir.scope {
        %9 = cir.alloca !ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["outputFile", init] {alignment = 8 : i64} loc(#loc380)
        cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc246)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
        %11 = cir.const #cir.int<16> : !s32i loc(#loc366)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%9, %10, %11) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
            cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc294)
            cir.yield loc(#loc249)
          } loc(#loc249)
          cir.yield loc(#loc248)
        } catch [#cir.unwind {
          cir.resume loc(#loc248)
        }] loc(#loc248)
        cir.try synthetic cleanup {
          cir.call exception @_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
            cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc294)
            cir.yield loc(#loc250)
          } loc(#loc250)
          cir.yield loc(#loc248)
        } catch [#cir.unwind {
          cir.resume loc(#loc248)
        }] loc(#loc248)
        cir.call @_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev(%9) : (!cir.ptr<!ty_std3A3Abasic_ofstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc294)
      } loc(#loc379)
    } loc(#loc377)
    cir.return loc(#loc217)
  } loc(#loc368)
  cir.func @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32L7goodG2BEv() : () -> () loc(#loc253)
    cir.return loc(#loc252)
  } loc(#loc381)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc382)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc383)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc384)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc263)
  cir.func @main(%arg0: !s32i loc(fused[#loc266, #loc267]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc268, #loc269])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc386)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc387)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc265)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc270)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc271)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc272)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc272)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc273)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc260)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc260)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc274)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_324goodEv() : () -> () loc(#loc275)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc261)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc262)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc277)
    cir.call @_ZN61CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_323badEv() : () -> () loc(#loc278)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc263)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc280)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    cir.return %15 : !s32i loc(#loc388)
  } loc(#loc385)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":828:7)
#loc20 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":829:34)
#loc21 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":969:7)
#loc22 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":978:7)
#loc23 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":1041:7)
#loc24 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":1046:7)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":911:7)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":912:9)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":52:1)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":151:1)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":54:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":54:12)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":55:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":55:25)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":56:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":56:25)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":57:5)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":57:37)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":58:12)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":58:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":59:5)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":141:5)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":60:9)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":60:24)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":60:23)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":61:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":139:9)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":66:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":66:17)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":67:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":67:32)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":68:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":68:19)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":69:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":69:35)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":70:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":70:35)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":71:13)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":71:41)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":71:30)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":71:37)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":72:13)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":124:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":82:39)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":82:48)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":82:61)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":82:32)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":82:17)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":82:72)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":83:17)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":86:17)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":83:21)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":83:37)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":84:17)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":85:21)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:24)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:25)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:34)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:37)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:51)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:17)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":87:52)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":88:38)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":88:17)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":89:43)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":89:17)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":90:42)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":90:36)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":90:17)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":90:50)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":94:17)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:26)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:58)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:59)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:68)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:82)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:21)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":91:88)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":92:17)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":93:21)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":95:17)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":98:17)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":95:28)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":95:42)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":95:21)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":95:61)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":96:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":97:21)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":99:39)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":99:53)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":99:59)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":99:32)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":99:17)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":99:63)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":100:17)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":103:17)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":100:21)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":100:37)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":101:17)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":102:21)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:35)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:58)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:65)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:63)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:49)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:72)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:75)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:86)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:91)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:106)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:116)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:117)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:120)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:30)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":105:121)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":106:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":109:17)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":106:21)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":106:35)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":106:48)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":106:51)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":106:65)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":107:17)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":108:21)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:61)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:17)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:22)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:32)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:45)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:56)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":111:57)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":113:34)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":113:40)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":113:27)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":113:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":113:44)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":114:17)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":117:17)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":114:21)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":115:17)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":116:32)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":116:22)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":116:21)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":118:34)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":118:40)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":118:27)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":118:17)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":118:44)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":119:17)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":122:17)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":119:21)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":120:17)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":121:32)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":121:22)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":121:21)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":124:20)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":125:13)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":128:13)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":125:17)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":125:33)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":126:13)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":127:30)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":127:17)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":129:13)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":132:13)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":129:17)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":129:33)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":130:13)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":131:30)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":131:17)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":140:21)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":140:10)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":140:9)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":142:5)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":150:5)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":143:9)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":143:24)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":143:23)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":144:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":149:9)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":145:13)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":145:22)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":147:37)
#loc208 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":970:57)
#loc209 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/fstream":970:67)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":52:6)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":147:24)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":148:24)
#loc213 = loc("/usr/include/string.h":149:1)
#loc214 = loc("/usr/include/string.h":150:14)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":172:22)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":158:1)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":185:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":160:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":160:12)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":161:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":161:25)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":162:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":162:25)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":163:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":163:37)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":164:12)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":164:5)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":165:5)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":175:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":166:9)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":166:24)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":166:23)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":172:9)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":172:16)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":174:21)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":174:10)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":174:9)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":176:5)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":184:5)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":177:9)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":177:24)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":177:23)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":178:9)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":183:9)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":179:13)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":179:22)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":181:37)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":158:13)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":181:24)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":182:24)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":187:1)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":190:1)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":189:5)
#loc254 = loc("/usr/include/stdlib.h":575:1)
#loc255 = loc("/usr/include/stdlib.h":575:41)
#loc256 = loc("/usr/include/time.h":76:1)
#loc257 = loc("/usr/include/time.h":76:38)
#loc258 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc259 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":209:15)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":211:15)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":214:15)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":216:15)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":204:1)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":219:1)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":205:1)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":207:27)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":207:22)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":207:5)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":209:5)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":210:5)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":211:5)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":214:5)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":215:5)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":216:5)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":218:12)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_ofstream_32.cpp":218:5)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc5, #loc6])
#loc285 = loc(fused[#loc7, #loc8])
#loc286 = loc(fused[#loc9, #loc10])
#loc287 = loc(fused[#loc11, #loc12])
#loc288 = loc(fused[#loc13, #loc14])
#loc289 = loc(fused[#loc15, #loc16])
#loc290 = loc(fused[#loc17, #loc18])
#loc291 = loc(fused[#loc19, #loc20])
#loc292 = loc(fused[#loc21, #loc22])
#loc293 = loc(fused[#loc23, #loc24])
#loc294 = loc(fused[#loc25, #loc26])
#loc295 = loc(fused[#loc27, #loc28])
#loc296 = loc(fused[#loc29, #loc30])
#loc297 = loc(fused[#loc31, #loc32])
#loc298 = loc(fused[#loc33, #loc34])
#loc299 = loc(fused[#loc35, #loc36])
#loc300 = loc(fused[#loc38, #loc37])
#loc301 = loc(fused[#loc39, #loc40])
#loc302 = loc(fused[#loc41, #loc42])
#loc303 = loc(fused[#loc44, #loc45])
#loc304 = loc(fused[#loc46, #loc47])
#loc305 = loc(fused[#loc48, #loc49])
#loc306 = loc(fused[#loc50, #loc51])
#loc307 = loc(fused[#loc52, #loc53])
#loc308 = loc(fused[#loc54, #loc55])
#loc309 = loc(fused[#loc56, #loc57])
#loc310 = loc(fused[#loc60, #loc61])
#loc311 = loc(fused[#loc66, #loc67])
#loc312 = loc(fused[#loc68, #loc69])
#loc313 = loc(fused[#loc70, #loc71])
#loc314 = loc(fused[#loc72, #loc69])
#loc315 = loc(fused[#loc74, #loc75])
#loc316 = loc(fused[#loc77, #loc78])
#loc317 = loc(fused[#loc79, #loc80])
#loc318 = loc(fused[#loc83, #loc81])
#loc319 = loc(fused[#loc87, #loc84])
#loc320 = loc(fused[#loc91, #loc92])
#loc321 = loc(fused[#loc93, #loc94])
#loc322 = loc(fused[#loc96, #loc97])
#loc323 = loc(fused[#loc98, #loc99])
#loc324 = loc(fused[#loc100, #loc101])
#loc325 = loc(fused[#loc102, #loc94])
#loc326 = loc(fused[#loc104, #loc105])
#loc327 = loc(fused[#loc108, #loc109])
#loc328 = loc(fused[#loc110, #loc105])
#loc329 = loc(fused[#loc116, #loc117])
#loc330 = loc(fused[#loc118, #loc119])
#loc331 = loc(fused[#loc120, #loc121])
#loc332 = loc(fused[#loc122, #loc119])
#loc333 = loc(fused[#loc128, #loc129])
#loc334 = loc(fused[#loc130, #loc131])
#loc335 = loc(fused[#loc132, #loc133])
#loc336 = loc(fused[#loc132, #loc134])
#loc337 = loc(fused[#loc130, #loc135])
#loc338 = loc(fused[#loc138, #loc139])
#loc339 = loc(fused[#loc140, #loc141])
#loc340 = loc(fused[#loc142, #loc143])
#loc341 = loc(fused[#loc145, #loc146])
#loc342 = loc(fused[#loc147, #loc141])
#loc343 = loc(fused[#loc153, #loc154])
#loc344 = loc(fused[#loc152, #loc154])
#loc345 = loc(fused[#loc151, #loc154])
#loc346 = loc(fused[#loc150, #loc149])
#loc347 = loc(fused[#loc159, #loc160])
#loc348 = loc(fused[#loc161, #loc162])
#loc349 = loc(fused[#loc164, #loc162])
#loc350 = loc(fused[#loc167, #loc165])
#loc351 = loc(fused[#loc171, #loc172])
#loc352 = loc(fused[#loc173, #loc174])
#loc353 = loc(fused[#loc176, #loc174])
#loc354 = loc(fused[#loc179, #loc177])
#loc355 = loc(fused[#loc181, #loc182])
#loc356 = loc(fused[#loc183, #loc184])
#loc357 = loc(fused[#loc185, #loc182])
#loc358 = loc(fused[#loc188, #loc189])
#loc359 = loc(fused[#loc190, #loc191])
#loc360 = loc(fused[#loc192, #loc189])
#loc361 = loc(fused[#loc197, #loc195])
#loc362 = loc(fused[#loc198, #loc199])
#loc363 = loc(fused[#loc200, #loc201])
#loc364 = loc(fused[#loc203, #loc204])
#loc365 = loc(fused[#loc205, #loc206])
#loc366 = loc(fused[#loc208, #loc209])
#loc367 = loc(fused[#loc213, #loc214])
#loc368 = loc(fused[#loc216, #loc217])
#loc369 = loc(fused[#loc218, #loc219])
#loc370 = loc(fused[#loc220, #loc221])
#loc371 = loc(fused[#loc222, #loc223])
#loc372 = loc(fused[#loc224, #loc225])
#loc373 = loc(fused[#loc227, #loc226])
#loc374 = loc(fused[#loc228, #loc229])
#loc375 = loc(fused[#loc230, #loc231])
#loc376 = loc(fused[#loc237, #loc235])
#loc377 = loc(fused[#loc238, #loc239])
#loc378 = loc(fused[#loc240, #loc241])
#loc379 = loc(fused[#loc243, #loc244])
#loc380 = loc(fused[#loc245, #loc246])
#loc381 = loc(fused[#loc251, #loc252])
#loc382 = loc(fused[#loc254, #loc255])
#loc383 = loc(fused[#loc256, #loc257])
#loc384 = loc(fused[#loc258, #loc259])
#loc385 = loc(fused[#loc264, #loc265])
#loc388 = loc(fused[#loc281, #loc280])
