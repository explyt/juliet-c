!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc92)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc15)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc94)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc96)
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
      %26 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
      cir.scope {
        %27 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc99)
        %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
        %30 = cir.const #cir.int<67> : !s32i loc(#loc30)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc31)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc31)
        cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc100)
        %35 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc35)
        %37 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %38 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc36)
        %40 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
        %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc38)
        cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc101)
        %42 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc39)
        %43 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %44 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
        %45 = cir.call @strcat(%43, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
        %46 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      } loc(#loc98)
    } loc(#loc95)
    cir.return loc(#loc6)
  } loc(#loc89)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc102)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc53)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc53)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc53)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc53)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc53)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc107)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc53)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc55)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc55)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc55)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc55)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc55)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc58)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc61)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc111)
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
      %26 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
      cir.scope {
        %27 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc114)
        %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
        %30 = cir.const #cir.int<67> : !s32i loc(#loc73)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc74)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc74)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc74)
        cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc115)
        %35 = cir.const #cir.int<0> : !s32i loc(#loc78)
        %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc78)
        %37 = cir.const #cir.int<100> : !s32i loc(#loc79)
        %38 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc79)
        %40 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
        %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc81)
        cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc116)
        %42 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc82)
        %43 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %44 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
        %45 = cir.call @strcat(%43, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
        %46 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } loc(#loc113)
    } loc(#loc110)
    cir.return loc(#loc49)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":26:36)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":27:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":30:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":31:15)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":31:10)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":31:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":32:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":43:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":33:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":33:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":34:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":34:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":42:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":36:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":36:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":37:20)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":37:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":37:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":37:37)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":37:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":37:38)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":38:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":38:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":38:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":38:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":40:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":40:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":40:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":41:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":41:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":73:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":76:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":75:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":75:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":51:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":71:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":53:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":53:12)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":54:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":54:36)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":55:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":55:37)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":57:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":57:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":58:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":58:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":58:10)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":58:11)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":59:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":70:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":60:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":60:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":61:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":61:23)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":62:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":69:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":63:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":63:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":64:20)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":64:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":64:33)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":64:37)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":64:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":64:38)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":65:29)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":65:20)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":65:24)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":65:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":67:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":67:20)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":67:26)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":68:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_alloca_cat_31.c":68:13)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc90 = loc(fused[#loc7, #loc8])
#loc91 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc11, #loc12])
#loc93 = loc(fused[#loc14, #loc13])
#loc94 = loc(fused[#loc16, #loc15])
#loc95 = loc(fused[#loc19, #loc20])
#loc96 = loc(fused[#loc21, #loc22])
#loc97 = loc(fused[#loc23, #loc24])
#loc98 = loc(fused[#loc25, #loc26])
#loc99 = loc(fused[#loc27, #loc28])
#loc100 = loc(fused[#loc33, #loc34])
#loc101 = loc(fused[#loc38, #loc35])
#loc102 = loc(fused[#loc44, #loc45])
#loc103 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc50, #loc51])
#loc106 = loc(fused[#loc52, #loc53])
#loc107 = loc(fused[#loc54, #loc55])
#loc108 = loc(fused[#loc57, #loc56])
#loc109 = loc(fused[#loc59, #loc58])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc67])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc70, #loc71])
#loc115 = loc(fused[#loc76, #loc77])
#loc116 = loc(fused[#loc81, #loc78])
