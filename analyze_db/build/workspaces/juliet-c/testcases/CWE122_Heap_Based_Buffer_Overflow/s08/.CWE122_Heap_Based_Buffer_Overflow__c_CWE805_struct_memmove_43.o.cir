!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":24:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":24:40)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":59:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":59:44)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc141 = loc(fused[#loc7, #loc8])
#loc169 = loc(fused[#loc75, #loc76])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43L9badSourceERP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc141)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc142)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc143)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc147)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc21)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc23)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc6)
  } loc(#loc140)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43L9badSourceERP14_twoIntsStruct(%0) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc34)
    cir.scope {
      %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
      cir.scope {
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
        cir.scope {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc45)
          cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc159)
          cir.for : cond {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc48)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc48)
            %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc160)
            cir.condition(%23) loc(#loc160)
          } body {
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc50)
              %21 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
              %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc162)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc54)
              %26 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc55)
              %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
              %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
              %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
              cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc163)
            } loc(#loc161)
            cir.yield loc(#loc44)
          } step {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc58)
            %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc59)
            cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc164)
            cir.yield loc(#loc158)
          } loc(#loc158)
        } loc(#loc158)
      } loc(#loc156)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc60)
      %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc61)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc62)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc165)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc166)
      cir.libc.memmove %10 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc167)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc68)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
      cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc70)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc71)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc72)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
    } loc(#loc154)
    cir.return loc(#loc29)
  } loc(#loc151)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43L13goodG2BSourceERP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc75, #loc76])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc169)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc77)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc78)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc79)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc170)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc171)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc78)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc83)
    cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc86)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc175)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc91)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc74)
  } loc(#loc168)
  cir.func internal private @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43L13goodG2BSourceERP14_twoIntsStruct(%0) : (!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>) -> () loc(#loc98)
    cir.scope {
      %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc181)
      cir.scope {
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc183)
        cir.scope {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc109)
          cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc185)
          cir.for : cond {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc112)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc112)
            %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc186)
            cir.condition(%23) loc(#loc186)
          } body {
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %21 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc115)
              %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
              %23 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
              %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc53)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc188)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %26 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc118)
              %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
              %28 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
              %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc57)
              cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc189)
            } loc(#loc187)
            cir.yield loc(#loc108)
          } step {
            %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc120)
            %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc121)
            cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc190)
            cir.yield loc(#loc184)
          } loc(#loc184)
        } loc(#loc184)
      } loc(#loc182)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc122)
      %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc123)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc124)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc124)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc191)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc192)
      cir.libc.memmove %10 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc193)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
      cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc132)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc133)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc134)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
    } loc(#loc180)
    cir.return loc(#loc93)
  } loc(#loc177)
  cir.func @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43L7goodG2BEv() : () -> () loc(#loc137)
    cir.return loc(#loc136)
  } loc(#loc194)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":24:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":29:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":25:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":27:29)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":27:36)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":27:39)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":27:59)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":27:60)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":28:29)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":31:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":52:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":33:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":33:21)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":34:12)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":34:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":35:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":36:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":51:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":37:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":37:33)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":38:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":46:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":39:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":39:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":45:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:18)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:25)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":42:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":43:36)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":43:24)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":43:17)
#loc53 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":44:36)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":44:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":44:17)
#loc57 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":41:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:31)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:35)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:55)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":48:56)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":49:26)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":49:31)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":49:32)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":49:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":50:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":50:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":59:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":64:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":60:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":62:29)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":62:36)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":62:40)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":62:60)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":62:61)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":62:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:33)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:23)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:24)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:30)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":63:29)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":66:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":87:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":68:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":68:21)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":69:12)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":69:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":70:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":71:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":86:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":72:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":72:33)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":73:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":81:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":74:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":74:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":80:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:22)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:18)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:25)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:29)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":77:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":78:36)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":78:24)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":78:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":79:36)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":79:24)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":79:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:35)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":76:34)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:17)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:23)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:31)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:35)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:55)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":83:56)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":84:26)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":84:31)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":84:32)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":84:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":85:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":85:14)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":89:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":92:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_43.cpp":91:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc12, #loc13])
#loc143 = loc(fused[#loc11, #loc13])
#loc144 = loc(fused[#loc10, #loc14])
#loc145 = loc(fused[#loc15, #loc14])
#loc146 = loc(fused[#loc16, #loc17])
#loc147 = loc(fused[#loc18, #loc19])
#loc148 = loc(fused[#loc20, #loc17])
#loc149 = loc(fused[#loc24, #loc25])
#loc150 = loc(fused[#loc26, #loc27])
#loc151 = loc(fused[#loc28, #loc29])
#loc152 = loc(fused[#loc30, #loc31])
#loc153 = loc(fused[#loc33, #loc32])
#loc154 = loc(fused[#loc35, #loc36])
#loc155 = loc(fused[#loc37, #loc38])
#loc156 = loc(fused[#loc39, #loc40])
#loc157 = loc(fused[#loc41, #loc42])
#loc158 = loc(fused[#loc43, #loc44])
#loc159 = loc(fused[#loc46, #loc45])
#loc160 = loc(fused[#loc47, #loc48])
#loc161 = loc(fused[#loc49, #loc44])
#loc162 = loc(fused[#loc52, #loc50])
#loc163 = loc(fused[#loc56, #loc54])
#loc164 = loc(fused[#loc59, #loc58])
#loc165 = loc(fused[#loc63, #loc64])
#loc166 = loc(fused[#loc62, #loc64])
#loc167 = loc(fused[#loc65, #loc66])
#loc168 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc80, #loc81])
#loc171 = loc(fused[#loc79, #loc81])
#loc172 = loc(fused[#loc78, #loc82])
#loc173 = loc(fused[#loc83, #loc82])
#loc174 = loc(fused[#loc84, #loc85])
#loc175 = loc(fused[#loc86, #loc87])
#loc176 = loc(fused[#loc88, #loc85])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc94, #loc95])
#loc179 = loc(fused[#loc97, #loc96])
#loc180 = loc(fused[#loc99, #loc100])
#loc181 = loc(fused[#loc101, #loc102])
#loc182 = loc(fused[#loc103, #loc104])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc110, #loc109])
#loc186 = loc(fused[#loc111, #loc112])
#loc187 = loc(fused[#loc113, #loc108])
#loc188 = loc(fused[#loc116, #loc114])
#loc189 = loc(fused[#loc119, #loc117])
#loc190 = loc(fused[#loc121, #loc120])
#loc191 = loc(fused[#loc125, #loc126])
#loc192 = loc(fused[#loc124, #loc126])
#loc193 = loc(fused[#loc127, #loc128])
#loc194 = loc(fused[#loc135, #loc136])
