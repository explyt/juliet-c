!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":20:23)
#loc12 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":20:27)
#loc46 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":35:24)
#loc47 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":35:28)
#loc66 = loc(fused[#loc11, #loc12])
#loc78 = loc(fused[#loc46, #loc47])
module @"/workspaces/juliet-c/testcases/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc61)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc63)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc64)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["voidPointer", init] {alignment = 8 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    cir.store %5, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc67)
    cir.br ^bb1 loc(#loc68)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc20)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %8 = cir.cmp(eq, %6, %7) : !cir.ptr<!void>, !cir.bool loc(#loc69)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc70)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc25)
    cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc26)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
    cir.return loc(#loc10)
  } loc(#loc65)
  cir.func no_proto @CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc72)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %0 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %1 ^bb3, ^bb6 loc(#loc32)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // pred: ^bb3
    %2 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %3 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc35)
    %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc36)
    cir.br ^bb6 loc(#loc37)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc31)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc31)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc29)
  } loc(#loc71)
  cir.func no_proto @CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc75)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc74)
  cir.global "private" internal dsolocal @volatileSigAtomic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc76)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc46, #loc47])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %2 = cir.get_global @volatileSigAtomic : !cir.ptr<!s32i> loc(#loc76)
    cir.store volatile %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.return loc(#loc45)
  } loc(#loc77)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc81)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %0 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %1 ^bb3, ^bb6 loc(#loc55)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // pred: ^bb3
    %2 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %3 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
    %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc59)
    cir.br ^bb6 loc(#loc60)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc54)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc52)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function/CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":0:0)
#loc1 = loc("/usr/include/signal.h":88:1)
#loc2 = loc("/usr/include/signal.h":89:6)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":20:1)
#loc10 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":31:1)
#loc13 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":28:5)
#loc14 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":28:34)
#loc15 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":21:1)
#loc16 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":28:25)
#loc17 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":28:32)
#loc18 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:5)
#loc19 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:40)
#loc20 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:9)
#loc21 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:24)
#loc22 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:30)
#loc23 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:31)
#loc24 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:37)
#loc25 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":29:36)
#loc26 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":30:10)
#loc27 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":30:5)
#loc28 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":46:1)
#loc29 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":53:1)
#loc30 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":48:5)
#loc31 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":52:5)
#loc32 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":48:11)
#loc33 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":49:5)
#loc34 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":50:16)
#loc35 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":50:24)
#loc36 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":50:9)
#loc37 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":51:9)
#loc38 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":69:1)
#loc39 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":72:1)
#loc40 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":71:5)
#loc41 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":71:11)
#loc42 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":33:1)
#loc43 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":33:50)
#loc44 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":35:1)
#loc45 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":42:1)
#loc48 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":36:1)
#loc49 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":41:25)
#loc50 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":41:5)
#loc51 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":60:1)
#loc52 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":67:1)
#loc53 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":62:5)
#loc54 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":66:5)
#loc55 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":62:11)
#loc56 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":63:5)
#loc57 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":64:16)
#loc58 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":64:24)
#loc59 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":64:9)
#loc60 = loc("CWE479_Signal_Handler_Use_of_Non_Reentrant_Function__basic_16.c":65:9)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc10])
#loc67 = loc(fused[#loc13, #loc14])
#loc68 = loc(fused[#loc18, #loc19])
#loc69 = loc(fused[#loc20, #loc21])
#loc70 = loc(fused[#loc22, #loc19])
#loc71 = loc(fused[#loc28, #loc29])
#loc72 = loc(fused[#loc30, #loc31])
#loc73 = loc(fused[#loc33, #loc31])
#loc74 = loc(fused[#loc38, #loc39])
#loc75 = loc(fused[#loc40, #loc41])
#loc76 = loc(fused[#loc42, #loc43])
#loc77 = loc(fused[#loc44, #loc45])
#loc79 = loc(fused[#loc50, #loc49])
#loc80 = loc(fused[#loc51, #loc52])
#loc81 = loc(fused[#loc53, #loc54])
#loc82 = loc(fused[#loc56, #loc54])
