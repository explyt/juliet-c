!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":105:10)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":105:14)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":105:20)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":105:32)
#loc203 = loc(fused[#loc142, #loc143])
#loc204 = loc(fused[#loc144, #loc145])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.func @_ZN45CWE124_Buffer_Underwrite__char_alloca_loop_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc162)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc8)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc12)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc12)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc13)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc17)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc19)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %25 = cir.const #cir.int<8> : !s32i loc(#loc23)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc23)
    %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %28 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
      %29 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %30 = cir.load %29 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.store %30, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
      cir.scope {
        %31 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc169)
        %32 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc170)
        %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
        %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %35 = cir.const #cir.int<67> : !s8i loc(#loc37)
        %36 = cir.cast(integral, %35 : !s8i), !s32i loc(#loc37)
        %37 = cir.const #cir.int<100> : !s32i loc(#loc38)
        %38 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc38)
        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %40 bytes from %34 set to %36 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
        %41 = cir.const #cir.int<0> : !s8i loc(#loc42)
        %42 = cir.const #cir.int<100> : !s32i loc(#loc43)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc43)
        %45 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
        %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc172)
        cir.scope {
          %54 = cir.const #cir.int<0> : !s32i loc(#loc48)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc48)
          cir.store %55, %31 : !u64i, !cir.ptr<!u64i> loc(#loc174)
          cir.for : cond {
            %56 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %57 = cir.const #cir.int<100> : !s32i loc(#loc51)
            %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc51)
            %59 = cir.cmp(lt, %56, %58) : !u64i, !cir.bool loc(#loc175)
            cir.condition(%59) loc(#loc175)
          } body {
            %56 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc52)
            %57 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
            %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc53)
            %59 = cir.load %58 : !cir.ptr<!s8i>, !s8i loc(#loc53)
            %60 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %61 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc55)
            %62 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc56)
            cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc176)
            cir.yield loc(#loc47)
          } step {
            %56 = cir.load %31 : !cir.ptr<!u64i>, !u64i loc(#loc58)
            %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc59)
            cir.store %57, %31 : !u64i, !cir.ptr<!u64i> loc(#loc177)
            cir.yield loc(#loc173)
          } loc(#loc173)
        } loc(#loc173)
        %47 = cir.const #cir.int<0> : !s8i loc(#loc60)
        %48 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
        %49 = cir.const #cir.int<100> : !s32i loc(#loc62)
        %50 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc62)
        %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc64)
        cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc178)
        %53 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc4)
  } loc(#loc159)
  cir.func internal private @_ZN45CWE124_Buffer_Underwrite__char_alloca_loop_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc182)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc74)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc74)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc74)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc74)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    %12 = cir.const #cir.int<65> : !s8i loc(#loc76)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc76)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc77)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc77)
    cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
    %18 = cir.const #cir.int<0> : !s8i loc(#loc81)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc83)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc187)
      %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
      cir.scope {
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc189)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc190)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
        %32 = cir.const #cir.int<67> : !s8i loc(#loc99)
        %33 = cir.cast(integral, %32 : !s8i), !s32i loc(#loc99)
        %34 = cir.const #cir.int<100> : !s32i loc(#loc100)
        %35 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc100)
        %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc100)
        cir.libc.memset %37 bytes from %31 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc191)
        %38 = cir.const #cir.int<0> : !s8i loc(#loc104)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc105)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc105)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc107)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc192)
        cir.scope {
          %51 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc110)
          cir.store %52, %28 : !u64i, !cir.ptr<!u64i> loc(#loc194)
          cir.for : cond {
            %53 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %54 = cir.const #cir.int<100> : !s32i loc(#loc113)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc113)
            %56 = cir.cmp(lt, %53, %55) : !u64i, !cir.bool loc(#loc195)
            cir.condition(%56) loc(#loc195)
          } body {
            %53 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc114)
            %54 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc115)
            %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc115)
            %57 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            %58 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc117)
            %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc118)
            cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc196)
            cir.yield loc(#loc109)
          } step {
            %53 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc120)
            %54 = cir.unary(inc, %53) : !u64i, !u64i loc(#loc121)
            cir.store %54, %28 : !u64i, !cir.ptr<!u64i> loc(#loc197)
            cir.yield loc(#loc193)
          } loc(#loc193)
        } loc(#loc193)
        %44 = cir.const #cir.int<0> : !s8i loc(#loc122)
        %45 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
        %46 = cir.const #cir.int<100> : !s32i loc(#loc124)
        %47 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %48 = cir.binop(sub, %46, %47) nsw : !s32i loc(#loc124)
        %49 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc126)
        cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc198)
        %50 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } loc(#loc188)
    } loc(#loc186)
    cir.return loc(#loc68)
  } loc(#loc179)
  cir.func @_ZN45CWE124_Buffer_Underwrite__char_alloca_loop_334goodEv() extra(#fn_attr) {
    cir.call @_ZN45CWE124_Buffer_Underwrite__char_alloca_loop_33L7goodG2BEv() : () -> () loc(#loc131)
    cir.return loc(#loc130)
  } loc(#loc199)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc139)
  cir.func @main(%arg0: !s32i loc(fused[#loc142, #loc143]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc144, #loc145])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc141)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc146)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc147)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc148)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc148)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc149)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc136)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.call @_ZN45CWE124_Buffer_Underwrite__char_alloca_loop_334goodEv() : () -> () loc(#loc151)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc137)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc138)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.call @_ZN45CWE124_Buffer_Underwrite__char_alloca_loop_333badEv() : () -> () loc(#loc154)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc139)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc156)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %15 : !s32i loc(#loc205)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":26:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":52:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":28:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":28:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":29:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":29:23)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":30:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":30:33)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":31:12)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":31:24)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":31:29)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":31:33)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":31:5)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":31:34)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":32:25)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":32:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":32:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":32:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":32:21)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":34:12)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":34:25)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":34:23)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":34:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":35:5)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":51:5)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":36:9)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":36:23)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":37:9)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":50:9)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":38:13)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":38:20)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":39:13)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":39:28)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":40:20)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":40:28)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":40:33)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":40:37)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":40:13)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":40:38)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":41:29)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":41:20)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":41:24)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":41:13)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:13)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":46:13)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:22)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:18)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:25)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:29)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":45:34)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":45:27)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":45:17)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":45:22)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":45:23)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":45:35)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:35)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":43:34)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":48:27)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":48:13)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":48:18)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":48:22)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":48:23)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":49:23)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":49:13)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":59:1)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":85:1)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":61:5)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":61:12)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":62:5)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":62:23)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":63:5)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":63:33)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":64:12)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":64:24)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":64:29)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":64:33)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":64:5)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":64:34)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":65:25)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":65:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":65:16)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":65:20)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":65:21)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":67:12)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":67:5)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":68:5)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":84:5)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":69:9)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":69:23)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":70:9)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":83:9)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":71:13)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":71:20)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":72:13)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":72:28)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":73:20)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":73:28)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":73:33)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":73:37)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":73:13)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":73:38)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":74:29)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":74:20)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":74:24)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":74:13)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:13)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":79:13)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:22)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:18)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:25)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:29)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":78:34)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":78:27)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":78:17)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":78:22)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":78:23)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":78:35)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:35)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":76:34)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":81:27)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":81:13)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":81:18)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":81:22)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":81:23)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":82:23)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":82:13)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":87:1)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":90:1)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":89:5)
#loc132 = loc("/usr/include/stdlib.h":575:1)
#loc133 = loc("/usr/include/stdlib.h":575:41)
#loc134 = loc("/usr/include/time.h":76:1)
#loc135 = loc("/usr/include/time.h":76:38)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":110:15)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":112:15)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":115:15)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":117:15)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":105:1)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":120:1)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":106:1)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":108:27)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":108:22)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":108:5)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":110:5)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":111:5)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":112:5)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":115:5)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":116:5)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":117:5)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":119:12)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_33.cpp":119:5)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc7, #loc8])
#loc162 = loc(fused[#loc9, #loc10])
#loc163 = loc(fused[#loc15, #loc16])
#loc164 = loc(fused[#loc18, #loc17])
#loc165 = loc(fused[#loc25, #loc23])
#loc166 = loc(fused[#loc26, #loc27])
#loc167 = loc(fused[#loc28, #loc29])
#loc168 = loc(fused[#loc30, #loc31])
#loc169 = loc(fused[#loc32, #loc33])
#loc170 = loc(fused[#loc34, #loc35])
#loc171 = loc(fused[#loc40, #loc41])
#loc172 = loc(fused[#loc45, #loc42])
#loc173 = loc(fused[#loc46, #loc47])
#loc174 = loc(fused[#loc49, #loc48])
#loc175 = loc(fused[#loc50, #loc51])
#loc176 = loc(fused[#loc54, #loc57])
#loc177 = loc(fused[#loc59, #loc58])
#loc178 = loc(fused[#loc61, #loc60])
#loc179 = loc(fused[#loc67, #loc68])
#loc180 = loc(fused[#loc69, #loc70])
#loc181 = loc(fused[#loc71, #loc72])
#loc182 = loc(fused[#loc73, #loc74])
#loc183 = loc(fused[#loc79, #loc80])
#loc184 = loc(fused[#loc82, #loc81])
#loc185 = loc(fused[#loc87, #loc86])
#loc186 = loc(fused[#loc88, #loc89])
#loc187 = loc(fused[#loc90, #loc91])
#loc188 = loc(fused[#loc92, #loc93])
#loc189 = loc(fused[#loc94, #loc95])
#loc190 = loc(fused[#loc96, #loc97])
#loc191 = loc(fused[#loc102, #loc103])
#loc192 = loc(fused[#loc107, #loc104])
#loc193 = loc(fused[#loc108, #loc109])
#loc194 = loc(fused[#loc111, #loc110])
#loc195 = loc(fused[#loc112, #loc113])
#loc196 = loc(fused[#loc116, #loc119])
#loc197 = loc(fused[#loc121, #loc120])
#loc198 = loc(fused[#loc123, #loc122])
#loc199 = loc(fused[#loc129, #loc130])
#loc200 = loc(fused[#loc132, #loc133])
#loc201 = loc(fused[#loc134, #loc135])
#loc202 = loc(fused[#loc140, #loc141])
#loc205 = loc(fused[#loc157, #loc156])
