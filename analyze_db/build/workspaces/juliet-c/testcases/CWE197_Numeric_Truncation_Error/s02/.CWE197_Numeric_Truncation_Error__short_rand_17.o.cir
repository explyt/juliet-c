!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":30:23)
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc64)
  cir.func private @printHexCharLine(!s8i) loc(#loc65)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_rand_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc67)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc68)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc69)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc14)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc14)
    cir.store %5, %2 : !s16i, !cir.ptr<!s16i> loc(#loc70)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc73)
    cir.brcond %9 ^bb3, ^bb11 loc(#loc22)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // pred: ^bb3
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %12 = cir.binop(and, %10, %11) : !s32i loc(#loc24)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc24)
  ^bb5:  // pred: ^bb4
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc24)
    %16 = cir.const #cir.int<30> : !s32i loc(#loc24)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc24)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc24)
    %20 = cir.const #cir.int<15> : !s32i loc(#loc24)
    %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc24)
    %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc24)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc24)
    %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc24)
    cir.br ^bb7(%25 : !u32i) loc(#loc24)
  ^bb6:  // pred: ^bb4
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc24)
    %28 = cir.const #cir.int<30> : !s32i loc(#loc24)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc24)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc24)
    %32 = cir.const #cir.int<15> : !s32i loc(#loc24)
    %33 = cir.shift(left, %31 : !u32i, %32 : !s32i) -> !u32i loc(#loc24)
    %34 = cir.binop(xor, %29, %33) : !u32i loc(#loc24)
    %35 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc24)
    %37 = cir.binop(xor, %34, %36) : !u32i loc(#loc24)
    %38 = cir.unary(minus, %37) : !u32i, !u32i loc(#loc24)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc24)
    %41 = cir.binop(sub, %38, %40) : !u32i loc(#loc24)
    cir.br ^bb7(%41 : !u32i) loc(#loc24)
  ^bb7(%42: !u32i loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":30:23)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %43 = cir.cast(integral, %42 : !u32i), !s32i loc(#loc24)
    %44 = cir.cast(integral, %43 : !s32i), !s16i loc(#loc24)
    cir.store %44, %2 : !s16i, !cir.ptr<!s16i> loc(#loc75)
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %46 = cir.unary(inc, %45) nsw : !s32i, !s32i loc(#loc27)
    cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.br ^bb2 loc(#loc71)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc17)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc77)
  ^bb13:  // pred: ^bb12
    %47 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc8)
    %48 = cir.cast(integral, %47 : !s16i), !s8i loc(#loc8)
    cir.store %48, %0 : !s8i, !cir.ptr<!s8i> loc(#loc67)
    %49 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    cir.call @printHexCharLine(%49) : (!s8i) -> () loc(#loc31)
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc66)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_rand_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc79)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc78)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc81)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc82)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc83)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc45)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc45)
    cir.store %5, %2 : !s16i, !cir.ptr<!s16i> loc(#loc84)
    cir.br ^bb1 loc(#loc85)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.br ^bb2 loc(#loc85)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc87)
    cir.brcond %9 ^bb3, ^bb7 loc(#loc53)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc88)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<127> : !s32i loc(#loc55)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc56)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc55)
    %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc55)
    cir.store %13, %2 : !s16i, !cir.ptr<!s16i> loc(#loc89)
    cir.br ^bb5 loc(#loc48)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc48)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc59)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.br ^bb2 loc(#loc85)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc48)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc39)
    %17 = cir.cast(integral, %16 : !s16i), !s8i loc(#loc39)
    cir.store %17, %0 : !s8i, !cir.ptr<!s8i> loc(#loc81)
    %18 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc62)
    cir.call @printHexCharLine(%18) : (!s8i) -> () loc(#loc63)
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc37)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":21:1)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":37:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":34:9)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":34:31)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":23:5)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":23:9)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":24:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":24:11)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":26:13)
#loc14 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":26:12)
#loc15 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":26:5)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:5)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":31:5)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:13)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:9)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:16)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:20)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:18)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":28:5)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":30:9)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:24)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":27:23)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":32:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":36:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":35:26)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":35:9)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":62:1)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":65:1)
#loc34 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":64:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":64:13)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":44:1)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":60:1)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":57:9)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":57:31)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":46:5)
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":46:9)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":47:5)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":47:11)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":49:13)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":49:12)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":49:5)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:5)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":54:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:13)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:9)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:16)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:20)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:18)
#loc54 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":51:5)
#loc55 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":53:16)
#loc56 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":53:25)
#loc57 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":53:9)
#loc58 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:24)
#loc59 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":50:23)
#loc60 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":55:5)
#loc61 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":59:5)
#loc62 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":58:26)
#loc63 = loc("CWE197_Numeric_Truncation_Error__short_rand_17.c":58:9)
#loc64 = loc(fused[#loc1, #loc2])
#loc65 = loc(fused[#loc3, #loc4])
#loc66 = loc(fused[#loc5, #loc6])
#loc67 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc9, #loc10])
#loc69 = loc(fused[#loc11, #loc12])
#loc70 = loc(fused[#loc15, #loc13])
#loc71 = loc(fused[#loc16, #loc17])
#loc72 = loc(fused[#loc19, #loc18])
#loc73 = loc(fused[#loc20, #loc21])
#loc74 = loc(fused[#loc23, #loc17])
#loc75 = loc(fused[#loc25, #loc24])
#loc76 = loc(fused[#loc27, #loc26])
#loc77 = loc(fused[#loc28, #loc29])
#loc78 = loc(fused[#loc32, #loc33])
#loc79 = loc(fused[#loc34, #loc35])
#loc80 = loc(fused[#loc36, #loc37])
#loc81 = loc(fused[#loc38, #loc39])
#loc82 = loc(fused[#loc40, #loc41])
#loc83 = loc(fused[#loc42, #loc43])
#loc84 = loc(fused[#loc46, #loc44])
#loc85 = loc(fused[#loc47, #loc48])
#loc86 = loc(fused[#loc50, #loc49])
#loc87 = loc(fused[#loc51, #loc52])
#loc88 = loc(fused[#loc54, #loc48])
#loc89 = loc(fused[#loc57, #loc56])
#loc90 = loc(fused[#loc59, #loc58])
#loc91 = loc(fused[#loc60, #loc61])
