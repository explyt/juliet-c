!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc55)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%1) loc(#loc13)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc17)
            %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
            %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
            %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
            %4 = cir.const #cir.int<1> : !u64i loc(#loc62)
            %5 = cir.const #cir.int<6> : !u64i loc(#loc63)
            %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc55)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
            %8 = cir.call @fwrite(%3, %4, %5, %7) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc17)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc24)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc24)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc64)
            cir.if %11 {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc26)
            } loc(#loc65)
          } loc(#loc60)
          cir.break loc(#loc27)
        } loc(#loc59)
        cir.yield loc(#loc12)
      } loc(#loc58)
    } loc(#loc58)
    cir.return loc(#loc10)
  } loc(#loc57)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc29)
  } loc(#loc66)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc36)
        cir.condition(%1) loc(#loc36)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc40)
            %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc41)
            %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc41)
            %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
            %4 = cir.const #cir.int<1> : !u64i loc(#loc73)
            %5 = cir.const #cir.int<6> : !u64i loc(#loc74)
            %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc55)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
            %8 = cir.call @fwrite(%3, %4, %5, %7) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc40)
            %9 = cir.const #cir.int<6> : !u64i loc(#loc75)
            %10 = cir.cmp(ne, %8, %9) : !u64i, !cir.bool loc(#loc76)
            cir.if %10 {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
            } loc(#loc77)
          } loc(#loc71)
          cir.break loc(#loc53)
        } loc(#loc70)
        cir.yield loc(#loc35)
      } loc(#loc69)
    } loc(#loc69)
    cir.return loc(#loc33)
  } loc(#loc68)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":745:1)
#loc2 = loc("/usr/include/stdio.h":746:43)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:28)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":32:23)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":36:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":26:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":35:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":26:11)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":27:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":33:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:13)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:20)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:38)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:49)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:52)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:67)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:70)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":30:80)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":31:9)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":32:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":34:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":56:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":59:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":58:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":58:11)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":43:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":54:1)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":45:5)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":53:5)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":45:11)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":46:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:9)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":51:9)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:13)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:28)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:20)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:38)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:49)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:52)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:67)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:70)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:81)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":48:96)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":49:9)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":50:23)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":50:13)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_16.c":52:9)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc4, #loc5])
#loc56 = loc(fused[#loc6, #loc7])
#loc57 = loc(fused[#loc9, #loc10])
#loc58 = loc(fused[#loc11, #loc12])
#loc59 = loc(fused[#loc14, #loc12])
#loc60 = loc(fused[#loc15, #loc16])
#loc61 = loc(fused[#loc18, #loc3])
#loc62 = loc(fused[#loc19, #loc20])
#loc63 = loc(fused[#loc21, #loc22])
#loc64 = loc(fused[#loc17, #loc24])
#loc65 = loc(fused[#loc25, #loc16])
#loc66 = loc(fused[#loc28, #loc29])
#loc67 = loc(fused[#loc30, #loc31])
#loc68 = loc(fused[#loc32, #loc33])
#loc69 = loc(fused[#loc34, #loc35])
#loc70 = loc(fused[#loc37, #loc35])
#loc71 = loc(fused[#loc38, #loc39])
#loc72 = loc(fused[#loc42, #loc41])
#loc73 = loc(fused[#loc43, #loc44])
#loc74 = loc(fused[#loc45, #loc46])
#loc75 = loc(fused[#loc48, #loc49])
#loc76 = loc(fused[#loc40, #loc49])
#loc77 = loc(fused[#loc50, #loc39])
