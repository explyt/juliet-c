!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc50)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc52)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc10)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s8i>, %3 : !s32i), !cir.ptr<!s8i> loc(#loc11)
    %5 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc9)
    cir.call @printHexCharLine(%5) : (!s8i) -> () loc(#loc12)
    cir.return loc(#loc4)
  } loc(#loc51)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc55)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc56)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    cir.return loc(#loc14)
  } loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc19)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s8i>, %4 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    %6 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc25)
    cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc28)
    cir.return loc(#loc21)
  } loc(#loc57)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc36)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    cir.br ^bb1 loc(#loc64)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!s8i>, !cir.bool loc(#loc65)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc66)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc45)
    cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc48)
    cir.br ^bb4 loc(#loc43)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc31)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc33)
  } loc(#loc61)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":24:1)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":32:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":26:5)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":26:12)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":28:12)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":28:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":31:22)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":31:27)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":31:28)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":31:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":67:1)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":71:1)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":69:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":69:13)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":70:5)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":70:13)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":43:12)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":39:1)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":47:1)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":41:5)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":41:12)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":43:5)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":46:22)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":46:27)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":46:28)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":46:5)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":63:19)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":50:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":65:1)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":52:5)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":52:12)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":54:12)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":54:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":56:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":64:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":56:9)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":56:17)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":57:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":60:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":62:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":59:26)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":59:31)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":59:32)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":59:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_01.c":63:9)
#loc50 = loc(fused[#loc1, #loc2])
#loc51 = loc(fused[#loc3, #loc4])
#loc52 = loc(fused[#loc5, #loc6])
#loc53 = loc(fused[#loc8, #loc7])
#loc54 = loc(fused[#loc13, #loc14])
#loc55 = loc(fused[#loc15, #loc16])
#loc56 = loc(fused[#loc17, #loc18])
#loc57 = loc(fused[#loc20, #loc21])
#loc58 = loc(fused[#loc22, #loc23])
#loc59 = loc(fused[#loc24, #loc19])
#loc60 = loc(fused[#loc29, #loc30])
#loc61 = loc(fused[#loc32, #loc33])
#loc62 = loc(fused[#loc34, #loc35])
#loc63 = loc(fused[#loc37, #loc36])
#loc64 = loc(fused[#loc38, #loc39])
#loc65 = loc(fused[#loc40, #loc41])
#loc66 = loc(fused[#loc42, #loc43, #loc44, #loc39])
