!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc340)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc341)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc344)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc345)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc346)
  cir.func private @close(!s32i) -> !s32i loc(#loc347)
  cir.func private @printIntLine(!s32i) loc(#loc348)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc349)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc352)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc353)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc354)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc355)
    %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc356)
    %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc357)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc39)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.goto "source" loc(#loc359)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc43)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc31)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc33)
    cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.scope {
      cir.do {
        cir.scope {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc48)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc50)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc362)
          cir.scope {
            %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc57)
            %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc57)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc364)
            cir.if %62 {
              cir.break loc(#loc59)
            } loc(#loc365)
          } loc(#loc363)
          %18 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc366)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc62)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc367)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc368)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc67)
          %23 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc369)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc70)
          %26 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc370)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc74)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc74)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
          %31 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc371)
          cir.scope {
            %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %60 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc373)
            %61 = cir.const #cir.int<16> : !u64i loc(#loc374)
            %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc374)
            %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
            %64 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc87)
            %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc375)
            cir.if %66 {
              cir.break loc(#loc89)
            } loc(#loc376)
          } loc(#loc372)
          cir.scope {
            %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %60 = cir.const #cir.int<5> : !s32i loc(#loc93)
            %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc95)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc378)
            cir.if %64 {
              cir.break loc(#loc97)
            } loc(#loc379)
          } loc(#loc377)
          %32 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
          cir.store %35, %4 : !s32i, !cir.ptr<!s32i> loc(#loc380)
          cir.scope {
            %59 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc107)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc382)
            cir.if %62 {
              cir.break loc(#loc109)
            } loc(#loc383)
          } loc(#loc381)
          %36 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %37 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
          %39 = cir.const #cir.int<3> : !s32i loc(#loc112)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc112)
          %41 = cir.const #cir.int<4> : !u64i loc(#loc112)
          %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc112)
          %43 = cir.const #cir.int<2> : !s32i loc(#loc112)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc112)
          %45 = cir.binop(add, %42, %44) : !u64i loc(#loc112)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc113)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc384)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc114)
          %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc115)
          cir.store %51, %1 : !s32i, !cir.ptr<!s32i> loc(#loc385)
          cir.scope {
            %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc121)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc387)
            %63 = cir.ternary(%62, true {
              %64 = cir.const #true loc(#loc122)
              cir.yield %64 : !cir.bool loc(#loc122)
            }, false {
              %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %65 = cir.const #cir.int<0> : !s32i loc(#loc124)
              %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc388)
              %67 = cir.ternary(%66, true {
                %68 = cir.const #true loc(#loc122)
                cir.yield %68 : !cir.bool loc(#loc122)
              }, false {
                %68 = cir.const #false loc(#loc122)
                cir.yield %68 : !cir.bool loc(#loc122)
              }) : (!cir.bool) -> !cir.bool loc(#loc122)
              cir.yield %67 : !cir.bool loc(#loc122)
            }) : (!cir.bool) -> !cir.bool loc(#loc122)
            cir.if %63 {
              cir.break loc(#loc126)
            } loc(#loc389)
          } loc(#loc386)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc127)
          %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %55 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
          %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc129)
          cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc390)
          %57 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
          %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc131)
          cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
        } loc(#loc361)
        cir.yield loc(#loc45)
      } while {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc134)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc134)
        cir.condition(%15) loc(#loc134)
      } loc(#loc360)
    } loc(#loc360)
    cir.scope {
      %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc138)
      %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc138)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc393)
      cir.if %17 {
        %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc141)
      } loc(#loc394)
    } loc(#loc392)
    cir.scope {
      %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc145)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc396)
      cir.if %17 {
        %18 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc147)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc148)
      } loc(#loc397)
    } loc(#loc395)
    cir.goto "sink" loc(#loc398)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc151)
    %13 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc357)
    cir.store %13, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc357)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc155)
      %16 = cir.cmp(ge, %14, %15) : !s32i, !cir.bool loc(#loc400)
      cir.if %16 {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
        %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc160)
        %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc160)
        %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc161)
      } else {
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc21)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc21)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc162)
      } loc(#loc401)
    } loc(#loc399)
    cir.return loc(#loc23)
  } loc(#loc350)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc403)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc165)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc404)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc167)
    cir.return loc(#loc164)
  } loc(#loc402)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc169)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc407)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc408)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc409)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc410)
    %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc411)
    %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc412)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc187)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.goto "source" loc(#loc414)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc191)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc179)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc181)
    cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.scope {
      cir.do {
        cir.scope {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc196)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc197)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc198)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc199)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc417)
          cir.scope {
            %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc205)
            %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc205)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc419)
            cir.if %62 {
              cir.break loc(#loc207)
            } loc(#loc420)
          } loc(#loc418)
          %18 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc421)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc210)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc422)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc423)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc215)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc215)
          %23 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc424)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc217)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc217)
          %26 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc425)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc219)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc219)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc220)
          %31 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc426)
          cir.scope {
            %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %60 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc428)
            %61 = cir.const #cir.int<16> : !u64i loc(#loc429)
            %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc429)
            %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc230)
            %64 = cir.const #cir.int<1> : !s32i loc(#loc231)
            %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc231)
            %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc430)
            cir.if %66 {
              cir.break loc(#loc233)
            } loc(#loc431)
          } loc(#loc427)
          cir.scope {
            %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc236)
            %60 = cir.const #cir.int<5> : !s32i loc(#loc237)
            %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc239)
            %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc239)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc433)
            cir.if %64 {
              cir.break loc(#loc241)
            } loc(#loc434)
          } loc(#loc432)
          %32 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc242)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc243)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc244)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc245)
          cir.store %35, %4 : !s32i, !cir.ptr<!s32i> loc(#loc435)
          cir.scope {
            %59 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc250)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc251)
            %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc251)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc437)
            cir.if %62 {
              cir.break loc(#loc253)
            } loc(#loc438)
          } loc(#loc436)
          %36 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc254)
          %37 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc255)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc255)
          %39 = cir.const #cir.int<3> : !s32i loc(#loc256)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc256)
          %41 = cir.const #cir.int<4> : !u64i loc(#loc256)
          %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc256)
          %43 = cir.const #cir.int<2> : !s32i loc(#loc256)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc256)
          %45 = cir.binop(add, %42, %44) : !u64i loc(#loc256)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc257)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc257)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc439)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc258)
          %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc259)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc259)
          cir.store %51, %1 : !s32i, !cir.ptr<!s32i> loc(#loc440)
          cir.scope {
            %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc264)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc265)
            %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc265)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc442)
            %63 = cir.ternary(%62, true {
              %64 = cir.const #true loc(#loc266)
              cir.yield %64 : !cir.bool loc(#loc266)
            }, false {
              %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc267)
              %65 = cir.const #cir.int<0> : !s32i loc(#loc268)
              %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc443)
              %67 = cir.ternary(%66, true {
                %68 = cir.const #true loc(#loc266)
                cir.yield %68 : !cir.bool loc(#loc266)
              }, false {
                %68 = cir.const #false loc(#loc266)
                cir.yield %68 : !cir.bool loc(#loc266)
              }) : (!cir.bool) -> !cir.bool loc(#loc266)
              cir.yield %67 : !cir.bool loc(#loc266)
            }) : (!cir.bool) -> !cir.bool loc(#loc266)
            cir.if %63 {
              cir.break loc(#loc270)
            } loc(#loc444)
          } loc(#loc441)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc271)
          %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc271)
          %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc272)
          %55 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc273)
          %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc273)
          cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc445)
          %57 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc274)
          %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc275)
          cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc446)
        } loc(#loc416)
        cir.yield loc(#loc193)
      } while {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc278)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc278)
        cir.condition(%15) loc(#loc278)
      } loc(#loc415)
    } loc(#loc415)
    cir.scope {
      %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc281)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc282)
      %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc282)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc448)
      cir.if %17 {
        %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc284)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc285)
      } loc(#loc449)
    } loc(#loc447)
    cir.scope {
      %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc288)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc289)
      %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc289)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc451)
      cir.if %17 {
        %18 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc291)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc292)
      } loc(#loc452)
    } loc(#loc450)
    cir.goto "sink" loc(#loc453)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc295)
    %13 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc412)
    cir.store %13, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc412)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc298)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc299)
      %16 = cir.cmp(ge, %14, %15) : !s32i, !cir.bool loc(#loc455)
      %17 = cir.ternary(%16, true {
        %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
        %19 = cir.const #cir.int<10> : !s32i loc(#loc302)
        %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc456)
        %21 = cir.ternary(%20, true {
          %22 = cir.const #true loc(#loc300)
          cir.yield %22 : !cir.bool loc(#loc300)
        }, false {
          %22 = cir.const #false loc(#loc300)
          cir.yield %22 : !cir.bool loc(#loc300)
        }) : (!cir.bool) -> !cir.bool loc(#loc300)
        cir.yield %21 : !cir.bool loc(#loc300)
      }, false {
        %18 = cir.const #false loc(#loc300)
        cir.yield %18 : !cir.bool loc(#loc300)
      }) : (!cir.bool) -> !cir.bool loc(#loc300)
      cir.if %17 {
        %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
        %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc308)
        %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc308)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc308)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc309)
      } else {
        %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc169)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc169)
        cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc310)
      } loc(#loc457)
    } loc(#loc454)
    cir.return loc(#loc171)
  } loc(#loc405)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc459)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc460)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc318)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc461)
    cir.goto "source" loc(#loc462)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc322)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc323)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
    cir.goto "sink" loc(#loc464)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc327)
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc460)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc460)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc330)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc331)
      %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc466)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc335)
        %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc336)
        %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc336)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc336)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc337)
      } else {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc338)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc338)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc339)
      } loc(#loc467)
    } loc(#loc465)
    cir.return loc(#loc312)
  } loc(#loc458)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_18.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":132:23)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":44:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":135:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":46:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":46:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":56:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":56:13)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":57:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":57:28)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":58:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":58:31)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":59:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":59:31)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":60:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":60:41)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":123:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":123:30)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":48:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":48:12)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":48:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":49:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":49:10)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":50:1)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":61:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":104:17)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":62:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":103:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":71:35)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":71:44)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":71:57)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":71:28)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":71:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":71:68)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":72:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":75:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":72:17)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":72:33)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":73:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":74:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:20)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:21)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:30)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:33)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:47)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":76:48)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":77:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":77:13)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":78:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":78:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":79:38)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":79:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":79:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":79:46)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:13)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":83:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:22)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:54)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:55)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:64)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:78)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:17)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":80:84)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":81:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":82:17)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":84:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":87:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":84:24)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":84:38)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":84:17)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":84:57)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":85:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":86:17)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":88:35)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":88:49)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":88:55)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":88:28)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":88:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":88:59)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":89:13)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":92:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":89:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":89:33)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":90:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":91:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:31)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:45)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:58)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:76)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:79)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:26)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":94:80)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":95:13)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":98:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":95:17)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":95:31)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":95:44)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":95:47)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":95:61)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":96:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":97:17)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":100:39)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":100:25)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":100:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":102:25)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":102:20)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":102:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":102:36)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":104:16)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":105:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":108:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":105:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":105:29)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":106:9)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":107:26)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":107:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":109:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":112:9)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":109:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":109:29)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":110:9)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":111:26)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":111:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":120:5)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":120:10)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":121:1)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":126:9)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":133:9)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":126:13)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":126:21)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":127:9)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":129:9)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":131:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":128:33)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":128:26)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":128:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":132:13)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":262:1)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":266:1)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":264:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":264:13)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":265:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":265:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":229:23)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":142:1)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":232:1)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":144:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":144:9)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":154:9)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":154:13)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":155:9)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":155:28)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":156:9)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":156:31)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":157:9)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":157:31)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":158:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":158:41)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":221:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":221:30)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":146:13)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":146:12)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":146:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":147:5)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":147:10)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":148:1)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":159:9)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":202:17)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":160:9)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":201:9)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":169:35)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":169:44)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":169:57)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":169:28)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":169:13)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":169:68)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":170:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":173:13)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":170:17)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":170:33)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":171:13)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":172:17)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:20)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:21)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:30)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:33)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:47)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:13)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":174:48)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":175:34)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":175:13)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":176:39)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":176:13)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":177:38)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":177:32)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":177:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":177:46)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:13)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":181:13)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:22)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:54)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:55)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:64)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:78)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:17)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":178:84)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":179:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":180:17)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":182:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":185:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":182:24)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":182:38)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":182:17)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":182:57)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":183:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":184:17)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":186:35)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":186:49)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":186:55)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":186:28)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":186:13)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":186:59)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":187:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":190:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":187:17)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":187:33)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":188:13)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":189:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:31)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:45)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:58)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:76)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:79)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:26)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:13)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":192:80)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":193:13)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":196:13)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":193:17)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":193:31)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":193:44)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":193:47)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":193:61)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":194:13)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":195:17)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":198:39)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":198:25)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":198:13)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":200:25)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":200:20)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":200:13)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":200:36)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":202:16)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":203:9)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":206:9)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":203:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":203:29)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":204:9)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":205:26)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":205:13)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":207:9)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":210:9)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":207:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":207:29)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":208:9)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":209:26)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":209:13)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":218:5)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":218:10)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":219:1)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:9)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":230:9)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:13)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:21)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:23)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:26)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:34)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":223:36)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":224:9)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":226:9)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":228:9)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":225:33)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":225:26)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":225:13)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":229:13)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":235:1)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":260:1)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":237:5)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":237:9)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":248:9)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":248:30)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":239:13)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":239:12)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":239:5)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":240:5)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":240:10)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":241:1)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":244:12)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":244:5)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":245:5)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":245:10)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":246:1)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":251:9)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":258:9)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":251:13)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":251:21)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":252:9)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":254:9)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":256:9)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":253:33)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":253:26)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":253:13)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":257:23)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_18.c":257:13)
#loc340 = loc(fused[#loc1, #loc2])
#loc341 = loc(fused[#loc3, #loc4])
#loc342 = loc(fused[#loc5, #loc6])
#loc343 = loc(fused[#loc7, #loc8])
#loc344 = loc(fused[#loc9, #loc10])
#loc345 = loc(fused[#loc11, #loc12])
#loc346 = loc(fused[#loc13, #loc14])
#loc347 = loc(fused[#loc15, #loc16])
#loc348 = loc(fused[#loc17, #loc18])
#loc349 = loc(fused[#loc19, #loc20])
#loc350 = loc(fused[#loc22, #loc23])
#loc351 = loc(fused[#loc24, #loc25])
#loc352 = loc(fused[#loc26, #loc27])
#loc353 = loc(fused[#loc28, #loc29])
#loc354 = loc(fused[#loc30, #loc31])
#loc355 = loc(fused[#loc32, #loc33])
#loc356 = loc(fused[#loc34, #loc35])
#loc357 = loc(fused[#loc36, #loc37])
#loc358 = loc(fused[#loc40, #loc38])
#loc359 = loc(fused[#loc41, #loc42])
#loc360 = loc(fused[#loc44, #loc45])
#loc361 = loc(fused[#loc46, #loc47])
#loc362 = loc(fused[#loc52, #loc53])
#loc363 = loc(fused[#loc54, #loc55])
#loc364 = loc(fused[#loc56, #loc57])
#loc365 = loc(fused[#loc58, #loc55])
#loc366 = loc(fused[#loc60, #loc61])
#loc367 = loc(fused[#loc63, #loc64])
#loc368 = loc(fused[#loc65, #loc66])
#loc369 = loc(fused[#loc69, #loc67])
#loc370 = loc(fused[#loc73, #loc70])
#loc371 = loc(fused[#loc77, #loc78])
#loc372 = loc(fused[#loc79, #loc80])
#loc373 = loc(fused[#loc82, #loc83])
#loc374 = loc(fused[#loc84, #loc85])
#loc375 = loc(fused[#loc86, #loc87])
#loc376 = loc(fused[#loc88, #loc80])
#loc377 = loc(fused[#loc90, #loc91])
#loc378 = loc(fused[#loc94, #loc95])
#loc379 = loc(fused[#loc96, #loc91])
#loc380 = loc(fused[#loc102, #loc103])
#loc381 = loc(fused[#loc104, #loc105])
#loc382 = loc(fused[#loc106, #loc107])
#loc383 = loc(fused[#loc108, #loc105])
#loc384 = loc(fused[#loc112, #loc113])
#loc385 = loc(fused[#loc116, #loc117])
#loc386 = loc(fused[#loc118, #loc119])
#loc387 = loc(fused[#loc120, #loc121])
#loc388 = loc(fused[#loc123, #loc124])
#loc389 = loc(fused[#loc125, #loc119])
#loc390 = loc(fused[#loc129, #loc127])
#loc391 = loc(fused[#loc132, #loc133])
#loc392 = loc(fused[#loc135, #loc136])
#loc393 = loc(fused[#loc137, #loc138])
#loc394 = loc(fused[#loc139, #loc136])
#loc395 = loc(fused[#loc142, #loc143])
#loc396 = loc(fused[#loc144, #loc145])
#loc397 = loc(fused[#loc146, #loc143])
#loc398 = loc(fused[#loc149, #loc150])
#loc399 = loc(fused[#loc152, #loc153])
#loc400 = loc(fused[#loc154, #loc155])
#loc401 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc402 = loc(fused[#loc163, #loc164])
#loc403 = loc(fused[#loc165, #loc166])
#loc404 = loc(fused[#loc167, #loc168])
#loc405 = loc(fused[#loc170, #loc171])
#loc406 = loc(fused[#loc172, #loc173])
#loc407 = loc(fused[#loc174, #loc175])
#loc408 = loc(fused[#loc176, #loc177])
#loc409 = loc(fused[#loc178, #loc179])
#loc410 = loc(fused[#loc180, #loc181])
#loc411 = loc(fused[#loc182, #loc183])
#loc412 = loc(fused[#loc184, #loc185])
#loc413 = loc(fused[#loc188, #loc186])
#loc414 = loc(fused[#loc189, #loc190])
#loc415 = loc(fused[#loc192, #loc193])
#loc416 = loc(fused[#loc194, #loc195])
#loc417 = loc(fused[#loc200, #loc201])
#loc418 = loc(fused[#loc202, #loc203])
#loc419 = loc(fused[#loc204, #loc205])
#loc420 = loc(fused[#loc206, #loc203])
#loc421 = loc(fused[#loc208, #loc209])
#loc422 = loc(fused[#loc211, #loc212])
#loc423 = loc(fused[#loc213, #loc214])
#loc424 = loc(fused[#loc216, #loc215])
#loc425 = loc(fused[#loc218, #loc217])
#loc426 = loc(fused[#loc221, #loc222])
#loc427 = loc(fused[#loc223, #loc224])
#loc428 = loc(fused[#loc226, #loc227])
#loc429 = loc(fused[#loc228, #loc229])
#loc430 = loc(fused[#loc230, #loc231])
#loc431 = loc(fused[#loc232, #loc224])
#loc432 = loc(fused[#loc234, #loc235])
#loc433 = loc(fused[#loc238, #loc239])
#loc434 = loc(fused[#loc240, #loc235])
#loc435 = loc(fused[#loc246, #loc247])
#loc436 = loc(fused[#loc248, #loc249])
#loc437 = loc(fused[#loc250, #loc251])
#loc438 = loc(fused[#loc252, #loc249])
#loc439 = loc(fused[#loc256, #loc257])
#loc440 = loc(fused[#loc260, #loc261])
#loc441 = loc(fused[#loc262, #loc263])
#loc442 = loc(fused[#loc264, #loc265])
#loc443 = loc(fused[#loc267, #loc268])
#loc444 = loc(fused[#loc269, #loc263])
#loc445 = loc(fused[#loc273, #loc271])
#loc446 = loc(fused[#loc276, #loc277])
#loc447 = loc(fused[#loc279, #loc280])
#loc448 = loc(fused[#loc281, #loc282])
#loc449 = loc(fused[#loc283, #loc280])
#loc450 = loc(fused[#loc286, #loc287])
#loc451 = loc(fused[#loc288, #loc289])
#loc452 = loc(fused[#loc290, #loc287])
#loc453 = loc(fused[#loc293, #loc294])
#loc454 = loc(fused[#loc296, #loc297])
#loc455 = loc(fused[#loc298, #loc299])
#loc456 = loc(fused[#loc301, #loc303])
#loc457 = loc(fused[#loc304, #loc305, #loc306, #loc297])
#loc458 = loc(fused[#loc311, #loc312])
#loc459 = loc(fused[#loc313, #loc314])
#loc460 = loc(fused[#loc315, #loc316])
#loc461 = loc(fused[#loc319, #loc317])
#loc462 = loc(fused[#loc320, #loc321])
#loc463 = loc(fused[#loc324, #loc323])
#loc464 = loc(fused[#loc325, #loc326])
#loc465 = loc(fused[#loc328, #loc329])
#loc466 = loc(fused[#loc330, #loc331])
#loc467 = loc(fused[#loc332, #loc333, #loc334, #loc329])
