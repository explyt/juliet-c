!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc48)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc50)
  cir.func @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc52)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc53)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc54)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    cir.call @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_629badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc17)
    cir.br ^bb1 loc(#loc56)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc52)
    cir.store %11, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc52)
    %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc20)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc21)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %15 = cir.call @strcpy(%13, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc20)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc51)
  cir.func private @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc57)
  cir.func internal private @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc60)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc61)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc34)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc34)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc34)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc34)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc34)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
    cir.call @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_6213goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc37)
    cir.br ^bb1 loc(#loc63)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc59)
    cir.store %11, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc59)
    %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc40)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc41)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %15 = cir.call @strcpy(%13, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb2 loc(#loc39)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc28)
  } loc(#loc58)
  cir.func @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62L7goodG2BEv() : () -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":27:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":29:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":41:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":36:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":36:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":32:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":33:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":33:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":35:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":40:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":38:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":38:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":38:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":39:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":39:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":48:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":48:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":50:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":62:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":57:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":57:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":52:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":52:12)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":53:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":53:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":54:12)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":54:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":55:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":56:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":61:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":59:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":59:16)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":59:22)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":60:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":60:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":64:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":67:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_62a.cpp":66:5)
#loc48 = loc(fused[#loc1, #loc2])
#loc49 = loc(fused[#loc3, #loc4])
#loc50 = loc(fused[#loc5, #loc6])
#loc51 = loc(fused[#loc7, #loc8])
#loc52 = loc(fused[#loc9, #loc10])
#loc53 = loc(fused[#loc11, #loc12])
#loc54 = loc(fused[#loc13, #loc14])
#loc55 = loc(fused[#loc16, #loc15])
#loc56 = loc(fused[#loc18, #loc19])
#loc57 = loc(fused[#loc25, #loc26])
#loc58 = loc(fused[#loc27, #loc28])
#loc59 = loc(fused[#loc29, #loc30])
#loc60 = loc(fused[#loc31, #loc32])
#loc61 = loc(fused[#loc33, #loc34])
#loc62 = loc(fused[#loc36, #loc35])
#loc63 = loc(fused[#loc38, #loc39])
#loc64 = loc(fused[#loc45, #loc46])
