!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc93)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc98)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc98)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc101)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc101)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc101)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
          cir.scope {
            %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc27)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc6)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc6)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
            %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc27)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc29)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc104)
            cir.if %16 {
              %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc31)
            } loc(#loc105)
          } loc(#loc103)
        } loc(#loc100)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
          cir.scope {
            %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc40)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc41)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc41)
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc42)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc42)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
            %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc44)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc110)
            cir.if %17 {
              %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc47)
            } loc(#loc111)
          } loc(#loc109)
        } loc(#loc106)
      } loc(#loc99)
    } loc(#loc97)
    cir.return loc(#loc11)
  } loc(#loc96)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc112)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc116)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc116)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc56)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc56)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
          cir.scope {
            %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc69)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc70)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc70)
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc71)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc71)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
            %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc69)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc73)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc122)
            cir.if %17 {
              %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc76)
            } loc(#loc123)
          } loc(#loc121)
        } loc(#loc118)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc125)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc125)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
          cir.scope {
            %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc85)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc86)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc86)
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc87)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc87)
            %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
            %14 = cir.call @__isoc99_sscanf(%10, %12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc89)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc128)
            cir.if %17 {
              %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
              %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc92)
            } loc(#loc129)
          } loc(#loc127)
        } loc(#loc124)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc53)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":468:1)
#loc4 = loc("/usr/include/stdio.h":468:12)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:24)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:36)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":39:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":26:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":57:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":28:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":56:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":28:8)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":28:33)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":29:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":42:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":44:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":30:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":41:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":33:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":33:36)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":34:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":34:27)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":40:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:17)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:46)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:55)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":38:13)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":39:17)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":45:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":55:9)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":48:13)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":48:36)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":49:13)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":49:27)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:13)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":54:13)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:17)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:24)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:36)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:46)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:55)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":52:13)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":53:27)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":53:17)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":96:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":99:1)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":98:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":98:11)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":64:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":94:1)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":66:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":93:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":66:8)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":66:33)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":67:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":79:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":81:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":68:9)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":78:9)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":71:13)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":71:36)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":72:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":72:27)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:13)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":77:13)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:17)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:24)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:36)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:46)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:55)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":75:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":76:27)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":76:17)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":82:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":92:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":85:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":85:36)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":86:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":86:27)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:13)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":91:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:17)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:24)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:36)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:46)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:55)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":89:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":90:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":90:17)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc10, #loc11])
#loc97 = loc(fused[#loc12, #loc13])
#loc98 = loc(fused[#loc14, #loc15])
#loc99 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc23, #loc24])
#loc103 = loc(fused[#loc25, #loc26])
#loc104 = loc(fused[#loc27, #loc29])
#loc105 = loc(fused[#loc30, #loc26])
#loc106 = loc(fused[#loc32, #loc33])
#loc107 = loc(fused[#loc34, #loc35])
#loc108 = loc(fused[#loc36, #loc37])
#loc109 = loc(fused[#loc38, #loc39])
#loc110 = loc(fused[#loc40, #loc44])
#loc111 = loc(fused[#loc45, #loc39])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc63, #loc64])
#loc120 = loc(fused[#loc65, #loc66])
#loc121 = loc(fused[#loc67, #loc68])
#loc122 = loc(fused[#loc69, #loc73])
#loc123 = loc(fused[#loc74, #loc68])
#loc124 = loc(fused[#loc77, #loc78])
#loc125 = loc(fused[#loc79, #loc80])
#loc126 = loc(fused[#loc81, #loc82])
#loc127 = loc(fused[#loc83, #loc84])
#loc128 = loc(fused[#loc85, #loc89])
#loc129 = loc(fused[#loc90, #loc84])
