!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc38 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc118)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc119)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc120)
  cir.func private @printIntLine(!s32i) loc(#loc121)
  cir.func @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_103badEv() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc118)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc13)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc126)
          %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc128)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc128)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc126)
          %8 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc20)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
          cir.store %9, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
          %10 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc23)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>), !cir.ptr<!void> loc(#loc23)
          cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc32)
        } loc(#loc125)
      } loc(#loc124)
    } loc(#loc123)
    cir.return loc(#loc10)
  } loc(#loc122)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc38)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    cir.return loc(#loc38)
  } loc(#loc38)
  cir.func internal private @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_10L5good1Ev() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc129)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc43)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc135)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc136)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc137)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc56)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc137)
          cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc55)
          cir.store %7, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc138)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc58)
          %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
          %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc139)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc60)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
          %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc140)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc141)
          %15 = cir.call @_Znwm(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc136)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc141)
          cir.store %16, %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc136)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
          %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc64)
          cir.store %17, %18 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc142)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
            %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc69)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
            cir.store %23, %21 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc144)
            %24 = cir.load %21 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc73)
            %27 = cir.load %21 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
            %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
            %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc76)
          } loc(#loc143)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc77)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>), !cir.ptr<!void> loc(#loc77)
          cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
        } loc(#loc134)
      } loc(#loc133)
    } loc(#loc132)
    cir.return loc(#loc40)
  } loc(#loc131)
  cir.func internal private @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_10L5good2Ev() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc118)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc82)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc149)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc150)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc151)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc92)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc151)
          cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc91)
          cir.store %7, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc152)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc94)
          %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
          %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc153)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc96)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
          %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc155)
          %15 = cir.call @_Znwm(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc150)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc155)
          cir.store %16, %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>> loc(#loc150)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc99)
          %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc100)
          cir.store %17, %18 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc156)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
            %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc105)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
            cir.store %23, %21 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc158)
            %24 = cir.load %21 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc107)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc109)
            %27 = cir.load %21 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc110)
            %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
            %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc112)
          } loc(#loc157)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc113)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>), !cir.ptr<!void> loc(#loc113)
          cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
        } loc(#loc148)
      } loc(#loc147)
    } loc(#loc146)
    cir.return loc(#loc79)
  } loc(#loc145)
  cir.func @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_104goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_10L5good1Ev() : () -> () loc(#loc116)
    cir.call @_ZN51CWE758_Undefined_Behavior__class_pointer_new_use_10L5good2Ev() : () -> () loc(#loc117)
    cir.return loc(#loc115)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":23:1)
#loc10 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":35:1)
#loc11 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":25:5)
#loc12 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":34:5)
#loc13 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":25:8)
#loc14 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":26:5)
#loc15 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":27:9)
#loc16 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":33:9)
#loc17 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":28:13)
#loc18 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":28:57)
#loc19 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":29:13)
#loc20 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":29:36)
#loc21 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":28:40)
#loc22 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":29:35)
#loc23 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":30:20)
#loc24 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":23:6)
#loc25 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":31:26)
#loc26 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc27 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":31:32)
#loc28 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":31:13)
#loc29 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":32:26)
#loc30 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc31 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":32:32)
#loc32 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":32:13)
#loc33 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc34 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":47:19)
#loc39 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":42:1)
#loc40 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":67:1)
#loc41 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":44:5)
#loc42 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":66:5)
#loc43 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":44:8)
#loc44 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":45:5)
#loc45 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":48:5)
#loc46 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":50:5)
#loc47 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":47:9)
#loc48 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":51:9)
#loc49 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":65:9)
#loc50 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":52:13)
#loc51 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":52:28)
#loc52 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":57:13)
#loc53 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":57:57)
#loc54 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":54:20)
#loc55 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":54:24)
#loc56 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":42:13)
#loc57 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":54:13)
#loc58 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":55:28)
#loc59 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":55:13)
#loc60 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":56:28)
#loc61 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":56:13)
#loc62 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":57:40)
#loc63 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":58:24)
#loc64 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":58:14)
#loc65 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":58:13)
#loc66 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":59:13)
#loc67 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":63:13)
#loc68 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":60:17)
#loc69 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":60:40)
#loc70 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":60:39)
#loc71 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":61:30)
#loc72 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":61:36)
#loc73 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":61:17)
#loc74 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":62:30)
#loc75 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":62:36)
#loc76 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":62:17)
#loc77 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":64:20)
#loc78 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":70:1)
#loc79 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":90:1)
#loc80 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":72:5)
#loc81 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":89:5)
#loc82 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":72:8)
#loc83 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":73:5)
#loc84 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":74:9)
#loc85 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":88:9)
#loc86 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":75:13)
#loc87 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":75:28)
#loc88 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":80:13)
#loc89 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":80:57)
#loc90 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":77:20)
#loc91 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":77:24)
#loc92 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":70:13)
#loc93 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":77:13)
#loc94 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":78:28)
#loc95 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":78:13)
#loc96 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":79:28)
#loc97 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":79:13)
#loc98 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":80:40)
#loc99 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":81:24)
#loc100 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":81:14)
#loc101 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":81:13)
#loc102 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":82:13)
#loc103 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":86:13)
#loc104 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":83:17)
#loc105 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":83:40)
#loc106 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":83:39)
#loc107 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":84:30)
#loc108 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":84:36)
#loc109 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":84:17)
#loc110 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":85:30)
#loc111 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":85:36)
#loc112 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":85:17)
#loc113 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":87:20)
#loc114 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":92:1)
#loc115 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":96:1)
#loc116 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":94:5)
#loc117 = loc("CWE758_Undefined_Behavior__class_pointer_new_use_10.cpp":95:5)
#loc118 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc7, #loc8])
#loc122 = loc(fused[#loc9, #loc10])
#loc123 = loc(fused[#loc11, #loc12])
#loc124 = loc(fused[#loc14, #loc12])
#loc125 = loc(fused[#loc15, #loc16])
#loc126 = loc(fused[#loc17, #loc18])
#loc127 = loc(fused[#loc19, #loc20])
#loc128 = loc(fused[#loc21, #loc18])
#loc129 = loc(fused[#loc33, #loc34])
#loc130 = loc(fused[#loc35, #loc36])
#loc131 = loc(fused[#loc39, #loc40])
#loc132 = loc(fused[#loc41, #loc42])
#loc133 = loc(fused[#loc44, #loc45, #loc46, #loc42])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc52, #loc53])
#loc137 = loc(fused[#loc54, #loc55])
#loc138 = loc(fused[#loc57, #loc55])
#loc139 = loc(fused[#loc59, #loc58])
#loc140 = loc(fused[#loc61, #loc60])
#loc141 = loc(fused[#loc62, #loc53])
#loc142 = loc(fused[#loc65, #loc63])
#loc143 = loc(fused[#loc66, #loc67])
#loc144 = loc(fused[#loc68, #loc69])
#loc145 = loc(fused[#loc78, #loc79])
#loc146 = loc(fused[#loc80, #loc81])
#loc147 = loc(fused[#loc83, #loc81])
#loc148 = loc(fused[#loc84, #loc85])
#loc149 = loc(fused[#loc86, #loc87])
#loc150 = loc(fused[#loc88, #loc89])
#loc151 = loc(fused[#loc90, #loc91])
#loc152 = loc(fused[#loc93, #loc91])
#loc153 = loc(fused[#loc95, #loc94])
#loc154 = loc(fused[#loc97, #loc96])
#loc155 = loc(fused[#loc98, #loc89])
#loc156 = loc(fused[#loc101, #loc99])
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc104, #loc105])
#loc159 = loc(fused[#loc114, #loc115])
