!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":23:21)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":23:28)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":104:10)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":104:14)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":104:20)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":104:32)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":60:25)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":60:32)
#loc172 = loc(fused[#loc3, #loc4])
#loc198 = loc(fused[#loc86, #loc87])
#loc199 = loc(fused[#loc88, #loc89])
#loc204 = loc(fused[#loc106, #loc107])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc5)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc175)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc13)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc14)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc14)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc14)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc176)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc18)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc18)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc19)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc19)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc21)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc177)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc24)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc24)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc179)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc26)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc27)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc180)
          cir.condition(%30) loc(#loc28)
        } body {
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc31)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc31)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc34)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc182)
          } loc(#loc181)
          cir.yield loc(#loc23)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc37)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc183)
          cir.yield loc(#loc178)
        } loc(#loc178)
      } loc(#loc178)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc38)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc38)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc40)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc184)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    } loc(#loc173)
    cir.return loc(#loc2)
  } loc(#loc171)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc188)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc50)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc187)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc52)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc52)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc52)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc54)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc55)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc55)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc59)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc61)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %26 = cir.const #cir.int<8> : !s32i loc(#loc65)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc65)
    %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc68)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call %29(%30) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc68)
    cir.return loc(#loc46)
  } loc(#loc185)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc93)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_loop_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_loop_44_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_loop_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_loop_44_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %17 : !s32i loc(#loc202)
  } loc(#loc197)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc106, #loc107])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc204)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc207)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc116)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc118)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc117)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc117)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc208)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc121)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc121)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc122)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc124)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc209)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc127)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc127)
        cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc211)
        cir.for : cond {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
          %28 = cir.const #cir.int<100> : !s32i loc(#loc130)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc130)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc212)
          cir.condition(%30) loc(#loc131)
        } body {
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
            %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc134)
            %30 = cir.load %29 : !cir.ptr<!s8i>, !s8i loc(#loc134)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
            %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc137)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc214)
          } loc(#loc213)
          cir.yield loc(#loc126)
        } step {
          %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc140)
          cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc215)
          cir.yield loc(#loc210)
        } loc(#loc210)
      } loc(#loc210)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc141)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc141)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc143)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc144)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc143)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc145)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc216)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
      cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    } loc(#loc205)
    cir.return loc(#loc105)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc153)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc219)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc155)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc155)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc155)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc155)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc155)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc157)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc158)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc158)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc221)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc162)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc164)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc169)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc169)
    cir.return loc(#loc149)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_44.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":23:1)
#loc2 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":39:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":24:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":25:5)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":38:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":26:9)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":26:16)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":27:9)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":27:24)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:16)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:24)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:29)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:33)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:9)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":28:34)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:25)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":29:9)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:9)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":34:9)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:18)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:14)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:21)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:25)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:23)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":32:9)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:30)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:23)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:13)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:18)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:19)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":33:31)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:31)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":31:30)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:23)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:9)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:14)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:18)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":36:19)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":37:19)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":37:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":41:1)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":53:1)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":43:5)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":43:12)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":45:5)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":45:32)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":46:5)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":46:33)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:12)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:24)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:29)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:33)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:5)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":47:34)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:25)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:5)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:16)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:20)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":48:21)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:12)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:25)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:23)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":50:5)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":52:5)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":52:13)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":90:1)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":93:1)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":92:5)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":92:13)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":109:15)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":111:15)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":114:15)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":116:15)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":104:1)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":119:1)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":105:1)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":107:27)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":107:22)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":107:5)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":109:5)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":110:5)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":110:56)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":111:5)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":114:5)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":115:5)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":115:55)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":116:5)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":118:12)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":118:5)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":60:1)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":76:1)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":61:1)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":62:5)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":75:5)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":63:9)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":63:16)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":64:9)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":64:24)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:16)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:24)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:29)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:33)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:9)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":65:34)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:25)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:16)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:20)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":66:9)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:9)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":71:9)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:18)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:14)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:21)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:25)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:23)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":69:9)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:30)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:23)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:13)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:18)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:19)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":70:31)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:31)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":68:30)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:23)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:9)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:14)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:18)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":73:19)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":74:19)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":74:9)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":78:1)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":88:1)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":80:5)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":80:12)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":81:5)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":81:32)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":82:5)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":82:33)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:12)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:24)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:29)
#loc159 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:33)
#loc160 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:5)
#loc161 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":83:34)
#loc162 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:25)
#loc163 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:5)
#loc164 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:16)
#loc165 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:20)
#loc166 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":84:21)
#loc167 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":86:12)
#loc168 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":86:5)
#loc169 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":87:5)
#loc170 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_44.c":87:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc6, #loc7])
#loc174 = loc(fused[#loc8, #loc9])
#loc175 = loc(fused[#loc10, #loc11])
#loc176 = loc(fused[#loc16, #loc17])
#loc177 = loc(fused[#loc21, #loc18])
#loc178 = loc(fused[#loc22, #loc23])
#loc179 = loc(fused[#loc25, #loc24])
#loc180 = loc(fused[#loc26, #loc27])
#loc181 = loc(fused[#loc29, #loc23])
#loc182 = loc(fused[#loc32, #loc35])
#loc183 = loc(fused[#loc37, #loc36])
#loc184 = loc(fused[#loc39, #loc38])
#loc185 = loc(fused[#loc45, #loc46])
#loc186 = loc(fused[#loc47, #loc48])
#loc187 = loc(fused[#loc49, #loc50])
#loc188 = loc(fused[#loc51, #loc52])
#loc189 = loc(fused[#loc57, #loc58])
#loc190 = loc(fused[#loc60, #loc59])
#loc191 = loc(fused[#loc67, #loc65])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc74, #loc75])
#loc195 = loc(fused[#loc76, #loc77])
#loc196 = loc(fused[#loc78, #loc79])
#loc197 = loc(fused[#loc84, #loc85])
#loc200 = loc(fused[#loc95, #loc96])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc103, #loc102])
#loc203 = loc(fused[#loc104, #loc105])
#loc205 = loc(fused[#loc109, #loc110])
#loc206 = loc(fused[#loc111, #loc112])
#loc207 = loc(fused[#loc113, #loc114])
#loc208 = loc(fused[#loc119, #loc120])
#loc209 = loc(fused[#loc124, #loc121])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc128, #loc127])
#loc212 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc132, #loc126])
#loc214 = loc(fused[#loc135, #loc138])
#loc215 = loc(fused[#loc140, #loc139])
#loc216 = loc(fused[#loc142, #loc141])
#loc217 = loc(fused[#loc148, #loc149])
#loc218 = loc(fused[#loc150, #loc151])
#loc219 = loc(fused[#loc152, #loc153])
#loc220 = loc(fused[#loc154, #loc155])
#loc221 = loc(fused[#loc160, #loc161])
#loc222 = loc(fused[#loc163, #loc162])
#loc223 = loc(fused[#loc168, #loc167])
