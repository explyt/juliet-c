!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc187)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc189)
  cir.func private @printLongLongLine(!s64i) loc(#loc190)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc189)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc189)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc21)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc197)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %12 ^bb6, ^bb11 loc(#loc198)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc199)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc29)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc30)
    %16 = cir.cmp(lt, %13, %15) : !s64i, !cir.bool loc(#loc200)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc12)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc12)
    %20 = cir.binop(mul, %17, %19) nsw : !s64i loc(#loc32)
    cir.store %20, %0 : !s64i, !cir.ptr<!s64i> loc(#loc192)
    %21 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc34)
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc24)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc191)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_02_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc205)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc206)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc202)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc55)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc61)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc214)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc214)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc61)
    cir.br ^bb3 loc(#loc58)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc216)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb17 loc(#loc69)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc217)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc75)
    %18 = cir.cmp(lt, %15, %17) : !s64i, !cir.bool loc(#loc218)
    cir.brcond %18 ^bb9, ^bb15 loc(#loc219)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc220)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc79)
    %20 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc80)
    %21 = cir.unary(minus, %20) nsw : !s64i, !s64i loc(#loc80)
    %22 = cir.const #cir.int<1> : !s64i loc(#loc80)
    %23 = cir.binop(sub, %21, %22) nsw : !s64i loc(#loc80)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc81)
    %25 = cir.cast(integral, %24 : !s32i), !s64i loc(#loc81)
    %26 = cir.binop(div, %23, %25) : !s64i loc(#loc221)
    %27 = cir.cmp(gt, %19, %26) : !s64i, !cir.bool loc(#loc222)
    cir.brcond %27 ^bb11, ^bb12 loc(#loc223)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc86)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %30 = cir.cast(integral, %29 : !s32i), !s64i loc(#loc52)
    %31 = cir.binop(mul, %28, %30) nsw : !s64i loc(#loc86)
    cir.store %31, %0 : !s64i, !cir.ptr<!s64i> loc(#loc209)
    %32 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc87)
    cir.call @printLongLongLine(%32) : (!s64i) -> () loc(#loc88)
    cir.br ^bb13 loc(#loc84)
  ^bb12:  // pred: ^bb10
    %33 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc48)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc73)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc73)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc66)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc66)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc50)
  } loc(#loc208)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc96)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc102)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc230)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc230)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc102)
    cir.br ^bb3 loc(#loc99)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc231)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc108)
    cir.brcond %12 ^bb6, ^bb16 loc(#loc232)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc233)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc112)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc113)
    %16 = cir.cmp(lt, %13, %15) : !s64i, !cir.bool loc(#loc234)
    cir.brcond %16 ^bb8, ^bb14 loc(#loc235)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc117)
    %18 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc118)
    %19 = cir.unary(minus, %18) nsw : !s64i, !s64i loc(#loc118)
    %20 = cir.const #cir.int<1> : !s64i loc(#loc118)
    %21 = cir.binop(sub, %19, %20) nsw : !s64i loc(#loc118)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc119)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc119)
    %24 = cir.binop(div, %21, %23) : !s64i loc(#loc237)
    %25 = cir.cmp(gt, %17, %24) : !s64i, !cir.bool loc(#loc238)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc239)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc124)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %28 = cir.cast(integral, %27 : !s32i), !s64i loc(#loc93)
    %29 = cir.binop(mul, %26, %28) nsw : !s64i loc(#loc124)
    cir.store %29, %0 : !s64i, !cir.ptr<!s64i> loc(#loc225)
    %30 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc125)
    cir.call @printLongLongLine(%30) : (!s64i) -> () loc(#loc126)
    cir.br ^bb12 loc(#loc122)
  ^bb11:  // pred: ^bb9
    %31 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc127)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb12 loc(#loc116)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc116)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc111)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc111)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc107)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc107)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc91)
  } loc(#loc224)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc135)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc243)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc139)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc143)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb4 loc(#loc141)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc145)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc146)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc146)
    cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc246)
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc247)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %11 ^bb7, ^bb12 loc(#loc248)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc249)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc154)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc155)
    %15 = cir.cmp(lt, %12, %14) : !s64i, !cir.bool loc(#loc250)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc251)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc157)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc132)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc132)
    %19 = cir.binop(mul, %16, %18) nsw : !s64i loc(#loc157)
    cir.store %19, %0 : !s64i, !cir.ptr<!s64i> loc(#loc241)
    %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc158)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc159)
    cir.br ^bb10 loc(#loc153)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc153)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc149)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc130)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc166)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc170)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc257)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<2> : !s32i loc(#loc172)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc173)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc173)
    cir.store %7, %1 : !s64i, !cir.ptr<!s64i> loc(#loc258)
    cir.br ^bb3 loc(#loc169)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc259)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc177)
    cir.brcond %9 ^bb6, ^bb11 loc(#loc260)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc261)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc181)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc182)
    %13 = cir.cmp(lt, %10, %12) : !s64i, !cir.bool loc(#loc262)
    cir.brcond %13 ^bb8, ^bb9 loc(#loc263)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc184)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc163)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc163)
    %17 = cir.binop(mul, %14, %16) nsw : !s64i loc(#loc184)
    cir.store %17, %0 : !s64i, !cir.ptr<!s64i> loc(#loc253)
    %18 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc185)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc186)
    cir.br ^bb9 loc(#loc180)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc180)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc176)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc176)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc161)
  } loc(#loc252)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":30:24)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":30:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":23:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":41:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":37:13)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":37:37)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":25:5)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":25:13)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":26:12)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":26:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":27:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":31:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":27:8)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":28:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":30:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":30:17)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":32:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":40:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":32:8)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":33:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":34:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":39:9)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":34:12)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":34:19)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":35:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":37:30)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":38:31)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":38:13)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":155:1)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":161:1)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":157:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":157:14)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":158:5)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":158:14)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":159:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":159:14)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":160:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":160:14)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":60:19)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":74:27)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":48:1)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":78:1)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":69:17)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":69:41)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":50:5)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":50:13)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":51:12)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":51:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":52:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":56:5)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":52:8)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":53:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":55:9)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":55:17)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":55:24)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":55:28)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":57:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":77:5)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":57:8)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":58:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":61:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":63:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":60:9)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":64:9)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":76:9)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":64:12)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":64:19)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":65:9)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":67:13)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":75:13)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":67:17)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":67:25)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":67:35)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":67:36)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":68:13)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":71:13)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":73:13)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":69:34)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":70:35)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":70:17)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":74:17)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":81:1)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":106:1)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":97:17)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":97:41)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":83:5)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":83:13)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":84:12)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":84:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":85:5)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":89:5)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":85:8)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":86:5)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":88:9)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":88:17)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":88:24)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":88:28)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":90:5)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":105:5)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":90:8)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":91:5)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":92:9)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":104:9)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":92:12)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":92:19)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":93:9)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":95:13)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":103:13)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":95:17)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":95:25)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":95:35)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":95:36)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":96:13)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":99:13)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":101:13)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":97:34)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":98:35)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":98:17)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":102:27)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":102:17)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":109:1)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":132:1)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":128:13)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":128:37)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":111:5)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":111:13)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":112:12)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":112:5)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":113:5)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":122:5)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":113:8)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":114:5)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":117:5)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":119:5)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":116:19)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":116:9)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":121:17)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":121:16)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":121:9)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":123:5)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":131:5)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":123:8)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":124:5)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":125:9)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":130:9)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":125:12)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":125:19)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":126:9)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":128:30)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":129:31)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":129:13)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":135:1)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":153:1)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":149:13)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":149:37)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":137:5)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":137:13)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":138:12)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":138:5)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":139:5)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":143:5)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":139:8)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":140:5)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":142:17)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":142:16)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":142:9)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":144:5)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":152:5)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":144:8)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":145:5)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":146:9)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":151:9)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":146:12)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":146:19)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":147:9)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":149:30)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":150:31)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_02.c":150:13)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc16, #loc15])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc20, #loc18])
#loc197 = loc(fused[#loc23, #loc24])
#loc198 = loc(fused[#loc26, #loc24])
#loc199 = loc(fused[#loc27, #loc28])
#loc200 = loc(fused[#loc29, #loc30])
#loc201 = loc(fused[#loc31, #loc28])
#loc202 = loc(fused[#loc35, #loc36])
#loc203 = loc(fused[#loc37, #loc38])
#loc204 = loc(fused[#loc39, #loc40])
#loc205 = loc(fused[#loc41, #loc42])
#loc206 = loc(fused[#loc43, #loc44])
#loc207 = loc(fused[#loc45, #loc46])
#loc208 = loc(fused[#loc49, #loc50])
#loc209 = loc(fused[#loc51, #loc52])
#loc210 = loc(fused[#loc53, #loc54])
#loc211 = loc(fused[#loc56, #loc55])
#loc212 = loc(fused[#loc57, #loc58])
#loc213 = loc(fused[#loc60, #loc58])
#loc214 = loc(fused[#loc63, #loc64])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc68, #loc69, #loc70, #loc66])
#loc217 = loc(fused[#loc72, #loc73])
#loc218 = loc(fused[#loc74, #loc75])
#loc219 = loc(fused[#loc76, #loc73])
#loc220 = loc(fused[#loc77, #loc78])
#loc221 = loc(fused[#loc80, #loc81])
#loc222 = loc(fused[#loc79, #loc82])
#loc223 = loc(fused[#loc83, #loc84, #loc85, #loc78])
#loc224 = loc(fused[#loc90, #loc91])
#loc225 = loc(fused[#loc92, #loc93])
#loc226 = loc(fused[#loc94, #loc95])
#loc227 = loc(fused[#loc97, #loc96])
#loc228 = loc(fused[#loc98, #loc99])
#loc229 = loc(fused[#loc101, #loc99])
#loc230 = loc(fused[#loc104, #loc105])
#loc231 = loc(fused[#loc106, #loc107])
#loc232 = loc(fused[#loc109, #loc107])
#loc233 = loc(fused[#loc110, #loc111])
#loc234 = loc(fused[#loc112, #loc113])
#loc235 = loc(fused[#loc114, #loc111])
#loc236 = loc(fused[#loc115, #loc116])
#loc237 = loc(fused[#loc118, #loc119])
#loc238 = loc(fused[#loc117, #loc120])
#loc239 = loc(fused[#loc121, #loc122, #loc123, #loc116])
#loc240 = loc(fused[#loc129, #loc130])
#loc241 = loc(fused[#loc131, #loc132])
#loc242 = loc(fused[#loc133, #loc134])
#loc243 = loc(fused[#loc136, #loc135])
#loc244 = loc(fused[#loc137, #loc138])
#loc245 = loc(fused[#loc140, #loc141, #loc142, #loc138])
#loc246 = loc(fused[#loc147, #loc145])
#loc247 = loc(fused[#loc148, #loc149])
#loc248 = loc(fused[#loc151, #loc149])
#loc249 = loc(fused[#loc152, #loc153])
#loc250 = loc(fused[#loc154, #loc155])
#loc251 = loc(fused[#loc156, #loc153])
#loc252 = loc(fused[#loc160, #loc161])
#loc253 = loc(fused[#loc162, #loc163])
#loc254 = loc(fused[#loc164, #loc165])
#loc255 = loc(fused[#loc167, #loc166])
#loc256 = loc(fused[#loc168, #loc169])
#loc257 = loc(fused[#loc171, #loc169])
#loc258 = loc(fused[#loc174, #loc172])
#loc259 = loc(fused[#loc175, #loc176])
#loc260 = loc(fused[#loc178, #loc176])
#loc261 = loc(fused[#loc179, #loc180])
#loc262 = loc(fused[#loc181, #loc182])
#loc263 = loc(fused[#loc183, #loc180])
