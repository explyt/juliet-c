!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
  cir.func private @printIntLine(!s32i) loc(#loc85)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc86)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc16)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc91)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc92)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc93)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc23)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc97)
        cir.condition(%13) loc(#loc27)
      } body {
        cir.scope {
          %11 = cir.const #cir.int<5> : !s32i loc(#loc29)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc31)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc32)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc99)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc35)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc36)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc37)
          %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
        } loc(#loc98)
        cir.yield loc(#loc22)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc40)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
        cir.yield loc(#loc95)
      } loc(#loc95)
    } loc(#loc95)
    cir.return loc(#loc8)
  } loc(#loc87)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_malloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc102)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc101)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc51)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc106)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc53)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc54)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc107)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc108)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc53)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc61)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc113)
        cir.condition(%13) loc(#loc65)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
            %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc116)
            cir.if %14 {
              %15 = cir.const #cir.int<5> : !s32i loc(#loc72)
              %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc75)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc118)
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc77)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc78)
              %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc79)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc80)
              %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc81)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
            } loc(#loc117)
          } loc(#loc115)
        } loc(#loc114)
        cir.yield loc(#loc60)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc83)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
        cir.yield loc(#loc111)
      } loc(#loc111)
    } loc(#loc111)
    cir.return loc(#loc46)
  } loc(#loc103)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_malloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":37:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":25:9)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":26:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":26:11)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":27:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":27:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":29:19)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":29:26)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":29:28)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":29:38)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":29:39)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":29:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":36:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:13)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:9)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:16)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:20)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:18)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":31:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":33:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":33:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":33:14)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":33:15)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":34:22)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":34:27)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":34:28)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":34:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":35:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":35:14)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:24)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":30:23)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":63:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":66:1)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":65:5)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":65:13)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":44:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":61:1)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":46:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":46:9)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":47:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":47:11)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":48:12)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":48:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":50:19)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":50:26)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":50:28)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":50:38)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":50:39)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":50:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":60:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:13)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:9)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:16)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:20)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:18)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":52:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":54:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":59:9)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":54:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":54:21)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":55:9)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":56:23)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":56:13)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":56:18)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":56:19)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":57:26)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":57:31)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":57:32)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":57:13)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":58:13)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":58:18)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:24)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_malloc_17.c":51:23)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc7, #loc8])
#loc88 = loc(fused[#loc9, #loc10])
#loc89 = loc(fused[#loc11, #loc12])
#loc90 = loc(fused[#loc14, #loc13])
#loc91 = loc(fused[#loc17, #loc18])
#loc92 = loc(fused[#loc16, #loc18])
#loc93 = loc(fused[#loc15, #loc19])
#loc94 = loc(fused[#loc20, #loc19])
#loc95 = loc(fused[#loc21, #loc22])
#loc96 = loc(fused[#loc24, #loc23])
#loc97 = loc(fused[#loc25, #loc26])
#loc98 = loc(fused[#loc28, #loc22])
#loc99 = loc(fused[#loc30, #loc29])
#loc100 = loc(fused[#loc40, #loc39])
#loc101 = loc(fused[#loc41, #loc42])
#loc102 = loc(fused[#loc43, #loc44])
#loc103 = loc(fused[#loc45, #loc46])
#loc104 = loc(fused[#loc47, #loc48])
#loc105 = loc(fused[#loc49, #loc50])
#loc106 = loc(fused[#loc52, #loc51])
#loc107 = loc(fused[#loc55, #loc56])
#loc108 = loc(fused[#loc54, #loc56])
#loc109 = loc(fused[#loc53, #loc57])
#loc110 = loc(fused[#loc58, #loc57])
#loc111 = loc(fused[#loc59, #loc60])
#loc112 = loc(fused[#loc62, #loc61])
#loc113 = loc(fused[#loc63, #loc64])
#loc114 = loc(fused[#loc66, #loc60])
#loc115 = loc(fused[#loc67, #loc68])
#loc116 = loc(fused[#loc69, #loc70])
#loc117 = loc(fused[#loc71, #loc68])
#loc118 = loc(fused[#loc73, #loc72])
#loc119 = loc(fused[#loc83, #loc82])
