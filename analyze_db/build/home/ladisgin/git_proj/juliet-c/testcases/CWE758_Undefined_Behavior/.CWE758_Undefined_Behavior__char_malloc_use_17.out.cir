!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":74:10)
#loc62 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":74:14)
#loc63 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":74:20)
#loc64 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":74:32)
#loc149 = loc(fused[#loc61, #loc62])
#loc150 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_malloc_use_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc126)
  cir.func private @printHexCharLine(!s8i) loc(#loc127)
  cir.func no_proto @CWE758_Undefined_Behavior__char_malloc_use_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc129)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc15)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc132)
        cir.condition(%4) loc(#loc19)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc135)
            %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc136)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
            %5 = cir.const #cir.int<1> : !u64i loc(#loc137)
            %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
            cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
            cir.scope {
              %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
              %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
              %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
              cir.if %17 {
                %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc36)
                %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc37)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
              } loc(#loc141)
            } loc(#loc139)
            %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
            %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc38)
            cir.store %9, %3 : !s8i, !cir.ptr<!s8i> loc(#loc136)
            %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc39)
            %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
            cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
            %13 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc41)
            cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc42)
          } loc(#loc134)
        } loc(#loc133)
        cir.yield loc(#loc14)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc44)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc130)
    cir.return loc(#loc10)
  } loc(#loc128)
  cir.func no_proto @CWE758_Undefined_Behavior__char_malloc_use_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc145)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE758_Undefined_Behavior__char_malloc_use_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE758_Undefined_Behavior__char_malloc_use_17_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE758_Undefined_Behavior__char_malloc_use_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE758_Undefined_Behavior__char_malloc_use_17_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %17 : !s32i loc(#loc153)
  } loc(#loc148)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc155)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc85)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc158)
        cir.condition(%4) loc(#loc89)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc161)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc162)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
            %5 = cir.const #cir.int<1> : !u64i loc(#loc163)
            %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
            cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
            cir.scope {
              %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
              cir.if %18 {
                %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc106)
                %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc107)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
              } loc(#loc167)
            } loc(#loc165)
            %8 = cir.const #cir.int<5> : !s32i loc(#loc108)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc108)
            cir.store %9, %2 : !s8i, !cir.ptr<!s8i> loc(#loc168)
            %10 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc110)
            %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
            cir.store %10, %11 : !s8i, !cir.ptr<!s8i> loc(#loc169)
            cir.scope {
              %15 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc171)
              %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
              %17 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc117)
              cir.store %17, %15 : !s8i, !cir.ptr<!s8i> loc(#loc171)
              %18 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc118)
              cir.call @printHexCharLine(%18) : (!s8i) -> () loc(#loc119)
            } loc(#loc170)
            %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc120)
            %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
            cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc120)
          } loc(#loc160)
        } loc(#loc159)
        cir.yield loc(#loc84)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc123)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
        cir.yield loc(#loc156)
      } loc(#loc156)
    } loc(#loc156)
    cir.return loc(#loc80)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_malloc_use_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc9 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":33:1)
#loc11 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":22:9)
#loc13 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:5)
#loc14 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":32:5)
#loc15 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:13)
#loc16 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:9)
#loc17 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:16)
#loc18 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:20)
#loc19 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:18)
#loc20 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":24:5)
#loc21 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":25:9)
#loc22 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":31:9)
#loc23 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":26:13)
#loc24 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":26:57)
#loc25 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":28:13)
#loc26 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":28:26)
#loc27 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":26:38)
#loc28 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":26:45)
#loc29 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":26:56)
#loc30 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:13)
#loc31 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:44)
#loc32 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:17)
#loc33 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:28)
#loc34 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:34)
#loc35 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:35)
#loc36 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:41)
#loc37 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":27:40)
#loc38 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":28:25)
#loc39 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":29:13)
#loc40 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":29:18)
#loc41 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":30:30)
#loc42 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":30:13)
#loc43 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:24)
#loc44 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":23:23)
#loc45 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":60:1)
#loc46 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":63:1)
#loc47 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":62:5)
#loc48 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":62:11)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":79:15)
#loc56 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":81:15)
#loc57 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":84:15)
#loc58 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":86:15)
#loc59 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":74:1)
#loc60 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":89:1)
#loc65 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":75:1)
#loc66 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":77:27)
#loc67 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":77:22)
#loc68 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":77:5)
#loc69 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":79:5)
#loc70 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":80:5)
#loc71 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":80:56)
#loc72 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":81:5)
#loc73 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":84:5)
#loc74 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":85:5)
#loc75 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":85:55)
#loc76 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":86:5)
#loc77 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":88:12)
#loc78 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":88:5)
#loc79 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":40:1)
#loc80 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":58:1)
#loc81 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":42:5)
#loc82 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":42:9)
#loc83 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:5)
#loc84 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":57:5)
#loc85 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:13)
#loc86 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:9)
#loc87 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:16)
#loc88 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:20)
#loc89 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:18)
#loc90 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":44:5)
#loc91 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":45:9)
#loc92 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":56:9)
#loc93 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":46:13)
#loc94 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":46:18)
#loc95 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":47:13)
#loc96 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":47:57)
#loc97 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":47:38)
#loc98 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":47:45)
#loc99 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":47:56)
#loc100 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:13)
#loc101 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:44)
#loc102 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:17)
#loc103 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:28)
#loc104 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:34)
#loc105 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:35)
#loc106 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:41)
#loc107 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":48:40)
#loc108 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":49:20)
#loc109 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":49:13)
#loc110 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":50:24)
#loc111 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":50:14)
#loc112 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":50:13)
#loc113 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":51:13)
#loc114 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":54:13)
#loc115 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":52:17)
#loc116 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":52:30)
#loc117 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":52:29)
#loc118 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":53:34)
#loc119 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":53:17)
#loc120 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":55:13)
#loc121 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":55:18)
#loc122 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:24)
#loc123 = loc("CWE758_Undefined_Behavior__char_malloc_use_17.c":43:23)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc13, #loc14])
#loc131 = loc(fused[#loc16, #loc15])
#loc132 = loc(fused[#loc17, #loc18])
#loc133 = loc(fused[#loc20, #loc14])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc25, #loc26])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc27, #loc24])
#loc139 = loc(fused[#loc30, #loc31])
#loc140 = loc(fused[#loc32, #loc33])
#loc141 = loc(fused[#loc34, #loc31])
#loc142 = loc(fused[#loc44, #loc43])
#loc143 = loc(fused[#loc45, #loc46])
#loc144 = loc(fused[#loc47, #loc48])
#loc145 = loc(fused[#loc49, #loc50])
#loc146 = loc(fused[#loc51, #loc52])
#loc147 = loc(fused[#loc53, #loc54])
#loc148 = loc(fused[#loc59, #loc60])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc74, #loc75])
#loc153 = loc(fused[#loc78, #loc77])
#loc154 = loc(fused[#loc79, #loc80])
#loc155 = loc(fused[#loc81, #loc82])
#loc156 = loc(fused[#loc83, #loc84])
#loc157 = loc(fused[#loc86, #loc85])
#loc158 = loc(fused[#loc87, #loc88])
#loc159 = loc(fused[#loc90, #loc84])
#loc160 = loc(fused[#loc91, #loc92])
#loc161 = loc(fused[#loc93, #loc94])
#loc162 = loc(fused[#loc95, #loc96])
#loc163 = loc(fused[#loc98, #loc99])
#loc164 = loc(fused[#loc97, #loc96])
#loc165 = loc(fused[#loc100, #loc101])
#loc166 = loc(fused[#loc102, #loc103])
#loc167 = loc(fused[#loc104, #loc101])
#loc168 = loc(fused[#loc109, #loc108])
#loc169 = loc(fused[#loc112, #loc110])
#loc170 = loc(fused[#loc113, #loc114])
#loc171 = loc(fused[#loc115, #loc116])
#loc172 = loc(fused[#loc123, #loc122])
