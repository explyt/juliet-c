!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":24:21)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":24:25)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":76:25)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":76:29)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":112:25)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":112:29)
#true = #cir.bool<true> : !cir.bool
#loc212 = loc(fused[#loc6, #loc7])
#loc243 = loc(fused[#loc88, #loc89])
#loc262 = loc(fused[#loc139, #loc140])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc210)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc214)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc215)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc215)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc215)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc18)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !s32i loc(#loc217)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc25)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc25)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc219)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc28)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc221)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc31)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc222)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc32)
              cir.condition(%16) loc(#loc32)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc35)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc35)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc36)
              } loc(#loc223)
              cir.yield loc(#loc27)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc38)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
              cir.yield loc(#loc220)
            } loc(#loc220)
          } loc(#loc220)
        } else {
          %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        } loc(#loc218)
      } loc(#loc216)
    } loc(#loc213)
    cir.return loc(#loc5)
  } loc(#loc211)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc225)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc226)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc227)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc231)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc56)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc234)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc234)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc234)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc64)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc65)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc65)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc65)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc65)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc65)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc65)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc65)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc65)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc66)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc67)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc236)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc69)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc73)
          %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc74)
          cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
        } else {
          %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
          %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
          cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc77)
        } loc(#loc237)
      } loc(#loc235)
    } loc(#loc233)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc78)
    cir.return loc(#loc50)
  } loc(#loc229)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc239)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc88, #loc89])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc243)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc245)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc246)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc246)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc246)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        %5 = cir.const #cir.int<10> : !s32i loc(#loc100)
        %6 = cir.cmp(lt, %4, %5) : !s32i, !s32i loc(#loc248)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc101)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc105)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc107)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc107)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc250)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc110)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc252)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc113)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc253)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc114)
              cir.condition(%16) loc(#loc114)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc117)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc117)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc118)
              } loc(#loc254)
              cir.yield loc(#loc109)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc120)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc255)
              cir.yield loc(#loc251)
            } loc(#loc251)
          } loc(#loc251)
        } else {
          %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc121)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc121)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc122)
        } loc(#loc249)
      } loc(#loc247)
    } loc(#loc244)
    cir.return loc(#loc87)
  } loc(#loc242)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc258)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc130)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc132)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc134)
    cir.return loc(#loc124)
  } loc(#loc256)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc136)
  cir.func internal private  @goodB2GSink(%arg0: !s32i loc(fused[#loc139, #loc140])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc262)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc264)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc265)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc265)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc265)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc151)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !s32i loc(#loc267)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc152)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc155)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc268)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc157)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc153)
            cir.yield %14 : !cir.bool loc(#loc153)
          }, false {
            %14 = cir.const #false loc(#loc153)
            cir.yield %14 : !cir.bool loc(#loc153)
          }) : (!cir.bool) -> !cir.bool loc(#loc153)
          cir.yield %13 : !cir.bool loc(#loc153)
        }, false {
          %9 = cir.const #false loc(#loc153)
          cir.yield %9 : !cir.bool loc(#loc153)
        }) : (!cir.bool) -> !cir.bool loc(#loc153)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc161)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc163)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc163)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc270)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc166)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc272)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc169)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc273)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc170)
              cir.condition(%17) loc(#loc170)
            } body {
              cir.scope {
                %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc173)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc173)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc173)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc174)
              } loc(#loc274)
              cir.yield loc(#loc165)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc176)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc275)
              cir.yield loc(#loc271)
            } loc(#loc271)
          } loc(#loc271)
        } else {
          %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc136)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc136)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc177)
        } loc(#loc269)
      } loc(#loc266)
    } loc(#loc263)
    cir.return loc(#loc138)
  } loc(#loc261)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc278)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc183)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc278)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc185)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc281)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc281)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc281)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc193)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc194)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc194)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc194)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc194)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc194)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc194)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc194)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc194)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc195)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc196)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc197)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
        %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc283)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc198)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc202)
          %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc203)
          cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
        } else {
          %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc206)
          %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc206)
          cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc207)
        } loc(#loc284)
      } loc(#loc282)
    } loc(#loc280)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc208)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc208)
    cir.return loc(#loc179)
  } loc(#loc276)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":42:23)
#loc4 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":24:1)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":45:1)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":25:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":26:5)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":44:5)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":27:9)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":27:13)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":28:9)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":28:30)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":43:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:13)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:20)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":31:18)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":32:9)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":39:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":41:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":33:28)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":33:20)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":33:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":38:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:21)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:17)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:24)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:28)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:26)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":36:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":37:37)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":37:30)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":37:17)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:33)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":35:32)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":42:13)
#loc40 = loc("/usr/include/stdio.h":654:1)
#loc41 = loc("/usr/include/stdio.h":655:59)
#loc42 = loc("/usr/include/stdio.h":149:1)
#loc43 = loc("/usr/include/stdio.h":149:14)
#loc44 = loc("/usr/include/stdlib.h":105:1)
#loc45 = loc("/usr/include/stdlib.h":106:33)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":64:23)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":47:1)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":69:1)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":49:5)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":49:9)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":51:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":51:29)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":53:13)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":53:12)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":53:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":54:5)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":66:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":55:9)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":55:45)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:9)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":65:9)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:19)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:32)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:49)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:59)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":57:56)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":58:9)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":61:9)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":63:9)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:25)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:20)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":60:36)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":64:13)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":68:5)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":68:13)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":156:1)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":160:1)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":158:5)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":158:13)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":159:5)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":159:13)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":76:1)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":97:1)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":77:1)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":78:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":96:5)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":79:9)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":79:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":80:9)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":80:30)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:9)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":95:9)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:20)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":83:18)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":84:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":91:9)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":93:9)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":85:28)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":85:20)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":85:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:13)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":90:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:21)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:24)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:28)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:26)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":88:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":89:37)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":89:30)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":89:17)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:33)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":87:32)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":94:23)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":94:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":99:1)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":109:1)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":101:5)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":101:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":102:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":102:29)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":104:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":104:12)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":104:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":107:12)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":107:5)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":108:5)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":108:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":129:23)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":112:1)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":132:1)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":113:1)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":114:5)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":131:5)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":115:9)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":115:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":116:9)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":116:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:9)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":130:9)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:21)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:18)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:23)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:26)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:34)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:36)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":118:31)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":119:9)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":126:9)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":128:9)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":120:28)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":120:20)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":120:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:13)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":125:13)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:21)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:17)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:24)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:28)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:26)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":123:13)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":124:37)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":124:30)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":124:17)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:33)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":122:32)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":129:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":134:1)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":154:1)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":136:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":136:9)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":137:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":137:29)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":139:13)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":139:12)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":139:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":140:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":152:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":141:9)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":141:45)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:9)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":151:9)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:19)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:32)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:49)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:13)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:59)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":143:56)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":144:9)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":147:9)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":149:9)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:25)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:20)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:13)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":146:36)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":150:23)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":150:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":153:5)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_44.c":153:13)
#loc210 = loc(fused[#loc1, #loc2])
#loc211 = loc(fused[#loc4, #loc5])
#loc213 = loc(fused[#loc9, #loc10])
#loc214 = loc(fused[#loc11, #loc12])
#loc215 = loc(fused[#loc13, #loc14])
#loc216 = loc(fused[#loc15, #loc16])
#loc217 = loc(fused[#loc17, #loc18])
#loc218 = loc(fused[#loc20, #loc21, #loc22, #loc16])
#loc219 = loc(fused[#loc25, #loc23])
#loc220 = loc(fused[#loc26, #loc27])
#loc221 = loc(fused[#loc29, #loc28])
#loc222 = loc(fused[#loc30, #loc31])
#loc223 = loc(fused[#loc33, #loc27])
#loc224 = loc(fused[#loc38, #loc37])
#loc225 = loc(fused[#loc40, #loc41])
#loc226 = loc(fused[#loc42, #loc43])
#loc227 = loc(fused[#loc44, #loc45])
#loc228 = loc(fused[#loc46, #loc47])
#loc229 = loc(fused[#loc49, #loc50])
#loc230 = loc(fused[#loc51, #loc52])
#loc231 = loc(fused[#loc53, #loc54])
#loc232 = loc(fused[#loc57, #loc55])
#loc233 = loc(fused[#loc58, #loc59])
#loc234 = loc(fused[#loc60, #loc61])
#loc235 = loc(fused[#loc62, #loc63])
#loc236 = loc(fused[#loc67, #loc68])
#loc237 = loc(fused[#loc70, #loc71, #loc72, #loc63])
#loc238 = loc(fused[#loc75, #loc76])
#loc239 = loc(fused[#loc80, #loc81])
#loc240 = loc(fused[#loc82, #loc83])
#loc241 = loc(fused[#loc84, #loc85])
#loc242 = loc(fused[#loc86, #loc87])
#loc244 = loc(fused[#loc91, #loc92])
#loc245 = loc(fused[#loc93, #loc94])
#loc246 = loc(fused[#loc95, #loc96])
#loc247 = loc(fused[#loc97, #loc98])
#loc248 = loc(fused[#loc99, #loc100])
#loc249 = loc(fused[#loc102, #loc103, #loc104, #loc98])
#loc250 = loc(fused[#loc107, #loc105])
#loc251 = loc(fused[#loc108, #loc109])
#loc252 = loc(fused[#loc111, #loc110])
#loc253 = loc(fused[#loc112, #loc113])
#loc254 = loc(fused[#loc115, #loc109])
#loc255 = loc(fused[#loc120, #loc119])
#loc256 = loc(fused[#loc123, #loc124])
#loc257 = loc(fused[#loc125, #loc126])
#loc258 = loc(fused[#loc127, #loc128])
#loc259 = loc(fused[#loc131, #loc129])
#loc260 = loc(fused[#loc133, #loc132])
#loc261 = loc(fused[#loc137, #loc138])
#loc263 = loc(fused[#loc142, #loc143])
#loc264 = loc(fused[#loc144, #loc145])
#loc265 = loc(fused[#loc146, #loc147])
#loc266 = loc(fused[#loc148, #loc149])
#loc267 = loc(fused[#loc150, #loc151])
#loc268 = loc(fused[#loc154, #loc156])
#loc269 = loc(fused[#loc158, #loc159, #loc160, #loc149])
#loc270 = loc(fused[#loc163, #loc161])
#loc271 = loc(fused[#loc164, #loc165])
#loc272 = loc(fused[#loc167, #loc166])
#loc273 = loc(fused[#loc168, #loc169])
#loc274 = loc(fused[#loc171, #loc165])
#loc275 = loc(fused[#loc176, #loc175])
#loc276 = loc(fused[#loc178, #loc179])
#loc277 = loc(fused[#loc180, #loc181])
#loc278 = loc(fused[#loc182, #loc183])
#loc279 = loc(fused[#loc186, #loc184])
#loc280 = loc(fused[#loc187, #loc188])
#loc281 = loc(fused[#loc189, #loc190])
#loc282 = loc(fused[#loc191, #loc192])
#loc283 = loc(fused[#loc196, #loc197])
#loc284 = loc(fused[#loc199, #loc200, #loc201, #loc192])
#loc285 = loc(fused[#loc204, #loc205])
