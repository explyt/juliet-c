!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc219)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc220)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc221)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc223)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc230)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc230)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc230)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc232)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc35)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc43)
            } loc(#loc233)
          } loc(#loc231)
        } loc(#loc229)
      } loc(#loc228)
    } loc(#loc227)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc46)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc46)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc48)
        %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc49)
        %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } loc(#loc236)
    } loc(#loc235)
    cir.return loc(#loc14)
  } loc(#loc224)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fgets_sleep_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc240)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc52)
  } loc(#loc237)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc61)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc62)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc69)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc73)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc248)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc248)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc248)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc81)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc82)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc82)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc82)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc82)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc82)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc82)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc82)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc82)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc84)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc250)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc86)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc91)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc95)
            } loc(#loc251)
          } loc(#loc249)
        } loc(#loc247)
      } loc(#loc246)
    } loc(#loc245)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc98)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc98)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !s32i loc(#loc256)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc107)
          %9 = cir.ternary(%8, true {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %11 = cir.const #cir.int<2000> : !s32i loc(#loc110)
            %12 = cir.cmp(le, %10, %11) : !s32i, !s32i loc(#loc257)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc111)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc108)
              cir.yield %15 : !cir.bool loc(#loc108)
            }, false {
              %15 = cir.const #false loc(#loc108)
              cir.yield %15 : !cir.bool loc(#loc108)
            }) : (!cir.bool) -> !cir.bool loc(#loc108)
            cir.yield %14 : !cir.bool loc(#loc108)
          }, false {
            %10 = cir.const #false loc(#loc108)
            cir.yield %10 : !cir.bool loc(#loc108)
          }) : (!cir.bool) -> !cir.bool loc(#loc108)
          cir.if %9 {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc115)
            %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc116)
            %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc62)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc62)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          } else {
            %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc63)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc63)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } loc(#loc258)
        } loc(#loc255)
      } loc(#loc254)
    } loc(#loc253)
    cir.return loc(#loc65)
  } loc(#loc242)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc124)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc128)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc265)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc265)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc265)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc137)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc137)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc137)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc137)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc137)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc137)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc137)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc137)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc220)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc138)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc139)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc267)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc141)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc146)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc149)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc149)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc150)
            } loc(#loc268)
          } loc(#loc266)
        } loc(#loc264)
      } loc(#loc263)
    } loc(#loc262)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc153)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc158)
          %7 = cir.cmp(gt, %5, %6) : !s32i, !s32i loc(#loc273)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc159)
          %9 = cir.ternary(%8, true {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            %11 = cir.const #cir.int<2000> : !s32i loc(#loc162)
            %12 = cir.cmp(le, %10, %11) : !s32i, !s32i loc(#loc274)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc163)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc160)
              cir.yield %15 : !cir.bool loc(#loc160)
            }, false {
              %15 = cir.const #false loc(#loc160)
              cir.yield %15 : !cir.bool loc(#loc160)
            }) : (!cir.bool) -> !cir.bool loc(#loc160)
            cir.yield %14 : !cir.bool loc(#loc160)
          }, false {
            %10 = cir.const #false loc(#loc160)
            cir.yield %10 : !cir.bool loc(#loc160)
          }) : (!cir.bool) -> !cir.bool loc(#loc160)
          cir.if %9 {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc167)
            %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc168)
            %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc169)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc169)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc170)
          } else {
            %10 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc171)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc171)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc172)
          } loc(#loc275)
        } loc(#loc272)
      } loc(#loc271)
    } loc(#loc270)
    cir.return loc(#loc120)
  } loc(#loc259)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc182)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc182)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc187)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc188)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
      } loc(#loc280)
    } loc(#loc279)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc192)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc192)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
        %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc194)
        %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc195)
        %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc196)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc196)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc197)
      } loc(#loc283)
    } loc(#loc282)
    cir.return loc(#loc174)
  } loc(#loc276)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc203)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc207)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc207)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc209)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
      } loc(#loc288)
    } loc(#loc287)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc213)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc213)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
        %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc215)
        %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc216)
        %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc217)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc217)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc218)
      } loc(#loc291)
    } loc(#loc290)
    cir.return loc(#loc199)
  } loc(#loc284)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":55:27)
#loc10 = loc("/usr/include/unistd.h":480:1)
#loc11 = loc("/usr/include/unistd.h":480:43)
#loc12 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":63:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":38:1)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":65:1)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":40:5)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":40:9)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":42:14)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":42:13)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":42:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":43:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":58:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":43:8)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":44:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":45:9)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":57:9)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":46:13)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":46:49)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:13)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":56:13)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:23)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:36)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:53)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:17)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:63)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":48:60)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":49:13)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":52:13)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":54:13)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":51:30)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":51:25)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":51:17)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":51:41)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":55:17)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":59:5)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":64:5)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":59:8)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":60:5)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":62:15)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":62:9)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":63:9)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":193:1)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":199:1)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":195:5)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":195:14)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":196:5)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":196:14)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":197:5)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":197:14)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":198:5)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":198:14)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":96:19)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":104:23)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":108:23)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":72:1)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":111:1)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":74:5)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":74:9)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":76:14)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":76:13)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":76:5)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":77:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":92:5)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":77:8)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":78:5)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":79:9)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":91:9)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":80:13)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":80:49)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:13)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":90:13)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:23)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:36)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:53)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:17)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:63)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":82:60)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":83:13)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":86:13)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":88:13)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":85:30)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":85:25)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":85:17)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":85:41)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":89:27)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":89:17)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":93:5)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":110:5)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":93:8)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":94:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":97:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":99:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":96:9)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:9)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":109:9)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:13)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:21)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:19)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:23)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:26)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:35)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":101:32)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":102:9)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":105:9)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":107:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":103:19)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":103:13)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":104:13)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":108:13)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":114:1)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":148:1)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":116:5)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":116:9)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":118:14)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":118:13)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":118:5)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":119:5)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":134:5)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":119:8)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":120:5)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":121:9)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":133:9)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":122:13)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":122:49)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:13)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":132:13)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:23)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:36)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:53)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:17)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:63)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":124:60)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":125:13)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":128:13)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":130:13)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":127:30)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":127:25)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":127:17)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":127:41)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":131:27)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":131:17)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":135:5)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":147:5)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":135:8)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":136:5)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:9)
#loc156 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":146:9)
#loc157 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:13)
#loc158 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:21)
#loc159 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:19)
#loc160 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:23)
#loc161 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:26)
#loc162 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:35)
#loc163 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":138:32)
#loc164 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":139:9)
#loc165 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":142:9)
#loc166 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":144:9)
#loc167 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":140:19)
#loc168 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":140:13)
#loc169 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":141:23)
#loc170 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":141:13)
#loc171 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":145:23)
#loc172 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":145:13)
#loc173 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":151:1)
#loc174 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":172:1)
#loc175 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":153:5)
#loc176 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":153:9)
#loc177 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":155:14)
#loc178 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":155:13)
#loc179 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":155:5)
#loc180 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":156:5)
#loc181 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":165:5)
#loc182 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":156:8)
#loc183 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":157:5)
#loc184 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":160:5)
#loc185 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":162:5)
#loc186 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":159:19)
#loc187 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":159:9)
#loc188 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":164:17)
#loc189 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":164:9)
#loc190 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":166:5)
#loc191 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":171:5)
#loc192 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":166:8)
#loc193 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":167:5)
#loc194 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":169:15)
#loc195 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":169:9)
#loc196 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":170:19)
#loc197 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":170:9)
#loc198 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":175:1)
#loc199 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":191:1)
#loc200 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":177:5)
#loc201 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":177:9)
#loc202 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":179:14)
#loc203 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":179:13)
#loc204 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":179:5)
#loc205 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":180:5)
#loc206 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":184:5)
#loc207 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":180:8)
#loc208 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":181:5)
#loc209 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":183:17)
#loc210 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":183:9)
#loc211 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":185:5)
#loc212 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":190:5)
#loc213 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":185:8)
#loc214 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":186:5)
#loc215 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":188:15)
#loc216 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":188:9)
#loc217 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":189:19)
#loc218 = loc("CWE400_Resource_Exhaustion__fgets_sleep_04.c":189:9)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc10, #loc11])
#loc224 = loc(fused[#loc13, #loc14])
#loc225 = loc(fused[#loc15, #loc16])
#loc226 = loc(fused[#loc19, #loc17])
#loc227 = loc(fused[#loc20, #loc21])
#loc228 = loc(fused[#loc23, #loc21])
#loc229 = loc(fused[#loc24, #loc25])
#loc230 = loc(fused[#loc26, #loc27])
#loc231 = loc(fused[#loc28, #loc29])
#loc232 = loc(fused[#loc33, #loc34])
#loc233 = loc(fused[#loc36, #loc37, #loc38, #loc29])
#loc234 = loc(fused[#loc41, #loc42])
#loc235 = loc(fused[#loc44, #loc45])
#loc236 = loc(fused[#loc47, #loc45])
#loc237 = loc(fused[#loc51, #loc52])
#loc238 = loc(fused[#loc53, #loc54])
#loc239 = loc(fused[#loc55, #loc56])
#loc240 = loc(fused[#loc57, #loc58])
#loc241 = loc(fused[#loc59, #loc60])
#loc242 = loc(fused[#loc64, #loc65])
#loc243 = loc(fused[#loc66, #loc67])
#loc244 = loc(fused[#loc70, #loc68])
#loc245 = loc(fused[#loc71, #loc72])
#loc246 = loc(fused[#loc74, #loc72])
#loc247 = loc(fused[#loc75, #loc76])
#loc248 = loc(fused[#loc77, #loc78])
#loc249 = loc(fused[#loc79, #loc80])
#loc250 = loc(fused[#loc84, #loc85])
#loc251 = loc(fused[#loc87, #loc88, #loc89, #loc80])
#loc252 = loc(fused[#loc92, #loc93])
#loc253 = loc(fused[#loc96, #loc97])
#loc254 = loc(fused[#loc99, #loc100, #loc101, #loc97])
#loc255 = loc(fused[#loc103, #loc104])
#loc256 = loc(fused[#loc105, #loc106])
#loc257 = loc(fused[#loc109, #loc110])
#loc258 = loc(fused[#loc112, #loc113, #loc114, #loc104])
#loc259 = loc(fused[#loc119, #loc120])
#loc260 = loc(fused[#loc121, #loc122])
#loc261 = loc(fused[#loc125, #loc123])
#loc262 = loc(fused[#loc126, #loc127])
#loc263 = loc(fused[#loc129, #loc127])
#loc264 = loc(fused[#loc130, #loc131])
#loc265 = loc(fused[#loc132, #loc133])
#loc266 = loc(fused[#loc134, #loc135])
#loc267 = loc(fused[#loc139, #loc140])
#loc268 = loc(fused[#loc142, #loc143, #loc144, #loc135])
#loc269 = loc(fused[#loc147, #loc148])
#loc270 = loc(fused[#loc151, #loc152])
#loc271 = loc(fused[#loc154, #loc152])
#loc272 = loc(fused[#loc155, #loc156])
#loc273 = loc(fused[#loc157, #loc158])
#loc274 = loc(fused[#loc161, #loc162])
#loc275 = loc(fused[#loc164, #loc165, #loc166, #loc156])
#loc276 = loc(fused[#loc173, #loc174])
#loc277 = loc(fused[#loc175, #loc176])
#loc278 = loc(fused[#loc179, #loc177])
#loc279 = loc(fused[#loc180, #loc181])
#loc280 = loc(fused[#loc183, #loc184, #loc185, #loc181])
#loc281 = loc(fused[#loc189, #loc188])
#loc282 = loc(fused[#loc190, #loc191])
#loc283 = loc(fused[#loc193, #loc191])
#loc284 = loc(fused[#loc198, #loc199])
#loc285 = loc(fused[#loc200, #loc201])
#loc286 = loc(fused[#loc204, #loc202])
#loc287 = loc(fused[#loc205, #loc206])
#loc288 = loc(fused[#loc208, #loc206])
#loc289 = loc(fused[#loc210, #loc209])
#loc290 = loc(fused[#loc211, #loc212])
#loc291 = loc(fused[#loc214, #loc212])
