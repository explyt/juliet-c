!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc216)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private @printIntLine(!s32i) loc(#loc219)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc21)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc19)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc23)
    cir.br ^bb6 loc(#loc25)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc225)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc30)
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb16 [
      7: ^bb11
    ] loc(#loc28)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc226)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %15 ^bb13, ^bb14 loc(#loc228)
  ^bb13:  // pred: ^bb12
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc37)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc39)
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc33)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc40)
  ^bb16:  // pred: ^bb9
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb17 loc(#loc43)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc29)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc12)
  } loc(#loc220)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_multiply_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc45)
  } loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc236)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc65)
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc63)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc67)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc69)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc69)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc67)
    cir.br ^bb6 loc(#loc70)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc64)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc239)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<8> : !s32i loc(#loc76)
    cir.br ^bb9 loc(#loc74)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc74)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc77)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb22 loc(#loc80)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc240)
  ^bb13:  // pred: ^bb12
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc241)
    cir.brcond %17 ^bb14, ^bb20 loc(#loc242)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc243)
  ^bb15:  // pred: ^bb14
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %19 = cir.const #cir.int<2147483647> : !s32i loc(#loc89)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc89)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc89)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc90)
    %24 = cir.binop(div, %22, %23) : !s32i loc(#loc244)
    %25 = cir.cmp(gt, %18, %24) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %25 ^bb16, ^bb17 loc(#loc246)
  ^bb16:  // pred: ^bb15
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %28 = cir.binop(mul, %26, %27) nsw : !s32i loc(#loc95)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc97)
    cir.br ^bb18 loc(#loc93)
  ^bb17:  // pred: ^bb15
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc54)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb18 loc(#loc87)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc87)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc82)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc82)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc99)
  ^bb22:  // 2 preds: ^bb11, ^bb21
    cir.br ^bb23 loc(#loc75)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc56)
  } loc(#loc234)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc248)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc249)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc110)
    cir.br ^bb2 loc(#loc108)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc108)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc112)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc114)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc114)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc112)
    cir.br ^bb6 loc(#loc115)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc252)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #cir.int<7> : !s32i loc(#loc121)
    cir.br ^bb9 loc(#loc119)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %12 : !s32i, ^bb21 [
      7: ^bb11
    ] loc(#loc119)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc122)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc253)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %15 ^bb13, ^bb19 loc(#loc255)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc256)
  ^bb14:  // pred: ^bb13
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %17 = cir.const #cir.int<2147483647> : !s32i loc(#loc131)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc131)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc131)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc132)
    %22 = cir.binop(div, %20, %21) : !s32i loc(#loc257)
    %23 = cir.cmp(gt, %16, %22) : !s32i, !cir.bool loc(#loc258)
    cir.brcond %23 ^bb15, ^bb16 loc(#loc259)
  ^bb15:  // pred: ^bb14
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %26 = cir.binop(mul, %24, %25) nsw : !s32i loc(#loc137)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc139)
    cir.br ^bb17 loc(#loc135)
  ^bb16:  // pred: ^bb14
    %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc140)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb17 loc(#loc129)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc129)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc124)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc124)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc142)
  ^bb21:  // pred: ^bb9
    %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc143)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb22 loc(#loc145)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc120)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc101)
  } loc(#loc247)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc262)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb1 loc(#loc264)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc156)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc154)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc157)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb6 loc(#loc160)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc162)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb6 loc(#loc164)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc155)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc266)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.int<7> : !s32i loc(#loc167)
    cir.br ^bb9 loc(#loc165)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %8 : !s32i, ^bb16 [
      7: ^bb11
    ] loc(#loc165)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc168)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc267)
  ^bb12:  // pred: ^bb11
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %11 ^bb13, ^bb14 loc(#loc269)
  ^bb13:  // pred: ^bb12
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc174)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc176)
    cir.br ^bb14 loc(#loc170)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc170)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc177)
  ^bb16:  // pred: ^bb9
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    cir.br ^bb17 loc(#loc180)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc166)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc147)
  } loc(#loc260)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc271)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc272)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc187)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc191)
    cir.br ^bb2 loc(#loc189)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc189)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc192)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2> : !s32i loc(#loc193)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc194)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb6 loc(#loc196)
  ^bb5:  // pred: ^bb2
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc197)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc190)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc276)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.int<7> : !s32i loc(#loc202)
    cir.br ^bb9 loc(#loc200)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %8 : !s32i, ^bb16 [
      7: ^bb11
    ] loc(#loc200)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc203)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc277)
  ^bb12:  // pred: ^bb11
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc207)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %11 ^bb13, ^bb14 loc(#loc279)
  ^bb13:  // pred: ^bb12
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc184)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc209)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc211)
    cir.br ^bb14 loc(#loc205)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc205)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc212)
  ^bb16:  // pred: ^bb9
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc213)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc214)
    cir.br ^bb17 loc(#loc215)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc201)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc182)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":35:19)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":22:1)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":53:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":44:13)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":44:33)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":24:5)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":24:9)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":26:12)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":26:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":27:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":37:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":27:12)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":29:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":31:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":31:16)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":32:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":35:9)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":36:9)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":38:5)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":52:5)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":38:12)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":40:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":41:9)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":46:9)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":41:12)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":41:19)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":42:9)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":44:26)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":45:26)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":45:13)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":47:9)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":50:19)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":50:9)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":51:9)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":209:1)
#loc45 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":215:1)
#loc46 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":211:5)
#loc47 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":211:14)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":212:5)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":212:14)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":213:5)
#loc51 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":213:14)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":214:5)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":214:14)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":93:27)
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":60:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":98:1)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":88:17)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":88:37)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":62:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":62:9)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":64:12)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":64:5)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":65:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":75:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":65:12)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":67:5)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":69:9)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":69:16)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":69:23)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":70:9)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":73:19)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":73:9)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":74:9)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":76:5)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":97:5)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":76:12)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":78:5)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":80:19)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":80:9)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":81:9)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":83:9)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":95:9)
#loc83 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":83:12)
#loc84 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":83:19)
#loc85 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":84:9)
#loc86 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":86:13)
#loc87 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":94:13)
#loc88 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":86:17)
#loc89 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":86:25)
#loc90 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":86:33)
#loc91 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":86:34)
#loc92 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":87:13)
#loc93 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":90:13)
#loc94 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":92:13)
#loc95 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":88:30)
#loc96 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":89:30)
#loc97 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":89:17)
#loc98 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":93:17)
#loc99 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":96:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":101:1)
#loc101 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":139:1)
#loc102 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":125:17)
#loc103 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":125:37)
#loc104 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":103:5)
#loc105 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":103:9)
#loc106 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":105:12)
#loc107 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":105:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":106:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":116:5)
#loc110 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":106:12)
#loc111 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":108:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":110:9)
#loc113 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":110:16)
#loc114 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":110:23)
#loc115 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":111:9)
#loc116 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":114:19)
#loc117 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":114:9)
#loc118 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":115:9)
#loc119 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":117:5)
#loc120 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":138:5)
#loc121 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":117:12)
#loc122 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":119:5)
#loc123 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":120:9)
#loc124 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":132:9)
#loc125 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":120:12)
#loc126 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":120:19)
#loc127 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":121:9)
#loc128 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":123:13)
#loc129 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":131:13)
#loc130 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":123:17)
#loc131 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":123:25)
#loc132 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":123:33)
#loc133 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":123:34)
#loc134 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":124:13)
#loc135 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":127:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":129:13)
#loc137 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":125:30)
#loc138 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":126:30)
#loc139 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":126:17)
#loc140 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":130:27)
#loc141 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":130:17)
#loc142 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":133:9)
#loc143 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":136:19)
#loc144 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":136:9)
#loc145 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":137:9)
#loc146 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":142:1)
#loc147 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":173:1)
#loc148 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":164:13)
#loc149 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":164:33)
#loc150 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":144:5)
#loc151 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":144:9)
#loc152 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":146:12)
#loc153 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":146:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":147:5)
#loc155 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":157:5)
#loc156 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":147:12)
#loc157 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":149:5)
#loc158 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":151:19)
#loc159 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":151:9)
#loc160 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":152:9)
#loc161 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":155:17)
#loc162 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":155:16)
#loc163 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":155:9)
#loc164 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":156:9)
#loc165 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":158:5)
#loc166 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":172:5)
#loc167 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":158:12)
#loc168 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":160:5)
#loc169 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":161:9)
#loc170 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":166:9)
#loc171 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":161:12)
#loc172 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":161:19)
#loc173 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":162:9)
#loc174 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":164:26)
#loc175 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":165:26)
#loc176 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":165:13)
#loc177 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":167:9)
#loc178 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":170:19)
#loc179 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":170:9)
#loc180 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":171:9)
#loc181 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":176:1)
#loc182 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":207:1)
#loc183 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":198:13)
#loc184 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":198:33)
#loc185 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":178:5)
#loc186 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":178:9)
#loc187 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":180:12)
#loc188 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":180:5)
#loc189 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":181:5)
#loc190 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":191:5)
#loc191 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":181:12)
#loc192 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":183:5)
#loc193 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":185:17)
#loc194 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":185:16)
#loc195 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":185:9)
#loc196 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":186:9)
#loc197 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":189:19)
#loc198 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":189:9)
#loc199 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":190:9)
#loc200 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":192:5)
#loc201 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":206:5)
#loc202 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":192:12)
#loc203 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":194:5)
#loc204 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":195:9)
#loc205 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":200:9)
#loc206 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":195:12)
#loc207 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":195:19)
#loc208 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":196:9)
#loc209 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":198:26)
#loc210 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":199:26)
#loc211 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":199:13)
#loc212 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":201:9)
#loc213 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":204:19)
#loc214 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":204:9)
#loc215 = loc("CWE191_Integer_Underflow__int_fscanf_multiply_15.c":205:9)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc6, #loc7])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc11, #loc12])
#loc221 = loc(fused[#loc13, #loc14])
#loc222 = loc(fused[#loc15, #loc16])
#loc223 = loc(fused[#loc18, #loc17])
#loc224 = loc(fused[#loc19, #loc20])
#loc225 = loc(fused[#loc28, #loc29])
#loc226 = loc(fused[#loc32, #loc33])
#loc227 = loc(fused[#loc34, #loc35])
#loc228 = loc(fused[#loc36, #loc33])
#loc229 = loc(fused[#loc44, #loc45])
#loc230 = loc(fused[#loc46, #loc47])
#loc231 = loc(fused[#loc48, #loc49])
#loc232 = loc(fused[#loc50, #loc51])
#loc233 = loc(fused[#loc52, #loc53])
#loc234 = loc(fused[#loc55, #loc56])
#loc235 = loc(fused[#loc57, #loc58])
#loc236 = loc(fused[#loc59, #loc60])
#loc237 = loc(fused[#loc62, #loc61])
#loc238 = loc(fused[#loc63, #loc64])
#loc239 = loc(fused[#loc74, #loc75])
#loc240 = loc(fused[#loc81, #loc82])
#loc241 = loc(fused[#loc83, #loc84])
#loc242 = loc(fused[#loc85, #loc82])
#loc243 = loc(fused[#loc86, #loc87])
#loc244 = loc(fused[#loc89, #loc90])
#loc245 = loc(fused[#loc88, #loc91])
#loc246 = loc(fused[#loc92, #loc93, #loc94, #loc87])
#loc247 = loc(fused[#loc100, #loc101])
#loc248 = loc(fused[#loc102, #loc103])
#loc249 = loc(fused[#loc104, #loc105])
#loc250 = loc(fused[#loc107, #loc106])
#loc251 = loc(fused[#loc108, #loc109])
#loc252 = loc(fused[#loc119, #loc120])
#loc253 = loc(fused[#loc123, #loc124])
#loc254 = loc(fused[#loc125, #loc126])
#loc255 = loc(fused[#loc127, #loc124])
#loc256 = loc(fused[#loc128, #loc129])
#loc257 = loc(fused[#loc131, #loc132])
#loc258 = loc(fused[#loc130, #loc133])
#loc259 = loc(fused[#loc134, #loc135, #loc136, #loc129])
#loc260 = loc(fused[#loc146, #loc147])
#loc261 = loc(fused[#loc148, #loc149])
#loc262 = loc(fused[#loc150, #loc151])
#loc263 = loc(fused[#loc153, #loc152])
#loc264 = loc(fused[#loc154, #loc155])
#loc265 = loc(fused[#loc163, #loc161])
#loc266 = loc(fused[#loc165, #loc166])
#loc267 = loc(fused[#loc169, #loc170])
#loc268 = loc(fused[#loc171, #loc172])
#loc269 = loc(fused[#loc173, #loc170])
#loc270 = loc(fused[#loc181, #loc182])
#loc271 = loc(fused[#loc183, #loc184])
#loc272 = loc(fused[#loc185, #loc186])
#loc273 = loc(fused[#loc188, #loc187])
#loc274 = loc(fused[#loc189, #loc190])
#loc275 = loc(fused[#loc195, #loc193])
#loc276 = loc(fused[#loc200, #loc201])
#loc277 = loc(fused[#loc204, #loc205])
#loc278 = loc(fused[#loc206, #loc207])
#loc279 = loc(fused[#loc208, #loc205])
