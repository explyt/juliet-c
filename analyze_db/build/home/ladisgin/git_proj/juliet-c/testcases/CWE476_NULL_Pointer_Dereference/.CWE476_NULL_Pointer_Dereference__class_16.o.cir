!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc91)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc92)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %2 ^bb3, ^bb4 loc(#loc11)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc96)
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc10)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // pred: ^bb6
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb8, ^bb9 loc(#loc17)
  ^bb8:  // pred: ^bb7
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc18)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc21)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc22)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc23)
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc27)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc101)
  ^bb2:  // pred: ^bb1
    %1 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %2 ^bb3, ^bb4 loc(#loc34)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc102)
    cir.br ^bb4 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc33)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    %4 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %5 ^bb8, ^bb14 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
    %8 = cir.cmp(ne, %6, %7) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc105)
    cir.brcond %8 ^bb10, ^bb11 loc(#loc106)
  ^bb10:  // pred: ^bb9
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc50)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc51)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc51)
    cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    cir.br ^bb12 loc(#loc46)
  ^bb11:  // pred: ^bb9
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc27)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb12 loc(#loc42)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc42)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc54)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc39)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc29)
  } loc(#loc99)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc107)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc57)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc57)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc57)
    cir.return loc(#loc57)
  } loc(#loc57)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc66)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc109)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc61)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc109)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc74)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    cir.store %13, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc116)
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc117)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc117)
  ^bb9:  // pred: ^bb8
    %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %15 ^bb10, ^bb11 loc(#loc80)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc19)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc83)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc84)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb11 loc(#loc86)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc79)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc59)
  } loc(#loc108)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodB2GEv() : () -> () loc(#loc89)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_16L7goodG2BEv() : () -> () loc(#loc90)
    cir.return loc(#loc88)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_16.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":24:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":41:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":26:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":26:20)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":27:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":32:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":27:11)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":30:16)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":30:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":31:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":33:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":40:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":33:11)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:22)
#loc19 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:28)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":36:9)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":38:16)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":24:6)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":39:9)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":67:23)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":48:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":71:1)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":50:5)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":50:20)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":51:5)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":56:5)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":51:11)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":54:16)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":54:9)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":55:9)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":57:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":70:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":57:11)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:9)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":68:9)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:13)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":60:21)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":61:9)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":64:9)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":66:9)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:26)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:32)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":62:13)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":63:20)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":48:13)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":67:13)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":69:9)
#loc55 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc56 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":74:1)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":96:1)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:13)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:42)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":76:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":76:20)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":77:5)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":87:5)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":77:11)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":79:9)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":85:9)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":80:38)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":81:31)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":81:13)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":82:31)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":82:13)
#loc74 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":84:20)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":84:13)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":86:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":88:5)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":95:5)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":88:11)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:22)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:28)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":91:9)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":93:16)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":74:13)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":94:9)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":98:1)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":102:1)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":100:5)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_16.cpp":101:5)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc13, #loc12])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc25, #loc26])
#loc99 = loc(fused[#loc28, #loc29])
#loc100 = loc(fused[#loc30, #loc31])
#loc101 = loc(fused[#loc32, #loc33])
#loc102 = loc(fused[#loc36, #loc35])
#loc103 = loc(fused[#loc38, #loc39])
#loc104 = loc(fused[#loc41, #loc42])
#loc105 = loc(fused[#loc43, #loc44])
#loc106 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc107 = loc(fused[#loc55, #loc56])
#loc108 = loc(fused[#loc58, #loc59])
#loc109 = loc(fused[#loc60, #loc61])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc67, #loc68])
#loc113 = loc(fused[#loc69, #loc61])
#loc114 = loc(fused[#loc71, #loc70])
#loc115 = loc(fused[#loc73, #loc72])
#loc116 = loc(fused[#loc76, #loc75])
#loc117 = loc(fused[#loc78, #loc79])
#loc118 = loc(fused[#loc87, #loc88])
