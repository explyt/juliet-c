!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":28:66)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":28:83)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":58:70)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":58:87)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":83:70)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":83:87)
#true = #cir.bool<true> : !cir.bool
#loc152 = loc(fused[#loc15, #loc16])
#loc168 = loc(fused[#loc57, #loc58])
#loc184 = loc(fused[#loc102, #loc103])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b_badSink(%arg0: !cir.ptr<!u64i> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc19)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc20)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc21)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!u64i>, %3 : !s32i), !cir.ptr<!u64i> loc(#loc18)
    %5 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc20)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc155)
      cir.scope {
        %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
        %8 = cir.const #cir.int<5> : !u64i loc(#loc157)
        %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc158)
        cir.if %9 {
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
          %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc160)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc161)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
          cir.store %15, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
          cir.scope {
            %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc46)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc47)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
            } loc(#loc166)
          } loc(#loc164)
          %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc48)
          %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
          %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
        } else {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc54)
        } loc(#loc159)
      } loc(#loc156)
    } loc(#loc154)
    cir.return loc(#loc14)
  } loc(#loc151)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b_goodG2BSink(%arg0: !cir.ptr<!u64i> loc(fused[#loc57, #loc58])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    cir.store %arg0, %0 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc61)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc62)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!u64i>, %3 : !s32i), !cir.ptr<!u64i> loc(#loc60)
    %5 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc171)
      cir.scope {
        %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
        %8 = cir.const #cir.int<5> : !u64i loc(#loc173)
        %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc174)
        cir.if %9 {
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc76)
          %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc77)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc176)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc177)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
          cir.store %15, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
          cir.scope {
            %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc89)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
            } loc(#loc182)
          } loc(#loc180)
          %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc90)
          %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc92)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc92)
          %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
          %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc94)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc95)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
        } else {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc97)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc97)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc98)
        } loc(#loc175)
      } loc(#loc172)
    } loc(#loc170)
    cir.return loc(#loc56)
  } loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc99)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b_goodB2GSink(%arg0: !cir.ptr<!u64i> loc(fused[#loc102, #loc103])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc185)
    cir.store %arg0, %0 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc106)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc107)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc108)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!u64i>, %3 : !s32i), !cir.ptr<!u64i> loc(#loc105)
    %5 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc187)
      cir.scope {
        %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
        %8 = cir.const #cir.int<5> : !u64i loc(#loc189)
        %9 = cir.cmp(gt, %7, %8) : !u64i, !cir.bool loc(#loc190)
        %10 = cir.ternary(%9, true {
          %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc119)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc120)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc120)
          %14 = cir.cmp(lt, %11, %13) : !u64i, !cir.bool loc(#loc191)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc118)
            cir.yield %16 : !cir.bool loc(#loc118)
          }, false {
            %16 = cir.const #false loc(#loc118)
            cir.yield %16 : !cir.bool loc(#loc118)
          }) : (!cir.bool) -> !cir.bool loc(#loc118)
          cir.yield %15 : !cir.bool loc(#loc118)
        }, false {
          %11 = cir.const #false loc(#loc118)
          cir.yield %11 : !cir.bool loc(#loc118)
        }) : (!cir.bool) -> !cir.bool loc(#loc118)
        cir.if %10 {
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
          %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc193)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc194)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
          cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
          cir.scope {
            %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc198)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc137)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
            } loc(#loc199)
          } loc(#loc197)
          %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc138)
          %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc140)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc140)
          %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
          %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc142)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc143)
          %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc143)
        } else {
          %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc99)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc99)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc145)
        } loc(#loc192)
      } loc(#loc188)
    } loc(#loc186)
    cir.return loc(#loc101)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":42:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":48:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":28:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":51:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":31:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":31:30)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":29:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":31:19)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":31:29)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":50:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":33:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":33:16)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":37:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":49:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":37:13)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":37:20)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":37:39)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":38:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":45:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":47:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":39:32)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":39:39)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":39:44)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":39:55)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":39:56)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":39:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:45)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:29)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:35)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:36)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:42)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":40:41)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":42:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":42:20)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":43:23)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":43:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":44:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":44:18)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":48:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":58:1)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":80:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":60:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":60:30)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":59:1)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":60:19)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":60:29)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":61:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":79:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":62:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":62:16)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":66:9)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":78:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":66:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":66:20)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":66:39)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":67:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":74:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":76:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":68:32)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":68:39)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":68:44)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":68:55)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":68:56)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":68:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:45)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:29)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:35)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:36)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:42)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":69:41)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":71:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":71:20)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":71:30)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":72:23)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":72:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":73:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":73:18)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":77:23)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":77:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":102:23)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":83:1)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":105:1)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":85:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":85:30)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":84:1)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":85:19)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":85:29)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":86:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":104:5)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":87:9)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":87:16)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:9)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":103:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:20)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:39)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:41)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:44)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":91:51)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":92:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":99:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":101:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":93:32)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":93:39)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":93:44)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":93:55)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":93:56)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":93:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:45)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:29)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:35)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:36)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:42)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":94:41)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":96:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":96:20)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":96:30)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":97:23)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":97:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":98:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":98:18)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_66b.c":102:13)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc8, #loc9])
#loc150 = loc(fused[#loc10, #loc11])
#loc151 = loc(fused[#loc13, #loc14])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc22, #loc23])
#loc155 = loc(fused[#loc24, #loc25])
#loc156 = loc(fused[#loc26, #loc27])
#loc157 = loc(fused[#loc29, #loc30])
#loc158 = loc(fused[#loc28, #loc30])
#loc159 = loc(fused[#loc31, #loc32, #loc33, #loc27])
#loc160 = loc(fused[#loc36, #loc37])
#loc161 = loc(fused[#loc35, #loc37])
#loc162 = loc(fused[#loc34, #loc38])
#loc163 = loc(fused[#loc39, #loc38])
#loc164 = loc(fused[#loc40, #loc41])
#loc165 = loc(fused[#loc42, #loc43])
#loc166 = loc(fused[#loc44, #loc41])
#loc167 = loc(fused[#loc55, #loc56])
#loc169 = loc(fused[#loc59, #loc60])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc66, #loc67])
#loc172 = loc(fused[#loc68, #loc69])
#loc173 = loc(fused[#loc71, #loc72])
#loc174 = loc(fused[#loc70, #loc72])
#loc175 = loc(fused[#loc73, #loc74, #loc75, #loc69])
#loc176 = loc(fused[#loc78, #loc79])
#loc177 = loc(fused[#loc77, #loc79])
#loc178 = loc(fused[#loc76, #loc80])
#loc179 = loc(fused[#loc81, #loc80])
#loc180 = loc(fused[#loc82, #loc83])
#loc181 = loc(fused[#loc84, #loc85])
#loc182 = loc(fused[#loc86, #loc83])
#loc183 = loc(fused[#loc100, #loc101])
#loc185 = loc(fused[#loc104, #loc105])
#loc186 = loc(fused[#loc109, #loc110])
#loc187 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc113, #loc114])
#loc189 = loc(fused[#loc116, #loc117])
#loc190 = loc(fused[#loc115, #loc117])
#loc191 = loc(fused[#loc119, #loc120])
#loc192 = loc(fused[#loc121, #loc122, #loc123, #loc114])
#loc193 = loc(fused[#loc126, #loc127])
#loc194 = loc(fused[#loc125, #loc127])
#loc195 = loc(fused[#loc124, #loc128])
#loc196 = loc(fused[#loc129, #loc128])
#loc197 = loc(fused[#loc130, #loc131])
#loc198 = loc(fused[#loc132, #loc133])
#loc199 = loc(fused[#loc134, #loc131])
