!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":25:21)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":25:29)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":109:10)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":109:14)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":109:20)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":109:32)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":51:25)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":51:33)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":71:25)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":71:33)
#loc134 = loc(fused[#loc5, #loc6])
#loc151 = loc(fused[#loc51, #loc52])
#loc152 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc71, #loc72])
#loc167 = loc(fused[#loc99, #loc100])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc132)
  cir.func internal private @badSink(%arg0: !s64i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc134)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc136)
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc12)
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc11)
      %4 = cir.binop(mul, %2, %3) nsw : !s64i loc(#loc12)
      cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc136)
      %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc13)
      cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc14)
    } loc(#loc135)
    cir.return loc(#loc4)
  } loc(#loc133)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc137)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc139)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc26)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>> loc(#loc142)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc27)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc143)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc139)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc139)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc29)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc31)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    cir.call %10(%11) : (!cir.ptr<!cir.func<!void (!s64i)>>, !s64i) -> () loc(#loc31)
    cir.return loc(#loc22)
  } loc(#loc140)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_square_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc147)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc58)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_square_44_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_square_44_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.return %17 : !s32i loc(#loc155)
  } loc(#loc150)
  cir.func internal private @goodG2BSink(%arg0: !s64i loc(fused[#loc71, #loc72])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc73)
    cir.scope {
      %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc159)
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc78)
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc77)
      %4 = cir.binop(mul, %2, %3) nsw : !s64i loc(#loc78)
      cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc159)
      %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc79)
      cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc80)
    } loc(#loc158)
    cir.return loc(#loc70)
  } loc(#loc156)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc86)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>> loc(#loc162)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc87)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc163)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc89)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc164)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc91)
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc92)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s64i)>>, !s64i) -> () loc(#loc91)
    cir.return loc(#loc82)
  } loc(#loc160)
  cir.func private @imaxabs(!s64i) -> !s64i extra(#fn_attr1) loc(#loc165)
  cir.func private @sqrtl(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc96)
  cir.func internal private @goodB2GSink(%arg0: !s64i loc(fused[#loc99, #loc100])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc101)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc104)
      %2 = cir.call @imaxabs(%1) : (!s64i) -> !s64i extra(#fn_attr1) loc(#loc105)
      %3 = cir.cast(int_to_float, %2 : !s64i), !cir.long_double<!cir.f80> loc(#loc105)
      %4 = cir.get_global @sqrtl : !cir.ptr<!cir.func<!cir.long_double<!cir.f80> (!cir.long_double<!cir.f80>)>> loc(#loc106)
      %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc107)
      %6 = cir.cast(int_to_float, %5 : !s64i), !cir.long_double<!cir.f80> loc(#loc107)
      %7 = cir.call @sqrtl(%6) : (!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc106)
      %8 = cir.cmp(le, %3, %7) : !cir.long_double<!cir.f80>, !cir.bool loc(#loc169)
      cir.if %8 {
        %9 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc171)
        %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc114)
        %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc113)
        %12 = cir.binop(mul, %10, %11) nsw : !s64i loc(#loc114)
        cir.store %12, %9 : !s64i, !cir.ptr<!s64i> loc(#loc171)
        %13 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc115)
        cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc116)
      } else {
        %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc96)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc117)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc98)
  } loc(#loc166)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc123)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>> loc(#loc174)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc124)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc175)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc126)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc176)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc176)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc126)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s64i)>>>, !cir.ptr<!cir.func<!void (!s64i)>> loc(#loc130)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc131)
    cir.call %10(%11) : (!cir.ptr<!cir.func<!void (!s64i)>>, !s64i) -> () loc(#loc130)
    cir.return loc(#loc119)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":25:1)
#loc4 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":32:1)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":26:1)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":27:5)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":31:5)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":29:9)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":29:33)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":29:26)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":30:27)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":30:9)
#loc15 = loc("/usr/include/stdio.h":463:1)
#loc16 = loc("/usr/include/stdio.h":465:33)
#loc17 = loc("/usr/include/stdio.h":149:1)
#loc18 = loc("/usr/include/stdio.h":149:14)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":41:20)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":41:24)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":34:1)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":44:1)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":36:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":36:13)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":38:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":38:33)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":39:12)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":39:5)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":41:5)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":41:13)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":43:5)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":43:13)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":95:1)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":99:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":97:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":97:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":98:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":98:13)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":114:15)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":116:15)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":119:15)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":121:15)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":109:1)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":124:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":110:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":112:27)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":112:22)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":112:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":114:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":115:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":115:60)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":116:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":119:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":120:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":120:59)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":121:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":123:12)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":123:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":51:1)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":58:1)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":52:1)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":53:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":57:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":55:9)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":55:33)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":55:26)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":56:27)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":56:9)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":60:1)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":68:1)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":62:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":62:13)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":63:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":63:33)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":64:12)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":64:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":66:12)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":66:5)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":67:5)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":67:13)
#loc93 = loc("/usr/include/inttypes.h":351:1)
#loc94 = loc("/usr/include/inttypes.h":351:74)
#loc95 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":81:19)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":71:1)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":83:1)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":72:1)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":74:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":82:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":74:27)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":74:9)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":74:36)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":74:42)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":74:51)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":75:5)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":78:5)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":80:5)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":76:9)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":76:33)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":76:26)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":77:27)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":77:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":81:9)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":85:1)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":93:1)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":87:5)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":87:13)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":88:5)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":88:33)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":89:12)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":89:5)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":91:5)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":91:13)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":91:20)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":91:24)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":92:5)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_44.c":92:13)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc8, #loc9])
#loc136 = loc(fused[#loc10, #loc11])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc23, #loc24])
#loc142 = loc(fused[#loc25, #loc26])
#loc143 = loc(fused[#loc28, #loc27])
#loc144 = loc(fused[#loc33, #loc34])
#loc145 = loc(fused[#loc35, #loc36])
#loc146 = loc(fused[#loc37, #loc38])
#loc147 = loc(fused[#loc39, #loc40])
#loc148 = loc(fused[#loc41, #loc42])
#loc149 = loc(fused[#loc43, #loc44])
#loc150 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc60, #loc61])
#loc154 = loc(fused[#loc64, #loc65])
#loc155 = loc(fused[#loc68, #loc67])
#loc156 = loc(fused[#loc69, #loc70])
#loc158 = loc(fused[#loc74, #loc75])
#loc159 = loc(fused[#loc76, #loc77])
#loc160 = loc(fused[#loc81, #loc82])
#loc161 = loc(fused[#loc83, #loc84])
#loc162 = loc(fused[#loc85, #loc86])
#loc163 = loc(fused[#loc88, #loc87])
#loc164 = loc(fused[#loc90, #loc89])
#loc165 = loc(fused[#loc93, #loc94])
#loc166 = loc(fused[#loc97, #loc98])
#loc168 = loc(fused[#loc102, #loc103])
#loc169 = loc(fused[#loc105, #loc108])
#loc170 = loc(fused[#loc109, #loc110, #loc111, #loc103])
#loc171 = loc(fused[#loc112, #loc113])
#loc172 = loc(fused[#loc118, #loc119])
#loc173 = loc(fused[#loc120, #loc121])
#loc174 = loc(fused[#loc122, #loc123])
#loc175 = loc(fused[#loc125, #loc124])
#loc176 = loc(fused[#loc128, #loc129])
