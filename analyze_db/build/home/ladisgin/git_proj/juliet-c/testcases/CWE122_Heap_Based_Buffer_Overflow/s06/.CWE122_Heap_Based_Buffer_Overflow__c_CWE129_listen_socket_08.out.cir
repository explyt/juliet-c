!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:48)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":498:10)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":498:14)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":498:20)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":498:32)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:48)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:27)
#loc564 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:48)
#loc627 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc917 = loc(fused[#loc240, #loc241])
#loc918 = loc(fused[#loc242, #loc243])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc820)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc821)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc822)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc823)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc824)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc825)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc826)
  cir.func private @close(!s32i) -> !s32i loc(#loc827)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc828)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc829)
  cir.func private @printIntLine(!s32i) loc(#loc830)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc831)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc25)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc832)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc834)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc835)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc836)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc837)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc838)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc839)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc840)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc841)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc47)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc842)
    cir.br ^bb1 loc(#loc843)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc844)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc51)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %12 ^bb2, ^bb46 loc(#loc845)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc846)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc35)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc836)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc37)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc837)
    cir.br ^bb4 loc(#loc847)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc847)
  ^bb5:  // pred: ^bb34
    %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %18 ^bb6, ^bb35 loc(#loc58)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc61)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc848)
    cir.br ^bb7 loc(#loc849)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc68)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc850)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc851)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc70)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc66)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc852)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc853)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc854)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc78)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc855)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc81)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc856)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc85)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc85)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc857)
    cir.br ^bb11 loc(#loc858)
  ^bb11:  // pred: ^bb10
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc859)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc860)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc860)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc97)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc98)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc861)
    cir.brcond %48 ^bb12, ^bb13 loc(#loc862)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc100)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc91)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc863)
  ^bb15:  // pred: ^bb14
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc104)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc106)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc864)
    cir.brcond %54 ^bb16, ^bb17 loc(#loc865)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc108)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc102)
  ^bb18:  // pred: ^bb17
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc110)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc111)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc112)
    cir.store %58, %3 : !s32i, !cir.ptr<!s32i> loc(#loc866)
    cir.br ^bb19 loc(#loc867)
  ^bb19:  // pred: ^bb18
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc118)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc868)
    cir.brcond %62 ^bb20, ^bb21 loc(#loc869)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc120)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc116)
  ^bb22:  // pred: ^bb21
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %64 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
    %66 = cir.const #cir.int<3> : !s32i loc(#loc123)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc123)
    %68 = cir.const #cir.int<4> : !u64i loc(#loc123)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc123)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc123)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc123)
    %72 = cir.binop(add, %69, %71) : !u64i loc(#loc123)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc124)
    %75 = cir.binop(sub, %72, %74) : !u64i loc(#loc870)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %77 = cir.call @recv(%63, %65, %75, %76) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc126)
    %78 = cir.cast(integral, %77 : !s64i), !s32i loc(#loc126)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc871)
    cir.br ^bb23 loc(#loc872)
  ^bb23:  // pred: ^bb22
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc132)
    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc873)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc133)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc133)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc133)
  ^bb25:  // pred: ^bb23
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc874)
    cir.brcond %86 ^bb26, ^bb27 loc(#loc133)
  ^bb26:  // pred: ^bb25
    %87 = cir.const #true loc(#loc133)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc133)
  ^bb27:  // pred: ^bb25
    %88 = cir.const #false loc(#loc133)
    cir.br ^bb28(%88 : !cir.bool) loc(#loc133)
  ^bb28(%89: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc133)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%89 : !cir.bool) loc(#loc133)
  ^bb30(%90: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc133)
  ^bb31:  // pred: ^bb30
    cir.brcond %90 ^bb32, ^bb33 loc(#loc875)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc137)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc130)
  ^bb34:  // pred: ^bb33
    %91 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %92 = cir.cast(integral, %91 : !s32i), !s8i loc(#loc138)
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
    %95 = cir.ptr_stride(%94 : !cir.ptr<!s8i>, %93 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %92, %95 : !s8i, !cir.ptr<!s8i> loc(#loc876)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc141)
    %97 = cir.call @atoi(%96) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc142)
    cir.store %97, %7 : !s32i, !cir.ptr<!s32i> loc(#loc877)
    cir.br ^bb5 loc(#loc57)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc57)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc878)
  ^bb37:  // pred: ^bb36
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %100 = cir.unary(minus, %99) : !s32i, !s32i loc(#loc148)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc879)
    cir.brcond %101 ^bb38, ^bb39 loc(#loc880)
  ^bb38:  // pred: ^bb37
    %102 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc151)
    cir.br ^bb39 loc(#loc146)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc146)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc881)
  ^bb41:  // pred: ^bb40
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc155)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc882)
    cir.brcond %107 ^bb42, ^bb43 loc(#loc883)
  ^bb42:  // pred: ^bb41
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc158)
    cir.br ^bb43 loc(#loc153)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc153)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc55)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc50)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc50)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc884)
  ^bb48:  // pred: ^bb47
    %110 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc885)
    %111 = cir.call %110() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc161)
    %112 = cir.cast(int_to_bool, %111 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %112 ^bb49, ^bb77 loc(#loc886)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc887)
  ^bb50:  // pred: ^bb49
    %113 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc166)
    %114 = cir.const #cir.int<10> : !s32i loc(#loc167)
    %115 = cir.cast(integral, %114 : !s32i), !u64i loc(#loc167)
    %116 = cir.const #cir.int<4> : !u64i loc(#loc888)
    %117 = cir.binop(mul, %115, %116) : !u64i loc(#loc889)
    %118 = cir.call @malloc(%117) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
    %119 = cir.cast(bitcast, %118 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc890)
    cir.store %119, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc840)
    cir.br ^bb51 loc(#loc891)
  ^bb51:  // pred: ^bb50
    %120 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %121 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
    %122 = cir.cast(bitcast, %121 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc173)
    %123 = cir.cmp(eq, %120, %122) : !cir.ptr<!s32i>, !cir.bool loc(#loc892)
    cir.brcond %123 ^bb52, ^bb53 loc(#loc893)
  ^bb52:  // pred: ^bb51
    %124 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
    %125 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %126 = cir.unary(minus, %125) : !s32i, !s32i loc(#loc177)
    cir.call @exit(%126) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
    cir.br ^bb53 loc(#loc171)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc171)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc894)
  ^bb55:  // pred: ^bb54
    %127 = cir.const #cir.int<0> : !s32i loc(#loc180)
    cir.store %127, %5 : !s32i, !cir.ptr<!s32i> loc(#loc895)
    cir.br ^bb56 loc(#loc894)
  ^bb56:  // 2 preds: ^bb55, ^bb60
    %128 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %129 = cir.const #cir.int<10> : !s32i loc(#loc183)
    %130 = cir.cmp(lt, %128, %129) : !s32i, !cir.bool loc(#loc896)
    cir.brcond %130 ^bb57, ^bb61 loc(#loc184)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc897)
  ^bb58:  // pred: ^bb57
    %131 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %132 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %133 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %134 = cir.ptr_stride(%132 : !cir.ptr<!s32i>, %133 : !s32i), !cir.ptr<!s32i> loc(#loc189)
    cir.store %131, %134 : !s32i, !cir.ptr<!s32i> loc(#loc898)
    cir.br ^bb59 loc(#loc179)
  ^bb59:  // pred: ^bb58
    cir.br ^bb60 loc(#loc179)
  ^bb60:  // pred: ^bb59
    %135 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %136 = cir.unary(inc, %135) : !s32i, !s32i loc(#loc191)
    cir.store %136, %5 : !s32i, !cir.ptr<!s32i> loc(#loc899)
    cir.br ^bb56 loc(#loc894)
  ^bb61:  // pred: ^bb56
    cir.br ^bb62 loc(#loc179)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc900)
  ^bb63:  // pred: ^bb62
    %137 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %138 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %139 = cir.cmp(ge, %137, %138) : !s32i, !cir.bool loc(#loc901)
    cir.brcond %139 ^bb64, ^bb73 loc(#loc902)
  ^bb64:  // pred: ^bb63
    %140 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %141 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
    %142 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %143 = cir.ptr_stride(%141 : !cir.ptr<!s32i>, %142 : !s32i), !cir.ptr<!s32i> loc(#loc202)
    cir.store %140, %143 : !s32i, !cir.ptr<!s32i> loc(#loc903)
    cir.br ^bb65 loc(#loc904)
  ^bb65:  // pred: ^bb64
    %144 = cir.const #cir.int<0> : !s32i loc(#loc205)
    cir.store %144, %5 : !s32i, !cir.ptr<!s32i> loc(#loc905)
    cir.br ^bb66 loc(#loc904)
  ^bb66:  // 2 preds: ^bb65, ^bb70
    %145 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %146 = cir.const #cir.int<10> : !s32i loc(#loc208)
    %147 = cir.cmp(lt, %145, %146) : !s32i, !cir.bool loc(#loc906)
    cir.brcond %147 ^bb67, ^bb71 loc(#loc209)
  ^bb67:  // pred: ^bb66
    cir.br ^bb68 loc(#loc907)
  ^bb68:  // pred: ^bb67
    %148 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
    %149 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %150 = cir.ptr_stride(%148 : !cir.ptr<!s32i>, %149 : !s32i), !cir.ptr<!s32i> loc(#loc213)
    %151 = cir.load %150 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.call @printIntLine(%151) : (!s32i) -> () loc(#loc214)
    cir.br ^bb69 loc(#loc204)
  ^bb69:  // pred: ^bb68
    cir.br ^bb70 loc(#loc204)
  ^bb70:  // pred: ^bb69
    %152 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %153 = cir.unary(inc, %152) : !s32i, !s32i loc(#loc216)
    cir.store %153, %5 : !s32i, !cir.ptr<!s32i> loc(#loc908)
    cir.br ^bb66 loc(#loc904)
  ^bb71:  // pred: ^bb66
    cir.br ^bb72 loc(#loc204)
  ^bb72:  // pred: ^bb71
    cir.br ^bb74 loc(#loc197)
  ^bb73:  // pred: ^bb63
    %154 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc25)
    %155 = cir.cast(array_to_ptrdecay, %154 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%155) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    cir.br ^bb74 loc(#loc193)
  ^bb74:  // 2 preds: ^bb72, ^bb73
    cir.br ^bb75 loc(#loc193)
  ^bb75:  // pred: ^bb74
    %156 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    %157 = cir.cast(bitcast, %156 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc218)
    cir.call @free(%157) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc219)
    cir.br ^bb76 loc(#loc165)
  ^bb76:  // pred: ^bb75
    cir.br ^bb77 loc(#loc160)
  ^bb77:  // 2 preds: ^bb48, ^bb76
    cir.br ^bb78 loc(#loc160)
  ^bb78:  // pred: ^bb77
    cir.return loc(#loc29)
  } loc(#loc833)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc910)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc222)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc911)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc224)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc912)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc226)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc913)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc228)
    cir.return loc(#loc221)
  } loc(#loc909)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc914)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc915)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc237)
  cir.func @main(%arg0: !s32i loc(fused[#loc240, #loc241]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc242, #loc243])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc917)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc918)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc239)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc244)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc245)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc246)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc246)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc247)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc234)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc234)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc248)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc919)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08_good() : () -> () loc(#loc249)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc235)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc235)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc251)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc236)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc236)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc252)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc920)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08_bad() : () -> () loc(#loc253)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc237)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc237)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc255)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc256)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc921)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc921)
    cir.return %17 : !s32i loc(#loc921)
  } loc(#loc916)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc260)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc923)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc923)
    cir.return %2 : !s32i loc(#loc923)
  } loc(#loc922)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc263)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc925)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc926)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc927)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc928)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc929)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc930)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc931)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc932)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc283)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc933)
    cir.br ^bb1 loc(#loc934)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc935)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc287)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc287)
    cir.brcond %12 ^bb2, ^bb46 loc(#loc936)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc937)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc271)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc271)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc927)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc273)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc928)
    cir.br ^bb4 loc(#loc938)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc938)
  ^bb5:  // pred: ^bb34
    %17 = cir.const #cir.int<0> : !s32i loc(#loc294)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc294)
    cir.brcond %18 ^bb6, ^bb35 loc(#loc294)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc295)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc297)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc298)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc939)
    cir.br ^bb7 loc(#loc940)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc304)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc304)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc941)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc942)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc306)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc302)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc943)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc309)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc944)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc945)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc314)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc314)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc946)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc316)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc316)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc947)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc318)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc318)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc319)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc948)
    cir.br ^bb11 loc(#loc949)
  ^bb11:  // pred: ^bb10
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc324)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc950)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc951)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc951)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc329)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc330)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc330)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc952)
    cir.brcond %48 ^bb12, ^bb13 loc(#loc953)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc332)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc323)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc954)
  ^bb15:  // pred: ^bb14
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc336)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc337)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc338)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc338)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc955)
    cir.brcond %54 ^bb16, ^bb17 loc(#loc956)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc340)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc334)
  ^bb18:  // pred: ^bb17
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc342)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc343)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc344)
    cir.store %58, %3 : !s32i, !cir.ptr<!s32i> loc(#loc957)
    cir.br ^bb19 loc(#loc958)
  ^bb19:  // pred: ^bb18
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc349)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc350)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc959)
    cir.brcond %62 ^bb20, ^bb21 loc(#loc960)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc352)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc348)
  ^bb22:  // pred: ^bb21
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    %64 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc354)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc354)
    %66 = cir.const #cir.int<3> : !s32i loc(#loc355)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc355)
    %68 = cir.const #cir.int<4> : !u64i loc(#loc355)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc355)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc355)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc355)
    %72 = cir.binop(add, %69, %71) : !u64i loc(#loc355)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc356)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc356)
    %75 = cir.binop(sub, %72, %74) : !u64i loc(#loc961)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc357)
    %77 = cir.call @recv(%63, %65, %75, %76) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc358)
    %78 = cir.cast(integral, %77 : !s64i), !s32i loc(#loc358)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc962)
    cir.br ^bb23 loc(#loc963)
  ^bb23:  // pred: ^bb22
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc364)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc364)
    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc964)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc365)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc365)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc365)
  ^bb25:  // pred: ^bb23
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc366)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc367)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc965)
    cir.brcond %86 ^bb26, ^bb27 loc(#loc365)
  ^bb26:  // pred: ^bb25
    %87 = cir.const #true loc(#loc365)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc365)
  ^bb27:  // pred: ^bb25
    %88 = cir.const #false loc(#loc365)
    cir.br ^bb28(%88 : !cir.bool) loc(#loc365)
  ^bb28(%89: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc365)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%89 : !cir.bool) loc(#loc365)
  ^bb30(%90: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc365)
  ^bb31:  // pred: ^bb30
    cir.brcond %90 ^bb32, ^bb33 loc(#loc966)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc369)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc362)
  ^bb34:  // pred: ^bb33
    %91 = cir.const #cir.int<0> : !s32i loc(#loc370)
    %92 = cir.cast(integral, %91 : !s32i), !s8i loc(#loc370)
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc371)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc372)
    %95 = cir.ptr_stride(%94 : !cir.ptr<!s8i>, %93 : !s32i), !cir.ptr<!s8i> loc(#loc372)
    cir.store %92, %95 : !s8i, !cir.ptr<!s8i> loc(#loc967)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc373)
    %97 = cir.call @atoi(%96) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc374)
    cir.store %97, %7 : !s32i, !cir.ptr<!s32i> loc(#loc968)
    cir.br ^bb5 loc(#loc293)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc293)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc969)
  ^bb37:  // pred: ^bb36
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc380)
    %100 = cir.unary(minus, %99) : !s32i, !s32i loc(#loc380)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc970)
    cir.brcond %101 ^bb38, ^bb39 loc(#loc971)
  ^bb38:  // pred: ^bb37
    %102 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc383)
    cir.br ^bb39 loc(#loc378)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc378)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc972)
  ^bb41:  // pred: ^bb40
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc387)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc387)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc973)
    cir.brcond %107 ^bb42, ^bb43 loc(#loc974)
  ^bb42:  // pred: ^bb41
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc390)
    cir.br ^bb43 loc(#loc385)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc385)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc291)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc286)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc286)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc975)
  ^bb48:  // pred: ^bb47
    %110 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc976)
    %111 = cir.call %110() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc393)
    %112 = cir.cast(int_to_bool, %111 : !s32i), !cir.bool loc(#loc393)
    cir.brcond %112 ^bb49, ^bb50 loc(#loc977)
  ^bb49:  // pred: ^bb48
    %113 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc262)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc398)
    cir.br ^bb86 loc(#loc396)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc978)
  ^bb51:  // pred: ^bb50
    %115 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc401)
    %116 = cir.const #cir.int<10> : !s32i loc(#loc402)
    %117 = cir.cast(integral, %116 : !s32i), !u64i loc(#loc402)
    %118 = cir.const #cir.int<4> : !u64i loc(#loc979)
    %119 = cir.binop(mul, %117, %118) : !u64i loc(#loc980)
    %120 = cir.call @malloc(%119) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc401)
    %121 = cir.cast(bitcast, %120 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc981)
    cir.store %121, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc931)
    cir.br ^bb52 loc(#loc982)
  ^bb52:  // pred: ^bb51
    %122 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc407)
    %123 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc408)
    %124 = cir.cast(bitcast, %123 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc408)
    %125 = cir.cmp(eq, %122, %124) : !cir.ptr<!s32i>, !cir.bool loc(#loc983)
    cir.brcond %125 ^bb53, ^bb54 loc(#loc984)
  ^bb53:  // pred: ^bb52
    %126 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc410)
    %127 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %128 = cir.unary(minus, %127) : !s32i, !s32i loc(#loc412)
    cir.call @exit(%128) : (!s32i) -> () extra(#fn_attr) loc(#loc410)
    cir.br ^bb54 loc(#loc406)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc406)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc985)
  ^bb56:  // pred: ^bb55
    %129 = cir.const #cir.int<0> : !s32i loc(#loc415)
    cir.store %129, %5 : !s32i, !cir.ptr<!s32i> loc(#loc986)
    cir.br ^bb57 loc(#loc985)
  ^bb57:  // 2 preds: ^bb56, ^bb61
    %130 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %131 = cir.const #cir.int<10> : !s32i loc(#loc418)
    %132 = cir.cmp(lt, %130, %131) : !s32i, !cir.bool loc(#loc987)
    cir.brcond %132 ^bb58, ^bb62 loc(#loc419)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc988)
  ^bb59:  // pred: ^bb58
    %133 = cir.const #cir.int<0> : !s32i loc(#loc421)
    %134 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc422)
    %135 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc423)
    %136 = cir.ptr_stride(%134 : !cir.ptr<!s32i>, %135 : !s32i), !cir.ptr<!s32i> loc(#loc424)
    cir.store %133, %136 : !s32i, !cir.ptr<!s32i> loc(#loc989)
    cir.br ^bb60 loc(#loc414)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc414)
  ^bb61:  // pred: ^bb60
    %137 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc425)
    %138 = cir.unary(inc, %137) : !s32i, !s32i loc(#loc426)
    cir.store %138, %5 : !s32i, !cir.ptr<!s32i> loc(#loc990)
    cir.br ^bb57 loc(#loc985)
  ^bb62:  // pred: ^bb57
    cir.br ^bb63 loc(#loc414)
  ^bb63:  // pred: ^bb62
    cir.br ^bb64 loc(#loc991)
  ^bb64:  // pred: ^bb63
    %139 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc429)
    %140 = cir.const #cir.int<0> : !s32i loc(#loc430)
    %141 = cir.cmp(ge, %139, %140) : !s32i, !cir.bool loc(#loc992)
    cir.brcond %141 ^bb65, ^bb70 loc(#loc431)
  ^bb65:  // pred: ^bb64
    %142 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    %143 = cir.const #cir.int<10> : !s32i loc(#loc433)
    %144 = cir.cmp(lt, %142, %143) : !s32i, !cir.bool loc(#loc993)
    cir.brcond %144 ^bb66, ^bb67 loc(#loc431)
  ^bb66:  // pred: ^bb65
    %145 = cir.const #true loc(#loc431)
    cir.br ^bb68(%145 : !cir.bool) loc(#loc431)
  ^bb67:  // pred: ^bb65
    %146 = cir.const #false loc(#loc431)
    cir.br ^bb68(%146 : !cir.bool) loc(#loc431)
  ^bb68(%147: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:27)):  // 2 preds: ^bb66, ^bb67
    cir.br ^bb69 loc(#loc431)
  ^bb69:  // pred: ^bb68
    cir.br ^bb71(%147 : !cir.bool) loc(#loc431)
  ^bb70:  // pred: ^bb64
    %148 = cir.const #false loc(#loc431)
    cir.br ^bb71(%148 : !cir.bool) loc(#loc431)
  ^bb71(%149: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:27)):  // 2 preds: ^bb69, ^bb70
    cir.br ^bb72 loc(#loc431)
  ^bb72:  // pred: ^bb71
    cir.brcond %149 ^bb73, ^bb82 loc(#loc994)
  ^bb73:  // pred: ^bb72
    %150 = cir.const #cir.int<1> : !s32i loc(#loc438)
    %151 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc439)
    %152 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc440)
    %153 = cir.ptr_stride(%151 : !cir.ptr<!s32i>, %152 : !s32i), !cir.ptr<!s32i> loc(#loc441)
    cir.store %150, %153 : !s32i, !cir.ptr<!s32i> loc(#loc995)
    cir.br ^bb74 loc(#loc996)
  ^bb74:  // pred: ^bb73
    %154 = cir.const #cir.int<0> : !s32i loc(#loc444)
    cir.store %154, %5 : !s32i, !cir.ptr<!s32i> loc(#loc997)
    cir.br ^bb75 loc(#loc996)
  ^bb75:  // 2 preds: ^bb74, ^bb79
    %155 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc446)
    %156 = cir.const #cir.int<10> : !s32i loc(#loc447)
    %157 = cir.cmp(lt, %155, %156) : !s32i, !cir.bool loc(#loc998)
    cir.brcond %157 ^bb76, ^bb80 loc(#loc448)
  ^bb76:  // pred: ^bb75
    cir.br ^bb77 loc(#loc999)
  ^bb77:  // pred: ^bb76
    %158 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc450)
    %159 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc451)
    %160 = cir.ptr_stride(%158 : !cir.ptr<!s32i>, %159 : !s32i), !cir.ptr<!s32i> loc(#loc452)
    %161 = cir.load %160 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    cir.call @printIntLine(%161) : (!s32i) -> () loc(#loc453)
    cir.br ^bb78 loc(#loc443)
  ^bb78:  // pred: ^bb77
    cir.br ^bb79 loc(#loc443)
  ^bb79:  // pred: ^bb78
    %162 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %163 = cir.unary(inc, %162) : !s32i, !s32i loc(#loc455)
    cir.store %163, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1000)
    cir.br ^bb75 loc(#loc996)
  ^bb80:  // pred: ^bb75
    cir.br ^bb81 loc(#loc443)
  ^bb81:  // pred: ^bb80
    cir.br ^bb83 loc(#loc436)
  ^bb82:  // pred: ^bb72
    %164 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc263)
    %165 = cir.cast(array_to_ptrdecay, %164 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%165) : (!cir.ptr<!s8i>) -> () loc(#loc456)
    cir.br ^bb83 loc(#loc428)
  ^bb83:  // 2 preds: ^bb81, ^bb82
    cir.br ^bb84 loc(#loc428)
  ^bb84:  // pred: ^bb83
    %166 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc457)
    %167 = cir.cast(bitcast, %166 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc457)
    cir.call @free(%167) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc458)
    cir.br ^bb85 loc(#loc400)
  ^bb85:  // pred: ^bb84
    cir.br ^bb86 loc(#loc392)
  ^bb86:  // 2 preds: ^bb49, ^bb85
    cir.br ^bb87 loc(#loc392)
  ^bb87:  // pred: ^bb86
    cir.return loc(#loc265)
  } loc(#loc924)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc460)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc461)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1002)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc1002)
    cir.return %2 : !s32i loc(#loc1002)
  } loc(#loc1001)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc1004)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc1005)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc1006)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc1007)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc1008)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1009)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc1010)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc1011)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc481)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc482)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1012)
    cir.br ^bb1 loc(#loc1013)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc1014)
    %11 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc486)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc486)
    cir.brcond %12 ^bb2, ^bb46 loc(#loc1015)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc1016)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc470)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc470)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc1006)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc472)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc472)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc1007)
    cir.br ^bb4 loc(#loc1017)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc1017)
  ^bb5:  // pred: ^bb34
    %17 = cir.const #cir.int<0> : !s32i loc(#loc493)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc493)
    cir.brcond %18 ^bb6, ^bb35 loc(#loc493)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %19 = cir.const #cir.int<2> : !s32i loc(#loc494)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc495)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc496)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc497)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc1018)
    cir.br ^bb7 loc(#loc1019)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc502)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc503)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc503)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc1020)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc1021)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc505)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc501)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc1022)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc508)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc1023)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc1024)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc513)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc513)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc1025)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc515)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc515)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc1026)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc517)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc517)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc518)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc1027)
    cir.br ^bb11 loc(#loc1028)
  ^bb11:  // pred: ^bb10
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc523)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc1029)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc1030)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc1030)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc528)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc529)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc529)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc1031)
    cir.brcond %48 ^bb12, ^bb13 loc(#loc1032)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc531)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc522)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc1033)
  ^bb15:  // pred: ^bb14
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc534)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc535)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc536)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc537)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc537)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc1034)
    cir.brcond %54 ^bb16, ^bb17 loc(#loc1035)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc539)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc533)
  ^bb18:  // pred: ^bb17
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc540)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc541)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc542)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc543)
    cir.store %58, %3 : !s32i, !cir.ptr<!s32i> loc(#loc1036)
    cir.br ^bb19 loc(#loc1037)
  ^bb19:  // pred: ^bb18
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc548)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc549)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc549)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc1038)
    cir.brcond %62 ^bb20, ^bb21 loc(#loc1039)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc551)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc547)
  ^bb22:  // pred: ^bb21
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc552)
    %64 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc553)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc553)
    %66 = cir.const #cir.int<3> : !s32i loc(#loc554)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc554)
    %68 = cir.const #cir.int<4> : !u64i loc(#loc554)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc554)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc554)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc554)
    %72 = cir.binop(add, %69, %71) : !u64i loc(#loc554)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc555)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc555)
    %75 = cir.binop(sub, %72, %74) : !u64i loc(#loc1040)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc556)
    %77 = cir.call @recv(%63, %65, %75, %76) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc557)
    %78 = cir.cast(integral, %77 : !s64i), !s32i loc(#loc557)
    cir.store %78, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1041)
    cir.br ^bb23 loc(#loc1042)
  ^bb23:  // pred: ^bb22
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc562)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc563)
    %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc563)
    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc1043)
    cir.brcond %82 ^bb24, ^bb25 loc(#loc564)
  ^bb24:  // pred: ^bb23
    %83 = cir.const #true loc(#loc564)
    cir.br ^bb30(%83 : !cir.bool) loc(#loc564)
  ^bb25:  // pred: ^bb23
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc565)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc566)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc1044)
    cir.brcond %86 ^bb26, ^bb27 loc(#loc564)
  ^bb26:  // pred: ^bb25
    %87 = cir.const #true loc(#loc564)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc564)
  ^bb27:  // pred: ^bb25
    %88 = cir.const #false loc(#loc564)
    cir.br ^bb28(%88 : !cir.bool) loc(#loc564)
  ^bb28(%89: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc564)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%89 : !cir.bool) loc(#loc564)
  ^bb30(%90: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc564)
  ^bb31:  // pred: ^bb30
    cir.brcond %90 ^bb32, ^bb33 loc(#loc1045)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc568)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc561)
  ^bb34:  // pred: ^bb33
    %91 = cir.const #cir.int<0> : !s32i loc(#loc569)
    %92 = cir.cast(integral, %91 : !s32i), !s8i loc(#loc569)
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc570)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc571)
    %95 = cir.ptr_stride(%94 : !cir.ptr<!s8i>, %93 : !s32i), !cir.ptr<!s8i> loc(#loc571)
    cir.store %92, %95 : !s8i, !cir.ptr<!s8i> loc(#loc1046)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc572)
    %97 = cir.call @atoi(%96) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc573)
    cir.store %97, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1047)
    cir.br ^bb5 loc(#loc492)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc492)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc1048)
  ^bb37:  // pred: ^bb36
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc578)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc579)
    %100 = cir.unary(minus, %99) : !s32i, !s32i loc(#loc579)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc1049)
    cir.brcond %101 ^bb38, ^bb39 loc(#loc1050)
  ^bb38:  // pred: ^bb37
    %102 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc581)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc582)
    cir.br ^bb39 loc(#loc577)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc577)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc1051)
  ^bb41:  // pred: ^bb40
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc585)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc586)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc586)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc1052)
    cir.brcond %107 ^bb42, ^bb43 loc(#loc1053)
  ^bb42:  // pred: ^bb41
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc588)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc589)
    cir.br ^bb43 loc(#loc584)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc584)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc490)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc485)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc485)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc1054)
  ^bb48:  // pred: ^bb47
    %110 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc1055)
    %111 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc592)
    %112 = cir.cast(int_to_bool, %111 : !s32i), !cir.bool loc(#loc592)
    cir.brcond %112 ^bb49, ^bb85 loc(#loc1056)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc1057)
  ^bb50:  // pred: ^bb49
    %113 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc597)
    %114 = cir.const #cir.int<10> : !s32i loc(#loc598)
    %115 = cir.cast(integral, %114 : !s32i), !u64i loc(#loc598)
    %116 = cir.const #cir.int<4> : !u64i loc(#loc1058)
    %117 = cir.binop(mul, %115, %116) : !u64i loc(#loc1059)
    %118 = cir.call @malloc(%117) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc597)
    %119 = cir.cast(bitcast, %118 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc1060)
    cir.store %119, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc1010)
    cir.br ^bb51 loc(#loc1061)
  ^bb51:  // pred: ^bb50
    %120 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc603)
    %121 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc604)
    %122 = cir.cast(bitcast, %121 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc604)
    %123 = cir.cmp(eq, %120, %122) : !cir.ptr<!s32i>, !cir.bool loc(#loc1062)
    cir.brcond %123 ^bb52, ^bb53 loc(#loc1063)
  ^bb52:  // pred: ^bb51
    %124 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc606)
    %125 = cir.const #cir.int<1> : !s32i loc(#loc607)
    %126 = cir.unary(minus, %125) : !s32i, !s32i loc(#loc608)
    cir.call @exit(%126) : (!s32i) -> () extra(#fn_attr) loc(#loc606)
    cir.br ^bb53 loc(#loc602)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc602)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc1064)
  ^bb55:  // pred: ^bb54
    %127 = cir.const #cir.int<0> : !s32i loc(#loc611)
    cir.store %127, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1065)
    cir.br ^bb56 loc(#loc1064)
  ^bb56:  // 2 preds: ^bb55, ^bb60
    %128 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc613)
    %129 = cir.const #cir.int<10> : !s32i loc(#loc614)
    %130 = cir.cmp(lt, %128, %129) : !s32i, !cir.bool loc(#loc1066)
    cir.brcond %130 ^bb57, ^bb61 loc(#loc615)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc1067)
  ^bb58:  // pred: ^bb57
    %131 = cir.const #cir.int<0> : !s32i loc(#loc617)
    %132 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc618)
    %133 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc619)
    %134 = cir.ptr_stride(%132 : !cir.ptr<!s32i>, %133 : !s32i), !cir.ptr<!s32i> loc(#loc620)
    cir.store %131, %134 : !s32i, !cir.ptr<!s32i> loc(#loc1068)
    cir.br ^bb59 loc(#loc610)
  ^bb59:  // pred: ^bb58
    cir.br ^bb60 loc(#loc610)
  ^bb60:  // pred: ^bb59
    %135 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc621)
    %136 = cir.unary(inc, %135) : !s32i, !s32i loc(#loc622)
    cir.store %136, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1069)
    cir.br ^bb56 loc(#loc1064)
  ^bb61:  // pred: ^bb56
    cir.br ^bb62 loc(#loc610)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc1070)
  ^bb63:  // pred: ^bb62
    %137 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc625)
    %138 = cir.const #cir.int<0> : !s32i loc(#loc626)
    %139 = cir.cmp(ge, %137, %138) : !s32i, !cir.bool loc(#loc1071)
    cir.brcond %139 ^bb64, ^bb69 loc(#loc627)
  ^bb64:  // pred: ^bb63
    %140 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc628)
    %141 = cir.const #cir.int<10> : !s32i loc(#loc629)
    %142 = cir.cmp(lt, %140, %141) : !s32i, !cir.bool loc(#loc1072)
    cir.brcond %142 ^bb65, ^bb66 loc(#loc627)
  ^bb65:  // pred: ^bb64
    %143 = cir.const #true loc(#loc627)
    cir.br ^bb67(%143 : !cir.bool) loc(#loc627)
  ^bb66:  // pred: ^bb64
    %144 = cir.const #false loc(#loc627)
    cir.br ^bb67(%144 : !cir.bool) loc(#loc627)
  ^bb67(%145: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:27)):  // 2 preds: ^bb65, ^bb66
    cir.br ^bb68 loc(#loc627)
  ^bb68:  // pred: ^bb67
    cir.br ^bb70(%145 : !cir.bool) loc(#loc627)
  ^bb69:  // pred: ^bb63
    %146 = cir.const #false loc(#loc627)
    cir.br ^bb70(%146 : !cir.bool) loc(#loc627)
  ^bb70(%147: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:27)):  // 2 preds: ^bb68, ^bb69
    cir.br ^bb71 loc(#loc627)
  ^bb71:  // pred: ^bb70
    cir.brcond %147 ^bb72, ^bb81 loc(#loc1073)
  ^bb72:  // pred: ^bb71
    %148 = cir.const #cir.int<1> : !s32i loc(#loc634)
    %149 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc635)
    %150 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc636)
    %151 = cir.ptr_stride(%149 : !cir.ptr<!s32i>, %150 : !s32i), !cir.ptr<!s32i> loc(#loc637)
    cir.store %148, %151 : !s32i, !cir.ptr<!s32i> loc(#loc1074)
    cir.br ^bb73 loc(#loc1075)
  ^bb73:  // pred: ^bb72
    %152 = cir.const #cir.int<0> : !s32i loc(#loc640)
    cir.store %152, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1076)
    cir.br ^bb74 loc(#loc1075)
  ^bb74:  // 2 preds: ^bb73, ^bb78
    %153 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc642)
    %154 = cir.const #cir.int<10> : !s32i loc(#loc643)
    %155 = cir.cmp(lt, %153, %154) : !s32i, !cir.bool loc(#loc1077)
    cir.brcond %155 ^bb75, ^bb79 loc(#loc644)
  ^bb75:  // pred: ^bb74
    cir.br ^bb76 loc(#loc1078)
  ^bb76:  // pred: ^bb75
    %156 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc646)
    %157 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc647)
    %158 = cir.ptr_stride(%156 : !cir.ptr<!s32i>, %157 : !s32i), !cir.ptr<!s32i> loc(#loc648)
    %159 = cir.load %158 : !cir.ptr<!s32i>, !s32i loc(#loc646)
    cir.call @printIntLine(%159) : (!s32i) -> () loc(#loc649)
    cir.br ^bb77 loc(#loc639)
  ^bb77:  // pred: ^bb76
    cir.br ^bb78 loc(#loc639)
  ^bb78:  // pred: ^bb77
    %160 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc650)
    %161 = cir.unary(inc, %160) : !s32i, !s32i loc(#loc651)
    cir.store %161, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1079)
    cir.br ^bb74 loc(#loc1075)
  ^bb79:  // pred: ^bb74
    cir.br ^bb80 loc(#loc639)
  ^bb80:  // pred: ^bb79
    cir.br ^bb82 loc(#loc632)
  ^bb81:  // pred: ^bb71
    %162 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc652)
    %163 = cir.cast(array_to_ptrdecay, %162 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc652)
    cir.call @printLine(%163) : (!cir.ptr<!s8i>) -> () loc(#loc653)
    cir.br ^bb82 loc(#loc624)
  ^bb82:  // 2 preds: ^bb80, ^bb81
    cir.br ^bb83 loc(#loc624)
  ^bb83:  // pred: ^bb82
    %164 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc654)
    %165 = cir.cast(bitcast, %164 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc654)
    cir.call @free(%165) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc655)
    cir.br ^bb84 loc(#loc596)
  ^bb84:  // pred: ^bb83
    cir.br ^bb85 loc(#loc591)
  ^bb85:  // 2 preds: ^bb48, ^bb84
    cir.br ^bb86 loc(#loc591)
  ^bb86:  // pred: ^bb85
    cir.return loc(#loc464)
  } loc(#loc1003)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1081)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc1082)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc1083)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc664)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc665)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc1084)
    cir.br ^bb1 loc(#loc1085)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc1086)
    %6 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc669)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc669)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc1087)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc674)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc674)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc675)
    cir.br ^bb4 loc(#loc672)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc676)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc1088)
    cir.br ^bb4 loc(#loc668)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc668)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc1089)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc1090)
    %12 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc680)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc680)
    cir.brcond %13 ^bb7, ^bb35 loc(#loc1091)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc1092)
  ^bb8:  // pred: ^bb7
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc685)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc686)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc686)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc1093)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc1094)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc685)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc1095)
    cir.store %20, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc1082)
    cir.br ^bb9 loc(#loc1096)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc691)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc692)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc692)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc1097)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc1098)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc694)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc695)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc696)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc694)
    cir.br ^bb11 loc(#loc690)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc690)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc1099)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc699)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1100)
    cir.br ^bb14 loc(#loc1099)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc701)
    %30 = cir.const #cir.int<10> : !s32i loc(#loc702)
    %31 = cir.cmp(lt, %29, %30) : !s32i, !cir.bool loc(#loc1101)
    cir.brcond %31 ^bb15, ^bb19 loc(#loc703)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc1102)
  ^bb16:  // pred: ^bb15
    %32 = cir.const #cir.int<0> : !s32i loc(#loc705)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc706)
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc707)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc708)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc1103)
    cir.br ^bb17 loc(#loc698)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc698)
  ^bb18:  // pred: ^bb17
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc709)
    %37 = cir.unary(inc, %36) : !s32i, !s32i loc(#loc710)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1104)
    cir.br ^bb14 loc(#loc1099)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc698)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc1105)
  ^bb21:  // pred: ^bb20
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc713)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc714)
    %40 = cir.cmp(ge, %38, %39) : !s32i, !cir.bool loc(#loc1106)
    cir.brcond %40 ^bb22, ^bb31 loc(#loc1107)
  ^bb22:  // pred: ^bb21
    %41 = cir.const #cir.int<1> : !s32i loc(#loc718)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc719)
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc720)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc721)
    cir.store %41, %44 : !s32i, !cir.ptr<!s32i> loc(#loc1108)
    cir.br ^bb23 loc(#loc1109)
  ^bb23:  // pred: ^bb22
    %45 = cir.const #cir.int<0> : !s32i loc(#loc724)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1110)
    cir.br ^bb24 loc(#loc1109)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc726)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc727)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc1111)
    cir.brcond %48 ^bb25, ^bb29 loc(#loc728)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc1112)
  ^bb26:  // pred: ^bb25
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc730)
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc731)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc732)
    %52 = cir.load %51 : !cir.ptr<!s32i>, !s32i loc(#loc730)
    cir.call @printIntLine(%52) : (!s32i) -> () loc(#loc733)
    cir.br ^bb27 loc(#loc723)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc723)
  ^bb28:  // pred: ^bb27
    %53 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc734)
    %54 = cir.unary(inc, %53) : !s32i, !s32i loc(#loc735)
    cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1113)
    cir.br ^bb24 loc(#loc1109)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc723)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc716)
  ^bb31:  // pred: ^bb21
    %55 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc736)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc736)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc737)
    cir.br ^bb32 loc(#loc712)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc712)
  ^bb33:  // pred: ^bb32
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc738)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc738)
    cir.call @free(%58) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc739)
    cir.br ^bb34 loc(#loc684)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc679)
  ^bb35:  // 2 preds: ^bb6, ^bb34
    cir.br ^bb36 loc(#loc679)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc657)
  } loc(#loc1080)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1115)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc1116)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc1117)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc748)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc749)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc1118)
    cir.br ^bb1 loc(#loc1119)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc1120)
    %6 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc753)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc753)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc1121)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc756)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc1122)
    cir.br ^bb3 loc(#loc752)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc752)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc1123)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc1124)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc760)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc760)
    cir.brcond %11 ^bb6, ^bb34 loc(#loc1125)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc1126)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc765)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc766)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc766)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc1127)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc1128)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc765)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc1129)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc1116)
    cir.br ^bb8 loc(#loc1130)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc771)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc772)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc772)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc1131)
    cir.brcond %22 ^bb9, ^bb10 loc(#loc1132)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc774)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc775)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc776)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc774)
    cir.br ^bb10 loc(#loc770)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc770)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc1133)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<0> : !s32i loc(#loc779)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1134)
    cir.br ^bb13 loc(#loc1133)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc781)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc782)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc1135)
    cir.brcond %29 ^bb14, ^bb18 loc(#loc783)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc1136)
  ^bb15:  // pred: ^bb14
    %30 = cir.const #cir.int<0> : !s32i loc(#loc785)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc786)
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc787)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc788)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc1137)
    cir.br ^bb16 loc(#loc778)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc778)
  ^bb17:  // pred: ^bb16
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc789)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc790)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1138)
    cir.br ^bb13 loc(#loc1133)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc778)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc1139)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc793)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc794)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc1140)
    cir.brcond %38 ^bb21, ^bb30 loc(#loc1141)
  ^bb21:  // pred: ^bb20
    %39 = cir.const #cir.int<1> : !s32i loc(#loc798)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc799)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc800)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc801)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc1142)
    cir.br ^bb22 loc(#loc1143)
  ^bb22:  // pred: ^bb21
    %43 = cir.const #cir.int<0> : !s32i loc(#loc804)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1144)
    cir.br ^bb23 loc(#loc1143)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc806)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc807)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc1145)
    cir.brcond %46 ^bb24, ^bb28 loc(#loc808)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc1146)
  ^bb25:  // pred: ^bb24
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc810)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc811)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc812)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc810)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc813)
    cir.br ^bb26 loc(#loc803)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc803)
  ^bb27:  // pred: ^bb26
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc814)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc815)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc1147)
    cir.br ^bb23 loc(#loc1143)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc803)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc796)
  ^bb30:  // pred: ^bb20
    %53 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc816)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc816)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc817)
    cir.br ^bb31 loc(#loc792)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc792)
  ^bb32:  // pred: ^bb31
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc818)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc818)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc819)
    cir.br ^bb33 loc(#loc764)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc759)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc759)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc741)
  } loc(#loc1114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":158:27)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":57:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":163:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":69:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":69:17)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":70:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":70:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":71:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":71:35)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":72:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":72:35)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":73:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":73:45)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":137:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":137:17)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":138:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":138:58)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":59:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":59:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":61:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":61:12)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":61:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":62:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":133:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":62:8)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":62:26)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":63:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":64:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":132:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":74:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":117:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":117:20)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":84:39)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":84:48)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":84:61)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":84:32)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":84:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":84:72)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":85:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":88:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":85:21)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":85:37)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":86:17)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":87:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:25)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:34)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:37)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:51)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":89:52)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":90:38)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":90:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":91:43)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":91:17)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":92:42)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":92:36)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":92:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":92:50)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":96:17)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:26)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:58)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:59)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:68)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:82)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:21)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":93:88)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":94:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":95:21)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":97:17)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":100:17)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":97:28)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":97:42)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":97:21)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":97:61)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":98:17)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":99:21)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":101:39)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":101:53)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":101:59)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":101:32)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":101:17)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":101:63)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":102:17)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":105:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":102:21)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":102:37)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":103:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":104:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:35)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:49)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:62)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:80)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:83)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:30)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:17)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":107:84)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:17)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":111:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:21)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:35)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:51)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":108:65)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":109:17)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":110:21)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":113:43)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":113:29)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":113:17)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":115:29)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":115:24)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":115:17)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":115:40)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":118:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":121:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":118:17)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":118:33)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":119:13)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":120:30)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":120:17)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":122:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":125:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":122:17)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":122:33)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":123:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":124:30)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":124:17)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":134:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":162:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":134:8)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":134:26)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":135:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":136:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":161:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":138:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":138:42)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":138:47)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":138:57)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:43)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:17)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:27)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:33)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:34)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:40)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":139:39)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":144:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:22)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:18)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:25)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:29)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:27)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":142:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":143:29)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":143:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":143:24)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":143:25)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:34)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":141:33)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":147:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":159:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":147:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":147:25)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":148:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":155:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":157:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":149:32)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":149:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":149:24)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":149:28)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:17)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":154:17)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:25)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:21)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:28)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:32)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:30)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":152:17)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":153:34)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":153:41)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":153:42)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":153:21)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:37)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":151:36)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":158:17)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":160:18)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":160:13)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":481:1)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":487:1)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":483:5)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":483:14)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":484:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":484:14)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":485:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":485:14)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":486:5)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":486:14)
#loc230 = loc("/usr/include/stdlib.h":575:1)
#loc231 = loc("/usr/include/stdlib.h":575:41)
#loc232 = loc("/usr/include/time.h":76:1)
#loc233 = loc("/usr/include/time.h":76:38)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":503:15)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":505:15)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":508:15)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":510:15)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":498:1)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":513:1)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":499:1)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":501:27)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":501:22)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":501:5)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":503:5)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":504:5)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":504:71)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":505:5)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":508:5)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":509:5)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":509:70)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":510:5)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":512:12)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":512:5)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":45:1)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":48:1)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":47:12)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":47:5)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":250:19)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":275:27)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":170:1)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":280:1)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":182:13)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":182:17)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":183:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":183:32)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":184:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":184:35)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":185:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":185:35)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":186:13)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":186:45)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":255:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":255:17)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":256:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":256:58)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":172:5)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":172:9)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":174:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":174:12)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":174:5)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":175:5)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":246:5)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":175:8)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":175:26)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":176:5)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":177:9)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":245:9)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":187:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":230:21)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":230:20)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":197:39)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":197:48)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":197:61)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":197:32)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":197:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":197:72)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":198:17)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":201:17)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":198:21)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":198:37)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":199:17)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":200:21)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:24)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:25)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:34)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:37)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:51)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:17)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":202:52)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":203:38)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":203:17)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":204:43)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":204:17)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":205:42)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":205:36)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":205:17)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":205:50)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:17)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":209:17)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:26)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:58)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:59)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:68)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:82)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:21)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":206:88)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":207:17)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":208:21)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":210:17)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":213:17)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":210:28)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":210:42)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":210:21)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":210:61)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":211:17)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":212:21)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":214:39)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":214:53)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":214:59)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":214:32)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":214:17)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":214:63)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":215:17)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":218:17)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":215:21)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":215:37)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":216:17)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":217:21)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:35)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:49)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:62)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:80)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:83)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:30)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:17)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":220:84)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:17)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":224:17)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:21)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:35)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:51)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":221:65)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":222:17)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":223:21)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":226:43)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":226:29)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":226:17)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":228:29)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":228:24)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":228:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":228:40)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":231:13)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":234:13)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":231:17)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":231:33)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":232:13)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":233:30)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":233:17)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":235:13)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":238:13)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":235:17)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":235:33)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":236:13)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":237:30)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":237:17)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":247:5)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":279:5)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":247:8)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":247:27)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":248:5)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":251:5)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":253:5)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":250:9)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":254:9)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":278:9)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":256:35)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":256:42)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":256:47)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":256:57)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:43)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:17)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:27)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:33)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:34)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:40)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":257:39)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:13)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":262:13)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:22)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:18)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:25)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:29)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:27)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":260:13)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":261:29)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":261:17)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":261:24)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":261:25)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:34)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":259:33)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:13)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":276:13)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:17)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:25)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:30)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:38)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":264:40)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":265:13)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":272:13)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":274:13)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":266:32)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":266:17)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":266:24)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":266:28)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:17)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":271:17)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:25)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:21)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:28)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:32)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:30)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":269:17)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":270:34)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":270:41)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":270:42)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":270:21)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:37)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":268:36)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":275:17)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":277:18)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":277:13)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":50:1)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":53:1)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":52:12)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":52:5)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":283:1)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":388:1)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":295:13)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":295:17)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":296:13)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":296:32)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":297:13)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":297:35)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":298:13)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":298:35)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":299:13)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":299:45)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":363:13)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":363:17)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":364:13)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":364:58)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":285:5)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":285:9)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":287:13)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":287:12)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":287:5)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":288:5)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":359:5)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":288:8)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":288:26)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":289:5)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":290:9)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":358:9)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":300:13)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":343:21)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":343:20)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":310:39)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":310:48)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":310:61)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":310:32)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":310:17)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":310:72)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":311:17)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":314:17)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":311:21)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":311:37)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":312:17)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":313:21)
#loc506 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:24)
#loc507 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:25)
#loc508 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:34)
#loc509 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:37)
#loc510 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:51)
#loc511 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:17)
#loc512 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":315:52)
#loc513 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":316:38)
#loc514 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":316:17)
#loc515 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":317:43)
#loc516 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":317:17)
#loc517 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":318:42)
#loc518 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":318:36)
#loc519 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":318:17)
#loc520 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":318:50)
#loc521 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:17)
#loc522 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":322:17)
#loc523 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:26)
#loc524 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:58)
#loc525 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:59)
#loc526 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:68)
#loc527 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:82)
#loc528 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:21)
#loc529 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":319:88)
#loc530 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":320:17)
#loc531 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":321:21)
#loc532 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":323:17)
#loc533 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":326:17)
#loc534 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":323:28)
#loc535 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":323:42)
#loc536 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":323:21)
#loc537 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":323:61)
#loc538 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":324:17)
#loc539 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":325:21)
#loc540 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":327:39)
#loc541 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":327:53)
#loc542 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":327:59)
#loc543 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":327:32)
#loc544 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":327:17)
#loc545 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":327:63)
#loc546 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":328:17)
#loc547 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":331:17)
#loc548 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":328:21)
#loc549 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":328:37)
#loc550 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":329:17)
#loc551 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":330:21)
#loc552 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:35)
#loc553 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:49)
#loc554 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:62)
#loc555 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:80)
#loc556 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:83)
#loc557 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:30)
#loc558 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:17)
#loc559 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":333:84)
#loc560 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:17)
#loc561 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":337:17)
#loc562 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:21)
#loc563 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:35)
#loc565 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:51)
#loc566 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":334:65)
#loc567 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":335:17)
#loc568 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":336:21)
#loc569 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":339:43)
#loc570 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":339:29)
#loc571 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":339:17)
#loc572 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":341:29)
#loc573 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":341:24)
#loc574 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":341:17)
#loc575 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":341:40)
#loc576 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":344:13)
#loc577 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":347:13)
#loc578 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":344:17)
#loc579 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":344:33)
#loc580 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":345:13)
#loc581 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":346:30)
#loc582 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":346:17)
#loc583 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":348:13)
#loc584 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":351:13)
#loc585 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":348:17)
#loc586 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":348:33)
#loc587 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":349:13)
#loc588 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":350:30)
#loc589 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":350:17)
#loc590 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":360:5)
#loc591 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":387:5)
#loc592 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":360:8)
#loc593 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":360:26)
#loc594 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":361:5)
#loc595 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":362:9)
#loc596 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":386:9)
#loc597 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":364:35)
#loc598 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":364:42)
#loc599 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":364:47)
#loc600 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":364:57)
#loc601 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:13)
#loc602 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:43)
#loc603 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:17)
#loc604 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:27)
#loc605 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:33)
#loc606 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:34)
#loc607 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:40)
#loc608 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":365:39)
#loc609 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:13)
#loc610 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":370:13)
#loc611 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:22)
#loc612 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:18)
#loc613 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:25)
#loc614 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:29)
#loc615 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:27)
#loc616 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":368:13)
#loc617 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":369:29)
#loc618 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":369:17)
#loc619 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":369:24)
#loc620 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":369:25)
#loc621 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:34)
#loc622 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":367:33)
#loc623 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:13)
#loc624 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":384:13)
#loc625 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:17)
#loc626 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:25)
#loc628 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:30)
#loc629 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:38)
#loc630 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":372:40)
#loc631 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":373:13)
#loc632 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":380:13)
#loc633 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":382:13)
#loc634 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":374:32)
#loc635 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":374:17)
#loc636 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":374:24)
#loc637 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":374:28)
#loc638 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:17)
#loc639 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":379:17)
#loc640 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:25)
#loc641 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:21)
#loc642 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:28)
#loc643 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:32)
#loc644 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:30)
#loc645 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":377:17)
#loc646 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":378:34)
#loc647 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":378:41)
#loc648 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":378:42)
#loc649 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":378:21)
#loc650 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:37)
#loc651 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":376:36)
#loc652 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":383:27)
#loc653 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":383:17)
#loc654 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":385:18)
#loc655 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":385:13)
#loc656 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":391:1)
#loc657 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":436:1)
#loc658 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":410:13)
#loc659 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":410:17)
#loc660 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":411:13)
#loc661 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":411:58)
#loc662 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":393:5)
#loc663 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":393:9)
#loc664 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":395:13)
#loc665 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":395:12)
#loc666 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":395:5)
#loc667 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":396:5)
#loc668 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":406:5)
#loc669 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":396:8)
#loc670 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":396:27)
#loc671 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":397:5)
#loc672 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":400:5)
#loc673 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":402:5)
#loc674 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":399:19)
#loc675 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":399:9)
#loc676 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":405:16)
#loc677 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":405:9)
#loc678 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":407:5)
#loc679 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":435:5)
#loc680 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":407:8)
#loc681 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":407:26)
#loc682 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":408:5)
#loc683 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":409:9)
#loc684 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":434:9)
#loc685 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":411:35)
#loc686 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":411:42)
#loc687 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":411:47)
#loc688 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":411:57)
#loc689 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:13)
#loc690 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:43)
#loc691 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:17)
#loc692 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:27)
#loc693 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:33)
#loc694 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:34)
#loc695 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:40)
#loc696 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":412:39)
#loc697 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:13)
#loc698 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":417:13)
#loc699 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:22)
#loc700 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:18)
#loc701 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:25)
#loc702 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:29)
#loc703 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:27)
#loc704 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":415:13)
#loc705 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":416:29)
#loc706 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":416:17)
#loc707 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":416:24)
#loc708 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":416:25)
#loc709 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:34)
#loc710 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":414:33)
#loc711 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":420:13)
#loc712 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":432:13)
#loc713 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":420:17)
#loc714 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":420:25)
#loc715 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":421:13)
#loc716 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":428:13)
#loc717 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":430:13)
#loc718 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":422:32)
#loc719 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":422:17)
#loc720 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":422:24)
#loc721 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":422:28)
#loc722 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:17)
#loc723 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":427:17)
#loc724 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:25)
#loc725 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:21)
#loc726 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:28)
#loc727 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:32)
#loc728 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:30)
#loc729 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":425:17)
#loc730 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":426:34)
#loc731 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":426:41)
#loc732 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":426:42)
#loc733 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":426:21)
#loc734 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:37)
#loc735 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":424:36)
#loc736 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":431:27)
#loc737 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":431:17)
#loc738 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":433:18)
#loc739 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":433:13)
#loc740 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":439:1)
#loc741 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":479:1)
#loc742 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":453:13)
#loc743 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":453:17)
#loc744 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":454:13)
#loc745 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":454:58)
#loc746 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":441:5)
#loc747 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":441:9)
#loc748 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":443:13)
#loc749 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":443:12)
#loc750 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":443:5)
#loc751 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":444:5)
#loc752 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":449:5)
#loc753 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":444:8)
#loc754 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":444:26)
#loc755 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":445:5)
#loc756 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":448:16)
#loc757 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":448:9)
#loc758 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":450:5)
#loc759 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":478:5)
#loc760 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":450:8)
#loc761 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":450:26)
#loc762 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":451:5)
#loc763 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":452:9)
#loc764 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":477:9)
#loc765 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":454:35)
#loc766 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":454:42)
#loc767 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":454:47)
#loc768 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":454:57)
#loc769 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:13)
#loc770 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:43)
#loc771 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:17)
#loc772 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:27)
#loc773 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:33)
#loc774 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:34)
#loc775 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:40)
#loc776 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":455:39)
#loc777 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:13)
#loc778 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":460:13)
#loc779 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:22)
#loc780 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:18)
#loc781 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:25)
#loc782 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:29)
#loc783 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:27)
#loc784 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":458:13)
#loc785 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":459:29)
#loc786 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":459:17)
#loc787 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":459:24)
#loc788 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":459:25)
#loc789 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:34)
#loc790 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":457:33)
#loc791 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":463:13)
#loc792 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":475:13)
#loc793 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":463:17)
#loc794 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":463:25)
#loc795 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":464:13)
#loc796 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":471:13)
#loc797 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":473:13)
#loc798 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":465:32)
#loc799 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":465:17)
#loc800 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":465:24)
#loc801 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":465:28)
#loc802 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:17)
#loc803 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":470:17)
#loc804 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:25)
#loc805 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:21)
#loc806 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:28)
#loc807 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:32)
#loc808 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:30)
#loc809 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":468:17)
#loc810 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":469:34)
#loc811 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":469:41)
#loc812 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":469:42)
#loc813 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":469:21)
#loc814 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:37)
#loc815 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":467:36)
#loc816 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":474:27)
#loc817 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":474:17)
#loc818 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":476:18)
#loc819 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_08.c":476:13)
#loc820 = loc(fused[#loc1, #loc2])
#loc821 = loc(fused[#loc3, #loc4])
#loc822 = loc(fused[#loc5, #loc6])
#loc823 = loc(fused[#loc7, #loc8])
#loc824 = loc(fused[#loc9, #loc10])
#loc825 = loc(fused[#loc11, #loc12])
#loc826 = loc(fused[#loc13, #loc14])
#loc827 = loc(fused[#loc15, #loc16])
#loc828 = loc(fused[#loc17, #loc18])
#loc829 = loc(fused[#loc19, #loc20])
#loc830 = loc(fused[#loc21, #loc22])
#loc831 = loc(fused[#loc23, #loc24])
#loc832 = loc(fused[#loc26, #loc27])
#loc833 = loc(fused[#loc28, #loc29])
#loc834 = loc(fused[#loc30, #loc31])
#loc835 = loc(fused[#loc32, #loc33])
#loc836 = loc(fused[#loc34, #loc35])
#loc837 = loc(fused[#loc36, #loc37])
#loc838 = loc(fused[#loc38, #loc39])
#loc839 = loc(fused[#loc40, #loc41])
#loc840 = loc(fused[#loc42, #loc43])
#loc841 = loc(fused[#loc44, #loc45])
#loc842 = loc(fused[#loc48, #loc46])
#loc843 = loc(fused[#loc49, #loc50])
#loc844 = loc(fused[#loc51, #loc52])
#loc845 = loc(fused[#loc53, #loc50])
#loc846 = loc(fused[#loc54, #loc55])
#loc847 = loc(fused[#loc56, #loc57])
#loc848 = loc(fused[#loc63, #loc64])
#loc849 = loc(fused[#loc65, #loc66])
#loc850 = loc(fused[#loc67, #loc68])
#loc851 = loc(fused[#loc69, #loc66])
#loc852 = loc(fused[#loc71, #loc72])
#loc853 = loc(fused[#loc74, #loc75])
#loc854 = loc(fused[#loc76, #loc77])
#loc855 = loc(fused[#loc80, #loc78])
#loc856 = loc(fused[#loc84, #loc81])
#loc857 = loc(fused[#loc88, #loc89])
#loc858 = loc(fused[#loc90, #loc91])
#loc859 = loc(fused[#loc93, #loc94])
#loc860 = loc(fused[#loc95, #loc96])
#loc861 = loc(fused[#loc97, #loc98])
#loc862 = loc(fused[#loc99, #loc91])
#loc863 = loc(fused[#loc101, #loc102])
#loc864 = loc(fused[#loc105, #loc106])
#loc865 = loc(fused[#loc107, #loc102])
#loc866 = loc(fused[#loc113, #loc114])
#loc867 = loc(fused[#loc115, #loc116])
#loc868 = loc(fused[#loc117, #loc118])
#loc869 = loc(fused[#loc119, #loc116])
#loc870 = loc(fused[#loc123, #loc124])
#loc871 = loc(fused[#loc127, #loc128])
#loc872 = loc(fused[#loc129, #loc130])
#loc873 = loc(fused[#loc131, #loc132])
#loc874 = loc(fused[#loc134, #loc135])
#loc875 = loc(fused[#loc136, #loc130])
#loc876 = loc(fused[#loc140, #loc138])
#loc877 = loc(fused[#loc143, #loc144])
#loc878 = loc(fused[#loc145, #loc146])
#loc879 = loc(fused[#loc147, #loc148])
#loc880 = loc(fused[#loc149, #loc146])
#loc881 = loc(fused[#loc152, #loc153])
#loc882 = loc(fused[#loc154, #loc155])
#loc883 = loc(fused[#loc156, #loc153])
#loc884 = loc(fused[#loc159, #loc160])
#loc885 = loc(fused[#loc161, #loc162])
#loc886 = loc(fused[#loc163, #loc160])
#loc887 = loc(fused[#loc164, #loc165])
#loc888 = loc(fused[#loc168, #loc169])
#loc889 = loc(fused[#loc167, #loc169])
#loc890 = loc(fused[#loc166, #loc43])
#loc891 = loc(fused[#loc170, #loc171])
#loc892 = loc(fused[#loc172, #loc173])
#loc893 = loc(fused[#loc174, #loc171])
#loc894 = loc(fused[#loc178, #loc179])
#loc895 = loc(fused[#loc181, #loc180])
#loc896 = loc(fused[#loc182, #loc183])
#loc897 = loc(fused[#loc185, #loc179])
#loc898 = loc(fused[#loc187, #loc186])
#loc899 = loc(fused[#loc191, #loc190])
#loc900 = loc(fused[#loc192, #loc193])
#loc901 = loc(fused[#loc194, #loc195])
#loc902 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc903 = loc(fused[#loc200, #loc199])
#loc904 = loc(fused[#loc203, #loc204])
#loc905 = loc(fused[#loc206, #loc205])
#loc906 = loc(fused[#loc207, #loc208])
#loc907 = loc(fused[#loc210, #loc204])
#loc908 = loc(fused[#loc216, #loc215])
#loc909 = loc(fused[#loc220, #loc221])
#loc910 = loc(fused[#loc222, #loc223])
#loc911 = loc(fused[#loc224, #loc225])
#loc912 = loc(fused[#loc226, #loc227])
#loc913 = loc(fused[#loc228, #loc229])
#loc914 = loc(fused[#loc230, #loc231])
#loc915 = loc(fused[#loc232, #loc233])
#loc916 = loc(fused[#loc238, #loc239])
#loc919 = loc(fused[#loc249, #loc250])
#loc920 = loc(fused[#loc253, #loc254])
#loc921 = loc(fused[#loc257, #loc256])
#loc922 = loc(fused[#loc258, #loc259])
#loc923 = loc(fused[#loc261, #loc260])
#loc924 = loc(fused[#loc264, #loc265])
#loc925 = loc(fused[#loc266, #loc267])
#loc926 = loc(fused[#loc268, #loc269])
#loc927 = loc(fused[#loc270, #loc271])
#loc928 = loc(fused[#loc272, #loc273])
#loc929 = loc(fused[#loc274, #loc275])
#loc930 = loc(fused[#loc276, #loc277])
#loc931 = loc(fused[#loc278, #loc279])
#loc932 = loc(fused[#loc280, #loc281])
#loc933 = loc(fused[#loc284, #loc282])
#loc934 = loc(fused[#loc285, #loc286])
#loc935 = loc(fused[#loc287, #loc288])
#loc936 = loc(fused[#loc289, #loc286])
#loc937 = loc(fused[#loc290, #loc291])
#loc938 = loc(fused[#loc292, #loc293])
#loc939 = loc(fused[#loc299, #loc300])
#loc940 = loc(fused[#loc301, #loc302])
#loc941 = loc(fused[#loc303, #loc304])
#loc942 = loc(fused[#loc305, #loc302])
#loc943 = loc(fused[#loc307, #loc308])
#loc944 = loc(fused[#loc310, #loc311])
#loc945 = loc(fused[#loc312, #loc313])
#loc946 = loc(fused[#loc315, #loc314])
#loc947 = loc(fused[#loc317, #loc316])
#loc948 = loc(fused[#loc320, #loc321])
#loc949 = loc(fused[#loc322, #loc323])
#loc950 = loc(fused[#loc325, #loc326])
#loc951 = loc(fused[#loc327, #loc328])
#loc952 = loc(fused[#loc329, #loc330])
#loc953 = loc(fused[#loc331, #loc323])
#loc954 = loc(fused[#loc333, #loc334])
#loc955 = loc(fused[#loc337, #loc338])
#loc956 = loc(fused[#loc339, #loc334])
#loc957 = loc(fused[#loc345, #loc346])
#loc958 = loc(fused[#loc347, #loc348])
#loc959 = loc(fused[#loc349, #loc350])
#loc960 = loc(fused[#loc351, #loc348])
#loc961 = loc(fused[#loc355, #loc356])
#loc962 = loc(fused[#loc359, #loc360])
#loc963 = loc(fused[#loc361, #loc362])
#loc964 = loc(fused[#loc363, #loc364])
#loc965 = loc(fused[#loc366, #loc367])
#loc966 = loc(fused[#loc368, #loc362])
#loc967 = loc(fused[#loc372, #loc370])
#loc968 = loc(fused[#loc375, #loc376])
#loc969 = loc(fused[#loc377, #loc378])
#loc970 = loc(fused[#loc379, #loc380])
#loc971 = loc(fused[#loc381, #loc378])
#loc972 = loc(fused[#loc384, #loc385])
#loc973 = loc(fused[#loc386, #loc387])
#loc974 = loc(fused[#loc388, #loc385])
#loc975 = loc(fused[#loc391, #loc392])
#loc976 = loc(fused[#loc393, #loc394])
#loc977 = loc(fused[#loc395, #loc396, #loc397, #loc392])
#loc978 = loc(fused[#loc399, #loc400])
#loc979 = loc(fused[#loc403, #loc404])
#loc980 = loc(fused[#loc402, #loc404])
#loc981 = loc(fused[#loc401, #loc279])
#loc982 = loc(fused[#loc405, #loc406])
#loc983 = loc(fused[#loc407, #loc408])
#loc984 = loc(fused[#loc409, #loc406])
#loc985 = loc(fused[#loc413, #loc414])
#loc986 = loc(fused[#loc416, #loc415])
#loc987 = loc(fused[#loc417, #loc418])
#loc988 = loc(fused[#loc420, #loc414])
#loc989 = loc(fused[#loc422, #loc421])
#loc990 = loc(fused[#loc426, #loc425])
#loc991 = loc(fused[#loc427, #loc428])
#loc992 = loc(fused[#loc429, #loc430])
#loc993 = loc(fused[#loc432, #loc434])
#loc994 = loc(fused[#loc435, #loc436, #loc437, #loc428])
#loc995 = loc(fused[#loc439, #loc438])
#loc996 = loc(fused[#loc442, #loc443])
#loc997 = loc(fused[#loc445, #loc444])
#loc998 = loc(fused[#loc446, #loc447])
#loc999 = loc(fused[#loc449, #loc443])
#loc1000 = loc(fused[#loc455, #loc454])
#loc1001 = loc(fused[#loc459, #loc460])
#loc1002 = loc(fused[#loc462, #loc461])
#loc1003 = loc(fused[#loc463, #loc464])
#loc1004 = loc(fused[#loc465, #loc466])
#loc1005 = loc(fused[#loc467, #loc468])
#loc1006 = loc(fused[#loc469, #loc470])
#loc1007 = loc(fused[#loc471, #loc472])
#loc1008 = loc(fused[#loc473, #loc474])
#loc1009 = loc(fused[#loc475, #loc476])
#loc1010 = loc(fused[#loc477, #loc478])
#loc1011 = loc(fused[#loc479, #loc480])
#loc1012 = loc(fused[#loc483, #loc481])
#loc1013 = loc(fused[#loc484, #loc485])
#loc1014 = loc(fused[#loc486, #loc487])
#loc1015 = loc(fused[#loc488, #loc485])
#loc1016 = loc(fused[#loc489, #loc490])
#loc1017 = loc(fused[#loc491, #loc492])
#loc1018 = loc(fused[#loc498, #loc499])
#loc1019 = loc(fused[#loc500, #loc501])
#loc1020 = loc(fused[#loc502, #loc503])
#loc1021 = loc(fused[#loc504, #loc501])
#loc1022 = loc(fused[#loc506, #loc507])
#loc1023 = loc(fused[#loc509, #loc510])
#loc1024 = loc(fused[#loc511, #loc512])
#loc1025 = loc(fused[#loc514, #loc513])
#loc1026 = loc(fused[#loc516, #loc515])
#loc1027 = loc(fused[#loc519, #loc520])
#loc1028 = loc(fused[#loc521, #loc522])
#loc1029 = loc(fused[#loc524, #loc525])
#loc1030 = loc(fused[#loc526, #loc527])
#loc1031 = loc(fused[#loc528, #loc529])
#loc1032 = loc(fused[#loc530, #loc522])
#loc1033 = loc(fused[#loc532, #loc533])
#loc1034 = loc(fused[#loc536, #loc537])
#loc1035 = loc(fused[#loc538, #loc533])
#loc1036 = loc(fused[#loc544, #loc545])
#loc1037 = loc(fused[#loc546, #loc547])
#loc1038 = loc(fused[#loc548, #loc549])
#loc1039 = loc(fused[#loc550, #loc547])
#loc1040 = loc(fused[#loc554, #loc555])
#loc1041 = loc(fused[#loc558, #loc559])
#loc1042 = loc(fused[#loc560, #loc561])
#loc1043 = loc(fused[#loc562, #loc563])
#loc1044 = loc(fused[#loc565, #loc566])
#loc1045 = loc(fused[#loc567, #loc561])
#loc1046 = loc(fused[#loc571, #loc569])
#loc1047 = loc(fused[#loc574, #loc575])
#loc1048 = loc(fused[#loc576, #loc577])
#loc1049 = loc(fused[#loc578, #loc579])
#loc1050 = loc(fused[#loc580, #loc577])
#loc1051 = loc(fused[#loc583, #loc584])
#loc1052 = loc(fused[#loc585, #loc586])
#loc1053 = loc(fused[#loc587, #loc584])
#loc1054 = loc(fused[#loc590, #loc591])
#loc1055 = loc(fused[#loc592, #loc593])
#loc1056 = loc(fused[#loc594, #loc591])
#loc1057 = loc(fused[#loc595, #loc596])
#loc1058 = loc(fused[#loc599, #loc600])
#loc1059 = loc(fused[#loc598, #loc600])
#loc1060 = loc(fused[#loc597, #loc478])
#loc1061 = loc(fused[#loc601, #loc602])
#loc1062 = loc(fused[#loc603, #loc604])
#loc1063 = loc(fused[#loc605, #loc602])
#loc1064 = loc(fused[#loc609, #loc610])
#loc1065 = loc(fused[#loc612, #loc611])
#loc1066 = loc(fused[#loc613, #loc614])
#loc1067 = loc(fused[#loc616, #loc610])
#loc1068 = loc(fused[#loc618, #loc617])
#loc1069 = loc(fused[#loc622, #loc621])
#loc1070 = loc(fused[#loc623, #loc624])
#loc1071 = loc(fused[#loc625, #loc626])
#loc1072 = loc(fused[#loc628, #loc630])
#loc1073 = loc(fused[#loc631, #loc632, #loc633, #loc624])
#loc1074 = loc(fused[#loc635, #loc634])
#loc1075 = loc(fused[#loc638, #loc639])
#loc1076 = loc(fused[#loc641, #loc640])
#loc1077 = loc(fused[#loc642, #loc643])
#loc1078 = loc(fused[#loc645, #loc639])
#loc1079 = loc(fused[#loc651, #loc650])
#loc1080 = loc(fused[#loc656, #loc657])
#loc1081 = loc(fused[#loc658, #loc659])
#loc1082 = loc(fused[#loc660, #loc661])
#loc1083 = loc(fused[#loc662, #loc663])
#loc1084 = loc(fused[#loc666, #loc664])
#loc1085 = loc(fused[#loc667, #loc668])
#loc1086 = loc(fused[#loc669, #loc670])
#loc1087 = loc(fused[#loc671, #loc672, #loc673, #loc668])
#loc1088 = loc(fused[#loc677, #loc676])
#loc1089 = loc(fused[#loc678, #loc679])
#loc1090 = loc(fused[#loc680, #loc681])
#loc1091 = loc(fused[#loc682, #loc679])
#loc1092 = loc(fused[#loc683, #loc684])
#loc1093 = loc(fused[#loc687, #loc688])
#loc1094 = loc(fused[#loc686, #loc688])
#loc1095 = loc(fused[#loc685, #loc661])
#loc1096 = loc(fused[#loc689, #loc690])
#loc1097 = loc(fused[#loc691, #loc692])
#loc1098 = loc(fused[#loc693, #loc690])
#loc1099 = loc(fused[#loc697, #loc698])
#loc1100 = loc(fused[#loc700, #loc699])
#loc1101 = loc(fused[#loc701, #loc702])
#loc1102 = loc(fused[#loc704, #loc698])
#loc1103 = loc(fused[#loc706, #loc705])
#loc1104 = loc(fused[#loc710, #loc709])
#loc1105 = loc(fused[#loc711, #loc712])
#loc1106 = loc(fused[#loc713, #loc714])
#loc1107 = loc(fused[#loc715, #loc716, #loc717, #loc712])
#loc1108 = loc(fused[#loc719, #loc718])
#loc1109 = loc(fused[#loc722, #loc723])
#loc1110 = loc(fused[#loc725, #loc724])
#loc1111 = loc(fused[#loc726, #loc727])
#loc1112 = loc(fused[#loc729, #loc723])
#loc1113 = loc(fused[#loc735, #loc734])
#loc1114 = loc(fused[#loc740, #loc741])
#loc1115 = loc(fused[#loc742, #loc743])
#loc1116 = loc(fused[#loc744, #loc745])
#loc1117 = loc(fused[#loc746, #loc747])
#loc1118 = loc(fused[#loc750, #loc748])
#loc1119 = loc(fused[#loc751, #loc752])
#loc1120 = loc(fused[#loc753, #loc754])
#loc1121 = loc(fused[#loc755, #loc752])
#loc1122 = loc(fused[#loc757, #loc756])
#loc1123 = loc(fused[#loc758, #loc759])
#loc1124 = loc(fused[#loc760, #loc761])
#loc1125 = loc(fused[#loc762, #loc759])
#loc1126 = loc(fused[#loc763, #loc764])
#loc1127 = loc(fused[#loc767, #loc768])
#loc1128 = loc(fused[#loc766, #loc768])
#loc1129 = loc(fused[#loc765, #loc745])
#loc1130 = loc(fused[#loc769, #loc770])
#loc1131 = loc(fused[#loc771, #loc772])
#loc1132 = loc(fused[#loc773, #loc770])
#loc1133 = loc(fused[#loc777, #loc778])
#loc1134 = loc(fused[#loc780, #loc779])
#loc1135 = loc(fused[#loc781, #loc782])
#loc1136 = loc(fused[#loc784, #loc778])
#loc1137 = loc(fused[#loc786, #loc785])
#loc1138 = loc(fused[#loc790, #loc789])
#loc1139 = loc(fused[#loc791, #loc792])
#loc1140 = loc(fused[#loc793, #loc794])
#loc1141 = loc(fused[#loc795, #loc796, #loc797, #loc792])
#loc1142 = loc(fused[#loc799, #loc798])
#loc1143 = loc(fused[#loc802, #loc803])
#loc1144 = loc(fused[#loc805, #loc804])
#loc1145 = loc(fused[#loc806, #loc807])
#loc1146 = loc(fused[#loc809, #loc803])
#loc1147 = loc(fused[#loc815, #loc814])
