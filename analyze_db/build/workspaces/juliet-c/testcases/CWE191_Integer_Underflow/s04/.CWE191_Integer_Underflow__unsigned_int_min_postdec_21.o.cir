!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":25:21)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":25:34)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":58:26)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":58:39)
#loc90 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":92:26)
#loc91 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":92:39)
#loc128 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":121:25)
#loc129 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":121:38)
#loc159 = loc(fused[#loc7, #loc8])
#loc177 = loc(fused[#loc50, #loc51])
#loc192 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc128, #loc129])
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc156)
  cir.func private @printUnsignedLine(!u32i) loc(#loc157)
  cir.func internal private @badSink(%arg0: !u32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc159)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc9)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc156)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc163)
          %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc18)
          %6 = cir.unary(dec, %5) : !u32i, !u32i loc(#loc19)
          cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc164)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc17)
          cir.store %7, %4 : !u32i, !cir.ptr<!u32i> loc(#loc163)
          %8 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc20)
          cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc21)
        } loc(#loc162)
      } loc(#loc161)
    } loc(#loc160)
    cir.return loc(#loc6)
  } loc(#loc158)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_postdec_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc26)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc167)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc28)
    cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc168)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc156)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc32)
    cir.call @badSink(%7) : (!u32i) -> () loc(#loc33)
    cir.return loc(#loc23)
  } loc(#loc165)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_postdec_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc173)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc35)
  } loc(#loc170)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc47)
  cir.func internal private @goodB2G1Sink(%arg0: !u32i loc(fused[#loc50, #loc51])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc177)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc52)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc62)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc63)
          %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc181)
          cir.if %7 {
            %8 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc183)
            %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc69)
            %10 = cir.unary(dec, %9) : !u32i, !u32i loc(#loc70)
            cir.store %10, %0 : !u32i, !cir.ptr<!u32i> loc(#loc184)
            %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc68)
            cir.store %11, %8 : !u32i, !cir.ptr<!u32i> loc(#loc183)
            %12 = cir.load %8 : !cir.ptr<!u32i>, !u32i loc(#loc71)
            cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc72)
          } else {
            %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc47)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc47)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc73)
          } loc(#loc182)
        } loc(#loc180)
      } loc(#loc179)
    } loc(#loc178)
    cir.return loc(#loc49)
  } loc(#loc176)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc78)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc187)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc80)
    cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc188)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %6 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc174)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc84)
    cir.call @goodB2G1Sink(%7) : (!u32i) -> () loc(#loc85)
    cir.return loc(#loc75)
  } loc(#loc185)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc190)
  cir.func internal private @goodB2G2Sink(%arg0: !u32i loc(fused[#loc90, #loc91])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc192)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc92)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc190)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc95)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc99)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc100)
          %7 = cir.cmp(gt, %4, %6) : !u32i, !cir.bool loc(#loc196)
          cir.if %7 {
            %8 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc198)
            %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc106)
            %10 = cir.unary(dec, %9) : !u32i, !u32i loc(#loc107)
            cir.store %10, %0 : !u32i, !cir.ptr<!u32i> loc(#loc199)
            %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc105)
            cir.store %11, %8 : !u32i, !cir.ptr<!u32i> loc(#loc198)
            %12 = cir.load %8 : !cir.ptr<!u32i>, !u32i loc(#loc108)
            cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc109)
          } else {
            %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc110)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc110)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          } loc(#loc197)
        } loc(#loc195)
      } loc(#loc194)
    } loc(#loc193)
    cir.return loc(#loc89)
  } loc(#loc191)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc116)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc202)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc118)
    cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc203)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %6 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc190)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc122)
    cir.call @goodB2G2Sink(%7) : (!u32i) -> () loc(#loc123)
    cir.return loc(#loc113)
  } loc(#loc200)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc205)
  cir.func internal private @goodG2BSink(%arg0: !u32i loc(fused[#loc128, #loc129])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc207)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc130)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc205)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc133)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc211)
          %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc139)
          %6 = cir.unary(dec, %5) : !u32i, !u32i loc(#loc140)
          cir.store %6, %0 : !u32i, !cir.ptr<!u32i> loc(#loc212)
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc138)
          cir.store %7, %4 : !u32i, !cir.ptr<!u32i> loc(#loc211)
          %8 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc141)
          cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc142)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc208)
    cir.return loc(#loc127)
  } loc(#loc206)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc147)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc215)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc150)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc150)
    cir.store %5, %0 : !u32i, !cir.ptr<!u32i> loc(#loc216)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %7 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc205)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc154)
    cir.call @goodG2BSink(%8) : (!u32i) -> () loc(#loc155)
    cir.return loc(#loc144)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":23:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":25:1)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":36:1)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":26:1)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":27:5)
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":35:5)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":27:8)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":28:5)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":29:9)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":34:9)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":32:13)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":32:35)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":31:17)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":31:13)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":33:31)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":33:13)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":38:1)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":46:1)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":40:5)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":40:18)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":41:12)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":41:5)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":43:12)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":43:5)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":44:17)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":44:5)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":45:13)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":45:5)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":144:1)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":149:1)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":146:5)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":146:14)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":147:5)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":147:14)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":148:5)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":148:13)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":53:1)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":53:29)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":63:19)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":76:23)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":58:1)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":79:1)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":59:1)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":60:5)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":78:5)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":60:8)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":61:5)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":64:5)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":66:5)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":63:9)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":68:9)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":77:9)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":68:13)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":68:20)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":69:9)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":73:9)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":75:9)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":71:13)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":71:35)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":70:17)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":70:13)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":72:31)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":72:13)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":76:13)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":81:1)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":89:1)
#loc76 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":83:5)
#loc77 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":83:18)
#loc78 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":84:12)
#loc79 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":84:5)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":86:12)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":86:5)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":87:22)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":87:5)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":88:18)
#loc85 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":88:5)
#loc86 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":54:1)
#loc87 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":54:29)
#loc88 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":92:1)
#loc89 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":108:1)
#loc92 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":93:1)
#loc93 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":94:5)
#loc94 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":107:5)
#loc95 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":94:8)
#loc96 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":95:5)
#loc97 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":97:9)
#loc98 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":106:9)
#loc99 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":97:13)
#loc100 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":97:20)
#loc101 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":98:9)
#loc102 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":102:9)
#loc103 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":104:9)
#loc104 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":100:13)
#loc105 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":100:35)
#loc106 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":99:17)
#loc107 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":99:13)
#loc108 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":101:31)
#loc109 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":101:13)
#loc110 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":105:23)
#loc111 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":105:13)
#loc112 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":110:1)
#loc113 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":118:1)
#loc114 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":112:5)
#loc115 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":112:18)
#loc116 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":113:12)
#loc117 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":113:5)
#loc118 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":115:12)
#loc119 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":115:5)
#loc120 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":116:22)
#loc121 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":116:5)
#loc122 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":117:18)
#loc123 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":117:5)
#loc124 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":55:1)
#loc125 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":55:28)
#loc126 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":121:1)
#loc127 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":132:1)
#loc130 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":122:1)
#loc131 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":123:5)
#loc132 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":131:5)
#loc133 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":123:8)
#loc134 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":124:5)
#loc135 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":125:9)
#loc136 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":130:9)
#loc137 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":128:13)
#loc138 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":128:35)
#loc139 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":127:17)
#loc140 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":127:13)
#loc141 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":129:31)
#loc142 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":129:13)
#loc143 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":134:1)
#loc144 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":142:1)
#loc145 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":136:5)
#loc146 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":136:18)
#loc147 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":137:12)
#loc148 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":137:5)
#loc149 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":139:13)
#loc150 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":139:12)
#loc151 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":139:5)
#loc152 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":140:21)
#loc153 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":140:5)
#loc154 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":141:17)
#loc155 = loc("CWE191_Integer_Underflow__unsigned_int_min_postdec_21.c":141:5)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc10, #loc11])
#loc161 = loc(fused[#loc13, #loc11])
#loc162 = loc(fused[#loc14, #loc15])
#loc163 = loc(fused[#loc16, #loc17])
#loc164 = loc(fused[#loc19, #loc18])
#loc165 = loc(fused[#loc22, #loc23])
#loc166 = loc(fused[#loc24, #loc25])
#loc167 = loc(fused[#loc27, #loc26])
#loc168 = loc(fused[#loc29, #loc28])
#loc169 = loc(fused[#loc31, #loc30])
#loc170 = loc(fused[#loc34, #loc35])
#loc171 = loc(fused[#loc36, #loc37])
#loc172 = loc(fused[#loc38, #loc39])
#loc173 = loc(fused[#loc40, #loc41])
#loc174 = loc(fused[#loc42, #loc43])
#loc175 = loc(fused[#loc44, #loc45])
#loc176 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc53, #loc54])
#loc179 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc180 = loc(fused[#loc60, #loc61])
#loc181 = loc(fused[#loc62, #loc63])
#loc182 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc183 = loc(fused[#loc67, #loc68])
#loc184 = loc(fused[#loc70, #loc69])
#loc185 = loc(fused[#loc74, #loc75])
#loc186 = loc(fused[#loc76, #loc77])
#loc187 = loc(fused[#loc79, #loc78])
#loc188 = loc(fused[#loc81, #loc80])
#loc189 = loc(fused[#loc83, #loc82])
#loc190 = loc(fused[#loc86, #loc87])
#loc191 = loc(fused[#loc88, #loc89])
#loc193 = loc(fused[#loc93, #loc94])
#loc194 = loc(fused[#loc96, #loc94])
#loc195 = loc(fused[#loc97, #loc98])
#loc196 = loc(fused[#loc99, #loc100])
#loc197 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc198 = loc(fused[#loc104, #loc105])
#loc199 = loc(fused[#loc107, #loc106])
#loc200 = loc(fused[#loc112, #loc113])
#loc201 = loc(fused[#loc114, #loc115])
#loc202 = loc(fused[#loc117, #loc116])
#loc203 = loc(fused[#loc119, #loc118])
#loc204 = loc(fused[#loc121, #loc120])
#loc205 = loc(fused[#loc124, #loc125])
#loc206 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc131, #loc132])
#loc209 = loc(fused[#loc134, #loc132])
#loc210 = loc(fused[#loc135, #loc136])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc140, #loc139])
#loc213 = loc(fused[#loc143, #loc144])
#loc214 = loc(fused[#loc145, #loc146])
#loc215 = loc(fused[#loc148, #loc147])
#loc216 = loc(fused[#loc151, #loc149])
#loc217 = loc(fused[#loc153, #loc152])
