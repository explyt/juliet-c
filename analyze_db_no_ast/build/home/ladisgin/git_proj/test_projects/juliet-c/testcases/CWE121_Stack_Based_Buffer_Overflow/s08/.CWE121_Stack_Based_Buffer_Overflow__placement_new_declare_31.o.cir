!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc64 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc97)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_313badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc100)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc101)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc104)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc107)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc108)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc108)
        cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc23)
        cir.store %12, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc107)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc26)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc109)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc29)
        %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc110)
        %19 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
        %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc34)
      } loc(#loc106)
    } loc(#loc103)
    cir.return loc(#loc5)
  } loc(#loc98)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc113)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc114)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc43)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc117)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc120)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc121)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
        cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc54)
        cir.store %12, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc120)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc57)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc122)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc59)
        %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc123)
        %19 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
        %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc28)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc62)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc63)
      } loc(#loc119)
    } loc(#loc116)
    cir.return loc(#loc36)
  } loc(#loc111)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc64)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc64)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc64)
    cir.return loc(#loc64)
  } loc(#loc64)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc126)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc127)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc130)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc133)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc134)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc134)
        cir.call @_ZN11OneIntClassC2Ev(%12) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc84)
        cir.store %12, %8 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc133)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc87)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc88)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc89)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc135)
        %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc90)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc89)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc92)
      } loc(#loc132)
    } loc(#loc129)
    cir.return loc(#loc66)
  } loc(#loc124)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_314goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31L7goodG2BEv() : () -> () loc(#loc95)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31L7goodB2GEv() : () -> () loc(#loc96)
    cir.return loc(#loc94)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":49:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":27:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":27:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":28:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":28:43)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":29:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":29:45)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":48:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":33:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":33:27)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":34:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":34:23)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":35:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":47:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":41:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":41:49)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":41:39)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":41:43)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":43:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":43:13)
#loc28 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":44:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":44:13)
#loc31 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":45:26)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":45:36)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":45:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":56:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":80:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":58:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":58:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":59:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":59:43)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":60:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":60:45)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":62:12)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":62:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":63:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":79:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":64:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":64:27)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":65:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":65:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":66:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":78:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":72:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":72:49)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":72:39)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":72:43)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":74:32)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":74:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":75:32)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":75:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":76:26)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":76:36)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":76:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":83:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":105:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":85:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":85:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":86:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":86:43)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":87:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":87:45)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":89:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":89:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":90:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":104:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":91:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":91:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":92:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":92:23)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":93:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":103:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":99:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":99:48)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":99:38)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":99:42)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":101:32)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":101:13)
#loc89 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":102:26)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":102:36)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":102:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":107:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":111:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":109:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_31.cpp":110:5)
#loc97 = loc(fused[#loc2, #loc3])
#loc98 = loc(fused[#loc4, #loc5])
#loc99 = loc(fused[#loc6, #loc7])
#loc100 = loc(fused[#loc8, #loc9])
#loc101 = loc(fused[#loc10, #loc11])
#loc102 = loc(fused[#loc13, #loc12])
#loc103 = loc(fused[#loc14, #loc15])
#loc104 = loc(fused[#loc16, #loc17])
#loc105 = loc(fused[#loc18, #loc19])
#loc106 = loc(fused[#loc20, #loc21])
#loc107 = loc(fused[#loc22, #loc23])
#loc108 = loc(fused[#loc24, #loc23])
#loc109 = loc(fused[#loc27, #loc26])
#loc110 = loc(fused[#loc30, #loc29])
#loc111 = loc(fused[#loc35, #loc36])
#loc112 = loc(fused[#loc37, #loc38])
#loc113 = loc(fused[#loc39, #loc40])
#loc114 = loc(fused[#loc41, #loc42])
#loc115 = loc(fused[#loc44, #loc43])
#loc116 = loc(fused[#loc45, #loc46])
#loc117 = loc(fused[#loc47, #loc48])
#loc118 = loc(fused[#loc49, #loc50])
#loc119 = loc(fused[#loc51, #loc52])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc55, #loc54])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc60, #loc59])
#loc124 = loc(fused[#loc65, #loc66])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc69, #loc70])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc74, #loc73])
#loc129 = loc(fused[#loc75, #loc76])
#loc130 = loc(fused[#loc77, #loc78])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc83, #loc84])
#loc134 = loc(fused[#loc85, #loc84])
#loc135 = loc(fused[#loc88, #loc87])
#loc136 = loc(fused[#loc93, #loc94])
