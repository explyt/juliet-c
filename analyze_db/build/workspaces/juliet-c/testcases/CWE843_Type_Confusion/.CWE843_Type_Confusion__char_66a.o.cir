!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE843_Type_Confusion__char_66b_badSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc49)
  cir.func no_proto @CWE843_Type_Confusion__char_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.alloca !cir.array<!cir.ptr<!void> x 5>, !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc52)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc53)
    cir.scope {
      %8 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc55)
      %9 = cir.const #cir.int<97> : !s32i loc(#loc14)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc14)
      cir.store %10, %8 : !s8i, !cir.ptr<!s8i> loc(#loc55)
      %11 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      cir.store %11, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc57)
    } loc(#loc54)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc18)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc20)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!void>>, %4 : !s32i), !cir.ptr<!cir.ptr<!void>> loc(#loc20)
    cir.store %3, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    cir.call @CWE843_Type_Confusion__char_66b_badSink(%7) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc22)
    cir.return loc(#loc4)
  } loc(#loc50)
  cir.func no_proto @CWE843_Type_Confusion__char_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc60)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc59)
  cir.func private @CWE843_Type_Confusion__char_66b_goodG2BSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc61)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc63)
    %1 = cir.alloca !cir.array<!cir.ptr<!void> x 5>, !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc64)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc65)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc67)
      %9 = cir.const #cir.int<8> : !s32i loc(#loc40)
      cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc67)
      %10 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc68)
      cir.store %10, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc69)
    } loc(#loc66)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc44)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!void>>, %4 : !s32i), !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    cir.store %3, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!void> x 5>>), !cir.ptr<!cir.ptr<!void>> loc(#loc47)
    cir.call @CWE843_Type_Confusion__char_66b_goodG2BSink(%7) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc48)
    cir.return loc(#loc30)
  } loc(#loc62)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_66a.c":0:0)
#loc1 = loc("CWE843_Type_Confusion__char_66a.c":22:1)
#loc2 = loc("CWE843_Type_Confusion__char_66a.c":22:64)
#loc3 = loc("CWE843_Type_Confusion__char_66a.c":24:1)
#loc4 = loc("CWE843_Type_Confusion__char_66a.c":38:1)
#loc5 = loc("CWE843_Type_Confusion__char_66a.c":26:5)
#loc6 = loc("CWE843_Type_Confusion__char_66a.c":26:12)
#loc7 = loc("CWE843_Type_Confusion__char_66a.c":27:5)
#loc8 = loc("CWE843_Type_Confusion__char_66a.c":27:23)
#loc9 = loc("CWE843_Type_Confusion__char_66a.c":29:12)
#loc10 = loc("CWE843_Type_Confusion__char_66a.c":29:5)
#loc11 = loc("CWE843_Type_Confusion__char_66a.c":30:5)
#loc12 = loc("CWE843_Type_Confusion__char_66a.c":34:5)
#loc13 = loc("CWE843_Type_Confusion__char_66a.c":32:9)
#loc14 = loc("CWE843_Type_Confusion__char_66a.c":32:27)
#loc15 = loc("CWE843_Type_Confusion__char_66a.c":33:16)
#loc16 = loc("CWE843_Type_Confusion__char_66a.c":33:17)
#loc17 = loc("CWE843_Type_Confusion__char_66a.c":33:9)
#loc18 = loc("CWE843_Type_Confusion__char_66a.c":36:20)
#loc19 = loc("CWE843_Type_Confusion__char_66a.c":36:15)
#loc20 = loc("CWE843_Type_Confusion__char_66a.c":36:5)
#loc21 = loc("CWE843_Type_Confusion__char_66a.c":37:45)
#loc22 = loc("CWE843_Type_Confusion__char_66a.c":37:5)
#loc23 = loc("CWE843_Type_Confusion__char_66a.c":62:1)
#loc24 = loc("CWE843_Type_Confusion__char_66a.c":65:1)
#loc25 = loc("CWE843_Type_Confusion__char_66a.c":64:5)
#loc26 = loc("CWE843_Type_Confusion__char_66a.c":64:13)
#loc27 = loc("CWE843_Type_Confusion__char_66a.c":45:1)
#loc28 = loc("CWE843_Type_Confusion__char_66a.c":45:68)
#loc29 = loc("CWE843_Type_Confusion__char_66a.c":47:1)
#loc30 = loc("CWE843_Type_Confusion__char_66a.c":60:1)
#loc31 = loc("CWE843_Type_Confusion__char_66a.c":49:5)
#loc32 = loc("CWE843_Type_Confusion__char_66a.c":49:12)
#loc33 = loc("CWE843_Type_Confusion__char_66a.c":50:5)
#loc34 = loc("CWE843_Type_Confusion__char_66a.c":50:23)
#loc35 = loc("CWE843_Type_Confusion__char_66a.c":52:12)
#loc36 = loc("CWE843_Type_Confusion__char_66a.c":52:5)
#loc37 = loc("CWE843_Type_Confusion__char_66a.c":53:5)
#loc38 = loc("CWE843_Type_Confusion__char_66a.c":57:5)
#loc39 = loc("CWE843_Type_Confusion__char_66a.c":55:9)
#loc40 = loc("CWE843_Type_Confusion__char_66a.c":55:25)
#loc41 = loc("CWE843_Type_Confusion__char_66a.c":56:16)
#loc42 = loc("CWE843_Type_Confusion__char_66a.c":56:17)
#loc43 = loc("CWE843_Type_Confusion__char_66a.c":56:9)
#loc44 = loc("CWE843_Type_Confusion__char_66a.c":58:20)
#loc45 = loc("CWE843_Type_Confusion__char_66a.c":58:15)
#loc46 = loc("CWE843_Type_Confusion__char_66a.c":58:5)
#loc47 = loc("CWE843_Type_Confusion__char_66a.c":59:49)
#loc48 = loc("CWE843_Type_Confusion__char_66a.c":59:5)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc10, #loc9])
#loc54 = loc(fused[#loc11, #loc12])
#loc55 = loc(fused[#loc13, #loc14])
#loc56 = loc(fused[#loc15, #loc16])
#loc57 = loc(fused[#loc17, #loc16])
#loc58 = loc(fused[#loc20, #loc18])
#loc59 = loc(fused[#loc23, #loc24])
#loc60 = loc(fused[#loc25, #loc26])
#loc61 = loc(fused[#loc27, #loc28])
#loc62 = loc(fused[#loc29, #loc30])
#loc63 = loc(fused[#loc31, #loc32])
#loc64 = loc(fused[#loc33, #loc34])
#loc65 = loc(fused[#loc36, #loc35])
#loc66 = loc(fused[#loc37, #loc38])
#loc67 = loc(fused[#loc39, #loc40])
#loc68 = loc(fused[#loc41, #loc42])
#loc69 = loc(fused[#loc43, #loc42])
#loc70 = loc(fused[#loc46, #loc44])
