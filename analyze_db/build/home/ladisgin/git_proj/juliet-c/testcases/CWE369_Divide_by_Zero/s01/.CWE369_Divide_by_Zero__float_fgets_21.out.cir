!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":29:21)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":29:27)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":197:10)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":197:14)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":197:20)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":197:32)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":73:26)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":73:32)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":118:26)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":118:32)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":158:25)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":158:31)
#loc252 = loc(fused[#loc16, #loc17])
#loc275 = loc(fused[#loc78, #loc79])
#loc276 = loc(fused[#loc80, #loc81])
#loc282 = loc(fused[#loc102, #loc103])
#loc302 = loc(fused[#loc161, #loc162])
#loc322 = loc(fused[#loc218, #loc219])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc245)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc246)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc247)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc249)
  cir.func private @printIntLine(!s32i) loc(#loc250)
  cir.func internal private @badSink(%arg0: !cir.float loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc252)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc20)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc249)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc255)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc256)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc27)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc28)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc28)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc257)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc257)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc30)
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc22)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc15)
  } loc(#loc251)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc259)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc260)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc37)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc261)
    cir.br ^bb1 loc(#loc262)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc263)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc43)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc44)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
    %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc265)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc51)
    %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc52)
    %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc52)
    cir.store %13, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc266)
    cir.br ^bb5 loc(#loc49)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb5 loc(#loc42)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %17 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc249)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    %18 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc58)
    cir.call @badSink(%18) : (!cir.float) -> () loc(#loc59)
    cir.return loc(#loc32)
  } loc(#loc258)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc271)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc61)
  } loc(#loc268)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc272)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc75)
  cir.func @main(%arg0: !s32i loc(fused[#loc78, #loc79]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc276)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc84)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc84)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc85)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc72)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call @CWE369_Divide_by_Zero__float_fgets_21_good() : () -> () loc(#loc87)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc73)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fgets_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call @CWE369_Divide_by_Zero__float_fgets_21_bad() : () -> () loc(#loc91)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    cir.return %17 : !s32i loc(#loc279)
  } loc(#loc274)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc99)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.float loc(fused[#loc102, #loc103])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc283)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc282)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc106)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc280)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc285)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb9 loc(#loc111)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc286)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc116)
    %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc116)
    %9 = cir.fabs %8 : !cir.double loc(#loc116)
    %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc117)
    %11 = cir.cmp(gt, %9, %10) : !cir.double, !cir.bool loc(#loc287)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc288)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc122)
    %13 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc123)
    %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc123)
    %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc289)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc289)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc125)
    cir.br ^bb7 loc(#loc120)
  ^bb6:  // pred: ^bb4
    %18 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc99)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb7 loc(#loc115)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc115)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc108)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc101)
  } loc(#loc281)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc291)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc292)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc133)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc293)
    cir.br ^bb1 loc(#loc294)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc295)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc139)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc140)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
    %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc296)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc297)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc147)
    %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc148)
    %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc148)
    cir.store %13, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc298)
    cir.br ^bb5 loc(#loc145)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc138)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc136)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %17 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc280)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    %18 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc155)
    cir.call @goodB2G1Sink(%18) : (!cir.float) -> () loc(#loc156)
    cir.return loc(#loc128)
  } loc(#loc290)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc300)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.float loc(fused[#loc161, #loc162])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc303)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc302)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc165)
    cir.br ^bb1 loc(#loc304)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc300)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc305)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc306)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc172)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc172)
    %7 = cir.fabs %6 : !cir.double loc(#loc172)
    %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc173)
    %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc307)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc308)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc178)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc179)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc179)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc309)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc309)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc181)
    cir.br ^bb6 loc(#loc176)
  ^bb5:  // pred: ^bb3
    %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc182)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.br ^bb6 loc(#loc171)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc171)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc167)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc167)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc160)
  } loc(#loc301)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc311)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc312)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc190)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc313)
    cir.br ^bb1 loc(#loc314)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc315)
  ^bb2:  // pred: ^bb1
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc196)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc197)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc246)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc198)
    %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc199)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc316)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc317)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc204)
    %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc205)
    %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc205)
    cir.store %13, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc318)
    cir.br ^bb5 loc(#loc202)
  ^bb4:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    cir.br ^bb5 loc(#loc195)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc195)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc193)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %17 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc300)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %18 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc212)
    cir.call @goodB2G2Sink(%18) : (!cir.float) -> () loc(#loc213)
    cir.return loc(#loc185)
  } loc(#loc310)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc320)
  cir.func internal private @goodG2BSink(%arg0: !cir.float loc(fused[#loc218, #loc219])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc322)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc222)
    cir.br ^bb1 loc(#loc324)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc320)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc225)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc325)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc326)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc229)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc230)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc230)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc327)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc327)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc232)
    cir.br ^bb4 loc(#loc228)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc224)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc217)
  } loc(#loc321)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc329)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc237)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc330)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc239)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc331)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc320)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc243)
    cir.call @goodG2BSink(%5) : (!cir.float) -> () loc(#loc244)
    cir.return loc(#loc234)
  } loc(#loc328)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":56:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":27:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":27:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":29:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":39:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:13)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:44)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":30:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":31:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":38:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":31:8)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":32:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":33:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":37:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:40)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":36:26)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":36:13)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":41:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":61:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":47:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":47:41)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":43:5)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":43:11)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":45:12)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":45:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":46:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":58:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":57:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:19)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:32)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:49)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:59)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":50:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":53:9)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":55:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:32)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:27)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:13)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:43)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":56:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":59:17)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":59:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":60:13)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":60:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":181:1)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":186:1)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":183:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":183:14)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":184:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":184:14)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":185:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":185:13)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":202:15)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":204:15)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":207:15)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":209:15)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":197:1)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":212:1)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":198:1)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":200:27)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":200:22)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":200:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":202:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":203:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":203:48)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":204:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":207:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":208:5)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":208:47)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":209:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":211:12)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":211:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":68:1)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":68:29)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":78:19)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":90:23)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":73:1)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":93:1)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:44)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":74:1)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":75:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":92:5)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":75:8)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":76:5)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":79:5)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":81:5)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":78:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":91:9)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:17)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:25)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:12)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":84:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":87:9)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":89:9)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:32)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:40)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":86:26)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":86:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":90:13)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":95:1)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":115:1)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":101:9)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":101:41)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":97:5)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":97:11)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":99:12)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":99:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":100:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":112:5)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:9)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":111:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:19)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:32)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:49)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:13)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:59)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":104:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":107:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":109:9)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:32)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:27)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:13)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:43)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":110:23)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":110:13)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":113:22)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":113:5)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":114:18)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":114:5)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":69:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":69:29)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":118:1)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":133:1)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:13)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:44)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":119:1)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":120:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":132:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":120:8)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":121:5)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":131:9)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:17)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:25)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:12)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":124:9)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":127:9)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":129:9)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:32)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:40)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":126:26)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":126:13)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":130:23)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":130:13)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":135:1)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":155:1)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":141:9)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":141:41)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":137:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":137:11)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":139:12)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":139:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":140:5)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":152:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":151:9)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:19)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:32)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:49)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:13)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:59)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":144:9)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":147:9)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":149:9)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:32)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:27)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:13)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:43)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":150:23)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":150:13)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":153:22)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":153:5)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":154:18)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":154:5)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":70:1)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":70:28)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":158:1)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":168:1)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:13)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:44)
#loc222 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":159:1)
#loc223 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":160:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":167:5)
#loc225 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":160:8)
#loc226 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":161:5)
#loc227 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":162:9)
#loc228 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":166:9)
#loc229 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:32)
#loc230 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:40)
#loc231 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":165:26)
#loc232 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":165:13)
#loc233 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":170:1)
#loc234 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":179:1)
#loc235 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":172:5)
#loc236 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":172:11)
#loc237 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":174:12)
#loc238 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":174:5)
#loc239 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":176:12)
#loc240 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":176:5)
#loc241 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":177:21)
#loc242 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":177:5)
#loc243 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":178:17)
#loc244 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":178:5)
#loc245 = loc(fused[#loc1, #loc2])
#loc246 = loc(fused[#loc3, #loc4])
#loc247 = loc(fused[#loc5, #loc6])
#loc248 = loc(fused[#loc7, #loc8])
#loc249 = loc(fused[#loc10, #loc11])
#loc250 = loc(fused[#loc12, #loc13])
#loc251 = loc(fused[#loc14, #loc15])
#loc253 = loc(fused[#loc18, #loc19])
#loc254 = loc(fused[#loc21, #loc22])
#loc255 = loc(fused[#loc24, #loc22])
#loc256 = loc(fused[#loc25, #loc26])
#loc257 = loc(fused[#loc27, #loc28])
#loc258 = loc(fused[#loc31, #loc32])
#loc259 = loc(fused[#loc33, #loc34])
#loc260 = loc(fused[#loc35, #loc36])
#loc261 = loc(fused[#loc38, #loc37])
#loc262 = loc(fused[#loc39, #loc40])
#loc263 = loc(fused[#loc41, #loc42])
#loc264 = loc(fused[#loc46, #loc47])
#loc265 = loc(fused[#loc48, #loc49, #loc50, #loc42])
#loc266 = loc(fused[#loc53, #loc54])
#loc267 = loc(fused[#loc57, #loc56])
#loc268 = loc(fused[#loc60, #loc61])
#loc269 = loc(fused[#loc62, #loc63])
#loc270 = loc(fused[#loc64, #loc65])
#loc271 = loc(fused[#loc66, #loc67])
#loc272 = loc(fused[#loc68, #loc69])
#loc273 = loc(fused[#loc70, #loc71])
#loc274 = loc(fused[#loc76, #loc77])
#loc277 = loc(fused[#loc87, #loc88])
#loc278 = loc(fused[#loc91, #loc92])
#loc279 = loc(fused[#loc95, #loc94])
#loc280 = loc(fused[#loc96, #loc97])
#loc281 = loc(fused[#loc100, #loc101])
#loc283 = loc(fused[#loc104, #loc105])
#loc284 = loc(fused[#loc107, #loc108])
#loc285 = loc(fused[#loc110, #loc111, #loc112, #loc108])
#loc286 = loc(fused[#loc114, #loc115])
#loc287 = loc(fused[#loc118, #loc117])
#loc288 = loc(fused[#loc119, #loc120, #loc121, #loc115])
#loc289 = loc(fused[#loc122, #loc123])
#loc290 = loc(fused[#loc127, #loc128])
#loc291 = loc(fused[#loc129, #loc130])
#loc292 = loc(fused[#loc131, #loc132])
#loc293 = loc(fused[#loc134, #loc133])
#loc294 = loc(fused[#loc135, #loc136])
#loc295 = loc(fused[#loc137, #loc138])
#loc296 = loc(fused[#loc142, #loc143])
#loc297 = loc(fused[#loc144, #loc145, #loc146, #loc138])
#loc298 = loc(fused[#loc149, #loc150])
#loc299 = loc(fused[#loc154, #loc153])
#loc300 = loc(fused[#loc157, #loc158])
#loc301 = loc(fused[#loc159, #loc160])
#loc303 = loc(fused[#loc163, #loc164])
#loc304 = loc(fused[#loc166, #loc167])
#loc305 = loc(fused[#loc169, #loc167])
#loc306 = loc(fused[#loc170, #loc171])
#loc307 = loc(fused[#loc174, #loc173])
#loc308 = loc(fused[#loc175, #loc176, #loc177, #loc171])
#loc309 = loc(fused[#loc178, #loc179])
#loc310 = loc(fused[#loc184, #loc185])
#loc311 = loc(fused[#loc186, #loc187])
#loc312 = loc(fused[#loc188, #loc189])
#loc313 = loc(fused[#loc191, #loc190])
#loc314 = loc(fused[#loc192, #loc193])
#loc315 = loc(fused[#loc194, #loc195])
#loc316 = loc(fused[#loc199, #loc200])
#loc317 = loc(fused[#loc201, #loc202, #loc203, #loc195])
#loc318 = loc(fused[#loc206, #loc207])
#loc319 = loc(fused[#loc211, #loc210])
#loc320 = loc(fused[#loc214, #loc215])
#loc321 = loc(fused[#loc216, #loc217])
#loc323 = loc(fused[#loc220, #loc221])
#loc324 = loc(fused[#loc223, #loc224])
#loc325 = loc(fused[#loc226, #loc224])
#loc326 = loc(fused[#loc227, #loc228])
#loc327 = loc(fused[#loc229, #loc230])
#loc328 = loc(fused[#loc233, #loc234])
#loc329 = loc(fused[#loc235, #loc236])
#loc330 = loc(fused[#loc238, #loc237])
#loc331 = loc(fused[#loc240, #loc239])
#loc332 = loc(fused[#loc242, #loc241])
