!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_timespec = !cir.struct<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.struct<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc190)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc191)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc193)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc194)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc195)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc196)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc198)
  cir.func no_proto @CWE367_TOC_TOU__stat_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc200)
    %1 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc202)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb2 loc(#loc204)
  ^bb2:  // 2 preds: ^bb1, ^bb32
    %5 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc206)
    cir.brcond %7 ^bb3, ^bb33 loc(#loc37)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc207)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc208)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc200)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc200)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc41)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb6 loc(#loc209)
  ^bb6:  // pred: ^bb5
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc191)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
    %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc211)
  ^bb7:  // pred: ^bb6
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc51)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc53)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc212)
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc43)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc213)
  ^bb10:  // pred: ^bb9
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc58)
    %31 = cir.cmp(gt, %28, %30) : !u64i, !cir.bool loc(#loc214)
    cir.brcond %31 ^bb11, ^bb12 loc(#loc215)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc60)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc61)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc63)
    %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc216)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %33, %41 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb12 loc(#loc55)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc218)
  ^bb14:  // pred: ^bb13
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %43 = cir.call @stat(%42, %1) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc68)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc70)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %46 ^bb15, ^bb16 loc(#loc220)
  ^bb15:  // pred: ^bb14
    %47 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc73)
    cir.call @exit(%48) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb16 loc(#loc66)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc66)
  ^bb17:  // pred: ^bb16
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %51 = cir.call @open(%49, %50) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc76)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb18 loc(#loc222)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc83)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc223)
    cir.brcond %55 ^bb19, ^bb20 loc(#loc224)
  ^bb19:  // pred: ^bb18
    %56 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc85)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc86)
    cir.call @exit(%57) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb20 loc(#loc80)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc80)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc225)
  ^bb22:  // pred: ^bb21
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %59 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %62 = cir.const #cir.int<11> : !u64i loc(#loc226)
    %63 = cir.call @write(%58, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc92)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc94)
    %66 = cir.cast(integral, %65 : !s32i), !s64i loc(#loc94)
    %67 = cir.cmp(eq, %63, %66) : !s64i, !cir.bool loc(#loc227)
    cir.brcond %67 ^bb23, ^bb24 loc(#loc228)
  ^bb23:  // pred: ^bb22
    %68 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc97)
    cir.call @exit(%69) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
    cir.br ^bb24 loc(#loc88)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc88)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc229)
  ^bb26:  // pred: ^bb25
    %70 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc102)
    %73 = cir.cmp(ne, %70, %72) : !s32i, !cir.bool loc(#loc230)
    cir.brcond %73 ^bb27, ^bb28 loc(#loc231)
  ^bb27:  // pred: ^bb26
    %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %75 = cir.call @close(%74) : (!s32i) -> !s32i loc(#loc105)
    cir.br ^bb28 loc(#loc99)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc99)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc40)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc32)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc32)
  ^bb32:  // pred: ^bb31
    %76 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %77 = cir.unary(inc, %76) : !s32i, !s32i loc(#loc107)
    cir.store %77, %3 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb2 loc(#loc204)
  ^bb33:  // pred: ^bb2
    cir.br ^bb34 loc(#loc32)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc22)
  } loc(#loc199)
  cir.func no_proto @CWE367_TOC_TOU__stat_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc110)
    cir.return loc(#loc109)
  } loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc236)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb2 loc(#loc239)
  ^bb2:  // 2 preds: ^bb1, ^bb28
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc241)
    cir.brcond %6 ^bb3, ^bb29 loc(#loc127)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc242)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc236)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc131)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb6 loc(#loc244)
  ^bb6:  // pred: ^bb5
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc191)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc136)
    %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc137)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc246)
  ^bb7:  // pred: ^bb6
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc140)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc142)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc144)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    cir.br ^bb8 loc(#loc133)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc133)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc248)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc147)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc147)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc149)
    %30 = cir.cmp(gt, %27, %29) : !u64i, !cir.bool loc(#loc249)
    cir.brcond %30 ^bb11, ^bb12 loc(#loc250)
  ^bb11:  // pred: ^bb10
    %31 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc151)
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc152)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc152)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc154)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc251)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc155)
    cir.store %32, %40 : !s8i, !cir.ptr<!s8i> loc(#loc252)
    cir.br ^bb12 loc(#loc146)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc146)
  ^bb13:  // pred: ^bb12
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
    %42 = cir.const #cir.int<2> : !s32i loc(#loc157)
    %43 = cir.call @open(%41, %42) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc158)
    cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.br ^bb14 loc(#loc254)
  ^bb14:  // pred: ^bb13
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc165)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %47 ^bb15, ^bb16 loc(#loc256)
  ^bb15:  // pred: ^bb14
    %48 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc167)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc168)
    cir.call @exit(%49) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb16 loc(#loc162)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc162)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc257)
  ^bb18:  // pred: ^bb17
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %51 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc112)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc112)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    %54 = cir.const #cir.int<12> : !u64i loc(#loc258)
    %55 = cir.call @write(%50, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc174)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc176)
    %58 = cir.cast(integral, %57 : !s32i), !s64i loc(#loc176)
    %59 = cir.cmp(eq, %55, %58) : !s64i, !cir.bool loc(#loc259)
    cir.brcond %59 ^bb19, ^bb20 loc(#loc260)
  ^bb19:  // pred: ^bb18
    %60 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc178)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc179)
    cir.call @exit(%61) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb20 loc(#loc170)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc170)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc261)
  ^bb22:  // pred: ^bb21
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc184)
    %65 = cir.cmp(ne, %62, %64) : !s32i, !cir.bool loc(#loc262)
    cir.brcond %65 ^bb23, ^bb24 loc(#loc263)
  ^bb23:  // pred: ^bb22
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %67 = cir.call @close(%66) : (!s32i) -> !s32i loc(#loc187)
    cir.br ^bb24 loc(#loc181)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc181)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc130)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc122)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc122)
  ^bb28:  // pred: ^bb27
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %69 = cir.unary(inc, %68) : !s32i, !s32i loc(#loc189)
    cir.store %69, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb2 loc(#loc239)
  ^bb29:  // pred: ^bb2
    cir.br ^bb30 loc(#loc122)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc114)
  } loc(#loc235)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_17.c":48:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/sys/stat.h":205:1)
#loc11 = loc("/usr/include/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_17.c":66:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_17.c":37:1)
#loc22 = loc("CWE367_TOC_TOU__stat_17.c":76:1)
#loc23 = loc("CWE367_TOC_TOU__stat_17.c":43:13)
#loc24 = loc("CWE367_TOC_TOU__stat_17.c":43:34)
#loc25 = loc("CWE367_TOC_TOU__stat_17.c":44:13)
#loc26 = loc("CWE367_TOC_TOU__stat_17.c":44:25)
#loc27 = loc("CWE367_TOC_TOU__stat_17.c":45:13)
#loc28 = loc("CWE367_TOC_TOU__stat_17.c":45:29)
#loc29 = loc("CWE367_TOC_TOU__stat_17.c":39:5)
#loc30 = loc("CWE367_TOC_TOU__stat_17.c":39:9)
#loc31 = loc("CWE367_TOC_TOU__stat_17.c":40:5)
#loc32 = loc("CWE367_TOC_TOU__stat_17.c":75:5)
#loc33 = loc("CWE367_TOC_TOU__stat_17.c":40:13)
#loc34 = loc("CWE367_TOC_TOU__stat_17.c":40:9)
#loc35 = loc("CWE367_TOC_TOU__stat_17.c":40:16)
#loc36 = loc("CWE367_TOC_TOU__stat_17.c":40:20)
#loc37 = loc("CWE367_TOC_TOU__stat_17.c":40:18)
#loc38 = loc("CWE367_TOC_TOU__stat_17.c":41:5)
#loc39 = loc("CWE367_TOC_TOU__stat_17.c":42:9)
#loc40 = loc("CWE367_TOC_TOU__stat_17.c":74:9)
#loc41 = loc("CWE367_TOC_TOU__stat_17.c":45:28)
#loc42 = loc("CWE367_TOC_TOU__stat_17.c":46:13)
#loc43 = loc("CWE367_TOC_TOU__stat_17.c":51:13)
#loc44 = loc("CWE367_TOC_TOU__stat_17.c":46:23)
#loc45 = loc("CWE367_TOC_TOU__stat_17.c":46:33)
#loc46 = loc("CWE367_TOC_TOU__stat_17.c":46:38)
#loc47 = loc("CWE367_TOC_TOU__stat_17.c":46:17)
#loc48 = loc("CWE367_TOC_TOU__stat_17.c":46:48)
#loc49 = loc("CWE367_TOC_TOU__stat_17.c":47:13)
#loc50 = loc("CWE367_TOC_TOU__stat_17.c":48:17)
#loc51 = loc("CWE367_TOC_TOU__stat_17.c":50:31)
#loc52 = loc("CWE367_TOC_TOU__stat_17.c":50:26)
#loc53 = loc("CWE367_TOC_TOU__stat_17.c":50:17)
#loc54 = loc("CWE367_TOC_TOU__stat_17.c":52:13)
#loc55 = loc("CWE367_TOC_TOU__stat_17.c":55:13)
#loc56 = loc("CWE367_TOC_TOU__stat_17.c":52:17)
#loc57 = loc("CWE367_TOC_TOU__stat_17.c":52:24)
#loc58 = loc("CWE367_TOC_TOU__stat_17.c":52:36)
#loc59 = loc("CWE367_TOC_TOU__stat_17.c":53:13)
#loc60 = loc("CWE367_TOC_TOU__stat_17.c":54:48)
#loc61 = loc("CWE367_TOC_TOU__stat_17.c":54:26)
#loc62 = loc("CWE367_TOC_TOU__stat_17.c":54:33)
#loc63 = loc("CWE367_TOC_TOU__stat_17.c":54:43)
#loc64 = loc("CWE367_TOC_TOU__stat_17.c":54:17)
#loc65 = loc("CWE367_TOC_TOU__stat_17.c":57:13)
#loc66 = loc("CWE367_TOC_TOU__stat_17.c":60:13)
#loc67 = loc("CWE367_TOC_TOU__stat_17.c":57:22)
#loc68 = loc("CWE367_TOC_TOU__stat_17.c":57:17)
#loc69 = loc("CWE367_TOC_TOU__stat_17.c":57:49)
#loc70 = loc("CWE367_TOC_TOU__stat_17.c":57:48)
#loc71 = loc("CWE367_TOC_TOU__stat_17.c":58:13)
#loc72 = loc("CWE367_TOC_TOU__stat_17.c":59:17)
#loc73 = loc("CWE367_TOC_TOU__stat_17.c":59:22)
#loc74 = loc("CWE367_TOC_TOU__stat_17.c":61:30)
#loc75 = loc("CWE367_TOC_TOU__stat_17.c":61:40)
#loc76 = loc("CWE367_TOC_TOU__stat_17.c":61:25)
#loc77 = loc("CWE367_TOC_TOU__stat_17.c":61:13)
#loc78 = loc("CWE367_TOC_TOU__stat_17.c":61:46)
#loc79 = loc("CWE367_TOC_TOU__stat_17.c":62:13)
#loc80 = loc("CWE367_TOC_TOU__stat_17.c":65:13)
#loc81 = loc("CWE367_TOC_TOU__stat_17.c":62:17)
#loc82 = loc("CWE367_TOC_TOU__stat_17.c":62:30)
#loc83 = loc("CWE367_TOC_TOU__stat_17.c":62:29)
#loc84 = loc("CWE367_TOC_TOU__stat_17.c":63:13)
#loc85 = loc("CWE367_TOC_TOU__stat_17.c":64:17)
#loc86 = loc("CWE367_TOC_TOU__stat_17.c":64:22)
#loc87 = loc("CWE367_TOC_TOU__stat_17.c":66:13)
#loc88 = loc("CWE367_TOC_TOU__stat_17.c":69:13)
#loc89 = loc("CWE367_TOC_TOU__stat_17.c":66:23)
#loc90 = loc("CWE367_TOC_TOU__stat_17.c":66:50)
#loc91 = loc("CWE367_TOC_TOU__stat_17.c":66:72)
#loc92 = loc("CWE367_TOC_TOU__stat_17.c":66:17)
#loc93 = loc("CWE367_TOC_TOU__stat_17.c":66:79)
#loc94 = loc("CWE367_TOC_TOU__stat_17.c":66:78)
#loc95 = loc("CWE367_TOC_TOU__stat_17.c":67:13)
#loc96 = loc("CWE367_TOC_TOU__stat_17.c":68:17)
#loc97 = loc("CWE367_TOC_TOU__stat_17.c":68:22)
#loc98 = loc("CWE367_TOC_TOU__stat_17.c":70:13)
#loc99 = loc("CWE367_TOC_TOU__stat_17.c":73:13)
#loc100 = loc("CWE367_TOC_TOU__stat_17.c":70:17)
#loc101 = loc("CWE367_TOC_TOU__stat_17.c":70:30)
#loc102 = loc("CWE367_TOC_TOU__stat_17.c":70:29)
#loc103 = loc("CWE367_TOC_TOU__stat_17.c":71:13)
#loc104 = loc("CWE367_TOC_TOU__stat_17.c":72:23)
#loc105 = loc("CWE367_TOC_TOU__stat_17.c":72:17)
#loc106 = loc("CWE367_TOC_TOU__stat_17.c":40:24)
#loc107 = loc("CWE367_TOC_TOU__stat_17.c":40:23)
#loc108 = loc("CWE367_TOC_TOU__stat_17.c":119:1)
#loc109 = loc("CWE367_TOC_TOU__stat_17.c":122:1)
#loc110 = loc("CWE367_TOC_TOU__stat_17.c":121:5)
#loc111 = loc("CWE367_TOC_TOU__stat_17.c":121:11)
#loc112 = loc("CWE367_TOC_TOU__stat_17.c":107:33)
#loc113 = loc("CWE367_TOC_TOU__stat_17.c":83:1)
#loc114 = loc("CWE367_TOC_TOU__stat_17.c":117:1)
#loc115 = loc("CWE367_TOC_TOU__stat_17.c":89:13)
#loc116 = loc("CWE367_TOC_TOU__stat_17.c":89:34)
#loc117 = loc("CWE367_TOC_TOU__stat_17.c":90:13)
#loc118 = loc("CWE367_TOC_TOU__stat_17.c":90:29)
#loc119 = loc("CWE367_TOC_TOU__stat_17.c":85:5)
#loc120 = loc("CWE367_TOC_TOU__stat_17.c":85:9)
#loc121 = loc("CWE367_TOC_TOU__stat_17.c":86:5)
#loc122 = loc("CWE367_TOC_TOU__stat_17.c":116:5)
#loc123 = loc("CWE367_TOC_TOU__stat_17.c":86:13)
#loc124 = loc("CWE367_TOC_TOU__stat_17.c":86:9)
#loc125 = loc("CWE367_TOC_TOU__stat_17.c":86:16)
#loc126 = loc("CWE367_TOC_TOU__stat_17.c":86:20)
#loc127 = loc("CWE367_TOC_TOU__stat_17.c":86:18)
#loc128 = loc("CWE367_TOC_TOU__stat_17.c":87:5)
#loc129 = loc("CWE367_TOC_TOU__stat_17.c":88:9)
#loc130 = loc("CWE367_TOC_TOU__stat_17.c":115:9)
#loc131 = loc("CWE367_TOC_TOU__stat_17.c":90:28)
#loc132 = loc("CWE367_TOC_TOU__stat_17.c":91:13)
#loc133 = loc("CWE367_TOC_TOU__stat_17.c":96:13)
#loc134 = loc("CWE367_TOC_TOU__stat_17.c":91:23)
#loc135 = loc("CWE367_TOC_TOU__stat_17.c":91:33)
#loc136 = loc("CWE367_TOC_TOU__stat_17.c":91:38)
#loc137 = loc("CWE367_TOC_TOU__stat_17.c":91:17)
#loc138 = loc("CWE367_TOC_TOU__stat_17.c":91:48)
#loc139 = loc("CWE367_TOC_TOU__stat_17.c":92:13)
#loc140 = loc("CWE367_TOC_TOU__stat_17.c":93:27)
#loc141 = loc("CWE367_TOC_TOU__stat_17.c":93:17)
#loc142 = loc("CWE367_TOC_TOU__stat_17.c":95:31)
#loc143 = loc("CWE367_TOC_TOU__stat_17.c":95:26)
#loc144 = loc("CWE367_TOC_TOU__stat_17.c":95:17)
#loc145 = loc("CWE367_TOC_TOU__stat_17.c":97:13)
#loc146 = loc("CWE367_TOC_TOU__stat_17.c":100:13)
#loc147 = loc("CWE367_TOC_TOU__stat_17.c":97:17)
#loc148 = loc("CWE367_TOC_TOU__stat_17.c":97:24)
#loc149 = loc("CWE367_TOC_TOU__stat_17.c":97:36)
#loc150 = loc("CWE367_TOC_TOU__stat_17.c":98:13)
#loc151 = loc("CWE367_TOC_TOU__stat_17.c":99:48)
#loc152 = loc("CWE367_TOC_TOU__stat_17.c":99:26)
#loc153 = loc("CWE367_TOC_TOU__stat_17.c":99:33)
#loc154 = loc("CWE367_TOC_TOU__stat_17.c":99:43)
#loc155 = loc("CWE367_TOC_TOU__stat_17.c":99:17)
#loc156 = loc("CWE367_TOC_TOU__stat_17.c":102:30)
#loc157 = loc("CWE367_TOC_TOU__stat_17.c":102:40)
#loc158 = loc("CWE367_TOC_TOU__stat_17.c":102:25)
#loc159 = loc("CWE367_TOC_TOU__stat_17.c":102:13)
#loc160 = loc("CWE367_TOC_TOU__stat_17.c":102:46)
#loc161 = loc("CWE367_TOC_TOU__stat_17.c":103:13)
#loc162 = loc("CWE367_TOC_TOU__stat_17.c":106:13)
#loc163 = loc("CWE367_TOC_TOU__stat_17.c":103:17)
#loc164 = loc("CWE367_TOC_TOU__stat_17.c":103:30)
#loc165 = loc("CWE367_TOC_TOU__stat_17.c":103:29)
#loc166 = loc("CWE367_TOC_TOU__stat_17.c":104:13)
#loc167 = loc("CWE367_TOC_TOU__stat_17.c":105:17)
#loc168 = loc("CWE367_TOC_TOU__stat_17.c":105:22)
#loc169 = loc("CWE367_TOC_TOU__stat_17.c":107:13)
#loc170 = loc("CWE367_TOC_TOU__stat_17.c":110:13)
#loc171 = loc("CWE367_TOC_TOU__stat_17.c":107:23)
#loc172 = loc("CWE367_TOC_TOU__stat_17.c":107:51)
#loc173 = loc("CWE367_TOC_TOU__stat_17.c":107:74)
#loc174 = loc("CWE367_TOC_TOU__stat_17.c":107:17)
#loc175 = loc("CWE367_TOC_TOU__stat_17.c":107:81)
#loc176 = loc("CWE367_TOC_TOU__stat_17.c":107:80)
#loc177 = loc("CWE367_TOC_TOU__stat_17.c":108:13)
#loc178 = loc("CWE367_TOC_TOU__stat_17.c":109:17)
#loc179 = loc("CWE367_TOC_TOU__stat_17.c":109:22)
#loc180 = loc("CWE367_TOC_TOU__stat_17.c":111:13)
#loc181 = loc("CWE367_TOC_TOU__stat_17.c":114:13)
#loc182 = loc("CWE367_TOC_TOU__stat_17.c":111:17)
#loc183 = loc("CWE367_TOC_TOU__stat_17.c":111:30)
#loc184 = loc("CWE367_TOC_TOU__stat_17.c":111:29)
#loc185 = loc("CWE367_TOC_TOU__stat_17.c":112:13)
#loc186 = loc("CWE367_TOC_TOU__stat_17.c":113:23)
#loc187 = loc("CWE367_TOC_TOU__stat_17.c":113:17)
#loc188 = loc("CWE367_TOC_TOU__stat_17.c":86:24)
#loc189 = loc("CWE367_TOC_TOU__stat_17.c":86:23)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc3, #loc4])
#loc192 = loc(fused[#loc5, #loc6])
#loc193 = loc(fused[#loc8, #loc9])
#loc194 = loc(fused[#loc10, #loc11])
#loc195 = loc(fused[#loc12, #loc13])
#loc196 = loc(fused[#loc14, #loc15])
#loc197 = loc(fused[#loc16, #loc17])
#loc198 = loc(fused[#loc19, #loc20])
#loc199 = loc(fused[#loc21, #loc22])
#loc200 = loc(fused[#loc23, #loc24])
#loc201 = loc(fused[#loc25, #loc26])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc29, #loc30])
#loc204 = loc(fused[#loc31, #loc32])
#loc205 = loc(fused[#loc34, #loc33])
#loc206 = loc(fused[#loc35, #loc36])
#loc207 = loc(fused[#loc38, #loc32])
#loc208 = loc(fused[#loc39, #loc40])
#loc209 = loc(fused[#loc42, #loc43])
#loc210 = loc(fused[#loc47, #loc48])
#loc211 = loc(fused[#loc49, #loc43])
#loc212 = loc(fused[#loc53, #loc51])
#loc213 = loc(fused[#loc54, #loc55])
#loc214 = loc(fused[#loc56, #loc58])
#loc215 = loc(fused[#loc59, #loc55])
#loc216 = loc(fused[#loc61, #loc63])
#loc217 = loc(fused[#loc64, #loc60])
#loc218 = loc(fused[#loc65, #loc66])
#loc219 = loc(fused[#loc68, #loc69])
#loc220 = loc(fused[#loc71, #loc66])
#loc221 = loc(fused[#loc77, #loc78])
#loc222 = loc(fused[#loc79, #loc80])
#loc223 = loc(fused[#loc81, #loc82])
#loc224 = loc(fused[#loc84, #loc80])
#loc225 = loc(fused[#loc87, #loc88])
#loc226 = loc(fused[#loc90, #loc91])
#loc227 = loc(fused[#loc92, #loc93])
#loc228 = loc(fused[#loc95, #loc88])
#loc229 = loc(fused[#loc98, #loc99])
#loc230 = loc(fused[#loc100, #loc101])
#loc231 = loc(fused[#loc103, #loc99])
#loc232 = loc(fused[#loc107, #loc106])
#loc233 = loc(fused[#loc108, #loc109])
#loc234 = loc(fused[#loc110, #loc111])
#loc235 = loc(fused[#loc113, #loc114])
#loc236 = loc(fused[#loc115, #loc116])
#loc237 = loc(fused[#loc117, #loc118])
#loc238 = loc(fused[#loc119, #loc120])
#loc239 = loc(fused[#loc121, #loc122])
#loc240 = loc(fused[#loc124, #loc123])
#loc241 = loc(fused[#loc125, #loc126])
#loc242 = loc(fused[#loc128, #loc122])
#loc243 = loc(fused[#loc129, #loc130])
#loc244 = loc(fused[#loc132, #loc133])
#loc245 = loc(fused[#loc137, #loc138])
#loc246 = loc(fused[#loc139, #loc133])
#loc247 = loc(fused[#loc144, #loc142])
#loc248 = loc(fused[#loc145, #loc146])
#loc249 = loc(fused[#loc147, #loc149])
#loc250 = loc(fused[#loc150, #loc146])
#loc251 = loc(fused[#loc152, #loc154])
#loc252 = loc(fused[#loc155, #loc151])
#loc253 = loc(fused[#loc159, #loc160])
#loc254 = loc(fused[#loc161, #loc162])
#loc255 = loc(fused[#loc163, #loc164])
#loc256 = loc(fused[#loc166, #loc162])
#loc257 = loc(fused[#loc169, #loc170])
#loc258 = loc(fused[#loc172, #loc173])
#loc259 = loc(fused[#loc174, #loc175])
#loc260 = loc(fused[#loc177, #loc170])
#loc261 = loc(fused[#loc180, #loc181])
#loc262 = loc(fused[#loc182, #loc183])
#loc263 = loc(fused[#loc185, #loc181])
#loc264 = loc(fused[#loc189, #loc188])
