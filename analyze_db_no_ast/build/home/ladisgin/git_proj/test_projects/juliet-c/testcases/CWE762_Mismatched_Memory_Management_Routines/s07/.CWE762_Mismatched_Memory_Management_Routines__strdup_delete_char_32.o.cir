!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc108)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc112)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc117)
        %10 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc117)
        cir.store %10, %9 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc117)
        %11 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc24)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc25)
        %13 = cir.call @strdup(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
        cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
      } loc(#loc116)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    } loc(#loc114)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      %9 = cir.const #cir.int<1> : !u64i loc(#loc37)
      cir.call @_ZdlPvm(%8, %9) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc37)
    } loc(#loc120)
    cir.return loc(#loc6)
  } loc(#loc109)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc122)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc126)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc125)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc126)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
      %7 = cir.const #cir.int<1> : !u64i loc(#loc130)
      %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc57)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
      cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
      cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    } loc(#loc128)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
      %9 = cir.const #cir.int<1> : !u64i loc(#loc57)
      cir.call @_ZdlPvm(%8, %9) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc57)
    } loc(#loc133)
    cir.return loc(#loc41)
  } loc(#loc123)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc135)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc139)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc139)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc144)
        %10 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc144)
        cir.store %10, %9 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc144)
        %11 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc89)
        %12 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc90)
        %13 = cir.call @strdup(%12) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
        cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
      } loc(#loc143)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
      cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    } loc(#loc141)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc101)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    } loc(#loc147)
    cir.return loc(#loc71)
  } loc(#loc136)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodG2BEv() : () -> () loc(#loc105)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32L7goodB2GEv() : () -> () loc(#loc106)
    cir.return loc(#loc104)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":27:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":49:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":29:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":29:12)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":30:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":30:25)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":31:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":31:25)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":33:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":33:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":34:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":42:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":35:9)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":35:24)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":35:23)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":36:9)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":40:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":37:13)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":37:31)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:20)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:27)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:13)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":39:35)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":41:21)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":41:10)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":41:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":43:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":48:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":44:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":44:24)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":44:23)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":47:16)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":27:6)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc39 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":56:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":75:1)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":58:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":58:12)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":59:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":59:25)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":60:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":60:25)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":62:12)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":62:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":63:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":68:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":64:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":64:24)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":64:23)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":66:16)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":66:20)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":56:13)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":66:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":67:21)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":67:10)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":67:9)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":69:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":74:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":70:9)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":70:24)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":70:23)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":73:16)
#loc68 = loc("/usr/include/stdlib.h":687:1)
#loc69 = loc("/usr/include/stdlib.h":687:32)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":78:1)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":99:1)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":80:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":80:12)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":81:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":81:25)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":82:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":82:25)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":84:12)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":84:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":85:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":93:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":86:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":86:24)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":86:23)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":87:9)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":91:9)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":88:13)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":88:31)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:20)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:27)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:13)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":90:35)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":92:21)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":92:10)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":92:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":94:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":98:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":95:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":95:24)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":95:23)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":97:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":97:14)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":101:1)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":105:1)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":103:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_32.cpp":104:5)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc14, #loc13])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc20, #loc21])
#loc117 = loc(fused[#loc22, #loc23])
#loc118 = loc(fused[#loc26, #loc27])
#loc119 = loc(fused[#loc30, #loc28])
#loc120 = loc(fused[#loc31, #loc32])
#loc121 = loc(fused[#loc33, #loc34])
#loc122 = loc(fused[#loc38, #loc39])
#loc123 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc45])
#loc126 = loc(fused[#loc46, #loc47])
#loc127 = loc(fused[#loc49, #loc48])
#loc128 = loc(fused[#loc50, #loc51])
#loc129 = loc(fused[#loc52, #loc53])
#loc130 = loc(fused[#loc55, #loc56])
#loc131 = loc(fused[#loc58, #loc56])
#loc132 = loc(fused[#loc61, #loc59])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc70, #loc71])
#loc137 = loc(fused[#loc72, #loc73])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc79, #loc78])
#loc141 = loc(fused[#loc80, #loc81])
#loc142 = loc(fused[#loc82, #loc83])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc87, #loc88])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc95, #loc93])
#loc147 = loc(fused[#loc96, #loc97])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc103, #loc104])
