!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc114)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc119)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc120)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc118)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc25)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc26)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc26)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc124)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc30)
      %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc32)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc34)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc125)
      %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    } loc(#loc122)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc130)
        %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc130)
        cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc130)
        %10 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc47)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc48)
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
        %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
        %16 = cir.call @strncat(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc52)
        %19 = cir.const #cir.int<50> : !s32i loc(#loc53)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc53)
        %22 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc55)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc55)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc131)
        %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc8)
  } loc(#loc116)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc137)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc136)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc137)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc80)
      %11 = cir.const #cir.int<50> : !s32i loc(#loc81)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc81)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc81)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc142)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc85)
      %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc87)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc87)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc89)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc143)
      %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    } loc(#loc140)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc148)
        %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc148)
        cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc148)
        %10 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc102)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc103)
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc105)
        %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc105)
        %16 = cir.call @strncat(%11, %12, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc107)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc107)
        %19 = cir.const #cir.int<50> : !s32i loc(#loc108)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc108)
        %22 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc110)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc110)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc149)
        %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
        cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc112)
      } loc(#loc147)
    } loc(#loc145)
    cir.return loc(#loc63)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":47:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":26:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":27:25)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":28:24)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":29:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":29:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":30:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":31:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":31:24)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":31:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":33:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":33:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":33:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":33:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":33:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":33:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":34:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":34:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":34:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":34:18)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":34:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":35:21)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":35:10)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":35:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":37:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":46:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":38:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":38:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":38:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":39:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":45:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":40:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":40:29)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":42:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":42:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":42:27)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":42:33)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":42:40)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":43:26)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":43:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":43:21)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":43:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":44:23)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":44:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":80:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":83:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":82:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":82:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":54:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":78:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":56:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":56:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":57:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":57:25)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":58:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":58:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":59:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":59:24)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":60:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":60:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":61:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":67:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":62:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":62:24)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":62:23)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":64:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":64:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":64:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":64:30)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":64:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":64:31)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":65:22)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":65:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":65:14)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":65:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":65:18)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":66:21)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":66:10)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":66:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":68:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":77:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":69:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":69:24)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":69:23)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":70:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":76:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":71:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":71:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":73:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":73:21)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":73:27)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":73:33)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":73:40)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":74:26)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":74:18)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":74:21)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":74:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":75:23)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_32.c":75:13)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc18, #loc17])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc21, #loc22])
#loc124 = loc(fused[#loc28, #loc29])
#loc125 = loc(fused[#loc31, #loc30])
#loc126 = loc(fused[#loc37, #loc35])
#loc127 = loc(fused[#loc38, #loc39])
#loc128 = loc(fused[#loc40, #loc41])
#loc129 = loc(fused[#loc43, #loc44])
#loc130 = loc(fused[#loc45, #loc46])
#loc131 = loc(fused[#loc55, #loc52])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc66, #loc67])
#loc137 = loc(fused[#loc68, #loc69])
#loc138 = loc(fused[#loc70, #loc71])
#loc139 = loc(fused[#loc73, #loc72])
#loc140 = loc(fused[#loc74, #loc75])
#loc141 = loc(fused[#loc76, #loc77])
#loc142 = loc(fused[#loc83, #loc84])
#loc143 = loc(fused[#loc86, #loc85])
#loc144 = loc(fused[#loc92, #loc90])
#loc145 = loc(fused[#loc93, #loc94])
#loc146 = loc(fused[#loc95, #loc96])
#loc147 = loc(fused[#loc98, #loc99])
#loc148 = loc(fused[#loc100, #loc101])
#loc149 = loc(fused[#loc110, #loc107])
