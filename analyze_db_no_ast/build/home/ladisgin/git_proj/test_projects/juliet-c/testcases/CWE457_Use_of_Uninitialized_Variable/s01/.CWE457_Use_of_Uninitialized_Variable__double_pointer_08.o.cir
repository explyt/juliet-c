!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printDoubleLine(!cir.double) loc(#loc188)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
      } loc(#loc193)
    } loc(#loc191)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc195)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc17)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc18)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc19)
      } loc(#loc196)
    } loc(#loc194)
    cir.return loc(#loc4)
  } loc(#loc189)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc21)
  } loc(#loc197)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc31)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.return %2 : !s32i loc(#loc203)
  } loc(#loc202)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc205)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc206)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc210)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc47)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
      cir.if %3 {
      } loc(#loc211)
    } loc(#loc209)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc213)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc52)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc52)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc58)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc215)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc58)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc216)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc217)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc65)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc66)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.double>, !s32i loc(#loc219)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc67)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc70)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc71)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc69)
          } loc(#loc220)
        } loc(#loc218)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc72)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc73)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc221)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc75)
        %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc76)
        cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc77)
      } loc(#loc214)
    } loc(#loc212)
    cir.return loc(#loc42)
  } loc(#loc207)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.return %2 : !s32i loc(#loc223)
  } loc(#loc222)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc88)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc88)
      cir.if %3 {
      } loc(#loc228)
    } loc(#loc226)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc230)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc93)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc93)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc96)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc232)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc96)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc233)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc234)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc104)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.double>, !s32i loc(#loc236)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc105)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc109)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc107)
          } loc(#loc237)
        } loc(#loc235)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc110)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc111)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc238)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc113)
        %11 = cir.load %10 : !cir.ptr<!cir.double>, !cir.double loc(#loc114)
        cir.call @printDoubleLine(%11) : (!cir.double) -> () loc(#loc115)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc83)
  } loc(#loc224)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    cir.scope {
      %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc242)
      %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc122)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc122)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc129)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc244)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc129)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc245)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc246)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc136)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc137)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !s32i loc(#loc248)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc138)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc140)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc142)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc140)
          } loc(#loc249)
        } loc(#loc247)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc143)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc144)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc250)
      } loc(#loc243)
    } loc(#loc241)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc252)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc148)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc148)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc151)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc152)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc153)
      } loc(#loc253)
    } loc(#loc251)
    cir.return loc(#loc117)
  } loc(#loc239)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc255)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc257)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc160)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc160)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc163)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc259)
        %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc163)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc260)
        cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc261)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc170)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc171)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc171)
          %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.double>, !s32i loc(#loc263)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc172)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc176)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc174)
          } loc(#loc264)
        } loc(#loc262)
        %8 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc177)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc178)
        cir.store %8, %9 : !cir.double, !cir.ptr<!cir.double> loc(#loc265)
      } loc(#loc258)
    } loc(#loc256)
    cir.scope {
      %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc267)
      %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc182)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc182)
      cir.if %3 {
        %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc185)
        %5 = cir.load %4 : !cir.ptr<!cir.double>, !cir.double loc(#loc186)
        cir.call @printDoubleLine(%5) : (!cir.double) -> () loc(#loc187)
      } loc(#loc268)
    } loc(#loc266)
    cir.return loc(#loc155)
  } loc(#loc254)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":37:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":50:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":39:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":39:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":44:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:8)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":40:26)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":41:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":49:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:8)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":45:26)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":46:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:26)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:25)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":48:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":144:1)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":150:1)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":146:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":146:14)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":147:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":147:14)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":148:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":148:14)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":149:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":149:14)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":25:1)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":28:1)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":27:12)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":27:5)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":68:19)
#loc37 = loc("/usr/include/stdlib.h":672:1)
#loc38 = loc("/usr/include/stdlib.h":672:45)
#loc39 = loc("/usr/include/stdlib.h":756:1)
#loc40 = loc("/usr/include/stdlib.h":756:70)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":57:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":79:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":59:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":59:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":64:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:8)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":60:26)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":61:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":78:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:8)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":65:27)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":66:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":69:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":71:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":68:9)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:26)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:33)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:46)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:47)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":74:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:37)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:21)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:18)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:27)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:28)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:34)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":75:33)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:17)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:10)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":76:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:26)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:25)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":77:9)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":30:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":33:1)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":32:12)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":32:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":82:1)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":99:1)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":84:5)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":84:14)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":89:5)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:8)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":85:26)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":86:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":98:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:8)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":90:26)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":91:5)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:26)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:33)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:46)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:47)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":94:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:9)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:37)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:13)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:21)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:18)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:27)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:28)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:34)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":95:33)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:17)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:10)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":96:9)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:26)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:25)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":97:9)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":102:1)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":123:1)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":104:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":104:14)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":117:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:8)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":105:27)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":106:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":109:5)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":111:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":108:19)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":108:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:26)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:33)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:46)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:47)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":114:9)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:9)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:37)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:13)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:21)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:18)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:27)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:28)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:34)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":115:33)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:17)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:10)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":116:9)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:5)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":122:5)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:8)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":118:26)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":119:5)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:26)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:25)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":121:9)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":126:1)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":142:1)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":128:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":128:14)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:5)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":136:5)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:8)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":129:26)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":130:5)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:26)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:33)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:46)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:47)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":133:9)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:9)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:37)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:13)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:21)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:18)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:27)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:28)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:34)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":134:33)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:17)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:10)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":135:9)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:5)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":141:5)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:8)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":137:26)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":138:5)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:26)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:25)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_08.c":140:9)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc5, #loc6])
#loc191 = loc(fused[#loc7, #loc8])
#loc192 = loc(fused[#loc9, #loc10])
#loc193 = loc(fused[#loc11, #loc8])
#loc194 = loc(fused[#loc12, #loc13])
#loc195 = loc(fused[#loc14, #loc15])
#loc196 = loc(fused[#loc16, #loc13])
#loc197 = loc(fused[#loc20, #loc21])
#loc198 = loc(fused[#loc22, #loc23])
#loc199 = loc(fused[#loc24, #loc25])
#loc200 = loc(fused[#loc26, #loc27])
#loc201 = loc(fused[#loc28, #loc29])
#loc202 = loc(fused[#loc30, #loc31])
#loc203 = loc(fused[#loc33, #loc32])
#loc204 = loc(fused[#loc34, #loc35])
#loc205 = loc(fused[#loc37, #loc38])
#loc206 = loc(fused[#loc39, #loc40])
#loc207 = loc(fused[#loc41, #loc42])
#loc208 = loc(fused[#loc43, #loc44])
#loc209 = loc(fused[#loc45, #loc46])
#loc210 = loc(fused[#loc47, #loc48])
#loc211 = loc(fused[#loc49, #loc46])
#loc212 = loc(fused[#loc50, #loc51])
#loc213 = loc(fused[#loc52, #loc53])
#loc214 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc215 = loc(fused[#loc59, #loc60])
#loc216 = loc(fused[#loc58, #loc61])
#loc217 = loc(fused[#loc62, #loc61])
#loc218 = loc(fused[#loc63, #loc64])
#loc219 = loc(fused[#loc65, #loc66])
#loc220 = loc(fused[#loc68, #loc64])
#loc221 = loc(fused[#loc74, #loc72])
#loc222 = loc(fused[#loc78, #loc79])
#loc223 = loc(fused[#loc81, #loc80])
#loc224 = loc(fused[#loc82, #loc83])
#loc225 = loc(fused[#loc84, #loc85])
#loc226 = loc(fused[#loc86, #loc87])
#loc227 = loc(fused[#loc88, #loc89])
#loc228 = loc(fused[#loc90, #loc87])
#loc229 = loc(fused[#loc91, #loc92])
#loc230 = loc(fused[#loc93, #loc94])
#loc231 = loc(fused[#loc95, #loc92])
#loc232 = loc(fused[#loc97, #loc98])
#loc233 = loc(fused[#loc96, #loc99])
#loc234 = loc(fused[#loc100, #loc99])
#loc235 = loc(fused[#loc101, #loc102])
#loc236 = loc(fused[#loc103, #loc104])
#loc237 = loc(fused[#loc106, #loc102])
#loc238 = loc(fused[#loc112, #loc110])
#loc239 = loc(fused[#loc116, #loc117])
#loc240 = loc(fused[#loc118, #loc119])
#loc241 = loc(fused[#loc120, #loc121])
#loc242 = loc(fused[#loc122, #loc123])
#loc243 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc244 = loc(fused[#loc130, #loc131])
#loc245 = loc(fused[#loc129, #loc132])
#loc246 = loc(fused[#loc133, #loc132])
#loc247 = loc(fused[#loc134, #loc135])
#loc248 = loc(fused[#loc136, #loc137])
#loc249 = loc(fused[#loc139, #loc135])
#loc250 = loc(fused[#loc145, #loc143])
#loc251 = loc(fused[#loc146, #loc147])
#loc252 = loc(fused[#loc148, #loc149])
#loc253 = loc(fused[#loc150, #loc147])
#loc254 = loc(fused[#loc154, #loc155])
#loc255 = loc(fused[#loc156, #loc157])
#loc256 = loc(fused[#loc158, #loc159])
#loc257 = loc(fused[#loc160, #loc161])
#loc258 = loc(fused[#loc162, #loc159])
#loc259 = loc(fused[#loc164, #loc165])
#loc260 = loc(fused[#loc163, #loc166])
#loc261 = loc(fused[#loc167, #loc166])
#loc262 = loc(fused[#loc168, #loc169])
#loc263 = loc(fused[#loc170, #loc171])
#loc264 = loc(fused[#loc173, #loc169])
#loc265 = loc(fused[#loc179, #loc177])
#loc266 = loc(fused[#loc180, #loc181])
#loc267 = loc(fused[#loc182, #loc183])
#loc268 = loc(fused[#loc184, #loc181])
