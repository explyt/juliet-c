!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":167:10)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":167:14)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":167:20)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":167:32)
#loc268 = loc(fused[#loc173, #loc174])
#loc269 = loc(fused[#loc175, #loc176])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.return %2 : !s32i loc(#loc190)
  } loc(#loc189)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc191)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc192)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc17)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc198)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc199)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc199)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc200)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc201)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc26)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc202)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc29)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc30)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc29)
    cir.br ^bb7 loc(#loc25)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc10)
  } loc(#loc193)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc32)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %2 : !s32i loc(#loc205)
  } loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc206)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc46)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc211)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc213)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc51)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc213)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc214)
    cir.br ^bb3 loc(#loc45)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc45)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc55)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc216)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc217)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb8 loc(#loc58)
  ^bb7:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc61)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc61)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc51)
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc54)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc39)
  } loc(#loc207)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc70)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc222)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc224)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc75)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc224)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc225)
    cir.br ^bb3 loc(#loc69)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc226)
  ^bb5:  // pred: ^bb4
    %7 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc79)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc227)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc228)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc82)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc82)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc75)
    cir.br ^bb7 loc(#loc78)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc78)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc63)
  } loc(#loc218)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc229)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc230)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc95)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc235)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb8 loc(#loc98)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc103)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc237)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc238)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc102)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc239)
    cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc240)
    cir.br ^bb4 loc(#loc241)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc110)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc242)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc115)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc113)
    cir.br ^bb6 loc(#loc109)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc94)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc244)
  ^bb10:  // pred: ^bb9
    %19 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc118)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc245)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc246)
  ^bb11:  // pred: ^bb10
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc121)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc122)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc122)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc121)
    cir.br ^bb12 loc(#loc117)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc117)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc88)
  } loc(#loc231)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc131)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc251)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc134)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc135)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc253)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc254)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc134)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc255)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc256)
    cir.br ^bb3 loc(#loc257)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc142)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc143)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc258)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc259)
  ^bb4:  // pred: ^bb3
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc145)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc147)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc145)
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc130)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc130)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc260)
  ^bb9:  // pred: ^bb8
    %17 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc150)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc261)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc262)
  ^bb10:  // pred: ^bb9
    %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc154)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc154)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc153)
    cir.br ^bb11 loc(#loc149)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc124)
  } loc(#loc247)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_084goodEv() extra(#fn_attr) {
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodB2G1Ev() : () -> () loc(#loc157)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodB2G2Ev() : () -> () loc(#loc158)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodG2B1Ev() : () -> () loc(#loc159)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08L8goodG2B2Ev() : () -> () loc(#loc160)
    cir.return loc(#loc156)
  } loc(#loc263)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc265)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc170)
  cir.func @main(%arg0: !s32i loc(fused[#loc173, #loc174]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc175, #loc176])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc178)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc179)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc179)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc180)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc167)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_084goodEv() : () -> () loc(#loc182)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc168)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc169)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_083badEv() : () -> () loc(#loc185)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc187)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %15 : !s32i loc(#loc270)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":23:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":26:1)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":25:12)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":25:5)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":38:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":54:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":40:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":40:15)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":42:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":42:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":43:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":47:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":43:8)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":43:26)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":44:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":46:16)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":46:20)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":38:6)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":46:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":48:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":53:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":48:8)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":48:26)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":49:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":52:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":52:14)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":28:1)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":31:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":30:12)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":30:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":74:19)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":61:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":81:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":63:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":63:15)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":65:12)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":65:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":66:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":70:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":66:8)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":66:26)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":67:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":69:16)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":69:20)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":61:13)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":69:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":71:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":80:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":71:8)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":71:27)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":72:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":75:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":77:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":74:9)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":79:16)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":84:1)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":99:1)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":86:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":86:15)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":88:12)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":88:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":89:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":93:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":89:8)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":89:26)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":90:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":92:16)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":92:20)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":84:13)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":92:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":94:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":98:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":94:8)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":94:26)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":95:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":97:16)
#loc83 = loc("/usr/include/stdlib.h":672:1)
#loc84 = loc("/usr/include/stdlib.h":672:45)
#loc85 = loc("/usr/include/stdlib.h":756:1)
#loc86 = loc("/usr/include/stdlib.h":756:70)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":102:1)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":124:1)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":104:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":104:15)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":106:12)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":106:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":107:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":117:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":107:8)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":107:27)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":108:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":111:5)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":113:5)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":110:19)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":110:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":115:27)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":115:34)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":115:38)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":115:52)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":115:53)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":115:9)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:9)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:37)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:13)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:21)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:27)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:28)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:34)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":116:33)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":118:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":123:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":118:8)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":118:26)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":119:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":122:9)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":122:14)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":127:1)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":144:1)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":129:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":129:15)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":131:12)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":131:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":132:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":137:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":132:8)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":132:26)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":133:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":135:27)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":135:34)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":135:38)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":135:52)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":135:53)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":135:9)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:9)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:37)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:13)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:21)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:27)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:28)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:34)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":136:33)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":138:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":143:5)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":138:8)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":138:26)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":139:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":142:9)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":142:14)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":146:1)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":152:1)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":148:5)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":149:5)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":150:5)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":151:5)
#loc161 = loc("/usr/include/stdlib.h":575:1)
#loc162 = loc("/usr/include/stdlib.h":575:41)
#loc163 = loc("/usr/include/time.h":76:1)
#loc164 = loc("/usr/include/time.h":76:38)
#loc165 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":172:15)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":174:15)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":177:15)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":179:15)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":167:1)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":182:1)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":168:1)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":170:27)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":170:22)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":170:5)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":172:5)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":173:5)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":174:5)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":177:5)
#loc185 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":178:5)
#loc186 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":179:5)
#loc187 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":181:12)
#loc188 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_08.cpp":181:5)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc4, #loc3])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc9, #loc10])
#loc194 = loc(fused[#loc11, #loc12])
#loc195 = loc(fused[#loc14, #loc13])
#loc196 = loc(fused[#loc15, #loc16])
#loc197 = loc(fused[#loc17, #loc18])
#loc198 = loc(fused[#loc19, #loc16])
#loc199 = loc(fused[#loc20, #loc21])
#loc200 = loc(fused[#loc23, #loc21])
#loc201 = loc(fused[#loc24, #loc25])
#loc202 = loc(fused[#loc26, #loc27])
#loc203 = loc(fused[#loc28, #loc25])
#loc204 = loc(fused[#loc31, #loc32])
#loc205 = loc(fused[#loc34, #loc33])
#loc206 = loc(fused[#loc36, #loc37])
#loc207 = loc(fused[#loc38, #loc39])
#loc208 = loc(fused[#loc40, #loc41])
#loc209 = loc(fused[#loc43, #loc42])
#loc210 = loc(fused[#loc44, #loc45])
#loc211 = loc(fused[#loc46, #loc47])
#loc212 = loc(fused[#loc48, #loc45])
#loc213 = loc(fused[#loc49, #loc50])
#loc214 = loc(fused[#loc52, #loc50])
#loc215 = loc(fused[#loc53, #loc54])
#loc216 = loc(fused[#loc55, #loc56])
#loc217 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc218 = loc(fused[#loc62, #loc63])
#loc219 = loc(fused[#loc64, #loc65])
#loc220 = loc(fused[#loc67, #loc66])
#loc221 = loc(fused[#loc68, #loc69])
#loc222 = loc(fused[#loc70, #loc71])
#loc223 = loc(fused[#loc72, #loc69])
#loc224 = loc(fused[#loc73, #loc74])
#loc225 = loc(fused[#loc76, #loc74])
#loc226 = loc(fused[#loc77, #loc78])
#loc227 = loc(fused[#loc79, #loc80])
#loc228 = loc(fused[#loc81, #loc78])
#loc229 = loc(fused[#loc83, #loc84])
#loc230 = loc(fused[#loc85, #loc86])
#loc231 = loc(fused[#loc87, #loc88])
#loc232 = loc(fused[#loc89, #loc90])
#loc233 = loc(fused[#loc92, #loc91])
#loc234 = loc(fused[#loc93, #loc94])
#loc235 = loc(fused[#loc95, #loc96])
#loc236 = loc(fused[#loc97, #loc98, #loc99, #loc94])
#loc237 = loc(fused[#loc104, #loc105])
#loc238 = loc(fused[#loc103, #loc105])
#loc239 = loc(fused[#loc102, #loc106])
#loc240 = loc(fused[#loc107, #loc106])
#loc241 = loc(fused[#loc108, #loc109])
#loc242 = loc(fused[#loc110, #loc111])
#loc243 = loc(fused[#loc112, #loc109])
#loc244 = loc(fused[#loc116, #loc117])
#loc245 = loc(fused[#loc118, #loc119])
#loc246 = loc(fused[#loc120, #loc117])
#loc247 = loc(fused[#loc123, #loc124])
#loc248 = loc(fused[#loc125, #loc126])
#loc249 = loc(fused[#loc128, #loc127])
#loc250 = loc(fused[#loc129, #loc130])
#loc251 = loc(fused[#loc131, #loc132])
#loc252 = loc(fused[#loc133, #loc130])
#loc253 = loc(fused[#loc136, #loc137])
#loc254 = loc(fused[#loc135, #loc137])
#loc255 = loc(fused[#loc134, #loc138])
#loc256 = loc(fused[#loc139, #loc138])
#loc257 = loc(fused[#loc140, #loc141])
#loc258 = loc(fused[#loc142, #loc143])
#loc259 = loc(fused[#loc144, #loc141])
#loc260 = loc(fused[#loc148, #loc149])
#loc261 = loc(fused[#loc150, #loc151])
#loc262 = loc(fused[#loc152, #loc149])
#loc263 = loc(fused[#loc155, #loc156])
#loc264 = loc(fused[#loc161, #loc162])
#loc265 = loc(fused[#loc163, #loc164])
#loc266 = loc(fused[#loc165, #loc166])
#loc267 = loc(fused[#loc171, #loc172])
#loc270 = loc(fused[#loc188, #loc187])
