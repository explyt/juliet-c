!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc198)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc199)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc200)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc201)
  cir.func private  @printLongLongLine(!s64i) loc(#loc202)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_fscanf_multiply_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc205)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc21)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc200)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc201)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc201)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc21)
      } loc(#loc207)
    } loc(#loc206)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc25)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc29)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc30)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc30)
          %8 = cir.cmp(lt, %5, %7) : !s64i, !s32i loc(#loc211)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc31)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc213)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc35)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc34)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc34)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc35)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc213)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc36)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc37)
          } loc(#loc212)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc208)
    cir.return loc(#loc12)
  } loc(#loc203)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_fscanf_multiply_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc39)
  } loc(#loc214)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc219)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc220)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc58)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc223)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc62)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc64)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc200)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc226)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc226)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc64)
      } loc(#loc225)
    } loc(#loc224)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc219)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
      cir.if %4 {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc77)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc78)
          %8 = cir.cmp(lt, %5, %7) : !s64i, !s32i loc(#loc230)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc79)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc83)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc84)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc84)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc84)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc84)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc85)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc85)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc233)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !s32i loc(#loc234)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc87)
              cir.if %19 {
                %20 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc236)
                %21 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc93)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc92)
                %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc92)
                %24 = cir.binop(mul, %21, %23) nsw : !s64i loc(#loc93)
                cir.store %24, %20 : !s64i, !cir.ptr<!s64i> loc(#loc236)
                %25 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc94)
                cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc95)
              } else {
                %20 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc53)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc53)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc96)
              } loc(#loc235)
            } loc(#loc232)
          } loc(#loc231)
        } loc(#loc229)
      } loc(#loc228)
    } loc(#loc227)
    cir.return loc(#loc55)
  } loc(#loc221)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc101)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc239)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc105)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc107)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc200)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc242)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc242)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc107)
      } loc(#loc241)
    } loc(#loc240)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc113)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc117)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc118)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc118)
          %8 = cir.cmp(lt, %5, %7) : !s64i, !s32i loc(#loc246)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc119)
          cir.if %9 {
            cir.scope {
              %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc123)
              %11 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc124)
              %12 = cir.unary(minus, %11) : !s64i, !s64i loc(#loc124)
              %13 = cir.const #cir.int<1> : !s64i loc(#loc124)
              %14 = cir.binop(sub, %12, %13) nsw : !s64i loc(#loc124)
              %15 = cir.const #cir.int<2> : !s32i loc(#loc125)
              %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc125)
              %17 = cir.binop(div, %14, %16) : !s64i loc(#loc249)
              %18 = cir.cmp(gt, %10, %17) : !s64i, !s32i loc(#loc250)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc127)
              cir.if %19 {
                %20 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc252)
                %21 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc133)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc132)
                %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc132)
                %24 = cir.binop(mul, %21, %23) nsw : !s64i loc(#loc133)
                cir.store %24, %20 : !s64i, !cir.ptr<!s64i> loc(#loc252)
                %25 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc134)
                cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc135)
              } else {
                %20 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc136)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc136)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc137)
              } loc(#loc251)
            } loc(#loc248)
          } loc(#loc247)
        } loc(#loc245)
      } loc(#loc244)
    } loc(#loc243)
    cir.return loc(#loc98)
  } loc(#loc237)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc142)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc255)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc219)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc146)
      cir.if %4 {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc150)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc150)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc151)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc152)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc153)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc153)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc258)
      } loc(#loc257)
    } loc(#loc256)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc157)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc161)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc162)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc162)
          %8 = cir.cmp(lt, %5, %7) : !s64i, !s32i loc(#loc262)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc163)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc264)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc167)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc166)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc166)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc167)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc264)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc168)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc169)
          } loc(#loc263)
        } loc(#loc261)
      } loc(#loc260)
    } loc(#loc259)
    cir.return loc(#loc139)
  } loc(#loc253)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc174)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc267)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc178)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc180)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc181)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc181)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc270)
      } loc(#loc269)
    } loc(#loc268)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc198)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc185)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc189)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc190)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc190)
          %8 = cir.cmp(lt, %5, %7) : !s64i, !s32i loc(#loc274)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc191)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc276)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc195)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc194)
            %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc194)
            %14 = cir.binop(mul, %11, %13) nsw : !s64i loc(#loc195)
            cir.store %14, %10 : !s64i, !cir.ptr<!s64i> loc(#loc276)
            %15 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc196)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc197)
          } loc(#loc275)
        } loc(#loc273)
      } loc(#loc272)
    } loc(#loc271)
    cir.return loc(#loc171)
  } loc(#loc265)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":24:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":24:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":36:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":36:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":29:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":47:1)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":31:5)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":31:13)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":32:12)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":32:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":33:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":37:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":33:8)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":34:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":36:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":36:17)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":38:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":46:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":38:8)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":39:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":40:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":45:9)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":40:12)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":40:19)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":40:17)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":41:9)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":43:13)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":43:37)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":43:30)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":44:31)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":44:13)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":161:1)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":167:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":163:5)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":163:14)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":164:5)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":164:14)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":165:5)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":165:14)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":166:5)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":166:14)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":25:1)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":25:26)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":66:19)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":80:27)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":54:1)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":84:1)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":56:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":56:13)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":57:12)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":57:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":58:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":62:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":58:8)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":59:5)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":61:9)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":61:17)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":61:24)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":61:28)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":63:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":83:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":63:8)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":64:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":67:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":69:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":66:9)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":70:9)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":82:9)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":70:12)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":70:19)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":70:17)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":71:9)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":73:13)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":81:13)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":73:17)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":73:25)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":73:35)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":73:36)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":73:22)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":74:13)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":77:13)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":79:13)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":75:17)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":75:41)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":75:34)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":76:35)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":76:17)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":80:17)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":87:1)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":112:1)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":89:5)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":89:13)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":90:12)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":90:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":91:5)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":95:5)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":91:8)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":92:5)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":94:9)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":94:17)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":94:24)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":94:28)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":96:5)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":111:5)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":96:8)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":97:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":98:9)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":110:9)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":98:12)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":98:19)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":98:17)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":99:9)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":101:13)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":109:13)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":101:17)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":101:25)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":101:35)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":101:36)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":101:22)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":102:13)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":105:13)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":107:13)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":103:17)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":103:41)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":103:34)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":104:35)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":104:17)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":108:27)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":108:17)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":115:1)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":138:1)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":117:5)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":117:13)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":118:12)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":118:5)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":119:5)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":128:5)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":119:8)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":120:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":123:5)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":125:5)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":122:19)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":122:9)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":127:17)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":127:16)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":127:9)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":129:5)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":137:5)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":129:8)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":130:5)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":131:9)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":136:9)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":131:12)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":131:19)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":131:17)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":132:9)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":134:13)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":134:37)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":134:30)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":135:31)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":135:13)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":141:1)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":159:1)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":143:5)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":143:13)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":144:12)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":144:5)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":145:5)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":149:5)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":145:8)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":146:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":148:17)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":148:16)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":148:9)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":150:5)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":158:5)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":150:8)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":151:5)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":152:9)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":157:9)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":152:12)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":152:19)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":152:17)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":153:9)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":155:13)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":155:37)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":155:30)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":156:31)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_05.c":156:13)
#loc198 = loc(fused[#loc1, #loc2])
#loc199 = loc(fused[#loc3, #loc4])
#loc200 = loc(fused[#loc5, #loc6])
#loc201 = loc(fused[#loc7, #loc8])
#loc202 = loc(fused[#loc9, #loc10])
#loc203 = loc(fused[#loc11, #loc12])
#loc204 = loc(fused[#loc13, #loc14])
#loc205 = loc(fused[#loc16, #loc15])
#loc206 = loc(fused[#loc17, #loc18])
#loc207 = loc(fused[#loc20, #loc18])
#loc208 = loc(fused[#loc23, #loc24])
#loc209 = loc(fused[#loc26, #loc24])
#loc210 = loc(fused[#loc27, #loc28])
#loc211 = loc(fused[#loc29, #loc30])
#loc212 = loc(fused[#loc32, #loc28])
#loc213 = loc(fused[#loc33, #loc34])
#loc214 = loc(fused[#loc38, #loc39])
#loc215 = loc(fused[#loc40, #loc41])
#loc216 = loc(fused[#loc42, #loc43])
#loc217 = loc(fused[#loc44, #loc45])
#loc218 = loc(fused[#loc46, #loc47])
#loc219 = loc(fused[#loc48, #loc49])
#loc220 = loc(fused[#loc50, #loc51])
#loc221 = loc(fused[#loc54, #loc55])
#loc222 = loc(fused[#loc56, #loc57])
#loc223 = loc(fused[#loc59, #loc58])
#loc224 = loc(fused[#loc60, #loc61])
#loc225 = loc(fused[#loc63, #loc61])
#loc226 = loc(fused[#loc66, #loc67])
#loc227 = loc(fused[#loc68, #loc69])
#loc228 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc229 = loc(fused[#loc75, #loc76])
#loc230 = loc(fused[#loc77, #loc78])
#loc231 = loc(fused[#loc80, #loc76])
#loc232 = loc(fused[#loc81, #loc82])
#loc233 = loc(fused[#loc84, #loc85])
#loc234 = loc(fused[#loc83, #loc86])
#loc235 = loc(fused[#loc88, #loc89, #loc90, #loc82])
#loc236 = loc(fused[#loc91, #loc92])
#loc237 = loc(fused[#loc97, #loc98])
#loc238 = loc(fused[#loc99, #loc100])
#loc239 = loc(fused[#loc102, #loc101])
#loc240 = loc(fused[#loc103, #loc104])
#loc241 = loc(fused[#loc106, #loc104])
#loc242 = loc(fused[#loc109, #loc110])
#loc243 = loc(fused[#loc111, #loc112])
#loc244 = loc(fused[#loc114, #loc112])
#loc245 = loc(fused[#loc115, #loc116])
#loc246 = loc(fused[#loc117, #loc118])
#loc247 = loc(fused[#loc120, #loc116])
#loc248 = loc(fused[#loc121, #loc122])
#loc249 = loc(fused[#loc124, #loc125])
#loc250 = loc(fused[#loc123, #loc126])
#loc251 = loc(fused[#loc128, #loc129, #loc130, #loc122])
#loc252 = loc(fused[#loc131, #loc132])
#loc253 = loc(fused[#loc138, #loc139])
#loc254 = loc(fused[#loc140, #loc141])
#loc255 = loc(fused[#loc143, #loc142])
#loc256 = loc(fused[#loc144, #loc145])
#loc257 = loc(fused[#loc147, #loc148, #loc149, #loc145])
#loc258 = loc(fused[#loc154, #loc152])
#loc259 = loc(fused[#loc155, #loc156])
#loc260 = loc(fused[#loc158, #loc156])
#loc261 = loc(fused[#loc159, #loc160])
#loc262 = loc(fused[#loc161, #loc162])
#loc263 = loc(fused[#loc164, #loc160])
#loc264 = loc(fused[#loc165, #loc166])
#loc265 = loc(fused[#loc170, #loc171])
#loc266 = loc(fused[#loc172, #loc173])
#loc267 = loc(fused[#loc175, #loc174])
#loc268 = loc(fused[#loc176, #loc177])
#loc269 = loc(fused[#loc179, #loc177])
#loc270 = loc(fused[#loc182, #loc180])
#loc271 = loc(fused[#loc183, #loc184])
#loc272 = loc(fused[#loc186, #loc184])
#loc273 = loc(fused[#loc187, #loc188])
#loc274 = loc(fused[#loc189, #loc190])
#loc275 = loc(fused[#loc192, #loc188])
#loc276 = loc(fused[#loc193, #loc194])
