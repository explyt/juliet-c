!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":21:76)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":21:92)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":55:80)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":55:96)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":101:10)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":101:14)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":101:20)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":101:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc176 = loc(fused[#loc7, #loc8])
#loc204 = loc(fused[#loc77, #loc78])
#loc225 = loc(fused[#loc133, #loc134])
#loc226 = loc(fused[#loc135, #loc136])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc173)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc174)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc177)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    cir.store %arg0, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc13)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc181)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc20)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb4 loc(#loc181)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc183)
    cir.brcond %8 ^bb5, ^bb9 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc184)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %10 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc35)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb4 loc(#loc181)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc17)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc36)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc37)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc38)
    %27 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc189)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc190)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.call @printStructLine(%31) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
    cir.br ^bb12 loc(#loc15)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc6)
  } loc(#loc175)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc192)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc59)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc60)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc60)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc196)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc197)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc201)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc70)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc72)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb3 loc(#loc66)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_badSink(%16) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc74)
    cir.return loc(#loc54)
  } loc(#loc193)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc77, #loc78])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc205)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc204)
    cir.store %arg0, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc83)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc208)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc209)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc90)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb4 loc(#loc209)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc93)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc211)
    cir.brcond %8 ^bb5, ^bb9 loc(#loc94)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // pred: ^bb5
    %9 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc97)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %10 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc103)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    cir.br ^bb4 loc(#loc209)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc89)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc87)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc104)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc105)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc106)
    %27 = cir.const #cir.int<8> : !u64i loc(#loc216)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc217)
    cir.libc.memmove %28 bytes from %24 to %22 : !cir.ptr<!void>, !u64i loc(#loc218)
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    cir.call @printStructLine(%31) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc114)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc115)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb12 loc(#loc85)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc76)
  } loc(#loc203)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc219)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc221)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc222)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc130)
  cir.func @main(%arg0: !s32i loc(fused[#loc133, #loc134]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc135, #loc136])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc226)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc132)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc137)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc138)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc139)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc140)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc127)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_good() : () -> () loc(#loc142)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc128)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc129)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_bad() : () -> () loc(#loc146)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc130)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc149)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    cir.return %17 : !s32i loc(#loc229)
  } loc(#loc224)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc232)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc158)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc233)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc234)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc235)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc238)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc239)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc168)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc170)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc168)
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41_goodG2BSink(%16) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc172)
    cir.return loc(#loc152)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":39:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":24:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":24:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":26:13)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":26:20)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":22:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":23:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":38:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":25:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":33:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":32:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:22)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:18)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":29:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":30:36)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":30:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":30:17)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":31:36)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":31:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":31:17)
#loc33 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:35)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":28:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:17)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:23)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:31)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:35)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:55)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":35:56)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":36:26)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":36:31)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":36:32)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":36:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":37:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":37:9)
#loc49 = loc("/usr/include/stdlib.h":672:1)
#loc50 = loc("/usr/include/stdlib.h":672:45)
#loc51 = loc("/usr/include/stdlib.h":756:1)
#loc52 = loc("/usr/include/stdlib.h":756:70)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":41:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":49:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":43:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":43:21)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":44:12)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":44:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":46:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":46:36)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":46:39)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":46:59)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":46:60)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":46:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:24)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:30)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":47:29)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":48:75)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":48:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":55:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":73:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":58:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":58:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":60:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":60:20)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":56:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":57:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":72:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":59:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":67:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":66:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:22)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:18)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:25)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:29)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:27)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":63:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":64:36)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":64:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":64:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":65:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":65:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":65:17)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:35)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":62:34)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:17)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:23)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:31)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:35)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:55)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":69:56)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":70:26)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":70:31)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":70:32)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":70:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":71:14)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":71:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":86:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":89:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":88:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":88:13)
#loc121 = loc("/usr/include/stdlib.h":575:1)
#loc122 = loc("/usr/include/stdlib.h":575:41)
#loc123 = loc("/usr/include/time.h":76:1)
#loc124 = loc("/usr/include/time.h":76:38)
#loc125 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":106:15)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":108:15)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":111:15)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":113:15)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":101:1)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":116:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":102:1)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":104:27)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":104:22)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":104:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":106:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":107:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":107:72)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":108:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":111:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":112:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":112:71)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":113:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":115:12)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":115:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":76:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":84:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":78:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":78:21)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":79:12)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":79:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":81:29)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":81:36)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":81:40)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":81:60)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":81:61)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":81:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:33)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:23)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:24)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:30)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":82:29)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":83:79)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_41.c":83:5)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc11, #loc12])
#loc179 = loc(fused[#loc14, #loc15])
#loc180 = loc(fused[#loc16, #loc17])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc21, #loc20])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc25, #loc19])
#loc185 = loc(fused[#loc28, #loc26])
#loc186 = loc(fused[#loc32, #loc30])
#loc187 = loc(fused[#loc35, #loc34])
#loc188 = loc(fused[#loc39, #loc40])
#loc189 = loc(fused[#loc38, #loc40])
#loc190 = loc(fused[#loc41, #loc42])
#loc191 = loc(fused[#loc49, #loc50])
#loc192 = loc(fused[#loc51, #loc52])
#loc193 = loc(fused[#loc53, #loc54])
#loc194 = loc(fused[#loc55, #loc56])
#loc195 = loc(fused[#loc58, #loc57])
#loc196 = loc(fused[#loc61, #loc62])
#loc197 = loc(fused[#loc60, #loc62])
#loc198 = loc(fused[#loc59, #loc63])
#loc199 = loc(fused[#loc64, #loc63])
#loc200 = loc(fused[#loc65, #loc66])
#loc201 = loc(fused[#loc67, #loc68])
#loc202 = loc(fused[#loc69, #loc66])
#loc203 = loc(fused[#loc75, #loc76])
#loc205 = loc(fused[#loc79, #loc80])
#loc206 = loc(fused[#loc81, #loc82])
#loc207 = loc(fused[#loc84, #loc85])
#loc208 = loc(fused[#loc86, #loc87])
#loc209 = loc(fused[#loc88, #loc89])
#loc210 = loc(fused[#loc91, #loc90])
#loc211 = loc(fused[#loc92, #loc93])
#loc212 = loc(fused[#loc95, #loc89])
#loc213 = loc(fused[#loc98, #loc96])
#loc214 = loc(fused[#loc101, #loc99])
#loc215 = loc(fused[#loc103, #loc102])
#loc216 = loc(fused[#loc107, #loc108])
#loc217 = loc(fused[#loc106, #loc108])
#loc218 = loc(fused[#loc109, #loc110])
#loc219 = loc(fused[#loc117, #loc118])
#loc220 = loc(fused[#loc119, #loc120])
#loc221 = loc(fused[#loc121, #loc122])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc125, #loc126])
#loc224 = loc(fused[#loc131, #loc132])
#loc227 = loc(fused[#loc142, #loc143])
#loc228 = loc(fused[#loc146, #loc147])
#loc229 = loc(fused[#loc150, #loc149])
#loc230 = loc(fused[#loc151, #loc152])
#loc231 = loc(fused[#loc153, #loc154])
#loc232 = loc(fused[#loc156, #loc155])
#loc233 = loc(fused[#loc159, #loc160])
#loc234 = loc(fused[#loc158, #loc160])
#loc235 = loc(fused[#loc157, #loc161])
#loc236 = loc(fused[#loc162, #loc161])
#loc237 = loc(fused[#loc163, #loc164])
#loc238 = loc(fused[#loc165, #loc166])
#loc239 = loc(fused[#loc167, #loc164])
