!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":29:21)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":29:27)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":73:26)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":73:32)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":118:26)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":118:32)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":158:25)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":158:31)
#loc229 = loc(fused[#loc16, #loc17])
#loc251 = loc(fused[#loc75, #loc76])
#loc271 = loc(fused[#loc136, #loc137])
#loc291 = loc(fused[#loc195, #loc196])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc222)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc223)
  cir.func private  @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc224)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc225)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc226)
  cir.func private  @printIntLine(!s32i) loc(#loc227)
  cir.func internal private  @badSink(%arg0: !cir.float loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc229)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc18)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc226)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc233)
          %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc27)
          %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc28)
          %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc28)
          %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc234)
          %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc234)
          cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc233)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc29)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc30)
        } loc(#loc232)
      } loc(#loc231)
    } loc(#loc230)
    cir.return loc(#loc15)
  } loc(#loc228)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc35)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc237)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc239)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc43)
        %7 = cir.const #cir.int<20> : !s32i loc(#loc44)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
        %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
        %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc241)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc48)
        cir.if %14 {
          %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc52)
          %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc53)
          %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc53)
          cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc243)
        } else {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        } loc(#loc242)
      } loc(#loc240)
    } loc(#loc238)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc226)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc59)
    cir.call @badSink(%4) : (!cir.float) -> () loc(#loc60)
    cir.return loc(#loc32)
  } loc(#loc235)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc62)
  } loc(#loc245)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc249)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc72)
  cir.func internal private  @goodB2G1Sink(%arg0: !cir.float loc(fused[#loc75, #loc76])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc251)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc77)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc249)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc80)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc84)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc87)
          %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc87)
          %6 = cir.fabs %5 : !cir.double loc(#loc87)
          %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc88)
          %8 = cir.cmp(gt, %6, %7) : !cir.double, !s32i loc(#loc255)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc90)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc257)
            %11 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc96)
            %12 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc97)
            %13 = cir.cast(floating, %12 : !cir.float), !cir.double loc(#loc97)
            %14 = cir.binop(div, %11, %13) : !cir.double loc(#loc258)
            %15 = cir.cast(float_to_int, %14 : !cir.double), !s32i loc(#loc258)
            cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc257)
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc99)
          } else {
            %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc72)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc72)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc100)
          } loc(#loc256)
        } loc(#loc254)
      } loc(#loc253)
    } loc(#loc252)
    cir.return loc(#loc74)
  } loc(#loc250)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc105)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc261)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc263)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc113)
        %7 = cir.const #cir.int<20> : !s32i loc(#loc114)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
        %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc116)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
        %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc265)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc118)
        cir.if %14 {
          %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc122)
          %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc123)
          %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc123)
          cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc267)
        } else {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc127)
        } loc(#loc266)
      } loc(#loc264)
    } loc(#loc262)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc249)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc130)
    cir.call @goodB2G1Sink(%4) : (!cir.float) -> () loc(#loc131)
    cir.return loc(#loc102)
  } loc(#loc259)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc269)
  cir.func internal private  @goodB2G2Sink(%arg0: !cir.float loc(fused[#loc136, #loc137])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc271)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc138)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc269)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc141)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc141)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc145)
          %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc145)
          %6 = cir.fabs %5 : !cir.double loc(#loc145)
          %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc146)
          %8 = cir.cmp(gt, %6, %7) : !cir.double, !s32i loc(#loc275)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc148)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc277)
            %11 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc154)
            %12 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc155)
            %13 = cir.cast(floating, %12 : !cir.float), !cir.double loc(#loc155)
            %14 = cir.binop(div, %11, %13) : !cir.double loc(#loc278)
            %15 = cir.cast(float_to_int, %14 : !cir.double), !s32i loc(#loc278)
            cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc277)
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc156)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc157)
          } else {
            %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc158)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc158)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc159)
          } loc(#loc276)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc272)
    cir.return loc(#loc135)
  } loc(#loc270)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc164)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc281)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc283)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc172)
        %7 = cir.const #cir.int<20> : !s32i loc(#loc173)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc223)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc174)
        %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc175)
        %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
        %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc285)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc177)
        cir.if %14 {
          %15 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc181)
          %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc182)
          %17 = cir.cast(floating, %16 : !cir.double), !cir.float loc(#loc182)
          cir.store %17, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc287)
        } else {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc185)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc185)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc186)
        } loc(#loc286)
      } loc(#loc284)
    } loc(#loc282)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc269)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc189)
    cir.call @goodB2G2Sink(%4) : (!cir.float) -> () loc(#loc190)
    cir.return loc(#loc161)
  } loc(#loc279)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc289)
  cir.func internal private  @goodG2BSink(%arg0: !cir.float loc(fused[#loc195, #loc196])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc291)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc197)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc289)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc200)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc200)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc295)
          %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc206)
          %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc207)
          %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc207)
          %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc296)
          %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc296)
          cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc209)
        } loc(#loc294)
      } loc(#loc293)
    } loc(#loc292)
    cir.return loc(#loc194)
  } loc(#loc290)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc214)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc299)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc216)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc300)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc289)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc220)
    cir.call @goodG2BSink(%5) : (!cir.float) -> () loc(#loc221)
    cir.return loc(#loc211)
  } loc(#loc297)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":56:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":27:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":27:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":29:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":39:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":30:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":31:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":38:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":31:8)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":32:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":33:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":37:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:13)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:44)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":35:40)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":36:26)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":36:13)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":41:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":61:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":43:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":43:11)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":45:12)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":45:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":46:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":58:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":47:9)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":47:41)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":57:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:19)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:32)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:49)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:59)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":49:56)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":50:9)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":53:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":55:9)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:32)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:27)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":52:43)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":56:13)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":59:17)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":59:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":60:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":60:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":181:1)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":186:1)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":183:5)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":183:14)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":184:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":184:14)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":185:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":185:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":68:1)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":68:29)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":78:19)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":90:23)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":73:1)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":93:1)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":74:1)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":75:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":92:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":75:8)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":76:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":79:5)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":81:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":78:9)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:9)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":91:9)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:17)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:25)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:12)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":83:23)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":84:9)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":87:9)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":89:9)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:13)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:44)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:32)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":85:40)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":86:26)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":86:13)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":90:13)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":95:1)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":115:1)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":97:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":97:11)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":99:12)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":99:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":100:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":112:5)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":101:9)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":101:41)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:9)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":111:9)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:19)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:32)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:49)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:59)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":103:56)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":104:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":107:9)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":109:9)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:32)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:27)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:13)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":106:43)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":110:23)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":110:13)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":113:22)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":113:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":114:18)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":114:5)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":69:1)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":69:29)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":118:1)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":133:1)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":119:1)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":120:5)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":132:5)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":120:8)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":121:5)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":131:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:17)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:25)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:12)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":123:23)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":124:9)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":127:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":129:9)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:13)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:44)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:32)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":125:40)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":126:26)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":126:13)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":130:23)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":130:13)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":135:1)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":155:1)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":137:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":137:11)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":139:12)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":139:5)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":140:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":152:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":141:9)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":141:41)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":151:9)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:19)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:32)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:49)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:13)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:59)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":143:56)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":144:9)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":147:9)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":149:9)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:32)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:27)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:13)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":146:43)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":150:23)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":150:13)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":153:22)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":153:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":154:18)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":154:5)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":70:1)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":70:28)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":158:1)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":168:1)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":159:1)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":160:5)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":167:5)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":160:8)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":161:5)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":162:9)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":166:9)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:13)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:44)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:32)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":164:40)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":165:26)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":165:13)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":170:1)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":179:1)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":172:5)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":172:11)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":174:12)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":174:5)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":176:12)
#loc217 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":176:5)
#loc218 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":177:21)
#loc219 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":177:5)
#loc220 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":178:17)
#loc221 = loc("CWE369_Divide_by_Zero__float_fgets_21.c":178:5)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc10, #loc11])
#loc227 = loc(fused[#loc12, #loc13])
#loc228 = loc(fused[#loc14, #loc15])
#loc230 = loc(fused[#loc19, #loc20])
#loc231 = loc(fused[#loc22, #loc20])
#loc232 = loc(fused[#loc23, #loc24])
#loc233 = loc(fused[#loc25, #loc26])
#loc234 = loc(fused[#loc27, #loc28])
#loc235 = loc(fused[#loc31, #loc32])
#loc236 = loc(fused[#loc33, #loc34])
#loc237 = loc(fused[#loc36, #loc35])
#loc238 = loc(fused[#loc37, #loc38])
#loc239 = loc(fused[#loc39, #loc40])
#loc240 = loc(fused[#loc41, #loc42])
#loc241 = loc(fused[#loc46, #loc47])
#loc242 = loc(fused[#loc49, #loc50, #loc51, #loc42])
#loc243 = loc(fused[#loc54, #loc55])
#loc244 = loc(fused[#loc58, #loc57])
#loc245 = loc(fused[#loc61, #loc62])
#loc246 = loc(fused[#loc63, #loc64])
#loc247 = loc(fused[#loc65, #loc66])
#loc248 = loc(fused[#loc67, #loc68])
#loc249 = loc(fused[#loc69, #loc70])
#loc250 = loc(fused[#loc73, #loc74])
#loc252 = loc(fused[#loc78, #loc79])
#loc253 = loc(fused[#loc81, #loc82, #loc83, #loc79])
#loc254 = loc(fused[#loc85, #loc86])
#loc255 = loc(fused[#loc89, #loc88])
#loc256 = loc(fused[#loc91, #loc92, #loc93, #loc86])
#loc257 = loc(fused[#loc94, #loc95])
#loc258 = loc(fused[#loc96, #loc97])
#loc259 = loc(fused[#loc101, #loc102])
#loc260 = loc(fused[#loc103, #loc104])
#loc261 = loc(fused[#loc106, #loc105])
#loc262 = loc(fused[#loc107, #loc108])
#loc263 = loc(fused[#loc109, #loc110])
#loc264 = loc(fused[#loc111, #loc112])
#loc265 = loc(fused[#loc116, #loc117])
#loc266 = loc(fused[#loc119, #loc120, #loc121, #loc112])
#loc267 = loc(fused[#loc124, #loc125])
#loc268 = loc(fused[#loc129, #loc128])
#loc269 = loc(fused[#loc132, #loc133])
#loc270 = loc(fused[#loc134, #loc135])
#loc272 = loc(fused[#loc139, #loc140])
#loc273 = loc(fused[#loc142, #loc140])
#loc274 = loc(fused[#loc143, #loc144])
#loc275 = loc(fused[#loc147, #loc146])
#loc276 = loc(fused[#loc149, #loc150, #loc151, #loc144])
#loc277 = loc(fused[#loc152, #loc153])
#loc278 = loc(fused[#loc154, #loc155])
#loc279 = loc(fused[#loc160, #loc161])
#loc280 = loc(fused[#loc162, #loc163])
#loc281 = loc(fused[#loc165, #loc164])
#loc282 = loc(fused[#loc166, #loc167])
#loc283 = loc(fused[#loc168, #loc169])
#loc284 = loc(fused[#loc170, #loc171])
#loc285 = loc(fused[#loc175, #loc176])
#loc286 = loc(fused[#loc178, #loc179, #loc180, #loc171])
#loc287 = loc(fused[#loc183, #loc184])
#loc288 = loc(fused[#loc188, #loc187])
#loc289 = loc(fused[#loc191, #loc192])
#loc290 = loc(fused[#loc193, #loc194])
#loc292 = loc(fused[#loc198, #loc199])
#loc293 = loc(fused[#loc201, #loc199])
#loc294 = loc(fused[#loc202, #loc203])
#loc295 = loc(fused[#loc204, #loc205])
#loc296 = loc(fused[#loc206, #loc207])
#loc297 = loc(fused[#loc210, #loc211])
#loc298 = loc(fused[#loc212, #loc213])
#loc299 = loc(fused[#loc215, #loc214])
#loc300 = loc(fused[#loc217, #loc216])
#loc301 = loc(fused[#loc219, #loc218])
