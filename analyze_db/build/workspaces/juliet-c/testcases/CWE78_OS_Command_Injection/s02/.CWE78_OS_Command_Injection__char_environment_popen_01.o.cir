!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_popen_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc91)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_popen_01_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc92)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc14)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc97)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_popen_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc92)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_popen_01_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc102)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc103)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc29)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc29)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc102)
      %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
      %11 = cir.call @getenv(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
      cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
        %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc105)
        cir.if %15 {
          %16 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc37)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc39)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc40)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc42)
          %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc107)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc44)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc108)
          %28 = cir.call @strncat(%19, %20, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
        } loc(#loc106)
      } loc(#loc104)
    } loc(#loc101)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc110)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc14)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc14)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc50)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc111)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc113)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc59)
        } loc(#loc114)
      } loc(#loc112)
    } loc(#loc109)
    cir.return loc(#loc18)
  } loc(#loc98)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_popen_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc115)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc91)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc73)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc122)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc80)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc80)
      %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc81)
      cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc123)
      cir.scope {
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc87)
        %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc125)
        cir.if %17 {
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
        } loc(#loc126)
      } loc(#loc124)
    } loc(#loc121)
    cir.return loc(#loc68)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_popen_01.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":82:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":82:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":50:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":50:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdlib.h":773:1)
#loc8 = loc("/usr/include/stdlib.h":773:50)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":55:37)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("/usr/include/stdio.h":903:1)
#loc13 = loc("/usr/include/stdio.h":904:3)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":66:28)
#loc15 = loc("/usr/include/stdio.h":897:1)
#loc16 = loc("/usr/include/stdio.h":897:36)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":47:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":72:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":49:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":49:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":51:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":51:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":52:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":62:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":54:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":54:37)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":55:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":55:49)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":54:26)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":54:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":55:30)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":57:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":61:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":57:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":57:28)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":58:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:21)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:26)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:25)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:35)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:48)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:52)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":60:60)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":63:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":71:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":64:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":64:15)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":66:22)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":66:16)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":66:9)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":66:31)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":67:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":70:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":67:13)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":67:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":68:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":69:20)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":69:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":97:1)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":100:1)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":99:5)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":99:13)
#loc64 = loc("/usr/include/string.h":149:1)
#loc65 = loc("/usr/include/string.h":150:14)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":85:18)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":79:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":95:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":81:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":81:12)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":83:12)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":83:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":85:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":85:12)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":86:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":94:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":87:9)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":87:15)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":89:22)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":89:28)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":89:16)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":89:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":89:31)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":90:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":93:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":90:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":90:21)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":91:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":92:20)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_popen_01.c":92:13)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc17, #loc18])
#loc99 = loc(fused[#loc19, #loc20])
#loc100 = loc(fused[#loc22, #loc21])
#loc101 = loc(fused[#loc23, #loc24])
#loc102 = loc(fused[#loc25, #loc26])
#loc103 = loc(fused[#loc27, #loc28])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc34, #loc35])
#loc106 = loc(fused[#loc36, #loc33])
#loc107 = loc(fused[#loc42, #loc43])
#loc108 = loc(fused[#loc42, #loc44])
#loc109 = loc(fused[#loc45, #loc46])
#loc110 = loc(fused[#loc47, #loc48])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc55, #loc56])
#loc114 = loc(fused[#loc57, #loc54])
#loc115 = loc(fused[#loc60, #loc61])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc64, #loc65])
#loc118 = loc(fused[#loc67, #loc68])
#loc119 = loc(fused[#loc69, #loc70])
#loc120 = loc(fused[#loc72, #loc71])
#loc121 = loc(fused[#loc75, #loc76])
#loc122 = loc(fused[#loc77, #loc78])
#loc123 = loc(fused[#loc82, #loc83])
#loc124 = loc(fused[#loc84, #loc85])
#loc125 = loc(fused[#loc86, #loc87])
#loc126 = loc(fused[#loc88, #loc85])
