!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE843_Type_Confusion__char_45_badData = #cir.ptr<null> : !cir.ptr<!void> {alignment = 8 : i64} loc(#loc59)
  cir.func no_proto @CWE843_Type_Confusion__char_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc9)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc63)
    cir.br ^bb1 loc(#loc64)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<97> : !s32i loc(#loc6)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc6)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc61)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    cir.store %5, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc66)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc16)
    %7 = cir.get_global @CWE843_Type_Confusion__char_45_badData : !cir.ptr<!cir.ptr<!void>> loc(#loc59)
    cir.store %6, %7 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc67)
    %8 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc68)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc4)
  } loc(#loc60)
  cir.func no_proto @CWE843_Type_Confusion__char_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc70)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc69)
  cir.func private @printIntLine(!s32i) loc(#loc71)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc73)
    %1 = cir.get_global @CWE843_Type_Confusion__char_45_badData : !cir.ptr<!cir.ptr<!void>> loc(#loc59)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc29)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc73)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc30)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc32)
    cir.return loc(#loc27)
  } loc(#loc72)
  cir.global "private" internal dsolocal @CWE843_Type_Confusion__char_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!void> {alignment = 8 : i64} loc(#loc74)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc78)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<8> : !s32i loc(#loc38)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    %4 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc80)
    cir.store %4, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc81)
    cir.br ^bb2 loc(#loc44)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc48)
    %6 = cir.get_global @CWE843_Type_Confusion__char_45_goodG2BData : !cir.ptr<!cir.ptr<!void>> loc(#loc74)
    cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc82)
    %7 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc83)
    cir.call %7() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc36)
  } loc(#loc75)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc85)
    %1 = cir.get_global @CWE843_Type_Confusion__char_45_goodG2BData : !cir.ptr<!cir.ptr<!void>> loc(#loc74)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc55)
    cir.store %2, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc85)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc56)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc58)
    cir.return loc(#loc53)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_45.c":0:0)
#loc1 = loc("CWE843_Type_Confusion__char_45.c":19:1)
#loc2 = loc("CWE843_Type_Confusion__char_45.c":19:15)
#loc3 = loc("CWE843_Type_Confusion__char_45.c":31:1)
#loc4 = loc("CWE843_Type_Confusion__char_45.c":43:1)
#loc5 = loc("CWE843_Type_Confusion__char_45.c":38:9)
#loc6 = loc("CWE843_Type_Confusion__char_45.c":38:27)
#loc7 = loc("CWE843_Type_Confusion__char_45.c":33:5)
#loc8 = loc("CWE843_Type_Confusion__char_45.c":33:12)
#loc9 = loc("CWE843_Type_Confusion__char_45.c":35:12)
#loc10 = loc("CWE843_Type_Confusion__char_45.c":35:5)
#loc11 = loc("CWE843_Type_Confusion__char_45.c":36:5)
#loc12 = loc("CWE843_Type_Confusion__char_45.c":40:5)
#loc13 = loc("CWE843_Type_Confusion__char_45.c":39:16)
#loc14 = loc("CWE843_Type_Confusion__char_45.c":39:17)
#loc15 = loc("CWE843_Type_Confusion__char_45.c":39:9)
#loc16 = loc("CWE843_Type_Confusion__char_45.c":41:46)
#loc17 = loc("CWE843_Type_Confusion__char_45.c":41:5)
#loc18 = loc("CWE843_Type_Confusion__char_45.c":42:5)
#loc19 = loc("CWE843_Type_Confusion__char_45.c":42:13)
#loc20 = loc("CWE843_Type_Confusion__char_45.c":71:1)
#loc21 = loc("CWE843_Type_Confusion__char_45.c":74:1)
#loc22 = loc("CWE843_Type_Confusion__char_45.c":73:5)
#loc23 = loc("CWE843_Type_Confusion__char_45.c":73:13)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc26 = loc("CWE843_Type_Confusion__char_45.c":24:1)
#loc27 = loc("CWE843_Type_Confusion__char_45.c":29:1)
#loc28 = loc("CWE843_Type_Confusion__char_45.c":26:5)
#loc29 = loc("CWE843_Type_Confusion__char_45.c":26:19)
#loc30 = loc("CWE843_Type_Confusion__char_45.c":28:26)
#loc31 = loc("CWE843_Type_Confusion__char_45.c":28:18)
#loc32 = loc("CWE843_Type_Confusion__char_45.c":28:5)
#loc33 = loc("CWE843_Type_Confusion__char_45.c":20:1)
#loc34 = loc("CWE843_Type_Confusion__char_45.c":20:15)
#loc35 = loc("CWE843_Type_Confusion__char_45.c":57:1)
#loc36 = loc("CWE843_Type_Confusion__char_45.c":69:1)
#loc37 = loc("CWE843_Type_Confusion__char_45.c":64:9)
#loc38 = loc("CWE843_Type_Confusion__char_45.c":64:25)
#loc39 = loc("CWE843_Type_Confusion__char_45.c":59:5)
#loc40 = loc("CWE843_Type_Confusion__char_45.c":59:12)
#loc41 = loc("CWE843_Type_Confusion__char_45.c":61:12)
#loc42 = loc("CWE843_Type_Confusion__char_45.c":61:5)
#loc43 = loc("CWE843_Type_Confusion__char_45.c":62:5)
#loc44 = loc("CWE843_Type_Confusion__char_45.c":66:5)
#loc45 = loc("CWE843_Type_Confusion__char_45.c":65:16)
#loc46 = loc("CWE843_Type_Confusion__char_45.c":65:17)
#loc47 = loc("CWE843_Type_Confusion__char_45.c":65:9)
#loc48 = loc("CWE843_Type_Confusion__char_45.c":67:50)
#loc49 = loc("CWE843_Type_Confusion__char_45.c":67:5)
#loc50 = loc("CWE843_Type_Confusion__char_45.c":68:5)
#loc51 = loc("CWE843_Type_Confusion__char_45.c":68:17)
#loc52 = loc("CWE843_Type_Confusion__char_45.c":50:1)
#loc53 = loc("CWE843_Type_Confusion__char_45.c":55:1)
#loc54 = loc("CWE843_Type_Confusion__char_45.c":52:5)
#loc55 = loc("CWE843_Type_Confusion__char_45.c":52:19)
#loc56 = loc("CWE843_Type_Confusion__char_45.c":54:26)
#loc57 = loc("CWE843_Type_Confusion__char_45.c":54:18)
#loc58 = loc("CWE843_Type_Confusion__char_45.c":54:5)
#loc59 = loc(fused[#loc1, #loc2])
#loc60 = loc(fused[#loc3, #loc4])
#loc61 = loc(fused[#loc5, #loc6])
#loc62 = loc(fused[#loc7, #loc8])
#loc63 = loc(fused[#loc10, #loc9])
#loc64 = loc(fused[#loc11, #loc12])
#loc65 = loc(fused[#loc13, #loc14])
#loc66 = loc(fused[#loc15, #loc14])
#loc67 = loc(fused[#loc17, #loc16])
#loc68 = loc(fused[#loc18, #loc19])
#loc69 = loc(fused[#loc20, #loc21])
#loc70 = loc(fused[#loc22, #loc23])
#loc71 = loc(fused[#loc24, #loc25])
#loc72 = loc(fused[#loc26, #loc27])
#loc73 = loc(fused[#loc28, #loc29])
#loc74 = loc(fused[#loc33, #loc34])
#loc75 = loc(fused[#loc35, #loc36])
#loc76 = loc(fused[#loc37, #loc38])
#loc77 = loc(fused[#loc39, #loc40])
#loc78 = loc(fused[#loc42, #loc41])
#loc79 = loc(fused[#loc43, #loc44])
#loc80 = loc(fused[#loc45, #loc46])
#loc81 = loc(fused[#loc47, #loc46])
#loc82 = loc(fused[#loc49, #loc48])
#loc83 = loc(fused[#loc50, #loc51])
#loc84 = loc(fused[#loc52, #loc53])
#loc85 = loc(fused[#loc54, #loc55])
