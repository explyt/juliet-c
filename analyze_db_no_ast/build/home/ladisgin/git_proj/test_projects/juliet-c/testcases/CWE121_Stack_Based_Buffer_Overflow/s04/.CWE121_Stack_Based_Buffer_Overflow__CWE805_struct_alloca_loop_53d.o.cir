!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":23:80)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":23:96)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":53:84)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":53:100)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc111 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc109)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc113)
      cir.scope {
        %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
        cir.scope {
          %3 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
          cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc117)
          cir.for : cond {
            %5 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc20)
            %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
            %8 = cir.cmp(lt, %5, %7) : !u64i, !s32i loc(#loc118)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc22)
            cir.condition(%9) loc(#loc22)
          } body {
            cir.scope {
              %5 = cir.const #cir.int<0> : !s32i loc(#loc24)
              %6 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc25)
              %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %8 = cir.ptr_stride(%7 : !cir.ptr<!ty__twoIntsStruct>, %6 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %5, %9 : !s32i, !cir.ptr<!s32i> loc(#loc120)
              %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
              %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc121)
            } loc(#loc119)
            cir.yield loc(#loc17)
          } step {
            %5 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %6 = cir.unary(inc, %5) : !u64i, !u64i loc(#loc33)
            cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc122)
            cir.yield loc(#loc116)
          } loc(#loc116)
        } loc(#loc116)
      } loc(#loc114)
      cir.scope {
        %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc124)
        cir.scope {
          %6 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc40)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc126)
          cir.for : cond {
            %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc43)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc43)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !s32i loc(#loc127)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc44)
            cir.condition(%12) loc(#loc44)
          } body {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
              %9 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %10 = cir.ptr_stride(%8 : !cir.ptr<!ty__twoIntsStruct>, %9 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
              %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc49)
              %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
              cir.copy %13 to %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
            } loc(#loc128)
            cir.yield loc(#loc39)
          } step {
            %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
            %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc52)
            cir.store %9, %2 : !u64i, !cir.ptr<!u64i> loc(#loc129)
            cir.yield loc(#loc125)
          } loc(#loc125)
        } loc(#loc125)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
        cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc56)
      } loc(#loc123)
    } loc(#loc112)
    cir.return loc(#loc4)
  } loc(#loc110)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc59, #loc60])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc61)
    cir.scope {
      %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc133)
      cir.scope {
        %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
        cir.scope {
          %3 = cir.const #cir.int<0> : !s32i loc(#loc72)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc72)
          cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc137)
          cir.for : cond {
            %5 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %6 = cir.const #cir.int<100> : !s32i loc(#loc75)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc75)
            %8 = cir.cmp(lt, %5, %7) : !u64i, !s32i loc(#loc138)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc76)
            cir.condition(%9) loc(#loc76)
          } body {
            cir.scope {
              %5 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %6 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc79)
              %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
              %8 = cir.ptr_stride(%7 : !cir.ptr<!ty__twoIntsStruct>, %6 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
              %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %5, %9 : !s32i, !cir.ptr<!s32i> loc(#loc140)
              %10 = cir.const #cir.int<0> : !s32i loc(#loc81)
              %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc82)
              %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
              %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc141)
            } loc(#loc139)
            cir.yield loc(#loc71)
          } step {
            %5 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %6 = cir.unary(inc, %5) : !u64i, !u64i loc(#loc85)
            cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc142)
            cir.yield loc(#loc136)
          } loc(#loc136)
        } loc(#loc136)
      } loc(#loc134)
      cir.scope {
        %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
        cir.scope {
          %6 = cir.const #cir.int<0> : !s32i loc(#loc92)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc92)
          cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc146)
          cir.for : cond {
            %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc94)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc95)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc95)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !s32i loc(#loc147)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc96)
            cir.condition(%12) loc(#loc96)
          } body {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
              %9 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc99)
              %10 = cir.ptr_stride(%8 : !cir.ptr<!ty__twoIntsStruct>, %9 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
              %11 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc101)
              %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
              cir.copy %13 to %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
            } loc(#loc148)
            cir.yield loc(#loc91)
          } step {
            %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc104)
            cir.store %9, %2 : !u64i, !cir.ptr<!u64i> loc(#loc149)
            cir.yield loc(#loc145)
          } loc(#loc145)
        } loc(#loc145)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc106)
        %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
        cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc108)
      } loc(#loc143)
    } loc(#loc132)
    cir.return loc(#loc58)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":46:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":25:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":45:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":26:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":26:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":27:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":35:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":28:13)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":28:20)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":34:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:25)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:29)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":31:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":32:36)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":32:24)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":32:17)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":33:36)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":33:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":33:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:35)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":30:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":36:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":44:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":37:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":37:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":42:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:18)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:25)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:29)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:27)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":40:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":41:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":41:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":41:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":41:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":41:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":39:34)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":43:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":43:35)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":43:36)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":43:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":53:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":76:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":54:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":55:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":75:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":56:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":56:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":57:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":65:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":58:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":58:20)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":64:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:18)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:25)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:29)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:27)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":61:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":62:36)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":62:24)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":62:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":63:36)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":63:24)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":63:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:35)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":60:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":66:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":74:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":67:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":67:20)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":72:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:22)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:18)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:25)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:29)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":70:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":71:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":71:22)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":71:23)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":71:34)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":71:27)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:35)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":69:34)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":73:30)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":73:35)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":73:36)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_53d.c":73:13)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc8, #loc9])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc19, #loc18])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc23, #loc17])
#loc120 = loc(fused[#loc26, #loc24])
#loc121 = loc(fused[#loc30, #loc28])
#loc122 = loc(fused[#loc33, #loc32])
#loc123 = loc(fused[#loc34, #loc35])
#loc124 = loc(fused[#loc36, #loc37])
#loc125 = loc(fused[#loc38, #loc39])
#loc126 = loc(fused[#loc41, #loc40])
#loc127 = loc(fused[#loc42, #loc43])
#loc128 = loc(fused[#loc45, #loc39])
#loc129 = loc(fused[#loc52, #loc51])
#loc130 = loc(fused[#loc57, #loc58])
#loc132 = loc(fused[#loc62, #loc63])
#loc133 = loc(fused[#loc64, #loc65])
#loc134 = loc(fused[#loc66, #loc67])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc70, #loc71])
#loc137 = loc(fused[#loc73, #loc72])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc77, #loc71])
#loc140 = loc(fused[#loc80, #loc78])
#loc141 = loc(fused[#loc83, #loc81])
#loc142 = loc(fused[#loc85, #loc84])
#loc143 = loc(fused[#loc86, #loc87])
#loc144 = loc(fused[#loc88, #loc89])
#loc145 = loc(fused[#loc90, #loc91])
#loc146 = loc(fused[#loc93, #loc92])
#loc147 = loc(fused[#loc94, #loc95])
#loc148 = loc(fused[#loc97, #loc91])
#loc149 = loc(fused[#loc104, #loc103])
